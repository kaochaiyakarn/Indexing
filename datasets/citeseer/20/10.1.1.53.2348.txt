requirements specification exemplars page specification exemplars familiar software engineering researchers 
instance encountered known library lift problems seen published solutions 
exemplars may serve purposes drivers communication vehicles individual research advances establish research agendas compare contrast alternative approaches ultimately lead advances software development practices 
prevalence literature exemplars worth critical study 
consider purposes exemplars may serve explore incompatibilities inherent trying simultaneously serve 
researchers clear successfully handling exemplar demonstrates 
go examine exemplars specifications product requirements engineering requirements engineering process 
particular requirements requirements exemplars suggested ways obtaining exemplars discussed 
specification exemplars 
set standard exemplars widely accepted tool specification research 
exemplars variously creating refining model language method illustrating explaining model language method testing validating model language method occasion comparing models languages methods 
relatively small number exemplars appearing frequently literature lift library problems best known 
role specification exemplars research tool uncertain 
problems case studies 
hand specification exemplars seen comparable paradigmatic problems received attention computer science example dining philosophers dijkstra 
cases presentation entertaining incidental problem 
words goal person formulating presentation provide description problematic aspect computation concise transparent manner possible 
contrast specification exemplars intended level represent real world specification task case studies 
playing role presentation important underlying set concerns embodies 
debate software engineering research methodology 
debate driven hand strong movement empirical experimental approach software engineering research hand perception software engineering research proving particularly difficult transfer industrial application 
particularly relevant context review status purposes contribution specification exemplars 
follows consider major purposes specification exemplars serve section identify ramifications particularly suitability purpose may odds suitability section 
illustration claims summarize hand experience exemplars section 
address emerging shift attention specification expression requirements engineering ramifications employing exemplars realm section 
exemplar constructed expressly addressing concerns requirements engineering discussed section full details appendix steps improved exemplars requirements engineering research proposed 
requirements specification exemplars martin feather stephen fickas anthony finkelstein axel van lamsweerde requirements specification exemplars page purposes specification exemplars primary purposes specification exemplars advancing single research effort individual single research group promoting research understanding multiple researchers research groups contributing advancement software development practices 
subsections explore ramifications issues 
advancing single research effort accomplishing specification exemplar serve explain illustrate points research clear convincing manner 
exemplar set challenge addressing interesting aspect motivates new representation reasoning scheme 
resulting specification arguably superior possible trivial emerge specification provably consistent satisfactorily complete minimal uncontrolled redundancy overspecification support modular incremental construction reasoning meyer 
fulfill purpose exemplar require overly large investment time relative results yielded 
avoid need invest overly large amount time current set exemplars combine characteristics domain setting familiar computer science community text formatting self contained problem statement formulated sufficiently high level abstraction intuitive notions suffice library lending miniaturization problem sheer size description start points problem statement exemplar completion specification 
current set exemplars constructed small challenging 
specifications typically sufficient size demonstrate structuring schemes ii properties immediately obvious inspection allowing experimentation associated analysis techniques iii lie boundary accomplished independent tool support 
furthermore established exemplars contain experience suggests arguments attempt write formal specification 
researchers various aspects exemplars demonstrate strengths approaches hayes jones 
base exemplars easy construct plausible variants extensions goals researcher exemplar 
promoting research comparison understanding fulfill purpose exemplar act agent research direction focussing attention problematic specification issue facilitate comparison different specification techniques 
number reviews meetings papers round common exemplars 
collections lead valuable interchanges resulting proceedings widely cited 
dealing common exemplar different techniques allows respective strengths weaknesses various techniques highlighted respect wing 
example specific constraint may naturally captured language need hard coded property interest may easily proved formalism great difficulty possible problem original statement may easily detected technique 
implicit assumptions underlying design language emerge consequence 
widely specification exemplars purpose built scientific papers courses technical reports 
defined focus attention particular specification concern example temporal constraints central heating system explicit concurrency doctors surgery roman babb physical distribution mine pump kramer system structure patient monitoring stevens myers constantine complex data conference organization olle interacting constraints text formatting meyer 
areas concern proved excellent vehicles investigation approaches 
different approaches typically different sets strengths weaknesses kind efforts indicate different approaches combined yield hybrid respective strengths 
aspect appears problematic approaches suggests area worthy attention field 
exemplars designed avoid implementation bias amenable wide range research approaches favoring particular approach 
contributing advancement software devel requirements specification exemplars page opment practices fulfill purpose exemplar represent real world specification task combined upstream activities requirements elicitation negotiation downstream activities architectural design implementation fielding maintenance system specified 
exemplars considered immutable specifier best produce specification problem statement 
sense capture reality expect change world easily specified 
interferences purposes exemplars argue exemplar suited purpose necessarily suited purposes 
ramifications seeking fulfill purpose odds 
clear successfully completing specification exemplar demonstrates 
mistake overly strong claims success purpose automatically means success mistake overly critical failure achieve success purposes means value demonstrating success individual purpose 
exemplar satisfies purpose may satisfy purpose specification exemplar open accusation show specification technique class specification techniques particular advantage 
current exemplars may problem formulations strong biases mechanisms paradigms supported technique creators 
shared exemplars step comparison techniques extent led proper critical comparison open question 
scope exemplar driven comparisons limited symptoms strengths weaknesses causes specification product process 
notable exceptions include olle sol features languages associated methods analyzed compared simply solutions exemplar wing includes analysis selected specification schemes respect set ambiguities 
specification exemplars support comparison techniques tied general problem lack appropriate evaluation criteria 
providing specification standard exemplar existence specification language demonstrate 
determine specification language appropriate expressiveness deductive power development process efficiency 
appropriate criteria relevance exemplars regardless size complexity limited 
furthermore exhibit tendency promote exemplars best suited approaches 
successes emphasized failures 
research literature exceptions tend retrospective style papers produced reflect balzer zave 
exemplar satisfies purpose may satisfy purpose exemplars easily shared researchers field lack credibility representatives scale multi disciplinary nature software development 
standard specification exemplars show light limited ability specify complex systems 
current exemplars enable searching lamp post push find elegant formalisms areas existing expertise 
exemplars drawn computer science domains begs question validity broader arena software systems 
small scale problems easily mastered computer scientist give misleading impression specification tasks accomplished single analyst need take advice experts areas clients domain experts 
observed specification exemplars embody common mistaken assumption client domain expert analyst 
experience reverse case starting point specification necessarily clients saying want analyst saying possible 
order self contained exemplars generally provide stripped functional descriptions set constraints functional descriptions 
tend focus operational descriptions idealized systems kinds tricky exceptions ignored 
initial descriptions starting points exercises significantly 
means unnecessary detail inconsistency ambiguity overspecification requirements specification exemplars page removed 
analysts start statements full real world 
tidying tendency reduce specification task issue accurate representation translation 
diminishes role practices 
example elicitation required conflicts negotiation absent validation techniques reduced mere confirmations crafted correctness errors 
consequence tidying exemplars focuses attention product specification cost complex engineering process gave rise 
result specification accompanying rationale account method 
exemplars abstractions embedded composite systems require rich context implement 
actual problems exemplars supposed represent rarely solved realworld setting 
current exemplars lack detail people followed implementation associated embedded system 
specification exemplars downstream process design implementation testing maintenance actual fielded system clear avoid generalizing success specifying non embedded exemplars claim success specifying embedded problems benefit entire software lifecycle 
real world software development process involves far iteration evolution represented static exemplar 
practice specifications frequently modified understanding gained easy hard implement 
approximated having exemplar comprise just single problem statement series problems 
point computer science community invention problems choose focus 
look problems arise practice 
point argued potts suggests researchers industry laboratory 
research world produced proliferation languages little specific real world problems solved language solved language generally lack experimentation evaluation field tichy 
examples exemplars illustration general points commonly exemplars drawn different domains 
chosen hand experience working 
library fig holds description library exemplar 
observations advancing single research effort statement library problem exemplifies abstracted miniaturized nature exemplars 
problem perennial favorite quickly conveying aspects language approach tool set library problem illustration researcher concerned primarily specification database constraints library exemplar represents readily understood example borrowing system consider small library system transactions 
check copy book return copy book 

add copy book remove copy book library 

get list books particular author particular subject area 

find list books currently checked particular borrower 

find borrower checked particular copy book 
types users staff users ordinary 
transactions restricted staff users ordinary perform transaction find list books currently borrowed 
system satisfy constraints 
copies library available check checked 

copy book may available checked time 

borrower may pre defined number books checked time 
requirements specification exemplars page abstractly transactions processing plus history tracking system 
chosen aspects carried simulation testing prototyping 
library exemplar sets traps challenges confusion identity book copy book confusion readers physical library users automated system privacy concerns 
promoting research understanding community specification researchers problem focus problems distributed advance th international workshop specification design 
participants strongly encouraged address problems submissions published proceedings reflects emphasis 
wing studied specifications library problem reveal strengths weaknesses various approaches wing 
contributing advancement software development practices library exemplar far representative realworld specification play part realworld software development lifecycle library software 
check check activities libraries regarded solved problem real world librarians potts fickas shelf software packages available bookkeeping 
tackling exemplar beneficial conveying approach ideas indication utility approach 
way exemplar inspiration discover investigate real problems domain 
automated library systems fickas nagarajan gives different picture specification practice contrasted exemplar 
real world specification task designing entire library system involves rich non functional requirements particularly relating cost performance accuracy importance accorded system level organizational objectives centrality attempts establish feasibility projected system architectures envisaged scenarios mutability services required depending balance costs benefits prevalence system extension evolution 
source station top feeds packages time network binary tree consisting switches connected pipes 
terminal nodes binary tree destination bin 
package arrives source station intended destination bins determined 
package released pipe leading source station 
package reach designated destination bin switches network set direct package network correct bin 
packages move network gravity working friction steady movement packages guaranteed may bunch network impossible set switch properly passage bunched packages switch set package packages switch fear damaging packages 
new package destination differs immediately chance 
spite precautions packages may bunch mis routed wrong bin package router signal event 
limited amount information available package router effect desired behavior 
time arrival source station destination package may determined 
means determining locations packages network sensors placed entries exits switches entries bins detect passage packages unable determine identity 
sensors able recognize passage individual packages regardless 
source pipe switch bin package fig package router exemplar requirements specification exemplars page package router fig holds description package router exemplar 
observations advancing single research effort domain distribution physical objects controlling routing simple mechanism easy understand requiring little effort part specifier acquire domain knowledge 
exemplar demonstrate freedoms implementation concerns believed specification language exhibit ways transformation implementation address freedoms 
example specification switch setting mirror problem statement desired behavior direct package network correct bin stated contrast implementation compute set switches achieve behavior 
treatment problem mixed problem case study 
specific instances drawn problem illustrate general points approach addressed problem single case study 
specification problem london feather approximately pages length including comments large require thought organize readability remained size constructed manipulated hand 
challenge set exemplar classic specify destinations packages routed program switches achieve 
biggest example lies potentially unavoidable packages bunch movement 
completely satisfied treatment included specifications seen 
ways excellent exemplar purpose driving research demonstrating results 
course ready acceptance exemplar motivated suitability specification style established 
promoting research understanding community specification researchers purposes package router excellent exemplar illuminating meeting ifip working group see specifications people produced 
contributing advancement software development practices credibility lent problem virtue origin came representatives process control industry constructed serve small scale challenge judge potential contribution various methodologies 
presumably contains essence aspects problems face 
trying specify solution avoid accusation constructed exemplar serve purposes 
remains simplified small scale problem 
real world problem complex virtue intricate topology binary tree structure router simplicity unique path source destination having tolerate imperfect mechanisms sensors fail notice passage package especially packages bunched having design trade offs throughput accuracy 
summary vast gap specifying simple package router exemplar tackling scale problem say automated baggage distribution system new airport denver colorado system reported employ conveyor drives photo cells programmable logic controllers proved somewhat difficult get operating reliably 
aspect illustrated exemplar construction available capabilities control switches access information provided sensors requirements routing carefully crafted harmony 
fewer capabilities preclude implementation unnecessary 
clearly cut stating problem result careful 
swartout balzer observed went general point specifying want inevitably intertwined knowledge implemented swartout balzer 
implication specification exemplars expect involved ongoing cycle specification simply time specification perfectly crafted problem statement 
carried implementation sanitized purely software simulation routing attempt hook mechanism controlled movement physical packages 
faced task say tuning design lead better performance 
mechanical control problems software researchers granted access run experiments full scale machinery may feasible experiment requirements specification exemplars page scale models say example kramer magee finkelstein software control toy train system 
furthermore modify specification response change problem context case real development 
requirements exemplars observed shift attention researchers upstream concerns specification acquire negotiate evaluate alternative requirements emerge specification merely product requirements engineering process 
note specification produced explicit intermediary requirements implementation implementation represents implicit resolution requirements issues 
leads naturally question sort exemplars suitable supporting area applied 
step consider underlying objectives requirements engineering exemplars 
objectives particular requirements clearly requirements exemplars shares general specification exemplars objectives discussed 
particular exemplars test ability technique capture consistent complete unambiguous description require overly large investment time act agent research direction support comparison different techniques provide prelude step adjunct implementation fielding actual systems represent corresponding real world task 
requirements engineering encompasses broader range concerns 
specification product requirements process represents clear consistent agreement implemented 
get point requirements engineering address dealing wide variety aspects goals costs resources performance responsibilities priorities traceability reliability evolvability working multiple input sources media interviews observations system documentation knowledge domain similar systems gathering information multiple views stakeholders handling interfering inconsistent goals giving scope conflict detection resolution reasoning different automation alternatives reasoning interaction cooperation system environment reasoning partial incoherent descriptions working large complex application domains organizing vast amount concerns details exceptions coherent understandable manageable structure working context unforeseen changes 
obvious typical specification exemplars fail encompass concerns 
primarily specification exemplars pre solved bulk requirements issues static nature 
consider possible remedies focus case studies obtained industry design exemplars particularly suited incorporate requirements concerns speculations requirements exemplars may dynamic 
industrial case studies requirements approach adopted research groups obtain interesting case studies industry 
may guarantee realism exercise 
generally imposes task size tools required providing opportunities tool evaluation 
industrial case studies careful balance needs struck pay back provided exemplars need research reasonable time 
major obstacles stem organizational barriers problems working live project 
confidentiality concerns motivated security defence applications commercial advantage impede access requisite information impede sharing dissemination results 
systems evolutionary sense products result extension enhancement preexisting artifacts specified produced de novo requirements process spread long periods time 
software produced organizations organization process characterized large amount shared knowledge domain organizational practices 
access external researchers difficult 
result difficulties researchers tend projects completed deceased 
rely existing documentation organizations preserve rationale track elicitation process domain knowledge explicit limits visibility requirements specification exemplars page specification process 
obvious danger researchers forced familiar narrow track translating pre existing specification filtered previous passes specification process 
industrial case studies appear exhibit forest hiding tree syndrome forest repetitive details hiding trees interest 
taken mean industrial case studies bad misleading reveal researchers think characteristics problems interesting deep elegant norm reality people sea shallow problems 
taken impediments render infeasible rely industrial case studies source primary source requirements exemplars 
field continue employ self generated exemplars common vehicles research exchange 
possibility ask industry provide exemplars instance approach package router exemplar section 
approach problems identified people providing exemplars people demonstration disjoint 
may lead fielding exemplars actual brings concerns 
designed requirements exemplars meeting scheduler example requirements exemplars exhibit messy nature real world requirements unique clean neat solution evident 
meeting scheduler exemplar elaborated van lamsweerde darimont massonet attempt move world van lamsweerde 
builds early attempts provide improved exemplars example swiss system van 
starting meeting scheduler exemplar description appendix 
supposition cut wholly inadequate produce useful implementation 
argument existing exemplars new 
separates exemplar description software environment requirements assumptions parts areas requiring elicitation example typically vague requirements form possible may small fast reliable conflicts interfering objectives need resolved reasonable compromises large space alternatives negotiated specification process statement changes variants extensions ability expectation implementation produced validated 
exemplar exhibits objectives desire requirements exemplars arises real problem domain expertise accessible covers interesting specification issues example complex concurrency distribution aspects real time performance constraints non functional requirements privacy usability flexibility optimization requirements time answers criticisms implementable enormous implementation resources forces address requirements engineering concerns addressed representative interesting set distributed groupware systems 
downside reality simplification real world task formed past experiences organizing variety meetings gone earliest stages requirements engineering 
note roles analyst domain expert client served person omitting inter personal communication problems 
dynamic requirements exemplars specification exemplars highly static nature frozen description provided specifier proceeds develop specification need interaction problem provider elicit refine question aspects 
dynamic exemplars needed address concerns particular requirements 
suggest steps taken direction 
provide multiple aspects problem statement incremental non monotonic fashion specifier 
relatively straightforward provide textual changes fed appropriate point 
envisage generation exemplars static text descriptions games unfold requirements specification exemplars page actions participants variety interactive presentation media interview video originals documentation 

insist results include specification traceability back requirements record process followed attain product 

encourage complementary efforts different participants multiple perspectives address different aspects problem way efforts combined 
characteristics specification exemplars researchers tend independently direct competition 
clear breadth concerns encompassed requirements researcher single research team expected solve problems 
need researchers tools techniques available 
currently approach studies meeting scheduler 
loose collaboration pursuing parallel themes formalizing requirements product process accommodating multiple viewpoints monitoring run time satisfaction requirements exploring issues negotiation compromise 
analysis set primarily critical 
objective negative question advances development specification techniques 
arguing greater degree methodological part software engineering researchers 
self consciousness particularly important attempt migrate related different field requirements engineering 
shared exemplars conducive promoting progress common understanding comparison languages methods tools 
need concentrate sharing just understanding 
crucial software engineering assess apply products research research available form assess apply 
dijkstra dijkstra hierarchical ordering sequential processes acta informatica pp 

balzer balzer year perspective automatic programming ieee trans 
software engineering se pp 

fickas nagarajan fickas nagarajan critiquing software specifications ieee software nov pp 

hayes hayes specification case studies 
nd edition 
prentice hall 
jones jones shaw case studies systematic software development 
prentice hall 
kramer kramer magee sloman conic integrated approach distributed computer control systems iee proceedings vol 
pt pp 

kramer magee finkelstein kramer magee finkelstein constructive approach design distributed systems proc 
th international conference distributed computing systems ieee pp 

london feather london feather implementing specification freedoms rich waters eds readings artificial intelligence software engineering morgan kaufmann pp 
problem set fourth international workshop software specification design proc 
th international workshop software specification design ieee cs press pp 
ix 
meyer meyer formalism specifications ieee software pp 

olle olle comparative review information systems design methodologies stage stock olle sol stuart eds information systems design methodologies comparative review proc 
ifip wg cris north holland pp 

olle sol olle sol information systems design methodologies feature analysis proc ifip wg cris north holland 
potts potts software engineering research revisited ieee software sept pp 

potts fickas potts fickas requirements engineering section th international workshop software specification design acm sigsoft software engineering notes pp 
roman babb 
roman babb concurrency coordination distribution acm sigsoft software engineering notes pp 
stevens myers constantine stevens myers constantine structured design ibm systems journal pp 

requirements specification exemplars page swartout balzer swartout balzer inevitable intertwining specification implementation communications acm pp 

tichy tichy lukowicz prechelt heinz experimental evaluation computer science quantitative study journal systems software jan pp 

van van formalizing informal requirements aspects bergstra 
eds algebraic methods ii theory tools applications lncs springer verlag pp 

van lamsweerde van lamsweerde darimont massonet goal directed elaboration requirements meeting scheduler problems lessons learned proc 
re nd int 
symp 
requirements engineering york ieee 
wing wing study specifications library problem ieee software july pp 

zave zave insider evaluation paisley ieee trans 
software engineering se pp 

appendix meeting scheduler exemplar preliminary description deliberately intended sketchy imprecise 
acquisition formalization validation processes needed complete lift shadow areas 
number features meeting scheduler system inspired various experiences organizing meetings faculty meetings esprit project meetings program committee meetings 
scheduling meetings domain description meetings typically arranged way 
meeting initiator asks potential meeting attendees information personal agenda set dates attend meeting referred exclusion set set dates prefer meeting take place referred preference set 
meeting date defined pair calendar date time period 
exclusion preference sets contained time interval prescribed meeting initiator referred date range 
initiator asks active participants provide special equipment requirements meeting location overhead projector workstation network connection telephones 
may ask important participants state preferences meeting location 
proposed meeting date belong stated date range exclusion sets furthermore ideally belong preference sets possible 
date conflict occurs date 
conflict strong date date range outside exclusion sets weak dates date range outside exclusion sets date intersection preference sets 
conflicts resolved ways initiator extends date range participants remove dates exclusion set participants withdraw meeting participants add new dates preference set 
meeting room available selected meeting date 
meet equipment requirements furthermore ideally belong locations preferred important participants possible 
new round negotiation may required room 
meeting initiator participants representative secretary 
system requirements purpose meeting scheduler system support organization meetings determine meeting request meeting date location intended participants effectively participate 
meeting date location convenient possible participants 
information meeting available early possible potential participants 
intended system considerably reduce amount overhead usually incurred organizing meetings potential attendees distributed different places 
hand system closely possible reflect way meetings typically managed see domain description 
system assist users activities 
plan meetings constraints expressed participants see domain description 
replan meeting dynamically support flexibility possible 
hand participants allowed modify exclusion set preference set preferred location meeting date location proposed 
hand possible take external constraints account date location proposed due need accommodate important meeting 
requirements specification exemplars page nal meeting date location may need changed meeting may cancelled 
cases bound replanning set 
support conflict resolution resolution policies stated client 
manage interactions participants required organization meeting instance communicate requests get replies participants reacting promptly support negotiation conflict resolution processes participants aware going planning process keep participants informed schedules changes confident reliability communications amount interaction participants number length messages amount negotiation required kept small possible 
meeting scheduler system general handle meeting requests parallel 
meeting requests competing overlapping time space 
concurrency managed 
aspects taken account 
system accommodate decentralized requests authorized user able request meeting independently whereabouts 
physical constraints broken person may different places time meeting room may allocated meeting time system provide appropriate level performance example elapsed time submission meeting request determination corresponding meeting date location small possible elapsed time determination meeting date location communication information participants concerned small possible lower bound fixed time meeting date determined time meeting place 
privacy rules enforced non privileged participant aware constraints stated participants 
system usable non experts 
system customizable professional private meetings 
modes characterized different restrictions time periods may allocated meetings office hours private activities leisure time 
system flexible accommodate evolving data sets concerned participants may varying address participant reached may varying system easily extendable accommodate typical variations handling explicit priorities dates preference sets handling explicit dependencies meeting date meeting location participation delegation participant may ask person represent meeting partial attendance participant may attend part meeting variations date formats address formats interface language partial reuse contexts help establish course schedules 
extending system additional knowledge conflict resolution knowledge participant status priorities users meetings help determining best way resolve conflict 
conflict participant status may useful determining best meeting date location 
notions incorporated proposed extension 
capture hierarchical importance participants importance participant attend particular meeting relatively participants meetings ease participant particular date interval free 
various notions conflict resolution process 
participant status 
participant status captures hierarchical importance participant respect independently specific meeting expected participate 
attribute determine best compromise date location ones possible 
participant status typically determined superuser 
instance context scheduling faculty meetings department head higher status normal professors 
higher status student representatives 
participant importance 
participant importance captures importance specific person attend particular meeting relatively participants 
participant importances typically determined requirements specification exemplars page meeting initiator 
instance meeting chair secretary highest participant importance 
project meeting specific tasks discussed task leaders higher importance normal project members lower importance meeting chair task speakers project reviewers 
meeting significance 
meeting significance represents importance specific person attend particular meeting relatively meetings meeting requests 
meeting typically determined participants concerned 
instance participants specific task research project assign greater significance project meeting task discussed 
information kept confidential 
participant flexibility 
participant flexibility intended indicate easily user particular date interval free allow meetings scheduled interval 
dates exclusion sets preference sets weighted accordingly 
participant flexibility typically determined participants concerned 
instance professors move lecture periods easily participant flexibility corresponding date intervals low 
date interval exclusion set participant high flexibility participant 
information kept confidential 
knowledge status priorities 
tactics illustrate typical uses various kinds priorities suggested 
best meeting dates locations determined considering participants higher participant status 
date organize meeting system propose person having low participant importance withdraw meeting 
date organize meeting system propose participant cancel withdraw meeting having lower meeting significance 
meeting date exclusion set outside preference set considered corresponding participant high flexibility 
