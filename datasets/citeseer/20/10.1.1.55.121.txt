algebraic topology distributed computing primer maurice herlihy sergio rajsbaum computer science department brown university providence ri herlihy cs brown edu digital equipment cambridge research lab kendall square cambridge ma rajsbaum crl dec com 
models techniques borrowed classical algebraic topology yielded variety new lower bounds impossibility results distributed concurrent computation 
explains basic concepts underlying approach shows apply simple distributed problem 
problem coordinating concurrent processes remains central problems distributed computing 
coordination problems arise scales distributed concurrent systems ranging synchronizing data access tightly coupled multiprocessors allocating data paths networks 
coordination difficult modern multiprocessor systems inherently asynchronous processes may delayed warning variety reasons including interrupts pre emption cache misses communication delays failures 
delays vary enormously scale cache delay process fewer instructions page fault instructions operating system pre emption hundreds millions instructions 
coordination protocols take delays account run risk process unexpectedly delayed remaining processes may unable progress 
techniques models borrowed classical algebraic topology yielded variety new lower bounds coordination problems 
attempt explain basic concepts techniques underlying results 
particularly interested making mathematical concepts accessible computer science community 
concepts research partly supported onr arpa order 
leave instituto de matem 
part done visiting laboratory computer science mit 
partly supported projects 
elementary fully covered chapter standard textbook 
discussion focuses class problems called decision tasks described section 
section show decision tasks modeled simplicial complexes standard combinatorial structure elementary topology 
section review notion chain complex provides algebraic vocabulary describing topological properties simplicial complexes 
section show combinatorial algebraic notions applied prove variety lower bounds known problem distributed computing set agreement task 
model set sequential threads control called processes communicate applying operations objects shared memory 
examples shared objects include message queues read write variables test set variables objects arbitrary type 
processes asynchronous run arbitrarily varying speeds 
processes may fail 
processes asynchronous protocol distinguish failed process slow process 
distill notion distributed computation simplest interesting form focus simple important class problems called decision tasks 
set sequential processes pn process starts private input value typically subject task specific constraints 
processes communicate process chooses private output value subject task specific constraints halts 
decision tasks intended model reactive systems databases file systems flight control systems 
input value represents information entering system outside world character typed keyboard message computer signal sensor 
output value models effect outside world irrevocable decision commit transaction dispense cash launch missile 
simplest example decision task consensus 
process starts input value chooses output value 
output values agree output value process input value 
input values boolean task called binary consensus 
consensus task originally studied idealization transaction commitment problem number database sites agree commit abort distributed transaction 
natural generalization consensus set agreement 
consensus process output value process input value 
consensus requires processes agree set agreement requires distinct output values chosen 
consensus set agreement 
program solves decision task called protocol 
protocol resilient non faulty process finish protocol fixed number steps regardless failures delays processes 
protocol wait free tolerates failures delay processes 
combinatorial structures formally initial final state process vertex hp pair consisting process id value input output 
set mutually compatible initial final process states modeled dimensional simplex simplex 
simplex properly colored vertex labeled distinct process id complete set possible initial final process states represented set properly colored simplexes closed containment called simplicial complex complex 
dimension dimension simplex largest dimension convenient superscripts indicate dimensions simplexes complexes 
th skeleton complex skel subcomplex consisting simplexes dimension 
set process ids associated simplex denoted ids set values vals 
proper face vertexes proper subset vertices complexes simplicial map oe carries vertexes vertexes simplexes preserved 
convenient visualize vertexes simplexes complexes point sets euclidian space 
vertex simply point simplex convex hull affinely independent vertexes 
complex represented set geometric simplexes arranged pair simplexes intersects common face 
point set occupied complex called polyhedron 
geometric interpretation illustrations informal discussions formal treatment 
decision task processes input complex output complex map delta carrying input simplex set simplexes map associates initial state system input simplex set legal final states output simplexes 
convenient extend delta simplexes lower dimension gamma delta set legal final states executions indicated processes take steps 
example input complex binary consensus constructed assigning independent binary values processes 
call complex binary sphere polyhedron homeomorphic sphere exercise left reader 
output complex consists disjoint simplexes corresponding decision values 
illustrates input output complexes process binary consensus 
example interesting output complex consider renaming task process unique input name taken large name space choose unique output name taken smaller name space 
shows output complex process renaming task vn affinely independent gamma vn gamma linearly independent 
input complex output complex fig 

input output complexes process consensus fig 

output complex process renaming names output names 
notice edges marked identical edges marked identifying edges see complex polyhedron homeomorphic torus 
protocol process local state view computation input value followed sequence operations including arguments results applied shared objects 
convenient view process executing protocol fixed number steps choosing output value applying task specific decision map ffi local state 
treat protocol uninterpreted protocol simply treating process local state decision value omitting task specific decision map ffi 
uninterpreted protocol defines complex called protocol complex 
vertex complex labeled process id local state exist execution protocol process id finishes protocol local state val 
simplex complex execution protocol process id finishes protocol local state val vertexes simplex compatible local states 
input simplex subcomplex generated executions processes ids take steps starting input values vals 
fig 

views protocol complex single round test set protocol fig 

protocol complexes multi round test set protocols example consider system asynchronous processes communicate applying test set operations shared variables 
shows views protocol complex process round protocol processes share test set variable share 
variables initialized process executes single test set recall test set atomically writes variable returns variable previous contents 
operation halts 
complex consists tetrahedrons corresponding possible outcomes test set operations 
left hand side shows schematic view complex vertex labeled process id result operation right hand side shows complex dimensional perspective 
shows protocol complexes protocols processes respectively iterate round test set protocols fresh initialized variables round 
mean protocol solve decision task 
recall process chooses decision value applying decision map ffi local state protocol complete 
expressed terminology protocol solves decision task hi deltai exists simplicial map ffi ffi delta gamma definition just formal way stating execution protocol yield output value assignment permitted decision task 
roundabout way formulate obvious property important useful advantage 
moved operational notion decision task expressed terms computations unfolding time purely combinatorial description 
ready describe strategy proving impossibility results 
show decision task protocol model computation show decision map ffi exists 
decision maps simplicial preserve topological structure 
show class protocols generates protocol complexes topologically incompatible task output complex established impossibility 
algebraic structures far model entirely combinatorial 
analyze topological structure simplicial complexes need introduce algebraic concepts 
discussion closely follows section reader encouraged consult details 
dimensional simplicial complex simplex orientation equivalence class orderings consisting particular ordering permutations 
example orientation simplex just direction vice versa 
orientation simplex clockwise counterclockwise see 
convention simplexes oriented increasing subscript order explicitly stated 
chain formal sum oriented simplexes delta integer range simplexes writing chains typically omit simplexes zero coefficients zero simply write 
write delta gamma delta gammas identify gammas having opposite orientation 
chains form free abelian group called th chain group technical reasons convenient define gamma infinite cyclic group integers addition 
fig 

oriented simplex boundary oriented simplex 
define face th face gamma simplex denotes omission 
boundary operator gamma defined simplexes gamma delta face extends additively chains ff ff ff ff zero dimensional boundary operator gamma defined vertex boundary operator important property applying twice causes chains vanish gamma ff boundary operator illustrated 
henceforth usually omit subscripts boundary operators 
illustrate concepts example 
oriented simplex solid triangle complex proper faces hollow triangle 
complex includes simplexes vertexes simplexes face 
boundaries simplexes shown 
th chain group generated meaning chains form delta delta delta integers 
chain group generated chains form delta delta delta calls operator augmentation denotes ffl 
standard orientation 
contains simplexes higher dimension higher chain groups trivial 
chain ff boundary ff fi chain fi cycle ff 
boundary chains form group im cycles form group ker 
equation implies subgroup quotient group called th homology group informally homology groups measure extent complex holes 
non zero element cycle boundary corresponding intuitive notion dimensional hole 
conversely trivial single element group cycle boundary holes dimension connected 
say acyclic 
example trivial connected 
non trivial chain cycle boundary simplex 
shown infinite cyclic generated equivalence class 
chain complex sequence groups homomorphisms fc fc phi psi chain complexes simplicial complexes chain map oe family homomorphisms 
oe commute boundary operator ffi oe oe gamma ffi 
dimension oe gamma just identity map 
chain maps preserve cycles boundaries 
recall simplicial map carries vertexes vertexes simplex maps simplex simplicial map oe induces chain map oe oe dimension oe oe oe 
note chain maps induced simplicial maps 
henceforth abuse notion omitting subscripts sharp signs chain maps 
define chain maps giving values simplexes chain group generators extending additively 
oe chain maps chain homotopy oe family homomorphisms gamma oe gamma roughly chain maps homotopic deformed see intuitive justification definition 
strictly speaking reduced homology groups 
definition 
acyclic carrier function sigma assigns simplex non empty subcomplex sigma acyclic face sigma sigma 
fig 

complex subdivision example subdivision complex acyclic carrier 
informally complex subdivided partitioning component simplex smaller simplexes illustrated 
acyclic carrier maps simplex entire subdivided complex face corresponding subdivided face 
subdivision acyclic carrier acyclic carrier need subdivision 
homomorphism oe carried sigma simplex appearing non zero coefficient oe subcomplex sigma 
theorem acyclic carrier theorem 
sigma acyclic carrier 
oe chain maps carried sigma exists chain homotopy oe carried sigma 
exists chain map carried sigma proof theorem text 
lemma immediate consequence definitions 
lemma 
oe carried sigma dim dim sigma sigma oe equal chain maps 
returning example rotation map ae defined ae mod induces chain map ae shown 
verify ae chain map suffices check ae ae 
identity map induces chain map 
show ae chain homotopic displaying acyclic carrier sigma explicit chain homotopy sigma complex consisting gamma mod vertexes sigma subcomplex containing ae vertexes 
ae carried sigma sigma sigma acyclic gamma gamma gamma ae gammas gammas gammas gammas oe gamma fig 

maps extended example contractible 
chain homotopy 
easily verified gamma ae simplicial map induces chain map chain maps induced simplicial map 
consider chain map oe 
notice oe delta map wraps triangle boundary times simplicial map 
map chain homotopic ae wrap 
application recall set agreement task process required choose process input value set values chosen size give theorem specifying algebraic property prevents protocol solving set agreement apply theorem variety different models computation 
arguments taken herlihy rajsbaum 
theorem 
simplex vertexes labeled distinct input value complex faces 
pi protocol protocol complex ffi decision map 
exists acyclic carrier sigma vals ffi sigma vals simplexes pi solve set agreement 
proof 
chain map induced simplicial map sending hp vertex value acyclic carrier theorem guarantees chain map oe carried sigma slight abuse notation ffi chain map induced simplicial decision map ffi oe ffi oe composition oe ffi 
phi acyclic carrier phi identity chain map carried phi 
equation implies phi acyclic carrier oe 
dim dim phi lemma implies maps equal 
oe assume contradiction 
execution values chosen implying reduces dimension simplex 
chain map sends simplex chain ffi ffi ffi oe oe contradiction 
ut show apply theorem 
consider model processes communicate reading writing shared variables 
wait free protocol herlihy shavit showed acyclic input simplex input simplex vertex distinct input 
map sigma wf assigns face protocol subcomplex acyclic carrier 
input values read written execution values process decide value vals sigma wf satisfies conditions theorem 
corollary 
wait free read write consensus protocol 
resilient protocols similar argument shows corollary 
resilient read write consensus protocol 
read write memories important theoretical point view modern multiprocessor architectures provide variety powerful synchronization primitives including test set fetch add compare swap load linked store conditional operations 
primitives affect ability solve set agreement 
way classify synchronization primitives consensus number processes solve consensus primitives 
example test set consensus number meaning protocols read write test set operations solve consensus processes 
direct connection object consensus number homology protocol complexes 
consider system processes share read write variables objects allow processes reach consensus 
shared objects solve consensus processes herlihy rajsbaum showed possible solve set agreement ce easy protocol left reader lower value words protocol complex model holes dimension ce gamma low order homology groups trivial 
result illustrated protocol complexes figures 
complexes non trivial homology dimension gamma trivial homology dimension gamma connected 
generally extreme acyclic 
higher consensus numbers complex may holes 
consensus number low holes appear higher dimensions consensus number grows holes spread increasingly lower dimensions 
protocol complex may disconnected 
input simplex ce gamma complex faces 
observations homology protocol complex exploited construct acyclic carrier sigma carrier directly satisfy equation sigma may include processes ids 
possible modify decision values processes ids sigma gamma ids satisfy equation see details 
corollary 
wait free ce gamma set agreement protocol processes share read write variables objects consensus number 
result generalized including objects allow processes solve set agreement task call consensus 
acyclic carrier simplexes mod mg gamma similar argument corollary 
wait free gamma consensus protocol processes share read write memory consensus objects 
turn attention synchronous models 
chaudhuri herlihy lynch tuttle considered model processes communicate sending messages completely connected network 
computation model proceeds sequence rounds 
round processes send messages processes receive messages sent round perform local computation change state 
communication reliable processes fail stopping middle protocol sending subset messages 
protocol complex rounds 
triangle construction chaudhuri identified acyclic carrier simplex bt satisfying equation 
corollary 
resilient consensus protocol takes fewer bt kc rounds synchronous fail message passing model 
related fischer lynch paterson showed consensus task resilient solution system asynchronous processes communicate exchanging messages 
moran gave graph theoretic characterization class tasks solved asynchronous messagepassing systems presence single failure 
herlihy shavit simplicial complexes model decision tasks formulate properties decision tasks terms simplicial homology 
showed protocol complex wait free read write protocol simply connected trivial homology holes 
give complete characterization tasks wait free solution read write memory 
herlihy rajsbaum showed read write variables augmented powerful shared objects read write registers protocol complexes may holes non trivial homology higher dimensions 
set agreement task proposed soma chaudhuri conjecture solved asynchronous systems 
independent research teams borowsky gafni herlihy shavit saks proved conjecture correct 
attiya bar noy dolev koller peleg reischuk showed asynchronous systems renaming task solution output name space sufficiently large unable demonstrate existence solution range smaller output name spaces 
herlihy shavit showed task solution smaller name spaces 
technical content adapted herlihy rajsbaum simplifies impossibility results eliminating need certain continuous arguments 
attiya rajsbaum take different approach proving number results wait free read write memory extending simplicial model combinatorial notion called divided image 
intriguing development gafni koutsoupias shown undecidable wait free read write protocol exists tasks argument impossibility computing protocol complex fundamental group topological invariant related homology group 
believe techniques models borrowed classical algebraic topology represent promising new approach theory distributed computing 
notions come mature branch mainstream mathematics terminology lesser degree notation largely standardized formalisms thoroughly debugged 
importantly model possible exploit extensive literature accumulated century poincar invented modern algebraic topology 
close brief summary open problems 
problem classifying computational power objects wait free computation attracted attention researchers 
seen protocol complexes different kinds objects share certain topological properties read write complexes holes set agreement complexes holes certain dimension 
intriguing speculate kind topological classification protocol complexes yield useful computational classification objects 
believe time ripe apply techniques tasks models different timing failure assumptions longlived objects service repeated requests 
results surveyed impossibility results little known complexity solvable problems models 
acknowledgments grateful attiya prasad chalasani alan fekete grigni jha shlomo moran lyle ramshaw amber settle lewis stiller mark tuttle david comments 

attiya bar noy dolev peleg reischuk 
renaming asynchronous environment 
journal acm july 

attiya rajsbaum 
combinatorial topology framework wait free computability 
preprint 

moran 
combinatorial characterization distributed tasks solvable presence faulty processor 
proceedings th annual acm symposium principles distributed computing pages august 

borowsky gafni 
generalized flp impossibility result resilient asynchronous computations 
proceedings th annual acm symposium theory computing pages may 

borowsky gafni afek 
consensus power sense 
proceedings th annual acm symposium principles distributed computing pages august 

chandra hadzilacos toueg 
wait freedom vs resiliency robustness wait free hierarchies 
proceedings th annual acm symposium principles distributed computing pages august 

chaudhuri 
agreement harder consensus set consensus problems totally asynchronous systems 
proceedings th annual acm symposium principles distributed computing pages august 

chaudhuri herlihy lynch tuttle 
tight lower bound set agreement 
proceedings th annual ieee symposium foundations computer science pages october 

fischer lynch paterson 
impossibility distributed commit faulty process 
journal acm april 

gafni koutsoupias 
processor tasks undecidable 
proceedings th annual acm symposium principles distributed computing august 

herlihy 
wait free synchronization 
acm transactions programming languages systems january 

herlihy rajsbaum 
set consensus arbitrary objects 
proceedings th annual acm symposium principles distributed computing august 

herlihy rajsbaum 
algebraic spans 
proceedings th annual acm symposium principles distributed computing august 

herlihy shavit 
asynchronous computability theorem resilient tasks 
proceedings th annual acm symposium theory computing pages may 

herlihy shavit 
simple constructive computability theorem wait free computation 
proceedings th annual acm symposium theory computing pages may 


robustness herlihy hierarchy 
proceedings th annual acm symposium principles distributed computing pages august 

kleinberg 
resource bounds combinations consensus objects 
proceedings th annual acm symposium principles distributed computing pages august 


elements algebraic topology 
addison wesley reading ma 
isbn 

peterson 
gap theorem consensus types 
proceedings th annual acm symposium principles distributed computing pages august 

saks 
wait free set agreement impossible topology public knowledge 
proceedings th annual acm symposium theory computing pages may 
article processed macro package llncs style 
