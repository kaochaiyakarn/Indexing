constraint programming constraint nets ying zhang department computer science university british columbia vancouver canada zhang cs ubc ca alan mackworth department computer science university british columbia vancouver canada mack cs ubc ca view constraints relations constraint satisfaction dynamic process approaching stable equilibrium 
developed algebraic model dynamics called constraint nets provide real time programming semantics model analyze dynamic systems 
explore relationship constraint satisfaction constraint nets showing implement various constraint methods constraint nets 
motivation constraints relations entities 
constraint satisfaction viewed different ways 
logical deductive view constraint system structure hd set constraints entailment relation constraints 
view constraint satisfaction seen process involving multiple agents concurrently interacting store constraint system checking entailment consistency relations refining system monotonically 
approach useful database knowledge systems embedded logic programming languages 
characteristically global constraint explicitly represented relation tuple system able check entailed 
alternative view appropriate real time embedded systems formulate constraint satisfaction problem finding relation tuple entailed set constraints 
approach problem 
approach constraint satisfaction dynamic process solution stable equilibrium solution set attractor process 
monotonicity characterized function representing distance set solutions time 
soft hard constraints represented solved 
approach taken neural nets optimization graphical simulation robot control investigated seriously area constraint programming 
developed implemented algebraic model dynamics called constraint nets cn provide real time programming semantics model analyze robotic systems 
investigate relationship constraint satisfaction constraint nets 
rest organized follows 
section describes basic concepts dynamic systems 
section introduces constraint nets 
section presents various constraint methods solving global consistency unconstrained optimization problems 
section discusses embedded constraint solvers implementation issues 
section concludes 
properties dynamic systems section review basic concepts metric spaces dynamic systems relationship stability attractors functions 
shell canada fellow canadian institute advanced research metric spaces set real numbers denote set nonnegative real numbers 
metric set function theta satisfies axioms 




iff metric space pair hx di set metric metric space called distance 
metric space define distance point set points inf 
point ffl fflg oe fx call set ffl neighborhood denoted ffl 
similarly subset ae fflg oe call set ffl neighborhood denoted ffl 
set totally ordered time points discrete continuous 
trace function set time points set values 
denote set traces metric space hx di trace trace approaches value iff lim approaches set ae iff lim 
dynamic systems term dynamic refers phenomena produce time changing patterns characteristics pattern time interrelated times 
process function set values set traces intuitively characterizes set traces solely determined initial values 
oe denote set values trace oe fp jt point equilibrium fixpoint process iff equilibrium stable iff ffl ffi ffi oe ffl 
set ae attractor process iff ffl ffl lim attractor large iff lim 
fx attractor large stable equilibrium called asymptotically stable equilibrium large 
functions ae omega ffl ffl 
function process function omega satisfying 
omega iff 
omega 
condition states local minimum second condition guarantees moves downhill traces starting omega gamma definition simplified version 
theorems similar 
theorem equilibrium process stable exists function fx proof omega domain ffl neighborhood ffl 
ffl neighborhood ffl ffi min ffl ffl ffi neighborhood ffi omega gamma ffi oe ffl 
theorem suppose process satisfies condition approaches equilibrium 
set stable equilibria ae process attractor exists function satisfies conditions 
continuous implies jv gamma 
omega furthermore omega attractor large 
proof omega gamma continuous lim lim 
prove condition equilibrium 
omega attractor large 
constraint nets general model dynamics section introduce constraint nets model dynamic systems examine relationship constraint nets constraint satisfaction 
constraint nets constraint net composed transductions locations 
transduction mapping tuple input traces output trace causal viz 
output value time determined input values prior time 
transductions mathematical models transformational processes 
elementary types transductions dynamic systems delays 
transliteration pointwise extension function time set ffi init init denote unit delay discrete system integration continuous system respectively init initial value 
constraint net triple cn cni lc set locations td set transductions associated tuple input ports output port cn set directed connections locations ports transductions restriction connection pointing location port transduction connects unique location location isolated 
location input connection pointing output constraint net closed input location open 
cn denote module set input locations set output locations interface 
graphical representation constraint net bipartite directed graph locations represented circles transductions boxes connections arcs port transduction location vice versa 
semantically location denotes trace transduction corresponds equation xn 
constraint net corresponds set equations semantics fixpoint equation set 
general constraint nets model hybrid dynamic systems components operating different time structures triggered events 
focus types constraint nets discrete transition systems continuous integration systems corresponding respectively different types constraint solvers 
constraint solvers output location state location output unit delay integration 
state constraint net mapping set state locations set values 
constraint solver regarded special kind constraint net closed state trace determined initial state 
constraint solver cs defines process set states set state traces 
stable equilibrium called stable equilibrium cs attractor called attractor cs 
cs solves iff solution stable equilibrium cs solution set attractor cs cs solves globally iff addition solution set attractor large 
lemma cs solves globally equilibrium cs solution proof trivial 
discuss basic types constraint solvers state transition systems discrete cases state integration systems continuous cases 
state transition system pair hs fi set states state transition function 
state transition system represented constraint net transliteration unit delay ffi initial state fig 

solution net infinite sequence 
constraint net representing hs fi clearly state equilibrium state transition system hs fi iff 
lemma hs di metric space 
equilibrium state transition system stable omega ffl omega 
asymptotically stable omega omega kd 
omega asymptotically stable equilibrium large 
proof 
easy see function hs fi 
integration basic transduction continuous time structures 
state integration system differential equation ds dt represented constraint net transliteration integration initial state fig 

constraint net representing ds dt clearly state equilibrium state integration system ds dt iff 
lemma equilibrium state integration system stable continuous local minimum gamma ds 
asymptotically stable unique minimum neighborhood 
equilibrium global minimal point asymptotically stable equilibrium large 
proof gamma ds 
easy check dv dt local minimum neighborhood iff 
function ds dt 
properties constraint methods section examine various constraint methods properties 
particular discuss types constraint satisfaction problems global consistency unconstrained optimization classes relations relations finite domains linear convex nonlinear relations dimensional euclidean space hr dn dn jx gamma yj gamma gamma yn global consistency corresponds solving hard constraints unconstrained optimization corresponds solving soft constraints 
problem kind translated second introducing energy function representing degree global consistency 
tuple ds dt represents set equations 
unconstrained optimization problem unconstrained optimization minimize energy function discuss methods problem gradient method gm newton method nm study schema model sm minimizing energy function gradient method gradient method gradient descent algorithm state variables slide downhill opposite direction gradient 
formally function minimized hx xn point vector points direction maximum increase gradient gradient descent equations model gradient method dx dt gammak fx jx true local minimum fx jx global minimum 
gm constraint net representing gradient descent equations 
theorem specifies conditions gm solves problems theorem gm solves continuous gm solves addition bounded 
gm solves globally addition convex proof lemma solution stable equilibrium 
theorem letting function prove attractor 
convex contains equilibria set global minima attractor large 
newton method newton method minimize second order approximation energy function iterative step 
deltae jacobian deltae step current point newton method minimize function deltae gamma gamma gamma ea deltae gamma solution equation point gamma gamma deltae newton method defines state transition system hr fi gamma gamma deltae 
nm constraint net representing newton method 
theorem specifies conditions nm solves problem theorem nm solves jj strictly convex nm solves addition bounded 
nm solves globally addition convex 
proof prove jj implies asymptotically stable 
jacobian easy check jr 
exists neighborhood ffl ffl jf gamma kjx gamma 
lemma asymptotically stable 
convex equilibrium asymptotically stable large 
assume jacobian inverse obtained line 
newton method solve set nonlinear equations replacing deltae excludes flat maximum saddle surfaces 
function convex iff gamma gamma strictly convex iff inequality strict 
obviously strictly convex function unique minimal point 
linear functions convex strictly convex 
quadratic function mx convex semi positive definite strictly convex positive definite 
schema model schema model finite constraint satisfaction pdp framework 
basically set units constraints units represented weights connections 
energy typically quadratic function form gamma sigma ij sigma gamma wa indicates activation value specifies bias unit ij represents constraint units ij positive units support negative units zero units effect 
various methods solving problem 
schema model provides discrete relaxation method 
gamma sigma ij gamma schema model defines state transition system fi hf fn gamma gamma gamma 
words gamma jn gamma min 
theorem sm constraint net representing schema model jn sm solves set minima denoted proof denote 
jn implies defined 
second minimum 
equilibrium 
prove stable 
ffl neighborhood ffl sign neighborhood exists continuous 
considering jf gamma cases 

case jf gamma jf gamma theta ja ja gamma 
case jf gamma jf gamma theta ja gamma ja gamma 
jf gamma gamma gamma ja gamma gamma ja gamma 
jf gamma gamma gamma ja gamma gamma gamma ja gamma ffl jf gamma ja gamma jf gamma ja gamma lemma stable 
furthermore ja gamma defined neighborhood function sm 
theorem attractor 
global consistency unconstrained optimization methods solve set equations letting sigma sigma 
constraint solver cs solves mine cs solves 
inequality constraints transformed equality constraints 
approaches 
inequality constraint equivalent equality constraint max ii introduced extra variable 
similarly schema model solve set constraints finite domains assigning possible value unit constraint values weight 
cases efficient solve set equality constraints directly 
method solving set equality constraints solve optimization problem local extremum implies 
similarly problem finite domain constraint satisfaction solved directly constraint nets 
discuss projection method pm solving equality constraints study method solving global consistency finite domain constraints fm 
projection method projection point set metric space hx di point pr pr 
projections dimensional euclidean space hr dn share properties 
lemma ae closed convex projection pr exists unique gamma pr gamma pr suppose system convex closed sets problem find px projection satisfied set max 
projection method problem defines state transition system hr fi gamma 
theorem derived similar proof simplified functions 
theorem pm constraint net representing projection method 
pm solves globally convex 
proof easy see solution equilibrium 
prove jf gamma jx gamma follows 
jf gamma jx gamma gamma jx gamma jp gamma xj gamma gamma jx gamma gamma jp gamma xj gamma gamma jx gamma gamma gamma jp gamma xj lemma jx gamma lemma stable 
prove attractor large 
jx gamma function jf gamma jx gamma addition prove process defined pm satisfies condition theorem lim implies lim jx gamma 
lim jp gamma equilibrium 
theorem attractor large 
projection method solve set inequality constraints convex function linear functions convex 
projection method applied set linear inequalities ax hx xn ith row projection point half space gamma defined ae gamma gamma ca gamma ja reduces method described 
modification method applied set linear equalities simply replacing linear equality linear inequalities gammag 
various ways modify method faster convergence 
instance gives simultaneous projection method sigma gamma index set violated constraints sigma 
gives method gammax fxj sigma 
furthermore large set inequalities problem decomposed set subproblems corresponding transition function kth subproblem 
problem solved combining results ff set dimensional euclidean space convex iff implies gamma clearly convex function convex set 
finite constraint satisfaction problems formalized finite constraint satisfaction problems represented constraint networks 
formally constraint network quadruple hv dom coni ffl set variables fv vn ffl associated variable finite domain dom ffl set arcs fa ang ffl associated arc constraint con relation scheme set relation tuples solution set constraint network join relations sol solved schema model sm assigning possible value finite domain variable unit 
units values variable units values different variables support consistent 
sm solve globally 
solved directly various methods 
scheme fr rng scheme constraint network solution constraint network network sol sol scheme scheme pi sol pi projection operator 
solution network called minimal network 
relaxation method fm finds solution network constraint network acyclic scheme 
kind method studied researchers instance 
examine property method framework dynamic systems 
set constraint networks scheme solution set 
define state transition system hc fi ff pi 
theorem fm constraint net representing state transition system hc fi 
fm finds solution network globally scheme acyclic 
proof clear solution network equilibrium state transition system 
define metric set relation scheme distance relation tuples defined dr gamma gamma jrj denotes number relation tuples 
distance constraint networks defined sigma scheme 
define function sigma scheme jrj function solution network hc fi iff stable equilibrium 
prove scheme acyclic asymptotically stable equilibrium 
acyclic network equilibrium implies minimal network clearly 
theorem asymptotically stable embedded constraint solvers implementation issues section consider variations constraint solvers 
corresponds open constraint nets designing embedded control systems 
second corresponds constraint nets latency 
embedded constraint solvers important applications constraint solvers design robot control systems 
kinds embedded constraint solvers application 
constraint solver coupled dynamic environment 
second constraint solver coupled plant robot 
cases embedded constraint solver part robot controller 
combination embeddings occur real applications 
embedded constraint solver coupled environment resp 
plant open constraint net cn set input locations act sensors environment resp 
plant 
constraints relations input output values 
constraint net embedded constraint solver set constraints environment resp 
plant iff composition constraint net environment resp 
plant solves consider case designing tracking system chases target position position constraint satisfied jx gamma 
suppose design tracking system law dx dt gammak gamma input trace system embedded constraint solver jx gamma dt 
correct design dx dt dt gamma gamma 
see right design define function jx gamma observe dv dt gamma dx dt gamma dt 
reality dt inaccurate 
system robust respect inaccuracy 
implementation issues constraint solvers embedded constraint solvers implemented analog digital circuits programs multiprocessor environments 
discrete constraint solver efficiency characterized convergence rate method computation cost transition function 
constraint nets inherently parallel sequential computation considered special case 
clearly discrete constraint solvers embedded dynamic environments computation time affect dynamic behaviors 
continuous constraint solver latencies circuit may change dynamic behavior constraint solver totally 
consider simple example dx dt solves globally 
latency ffi wires actual equation dx dt gamma ffi 
case equilibrium may asymptotically stable equilibrium 
fact ffi unstable 
important design stage model possible latencies choose right value unitary model constraint satisfaction dynamic process 
various constraint methods dynamic properties studied applications control system design examined 
constraint net model serves useful target machine constraint programming languages providing semantics pragmatics 
wish uri peter lawrence dinesh pai nick pippenger qi valuable discussions suggestions 
research supported natural sciences engineering research council institute robotics intelligent systems 

relaxation method linear inequalities 
canadian journal mathematics 
sakai sato hawley 
constraint logic programming language cal proceedings international conference fifth generation computer systems pages 
censor 
new method linear inequalities 
linear algebra applications 
dechter 
constraint networks 
shapiro editor encyclopedia artificial intelligence pages 
wiley 
practice gamma sensed 
dincbas van hentenryck simonis graf berthier 
constraint logic programming language chip 
proceedings international conference fifth generation computer systems pages 
freuder 
complexity tree structured constraint satisfaction problems 
proceeding aaai 
freuder 
representations constraint satisfaction problems 
kr pages 

method projections finding common point convex sets 
computational mathematics mathematical physics pages 
jaffar lassez 
constraint logic programming 
acm principles programming languages pages 
luenberger 
dynamic systems theory models applications 
john wiley sons 
mackworth 
constraint satisfaction 
shapiro editor encyclopedia artificial intelligence pages 
wiley 
mackworth 
logic constraint satisfaction 
artificial intelligence 

general systems theory mathematical foundations 
academic press 
montanari 
networks constraints fundamental properties applications picture processing 
information science 
pai 
constraint framework control complex mechanical systems 
proceedings american control conference pages boston 
platt 
constraint methods neural networks computer graphics 
technical report tr department computer science california institute technology 
rossi montanari 
exact solution linear time networks constraints perfect relaxation 
proceedings int 
principles knowledge representation reasoning toronto ontario canada pages may 
rumelhart mcclelland editors 
parallel distributed processing exploration microstructure cognition 
mit press 

discrete dynamical systems theory applications 
clarendon press 
saraswat rinard panangaden 
semantic foundations concurrent constraint programming 
technical report ssl palo alto research center 
yang murty 
new iterative methods linear inequalities 
unpublished 
zhang mackworth 
constraint nets semantic model real time embedded systems 
technical report department computer science university british columbia 
zhang mackworth 
robot right thing 
technical report department computer science university british columbia 
zhang mackworth 
parallel distributed constraint satisfaction complexity algorithms experiments 
kanal editor parallel processing artificial intelligence 
elsevier north holland 
appear 
