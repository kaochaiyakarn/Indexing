temporal reasoning constraint programming survey gennari contents temporal reasoning 
constraint programming 
constraint problems constraint satisfaction 
algorithms solve constraints 
temporal reasoning constraint programming 
temporal reasoning metric information 
qualitative approach allen interval algebra 
mixed approaches 
temporal reasoning constraint programming temporal constraints metric information 
order language 
original temporal constraint problem 
allen interval algebra 
allen interval algebra 
path consistency ia 
tractable subalgebras ia 
main techniques find solution general problem 
relations qualitative quantitative approaches 
metric constraints points qualitative constraints intervals 
qualitative constraints points intervals quantitative constraints points 
list figures distance graph representing stcp example 
allen relations 
list tables algorithm enforce arc consistency 
lrpc algorithm enforce path consistency 
floyd warshall algorithm 
finding solution 
lpt algorithm 
lrc algorithm check consistency 
algorithm find consistent instantiation pa 
feasible algorithm find consistent instantiations pa procedure get solution nb problems 
feasible algorithm find consistent instantiations pa chapter temporal reasoning temporal reasoning naturally arises dealing problems involving time ability represent manage temporal knowledge fundamental human artificial agents 
explains temporal reasoning appears areas including planning discourse analysis natural language understanding medical knowledge representation systems activity involves change time essential feature 
main goals temporal reasoning formalization notion time construction computational rule system reason time 
adopt intervals points ontological entities represent time constraint programming apparatus logical computational framework embark important area temporal reasoning temporal constraint programming 
thesis shall study main literature subject adopts time primitive unique ontological object events identified time occurrence 
shall see expressive power computational complexity approaches constraint programming techniques answer temporal queries 
authors distinction cfr 
events happen instantaneously time occurrence time point hold interval usually called fluents 
referring events mean concepts 
constraint programming constraint programming traced back research artificial intelligence computer graphics sixties seventies 
decade emerged separate area research 
constraint problems constraint satisfaction providing basic definitions 
constraint satisfaction problem cp consists 
finite set variables xn 
sets dn domain 
finite number constraints constraint subset cartesian product theta delta delta delta theta different constraint variables 
semantic means interpretation function way described follows 
definition set variables cp instantiation function defined subset different variables assigns variable value instantiation variables called consistent constraint variables satisfy constraint xm consistent instantiation constraint said solved 
example cp variables domains respectively just constraint instantiation domain fx defined ae consistent solved 
definition subset variables cp instantiation domain sequence consisting different variables instantiation obtained restricting elements call projection call instantiation domain consistent iff constraint cp sequence different variables projection satisfies instantiation called consistent cp iff domain consists variables 
means instantiations define solution cp definition cp variables xn instantiation variables consistent xn solution solution set set solutions 
set empty said consistent said inconsistent 
example consider cp example instantiation example consistent cp solution cp consistent 
dealing temporal reasoning see variables may infinite domains 
case constraint solving algorithms algebraic metric properties domains 
general identify main tasks ffl determining problem solution satisfiable ffl producing solution ffl building set solutions 
definition cps set variables 
said equivalent iff set solutions 
temporal constraint programming key techniques search solutions reduce temporal constraint problem tcp equivalent till minimal tcp equivalent input gained 
need define minimal constraint problem definition cp minimal iff constraint solution cp subsequence intuitively constraint problem minimal iff solution constraint extended solution problem 
definition constraint problem minimal equivalent called minimal constraint problem equivalent reducing constraint problem equivalent minimal constraint problem allows compute set solutions general task computing turns np hard problem see better chapter 
going see general main techniques adopted solve constraint problems 
algorithms solve constraints decades research focused algorithms solving constraint problems identifying problems satisfiability tractable 
techniques processing constraints broadly divided classes 

constraint enforcing rules known constraint propagation local consistency technique enforce various forms local consistency adding inferred constraints problem may reduce search space eliminating inconsistent values building partial solutions 

search algorithms find solution traversing space variable domains subset partial solutions 
best known algorithm searching solution backtracking stage backtracking search algorithm tries extend partial solution instantiating variable solution 
process distinguish sets variables past instantiated current instantiated instantiated variables 
algorithm find value current variable extend partial solution backtracks previously instantiated variable value previously assigned removed domain current variable 
algorithm sound complete means problem consistent algorithm finds solution general time consuming series improvements proposed look ahead look back schemes performance enhanced heuristic methods instance choosing optimal order process variables assign values 
algorithms solve constraints generally interleave techniques example algorithm proposed solve problems constraints going precisely state mean local consistency definition 
account backtracking algorithms constraint programming cfr 

relations allen algebra reduces problem local consistent equivalent path consistent uses backtracking finding solution 
peculiarity constraint programming inference rules going introduce paragraph see apply temporal frameworks chapter 
constraint propagation local consistency constraint propagation algorithms transform constraint problem equivalent deducing new constraints procedure restricts set partial solutions 
fact algorithms aim checking finding solution constructing set solutions dealing global consistency constraint problem try approximate loose sense look local consistency defined way stated 
definition cp 
called consistent iff variable problem constraint 
called consistent iff taken gamma consistent instantiation variables gamma variable different extended consistent gamma call problem locally consistent consistent number variables constraint problem 
literature different forms local consistency introduced notion consistency see general characterized consistency arc consistency best known widely notions local consistency introduced binary constraints extended arbitrary ones purposes original version stated sufficient 
definition ij binary constraint domain ij arc consistent iff conditions fulfilled cfr 
section 
ac cp fc gamma choose ij fa ij fc kl kl ig gamma fc ij table algorithm enforce arc consistency 
ij 
ij immediate definitions see binary cp cp binary constraints arc consistent iff consistent case interested 
algorithm enforce arc consistency table 
algorithm set constraints gamma indicates transposed binary constraint gamma cg algorithm set constraints instantiated union set transposed constraints belonging loop domains reduced trying enforce arc consistency 
general enforcing consistency trying reduce input cp equivalent consistent constraint problem inconsistent algorithm instance returning empty domain 
framework path consistency important concept arc consistency see better chapter 
defining path consistency requires operation composition binary constraints assume denote fi definition cp constraint xn 
constraint path consistent iff xn variables consistent instantiation satisfies condition couple constraints ik kj variable ik fi kj definition depends particular framework 
lrpc function lrpc var matrix boolean repeat return table lrpc algorithm enforce path consistency montanari proved arguing induction path consistency equivalent consistency 
proposition montanari csp path consistent iff consistent 
table introduce algorithm thesis enforce path consistency see tcp operation intersection constraints set theoretic 
tcp variables constraint matrix just theta matrix entry ij constraint solution constraint matrix satisfies constraint ij get ij know tcp inconsistent 
theta matrix intersection composition theta constraint matrices defined ij ij ij fi ij kn ik fi kj power defined induction usual fi order prove soundness algorithm resulting tcp path consistent define operation composition demonstrate framework different manner 
see temporal framework reduce tcp equivalent exactly constraint pair variables 
temporal reasoning constraint programming temporal reasoning system consists temporal knowledge base procedure check consistency inference mechanism able derive new information get solution solutions queries 
temporal reasoning tasks formulated constraint satisfaction problems constraint satisfaction check consistency search solutions solutions problem 
events primitive entities knowledge base temporal constraint programming characterized means time occurence intervals points 
temporal information constraint events happen particular time happens pm hold time interval takes hours state relations events qualitative type metric started hours 
temporal information kind temporal constraint programming able answer queries kinds 

consistent believe holds time happens 

time 
time hold 

possible times 
possible temporal relations event 
temporal constraint programming going study better chapter variables interpreted points intervals 
solution query events achieved assigning variables values line values consistent constraints stated problem values represent possible time occurence events query 
constraints extensionally characterized means real rational numbers intensionally represented finite set relations algebra formalization constraints time unit chosen able classify research field main streams ffl temporal reasoning metric information cfr 
section 
cfr 
section 
ffl qualitative approach allen interval algebra ffl mixed approach metric qualitative constraints 
going introduce subsections 
temporal reasoning metric information quantitative metric approach temporal primitive entities points ranging real rational numbers 
constraint propagation algorithms metric properties variable domain 
call original temporal framework constraints unions finite sets real intervals lately extended unions interval sets gamma fb satisfiability problem general temporal constraints np hard authors studied particular classes temporal constraint problems simple temporal constraint problems backtracking algorithms constraint propagation algorithms achieve forms local consistency approximate qualitative approach allen interval algebra qualitative approach constraints intensionally defined relations intervals points 
main concerns allen interval algebra ia constraints relations intervals examine section see qualitative point relations reduced allen ones 
satisfiability ia np hard problem series alternatives proposed ffl solving problem exactly designing algorithms efficient practice worst case analysis shows exponential time various forms backtracking algorithms ffl producing approximation algorithms run polynomial time prune search space path consistency ordering heuristics ffl reduction ia subalgebras satisfiability computed polynomial time assemble solution ia constraint problems 
see algorithms approximate path consistency 
cfr 

approaches clearly distinct authors prefer interleave techniques order improve search 
mixed approaches framework ones mixed order gain expressiveness trying loose tractability problem complexity results optimal 
approach ontological entities points second allen interval algebra primitive entities intervals third approach points intervals primitive objects language new introduced order relate points intervals 
authors studied particular metric tcps order find new subalgebras ia classified part qualitative approach main goal ia consider approach mixed aims expressive power qualitative quantitative approaches create new temporal frameworks satisfiability decided polynomial time 
research direction promising anyway relative literature scarce 
cfr 

chapter temporal reasoning constraint programming temporal constraints metric information quantitative approach temporal reasoning constraints finite number variables ranging rational real numbers variables stay time points 
order language order language equality lm introduced formalize problem non logical symbols 
place relation symbol intended interpretation non strict canonical order relation numbers 
place function symbol gamma intended interpretation subtraction operation numbers 
constant symbols numbers 
refer constant symbols numbers interpretation fixed convention adopted gamma 
additional symbols defined means primitive ones usual way call original temporal constraint problem variables range continuous domain allowed logically formalize constraints formalization extended allowing constraints unary gamma binary variables number disjunctions implies may constraint finite union convex sets gamma fr original temporal constraint problem general temporal constraint problem tcp formalized constraint variables finite number variables ranging real points binary constraints set solutions gamma gamma real intervals pairwise disjoint :10.1.1.40.1018
tc explicitly interval set 
unary constraints variables represented binary ones introducing new fresh variable domain reduced real number usually constraint expressed binary constraint difference gamma example evening paulo nikos decide eat pizza 
paulo needs gamma minutes reach 
nikos gets bike depending mood takes gamma gamma minutes 
nikos leaves office paulo leaves home 
wish answer queries story consistent possible time meet 
associate event paulo leaves home paulo arrives binary constraint gamma 
event nikos leaves office associated variable introducing fresh variable represent starting point time assuming domain reduced get instance constraints gamma gamma 
definition interval sets jm corresponding unary binary constraints binary operations union intersection composition defined way :10.1.1.30.1586
ffl union constraints set union ffl intersection constraints set intersection ffl composition constraints written fi set numbers composition operation result constraints pairwise disjoint additional process required order re establish condition :10.1.1.30.1586
definition tcp tcp set variables define intersection tcp tcp union tcp tcp composition tcp fi tcp means constraints couple variables ij tcp ij tcp ij ij relative constraint couple variables tcp tcp ij ij missing set gamma couple variables ij tcp ij tcp ij ij relative constraint couple variables tcp tcp ij ij missing set gamma couple variables ij tcp ij tcp ij fi ij relative constraint couple variables tcp fi tcp ij ij missing set gamma 
tcp represented means associated directed graph nodes stay variables labels nodes represent constraints specified problem 
natural relation order constraints set inclusion tc tc iff interval tc tc includes 
order relation tcps having set variables introduced 
definition tcp tcp set variables tcp included tcp briefly tcp tcp iff constraint tc tcp taken corresponding variables tc tcp tc tc 
fixed set variables possible divide constraints variables equivalence classes constraints equivalent iff set solutions class totally ordered means constraint inclusion cfr 
definition exists minimal constraint problem equivalence class wrt inclusion equivalent constraint problems closed intersection minimal constraint problem unique 
proposition constraint problem tcp exists unique minimal constraint problem equivalent 
call minimal constraint problem tcp write tcp 
reasoning temporal constraints main goals achieve 
checking consistency finding solution problem 
deriving new constraints ones amounts computing minimal constraint problem set solutions 
solves second problem polynomial time solved polynomial time unfortunately general tcp task turns np hard problem 
theorem satisfiability problem general tcp np hard 
pf 
reduction coloring problem cfr 

result worth finding subclasses tcp problem satisfiability computing minimal constraint problem solved polynomial time 
simple temporal constraint problem simple temporal constraint problem stcp tcp binary constraints reduce interval 
notion distance graph introduced nodes directed graph labels report weight ij cfr 
definition 
immediate see constraint problem equivalent minimal definition iff minimal wrt inclusion 
distance graph representing stcp example 
path induces eventually new constraint gamma gamma gamma xn gamma gamma xn intersection path constraints constraint gamma ij ij length shortest path ij usually reported 
example represented distance graph stc subproblem tcp example distance graph labels 
gamma gamma starting distance graph stp floyd warshall pair shortest paths algorithm produces graph stp complete directed graph having nodes edges labeled shortest path algorithm runs time number variables problem negative cycles cfr 
table 
ii ij ij ij min ij ik kj table floyd warshall algorithm dijkstra algorithm runs time vertex graph known problem literature linear programming cfr 

main theorems concerning ones 
lemma consistency check stp constraint problem consistent iff associated distance graph negative cycles 
pf 
cfr 
theorem solution search stp constraint problem variables instantiation consistent wrt path constraints induced associated graph extended solution stp 
pf 
cfr 
important consequence theorem get statement 
theorem consistent stcp equivalent induced distance graph minimal stcp equivalent 
pf 
cfr 
way gain effective procedure check consistency construct solution stcp see table 
tasks checking consistency finding solution building minimal constraint problem take time 
procedure find minimal constraint problem equivalent input stcp obtained applying path consistency algorithm get path consistency shown table 
usual constraints set constraint ij gamma 
apply floyd warshall pair shortest paths algorithm produce graph stp starting runs checking consistency inspecting signs diagonal elements ij assemble solution assigning variable value satisfies graph constraints relative assignments stated previously instantiated variables process takes time value assigned variable remains unaltered 
table finding solution lemma ensures iterating relaxation operation step get path consistent problem 
lemma constraint pc ij path consistent iff subset set pc ik fi pc kj 
pf 
pc ij path consistent consistent take ij ij instantiation gamma ij ij consistency extended gamma ik ik gamma kj kj implies ij gamma gamma gamma ik kj ij pc ik fi pc kj suppose pc ij pc ik fi pc kj take instantiation ij gamma ij hypothesis ik ik kj kj gamma ij ik kj just choose conditions hold 
ik gamma kj solution 
proposition stcp path consistency algorithm produces 
cfr 
theorem 
pf 
relaxation step path consistency algorithm amounts operations updating path length floyd warshall algorithm applying algorithm equivalent applying second 
stcp augmented strict inequalities gerevini consider case strict inequalities explicitly introduced constraints means constraint closed semi open open interval 
write stcp new kind simple temporal constraint problem 
binary operations constraints relation order naturally extended notion minimal equivalent problem 
weaker version theorem holds stated 
need modify definition distance graph arcs labeled new way constraint gamma label constraint strict inequality label 
shortest distance path points computed definitions comparison addition 
iff min 
resulting graph arc appears pair nodes inequalities corresponding arcs give minimal constraint problem equivalent input 
way get results way obtained similar ones strict inequalities 
lemma stcp associated distance graph negative cycles consistent 
theorem stcp equivalent induced distance graph minimal stcp equivalent 
algorithm proposed gerevini find solution framework performs steps input stcp output solution exists nil 
cfr 
line table 
cfr 


check consistency criterium lemma consistent return nil exit 
relax strict inequalities non involving non strict call resulting temporal constraint problem 
compute means algorithm table call 
left open interval label graph bounded left replace left closed interval bounded left ffi ffi finite length shortest interval constraint finite number interval constraint bounds call 
compute solution means algorithm table 
theorem states algorithm sound complete 
theorem algorithm computes solution stcp augmented strict inequalities exists returns nil 
takes time number variables involved problem 
pf 
see 
augmented inequations original stcp framework extended inequations disjunctions 
constraints implicitly defined way 

unary constraints conjunctions formula gammad inequation formulae ji ji ji require condition holds 
gammad ji ji ji usual introducing new fresh variable unary constraint translated equivalent binary 

binary constraints conjunctions formula gamma ij gamma gammad ji inequations gamma ji gamma ji ji require condition holds 
gammad ji ji ji ji ij 
define ary constraints briefly call constraints disjunctions inequations involving distinct variables 
constraints set theoretically defined obvious way particular binary constraints explicitly convex intervals gammad ji ij gamma fr ji ji ji conv stay convex hull disjunctions inequations introduced motivation choice eliminating variables set temporal constraints inequation may give rise disjunction inequations 
starting stcp inequations constraints say replacing convex interval convex hull conv get stcp path consistency algorithm successfully applied check satisfiability find solutions koubarakis proves important results 
theorem enforcing consistency stcp inequations constraints necessary sufficient get global consistency algorithm runs time kn number inequations variables 
pf 
cfr 

modifying step algorithm koubarakis designs algorithm produce minimal equivalent constraint problem stcp inequations constraints runs max kn time 
algorithm enforce global consistency case constraints generalization gain consistency enforcing consistency enforces consistency maximum number variables disjunctions inequations 
exponential number fixed time complexity algorithm polynomial number variables constraints 
class convex intervals closed intersection composition constraints definition 
procedure sound path consistency complete simple temporal constraint problems cfr 
theorem 
simple temporal constraint problem augmented inequations inequalities go take consideration case constraints convex open semi open closed intervals means implicitly formulae involving 
ffl unary constraint implicitly formula 
ffl binary constraint formalized conjunction gamma ij gamma gammad ji gamma ij gamma gammad ji formula gamma ij gamma ij ij 
algorithm briefly sketched receives input stcp augmented returns true consistent nil 
substitute non convex constraint convex hull call resulting constraint problem 
compute graph call 
negative cycles return nil 
inequation gamma label gammad return nil return true 
order prove algorithm sound complete need lemma simple temporal constraint augmented disjunctions inequations call relaxation writing conv constraint problem obtained replacing constraint non convex interval convex hull 
lemma simple temporal constraint problem augmented disjunctions inequations strict inequalities consistent distance graph conv negative cycles conv entail gamma gamma constraints pf 
cfr 
pg 

theorem input consistent algorithm sketched detects returns inconsistency runs time number variables inequations 
pf 
cfr 
pg 

algorithm finds solution exists input stcp augmented disjunctions inequations inequalities exists returns nil 
check consistency means previous algorithm consistent exit return nil 
compute conv 
add conv input inequations gamma boundary constraint conv call resulting constraint problem 
compute 
add input inequations gamma boundary constraint conv call resulting constraint problem 
left open interval label graph bounded left replace left closed interval bounded left ffi ffi defined ffl min ffi ij interval finite bounds lower bound finite interval convex ffl finite number ffi ij lenght convex subinterval possibly non convex intervals call resulting constraint 
omit non convex inequations call minimal constraint problem constraint problem obtained 
compute solution means algorithm table 
theorem previous algorithm sound complete runs time 
pf 
similar theorem 
general temporal constraint problem theorem different strategies approach general problem proposed 
main approaches classified splitting tcp simple temporal constraint problems tractable polynomial time ii 
backtracking search iii 
local consistency pruning algorithms path consistency consistency splitting constraint tcp disjunction simple temporal constraint problems selecting disjunct constraint tcp get single stcp solved means appropriate algorithm depending kind simple temporal constraints choose deal 
call labeling selection disjunct constraint solution tcp iff exists labeling associated stcp consistent solution tcp solution generated means labelings solution solution tcp 
definition immediate prove minimal network tcp union minimal networks means possible labelings tcp 
algorithm improved backtracking search 
iii 
path consistency improvements path consistency algorithm gives minimal constraint problem equivalent deal saw proposition 
general case hold take example constraint problem variables temporal constraints xy yz xz 
dechter observe path consistency achieved means relaxation operation ij ij ik fi kj may increase number intervals associated constraint problem means number intervals resultant path consistent tcp may exponential number intervals constraint input problem known literature fragmentation problem 
propose algorithm called ult performing path consistency reduce number intervals relies fact cfr 

cfr 
table improved versions algorithm see section 
path consistency gain consistency key idea quite simple generic metric constraint expressed disjunction intervals lowest greatest extreme points intervals selected order define stcp called path consistency algorithms applied constraint problem get equivalent minimal constraint problem time number variables range constraints constraint problem equivalent obtained intersecting corresponding constraints algorithm ult runs ek time number variables number edges maximal number intervals constraint 
call constraint ij redundant prone running ult resultant constraint ij path consistent 
prove ij ik fi kj ij redundant prone applying ult constraint problem check condition fulfilled order remove constraints path consistent 
subsequent improve ult introducing new algorithm called lpc variants better approximate path consistency simply modifying intersection operation 
definition jm constraints loose intersection loose set intervals fl defined respectively lower upper bound interval set ij loose ij number intervals ij increased relaxation ij loose ik fi kj :10.1.1.30.1586
definition case ij ij loose ij particular true ik fi kj operation loose intersection commutative instance loose set loose set contrary remarked may loose loose take instance loose loose range constraints difference lowest highest numbers specified :10.1.1.30.1586
input repeat compute ij ij ij return inconsistent return table lpt algorithm replacing intersection operation loose intersection operation fragmentation problem disappears 
sketch algorithm lpc table ffl obtained ij ik fi kj ffl derived ij ij loose ij construction equivalent cfr 
lemma loose intersection operation introduce new solutions preserves old ones get lemma 
lemma input output constraint problem lpt equivalent iteration algorithm removes interval constraints 
pf 
claim follows immediately previous 
step lpt algorithm remove constraint stops 
theorem algorithm lpt takes time number variables number constraints maximal number intervals constraint 
refine algorithms approximate path consistency simply substituting intersection loose intersection 
lpt ult able find solution useful propagating constraints backtracking search starting search effectiveness lays fact reduce number intervals constraints 
allen interval algebra allen interval algebra allen article temporal reasoning appeared self explanatory title maintaining knowledge temporal intervals describes temporal representation takes notion temporal interval primitive constraints represented relations holding intervals 
representation designed explicitly deal problem temporal knowledge relative described date fuzzy date 
metric tcps useful express metric information statement event event disjoint expressed binary metric constraints 
temporal information reduces qualitative relations intervals events occur away eyal defended thesis defending thesis go london holidays applications adopt allen interval algebra 
allen arguments framework particularly designed reasons ffl allows significant imprecision temporal knowledge relative relation absolute dates ffl uncertainty information represented means disjunctions relations intervals ffl qualitative representation constraints apparatus certain freedom modeling knowledge choose grain reasoning prefers instance expressing time terms days weeks business days ffl reasoning machinery allows default reasoning type parked car lot morning 
allen framework gained popularity represents balance expressiveness computational efficiency allows disjunctive information pairs intervals 
temporal representation allen insist events occur known fixed order allows disjunctive knowledge event occurred event 
overlaps overlapped meets met contains starts started finishes finished allen relations 
order language allen framework variables range real rational valued intervals 
constraints specified unions atomic basic relations pairwise disjoint starts overlaps meets finishes converse relations started gamma includes overlapped gamma met gamma finished gamma plus equality relation 
way committed particular representation set rational real intervals 
class possible unions atomic relations forms boolean algebra allen interval algebra ia atomic relations relations ia allen introduced operations framework operations generally defined binary relations universe way stated 
definition binary relations universe composition written fi set exists satisfying condition converse binary relation set new relation written gamma ia closed operations contains equality relation relation algebra :10.1.1.30.1586
peter ladkin alexander describe framework allen finite relation algebra way cfr 

complete description cfr 

state ia representation finite set 
universe set atomic relations correspond pairwise disjoint basic relations allen 
operations binary set union corresponds logical operator disjunction intersection corresponding composition unary operation converse 
binary constraint variables extensionally characterized finite union atomic relations bn bn atomic relations stated relations represented rational real numbers 
usually intensionally described ways committing particular representation set bn logic formula fb bn set theoretic fashion 
stick second expression feeling free choose useful 
able temporal constraint problems allen order logic framework 
definition order language equality call twelve relation symbols corresponding basic allen relations different equality relation non logical symbols 

finite number variables ranging real rational valued intervals 
finite number binary constraint relations 
np completeness ia checking consistency ia constraint problems turned np hard prove vilain kautz reduce clause problem problem determining consistency ia constructing computationally trivial mapping formula sat form equivalent encoding formula interval algebra 
cfr 

theorem determining consistency subset ia np hard 
pf 
literal negation formula define couple intervals ia 
intervals related truth determining interval called middle intervals middle correspond false literals falling correspond true ones 
original formula encoded polynomial time ia clause intervals created middle false fall middle true 
original formula model iff interval encoding satisfiable sat np complete problem assertion follows 
path consistency ia allen introduces path consistency deal ia constraint problems motivates choice follows 
path consistency attempt characterize inferences time appear automatically effortlessly dialogue story comprehension simple problem solving 
path algorithm see propagates relations intervals means composition search minimal constraint problem equivalent means new relations intervals introduced problem new constraints added computing composition new relations 
intuitively process keeps way described 
new interval relation entered computed new fact adds constraint intervals related may turn introduces new constraints intervals transitivity rules governing temporal relationships 
instance fact added inferred new fact added network identical fashion possibly introducing constraints relationship intervals 
allen original path consistency algorithm represents constraints queues representation see page 
cfr 
table 
computing composition new relations 
constraint problem 
soundness path consistency algorithm ia problems arc consistency computationally cheap unfortunately approximation consistency case ia problems stated 
case path consistency time allen approximate set solutions sufficient guarantee consistency problems particular important subalgebras ia guarantee consistency ia problems ia constraint problems path consistent means path consistency candidate pruning technique framework instance consider constraint problem variables constraint meets meets meets fi meets fi fi meets meets fi meets fi meets constraint problem path consistent consistent 
seen case means composition table distributivity fi wrt easily compute composition allen relations distributive laws time consuming techniques explored speed composition see 
computing composition key step process path consistency reduction tcp subsequent statement 
proposition constraint problem path consistent iff condition holds constraints ij variable ij ik fi kj pf 
saw path consistency equivalent consistency consistent instantiation variables extended consistent instantiation fx tcp 
framework means exactly ij ik kj definition composition amounts saying ij ik fi kj previous proposition get immediately result 
cfr 

cfr 

cfr 

see proposition 
chosen represent allen relations rational real numbers 
corollary searching path consistent cp amounts search greatest fixed point set equations ae ij ij ij ij kn ik fi kj ij constraint ladkin show represent ia problem theta matrix reduce tcp equivalent couple variables exists unique constraint constraints ii subset identity relation 
get result 
constraint intersect constraints couple intersect constraints equality relation process leads tcp equivalent original 
constraints just choose theta state new constraint variables happens choose way get tcp equivalent original satisfying conditions constraint matrix tcp just theta matrix entry ij constraint equivalent tcp get way described 
proposition searching path consistent cp amounts search greatest fixed point set equations ae ij ij ij ij kn ik fi kj constraint matrix 
pf 
follows immediately corollary 
previous proposition proves soundness algorithm table reduce tcp equivalent path consistent 
cfr 

lrc function lrc var matrix integer boolean ij ij lrpc ij lrc return true return false table lrc algorithm check consistency allen original algorithm lrpc takes time compositions relaxation improvements speed composition paragraph 
ladkin introduce algorithm check consistency tcp calls lrpc subroutine see table 
propose subset ia constraints chosen way 
path consistency sufficient guarantee consistency 
intersecting element allen relations yields element allen relations proposition algorithm table sound subset ia satisfying conditions 
pf 
immediate conditions 
ladkin suggest set atomic relations algorithm runs correctly path consistency complete case intersection atomic relation allen relations atom 
speed path consistency reduction observed computation composition main cause complexity path consistency algorithms 
cp variables cfr 

delta gamma possible constraints means number compositions intersections perform gamma delta delta gamma 
path consistency iterative process usually requires iteration stabilize 
certain number techniques speed triangle operation ij ij ik fi kj developed 
compute compositions speed composition compute compositions non atomic relations looking composition table atomic relations allen method memory available full theta relation table stored accessed efficiently feasible split method cfr 

tables 
avoiding useless operations path consistency algorithm table recomputes labels iteration recompute constraints changed previous iteration 
avoiding step done implementing hashing table holds previously computed compositions performing new composition simply looks table sees computation available case result taken performing new computation previous method compute new composition series heuristics skip useless computations instance ik kj equality relation computation avoided constraints include includes resulting composition computation perform produce larger constraint input avoided constraint couple variables 
tractable subalgebras ia allen algebra ia contains relations means subsets ia complete classification probably feasible 
research focused identifying tractable maximal tractable subalgebras ia algebras extended means relation loosing tractability 
cfr 

important subalgebras ia obtained translating qualitative point relations metric ones allen relations means introduce languages describe set qualitative quantitative relations points translate subalgebras ia search computers key technique prove maximality algebras discovered machine case analysis firstly introduced nebel different approach problem geometric logic apparatus ligozat 
point algebra point algebra pa important structures studied literature temporal constraint programming introduced vilain kautz research carried van beek 
pa constraint problems defined follows 
variables range set rational real numbers stand time points 
constraints disjunctions binary relations belonging set called basic relations 
call pa language relations distinguish operations intersection composition converse pa relations computed means basic ones restricted set allen relations sa translated pa relations vice versa loss information sa constraint problems constraints intervals translated utility available ftp generates minimal extensions subsets adding relation computing closure new set relations converse intersection composition 
cfr 

explicitly stated constraint variables 
cfr 
cfr 

conjunctions pa relations endpoints intervals 
lot applications ia problems literature sa relations instance representing temporal information medical expert systems hamlet hunter adopt relations sa disjointness relation 
fact expressive power sa limited fact disjointness intervals translated pa constraints take instance ia relation requires disjunction conjunctions pa relations endpoints 
sa turns expressive practical tasks approximate solutions ia constraint problems 
examine pa van beek shows transform constraints involving relations simple temporal metric constraints way gamma gamma gammaffl gamma note positive real number ffl allows transform pa problem ruling instance choose ffl number variables constraint problem 
transformation shows set allowed relations subset negative cycles dijkstra algorithm variables find consistent instantiation constraint problem set allowed relations include negative cycles floyd warshall algorithm takes time produce consistent instantiation 
constraint relation transformed need disjunction express fact logically equivalent transformed gammaffl gamma gammaffl gamma 
possible technique solve pa constraints going back dechter meiri pearl ladkin maddux algorithm find consistent instantiation runs time reducing problem path consistent van beek proposes algorithm called runs time 
algorithm applies topological sort requires rule dealing 
input adjacency matrix elements ij constraint cfr 

cfr 

cfr 

tarjan algorithm get strongly connected components sm cs cs cs xy cs return inconsistent network replace remaining topological sort constraints edges involving table algorithm find consistent instantiation pa associated graph pa equivalent substituting classes vertices constrained equal new constraints cs intersections creating equivalence classes algorithm detects inconsistencies replacing 
process equivalent tcp removed performing topological sort gets solution iff original tcp 
relation handled previous steps algorithm distinct time points 
facts result detailed proof soundness see 
proposition algorithm table sound complete input pa constraint problem consistent produces solution detects inconsistency 
takes time 
pf 
tarjan algorithm runs time tasks condensing constraints sort algorithm takes time 
van beek gives algorithm called feasible cfr 
table able find solutions computing minimal constraint problem equivalent input runs max mn number vertices graph number pairs points relation 
algorithm prunes search space means path consistency looks van beek calls forbidden subgraph cfr 

producing equivalence classes proved equivalent strongly connected components graph van beek shows may tarjan algorithm perform task algorithm takes time 
algorithm table relations pa ones 
feasible path consistency find subgraphs find subgraphs st st ts table feasible algorithm find consistent instantiations pa previously observed path consistency complete constraints atomic relations proved complete pa constraints problems translated 
importance algorithm feasible lies fact path consistency sufficient finding minimal constraint problem pa constraints involve van beek suggests solve sa problem translating pa ones solving union solutions algorithm performs number points said unequal minimal 
nb algebra nebel singled maximal subalgebra ia containing allen basic relations called nb satisfiability decided polynomial time 
time interval defined formula bx stays basic allen relations usual write bx formula positive clause form called interval formula briefly write fb bn gx interval interpretation briefly interpretation interpreted allen relations interpreted real intervals 
cfr 


order language equality language lm introduced define nb 
interpretation formulae language interprets real number assigns usual linear order relation 
point form interval formula fb bn gx set clauses lm model translated model set translating allen relations point relations involving negation vice versa 
instance begins gets fb represents point point corresponding interpretation interpret point 
concerned clauses literals allow negation ord point form interval formula fb bn gx written point form compound clauses restricted 
interval formula find ord point form equivalently reduce fr proposition theta set interval formulae theta satisfiable iff theta satisfiable 
pf 
immediate definition 
select subclass closed clauses define nb consider subset nb allen relations st nb ord point form sets clauses contain positive literal clauses called ord horn clauses 
allen relations translated way instance overlapped gamma meets met gamma translated equivalently respect interpretations 
consider theory ord congruence relation respect partial order equivalence classes xx xx proposition finite set gamma ord horn clauses satisfiable iff ord gamma satisfiable 
pf 
gamma satisfiable 

model gamma ord gamma 
suppose ord gamma implies congruence relation gamma logically equivalent model ord gamma partially ordered set extended linearly ordered equivalent embedded follows satisfies gamma 
denote ord gamma skolemization ord obtained means endpoints occurring gamma corollary herbrand theorem get proposition 
proposition ord gamma satisfiable iff ord gamma gamma satisfiable 
give sketch proof completeness path consistency determining consistency nb constraint problems lemma theta path consistent set interval formulae relations nb theta satisfiable iff empty relation occurring theta 
pf 
case analysis possible non unit clauses theta ord theta shows new units derived positive unit resolution path consistency 
refutation completeness positive unit resolution get result 
gamma finite ord gamma finite function symbols 
full proof see 

input set nb relations 
output solution problem consistent nil 

reduce problem path consistent consistent return nil reduced path consistent set nb relations 

execute cfr 
table set pa constraints set unary clauses binary ones soundness algorithm relies fact set relations consisting disjunct clause 
solution computed 

assigning interval endpoint number consistent solution assembled 
table procedure get solution nb problems lemma nb subalgebra ia pf 
difficulty lies showing closure wrt composition 
previous lemmas result follows 
theorem satisfiability set nb relations decided means path consistency 
corollary satisfiability finite subset nb relations decided polynomial time claim holds subalgebra nb 
pf 
path consistency algorithms run theorem claim trivially follows 
sa subalgebra ia subset nb previous result applies sa constraint problems 
method finding solution nb constraint problems constraint problem path consistent takes time number variables problem takes time procedure table 
far seen nb subalgebra ia see maximal including allen atoms important tool prove maximality nb concept closure ia 
definition subset relations ia ia minimal subalgebra ia containing called ia closure closure computed utility 
pivotal role played closure operator clear result 
proposition subset relations ia checking satisfiability ia polynomial np complete problem iff respectively pf 
cfr 

theorem nb maximal subalgebra nb containing allen atoms consistency decided polynomial time 
pf 
nb subalgebra ia ia strictly contain nb relations running utility turns closure includes relations checking satisfiability np complete proposition follows satisfiability np complete 
new maximal subalgebras line research open finding subalgebras ia incomparable nb consistency decided polynomial time 
intractable subsets main subsets allen relations prove intractability subalgebras ia definition 
definition call set relations includes overlaps meets finished gamma byg overlaps meets define sets allen relations 
means subset ia containing closed converse intersection composition 
cfr 
lemma 
cfr 

includes overlapped gamma started gamma overlaps overlapped gamma started gamma finished gamma byg overlapped gamma byg overlapped gamma meets met gamma byg met gamma byg starts started gamma finishes finished gamma byg fact intractable proved 
tractable subalgebras allen atoms meets met gamma compound relations 
includes overlaps meets starts finished gamma byg overlaps meets started gamma finished gamma byg overlaps meets starts overlaps meets starts finished gamma byg definition set allen relations satisfy conditions 
fb gamma fbg fb gamma gamma proposition distinct sets algebras containing elements furthermore contains exactly basic relations gamma 
pf 
see 
algebras contain relations relations needed express notion sequentiality useful argue actions 
nb algebra contain relation express notion sequentiality 
gamma gamma 
easily verified running utility 
sat redirect arcs get relations remove arcs labels call result find strong arc relation contain connects nodes sc reject accept table feasible algorithm find consistent instantiations pa algorithm solve satisfiability table input constraint problem represented directed labeled graph label arc iff constraint relation runs time number interval variables cfr 

simply interested tractable subalgebras ia maximal ones 
proposition finishes starts maximal tractable algebras 
gamma ones tractable 
pf 
running utility minimal extensions generated adding relation computing closure ia new set closure set generated ia deciding satisfiability ia np complete problem proposition result follows 
extensions algebras 
maximal tractable subalgebra ia defined 
definition algebra contains relations contains empty 
algebra easily verified hand contains elements 
easy algorithm check satisfiability relation contains empty inconsistency satisfiable 
arguing maximal algebra means utility get result 
proposition maximal tractable algebra 
notwithstanding cardinality fact maximal tractable subalgebra ia expressive power clearly weak 
adopted techniques prove consistencies ia problems split compound relations relations algebra path consistency algorithm complete turns path consistency algorithm complete algebras 
theorem algebras definition path consistency algorithm decides satisfiability pf 
cfr 

tractable subalgebras metric constraints drakengren jonsson identify tractable subalgebras ia metric constraints form horn disjunctive linear relations expressiveness subsume nb algebra 
order define new algebras need introduce new order language extension lm means binary function symbol intended interpretation sum numbers 
definition linear relation finite set real valued variables say set fx xn expression form constant symbols stay real numbers 
disjunctive linear relation dlr fx xn disjunction linear relations 
dlr said horn iff disjuncts form 
proposition polynomial time algorithm decide satisfiability horn dlrs 
pf 
cfr 
maximal algebras expressible horn dlrs 
give explicit transformation interval relations point relations 
definition suppose allen basic relations interval variables define binary relation sprel starting points way 
cfr 
section 
sprel sprel sprel sprel overlaps sprel meets sprel starts sprel finishes sprel gamma sprel gamma similarly define binary relation points case compound relation bn sprel sprel sprel 
furthermore sprel sprel finishes finished gamma byg symmetrically sprel sprel starts started gamma byg 
drakengren jonsson transformation transfer information interval relations point relations vice versa maintaining satisfiability define new classes subalgebras ia calling starting point point algebra algorithm procedures checking satisfiability horn pa dlrs able decide algebras satisfiable polynomial time 
identify new subalgebras ia definition 
definition define relations 
overlapped gamma met gamma overlaps meets relations overlapped gamma define set relations holds 
fb gamma fbg starts started gamma byg fb gamma gamma starts started gamma byg starts started gamma byg defined set relations satisfying conditions 
fb gamma fbg finishes finished gamma byg fb gamma gamma finishes finished gamma byg finishes finished gamma byg observe rs contains basic relations interval variables gamma gamma hold model symmetrically re equivalent holding model 
define set relations satisfying conditions 
finishes finished gamma byg finished gamma byg gamma started gamma byg finished gamma byg gamma started gamma byg gamma byg gamma starts started gamma byg replacing finishes starts inverses starts started gamma byg finishes finished gamma byg get subset main results concerning new sets collected proposition proof cfr 

proposition starting point algebras point algebras :10.1.1.30.1586
algebras contain elements contain basic relations contained gamma starts started gamma contained gamma finishes finished gamma algebras relations expressible horn dlrs 
fact easily proved observing point relations induced allen relations includes overlaps overlapped gamma finished gamma starts horn dlrs 
result allows algorithm order check satisfiability new subalgebras ia tractable algebras 
running utility see algebras maximal tractable subalgebras ia proposition algebras maximal tractable 
classification drakengren jonsson general classification maximal tractable subclasses allen algebra 
set equipped operator cr suppose problem satisfiability sat defined satisfying 
sat np complete sat np complete 
sat np complete sat np complete containing 
sat polynomial sat polynomial rp subsets sat polynomial rp np complete furthermore rp theorem subset cardinality rp satisfies rp cr containing sat polynomial iff subset set rp np complete 
pf 
cfr 
pg 

allen algebra satisfies hypotheses theorem 
satisfiability problem allen algebra np hard set basic relations ia get result 
proposition subset ia meets relations subset ord horn algebra satisfiability problem np complete 
applications theorem get propositions 
running utility 
proposition subset ia relations subset nb algebra satisfiability problem np complete 
result reduces number basic relations allowed maximal tractable subalgebra ia included nb algebra call class algebras 
proposition subset ia overlaps starts finishes basic relations subset nb algebra satisfiability problem np complete 
result remaining proposition reduce number basic relations allowed 
proposition subset ia starts basic relations subset nb algebra subset satisfiability problem np complete 
subset ia starts overlaps basic relations subset nb algebra subset overlaps satisfiability problem np complete 
result holds replacing finishes starts synthesis maximal tractable subalgebras ia included nb algebra contain basic relations overlaps starts finishes relations subalgebra get classification result 
proposition subset ia relations satisfiability problem np complete 
main techniques find solution general problem path consistency path consistency heuristic test consistency backtracking search consistencies applied cessing algorithm interleaved techniques 
discussed technique proposed approximate solutions ia backtracking algorithms backtracking finding solution proceeds instantiating variable time consistent instantiation variable examination search backs 
order variables instantiated values chosen domains turns important speeding backtracking algorithms 
idea variable ordering heuristics instantiate variables constraint instantiation variables way possible backtracking search executed delayed 
value ordering heuristics aim ordering values constraint choices variables values part possible solution 
subalgebras ia restrict search tractable subproblems ia find solutions ia problem splitting ia problem tractable ones chosen deal pa nb trying find consistent instantiation assembling solutions general ia problem 
particular choosing pa nb follow procedure look subproblem sa ia selecting constraint fb subset allowed relations get sa problem translate sa problem pa check consistency applying pa till seventh line apply path consistency algorithm done translate sa problem pa pass algorithm find consistent instantiation see table 
idea algorithm similar previous splitting ia problem possible consistent sa ones cfr 

bn allen atoms 
cfr 
table 

find consistent sa constraint subproblem backtrack search time inconsistent detected sa problem return inconsistent 
translate pa constraint problem 
run 
applying feasible solution ia problem union solutions 
procedure turns useful improved interleaving backtracking algorithms instance solution particular subclass apply variable ordering heuristic speed search 
second procedure practical small instances problem 
nb path consistent nebel modifies ladkin algorithm gain path consistent problem works subalgebra ia path consistency equivalent consistency prune search space reducing cp path consistent choose unprocessed constraint select subset allen relations belongs subalgebra chosen instance nb re run path consistency algorithm instantiate chosen constraint relation time running path consistency algorithm new cp obtained 
relations qualitative quantitative approaches metric constraints points qualitative constraints intervals attempt mix qualitative interval approach quantitative point logical framework able capture expressive power languages complexity results optimal general framework introductory developments 
order sorted language introduced formalize allen relation algebra meiri pearl enriched deal cfr 

strict inequalities types points intervals 
definition sorted order language introduced way distinct types variables ffl point variables corresponding rational numbers ffl interval variables corresponding rational valued intervals function constant symbols ffl set interval variables point variables ffl gamma formalizes subtraction rational numbers function set couples point variables set point variables ffl point functions construct rational numbers ffl constant symbol type point classes relation symbols ffl binary relation symbols iff point terms ffl relation symbols corresponding allen relations including holding interval terms 
formulas form bn bn atoms algebra called simple allen constraints sublanguage called la formulas form gamma gamma may replaced numerals called simple metric constraints sublanguage called lm cfr 

stays left endpoint right 
kautz ladkin series axioms get intended model time ffl arithmetic axioms gamma numerals ones include xx ffl ffl axioms allen atoms 
gamma gamma gamma gamma 
gamma 
meets gamma gamma 
overlaps gammal gammar gammar 
starts gamma gamma gamma 
gamma gamma 
finishes gamma gamma gamma compute minimal equivalent constraint problem simple temporal constraint problem strict inequalities procedure page adding constraints state left point interval right interval variable problem add arc label kautz ladkin method compute minimal constraint problem representation case simple temporal constraints strict inequalities approximation algorithms constraints la combining procedures get constraint satisfaction algorithm la lm allen constraints metric ones computed new allen constraints derived metric ones added new metric constraints derived new allen constraints till new constraints derived 
procedure sound optimal runs number intervals appear time required compute 
qualitative constraints points intervals quantitative constraints points meiri combines qualitative constraints intervals ii points pp quantitative ones points mixed ones points intervals pi intervals points ip 
cp stated ffl sorted order language definition augmented new binary relation symbols ip pi constraint relations ffl external constraints unary metric ones binary qualitative intervals points quantitative ffl internal constraints relate interval variable points 
starts finishes starts finishes 

relation order constraints type usual relation extended cps saying cp cp constraint cp set variables constraint cp 
equivalent cps closed intersection exists unique minimal cp equivalent 
constraint adopted serve different purposes 
aim finding solution cp decomposing singleton constraint subproblems solvable polynomial time backtracking algorithms improve search 
path consistency introduced prune search space compute approximation minimal constraint problem 
meiri identified classes tractable problems solvable polynomial time class consists cps composed qualitative constraints points pa unary quantitative constraints points ii 
second class consists cps path consistency algorithms exact 
cfr 

assuming variable different type 
qualitative constraints qualitative constraint points pp intervals ii point interval pi ip disjunction basic relations possible types ii allen ones pp pi ip cfr 
fg 
table 
qualitative algebra qa relational algebra elements allen relations pp relations pi ones remaining ip ones 
internal operations intersection denoted composition denoted fi tables pp 
meiri corresponds illegal combinations 
quantitative constraints constraints relate points unary binary cases constraint represented set intervals fi open closed sides relation variables 

relations qualitative quantitative constraints existence constraint points say certain type imply existence constraint type points writing quant constraint quantitative set intervals fi qual subset involving get implications 
quant qual quant qual st quant qual st quant qual 
qual quant qual quant qual quant qual gamma quant 
operations intersection composition extended constraints quantitative type qualitative way ffl qualitative type quant ffl type pp fi quantitative type fi quant type pi fi qualitative type qual fi hierarchy qualitative constraint problems constraints ii ia constraint problem constraints pp relations constraint pa particular relations involve constraint subproblem pa called convex pa briefly cpa constraints pi ip relations cp called interval point algebra cp briefly ipa constraint problem 
net set qualitative constraints represented cp type instance represented pa constraint problem pa constraint problem 
proposition set qualitative constraints hierarchy net cpa ae net pa ae net ipa ae net ia know checking satisfiability ia constraint problems np hard problem furthermore result proof requires internal constraints 
theorem deciding consistency ipa constraint problem np hard 
pf 
reduction betweenness problem stated non empty set set ordered triplets elements question function triplet distinct elements 
new class tractable problems augmented qualitative constraint problems points quantitative constraints cpa pa constraint problems augmented unary quantitative constraints considered constraints domains kinds 

discrete finite domains case deal cpa constraint problems arc consistency ensure consistency deciding consistency pa constraint problems discrete finite domains np hard 

single interval domains dn exclude finite number values case deal convex single interval domains nonempty arc consistent acyclic pa constraint problem convex single interval domains consistent reduced constraint problem minimal algorithm runs time nonempty arc consistent path consistent pa constraint problem convex single interval domains consistent reduced minimal algorithm runs time single domains convex single interval domains 

multiple intervals domains nonempty arc consistent acyclic cpa constraint problem consistent minimal meiri gives algorithm runs log time cyclic requires path consistency order ensure consistency minimality algorithm takes time 
second class tractable problems general constraint problems kinds algorithms proposed exact exponential ones path consistency ones incomplete 
idea adopted usual splitting original csp ones constraints basic types solvable polynomial time combine partial solutions get 
reduce constraint problem obtained substituting closed domain input cp arc consistent reduced arc consistent 
chapter writing thesis meant reading great amount literature temporal reasoning constraint programming dealing different formalizations temporal constraint programming trying get homogeneous 
divided literature temporal constraint programming main streams classified research algorithms solving tcps characterized study algebraic logical properties underlying temporal constraint frameworks 
classification turned simplistic fields clearly separate seen investigation allen subalgebras main tools reasoning qualitative approach temporal constraint programming motivated fact problem satisfiability allen algebra ia turned np hard preferred classify different approaches temporal constraint programming main branches chapter 
main approaches identified quantitative metric introduced dechter meiri pearl qualitative allen interval algebra 
metric characterization shows efficiency dealing temporal problems involving metric information paulo leaves home eyal goes park 
allen approach useful temporal information focuses relations intervals cfr 
theorem 
wakes instance relation disjointness intervals example just proposed characterized metric approach binary constraints 
section discussed seminal dechter meiri pearl temporal constraint programming metric information satisfiability problem general framework np hard authors researched called simple temporal problems 
studied literature concerning approach useful tool enhance search solutions general temporal constraint problems approximate 
section cfr 
tried summarize main techniques dealing kind constraint problems 
section qualitative approach focusing allen interval algebra 
satisfiability problem constraint problems ia np hard directed attention subalgebras ia tractable expressive applications instance introduced pa algebra properties tool studying ia problems 
idea guided rest exposition introduced metric temporal problems section study interesting subalgebras ia fact promising direction research aims classifying maximal tractable subalgebras ia different expressive power instance seen algebra nebel maximal tractable subalgebra ia contains allen atoms express relation sequentiality relation expressed maximal tractable subalgebras drakengren jonsson metric approach section reviewed summarized main techniques constraint programming offers solve ia problems main path consistency historical reason guarantee consistency tractable subalgebras 
section briefly introduced new line investigation called mixed approach 
research open field local consistency procedures new classes constraint relations currently investigation temporal constraint programming grow consid cfr 
theorem 
cfr 

cfr 
definition 
cfr 

eration event calculus systems adopted reason actions changes 
frameworks time ontological object events fluents states actions identified period occurrence choice provides computational logical system easy manage efficient 
creation new constraint logical system events fluents actions considered new objects different type represents attractive challenge warm due amsterdam friends enriched days patiently listened little doubts paulo shared working summer discussing temporal constraints events important ones concerning brazilian music little italy amsterdam riccardo marco forget carlos nikos eyal lucky meet long year 
krzysztof apt hans rott johan van benthem illc members helped 
discussion shanahan cfr 

direction proposed 
bibliography james allen 
knowledge temporal intervals 
comm 
acm 
james allen 
general theory action time 
ai 
james allen george ferguson 
actions events interval temporal logic 
journal logic computation october 
james allen patrick hayes 
moments points temporal logic 
computational intelligence 
apt 
chaotic iteration constraint propagation 
icalp pages 
springer verlag lecture notes computer science 
apt 
logic programming prolog 
prentice hall 
apt 
essence constraint propagation 
theoretical computer science 
press 
apt 
proof theoretic view constraint programming 
fundamenta informaticae 
press 
apt olderog 
verification sequential concurrent programs 
springer verlag 
apt turini 
meta logics logic programming 
mit press 
fahiem bacchus peter van beek 
conversion nonbinary binary constraint satisfaction problems 
proceedings th national conference artificial intelligence madison wisconsin july 
thomas cormen charles leiserson ronald rivest 
algorithms 
mit press mc edition 
rina dechter meiri judea pearl 
temporal constraint networks 
ai 
rina dechter peter van beek 
local global relational consistency 
theoretical computer science 
thomas drakengren peter jonsson 
maximal subclasses allen algebra metric time 
journal artificial intelligence research 
thomas drakengren peter jonsson 
complete classification tractability allen algebra 
ijcai 
thomas drakengren peter jonsson 
large tractable subclasses allen algebra 
ai 
eugene freuder 
partial constraint satisfaction 
ijcai proceedings th international joint conference artificial intelligence pages detroit 
eugene freuder richard wallace 
partial constraint satisfaction 
artificial intelligence 
antony galton 
critical examination allen theory action time 
artificial intelligence march 
alfonso gerevini 
temporal constraint networks inequations 
technical report rt dipartimento di elettronica universit di november 
alfonso gerevini 
finding solution temporal constraint satisfaction problems 
proceedings fifteenth international joint conference artificial intelligence ijcai pages nagoya japan august 
alfonso gerevini schubert 
efficient temporal reasoning 
proceedings thirteenth international joint conference artificial intelligence ijcai pages chamb ery france 
morgan kaufmann 
alfonso gerevini schubert 
efficient algorithms qualitative reasoning time 
ai 
alfonso gerevini schubert 
computing minimal labels time point algebra networks 
computational intelligence 
hamlet hunter 
representation time medical expert systems 
proceedings european conference artificial intelligence medicine pages 
jaffar michael maher 
constraint logic programming survey 
journal logic programming 
henry kautz peter ladkin 
integrating metric qualitative temporal reasoning 
proceedings aaai 
grzegorz peter van beek 
theoretical evaluation selected backtracking algorithms 
ai magazine 
manolis koubarakis 
dense time temporal constraints 
kr pages 
manolis koubarakis 
local global consistency temporal constraint networks 
tcs 
peter ladkin 
logic time representation 
phd thesis university california berkeley 
peter ladkin roger maddux 
binary constraint networks 
technical report tech 
rept 
kes kestrel institute 
peter ladkin roger maddux 
binary constraint problems 
journal acm 
peter ladkin alexander 
fast algebraic methods interval constraint problems 
appear mathematics artificial intelligence 
peter ladkin alexander 
effective solution qualitative interval constraint problems 
ai 
erard ligozat 
corner relations allen algebra 
actes aaai workshop spatial temporal reasoning portland oregon 
erard ligozat 
new proof tractability ord horn relations 
aaai portland oregon 
henry kautz marc vilain 
constraint propagation algorithms temporal reasoning 
proceedings fifth national conference artificial intelligence pages 
meiri 
combining qualitative quantitative constraints temporal reasoning 
aaai volume pages 
ugo montanari 
networks constraints fundamental properties applications picture processing 
information science 
bernhard nebel 
solving hard qualitative temporal reasoning problems evaluating efficiency ord horn class 
constraints 
bernhard nebel hans jurgen 
reasoning temporal relations maximal tractable subclass allen interval 
journal acm 
paulo eduardo santos 
formalizing common sense mobile robot 
master thesis illc amsterdam netherlands 
eddie rina dechter 
coping disjunctions temporal constraint satisfaction problems 
aaai pages 
eddie rina dechter 
processing disjunctions temporal constraint networks 
ai 
eddie rina dechter 
temporal reasoning constraints fluents events 
aaai volume pages 
murray shanahan 
solving frame problem 
mit press 
stock 
spatial temporal reasoning 
kluwer academic publishers 
ra ul vald es erez 
satisfiability temporal constraint networks 
proceedings sixth national conference artificial intelligence pages 
peter van beek 
approximation algorithms temporal reasoning 
proceedings th international joint conference artificial intelligence pages detroit michigan august 
peter van beek 
exact approximate reasoning qualitative temporal relations 
phd thesis university waterloo 
peter van beek 
reasoning qualitative temporal information 
ai 
peter van beek robin cohen 
exact reasoning temporal relations 
computational intelligence 
peter van beek rina dechter 
constraint tightness looseness versus local global consistency 
journal acm 
peter van beek dennis 
design experimental analysis algorithms temporal reasoning 
journal ai research 
van benthem 
logic time 
reidel 
lu vila 
survey temporal reasoning artificial intelligence 
ai communications march 
