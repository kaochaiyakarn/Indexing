git cc syntax semantics interaction sentence understanding mahesh mahesh crl nmsu edu thesis academic faculty partial fulfillment requirements degree doctor philosophy computer science georgia institute technology march copyright fl mahesh rights reserved syntax semantics interaction sentence understanding approved kurt eiselt chair susan bovair jennifer holbrook ashwin ram spencer rugaber date approved chair dedication wife sister kn ii acknowledgments am deeply indebted advisor kurt eiselt 
helped step graduate career walked office quarter sign course 
guided search maze language processing literature led right topic dissertation enjoyed working minute time just get past qualifying examinations 
continually shared vision understand language inspired years 
patiently taught write papers mystery story approach generously lent style guides writing manuals 
encouraged helped tremendously publishing parts variety rate conferences workshops 
spend bulk discretionary funds travel expenses attending conferences 
taught teach proved trust giving opportunity teach graduate class come back resumed teaching class middle quarter 
impossible count number letters written complained matter times walked office day 
advisor mentor friend guru true sense word 
ashwin ram lot committee member shown keen interest come presentation asked right questions invaluable ideas helped shape expand comprehension field 
learned teaching assistant 
patiently taught graduate school requirements 
source excitement enthusiasm nlr meetings ai group general 
ashok goel source ideas numerous discussions personal meetings group meetings corridors late nights taught think issues ai language processing 
owe little understand functional reasoning design 
include group students asked stupid questions really outsider 
supported ka project knowing completing thesis afford frequent context switches project demanded 
ideas ka project expanded horizons far sentence understanding 
jennifer holbrook source ideas gateway psycholinguistics 
posed challenging problems shown complete confidence job developing ideas human language processing working computational model 
read written great detail detailed comments ranging simple grammar corrections style improvements insightful theoretical remarks 
comments psycholinguistics chapter particularly useful 
susan bovair served committee provided useful criticism psychologist perspective especially chapters thesis 
integral part nlr group research games played group 
spencer rugaber agreed join committee read commented thesis short notice 
comments point view computer scientist outside area artificial intelligence truly valuable 
iii members natural language reasoning nlr interdisciplinary research group served source ideas motivation language related research 
taught think language perspectives linguistics social science education literature culture communication 
charles truly instrumental giving broad education study language diverse perspectives 
patiently listened naive ideas computational perspective worked turning ideas research proposal building computer tool teach writing skills 
william evans insists believing learned natural language processing introduced interesting pieces communication science bibliometric studies 
wendy deserves special mention bringing functional perspective linguistics group 
taught lot teaching language skills education evaluation general 
fellow students group andy edmonds anthony francis lucy gibson kenneth justin peterson james added tremendously excitement group 
course group existed time effort interdisciplinary interest shown faculty members group susan bovair kurt eiselt ashwin ram 
making fun unique group belong 
faculty cognitive sciences georgia tech contributed significantly shaping interests views 
particular acknowledge interest encouragement janet kolodner lawrence barsalou tony simon lawton ron arkin 
special janet kolodner ways provided generous financial forms support 
richard billington complained numerous software machine problems taken years 
help problems lisp networks old symbolics 
ed anderson kathy ball taught teaching assistant early times 
justin peterson contributed enormously 
treated smaller language brothers helped shape ideas better 
pointed right literature taught things syntax think right directions 
working ka project especially enjoyable justin 
graduate school murali shankar 
entered program learned tricks graduate school survival 
especially sam entertaining conversations ai lounge help outside school 
especially enjoyed gossip sessions 
members ai group including michael cox anthony francis andres gomez kenneth added part place fun interesting 
kenneth james patiently worked compere spite bugs inordinate delays attempted fix bugs 
guys believing written program 
members administrative staff college computing helpful 
special susan tempo alford favors letting walk offices kurt chamber time 
ai secretaries helped way 
supported part course research research northern telecom 
special caring friend 
friends atlanta outside school especially suresh provided invaluable entertainment life graduate student easier go 
special members association making part team iv great friendship 
means wife best friend contributed small measure success thesis 
stresses thesis writing rewriting job hunting complaint shown unlimited faith confidence thesis possible encouragement support 
parents contributed start values higher education learning supported way 
apart parents person supported way possible life sister kn 
provided moral social financial support graduate study possible 
years away home stopped writing letters regularly keep informed back home allowed feel left family 
contribution brother back home 
dedicate thesis kn 
contents dedication ii acknowledgments iii list tables xi list figures xii summary xiv chapters sentence understanding natural language understanding sentence understanding task sentence understanding questions previous solutions modularity debate hypothesis solution overview implementation evaluation compere action example contributions organization thesis ii 
principles claims assumptions principles questions claims predictions assumptions iii 
psycholinguistic theory sentence understanding overview psycholinguistic studies immediate interaction studies additional support immediate integration analysis studies additional support syntactic autonomy studies error recovery lexical pragmatic error recovery syntactic error recovery unified theory error recovery studies resource constraints multiple analysis models studies aphasia analysis evidence claims combining functional independence integrated processing implications error recovery studies implications resource constraints vi modularity debate reconciliation discussion summary iv 
functional theory sentence understanding functional constraints natural language understanding incremental interpretation determinism error recovery functional independence sentence understanding task input output problems sentence understanding ambiguity typology ambiguities knowledge sources language understanding types knowledge task decomposition incremental communication subtasks example syntax semantics communication sentence processing architectures need communication functional motivation ambiguity cognitive constraints generativity integrated representations nature communication interaction knowledge sources syntax types top guidance bottom parsing syntactic expectation semantic conceptual preference structural preference control parsing need arbitration mechanism translation alternative intermediate roles sentence processing architectures architectural dimensions sequential architecture integrated architectures parallel architectures architectures syntax semantics communication compere architecture unified process 
issues syntax semantics communication related models sentence understanding sequential models integrated models spreading activation models models summary vii vi 
theory parsing semantics combining bottom top parsing need combine bottom top methods parsing strategies sources justification syntactic commitments constraints human parsers local ambiguities memory requirements preliminaries spectrum parsing strategies arc enumeration strategies required versus optional constituents bottom top 
reasons mixing bottom top strategies problems left corner parsing head signaled left corner parsing hslc parsing space requirements hslc local ambiguities hslc related parsers head corner parsing lookahead parsers categorial grammars nature syntactic preferences summary vii 
theory semantics communicate syntax semantics different views semantics elements linguistic semantics semantic roles thematic roles extended set semantic roles intermediate roles linking theory thematic hierarchies semantic processing role assignment syntactic guidance semantics role assignment parsing role emergence syntax semantics consistency correspondence independence semantics arbitration conflict resolution viii 
compere sentence understanding system knowledge representation lexical knowledge syntactic knowledge preconditions expectations syntax indexing bottom parsing required units head compere representation syntactic rules head pp conceptual knowledge role knowledge intermediate roles knowledge viii working memory representing proposed attachments sentence processing methods implementation hslc parsing algorithm deciding attachments identifying possible parents proposing attachments selecting proposed attachments making attachments implementation role assignment generating semantic attachment proposals processing left roles semantic preference levels selecting making role attachments constraints role assignment arbitration implementing arbitration algorithm resolving lexical semantic ambiguities retention elimination alternatives implementation error recovery algorithms composition failure incompleteness failure recovery induced errors compere program ix 
performance analysis evaluation validation compere program simple sentences relative clauses structural ambiguities pp attachment ambiguities phrase boundary ambiguities multiple ambiguities challenge claims revisited syntactic coverage semantic coverage claim integrated processing independence claim functional independence claim synchronizing syntactic semantic compositions claim error recovery claim syntax semantics interaction arbitrator comparative analysis architectures sequential architectures semantics architecture integrated architectures uncontrolled parallel architectures formal analysis compere intuitions compere automaton operations automaton simple cost metric cost metric computing size parse forest cost metric assumptions cost metric validity cost center embedding cost parsing decisions performance analysis simple sentences performance analysis pp attachment ambiguity ix performance analysis modifiers prefix performance analysis complex example performance tradeoffs sentence processing formal analysis tradeoffs prediction tradeoffs left corner projection tradeoffs eager reduction empirical factors discussion psychological predictions compere predictions interactive error recovery compere architecture error recovery retention sketch experiment third prediction history compere limitations compere cognitive accuracy resource limits flexible parsing eager hslc limitations limitations current compere program directions xi 
issues addressed contributions list tables semantics word sentence 
architectural space sentence 
syntax semantics communication various architectures 
comparative summary sentence understanding models 
space requirements local ambiguities parsing strategies 
preference levels syntax 
preference levels semantics 
operator preconditions compere 
cost metric calculation example 
cost center embedding 
cost center embeddings 
performance comparison simple sentence 
performance comparison pp attachment ambiguity 
performance comparison unambiguous pp attachment 
performance comparison effect modifiers prefix 
performance comparison complex noun group 
performance comparison complex example 
xi list figures architecture compere 
garden path main clause interpretation 
garden path reduced relative clause 
reduced relative clause garden path 
main clause interpretation 
reduced relative clause 
minimal prepositional attachment 
non minimal prepositional attachment 
right association 
task decomposition information flow sentence understanding 
syntactic structures word sentence part 
syntactic structures word sentence part 
syntactic structures word sentence part 
sequential architecture 
integrated architecture 
various sentence processing architectures 
forster levels processing model 
top parsing 
bottom parsing 
left corner parsing 
head driven parsing 
arc standard left corner parsing 
sentence branching structures 
arc eager left corner parsing eager 
arc standard left corner parsing 
relative positions parsing strategies 
hslc algorithm 
illustration data structures hslc parsing 
hslc head signaled left corner parsing 
right branching construct 
syntax guided role assignment 
role assignments guided syntactic attachments 
representational unit node 
representation lexical knowledge 
simple grammar 
typical structure phrase xp 
representation simple grammar 
representation conceptual knowledge 
representation intermediate role knowledge 
compere working memory 
ways making syntactic attachments 
pseudocode proposing syntactic attachments 
processing left role 
arbitration algorithm 
arbitration benign situation 
xii arbitration conflict situation 
error recovery composition failure 
error recovery incompleteness failure 
simple sentence 
aux ambiguity sentence 
passive voice sentence 
reduced relative garden path sentence 
relative clause sentence 
relative clause sentence 
relative clause sentence 
reduced relative semantic bias 
complete sentence semantic bias 
center embedded sentence 
resolving structural ambiguity resolves lexical ambiguity 
recovering garden path lexical ambiguity 
syntax violates semantic bias 
unambiguous pp attachment 
pp attachment ambiguity 
attachment ambiguity 
local phrase boundary ambiguity 
multiple lexical category ambiguities 
sequential architecture 
interaction syntax semantics parser 
interaction syntax semantics compere 
sentence interpretation automaton 
contents stack example 
tradeoffs left corner projection prediction 
tradeoffs eager reduction cost reduction left corner 
tradeoffs eager reduction cost delayed head composition 
tradeoffs eager reduction cost delayed postfix composition 
multiple ambiguities composite errors 
xiii summary natural language primary mode human communication 
developing complete computational model language understanding difficult problem 
understanding natural language sentence requires application types knowledge syntactic semantic conceptual knowledge resolve types ambiguities abound natural language 
unresolved issues psychological computational modeling sentence understanding concerned questions various types knowledge applied processing sentence different types knowledge integrated select unique interpretations sentences 
developed model sentence understanding called compere cognitive model parsing error recovery 
model built hypothesis sentence processor architecture separate representations different types knowledge single unified process integrates different types knowledge 
shown architecture addresses modularity debate demonstrating sentence processor produce seemingly modular behaviors situations interactive behaviors situations 
shown unified arbitrating process resolve syntactic semantic lexical structural ambiguities recover errors syntactic semantic ambiguity resolution 
unified process explain temporal dependencies syntax semantics interactions 
shows certain decisions early delayed information available 
developed parsing algorithm called head signaled left corner parsing identify time course points sentence decisions 
algorithm decides commitment delay syntactic attachment 
developed simple arbitration algorithm combining information coming multiple knowledge sources resolving conflicts 
addition developed uniform representation syntactic semantic interpretations called intermediate roles 
intermediate roles aid dynamic integration knowledge types unified arbitrator provide declarative record intermediate decisions syntax semantics interactions enable processor recover errors repair complete reprocessing 
theoretical framework formal analyses performance sentence processors various situations 
analyses indicate hslc parsing algorithm incremental interactions syntax semantics controlled unified arbitrator reduces amount local ambiguity working memory requirements processing sentence 
certain psychological predictions compere model 
conclude study model sentence understanding unified process xiv applied independently multiple knowledge sources provides answer modularity debate explains better possible architectures human sentence processor produces wide variety behaviors 
chapter sentence understanding strongest argument advocating semantics driven syntax analysis ability people interpret sentences semantic clues face syntactic errors missing information analogous argument direction people syntactic rules semantics lacking ultimately want analyzer partial information kind research direction welcomed grishman 
natural language understanding natural language english primary mode human communication 
advances technology electronic devices networks opened new media communication primarily natural language 
processing speeds storage capacities modern computers multiplying rapidly availability natural language texts line communication storage burgeoning great extent 
current techniques processing texts simple string matching proving increasingly insufficient 
opened expanding range applications text processing requiring deeper analyses texts terms syntax semantics natural languages 
immediate need develop robust flexible efficient techniques processing texts words sentences larger units merely sequences characters little syntax semantics 
effective communication natural language possible far language processor human brain 
psychological investigations human language processing variety intricate techniques led considerable insight working human language processor 
attempts build psychologically real computational models language processing face considerable obstacles translating constraints put forth psycholinguistic theories representations processes constitute computational model 
natural languages specification languages designed program machines evolved permit high degrees ambiguity redundancy vagueness 
features natural language crucial flexibility effectiveness natural language communication hampered efforts build artificial language processors 
proliferation ambiguities natural language processing flexibility ease human language deal captured attention researchers artificial intelligence ai linguistics psycholinguistics cognitive sciences 
researchers trying build cognitive models language understanding puzzled architecture language understander produce diverse behaviors ambiguity resolution observed human language understanding early commitment carpenter just frazier wanner garden paths crain steedman delayed decisions stowe parsing breakdown lewis error recovery carpenter eiselt eiselt holbrook 
ambiguities encountered language analysis 
example natural language sentences full ambiguities word meanings assigning unique syntactic structures sentences possible ways combining individual word meanings 
order arrive unique interpretation sentence ambiguities resolved 
left unresolved ambiguities lead combinatorial explosion possible interpretations input 
model natural language understanding simply charts possible interpretation making selection implausible account human language comprehension limited working memory capacities human brain model soon bogged large number possibilities unable provide useful output computational task involving natural language input 
resolving ambiguities requires language processor employs variety different types knowledge 
ambiguities resolved knowledge individual words meanings information word finds dictionary lexicon knowledge grammar language called syntactic knowledge knowledge possible semantic relationships classes meanings conceptual knowledge particular context natural language communication place domain discourse 
majority unresolved issues theories sentence processing ambiguity resolution concerned questions various types knowledge applied processing sentence different types knowledge integrated select unique interpretation sentence 
computational point view important find answers questions natural language processors need able apply right types knowledge right times reduce local ambiguity produce unique interpretations demanding unreasonable amounts complete specific knowledge domain context example 
issues equally important point view psychological modeling human sentence processing 
model apply type knowledge decisions knowledge order model explain variety human behaviors sentence processing documented psycholinguistic literature 
sentence understanding task thesis address problem resolving different types ambiguities processing natural language sentence 
focus problem interpreting individual sentences ignoring higher level issues discourse processing inference reasoning non linguistic contextual phenomena 
input sentence understander sentence complete grammatical natural language 
sentence characterized linear sequence words language 
output desired sentence understander include events objects properties objects thematic role relationships events objects sentence 
addition may desirable include syntactic parse structure sentence output 
fundamental problem mapping input output high degree ambiguity natural languages 
types knowledge syntactic semantic knowledge resolve ambiguities identify unique mappings input desired output 
semantic knowledge knowledge literal decontextualized grammatical meaning see chapter frawley 
conceptual knowledge hand knowledge world regardless form appears language 
task sentence understanding problem ambiguity knowledge resolve ambiguities discussed chapter thesis 
sentence understanding questions thesis concerned primarily questions various types knowledge syntactic semantic knowledge applied processing natural language sentence integrated select appropriate interpretations set possible interpretations sentence 
answers questions derived psycholinguistic results variety studies reviewed chapter computational considerations sentence processing architectures chapters 
specifically ask questions regarding knowledge derive unique interpretations sentences provide answers computational psychological motivations 

different types knowledge integrated sentence processing 
conflicts resolved 

decisions resolve ambiguity selecting set possible interpretations sentence processor attempt decision order minimize local ambiguity 

happens previously decisions lead error 
sentence processor recover different types errors 
know sentence processor syntactic semantic lexical conceptual knowledge order resolve ambiguities sentences 
different types knowledge represented applied sentence processing 
example integrated priori various combinations represented applied separately integrated dynamically sentence interpretation 
happens different types knowledge conflict comes determining unique interpretation sentence 
sentence processing time location sentence processor attempts resolve ambiguity considerable differences amount local ambiguity processor struggle 
example processor resolve ambiguity information necessary resolve ambiguity dealing ambiguity resolved ambiguity available information 
hand processor attempts decision right knowledge enables suffers problems 
increases amount ambiguity considering alternatives ambiguity unable select adds ambiguity current interpretation decision justified piece knowledge runs possible errors times 
processor attempts resolve ambiguity exactly point necessary information available carries ambiguities longer necessary adds ambiguity considering alternative possibilities information choose 
spite applying variety types knowledge spite applying right time sentence processor bound run errors 
information ask basic question different types knowledge play role language understanding 
raise question thesis 
assume knowledge sources commonly employed linguistics psycholinguistics computational linguistics natural language processing syntax semantics essential resolving ambiguities sentences 
see introductory textbook allen grishman explanation role syntax semantics natural language understanding 
necessary resolve ambiguity convincingly may available processing sentence 
processor forced best decision knowledge currently available lack resources need early commitments produce incremental interpretations order avoid combinatorial multiplications ambiguities 
happens error detected 
sentence processor recover error change interpretation switching interpretation repairing current interpretation 
previous solutions number models sentence understanding psychological cognitive models computational models proposed address questions 
models complete models sentence processing address subtask sentence processing syntactic processing resolving lexical ambiguities resolving pronoun 
assumed simple linear architecture models type knowledge say syntactic knowledge applied types knowledge semantic knowledge applied stage resolve remaining ambiguities 
third class models approach known integrated processing 
previous implementations models integrated different types knowledge priori representations 
achieved directly encoding commonly occurring expected combinations different types knowledge directly matched parts natural language text 
models capable dealing expected kinds texts known domains 
models sentence interpretation incompletely vaguely specified count computational models 
example claim sentence processor spreading activation network type knowledge networks interact exchange activation 
specification level tell model produce human behaviors unique interpretations sentences answer questions 
general models sentence processing accounted primarily application type knowledge resolve certain types ambiguities cognitive point view explained certain kinds behaviors observed human sentence processing 
example models deal syntactic knowledge resolve syntactic ambiguities 
models account immediate interactions syntax semantics human sentence processing 
modularity debate psycholinguistic studies shown strong evidence broad kinds behaviors human sentence processing appear incompatible 
sentence processor shows modular behaviors situations types knowledge applied decisions delaying application types knowledge 
behaviors known integrated interactive behaviors sentence processor decisions immediately integrating different types knowledge 
views produced body psychological experiments supporting view computational models explaining set behaviors 
center research language understanding ongoing modularity debate language understanding faculties syntax semantics modular architecture see chapter discussion distinction integrated processing principle previous attempts implementing integrating representations different types knowledge 
interact integrated different degrees crain steedman fodor frazier marslen wilson tyler tanenhaus dell carlson 
psycholinguistic studies evidence modularity clifton ferreira fodor frazier interaction different faculties language processing crain steedman tyler marslen wilson 
computational models proposed explaining kind behaviors 
computational models language understanding attempted satisfactorily explain different behaviors resolve debate 
satisfactory answer resolve modularity debate language understanding result far reaching benefits multiple disciplines issue brought apart inherent value revealing nature parts human cognition 
focus psycholinguistics example change looking evidence different architectures language understander finding right architecture 
natural language understanding programs ai seen success modeling human behavior producing general flexible language understanding capabilities get head start built right architecture 
programs form core variety language processing systems applications information extraction knowledge acquisition information retrieval machine translation 
current natural language processing systems inflexible architectures little portability tasks domains syntactic processing 
hypothesis began hypothesis arose partly psycholinguistic evidence error recovery behaviors partly studies showing influence certain cognitive factors affecting modularity issue partly desire build computational model true implementation integrated processing principle 
hypothesis answer questions satisfactorily designed architecture sentence processor kept knowledge sources separate unified concurrent syntactic semantic processes single process controls aspects ambiguity resolution error recovery holbrook eiselt mahesh eiselt mahesh holbrook 
psycholinguistics shown ways human sentence processor recovers errors lexical semantic ambiguity resolution eiselt holbrook similar structural syntactic ambiguities stowe 
amount resources working memory available sentence processor introduced literature explain human sentence processing exhibits modular interactive behaviors carpenter just king just stowe 
integrated processing principle birnbaum see chapter type knowledge available sentence processor integrated soon possible implemented true spirit 
integrated models assumed integration guided stereotypical situations domain happen representation processing began preventing parts existing knowledge new situation match encoded integrations 
hypothesis showed clear promise building model treated types knowledge equal footing integrated available dynamically sentence processing 
model hypothesis explain similarities syntactic semantic error recovery 
keeping knowledge sources separate unifying process potential explaining human sentence processor produced seemingly modular behaviors situations seemingly integrated behaviors situations 
addition unified process provide flexible architecture include new factors working memory limits explain change strategies modular integrated processing terms changes sentence processing situations 
solution overview hypothesis developed model sentence understanding called compere cognitive model parsing error recovery answers questions raised earlier section 
compere psychological results computational analyses sentence processing 
questions compere answers 
different types knowledge integrated sentence processing 
claim possible keep knowledge sources independent integrate information dynamically processing claim chapter 
different types knowledge represented separately applied independently 
integrated incrementally sentence interpretation single unified process controls interactions different knowledge sources resolve conflicts 
compere knowledge sources independent processing unified single arbitrating process 

sentence processor attempt resolve ambiguity 
claim local ambiguity requirements working memory minimized sentence interpretation synchronizing performance syntactic compositions semantic compositions claim chapter 
compere synchronizes syntactic semantic compositions minimize local ambiguity 
semantic information available syntactic compositions delayed time semantic information available 
point syntactic semantic compositions attempted carried unified arbitrating process 

sentence processor recover different types errors may 
uniform representation syntactic semantic interpretations call intermediate roles keep declarative record syntax semantics interactions sentence understanding 
claim sentence processor record recover errors structural lexical ambiguity resolution reprocessing input sentence completely exhaustively searching space possible interpretations claim chapter 
arbitrating process coordinates recovery syntactic semantic errors intermediate role representations establish correspondences maintain consistency syntactic semantic interpretations times 
claim sentence interpretation requires controlled incremental interaction syntax semantics unified arbitrator sufficient mechanism modeling interactions claim chapter 
compere takes written sentence english input produces syntactic structure semantic representation sentence output 
semantic representation consists compere introduces items entertainment 
chambers twentieth century dictionary 
producing incremental interpretations new idea models sentence comprehension key feature previous models example birnbaum jurafsky 
consider incremental processing principle see chapter model claim making 
appropriate meanings words connected thematic semantic roles 
compere produces output follows 
ffl reads words sentence left right order processing word producing incremental interpretation word 
ffl word accesses lexical entry entries decides try compose word time current syntactic semantic interpretations part input preceding word 
decision compere parsing algorithm 
ffl syntactic compositions suggested parsing algorithm hybrid left corner head driven parsing methods 
new parsing algorithm called head signaled parsing mahesh 
ffl semantic compositions suggested process tries compose primitive roles syntactic units form call intermediate roles 
intermediate roles ultimately thematic semantic roles constitute semantic interpretation sentence 
assignment intermediate roles takes variety constraints account including arising syntactic context knowledge semantic roles conceptual knowledge 
ffl compere selects proposed syntactic semantic alternatives arbitrating preferences 
clear selection possible corresponding syntactic semantic compositions retains unselected alternatives possible recovering errors 
conflict syntactic semantic preferences delays decision information helps arbitrator resolve conflict 
ffl composition performed compere decides resulting composite unit composed units time 
decision parsing algorithm 
essentially composition results completed syntactic semantic unit completed unit composed units 
ffl syntactic semantic composition possible new unit previous parts sentence error occurred 
compere tries recover error selecting retained previous alternative repairing current interpretations 
switches new interpretation repairing syntactic semantic interpretations consistent ways having completely input 
shows architecture compere sentence processor carries process 
particularly interesting note syntactic semantic knowledge shown represented separately 
knowledge sources processed similar syntactic semantic processes integrated dynamically unified arbitrator see chapter details architecture 
unified arbitrator single process controls interactions syntax semantics arbitrated decisions knowledge available compere 
unified process keeps record intermediate decisions syntax semantic interactions 
record maintained form trees intermediate roles enables unified process carry consistent error recovery operations syntax semantics 
unified arbitrator effect integrates information arising multiple knowledge sources selects interpretations best 
resolves syntactic semantic ambiguities recovers errors resolving ambiguities 
unit considered complete soon acquired head child 
see chapter information matter 
words unified arbitrator syntactic parse trees semantic roles lexical entries lexical access lexicon syntactic processing syntactic knowledge semantic processing semantic conceptual knowledge architecture compere 
implementation evaluation compere implemented tested variety sentences 
algorithms constitute compere sentence processing described chapters implementation compere system illustrated chapter 
model incremental sentence interpretation compere produces desired output sentence produces appropriate incremental interpretations word sentence 
compere evaluated ways 
proof concept demonstrated testing compere variety sentence structures various combinations syntactic semantic ambiguities 
chapters include number examples 
examples show model broad coverage natural language syntax semantics see chapter 
compere integrated discourse processor story understander show output sentence understanding produced fact useful discourse level language understanding see chapter 
chapter includes comparative analysis compere models terms claims making thesis 
chapter includes significant limitations compere suggestions improving model ways 
addition theoretical framework automata analyzing performance compere models sentence understanding developed chapter 
framework sample analyses illustrate computational advantages compere architecture algorithms 
furthermore psychological plausibility compere model human sentence understanding analyzed chapter concrete psychological predictions compere preliminary sketch experiment verify predictions 
compere limitations effects cognitive plausibility compere discussed chapter 
consider pair example sentences show compere behaviors processing 
compere action example example consider sentence officers taught academy demanding 
compere reads words sentence builds syntactic structure noun phrase np assigns meaning noun officers role subject sentence 
word taught verb sentence syntactically ambiguous distinction past tense form past participle form 
ambiguity detected lexical entry word shows possible subcategories word 
simple past reading taught main verb corresponding interpretation officers taught somebody academy 
hand taught read verb past participle form verb relative clause reduced relative relative pronoun marking clause 
reduced relative correspond meaning officers taught somebody academy sentence processor necessary information point decide sure appropriate interpretation 
interpretations semantic preference officers equally teachers taught syntactic preference simple past category compere expecting see verb phrase complete sentence 
reduced relative structure simply modify subject noun leaving compere waiting see main verb phrase 
main clause interpretation hand meets current expectation main verb completes sentence 
syntactic preference compere selects main clause interpretation proceeds read words 
may noted compere incremental processor strives appropriate syntactic semantic interpretations incrementally word possible interpretations intermediate points defer ambiguity resolution clause sentence 
resulting interpretation phrase academy shown 
shows syntactic parse tree tree semantic roles assigned sentence 
example shows compere resolves ambiguities information available point pursue possible interpretations disambiguating point information necessary resolve ambiguity available 
best strategy leads errors 
continue example show compere deals errors recovers arrive correct interpretations 
compere continues process sentence encounters verb 
finds way attach compose word preceding interpretation main verb 
error occurred new word attached current interpretation compere come input sentence 
compere unified process examines previous alternatives retained finds alternative attached previous verb phrase vp reduced relative clause attached np officers 
alternative leave expectation main verb np vp art pp np art officers taught academy event teach active subject officer subject officer np officer location academy np academy role np academy agent officer garden path main clause interpretation 
open filled current word compere selects alternative recovers error repairing syntactic semantic structures shown 
vp sentence structure np reduced relative clause 
doing compere unified process sure corresponding changes semantic interpretations intermediate roles part semantic role trees 
resulting interpretation sentence word shown 
compere continues process remaining words sentence arrive complete interpretation sentence 
example shows compere produces incremental interpretations waiting complete knowledge resolving ambiguity 
case decision led error structure sentence revealed processor 
compere able recover error repairing erroneous interpretations 
behavior initial choice leads dead forces sentence processor go back earlier decisions switch new interpretation new path called garden path behavior 
error occurred semantic information available processor help resolve syntactic ambiguity encountered 
viewed modular behavior decision select main clause interpretation syntactic information influence semantic types knowledge 
compere capable producing interactive behaviors 
see consider sentence obtained changing subject noun officers courses 
sentences identical difference subject noun 
vp np art np vp art pp rcl rs officers taught academy event teach experiencer officer location academy passive subject officer subject officer np officer np academy role np academy event agent officer active subject officer subject officer np officer garden path reduced relative clause 
courses taught academy demanding 
compere conceptual information effect animate entities teach courses animate entities 
compere encounters structural ambiguity word taught time possible interpretations slight syntactic preference main clause interpretation dealing sentence 
strong semantic bias choice courses agent teaching violating conceptual constraint 
arbitrating preferences compere unified process eliminates main clause reading taught right away 
reduced relative clause interpretation pursued error garden path effect 
output compere sentence shown 
example shows compere produce interactive behaviors integrating syntactic semantic conceptual information incrementally 
integration able avoid error garden path sentence sentence identical previous difference subject noun 
examples compere behaviors sentences containing various combinations syntactic semantic ambiguities thesis especially chapters 
vp np art np vp art pp rcl rs taught academy courses event teach location academy np academy role np academy event theme course passive subject course subject course np course agent course active subject course subject course np course reduced relative clause garden path 
contributions compere built hypothesis keeping knowledge sources separate integrating incrementally sentence processing explain modular interactive behaviors produced sentence processor 
compere tested variety sentences shown produce behaviors characterized literature modular interactive 
addition demonstrating feasibility hypothesis computational model sentence understanding contributions ffl developed new parsing algorithm called head signaled left corner parsing minimizes local ambiguity producing syntactic compositions right times processing sentence 
ffl developed theoretical framework automata analyzing comparing performance sentence interpreters presence syntactic semantic ambiguities 
ffl extended notion thematic semantic roles call intermediate roles provide uniform representation syntactic semantic interpretations 
uniform representations demonstrated arbitration syntax semantics error recovery operations 
ffl shown knowledge different types combined sentence interpretation unified process uniform representation intermediate roles 
model flexible architecture unified process extended accommodate new factors working memory resource limits account new psychological data 
sentence processor compere produces literal linguistic interpretations sentences specific domain conceptual framework 
integrated variety reasoning systems task specific domain specific ontologies 
integration especially feasible flexible architecture compere additional source knowledge preference easily accommodated arbitration process adding additional constraints assignment intermediate roles 
constraints modified reasoning system dynamically model context specific behaviors 
organization thesis chapter compendium principles questions raised translating principles computational model claims predictions thesis assumptions 
chapter reviews psycholinguistic literature support claims chapter 
review builds psycholinguistic theory sentence processing implemented compere 
chapter examines sentence processing computational point view builds functional theory sentence understanding 
chapter presents analysis different sentence processing architectures models terms kinds communication syntactic semantic processing afford 
comparing kinds interactions deemed necessary psycholinguistic model functional model chapter explains compere controlled parallel architecture unified arbitrating process 
addition chapter presents survey contemporary computational models sentence understanding 
chapters compere theories syntactic semantic processing 
chapter presents new parsing algorithm called head signaled left corner parsing compares spectrum syntactic parsing algorithms 
chapter describes theory linguistic semantics employed 
chapter introduces concept intermediate roles describes semantic analysis process role assignment 
explains arbitration unified process intermediate roles 
chapter presentation compere sentence understanding system 
describes representations algorithms constitute compere detail illustrates working number examples 
chapter includes detailed description repair mechanisms implement syntactic semantic error recovery 
chapter concerns evaluation 
begins validating compere model illustrating working wide range example sentences show compere fact meets claims deviating principles built 
presents comparative analyses architecture possible architectures 
chapter presents detailed formal analysis compere incremental sentence processors general terms enhanced push automaton 
analysis provides theoretical framework tradeoffs design compere model analyzed 
chapter discusses range issues came including psychological predictions compere history development limitations model directions pursue 
chapter concludes thesis stating issues addressed contributions different language related sciences ideas resulting 
understanding reader interests parts interdisciplinary kind main chapters thesis chapters written relatively self contained 
author hopes reader able read chapters sequence 
chapter ii principles claims assumptions chapter state known principles natural language processing compere model subscribes 
raise questions come designing model sentence interpretation meet principles state claims thesis answer questions 
state assumptions 
chapters rest thesis delve computational psychological motivations making claims design implementation compere model meet principles claims analysis evaluation performance model 
principles compere model builds previous computational psychological modeling natural language processing 
lessons learned previous summarized terms principles 
set principles forms foundation top claims compere 
ffl principle 
eager selection language processor strives select unique interpretation information necessary available 
language processor selects set interpretations possible input 
simply produce possible interpretations external agent select best 
selection ambiguity resolution part job language understanding 
connectionist models language comprehension mcclelland kawamoto parsing algorithms earley algorithm considered efficient combination bottom top parsing violate principle 
simply set possible interpretations external agent pick suitable interpretation 
principle eager selection called early commitment close analysis principle frazier states language processor selects interpretation analysis syntactic criteria 
eager selection principle stringent require processor pursue exactly interpretation times required models nl soar model lewis lewis 
allows multiple interpretations pursued information select available 
merely requires processor reduce set possible interpretations proper subset information necessary available 
sense principle demands quality eagerness language processor 
ffl principle 
incremental interpretation language processor produces incremental interpretations 
psychological evidence incremental interpretation chapter 
computational point view functional motivations incremental interpretation chapter 
eager selection principle principle incrementality demands language processor select unambiguous interpretation possible requires processor incrementally word instance input sentence example 
principle called principle incremental comprehension crocker line principle jurafsky immediacy interpretation just carpenter 
primary objective development language understanding programs ipp lebowitz 
ffl principle 
integrated processing language processor applies piece knowledge type syntactic semantic conceptual lexical soon available birnbaum schank lebowitz birnbaum 
incremental selection requires integrated processing 
piece knowledge available language processor able reduce set possible interpretations piece knowledge able time possible 
incremental selection precludes processor applying just types knowledge initially applying types information processing input 
apart functional motivation integrated processing coming requirements incremental selection see chapter large body evidence integrated processing psycholinguistic literature 
number studies shown human language understander shows immediate effects syntactic preferences semantic feedback conceptual priming context referential success failure see chapter 
example principle stated differently immediate semantic decision hypothesis psycholinguistic studies stowe 
may noted goal incremental selection fact types knowledge help reducing ambiguity language processing integrated processing principle merely restatement principle rationality newell 
ffl principle 
functional independence language processor able apply piece knowledge type point independently types knowledge available accessible point 
functional independence caramazza berndt eiselt different knowledge sources entailed processing principle 
long situations kinds knowledge useful making rational decisions knowledge sources unavailable unusable reason integrated processing principle requires ones useful applicable independent 
situations occur language processing integrated processing entails independent applicability knowledge source 
may noted integrated processing principle entails independence different knowledge sources 
long situations kinds knowledge useful making rational decisions knowledge sources unavailable unusable reason integrated processing requires ones useful applicable independent 
situations occur natural language processing integrated processing entails independent applicability knowledge source 
ffl principle 
determinism language processor commitment selection piece knowledge supports commitment 
words language processor random selections 
counterpart integrated processing 
language processor applies piece knowledge available bindings selections information decisions 
example select randomly set possible interpretations merely select list possible interpretations 
selection principle requires processor commitments determinism principle requires selection justified piece knowledge 
determinism require delaying decisions necessary information available 
example principle precludes top parser initial commitments information support commitments backtracks blind commitments turn right ones 
top parser models language processing augmented transition network atn model lunar system woods 
principles dictate model language processing commitments particular interpretations commitments incrementally processing input commitments knowledge justifies commitments commitments soon supporting piece knowledge available able type knowledge independently types 
principles guiding design language processing model need introduce precise strong competence principle bresnan kaplan states steps taken language processor mirror human behavior language comprehension 
principles ensure model just linguistic analytical model language comprehension cognitive model process language comprehension 
questions principles questions remain design model sentence comprehension ffl question design architecture model integrated processing functional independence principles may met 
ffl question design temporal scheduling commitments decisions selections interpretations strike balance determinism eager incremental selection 
schedule application different types knowledge maintain balance determinism eager incremental commitment 
ffl question happens determinism fails error processor recover 
processor earlier decision justified time leads error new information 
ffl question happens conflicts integration 
processor resolve conflicts different types knowledge selecting unique interpretation 
claims thesis claims answer questions 
ffl claim possible keep knowledge sources independent integrate evidence dynamically processing unified arbitrator 
ffl claim local ambiguity requirements working memory minimized sentence interpretation synchronizing performance syntactic compositions semantic compositions 
ffl claim sentence processor recover errors structural lexical ambiguity resolution completely reprocessing input sentence exhaustively searching space possible interpretations 
ffl claim sentence interpretation requires controlled incremental interaction syntax semantics 
predictions addition making claims compere model predictions regarding way human language processor works 
discussion predictions sketch experiment test predictions chapter thesis 
ffl prediction 
interactive ambiguity resolution resolving structural ambiguity immediate effect resolving associated lexical ambiguity vice versa 
ffl prediction 
interactive error recovery recovering error resolving structural ambiguity immediate effect previous decisions associated lexical ambiguity vice versa 
assumptions exploratory compere model sentence understanding designed assuming things 
assumptions commonly language processing research intuitively obvious rarely get mentioned explicitly 
extensive set assumptions 
language processing modeled independently information processing tasks 
particular human language understanding studied independently cognitive faculties including language generation 
convenient assumption language processing research 

build model native adult language understanding explaining developmental language acquisition 
may noted model claims sentence understanding contradict known language acquisition significant way 

sentence understanding valid subtask language processing see chapter 
attempt design model extended include effects context sentence understand single sentences isolation described chapter 
example investigation relationships language processing tasks design problem solving knowledge acquisition see ka project peterson mahesh goel mahesh peterson goel eiselt 

ignore phonology morphology speech processing issues stress accent diagram understanding important contributions field natural language understanding 

study just natural language particular english 
english different languages instance reliance word order information bates macwhinney believe process architecture language processing languages 
differences relative importance sources information strategies extracting information linguistic markings text 
doing cross linguistic studies believe flexible general architecture model accommodate structures processes languages quite 

sentence understanding happens way matter goal pursued 
significant assumptions making uncommon assumption 
says methods applied way task sentence processing carried invariant kinds higher level language processing goals ram text processed acquire knowledge pleasure answer questions 
certain differences sentence processing exist language processing situations different goals 
instance skim text quickly read depth various degrees 
working assumption architecture sentence processor determined considering primarily routine behavior sentence processing common situations 
fact reason dealing architectural theories opposed functional theories 
functional theory useful develop theory different ways decomposing task different methods solving 
case sentence processing assumption human behavior suggests kind decomposition task kind architecture controlled parallel interaction independent modules see chapter feasible 
theory sentence understanding merely functional architectural commitments interesting useful 
important piece human evidence supports assumption comes observation processing level turned neurological damage human brain 
syntax instance gets processed automatically time matter current task answering particular question requires 
choice kinds processing sentence processor time kinds processing shown model results may discounted overruled times 

people normally read english left right surface level representations repeatedly eye movement stuck garden path 
supported experimental studies reading time eye movement studies carpenter carpenter just frazier rayner rayner 
assume reprocessing done indiscriminately repeatedly traversing kind internal buffer stores parts sentence currently reading 

need structural transformations syntax purposes 
assuming done jurafsky constructs questions transformations proposed handled semantics interaction syntax semantics having resort transformations syntax 
assumptions formal computational analysis compere model listed chapter 
limitations model directions improvements discussed chapter 
main body thesis examining psycholinguistic computational relevance claims stated chapter 
chapter iii psycholinguistic theory sentence understanding overview psycholinguistic studies natural languages replete ambiguities 
understanding natural language sentence coming possible interpretations different faculties language processing choosing preferred current context integrating information various knowledge sources 
temporal aspects type information certain commitments constitute bulk unresolved issues modeling human sentence interpretation 
central example temporal issue sentence processing syntactic semantic knowledge applied immediately semantic knowledge applied syntactic decisions 
majority psycholinguistic studies human sentence processing address temporal issues knowledge application attempting support side modularity debate 
modularity debate see chapter essentially debate certain decisions syntactic analysis shielded effects semantic contextual types information subject immediate effects types information 
side modularity debate body shown variety knowledge sources semantics context fact immediate effect human parsing decisions 
studies shall collectively refer immediate interaction studies explain results concluding human sentence processor exploits type information soon resolving ambiguities 
side modularity debate equally large body shall collectively refer analysis studies shown sentence processor computes initial interpretation certain sources information mainly morphology syntax leaving types knowledge semantic contextual information application processing sentence 
true argue human sentence processor computes purely syntactic interpretation lengthy sentence applies semantic knowledge analysis studies show phenomena human sentence processing explained assuming processor carrying analysis syntactic information certain intermediate points clause boundaries 
addition main areas psycholinguistic studies human sentence comprehension look important groups studies ones view temporal issues new angles provide new answers modularity debate 
set relatively studies error recovery human sentence processor 
human language times errors decisions ambiguous points information sufficient right decision may available points 
information coming sentence alter preferences possible interpretations result detection errors previous decisions 
people capable resolving ambiguities recovering errors cases 
ambiguities errors occur levels language processing including lexical syntactic semantic levels 
investigating behaviors recovering errors different levels studies show human sentence processor employs similar mechanisms different error situations 
second related set studies focuses causes errors explains errors terms limits working memory capacities individual human processors 
introducing resource limits cognitive factor affecting temporal issues language processing studies provide possible answers modularity debate 
body includes studies language behavior aphasia monolingual english languages multilingual 
touch controversial unresolved set results aphasic studies merely point glaring contradictions results studies claims making model 
immediate interaction analysis studies opposite sides modularity debate providing answers contradict sets studies error recovery resource limits aphasia support new way looking modularity debate 
hypothesizing syntax semantics separate modules completely integrated results led believe certain aspects syntax semantics integrated certain independent 
error recovery studies support view syntactic semantic processes unified follow single control structure 
view agreement findings cross linguistic aphasia studies 
resource limit studies support view interactions different knowledge sources dependent constrained availability working memory resources 
turn results resource limit studies point need controlling interactions syntax semantics accordance availability resources 
studies support view modularity debate answers temporal issues human sentence processing embodied compere model syntactic semantic knowledge sources independent influences interactions sentence comprehension controlled single unified arbitrating process see claims listed chapter 
unified arbitrator capable explaining resource constraints available model applied result apparently modular interactive behaviors consistent recoveries different types errors possible 
chapter brief reviews areas psycholinguistic studies mentioned immediate interaction analysis error recovery resource limit aphasic studies 
show bodies provide evidence compere model describe support claims making thesis see chapter 
intricacies psycholinguistic experiments results review require familiarity experimental techniques types sentences commonly studies 
interested readers may refer introductory text psycholinguistics carroll see gernsbacher 
possible follow results experiments implications model sentence comprehension getting intricate details experiments materials 
immediate interaction studies immediate interaction semantic contextual information structural ambiguity resolution demonstrated known experimental studies tyler marslen wilson crain steedman holmes stowe taraban mcclelland 
tyler marslen wilson adjective verb ambiguous word pairs land ing planes walk near runway landing planes trained pilot landing planes naming task test syntax behaves autonomously boundary clause 
experiments showed semantic information affects choice syntactic structure clause 
probe inappropriate respect context incomplete clause example sentence naming latency longer appropriate probe 
shows subjects prior semantic context choose syntactic structure clause complete 
crain steedman sentences complement relative clauses show semantic referential context information steer sentence processor kind syntactic structure 
instance sentence pairs 
teachers taught method passed test 
children taught method passed test 
sentences judged grammatical subjects significantly type 
semantic distinction sentences teacher teach child taught explains difference grammaticality judgement 
experiments showed semantic contextual interaction happens sentential clause boundary encountered 
argued garden contextual phenomenon prevented induced context sentence processed 
example sentences sentences type judged ungrammatical semantic bias steered subjects away relative clause structure leading garden path main verb passed encountered 
garden path avoided sentences type semantic bias steered subjects relative clause structure happened correct structure sentences 
stowe stowe reduced relative sentences animate inanimate subjects officers taught academy demanding 
courses taught academy demanding 
measured word word reading times self paced reading task establish semantic information subject influences immediate assignment syntactic structure 
sentence animate subject equally plausible agent experiencer teaching inanimate subject plausible theme 
reading times sentences compared unambiguous control sentences marker relative clause readings times main verb phrase demanding showed large significant increase points stowe 
reading times sentences show difference 
showed semantic bias immediately disambiguated syntactic structure sentence avoiding reading difficulties main verb phrase 
taraban mcclelland investigated effects sentential context preceding prepositional phrase resolving attachment ambiguities showed garden effects sentences continuations hurt routine task 
sentence continuations semantically coherent 
directions differences context 
minimal structures preferred ones contexts created 
example kind sentences shown 
reporter exposed corruption government 
reporter exposed corruption article 
find evidence autonomous syntactic decisions unaffected semantic context 
significant interaction sentential context 
instance context predicted high attachment vp attachment easier article modifies exposed context predicted nominal attachment attachment np easier government modifies corruption 
able show garden directions differences context providing clear evidence autonomy syntax 
carpenter just evidence immediate semantic processing word measuring word word reading times 
gaze duration semantically anomalous word longer semantically appropriate word similar inappropriate word terms length frequency syntactic fit rest sentence 
indicates semantic processing going eye fixated word 
altmann dennis concluded context influence initial decisions syntactic processor 
ambiguous relative complement sentences measured eye movements show pragmatic context help sentence processor avoid syntactic garden paths 
study especially noteworthy employ eye movement measurement technique extensively demonstrate autonomy syntactic processing see 
series new studies done confirm type knowledge think immediate influence resolving syntactic ambiguities 
example tanenhaus see spivey knowlton eye tracking techniques show discourse semantic context immediate effect syntactic processing 
shown effects context location prepositional phrase attachment replicating results taraban mcclelland 
similarly identified conditions discourse contexts effect resolving prepositional phrase attachments 
pearlmutter macdonald seidenberg explanation syntactic processing behaviors contextual biases frequency effects 
pearlmutter macdonald shown plausibility effect syntactic processing 
burgess lund argued syntactic processing confluence multiple constraints 
account supported experimental results showing semantic effects syntactic ambiguity resolution burgess tanenhaus hoffman 
studies pointed factors determine syntactic decision 
apart influence semantic discourse referential contexts frequency different meanings play role resolving syntactic ambiguities pearlmutter macdonald seidenberg 
stevenson argued effects recency similar grounds 
study location prepositional phrase attachment showed location depends context 
evidence delayed attachment noun phrase pp compound noun 
attachment effects observed noun filler 
introduced adjective noun phrase early attachment term refers stimulus fovea center retina near visible resolvable 
noticed 
similarly prior context mentioned modifiers compound noun phrase early attachment observed 
attachment delayed context refer modifiers noun phrase 
study clearly demonstrated strategy employed human sentence processor delaying attachment heavily context dependent see discussion eager hslc chapter 
additional support immediate integration apart experimental evidence provide intuitive arguments support views modularity issue 
examine additional evidence immediate integration syntactic semantic information subsection 
purpose language communicative function syntactic grammaticality judgment intuitively human language processor meaning text early possible making decision course language understanding crain steedman tyler marslen wilson 
human sentence understander forever trying integrate information arising knowledge sources different levels order come single interpretation best sense 
goal integrate preferences level results immediate interaction different levels syntax semantics 
processing kinds sentences people exhibit behaviors show exploit immediate feedback semantics pragmatics resolving structural ambiguities syntax 
people garden path reduced relative ambiguous structures sentence 
officers taught academy demanding 
sentence surface structure result garden path behavior stowe 
courses taught academy demanding 
difference apparent structure sentences human sentence processor information meaning words officers courses relation meaning taught words sentence choose main clause interpretation relative clause structure reading verb taught sentences 
instance higher level information knowledge animate objects actors teaching 
natural languages appear allow high degree local syntactic ambiguity crain steedman 
sentence processor supports interaction syntax higher levels produces fully interpreted semantic entities corresponding incomplete fragments sentence context entities evaluated powerful source redundancy 
redundancy information arising knowledge sources different levels enables sentence processor handle degree local syntactic ambiguity purely syntactic processing terms intolerable 
words combining preferences different levels early possible imposing constraints shrinking set feasible interpretations creating information overload real time processor 
integrated processing principle chapter kind knowledge available sentence processor applied earliest opportunity making decisions processing sentence birnbaum birnbaum schank lebowitz birnbaum see carpenter just 
integrated processing interpreted imply different kinds knowledge syntactic semantic conceptual knowledge integrated priori making dependent birnbaum selfridge lebowitz lehnert dyer johnson yang harley ram riesbeck martin riesbeck martin 
claim knowledge sources represented independently retain functional independence see lytinen 
information arising different sources integrated processing sentence decisions applying kinds knowledge available decision point 
information sentence coming source considered earliest sources integrated priori monolithic representation 
analysis studies number models argued human sentence processor selects single syntactic interpretation analysis 
analysis single analysis studies shown syntactic decisions autonomous subject immediate effects semantic pragmatic biases 
forster matching task pairs sentences various degrees plausibility grammaticality argue distinct syntactic level decisions affected higher semantic levels 
experiments eye movement studies demonstrate initial parsing decisions syntactic preferences minimal attachment irrespective semantic discourse context clifton ferreira frazier rayner rayner 
minimal attachment principle states parser selects syntactic structure simpler minimal relative 
instance explain preference main clause analysis shown reduced relative structure shown sentence 
editor played tape agreed story big 
example minimal attachment seen prepositional attachment ambiguities sentence people initially prefer simpler vp attachment cart shown complex np shown 
constructing sets sentences minimal embedding contexts bias minimal attachment eye movements recorded show minimal structures selected initially sentence required non minimal attachment context favored non minimal attachment 
minimal attachment explains initial preference syntax structure may compatible semantic contextual bias may 
minimal attachment explain garden path behaviors shown spite semantic biases variety experiments 
example frazier rayner sentences showed eye movements disrupted disambiguating regions italicized non minimal attachment sentences indicating minimal attachment selected revised disambiguating region force non minimal structure 
sam loaded boxes cart lunch 
sam loaded boxes cart van 
experiment rayner carlson frazier sentences 
kids played albums stereo went bed 
kids played albums shelf went bed 
np vp art np art editor played tape main clause interpretation 
vp np art np vp art rcl rs editor played tape agreed reduced relative clause 
np vp art np np art pp sam loaded boxes cart minimal prepositional attachment 
np vp art np np art pp sam loaded boxes cart pp non minimal prepositional attachment 
pragmatic world knowledge indicates italicized pp stereo shelf attached minimally vp non minimally np music albums played shelves 
indicate application pragmatic knowledge eliminate difficulty non minimal structure 
experiment showed difficulty go away spite pragmatic knowledge 
clearly indicates initial syntactic selections help pragmatic knowledge type described 
detailed analyses experiments review clifton ferreira 
ferreira clifton showed referential context help avoiding reading difficulties syntactic garden paths 
example sentences showed readers exhibit longer reading times disambiguating regions reduced relatives complex np sentences 
contexts editors played tape sets boxes asserted set placed cart longer reading times observed sentences 
editor played tape agreed story big 
editor played tape agreed story big 
sam loaded boxes cart lunch 
sam loaded boxes cart van 
study rayner showed discourse effects delayed resolving syntactic ambiguities 
sentences syntactically ambiguous prepositional phrase attachment syntactically ambiguous reduced relative clause 
embedded sentences discourse contexts biased subjects minimal attachment measured eye movements 
results showed subjects garden biasing context 
concluded discourse affects stages processing initial syntactic decisions structural principles 
additional support syntactic autonomy apart experimental evidence provide intuitive arguments support autonomous syntactic module 
review additional evidence subsection 
term functional independence describe feature architecture supports interaction different levels sacrificing independence 
allows faculty function faculties fail provide useful information caramazza berndt eiselt 
reason knowledge source fails provide information making decision information arising knowledge sources applied best decision available information 
functional independence need necessarily mean neurological independence separate parts brain corresponding different functions language processing 
reasons hypothesizing functionally independent cognitive architecture sentence processor 
intuitively human sentence understanding behavior shows independence syntax semantics 
illustrate point argue instance people judge grammaticality independent meaning sentences little sense chomsky 
green ideas sleep 
hand people put imperfect syntax get meaning ungrammatical strings words 
instance nearly total absence syntax get meaning text 
crash hospital winograd fire match hotel charniak support syntactic autonomy comes complexity interaction integrating preferences higher levels making line decisions 
speed automaticity decisions lower levels sentence processing suggest fast autonomous automatic process tasks syntactic analysis fodor fodor 
fodor called input systems share set characteristics different central systems input systems domain specific mandatory operation fast informationally encapsulated 
syntactic processing matches view input system better language processes semantics pragmatics 
syntax autonomous input system decisions shielded influence semantic pragmatic biases 
lack independence syntax leads difficulties accounting syntactic generalizations different semantic entities 
example syntactic generalization exhibited language processor variety constructs minimal attachment heuristic frazier kimball subsumes class preferences syntactically minimal interpretation 
preference main clause analysis reduced relative analysis preference simple direct object sentential complement analysis ambiguous phrase preference np sentential conjunction ambiguous phrase explained syntactic generalization minimal attachment 
variety semantic referential preferences specific concepts contexts sentences employed explain set behaviors language processor unable impose syntactic preferences independently 
mary knew answer fby heart 
john kissed mary sister 
structural preferences minimal attachment right association kimball sentences minimal attachment fails 
right association late closure says incoming constituent attached current structure previous structure higher parse tree 
instance sentence saw man horse 
right association attach pp np shown vp minimal attachment 
sentence minimal interpretation turned semantic criteria horse instrument seeing structure preferred right association turns correct parse 
right association explanation syntactic processor autonomous decisions sentences minimal attachment yield right structure 
studies error recovery known human sentence processor errors times processing sentence relatively studies mechanisms recovering errors burgess simpson carpenter eiselt holbrook eiselt holbrook eiselt mahesh holbrook eiselt granger 
error recovery vital aspect human language understander study potential unlocking mystery human language behaviors 
np vp art np np art pp pro saw man horse right association 
language early commitments resolving ambiguities cope efficiently vagaries natural languages 
result language commit errors times making decisions ambiguous points sufficient information may available points 
information coming sentence alter preferences different interpretations 
people capable resolving ambiguities recovering errors cases carpenter holbrook 
errors resolving ambiguity lead garden path 
people recover locally errors input shows errors 
lexical pragmatic error recovery carpenter garden path passages semantically ambiguous words study lexical retrieval error recovery reading 
examined eye fixations individual words gaze durations measure amount processing done word 
evidence eye movement data people simply texts detect error committed 
example text initially assume tears meant crying go dance see disambiguating word dress realize interpretation tears error correct error 
correct errors simply reread previous parts text sequentially regress backwards selectively number heuristics error recovery 
example reexamine alternative interpretations inconsistent word reexamine earlier words ambiguous see alternative interpretation words correct error 
sad couldn go dance night 
big tears dress 
model eiselt proposed conditional retention mechanism holbrook eiselt granger error recovery resolving lexical pragmatic ambiguities complete reprocessing text 
sentence processor selects best interpretation current context early commitment possible 
discard alternative interpretations retains possible 
retained alternatives deactivated completely inactive 
text proves earlier decision wrong sentence processor retained alternatives reevaluate decision 
switch interpretation best respect new information earlier 
computational model demonstrated mechanism account recovery errors resolving pragmatic ambiguities eiselt 
theory conditional retention error recovery lexical processing text verified experimental studies eiselt holbrook holbrook 
holbrook evidence retention unselected meanings ambiguous words words embedded longer texts text 
eiselt holbrook evidence conditional retention study employed binary forced choice task distinguish hypotheses conditional retention active suppression seidenberg tanenhaus unselected meanings 
sentences ambiguous words bat text embedded consistent contexts conflicting contexts preceding context biased reader active suppression hypothesis unselected meanings ambiguous word purposely suppressed consideration available sentence processor error recovery 
meaning suggested disambiguating region 
readers forced selection words text cave pitch text point closer text 
data experiment showed clear evidence conditional retention opposed active suppression eiselt holbrook 
mary realized examined wrong bat 
took back got cave pitch male 
explanations error recovery error recovery reprocessing text albeit selectively recovery reprocessing appear different strategies fact unified single mechanism 
unified view lexical error recovery eiselt holbrook accounts mechanisms introducing additional factor distance ambiguous word disambiguating word 
distance small selective reprocessing may choice large clause sentence boundaries conditional retention recovery reprocessing provide better explanation error recovery behavior 
syntactic error recovery studies structural ambiguity resolution syntax showed error recovery behaviors similar semantics described 
experiments stowe colleagues holmes stowe see stowe showed evidence delayed decisions error recoveries syntactic ambiguity resolution 
reduced relative sentences showed semantic features subject noun immediate effect syntactic ambiguity resolution replicating results immediate interaction studies discussed earlier 
example sentence garden path sentence difference subject nouns vis vis ability agents teach event 
conducted loading experiments increased load human sentence processor increasing length intervening relative clause example 
reading difficulties similar garden path effects subject noun biased reader relative clause away garden path 
example sentence produced garden path effects 
sentence longer version showed difficulties similar seen 
stowe explained results proposing limited delayed decision model syntactic decisions delayed alternatives retained conditional retention theory resource limits preclude continued retention 
suggests sentence processor pressed resources hold lengthy ambiguous interpretations decision syntactic information disregarding semantic bias syntactic preference 
officers taught academy demanding 
courses taught academy demanding 
reporter saw woman happy 
student realized answer clear 
inspector realized mistake quickly corrected 
study recovery syntactic garden paths ferreira henderson conducted series experiments sentences direct object complement ambiguities sentences grammaticality judgments 
varying length ambiguous noun phrase recovery garden path difficult longer nps 
difficulty attributable just length phrases 
fact ambiguous phrases longer addition prenominal modifiers cause increased difficulties 
modifiers hand prepositional phrases relative clauses hard parser 
concluded ease error recovery syntactic garden paths determined distance head ambiguous phrase disambiguating word 
bill drinks wine beer kept house 
bill drinks wine kept house 
unified theory error recovery studies error recovery features common ffl information unselected choices retained ambiguity 
ffl information recover errors easily disambiguating region close ambiguity error occurred 
ffl limit long information retained 
example retained information surface form led retained choices may lost limit reached 
information semantic alternatives may available error recovery surface form lost say clause boundary eiselt holbrook 
striking aspect account similarity recovery behavior syntactic semantic errors holbrook eiselt mahesh 
example model stowe limited delay model proposed early commitment possible 
models capability pursue multiple interpretations parallel ambiguity forced 
models explained error recovery operation switching alternative interpretation retained parallel sentence processor 
conditional retention modeled resource constraints processor just limited delay 
models decisions integrating preferences syntax semantics 
unified account error recovery outlined eiselt holbrook accounts syntactic semantic error recoveries 
unified account outlined introduced resource factor explanation human sentence processor recovers error easily experiences difficulty shows garden path effect 
explore studies resource constraints detail see resource constraints offer different explanation duality interactive modular processing syntax semantics human sentence understanding 
studies resource constraints apart studies stowe colleagues reported demonstrated effects resource constraints human sentence processor loaded series studies just carpenter colleagues investigated limitations working memory effects language comprehension 
carpenter just summarize studies people attempt digest information possible immediately minimize working memory required hold partial products 
working memory capacity limits model explained preference immediate semantic processing opposed wait see strategy 
significant individual differences capacities indicating readers readers situations may processing language modular fashion times 
set experiments effects working memory capacity lexical ambiguity resolution miyake just carpenter subjects high working memory capacities high span readers showed little effect ambiguity encountering disambiguating region sentences lexical ambiguity highly frequent meaning 
showed little difficulty disambiguation irrespective frequent frequent meaning correct sentence showing maintained meanings disambiguating region 
subjects low working memory capacities low span readers hand showed large ambiguity effect disambiguating words favored frequent meaning 
suggests capacity limits enable maintain interpretations disambiguation possible 
experiment miyake just carpenter showed subjects intermediate working memory capacities mid span readers difficulty disambiguating region appeared ambiguity text providing evidence effects working memory lexical disambiguation 
ken really liked boxer took bus nearest sports arena see match 
ken really liked boxer took bus nearest pet store buy animal 
experiments king just studied effects working memory capacity syntactic processing 
object relative sentences low span readers took longer read verbs object relative sentence comprehension accurate high capacity readers 
reporter senator attacked admitted error 
evidence working memory constraints syntactic ambiguity resolution comes experiments macdonald just carpenter 
reduced relative sentences showed word word reading times subjects additional processing encountering syntactic ambiguity verb verb main verb sentence starts reduced relative clause suggesting generate interpretations ambiguity 
showed readers higher working memory capacities able maintain interpretations longer period time low span readers 
result high span readers experience difficulty disambiguating syntactic attachment verb encounter disambiguating words sentence readers 
experiments showed low span readers higher error rate high span readers sentences greater distance ambiguous verb disambiguation 
experienced soldiers told attacks conducted midnight raid 
experienced soldiers told surprise enemy attacks conducted midnight raid 
working memory capacity subject assessed task reading span task carpenter 
evidence experiments just carpenter proposed model working memory language processing individual differences working memory capacity captured variations total amount activation available instance model 
proposed activation capacity limits explanation syntactic modularity 
readers greater capacities maintain multiple interpretations allow semantic pragmatic information play role resolving syntactic ambiguities lower working memory capacities forced syntactic decisions early resulting syntactic behaviors appear informationally encapsulated 
carpenter miyake just offered working memory explanations behavioral evidence language processing aphasia aging 
multiple analysis models models sentence processing working memory constraints similar multiple analysis models allow syntactic interpretation active time 
difficulties strict analysis models explaining variety behaviors led development models resorted multiple syntactic representations various reasons 
example proposed model multiple syntactic interpretations ambiguous sentence maintained pragmatic information guided choice 
proposed similar model syntactic complexity pragmatic information decide interpretation select 
tanenhaus carlson model multiple syntactic interpretations permitted result accessing lexical information alternative thematic structures verbs ambiguous argument structures 
earlier models garrett employed purely syntactic criterion experimental findings fragment completion task decide maintain multiple interpretations proposed multiple representations maintained clause boundary point human sentence processor commitment single representations discards alternative syntactic representations 
models working memory constraints differ models criteria deciding interpretations maintained long derived resource constraints macdonald just carpenter 
models apply criteria decide retain alternative syntactic semantic interpretations 
chapter presents computational formalism allows model resource requirements multiple syntactic semantic interpretations 
chapter discusses difficulties implementing numerical resource limit computational model sentence processing 
studies aphasia behavioral studies aphasic subjects traditionally source evidence separability syntax semantics human sentence processing caramazza berndt 
people suffered focal neural damage area exhibit impaired syntactic processing abilities 
damage different part appear retain syntactic processing abilities trouble producing coherent semantic content 
studies language production comprehension aphasic people resulted processing different levels may interact functionally independent selectively affected damage brain 
studies done english speaking studies challenged claim syntactic modularity 
studies shown clear distinction kind breakdown language processing behavior occurring result focal neural damage different parts brain bates macwhinney 
systematic differences patient groups observed cross linguistic studies 
order account differences model sentence comprehension keep syntax semantics functionally independent 
functional independence syntax semantics inseparable show systematic differences impairments due neural damage 
cross linguistic evidence neurological functional independence different faculties language processing 
analysis evidence claims having reviewed areas psycholinguistic results turn principles claims chapter analyze evidence results provide claims 
summarize analysis lead reader compere unified arbitrator model sentence understanding 
may noted evidence outlined previous sections supports principles listed chapter compere model 
example immediate interaction analysis error recovery resource limit studies suggest human sentence processor attempts select interpretations set possible interpretations principle eager selection 
interaction error recovery resource constraint studies show strong evidence support view sentence processor produces interpretations incrementally principle incremental interpretation 
interaction resource constraint studies show evidence immediate influence variety semantic pragmatic knowledge sources syntactic processing principle integrated processing 
analysis error recovery resource constraint aphasic studies lend support functional separability syntactic semantic processing principle functional independence 
entire body psycholinguistics shows decisions human sentence processor readily attributed influence various types knowledge cognitive constraints memory limitations available evidence support view human sentence processor decisions completely arbitrarily principle determinism 
combining functional independence integrated processing returning modularity debate introduced earlier chapter described greater detail chapter clear strong psycholinguistic evidence modular non modular views syntactic processing analysis immediate interaction studies respectively 
design model human sentence processing account bodies evidence 
findings error recovery resource constraint studies outlined claim integration functional independence coexist model separates syntactic semantic knowledge representations unifies processing single arbitrator claim chapter 
alternatives claim completely separate processing completely integrated representations processing disadvantages discussed chapter 
show rest thesis compere model claim explain types error recovery behaviors studies reported 
model independent knowledge sources integrated processing explain effects resource limitations sentence processing described 
arbitrating process take resource limitations account decide semantic contextual sources information influence syntactic decisions 
issue implementing resource constraint model addressed chapter 
implications error recovery studies sentence processor capable recovering errors lexical structural ambiguity resolution error recovery behavior kinds ambiguities argue simplest theory accounts behavior single unified method recover errors different levels sentence processing 
thesis demonstrate feasibility claim claim chapter compere model 
evidence error recovery lends support compere claim sentence understanding unified process arbitration multiple sources knowledge 
shows develop actual computational model sketch theory syntactic processing structural ambiguity resolution put forward stowe 
implications resource constraints studies influence working memory capacity sentence comprehension brought light important role played working memory limits determining workings human sentence processor 
new factor modularity debate 
experiments reviewed shown sentence processor shows immediate interaction syntax semantics resources support interaction shows autonomous syntactic behaviors processor pressed point longer sufficient resources carry incremental interactions higher level processes 
shown individual increasing load processor long intermediate clauses subjects differing working memory capacities described 
limitations working memory force human language processor immediately digest partial interpretations minimize storage requirements wait see strategy carpenter just 
words conserving working memory resources strong motivation human sentence processor avoid delays resolving ambiguities resort eager commitments 
working memory capacity governs length delays making decisions 
example low span readers people available working memory capacities able pursue multiple interpretations time high span readers 
working memory capacity offers explanation modularity effects mentioned earlier 
higher capacities available interactions semantic pragmatic information processes supported 
capacities limited interactions cut decisions autonomously syntactic information instance 
evidence resource constraint studies lend support compere claim interactions sentence processing controlled unified arbitrating process claim chapter see chapter detailed account sentence processing architectures 
studies tell sentence processor take resource factors account combining syntactic semantic preferences selecting interpretations 
resource limitations apply combined resource requirements syntactic semantic processing decisions process control syntax semantics 
example controlling process decides implicitly resource availabilities syntactic semantic preferences evaluated combined syntax allowed override semantic preferences selection minimal resource requirements 
modularity debate reconciliation resource constraint studies point possibility modular interactive effects observed analysis immediate interaction studies respectively human sentence processor behaves fashion depending resource situation working memory capacity individual subject amount resources required processing sentence additional load resources time processing sentence factors affecting effective available resources 
observation leads conclude reconciliation modularity debate come explanations incorrect sets experiments inconclusive come hypothesis syntactic processing human sentence processor autonomous certain situations situations 
hypothesis needs identify situations build model allows sufficient control syntax semantics interactions explain types situations sentence understanding 
situations autonomous interactive syntactic processing correspond require resources available require equal amount resources available 
exactly amount resources available point easy determine significant individual differences subjects 
understanding computational properties sentence processing especially semantic contextual processing mature enable gauge precisely amount resources takes decision point processing sentence see chapter definition metric measuring resource requirements chapter discussion difficulties implementing resource constraints computational model 
new explanation human sentence processor modular situations modular situations computational model able explain kinds behaviors 
model adhere integrated processing principle functional independence principle 
model architecture support integrated processing functional independence allowing different kinds knowledge integrated early sentence processing time ensuring applicable independently 
claim integrated processing preclude functional independence 
number people implicitly assumed integrated processing implies integrated representations 
instance models ca ipp birnbaum selfridge lebowitz model jurafsky separable representation syntactic knowledge see chapter detailed survey models 
integrated processing principle implies human sentence understander sequential architecture gives semantics world knowledge proper role sentence understanding 
functional independence syntax semantics integrated models maintain proper role syntax 
role syntax language understanding determine hierarchical left right order relationships parts sentence 
relationships important cues assigning semantic roles parts 
model gives syntax proper role relationships applied decisions resolving ambiguity information may necessary sufficient case assign proper roles 
syntax discounted integrated processing models attempted fill proper role syntax semantic conceptual expectations birnbaum selfridge lebowitz lehnert dyer johnson yang harley lytinen 
criterion parsing bound unreliable reason having syntax presumably real events frequently contradict expectations crain steedman 
previous implementations integrated processing information available right away syntax utilized making sentence processing decisions 
instance lytinen model language processing called lytinen see chapter cues determine actor sentence syntax tell right away convincingly cases actor 
retaining functional independence give proper role kind knowledge goes sentence understanding 
best kind knowledge available extend scope model terms kinds sentences process explain human behavior 
reconciliation integrated processing functional independence led claim claim chapter sentence processor keep knowledge sources separate functionally independent integrate information coming sources immediately incrementally sentence processing 
design raises question points sentence syntax semantics interact 
psycholinguistic evidence described earlier shown points depend semantic referential context pearlmutter macdonald seidenberg taraban mcclelland 
thesis algorithm derived computational considerations illustrate synchronizing points syntactic semantic compositions gives close approximation actual sequence attachment points observed human sentence processing claim chapter 
chapter presents algorithm 
computational analysis behavior algorithm costs benefits sequence points provides discussed chapter 
ways improving algorithm take advantage context effects provide better explanation psycholinguistic results discussed chapter thesis 
discussion summary discussions temporal dependencies sentence interpretation conclude architecture sentence processor ffl sentence processor integrate information multiple sources decisions 
example integrate syntactic semantic pragmatic discourse frequency recency information 
ffl sentence processor need decision immediately 
decide delay decision pursue multiple interpretations parallel 
ffl amount delay permitted determined available resources working memory 
decision resource limits reached 
ffl types information need integrated time 
resources scarce certain types information semantic contextual information instance may disregarded 
requirements sentence processor clear decisions source information syntax 
certain types information may disregarded entirely decisions common process exerts control decisions 
process account influence cognitive factors working memory capacity 
unified arbitrating process performs functions ffl decides commitment 
example decides delay decision terminate delay force decision 
ffl combines information arising multiple sources 
selects alternative best various preferences different sources 
ffl decides types information consider combining making decisions 
example decides look syntax include semantic pragmatic preferences 
ffl monitors resource limits availabilities 
resources scarce force commitment reduce resource requirements 
ffl coordinates various processes syntax semantics running parallel synchronize 
instance delay syntactic commitment certain semantic information available 
ffl coordinates various separate processes ensure consistency 
example error recovery sure resulting interpretations coherent making syntax semantics carry operations correspond 
noted description arbitrating process control structure sentence processor description computational architecture necessary explain psychological results chapter 
process realized form separate processor controlling processes automatic sense set interacting connectionist networks instance implementation issue 
uncontrolled interaction separate processes certain connectionist network models cottrell waltz pollack capable producing kind ambiguity resolution behaviors observed limited delayed decisions error recoveries 
sentence processor needs control structure monitoring interaction different faculties sentence processing 
interaction syntactic semantic processing appears intense continual controlled 
process sentence interpretation best described involving unified arbitrator coordinating processing type knowledge 
see chapter survey uncontrolled controlled parallel architectures sentence processing 
arbitrator controls amount delay decision determines balance eager commitments delayed commitments 
achieved synchronizing terms location word number sentence syntactic semantic decisions claim chapter eager commitments certain situations delayed commitments certain situations 
algorithm defines strategies head signaled left corner parsing algorithm described chapters discussed chapter 
summary current psychological evidence leads believe sentence processor characteristics ffl functionally independent faculties 
ffl different faculties interact opportunity 
ffl preferences different faculties alternative interpretations integrated select best 
ffl delays disambiguation decisions information different faculties conflict insufficient information making decision sentence processor pursues multiple interpretations parallel 
ffl limited resources sentence processor disposal place limits possible interactions delays 
ffl sentence processor recover erroneous decisions resolving different ambiguities 
view sentence processing knowledge sources kept separate processing unified single control structure syntactic semantic processing 
single unified process carries ambiguity resolution error recovery syntax semantics integrating information generated different knowledge sources 
integration possible point processing sentence depends amount resources takes generate types information accessing processing knowledge structures knowledge sources ii amount resources takes consider alternatives select best iii amount resources currently available processor 
model produce modular behaviors interactive behaviors depending sufficiency available resources syntax semantics interaction 
model reconciles integrated processing functional independence explains resource constraints govern degree human sentence processor interactive modular error recovery behaviors syntax semantics appear 
see chapter discussion resource limits influence syntax semantics interaction vis vis compere implementation 
chapter iv functional theory sentence understanding chapter functional theory natural language understanding 
theory looks language understanding information processing task specifies terms input output types knowledge converting input information output information methods subtasks result decomposition task 
analysis language understanding task independently psychological motivations show need incremental interpretation communication syntactic semantic analyses model sentence processing 
functional constraints natural language understanding apart analyzing task methods knowledge importantly functional theory impose certain constraints model function purpose task serves real world 
constraints really derive functional requirements situation task natural language comprehension performed look functional constraints imposed generic task interactive communication natural language pair agents 
case language function purpose natural language assist intelligent agents communicating agents person speech indirectly written text invention speech 
order communication effectively generator comprehender natural language share common set conventions common body knowledge syntax semantics language instance needs complete unambiguous specification meaning conveyed case programming languages instance 
functional analysis chapter common lexical functional grammars lfg bresnan kaplan sells 
analyses language understanding representations processing mechanisms motivated communicative function language contributions function various elements language 
example important formalisms piece knowledge strictly classifiable syntactic semantic 
function piece knowledge contributes function natural language basis including piece knowledge functional model language understanding 
important distinction lfg approach model sentence understanding compere model rely lexicon heavily lfg models 
example lfg models integrate different types knowledge lexicon compere integration dynamically sentence understanding arbitrating process 
elaborate distinction chapter 
may noted models lfg largely models syntactic processing 
incremental interpretation communication natural language effective necessary comprehender arrive incremental interpretations soon possible interpretations comprehender arrives justified reasonable extent 
incremental comprehension especially important speech understanding information real time speech input simply lost communication 
incremental interpretation important text comprehension allows writer assume reader immediate context preceding text correctly interpret text immediately 
feature writer put information text comprehensible absence context provided meaning preceding text 
example writer ambiguous word bigger unit phrase sentence incremental understander disambiguate word right away possible 
writer expects happen assume disambiguated meaning word part context rest sentence understood 
ambiguous incompletely specified meaning rest sentence assume context help convey intended complete correct meaning 
interpretation incremental writer forced provide complete information part sentence compensate lack richer context available part interpreted 
need provide additional information communication efficient introduce additional ambiguities 
worse writer assumes interpretation incremental reader reader misinterpret part sentence leading ineffective communication 
words natural language allows effective means communication agents allowing high degree ambiguity ellipsis vagueness 
virtues communication arduous task agent source arduous communicating today machines programming 
receiving natural language communication agent able deal ambiguities vagueness ellipsis communication 
language comprehender produce incremental interpretations commitments early reduce degree ambiguity 
incremental comprehension natural language communication get bogged large number interpretations possible piece text fail effective 
instance sentence easily comprehensible human language understander incremental processor severely overload syntax non incremental processor generating syntactic interpretations sentence jacobs jacobs 
form asbestos kent cigarette filters caused high percentage cancer deaths group workers exposed years ago researchers reported 
sentence full ambiguities years ago workers exposed asbestos died years ago 
syntactic analysis reduce number possible compositions word meanings provide unique compositions ambiguous sentences 
processor tries analyze syntax sentence clause produce semantic interpretations deal hundreds possible parses sentences 
incremental interpreter hand bring meanings interpreted parts bear rule possible syntactic compositions semantic context 
order reduce number possible interpretations manageable size sentence understander produce incremental interpretations 
determinism general incremental interpretations comprehender generates justified body knowledge shared generator comprehender 
speech processing goal met results failure communication effective 
communication speech tends highly interactive conversation relies listener arriving interpretation speaker intends time 
text understanding reader arrives unjustified interpretations keeps backtracking switching interpretations writer control reader reads text goal communication fails 
especially author interactive control interpretation reader derives text author rely fact reader arrives justified interpretations ones writer intended agents share common body linguistic world knowledge 
error recovery language processor deterministic commitments justified piece knowledge incremental language processor early commitments processing sentence bound fail errors 
natural language communication effective processor able recover errors having start afresh input 
communication fails receiving agent demands fresh input time mistake 
functional independence functionally derivable constraint independence different types knowledge language comprehension 
natural language communication situations agent comprehend input demanding complete knowledge required comprehension 
agent able apply incomplete knowledge effectively reduce ambiguity narrow set possible interpretations far possible available knowledge 
words knowledge available situation applicable demanding knowledge unavailable 
easy construe natural language inputs types knowledge unavailable follows type knowledge applicable independently 
referred functional independence different knowledge sources 
summary effective communication natural language desirable language comprehension system incremental wild unjustified commitments able recover majority errors prohibitive penalties functionally independent knowledge sources 
see principles eager selection incremental interpretation determinism functional independence chapter 
sentence understanding task input language understanding task natural language text assumptions earlier chapter modalities input 
input naturally divided individual sentences 
intersentential interactions ellipsis certainly important aspect language understanding sentence boundaries demarcate valid subtask task sentence understanding language understanding 
types knowledge analyzing individual sentence syntactic knowledge quite different kinds knowledge come play intersentential analysis knowledge discourse structures 
analysis follows look sentence understanding subtask ignore aspects discourse analysis 
computational architecture proposing designed fact mind new types information taken account model evolves include discourse processing 
input input sentence understander sentence complete grammatical natural language 
sentences different types interrogative consider declarative sentences thesis 
pay attention punctuation 
input sentence characterized linear sequence words natural language 
sentence may contain rich structure relative clauses prepositional adjuncts rich meaning category semantic ambiguities word meanings 
output output language understanding task defined input 
absence situation task natural language processing carried output language understanding said kinds information deemed useful large variety tasks 
exactly kinds information depends theory meaning theory semantics employed matter discussed thesis see chapter 
time say adopted minimalist approach specifying components output language understanding 
output model produces essential components outputs demanded situating tasks 
addition analysis language understanding task attempts ensure enhancing output task negate commitments model sentence understanding 
shall see discussion semantics simply adopt event oriented semantics define output sentence understanding set events objects properties thematic role relationships events objects 
semantics attempt model components meaning temporal spatial relationships aspect modality frawley 
problems sentence understanding sentence understanding task hard task simply task mapping input sentence output representation meaning 
reason mapping 
mapping unique unambiguous 
parts needs output completely left input information 
input relevant output 
features natural language lead classical problems ambiguity incompleteness ellipsis vagueness 
successful mapping achieved variety knowledge application interactions fairly complex 
problems listed incompleteness tend bigger problems discourse analysis individual sentence analysis 
problem addressed thesis sentence understanding focus problem ambiguity functional analysis 
may noted output produced implementation compere includes syntactic parse trees input sentence addition objects events thematic roles 
ambiguity ambiguity problem input mapping output 
example word map meaning may way composing sequence words form meaning 
ambiguities resolved applying types knowledge 
knowledge helps reduce ambiguity eliminating possible mappings input 
single type knowledge resolves particular type ambiguity 
instance knowledge grammar language help reducing ambiguities word meanings 
types knowledge semantic context may necessary times resolve kind ambiguity word meanings 
problem need different types knowledge different times situations problem sentence processing hard 
ambiguity resolution light functional constraints requires complex interactions different types knowledge available sentence understander 
look types knowledge resolving ambiguities look different classes ambiguities sentence level 
typology ambiguities ambiguities sentence broad categories local ambiguities global ambiguities 
local ambiguities multiple mappings appear middle sentence vanish part sentence analyzed 
information available reading part sentence eliminates mappings initial part eliminating local ambiguity 
example sentence bar 
local ambiguity bar word bar mean things metal rod place drinks served 
local ambiguity resolved rest sentence metallic rods people drinking places 
global ambiguity remains analyzing entire sentence 
instance sentence bar looks new 
globally ambiguous additional context tell null context metallic rod drinking place looked new 
ambiguities differentiated dimensions lexical versus structural syntactic versus semantic 
lexical ambiguities arise multiple meanings words lexicon 
lexical syntactic ambiguities word category ambiguities arise word syntactic category corresponding differences meaning 
instance word saw sentence man saw ship 
ambiguous 
past tense form verb see noun saw meaning tool 
course sentence local ambiguity ambiguities higher levels discourse literary studies interesting classification types 
fact third possibility 
saw infinitive form verb saw meaning cut saw 
local ambiguity singular noun man agree inflection verb 
verb form grammatical syntactic context noun phrase man preceding noun phrase ship 
lexical ambiguity subcategory ambiguity word particular syntactic category possible subcategories corresponding meanings inflected form 
instance word taught sentence officers taught academy 
verb simple past form past participle form corresponding differences meanings officers taught officers taught respectively 
lexical semantic ambiguities arise word meaning syntactic category 
instance word bat sentence bats 
ambiguous 
mean noun referring instrument hitting ball ball game noun meaning flying mammals 
lexical semantic ambiguity global ambiguity isolated sentence tell choose meanings bats 
lexical semantic ambiguities called word sense ambiguities 
structural ambiguities arise multiple ways composing word meanings sentence 
structural ambiguities may arise underlying lexical ambiguities 
structural syntactic ambiguities simply structural ambiguities result multiple possible compositions words sentence syntactic knowledge 
syntactic analysis results multiple assignments hierarchical structure structural ambiguities 
example sentence man saw ship telescope 
global structural ambiguity clear meaning phrase telescope composed meaning ship meaning saw 
syntactic terms clear attach prepositional phrase telescope noun phrase ship verb phrase saw ship hierarchical syntactic structure sentence 
sentence structural syntactic ambiguity global ambiguity arise underlying lexical ambiguity 
sense purely structural syntactic ambiguity 
ambiguity structure difference meaning sentence ship telescope board man saw see ship telescope instrument 
structural syntactic ambiguities frequently difference meaning 
example sentence taken earlier example sentence high percentage cancer deaths group structural ambiguity attaching prepositional phrase group high percentage cancer deaths 
spurious ambiguity attachments result final semantic composition deaths group caused cancer percentage deaths high 
eliminating spurious ambiguities major problem building models sentence understanding jacobs jacobs 
example global ambiguity 
structural syntactic ambiguities local 
instance sentence word bats ambiguous category verb meaning action bat 
green apples 
local structural ambiguity word green adjective green modify verb green 
start new noun phrase completed apples sentence 
local structural ambiguity important raises question meaning green composed meaning meaning apples 
structural semantic ambiguities arise sentence unique syntactic structure multiple semantic compositions possible 
example consider sentences officers taught faculty 
courses taught faculty 
sentences syntactic structure 
thematic roles assigned subject nouns different sentences officers teaching courses themes teaching see chapter description thematic roles 
example purely semantic structural ambiguity hat hidden clock 
clock hide hat hide hat clock 
example strong semantic bias semantic composition 
way look ambiguities terms types knowledge described help resolve particular ambiguity 
instance structural syntactic ambiguities resolved syntactic preferences semantic biases global context natural language communication 
similarly word sense ambiguities lexical semantic ambiguities resolved knowledge frequencies word meaning usage lexicon corpus syntactic knowledge semantic preferences 
part sentence shown officers taught academy structural syntactic ambiguity ambiguity taught academy composed officers mean officers taught academy officers composed taught mean officers taught academy 
ambiguity arises subcategory ambiguity word taught discussed earlier possible omission relative clause markers 
ambiguity resolved purely syntactic preferences second structural compositions mentioned see section example chapter explanation 
sentence structural ambiguity similar sentence ambiguity saw ship horse horse instrument seeing 
ambiguity resolved argue semantics thematic roles strange call structural semantic ambiguity apparent distinction hierarchical structures syntactic semantic meanings 
simply consequence semantics 
structural differences show ambiguities kind compositional semantics proposed peterson 
semantic conceptual knowledge horses belong class objects optical instruments seeing 
officers saw ship horse 
officers saw ship telescope 
sentence structural ambiguity resolved determinism criterion taken account justified commitments global context told telescope ship officer 
case word sense ambiguities bugs mean insects electronic microphones purposes choose meanings fact insect meaning frequently certain domain appropriate meaning 
cases may resolved syntactic semantic preferences bugs moved lounge 
bugs insects insects go syntactic composition means bugs moved lounge bugs moved lounge 
may noted syntactic preferences provided basic disambiguating criterion understander employed additional semantic conceptual knowledge insects move microphones order resolve ambiguity 
complex interactions different types knowledge sentence understanding hard task model 
example lexical semantic ambiguity structural syntactic ambiguity 
combinations ambiguities lead combinatorial explosions proposing hundreds possible interpretations sentence understander applies available types knowledge right times minimize effects ambiguity 
classification excludes kind ambiguity composing word meanings 
type ambiguity arises noun groups 
example compose meanings tea noun tea spoon tea cup tea time 
problem addressed structure semantics language help resolving ambiguities 
resolved largely global context communication domain specific pieces knowledge 
ambiguities major problem language understanding see halliday martin problems nominalization 
knowledge sources language understanding kinds knowledge language specific extra linguistic necessary map input sentence output representation meaning resolving ambiguities mapping 
natural language set conventions communicating meaning generator comprehender 
types linguistic knowledge merely distinct types regularities observe natural language 
sentence natural language looked structured collection cues meaning intended communicated 
regularities cues cues map meanings differ language language 
discussion knowledge sources somewhat specific english close relatives 
types knowledge word meanings meaning communicated natural language viewed conceptual graph structure components meaning forming nodes various relationships forming links 
components meaning conveyed encoded sentence form content words nouns verbs 
words constitute basic units meaning natural language 
words single meanings words multiple meanings resulting ambiguities 
mapping words meanings means 
word category information apart meaning word word contains variety cues syntactic grammatical category word known part speech subcategories particular inflection word indicating linguistic cues tense number gender case person 
knowledge cues part grammar syntactic knowledge constitutes essential type knowledge employed sentence interpretation 
syntactic structure grammar sequential order grouping words sentence serves important cue determining relationships meanings words 
task sentence understanding involves selection word meanings combining composing bigger connected units leading meaning sentence 
knowledge syntactic structure natural language provides cues composition identifying words combine meanings composite units combine units 
knowledge saves having try possible combination word meanings sentence 
syntactic knowledge helps transform simple sequence words sentence hierarchical grouping combinations word meanings 
instance sentence starting adjective noun verb syntax tells meaning adjective composed meaning noun turn composed meaning verb 
instance tells need consider composition meanings adjective verb sentence 
young lady kissed 
slightly different type knowledge known structural knowledge considered part syntactic knowledge 
knowledge preferences particular syntactic structures related structures 
instance ambiguity possible syntactic structures may preference minimal structure non minimal 
preferences kind known help language processor resolve ambiguities left unresolved frazier 
examples structural preferences attachment ambiguities prepositional phrases conjunctions see chapter 
semantic knowledge semantics defined comprising aspects meaning marked surface form language 
semantic knowledge knowledge structural compositions marked syntax map relationships meanings parts 
mean knowledge may needed map particular instance syntactic form meaning semantic knowledge 
extra linguistic types knowledge may necessary disambiguate mapping 
semantic knowledge merely identifies relationships grammatical forms utterances different equivalence classes meanings combine 
linguists identified distinct components meaning expressible natural language frawley focus attention events objects properties certain extent thematic roles link events objects 
semantics knowledge semantics knowledge linearity natural language communication fact imposed human vocal apparatus 
communicate conceptual graphs meanings uttering linear sequence words 
natural language provides mechanisms required communication effectively linearized forms complex conceptual graph 
mechanisms syntax semantics natural language 
grammatical roles identified syntax subject object map corresponding thematic roles agent theme 
example piece knowledge tells meaning noun preposition combines meaning previous verb noun role instrument collateral theme role piece semantic knowledge 
part meaning sentence marked explicitly surface form sentence preposition ordering words appropriately 
piece knowledge tells particular noun prepositional phrase instrument particular event denoted verb semantic knowledge extra linguistic piece knowledge marked surface form sentence manner whatsoever falls conceptual knowledge 
conceptual knowledge conceptual knowledge knowledge events objects components meaning irrespective expressed natural language 
instance knowledge telescope instrument seeing horse piece conceptual knowledge origins knowledge particular world agent experience domain 
piece knowledge marked surface form natural language sentence sentence 
sentence interpreter needs piece knowledge resolve ambiguity horse accompanying object seen instrument see object sentence 
officer saw ship horse 
lexical non lexical knowledge look completely orthogonal partitioning linguistic knowledge divide knowledge natural language understanding lexical non lexical knowledge 
lexical knowledge knowledge specific particular word knowledge lexical entry word 
word specific lexical knowledge type knowledge typically includes syntactic category information meaning word subcategory information subcategorization information thematic grids carlson tanenhaus 
non lexical knowledge knowledge syntactic semantic specific particular word 
instance knowledge grammar thematic role combines typically falls general knowledge 
piece semantic knowledge described specific particular word associated particular lexical entry 
may noted models ca see birnbaum selfridge grammatical theories lexical functional grammars bresnan kaplan see sells different types non lexical knowledge lexicalized associating appropriate instances lexical entry 
may useful way combining different types knowledge introduces lot redundancy lexical entries words equivalence classes violates principle functional independence different types knowledge 
mean conceptual knowledge expressed natural language 
expressed natural language 
sentence knowledge required map input intended meaning knowledge marked explicitly sentence manner 
word basic lexical unit somewhat loose characterization phrasal lexicons commonly occurring phrases lexical knowledge associated 
task decomposition input sentence comprehension task set words meanings variety linguistic information marked things word order punctuation function words articles particles prepositions various inflections words marking number gender person tense causality 
task sentence comprehension take input map desired unique composition unique meanings words sentence 
decompose task subtasks word meaning selection word meaning composition 
way arrive task decomposition sentence comprehension task look terms types knowledge task 
language comprehension requires different types knowledge task comprehension decomposed subtasks corresponding application particular type knowledge mapping input output 
mode task decomposition particularly useful additional constraint functional independence type knowledge relative 
main subtasks result decomposition lexical access syntactic processing semantic processing 
see tasks related main tasks word meaning selection composition 
word meaning selection task word input returning unique meaning word 
words syntactic categories categories may meanings task word meaning selection decomposed tasks category selection word sense disambiguation apart obvious task lexical entry retrieval 
lexical entry retrieval task word retrieving lexicon lexical entries indexed word root form word morphology analyzed 
knowledge task lexical knowledge lexicon 
task may knowledge morphology language words analyzed morphologically roots inflections 
word category selection done proposing default preferred frequent category word selecting category best fits current syntactic context word sentence 
instance possible categories word expected prior syntactic context word selected 
task word category selection subtask syntactic context determination simply syntactic processing 
depending method word category selection recency frequency knowledge syntactic knowledge 
word sense disambiguation task word particular grammatical category selecting possible meanings word 
may accomplished defaults relative frequencies method interested selecting meanings acceptable current semantic context 
means need determine current semantic structure order test word sense fits semantic context 
word sense disambiguation requires task semantic processing 
word sense disambiguation recency frequency knowledge semantic conceptual knowledge equivalence classes meanings composed composition occurs 
word meaning composition task set chosen meanings content part consider methods frequencies collocations see chapter brief discussion 
methods accomplish number subtasks described interested parsimonious generative theory explain sentence interpretation occurs relying particular domain trained particular corpus 
reason attempt connectionist implementation model 
acknowledge methods necessary sentence interpretation may able give complete account sentence interpretation resorting methods point 
word sentence producing composite meaning sentence 
order avoid having try possible combination word meanings meaning composition done preferences syntactic semantic knowledge 
applying syntactic knowledge perform composition involves determination syntactic structure sequence words sentence subtask required word category selection 
similarly applying semantic knowledge composition task requires build semantic structure sentence corresponds syntactic structure useful ways peterson subtask required word sense disambiguation 
syntactic structure assignment syntactic analysis short takes linear sequence syntactic categories words sentence assigns hierarchical structure sequence 
hierarchy identifies particular word meanings combined 
addition incorporates closed class words sentence prepositions suggest particular ways composing word meanings 
syntactic analysis uses syntactic knowledge knowledge grammar language 
syntactic analysis general completed grammatical knowledge ambiguities grammar sentence 
assignment unique structure dependent semantic conceptual analyses 
semantic structure assignment semantic analysis short takes partial hierarchy word meanings determined syntactic analysis assigns semantic structure 
identifies semantic primitive semantic relationship role meanings related 
result composition meanings words linkage provided roles assigned semantics composition 
task accomplished application semantic knowledge tells different semantic relationships roles combine classes meanings assume roles semantics 
extra linguistic type knowledge semantic analysis conceptual knowledge preferences particular meanings concepts regard combine meanings particular role 
semantic analysis dependent compositions suggested hierarchy syntax assigns 
syntactic guidance semantic analysis highly ambiguous trying possible combination word meanings overly restricting contexts 
semantic analysis unnecessary syntactic hierarchies mapping semantic roles denoting relationships different meanings 
language directly syntactic compositions perform conceptual analysis meanings sentence 
natural languages including heavily inflected case marked ones direct mapping syntactic structures conceptual relationships components meaning sentence see example covington 
semantic analysis viewed bridging gap resolving certain ambiguities mapping syntactic relationships words conceptual relationships meanings 
analysis ignored tasks assisting execution subtasks listed 
instance discourse analysis resolution shown assist word meaning selection word meaning composition 
analysis exclude role played tasks sake simplicity focus 
may noted ignoring tasks part sentence comprehension 
example inference interpolation gaps unspecified parts meaning sentence 
may noted strictly hierarchical task decomposition subtasks exist merely service parent task 
dependencies tasks largely mutual 
instance tasks syntactic structure assignment semantic structure assignment mutually dependent sense subtasks 
task decomposition structure shown 
may noted term discourse analysis refer subtasks natural language understanding sentence understanding 
natural language understanding sentence understanding discourse analysis word meaning selection word meaning composition lexical entry retrieval word category selection word sense disambiguation syntactic analysis semantic analysis information flow task decomposition task decomposition information flow sentence understanding 
clear point dependencies tasks suggest temporal sequencing execution tasks modules accomplish tasks computational implementation especially dependencies mutual 
instance said semantic analysis uses syntactic structure follow semantic analysis performed syntactic analysis completed 
importance drawing architecture sentence comprehension system 
example model discourse understanding includes explanation reasoning processes see ram 
incremental communication subtasks seen task decomposition syntactic semantic analyses needed word meaning selection word meaning composition 
turns syntactic semantic analysis done independently ambiguities 
syntactic analysis needs things feedback semantic analysis provide order assign unique hierarchical structure sentence 
semantic analysis hand needs guidance syntax try possible composition set word meanings sentence 
problem ambiguity consequent combinatorial explosion number possible interpretations sentence syntactic semantic analyses communicate incrementally provide information help reduce number interpretations considered 
incremental communication syntax semantics produce incremental interpretations sentence adequately handling different kinds ambiguities natural language 
analyze issue syntax semantics communication say control processing sentence understanding greater detail chapter chapter 
example illustrate tasks subtasks consider sentence bugs moved lounge quickly 
input example contains information ffl content words bugs moved lounge quickly ffl word order specifies word precedes followed ffl word suggesting definite necessarily existing discourse context case bugs sentence instance bugs lounge ffl preposition suggesting destination location role noun lounge ffl auxiliary denoting past tense plurality passivity ffl inflections words bugs ed moved ly quickly suggesting plurality noun category bugs third person tense verb category bugs past tense past participle verb moved adverb form quick 
information task understanding sentence choose appropriate meanings words bugs moved lounge quickly compose meanings form meaning entire sentence 
consider task word meaning selection word bugs 
lexical entry retrieval word bugs tells word possible syntactic categories noun verb 
order perform word category selection need determine syntactic structure sentence point 
syntactic analysis tells seeing determiner expecting noun follow verb see 
syntactic context select noun category bugs 
word sense disambiguation task choosing possible meanings noun form bugs insect bugs electronic microphones see table 
insect meaning may common microphone meaning contexts frequency information correctly resolve word sense ambiguity 
point sentence understanding semantic information perform word sense disambiguation 
best bet postpone task move ahead reading sentence 
carry meanings noun bugs read word 
word moved verb entry lexicon corresponding meaning event move 
try compose meanings words bugs moved 
syntactically ways composing parts sentence noun phrase bugs verb phrase moved 
attach verb directly main verb sentence reduced relative clause noun phrase 
semantically meaning bugs compatible relative clause attachment corresponding semantic composition theme role meanings bugs move event 
insect meaning bugs compatible direct attachment insect bugs class animate objects move agents move events piece conceptual knowledge 
ambiguity resolved favor direct attachment syntactic preference attachment completes sentence structure filling expectation verb phrase point sentence 
result choice microphone meaning bugs deactivated incompatible composition selected syntactic analysis 
analysis proceeds produce composite meaning part sentence bugs moved lounge 
point way composing meaning word existing sentence structure 
assuming sentence syntactically correct grammatical hypothesize erroneous decision 
going back looking previous decisions find decided compose bugs moved making moved main verb 
identify error noting way currently attaching new verb phrase containing decision moved main verb attachment verb phrase verb moved 
different decision earlier related choice room left syntactic structures compose meaning phrase starting 
repairing previous syntactic structures 
attach moved meaning lounge composed meaning moved reduced relative clause bugs recover error 
room composing meaning earlier meanings 
process error recovery removing previous attachment moved bugs reconsider associated decision deactivating microphone meaning bugs 
longer reason rule microphone meaning type bugs themes moved bring back deactivated meaning bugs 
reintroduce ambiguity meaning bugs undo word sense disambiguation performed earlier 
example shows need error recovery subtask shows complexities interactions tasks 
necessary functionally cognitively motivated constraint incremental interpretation 
figures table show intermediate results processing example word 
figures show syntactic structures table shows corresponding meanings semantic roles assigned meanings 
example derive psychological prediction generated compere word sense ambiguity bugs example remains unresolved sentence resolved temporarily resolution error 
see chapter discussion compere predictions 
det np det np det np prep pp vp det np vp bugs moved bugs bugs moved prep pp det np vp bugs moved det np syntactic structures word sentence part 
prep pp det np vp det np lounge bugs moved prep pp det np vp det np lounge bugs moved rel rel cl vp vp aux syntactic structures word sentence part 
np vp aux quickly np vp aux adv syntactic structures word sentence part 
table semantics word sentence 
part word semantics bugs insect microphone moved insect agent move event lounge lounge location move event insect microphone theme move event lounge location move event insect microphone theme move event lounge location move event insect microphone theme find event quickly chapter syntax semantics communication sentence processing architectures really going coordinated process variety syntactic semantic information relevant hearer takes advantage useful understanding part sentence 
winograd previous chapter identified subtasks syntactic semantic analyses showed necessary word meaning selection word meaning composition 
noted general syntactic semantic analysis completed useful information provided 
chapter examine issue communication incremental sentence interpretation 
noting reasons functional analysis proposing incremental communication analyze nature communication 
investigate different sentence processing architectures analyze kinds communication different architectures afford 
arrive particular architecture enabling incremental communication syntax semantics 
need communication reasons proposing sentence processing architecture syntactic semantic processing communicate incrementally sentence comprehension 
functional motivation ambiguity functional point view mapping input sentence syntactic structure semantic representation underconstrained highly ambiguous 
subtask semantic word meaning composition absence syntactic guidance largely combinatorial 
similarly assignment unique syntactic structure impossible semantic feedback helps constrain possible structures 
parsing programs get bogged multiplicity possible syntactic structures processing sentence natural language 
parsing strategies left encounter enormous number syntactic ambiguities sentences human difficulty 
example seen chapter sentence leads syntactic parser semantic feedback possible syntactic structures sentence jacobs 
argue modern computers may get bogged alternatives 
true computing speed problem certain extent problem selecting interpretation set just number alternatives set 
points ambiguous attachments sentence example alternatives ambiguity incremental processor apply locally available knowledge ambiguous point selection 
example syntactic form asbestos kent cigarette filters caused high percentage cancer deaths group workers exposed years ago researchers reported 
syntactic processing needs external help eliminate alternative parse structures early 
information enabling early commitment come results semantic conceptual analyses 
order information reduce complexity syntactic processing syntax semantics communicate early incrementally 
semantic feedback important source information parser deal local ambiguities syntax 
difficult devise systematic communication mechanism interactive syntax semantics 
focus investigation natural language processing research moved away issue semantic feedback primarily due difficulty getting communication syntax semantics clean systematic manner 
semantics fact provide useful information fed back syntax helps eliminate alternative syntactic structure 
natural languages replete ambiguities levels intuitive processing architecture incremental interaction levels syntax semantics best immediate syntactic semantic information eliminate alternatives win syntax semantics mechanism 
cognitive constraints seen chapter experimental results psycholinguistics demonstrated number phenomena immediate semantic influence syntactic garden paths error recovery delayed decisions early commitment 
behaviors explained architecture permits incremental interaction syntax semantics 
order account effect context presence absence garden path effects reduced relative clause sentences pair sentence processor combine top bottom influences sentence comprehension arising syntactic sources knowledge parsing algorithm combine information arising semantic conceptual analyses syntactic preferences 
cognitive model human sentence processing incremental interaction syntactic semantic analyses 
officers taught academy demanding 
courses taught academy demanding 
generativity addition functional cognitive constraints want model sentence comprehension computationally minimal 
perform task fewest types amount knowledge minimal set processing mechanisms enable sentence comprehension 
minimal processor said high degree generativity deal variety input sentences concise representation requisite knowledge 
maintaining generativity entails independence different sources preference may resolve ambiguity semantic constraint resolve second 
decisions deferred hand processor weigh combine evidence provided various pieces information various combinations order select alternative best pieces information 
additional knowledge required combine pieces information arising disparate sources knowledge syntax semantics available practice 
see discussion arbitration algorithm chapters details 
knowledge described 
combining knowledge obtained separate sources dynamically sentence interpretation turn requires incremental communication syntax semantics 
order illustrate need independent representation different types knowledge dynamic integration sentence interpretation means incremental communication syntactic semantic processes consider nature different types knowledge examine alternative solution require incremental communication separable syntactic semantic processes 
integrated representations type linguistic knowledge set regularities world 
instance syntactic knowledge set regularities structure natural language sentences 
semantic knowledge set regularities relationships structure meaning natural language 
conceptual knowledge set regularities objects events components meaning world irrespective linguistic forms take 
independently representing processing type regularity knowledge language understanding maximize generativity language processor 
processor specific particular sublanguage domain 
example combine regularities priori particular domain particular sublanguage form semantic grammar integrated construction 
combining kinds regularities predetermined ways language processor loses certain combinations independent regularities 
hand possible combination included integrated representation course resulting search space just large advantage combining different types knowledge priori 
prior integration syntactic semantic knowledge suit domain sublanguage result loss generativity language processor 
example piece syntactic knowledge tells subject noun phrase followed verb subcategory ambiguity simple past tense form past participle form prefer simple past form satisfy expectation main verb complete sentence structure 
fact knowledge simply stated syntactic preference expected structure leave expectation unfulfilled 
piece semantic knowledge tells subject noun phrases active voice sentences take agent roles event represented verb accepts subject noun agent 
piece conceptual knowledge tells verb taught agent adult human 
represent pieces knowledge independently stated combine integrated representation particular situation verb taught 
integrated piece knowledge tells subject noun taught active voice sentence adult prefer simple past tense form taught prefer past participle form 
sentence processor understand sentence 
children taught academy 
sentence conceptual knowledge violated children take agent role represent adult animate entities 
strong syntactic preference assigning complete syntactic structure sentence time word sentence processed conceptual preference non agent role children disregarded left incomplete sentence structure waiting see main verb 
excluding particular composition meanings involved enumerate possible integration pieces knowledge 
represent independent pieces knowledge combine processing account presence absence garden path effects sentences understand sentence combining different way time disregarding conceptual knowledge syntactic structure sentence overrides conceptual preference 
example shows rules says syntactic preferences overrule conceptual ones certain conditions sentence processor able separate syntactic conceptual pieces knowledge 
integrated priori way separating excluding conceptual constraint favor syntactic 
see chapter discussion psycholinguistic implications compere deals sentence 
decide represent different types knowledge independently way combining dynamically sentence processing order adhere integrated processing principle types available information soon possible making sentence processing decisions 
dynamic combination deferred incremental required functional cognitive reasons 
nature communication examine nature interactions different types knowledge see need arbitrating process control interactions 
seen syntax semantics communication substituted priori integration syntactic semantic knowledge 
form communication take 
analyzing content communication looking different knowledge sources contribute decision making sentence interpretation 
consider word category information syntactic knowledge form grammar interact 
look interaction word meaning semantic conceptual knowledge syntactic knowledge processing 
argue order address functional cognitive motivations incremental communication syntax semantics computational model employ single arbitration process integrate independently proposed syntactic semantic interpretations resolve ambiguities 
interaction knowledge sources syntax syntactic processing employs knowledge word terms category information arising inflections knowledge grammar phrases clauses sentences natural language 
interactions sources information terms piece knowledge applied influence process syntactic structure assignment determine parsing algorithm employed syntactic analysis 
order meet cognitive functional constraints sentence processor turns start word information worry grammar bottom processing start grammar look word information input time top processing 
sentence processor employ combination bottom top parsing assign syntactic structures sentences minimizing number different assignments possible see chapter 
steedman claims standard theories parsing phrase structure rules incompatible incremental processing steps taken parser psychologically real 
data driven models language comprehension bottom strategies appear compatible incremental semantic interpretation 
incremental comprehension viewed bottom strategy interprets successively larger constituent built word sentence 
possible apply incremental bottom strategy phrase structure rules resulting process incremental bottom parser waits seen daughter constituent interpreting 
phrase structure rules applied carry incremental interpretation sentences left branching structure common natural languages including english steedman 
top strategy hand force processor commit constituent analyzing parts 
making commitments processor necessary information results unwarranted backtracking 
need bottom parser combined top guidance early commitments seeing part constituent semantic interpretation incremental 
early commitments may employing top influence variety types knowledge 
types top guidance bottom parsing information providing top guidance parser types syntactic expectations arising grammatical information categories involved steedman general structural principles frazier feedback semantics discourse interpretation see example crain steedman taraban mcclelland 
syntactic expectation grammatical information tells processor arguments follow current constituent complete grammatical 
instance seeing noun phrase verb follow sentence complete 
say processor expect see verb phrase point 
parser syntactic expectations called predictions early commitments syntactic ambiguities 
grammatical preference expected structures results behavior expected minimal attachment principle explains garden path behavior reduced relative clause sentences 
officers taught academy demanding 
semantic conceptual preference way introduce top influence attachment ambiguities incremental semantic interaction 
semantic discourse processes feedback syntactic processing exert preferences attachments crain steedman stowe 
instance semantic feedback tell processor prepositional phrase pp sentence attached noun phrase soldier verb saw horse instrument seeing 
officer saw soldier horse 
structural preference parser able exert purely structural preferences independent categories lexical items involved ambiguous parts sentence 
examples preference right association minimal attachment frazier 
syntactic generalizations allow syntactic processor early commitments optional adjuncts expected explaining syntactic phenomena frazier 
psychological evidence structural ambiguity resolution demonstrates need form top influence 
example stowe see blackwell bates shown human sentence processor delays decision early commitment conflict syntactic semantic preferences structural ambiguity top influence grammar structural principles semantic feedback contradict 
experiments showed people continue delay decision pursue multiple interpretations reach resource limits 
limit choice syntactic preferences 
result left unexplained presence top influence structural preferences 
psychological studies syntactic ambiguity resolution certain limitations role semantic contextual information resolving syntactic ambiguities need purely syntactic preferences explain syntactic disambiguation limitations king just macdonald just carpenter see review psycholinguistic literature chapter 
control parsing top guidance syntactic expectations structural preferences integrated bottom control parsing employing form left corner parsing abney johnson 
developed variant left corner parsing adding virtues parsing 
resulting mechanism call head signaled left corner parsing produces right sequence syntactic commitments account variety data 
parser implemented compere model 
parsing algorithm theory parsing described chapter mahesh 
need arbitration mechanism top bottom influences sentence comprehension arising syntactic sources knowledge combined parsing algorithm mentioned sentence processor combine information coming semantic conceptual analyses syntactic interpretations 
seen communication syntax semantics necessary account evidence interaction delayed decisions early commitment error recovery 
left corner parsing algorithm merely identifies points communication ought occur doesn tell communication handled conflicts resolved best interests functional cognitive constraints behavior sentence interpreter 
way mentioned earlier integrate representations different types knowledge priori semantic grammars called grammatical constructions certain models jurafsky 
approach suffers reduced generativity disadvantages 
order avoid losing generativity see section earlier sentence processor keep knowledge sources separate introduce arbitration mechanism dynamically combines information arising independent syntactic semantic sources resolving conflicts arise process 
arbitrator needs combine information coming independent syntactic semantic sources talk different terms 
syntax describes interpretations terms grammatical relations subject object roles semantics talks terms thematic roles 
arbitrator establish correspondences syntactic semantic interpretations decisions 
purposes illustration simplicity employing thematic role assignment selectional preferences lexicon theory semantics 
approach limited thematic roles 
example structured theory semantics see peterson 
translation functional terms syntactic semantic sources information capable independently proposing generating alternative interpretations sentence 
order reduce number alternatives consider commitments interpretations early influence decisions 
nature communication syntax semantics take form message passing architecture achieved common arbitrator 
syntax semantics knowledge different kinds regularities exist translating mechanism communication 
translator bridges communication gap languages syntactic semantic attachments preferences coming corresponding regularities establishing correspondences different representations decisions syntax semantics 
instance translator may translate syntactic decision attaching word main verb sentence corresponding semantic decision assigning agent role subject noun event represented verb 
direction translator translate semantic preference corresponding syntactic decision 
semantic preference allowing word filler instrument role event corresponding syntactic decision may prepositional phrase word noun attached verb phrase corresponding event 
problems approach 
procedural solution known disadvantages comparable declarative solution 
second error recovery incremental sentence comprehension changes syntax semantics correspond order ensure consistency resulting interpretation 
problematic representation correspondence translation procedures correspondence information representations need manipulated error recovery mechanisms 
kind recovery possible reprocessing representations intermediate decisions repair backtrack 
example consider sentence bugs moved lounge 
semantic representation corresponding main verb interpretation moved insect meaning bug agent role move event destination location role filled lounge 
sentence continues bugs moved lounge quickly 
previous syntactic structure repaired reinterpret sentence bugs theme role move event find event 
error recovery bring back microphone electronic device meaning bugs longer ruled theme role move 
words repair syntactic structure remove verb move main sentence structure moving reduced relative clause corresponding things semantics replace agent thematic role bugs new theme role bring back previously deactivated microphone meaning bugs 
sentence processor merely employed translating procedure map syntax semantics practically reinterpret sentence error recovery record syntactic commitments corresponded semantic decisions vice versa 
record decision points intermediate syntactic structures discussion procedural versus declarative knowledge representation see barr feigenbaum 
thematic roles backtrack redo entire job sentence interpretation 
correspondence syntax semantics established translation procedure represented error recovery 
alternative intermediate roles alternative solution gap bridged intermediate decision points mapping process declarative representations 
intermediate points connect syntactic semantic decisions interpretations network roles enable translation error recovery coherent consistent manipulations syntactic semantic interpretations sentence 
view bridging gap syntactic semantic structures intermediate roles leads uniform representation syntactic semantic knowledge sentence interpretations terms spectrum roles range grammatical roles np subject object vp way thematic roles event agent theme 
uniform representation syntactic semantic knowledge enables syntactic semantic interpretations integrated intermediate roles syntactic semantic processing integrated unified arbitrator 
representational primitive uniform representation node specifies part part relations nodes preconditions relations expectations generated relations 
intermediate roles uniform representation syntax semantics arbitration described chapters mahesh eiselt 
rest chapter deal issue computational architectures permit kind incremental communication syntax semantics described 
analyze spectrum possible configurations syntactic semantic knowledge processes derive particular architecture best suited incremental communication arbitrator 
sentence processing architectures computational architectures proposed various models sentence understanding 
order able compare see kind communication architecture affords afford try map different dimensions architectures sentence processors differ 
architecture sentence processor architectural elements ffl knowledge sources representations different kinds knowledge including built processing sentences 
ffl processes processes process set operators different kinds knowledge embedded control structure 
control structures control elements sequence recursion coroutines 
note talk processors 
processor element implementation architectural element marr 
refer entire architecture language processor 
architectures connect architectural elements various ways series parallel turn enable disable different kinds communications processes 
architectural dimensions sentence processing architectures differ features ffl language analyses language analysis combination knowledge sources process applying knowledge accomplish particular subtask language understanding task 
example lexical syntactic semantic analyses distinct language analyses theories 
terms levels faculties refer elements analyses 
note levels usually refer stages analyses stages 
implication sequentiality different analyses 
sequential models place analyses sequence modules parallel models place parallel integrated models combine different analyses module combine various modules described 
sentence processing architectures differ terms kinds analyses include model sentence interpretation 
ffl nature decomposition task sentence understanding decomposed modules lines language analyses syntax semantics conceptual analyses orthogonally modules comprised similar processes running analyses 
example orthogonal decomposition divide language understanding modules access integration selection may going part lexical syntactic semantic conceptual analysis 
ffl configuration modules obtained decomposition possibly arranged configurations sequence stages sequential models single module integrated models various parallel configurations case certain interactive models 
ffl nature interaction interaction modules architecture happen shared representation working memory blackboard acting knowledge source understood units participating interaction happen control structures processes different modules transfer control exchange messages may translated shared representation 
ffl modularity task decomposed resulting units arranged different ways interact various ways 
amount nature interaction different modules described terms different kinds modularity fodor marslen wilson tyler tanenhaus dell carlson representational modularity known information encapsulation means module exclusive representation kind knowledge accessible module 
knowledge sources exclusive processes 
strong form modularity interaction happen shared representations 
process modularity means module process control structure interact process 
form interaction possible common representation blackboard see 
functional modularity means modules interact way long functionally independent perform function fails run 
parts module may functionally dependent parts module independent modules 
functional modularity permits interaction common representations blackboard architecture message passing control structures modules 
functional modularity permits considerable freedom respect kind interactions possible 
module exclusive knowledge source plus process kind modularity isolated process second notion modularity defined meaning functionally independent architecture 
instance independent representations knowledge sources single unified process operating just module different modules 
functional independence preclude sharing knowledge sources processes long render accomplishment function inevitably dependent 
ffl grain size intimacy interaction say modules interact processing carry meaning specify grain size interval interaction 
instance syntax semantics interact sentence particularly interactive 
hand interact word highly interactive parallel model 
important note architecture described differently different grain sizes 
instance looks parallel architecture size clause interaction going grain size finer clause sequential smaller grain size 
particularly true case interaction syntax semantics 
lexical entry word accessed significant syntactic semantic analyses 
similarly syntactic processing word resulting binding phrase structure happen partially semantic processing 
valuable information syntax provide semantics exploited semantic processing wasteful 
syntactic processing word need done semantics take 
short desirable sequentiality fine grain size independence parallelism coarser grain sizes 
noted reducing grain size interaction cascading modules sequential model brings closer parallel model fundamentally different cascaded model allows interaction modules direction 
parallel models built permit interactions modules directions 
different positions taken sentence processing models architectural dimensions shown table 
table architectural space sentence 
dimension possible positions nature decomposition analyses orthogonal configuration serial parallel integrated nature interaction uncontrolled message passing blackboard controlled type modularity representational process functional grain size interaction word word phrase clause sentence psycholinguistic point view computational models proposed account human language understanding capabilities 
sentence processing models better explaining certain kinds behavior 
instance models assume autonomy syntactic level explain interactive behaviors forster 
models explain subtask task sentence understanding focusing aspect language processing language analysis case models marcus wilks 
instance models lexical ambiguity resolution syntactic parsing pronoun relative clauses 
built complete model sentence processing analyzes lexical information syntax semantics sentence arrive best interpretation possible 
role computational model just producing behaviors people showing computational feasibility theory 
model supposed explain computationally sentence processor arrive interpretation 
model point parts behavior noted human performance 
model lead generation hypotheses particular details sentence processor architecture lead testable predictions design experiments computational psychological theoretical empirical 
describe number possible points dimensions sentence processing architectures analyze relation kinds communication syntax semantics enable 
sequential architecture models sentence understanding classified sequential integrated parallel models depending knowledge representations different processes relate 
sequential architecture lower level process get feedback higherlevel process 
level receives output processing previous lower level sends output higher level 
traditionally task language understanding decomposed analyses syntax semantics pragmatics arranged sequential architecture shown 
sequential model advantage accounting fast autonomous processing syntactic earlier stages 
stated earlier sequential models improve efficiency effectiveness sentence processing cascading different modules reducing grain size interaction case merely passing results processing lower level higher level 
way communication processing lower levels take advantage results knowledge available analyses carried higher levels 
integrated architectures integrated processing principle birnbaum birnbaum schank states language processor applies syntactic semantic kinds knowledge earliest opportunity processing piece text see chapter 
integrated models language understanding assume just employ integrated representations knowledge just integration information provided representations processing 
retain independence different kinds knowledge involved linguistic competence 
result integrated models account functionally independent behaviors language understanding 
principle called integrated processing principle integration modeled representation 
consider phonology morphology model pragmatic discourse processing resolution model 
syntax semantics pragmatics input sequential architecture 
integrated processor integrated knowledge input text output decisions integrated architecture 
example model integrated independently represented syntactic semantic knowledge dynamically processing lytinen model sequential semantics model 
fact seen earlier chapter integrated processing principle entails functional independence different knowledge sources 
previous implementations integrated processing support functional independence exception sequential model 
sense claim compere true implementation integrated processing principle 
class integrated models integrated representations different kinds knowledge represented monolithic knowledge base integrated constructs called grammatical constructions jurafsky 
models differ integrated mod els mentioned detailing explicit decomposition integrated process access selection integration alternative interpretations see 
example decomposition language processing task orthogonal standard analyses syntax semantics pragmatics 
sentence interpretation architecture decomposed subtasks ffl accessing lexical entries word ffl proposing feasible ways integrating word current interpretations distinct syntactic semantic integrations compositions ffl selecting preferred interpretation 
models orthogonal decompositions differ architectural details propose possible interpretations select propose select reject time 
parallel architectures parallel architectures retain independent representations different kinds knowledge support line interaction integrating longer independent degree 
integration information happens processing sentence 
parallel models adhere integrated processing principle having sacrifice independence uses different kinds knowledge 
syntax semantics placed parallel different ways 
different parallel configurations yield different degrees control communication syntax semantics 
ffl uncontrolled interaction simplest parallel configuration syntactic semantic processes interact continuously monitoring arbitration translation 
processes shared language represent information operations manipulate information interact fashion 
mechanism certain connectionist models waltz pollack 
remains seen uncontrolled interaction processing mechanisms spreading activation model variety interactions syntax semantics observed human sentence processing frazier marslen wilson tyler stowe 
computational point view clear processing mechanisms deal complexities linguistic structure effectively reduce degree local ambiguity encountered sentence interpreter 
ffl interaction translator parallel configuration syntax semantics translator syntactic semantic processes 
gives syntax semantics freedom internal representations processes 
words architecture permit representational modularity modules 
processes interact messages pass bidirectional translator 
mode communication provide control interaction 
instance syntax semantics conflicting preferences alternative interpretations way imposing preference changing strategy instance limits resources available sentence processor 
discussed section problems translation supervisory control include lack guarantee processes produce interpretations consistent especially error recovery operation lack declarative representation intermediate decisions error recovery 
ffl interaction blackboard blackboard configuration direct communication syntax semantics 
processes communicate writing reading common representation called blackboard erman hayes roth lesser reddy nii reddy erman neely 
configuration guarantee communication occurs process disregard wrote 
proper design representations blackboard may possible guarantee consistency things different processes write blackboard keeping contents blackboard internally consistent times 
give sentence processor control resolution conflicts syntactic semantic preferences 
process writes overwritten record intermediate decisions resulting difficulty implementing error recovery 
ffl controlled interaction arbitrator arbitrator configuration syntactic semantic processes perform analyses send results alternative interpretations preferences central arbitrator 
arbitrator controls interactions processes performing functions synchronizes processes starting stopping operations match operations 
provides feedback process conveying process alternative selected arbitrator 
resolves conflicts selecting alternative best arbitration algorithm see chapters algorithm 
retains alternatives presently selected possible error recovery 
translates representations processes mapping 
access syntactic semantic knowledge simply integrates syntactic semantic information provided independent processes 
architectures syntax semantics communication looking nature syntax semantics communication different architectures possible obvious proposing parallel architecture controlled interaction syntax semantics control function performed arbitrating process 
summarize arguments architectures different architectures discussed pictorially list kinds communication afford table 
compere architecture question address point architectural configuration affords kind syntax semantics interaction arbitration described earlier chapter 
obvious instance architecture sequential way syntactic knowledge semantic knowledge syn sem sequential syntax 
syntactic knowledge semantic knowledge syn sem sequential semantics knowledge process integrated syntactic knowledge semantic knowledge syn sem parallel uncontrolled interaction access selection integration knowledge integrated orthogonal decomposition syntactic knowledge semantic knowledge syn sem translator parallel translator syntactic knowledge semantic knowledge syn sem blackboard parallel blackboard syntactic knowledge semantic knowledge syn sem unified arbitrator parallel controlled interaction various sentence processing architectures 
table syntax semantics communication various architectures 
architecture syntax semantics communication sequential syntax way syntax semantics 
sequential semantics way semantics syntax 
integrated predetermined packaged 
integrated orthogonal decomposition 
parallel uncontrolled interaction way consistency control 
parallel translator way consistency control 
parallel blackboard way possible consistency possible control 
parallel controlled interaction way controlled consistent communication 
flow information 
single process arbitrating process communication 
compere controlled parallel architecture syntax semantics controlled unified arbitrator 
clear discussion sequential architectures suitable permit communication directions syntax semantics 
integrated architectures hand syntax semantics tightly coupled representations 
preserve independence syntax semantics required functional cognitive reasons 
reasons described parallel configurations controlled architecture arbitrator provides right type control communication necessary model sentence processing behaviors cognitive point view reduce local ambiguity produce preferred interpretation functional point view 
unified process 
question ask controlled parallel architecture subtasks solved individual syntactic semantic processes subtasks arbitrator 
related question arbitrating process process exists addition syntax specific semantics specific processes 
instance arbitrator directly access types knowledge eliminating need separate processes altogether 
words syntactic semantic processing completely unified keeping knowledge sources independent 
answer question depends directly nature syntactic semantic processing knowledge 
reason believe syntax semantics different extent syntax linguistic structure semantics structure surface form language separate processes 
question ultimately boils processes 
process control structure plus set operations embedded control structure question really asking syntactic semantic processing performed control structure set operations 
design compere motivated strongly desire unify syntax semantic sense holbrook eiselt mahesh 
taken important reasons approach hypothesizing single process identifying small differences ways different analyses knowledge come proposals attachment preferences alternative attachments 
tried put language processing assumptions separate processes possible keeping mind significant claims modular theories fodor frazier see review chapter 
obvious reason approach parsimony 
start different processes just 
process sentence understanding resolving ambiguities selecting best set interpretations making erroneous decisions way reasonable propose single unified process carries job sentence understanding 
differences may lie operations different kinds knowledge result proposed interpretations various preferences 
apart parsimony psycholinguistic evidence points common process see chapter 
example stowe showed syntactic analysis happens human sentence processing presence ambiguities pretty process semantic analysis process exemplified proposed eiselt 
instance access multiple structures parallel pursue multiple interpretations parallel switch interpretation interact analyses language processing 
see review chapter psycholinguistic results support model burgess lund burgess tanenhaus hoffman eiselt holbrook macdonald just carpenter taraban mcclelland 
fact developed uniform representation grammatical knowledge syntax role knowledge semantics kinds operations applied mahesh eiselt 
control structure unified arbitrator syntactic semantic analyses 
addition common control structure provided arbitration algorithm processes syntax semantics similar control structures dictated head signaled left corner parsing algorithm mahesh mahesh 
type parsing algorithm applied assign syntactic structure assign thematic intermediate roles semantics 
syntactic semantic knowledge inherently different kinds regularities language 
operations instantiation selection composition applied syntactic semantic processing operations slightly different specialized instantiations syntax semantics 
matter illustrated detail chapter 
requirement functional independence important bearing possibility completely unified sentence processor 
architecture arbitrating process process 
look sentence processor having just integrated process 
sentence processor inseparable fashion retain functional independence syntax semantics 
functional independence entails separability syntax semantics certain extent 
distinguishable parts control structure integrated arbitrating process doing syntactic processing consulting syntactic knowledge parts integrated process doing semantic processing consulting semantic knowledge 
separation need time processes synchronous distinguishable importantly independent may contribute cooperate possible 
identical set operations distinct parts control structure labeled syntactic processing parts called semantic processing 
integrated assumed different types knowledge integrated priori 
inseparable integrated process architecture model integrated understander 
want model functional independence syntax semantics want model incremental communication arbitrating process subscribe architecture syntactic semantic processes talking unified arbitrating process doing analyses parallel 
arbitrating mechanism tells processes communicate communicate arbitration 
architecture element orthogonal decomposition greater degree decomposition independent syntactic semantic processes common orthogonal arbitrating process controls integrates independent processes 
point interest cascaded sequential architecture essentially equivalent functionality controlled parallel architecture 
cascaded syntax model fine grain size interaction results small amount syntactic processing sent semantic processor filtering semantically infeasible preferred syntactic alternatives 
may syntax semantics communicating early avoid wasteful syntactic processing fruitless alternatives 
decision semantics rule certain alternatives proposed syntax communicated back syntax order prevent continuing pursue alternatives 
done adding blackboard cascaded sequential architecture introducing way communication 
case semantics control gets decisions process 
scope syntax instance overrule semantics kind negotiation arbitration semantics module really syntactic processing syntactic semantic decisions 
case second module really semantic module combination arbitrator filter semantic processor 
fact integrated models cascaded models implemented way charniak eiselt woods 
point augmenting cascaded sequential architecture opens possibility new kind architecture syntax semantics vice versa 
systems implemented way 
instance semantics system reality semantic conceptual analyzer consults syntactic processor limited competence 
similarly think essentially syntactic analyzer semantic analyzer consultant syntactic processor syntactic ambiguity 
syntax dominated system semantics suggest syntactically unacceptable interpretations overrule syntax ways may necessary dealing weakly ungrammatical sentences instance 
compere architecture syntax semantics class citizens 
feature control interaction provided arbitrating process gives compere flexibility necessary model different strategies different sentence understanding situations sets possible interpretations different combinations syntactic semantic preferences conflicting 
issues syntax semantics communication seen syntactic semantic processing model incremental sentence comprehension communicate single arbitrating mechanism declarative intermediate representations facilitate error recovery 
constraints main issues syntax semantics communication model address summarized sentence semantic contextual influences override syntax force example interpretation relatively low syntactic preference 
ffl communicate points time terms word position input sentence syntax semantics communicate 
arbitrator arbitrate syntax semantics 
answer question determines mix bottomup top processing parsing algorithm 
issue addressed chapter 
ffl communicate contents representations syntactic interpretations semantic interpretations intermediate roles 
information arbitrate syntax semantics 
issue addressed chapter 
ffl arbitrate arbitrator decide 
conflicts preferences syntax semantics 
error recovery happen 
long alternatives retained 
questions addressed chapter elaborated chapter part describing compere system 
related models sentence understanding section overview current models sentence understanding trying map entire range influential models proposed 
restrict survey general models implemented computer 
certain cognitive models described terms described earlier chapter stowe model part survey 
sequential models typical example sequential model forster levels processing model shown 
model syntactic processor takes results lexical processor input sends output message processor 
feedback lower levels processing 
example semantic processing message processor effect syntactic processor 
processes send results common problem solver combines decisions general conceptual knowledge 
module called gps ultimately responsible making decisions algorithms left unspecified model 
early models sequential models augmented transition network atn formalism 
models employed atn parser perform syntactic analysis fed output atn semantic processor 
examples atn systems lunar woods winograd known landmarks early history artificial intelligence computational modeling natural language processing 
models including interleaved syntactic semantic processing architecture sequential semantic processing depending correct syntactic processing 
atn network cascaded reduce grain size syntax semantics interactions 
cascaded atn woods intermediate outputs atn sent second atn network immediate semantic analysis 
interaction way syntax semantics 
interestingly different sequential model semantics preceding syntax proposed lytinen implemented program see chapter discussion model 
model syntactic semantic knowledge represented independently 
semantic compositions word meanings proposed 
syntax verify semantic proposals 
model certainly permits semantic preferences influence choice syntactic interpretations syntax semantics 
result model may search semantic combinations finding syntax permits 
message processor syntactic processor lexical processor general conceptual knowledge decision output input features forster levels processing model 
problems semantics architecture modeling human sentence processing discussed chapter 
interesting class sequential models capacity limitations shape course syntactic processing 
influential models kind sausage machine frazier fodor marcus 
sausage machine stage processor stages processed syntax semantics 
stage limited windows words time 
result local processing sent second stage assigned final syntactic semantic structures 
proposed limited look ahead parser attempting account psychological data limitations human parser limited lookahead conjunction deterministic processing 
models lacked functional independence syntax semantics essentially syntax semantic analysis depended proper syntactic analysis sentence 
integrated models fundamental idea integrated models integrated processing principle knowledge sources put immediately language understanding birnbaum schank lebowitz birnbaum 
semantic conceptual knowledge instance wait syntactic analysis influence selection interpretations 
integrated models rule separate syntactic processor 
early models built paradigm attempted integration multiple types knowledge lexical entries words 
example model kind ca model birnbaum selfridge 
lexical entries head words contained rules expect word various situations combine meanings surrounding words head words 
complete reliance lexical packaging types knowledge models suffered lack functional independence problems scalability 
small rieger built model called word expert parser similar technique 
word expert knew exactly combine meaning words surrounding context 
models integrated processing skimming text index stored knowledge structures knowledge structures guide language understanding dejong 
model kind called sam employed stereotypical temporal sequences events packaged structures called scripts guide understanding schank abelson 
scripts stereotypical situations events restaurant sam inferences fill gaps left unspecified input text 
model functioned texts stereotypical situations script available understander 
model dejong scripts skim newswire stories domain terrorism 
strict dependency scripts rectified models flexible knowledge structures mops memory organization packets ipp lebowitz 
models addressed broader cognitive functions storage retrieval knowledge structures memory explanation learning adapting existing knowledge structures 
line integrated models moved away sentence understanding discourse story understanding relying large knowledge structures packaged types knowledge typical situations domain 
example boris model lehnert dyer johnson yang harley proposed types elaborate knowledge structures order accomplish deep understanding story making inferences text 
amount domain specific knowledge required understanding text seriously hampered scalability models boris 
models proposed specialized knowledge structures explanation patterns schank 
aqua model language understanding views understanding process maintaining agenda questions providing explanations answer understander internal questions retrieving adapting stored explanation patterns ram 
integrated model hypothesis parsing different accessing knowledge structures memory built dmap riesbeck martin riesbeck martin 
dmap direct memory access parsing entire phrases attached representations meaning semantic network integrated representation syntactic semantic knowledge 
dmap limited texts domain system necessary knowledge structures 
models jurafsky sal integrated models integrated representations different kinds knowledge represented monolithic knowledge base integrated constructs called grammatical constructions 
jurafsky model differs integrated models mentioned detailing explicit decomposition integrated process distinct phases called access selection integration alternative interpretations see 
example decomposition language processing task orthogonal standard analyses syntax semantics pragmatics 
related type integrated model proposed wilks stored conceptual knowledge form templates 
wilks proposed templates store constraints fillers act preferences requirements 
templates included syntactic ordering information packages combined syntactic semantic conceptual knowledge integrated representation 
different kind integrated representation employed models lexical functional grammars lfg bresnan sells integration syntactic semantic knowledge encoded priori individual lexical entries 
formalism separate syntactic semantic processes typically arranged syntax sequential architecture mapping syntactic structures semantic structures precomputed enumerated lexicon 
models lfg diana analyzers machine translation meyer carlson nirenburg carbonell tomita man nirenburg levin nirenburg typically sequential models integrated representations 
spreading activation models parallel models uncontrolled interactions syntax semantics run simultaneously parallel interact continuously 
process controlling interactions parallel processes processes share representation language influence interaction 
models type built connectionist networks activation inhibition nodes means interaction 
example waltz pollack built connectionist model syntactic semantic decisions separate networks networks exchanged activation settle combined interpretation 
similar connectionist model activation inhibition nodes network called competition model proposed bates macwhinney 
fundamental problem models inability processing mechanism spreading activation deal syntactic processing 
spite advances connectionist networks demonstrated connectionist network process complex syntax natural languages 
uniform processing mechanism spreading activation necessary parallel model rely uncontrolled interaction 
current models waltz pollack assume syntactic parse produced different processing mechanism available input model 
class models symbolic equivalent spreading activation called marker passing semantic network build models semantic analysis lexical ambiguity resolution 
models charniak model eiselt eiselt model particularly interesting models principle functional independence syntax semantics 
order semantics independent syntax charniak proposed semantic processor marker passing initially propose semantic alternatives influenced syntactic processor running parallel marker passer 
third module combined syntactic preferences semantic alternatives select combined interpretation 
interesting note semantic feedback permitted semantic marker passer syntax syntax forbidden influencing stage semantic processing 
eiselt model lexical semantic pragmatic ambiguity resolution error recovery marker passing 
divided syntax semantics different modules called proposer filter 
initial stage packaged input sentence local syntactic units sent incrementally proposer 
proposer marker passer quite akin charniak model 
third module filter combined syntactic semantic preferences arrive final interpretation 
important aspect model ability recover errors completely reprocessing sentence conditionally retaining previously unselected alternatives eiselt eiselt holbrook 
models highlighted importance error recovery shaping design sentence understander 
drawback limited syntactic capabilities limited simple verb single clause sentences realized simple atn parser interact interesting way semantic analyzer 
influence connectionist models proposed past afford include survey 
sample interesting models reader referred authors cottrell cottrell small miikkulainen dyer stevenson st john mcclelland 
design compere model born attempt rectify problems 
blackboard models parallel models typically spreading activation processing 
example blackboard model hearsay ii speech understanding model erman hayes roth lesser reddy 
model employed production rules syntax semantics processes interacting shared blackboard 
blackboard model produce syntactic semantic interpretations parallel 
semantic interpretation start entire parse tree built syntactic processor 
result model followed integrated processing principle semantics independent syntax 
reader just carpenter hybrid connectionist production system model sentence comprehension 
production rules governed transfer activation nodes network 
model match closely psychological data eye fixations reading builders model collected experiments see chapter details 
reader focused syntactic analysis sentences accounted ambiguities dealing embedded clauses 
reader appears maintain functional independence syntax semantics closer examination clear productions syntactic semantic processing 
hand reader capable applying types knowledge immediately processing sentence 
clear capable recovering errors see eiselt 
reader extended new model called cc reader just carpenter capacity constrained reader 
enforcing limit total amount activation network model account variety data differing working memory capacities effects ambiguity resolution phenomena human sentence processing see chapter details 
reader cc reader control spreading activation production rules appear controlled parallel architecture necessary dealing syntax semantics interactions parallel processes largely uncontrolled 
controlling force model capacity limit 
sense model architecture similar connectionist models waltz pollack remains seen limited control syntax semantics interactions account variety ambiguities error recovery seen sentence understanding handled compere model see chapters examples 
models nl soar lehman lewis newell lewis model sentence understanding soar architecture production systems learning chunking laird newell rosenbloom 
nl soar architectural constraints soar large set language processing rules model range syntactic phenomena human sentence processing including structural ambiguity resolution garden paths parsing breakdown center embedded sentences 
model showed gradual transition behavior deliberative reasoning immediate recognition 
possible chunking mechanism soar produced chunks combining productions involved selecting particular interpretation sentence 
drawback approach gradual loss functional independence different knowledge sources 
syntactic semantic productions encoded separately chunking process combined produce bigger monolithic units applicable specific types sentences 
nl soar starts separate representations different types knowledge gradually builds integrated representations 
drawback soar architecture serial nature consequence nl soar pursue interpretation sentence time 
productions contain type knowledge encode productions specific particular type sentence 
fact chunking produce productions applicable sentences represent particular combinations ambiguities syntactic semantic contexts 
cardie lehnert extended conceptual analyzer ca described earlier handle complex syntactic constructs embedded clauses 
show conceptual parser correctly interpret complex syntactic constructs separate syntactic grammar explicit parse tree representations 
accomplished mechanism called control kernel lick essentially method dynamically creating copy conceptual parsing mechanism embedded clause 
model called separate modules syntax semantics developed hirst 
separate representations syntactic semantic knowledge 
syntactic parser similar marcus ran tandem semantic analyzer montague semantics 
model able resolve structural syntactic lexical semantic ambiguities produced incremental interpretations 
syntax provided semantic feedback syntax semantics influence incrementally 
lexical disambiguation possible individual processes demons word called words interacted select meaning appropriate context 
semantic analysis dependent parser producing correct syntactic interpretations 
consequence requirement strict correspondence pieces syntactic semantic knowledge syntax semantics interaction hirst model 
rules semantic composition paired corresponding syntactic rules tandem design 
noticeable characteristic hirst model separate mechanisms solving subproblem sentence understanding 
model parser capacity limit syntax set continuously interacting processes marker passing resolving word sense ambiguities semantic enquiry desk semantic feedback syntax strict correspondence syntactic semantic knowledge ensuring consistency incremental interpretations 
characteristic inherited completely model mcroy hirst modules hirst original model appears heterogeneous predecessor 
enhanced model organized race architecture simulates syntax semantics running parallel associating time costs operation 
model able resolve variety ambiguities simply selecting whichever alternative minimizes time cost name race 
model employed sausage machine frazier fodor stage parser syntactic processing semantic analysis 
put attachment processor set grammar application routines 
attachment processor consulted sets routines called grammar consultant routines knowledge base routines argument consultant routines resulting highly complex heterogeneous model 
summary conclude section comparative summary contemporary models natural language sentence understanding terms criteria ffl functional independence syntax semantics syntactic semantic knowledge applied independently 
ffl integrated processing syntactic semantic criteria taken account immediately processing 
ffl error recovery model ability recover syntactic semantic errors 
ffl way way interaction syntax semantics influence incrementally apply models separate syntactic processing syntactic semantic knowledge integrated priori integrated representations models filler table 
ffl arch type architecture sake brevity word sequential dropped syntax sequential semantics sequential cascaded sequential architectures 
may noted models separate syntactic processor noted having integrated architectures 
conceptual processors sam said integrated architectures model processing typically considered integrated processing 
table shows summary roughly chronological order major publication models 
noted models shown table especially sam ipp boris aqua considered models sentence understanding 
included sake completeness map course taken computational modeling natural language understanding decades 
seen table compere model meet requirements functional independence integrated processing capable syntactic semantic error recovery support twoway incremental interaction syntax semantics 
chapters illustrate compere accomplishes 
table comparative summary sentence understanding models 
model way arch 
lunar woods syn winograd syn preference semantics integrated wilks sausage machine cascaded frazier fodor sam integrated dejong integrated cascaded atn woods cascaded hearsay ii erman blackboard marcus sequential ca birnbaum integrated selfridge word expert parser integrated small rieger reader just possibly uncontrolled carpenter parallel marker passing parallel charniak ipp lebowitz integrated boris dyer integrated lytinen sem massively parallel uncontrolled waltz pollack parallel dmap riesbeck integrated martin hirst cascaded eiselt semantics parallel aqua ram integrated race parsing cascaded mcroy hirst competence model bates uncontrolled macwhinney parallel sal jurafsky integrated circus cardie integrated lehnert nl soar lehman syntax integrated lewis cc reader just possibly uncontrolled carpenter parallel compere mahesh controlled eiselt parallel chapter vi theory parsing communicate semantics general picture human sentence processing mechanism emerges fast efficient highly interactive system parsing inextricably linked interpretation 
tendency consider processes separate increasingly apparent distinction little empirical value applied resolution local syntactic ambiguity human sentence processor 
altmann dennis 
chapter compere theory syntactic parsing 
possible parsing strategies particular variant left corner parsing proposed parsing strategy employed communicating semantics right times 
organization syntactic knowledge suitable parsing algorithm 
section presents overview chapter 
sentence ordered sequence words language 
words sentence provide sequence individual meanings 
sentence processor needs select appropriate meanings words combine compose meanings form meaning sentence 
syntactic knowledge grammar tells sentence processor meanings select attempt compose avoiding exhaustive search possible compositions word meanings 
syntactic analysis process identifying compositions licensed grammar language 
adds hierarchy left right order words sentence hierarchical right order 
move level hierarchy tells units lower levels combine units form bigger meanings 
sentence grammar natural language task syntactic analysis output parse tree parse forest single tree sentence identifies units need composed left right order level tree 
semantic processing recommendations sources knowledge attempts compositions arrive sentence meaning 
grammatical semantic knowledge guarantees unique compositions word meanings time ambiguities composition distinct ambiguities selection lexical ambiguities exist syntax semantics 
multiple ways composing word meanings syntactic semantic knowledge 
order deal ambiguities meet set functional cognitive constraints design compere process syntactic analysis communicate processing semantics produce right sequence decisions commitments sentence processing 
syntactic analysis communicate incrementally semantics right points times processing sentence 
times communication occurs determined usefulness communication syntax semantics 
communication useful eliminates certain alternatives leads reduction number choices considered syntax semantics 
syntax semantics interact times provide information help reduce number choices considered 
happen syntactic analysis reached decision point semantics information communication useful 
instance parser interact semantic analyzer completed analyzing unit carries part meaning sentence content word 
semantics provide useful feedback selectional preferences fillers thematic roles 
alternative eliminate question deciding communicate proposing integrated representations grammatical semantic knowledge semantic grammars various integrated described previous chapter 
approach loses heavily generativity language analyzer limited familiar domain 
choice points syntactic analysis communicate semantics determined points syntactic analysis commitments structure commitments particular compositions words 
turn determined choice parsing algorithm employed performing syntactic analysis 
parsing strategy designed communicates semantics precisely points semantics begins necessary information provide helpful feedback 
purpose pure bottom parsing turns waits phrase posit attachment 
pure top parsing hand eager commitments early semantics say attachments 
resulting backtracking top parser complicates issue semantic interaction significantly 
combination strategy called left corner lc parsing middle ground making expectations required constituents leftmost unit phrase waiting see left corner committing bigger syntactic unit 
lc parsing leftmost child left corner phrase analyzed bottom phrase projected upward leftmost child children phrase projected top phrase 
lc parsing defines project top tell attachments 
tell attempt attach phrase projected left corner higher level syntactic units 
done immediately phrase formed left corner phrase complete children intermediate point 
ambiguities arise making attachments semantics help resolve ambiguities points semantics help syntactic parser determine parser attempt attachments 
lc parsing defines range parsing strategies spectrum parsing algorithms eagerness dimension abney johnson 
ends dimension purely bottom purely top eager parsers 
different lc parsers result choice arc enumeration strategies employed enumerating nodes parse tree 
arc eager lc parsing node parse tree linked parent waiting see children 
arc standard lc parsing hand waits children making attachments 
distinction vanishes pure bottom top parsing big difference lc parsing 
time refers points sentence word left micro level time processing particular word 
demands finer level analysis compere attempts falls modularity arguments fodor 
semantics chapter refers semantic conceptual knowledge 
chapter intermediate point lc parsing spectrum strategies called head signaled left corner parsing hslc 
proposed point produces right sequence decisions incremental interaction semantics 
strategy node linked parent soon required children node analyzed waiting optional children right 
required units predefined syntactically phrase necessarily semantic head phrase required unit np vp np pp 
hslc parser wait required units interacting semantics wait optional adjuncts pp adjuncts nps vps 
combining bottom top parsing section arguments assertion incremental interpretation natural language sentences modeled pure bottom top parsers 
functional cognitive motivations combining bottom top methods employing various left corner parsers 
describe need combine bottom top methods 
analyze types knowledge allows parser include top influence early commitment 
need combine bottom top methods data driven models language comprehension bottom strategies compatible incremental semantic interpretation 
incremental comprehension best described bottom strategy interprets successively larger constituent built word sentence 
top strategy force parser commit constituent analyzing parts 
making commitments processor necessary information results unwarranted backtracking 
behavior wasteful conform human behavior input sentence 
models built augmented transition network atn mechanism top parsing method character winograd 
standard theories syntax phrase structure rules incompatible incremental processing steps taken parser psychologically real steedman 
notion constituent parsed semantically interpreted parts processed 
instance rule vp gamma 
np applied rewrite sequence np single constituent vp seen entire sequence 
rewriting processor apply corresponding semantic operations interpret vp constituent 
possible apply bottom strategy phrase structure rules resulting process incremental bottom parser waits seen daughter constituent interpreting 
phrase structure rules applied carry incremental interpretation sentences left branching structure true majority natural languages steedman 
natural languages full right branching structures svo subject verb object sov languages vos 
leads spurious ambiguities parser perform form partial analysis frazier 
needed bottom parser top guidance early commitments seeing part constituent semantic interpretation incremental 
early commitments may employing top influence variety types knowledge 
parsing strategies different parsing algorithms differ order traverse tree structures representing compositions words build structures 
criterion selecting right parsing algorithm compere making maximal commitments justifiable bases 
particular point sentence want compere maximal set commitments minimize number alternatives pursued point long commitments justified piece knowledge 
want avoid making unjustified commitments lead unwarranted backtracking order meet functionally psychologically derived constraints time course sentence processing decisions 
parsing strategies formalized syntactic considerations attachments lexical categories grammar rules 
knowledge sources semantic conceptual constraints structural preferences play role making syntactic attachments 
sources considered bottom top parsing strategies explained terms types knowledge attachments 
bottom parsing parent node comes children 
information obtainable children nodes generate parent node 
information information overt children nodes available directly lexical entries terminal nodes subtrees categories nonterminals subtrees 
piece information overt children parser generate parent seeing children descendants resulting strategy longer bottom 
bottom parser extremely commitments information sees input 
top parsing parent comes children 
obviously parent come overt information available children 
generated source information common grammatical predictions 
pure topdown parser extremely eager parser generates interpretations waiting overt information input 
combine strategies arrive left corner parsing strategy aho ullman 
case parser starts overt information input generate left corner phrase 
uses top strategy combination bottom predictions information overtly available part input rooted node currently processed 
precisely point parsing parser trying attachments child parent parent children child gamma child gamma child child 
subtree rooted child called subtree segment sentence spanned subtree called segment bottom parsing parent exist children enumerated 
bottom parsing information child siblings order combine siblings form parent node parent information come corresponding subtrees segments 
information coming parent part parse tree outside subtrees coming outside source semantic feedback parser attachment decisions resulting strategy top parsing 
sources justification syntactic commitments information arising input sentence lexical entries words sentence bottom parser select compose meanings words 
cues input sentence types ffl syntactic category syntactic category word noun verb compose word words seen form grammatical composite parent syntactic unit 
ffl subcategory information subcategory information number gender tense prefer certain compositions 
ffl predicate argument structure licensing information information available lexicon verb exert preferences alternatives 
ffl word meaning meaning word constitute elements meaning sentence composed 
ffl cues variety information input punctuation intonation patterns sentence processor modeled compere sake simplicity 
discussed chapter information providing top guidance processor types grammatical information categories involved leading syntactic expectations general structural preferences minimal attachment frazier feedback semantics discourse interpretation 
syntactic predictions children 
information available parent nodes 
bottom parser prediction category attachment decisions predicted node bound outside set subtrees far built input 
instance known enumerating np node vp node follow sentence completed 
information obtainable category information enumerated np node bottom parser expected vp node outside set subtrees constructed bottom input 
bottom parser prefer vp attachment reduced relative clause instance information expected vp coming node unavailable pure bottom parser 
bottom parser able syntactic predictions immediately select possible categories word particular category expected 
parser able exert purely structural preferences independent categories lexical items involved ambiguous parts sentence 
examples preference right association minimal attachment frazier 
syntactic generalizations allow syntactic processor early commitments optional adjuncts expected explaining syntactic phenomena frazier 
semantic preferences overtly input 
part lexical entries words spanned segments 
preference animate entities agent role piece general knowledge specific lexical entry 
sentence lexical entry verb saw tells instrument role filled object act optical instrument takes semantic processing horse filling instrument role pp attached vp 
conceptual preferences usually come amount inference meanings segments spanned children nodes 
bottom parser able semantic feedback prune parse forest early 
preferences leading top parsing decisions may come analyses 
certain pieces conceptual knowledge may directly encoded lexical preferences may usable inferencing 
officer saw man horse 
justifications arising semantic conceptual preferences handled means incremental communication syntax semantics 
arising syntactic expectations structural preferences integrated bottom syntactic information syntactic parsing algorithm 
parsing algorithm determines information justified early commitments eliminate certain alternatives immediate consideration 
constraints human parsers models human language processing take account constraining factors arising nature natural languages nature human processing system local ambiguities memory requirements 
natural languages full local ambiguities memory making processor hold multiple intermediate interpretations 
human processing system limited memory capacity 
cognitive model parsing devise parsing algorithm keeps memory requirements minimum reducing amount local ambiguity deal 
example human parser unable comprehend deeply constructions able parse left right branching structures ease 
empirical evidence abney johnson shown order minimize space requirements local ambiguities incremental parser parsing strategy bottom top 
showed intermediate uniform syntax directed parsing strategy known left corner parsing right properties dimensions local ambiguity minimum space requirements 
pure left corner parsing strategy build syntactic structure order suitable incremental semantic comprehension 
alternative parsing strategy head signaled left corner parsing retains local ambiguity memory requirement virtues left corner parsing integrates virtues head driven parsing compatible incremental semantic comprehension 
local ambiguities local ambiguities inherent natural language sentence 
consequences choosing parsing strategy 
top bottom strategies lead extreme positions local ambiguity scale 
top strategy eager results unfounded local ambiguities bottom strategy leads increases space requirements fruitless explorations lexical ambiguities 
left corner parsing falls intermediate slot eagerness scale storage requirements scale abney johnson presenting highly promising candidate computational psycholinguistics 
quite right parsing strategy incremental semantic interpretation semantic interpretation syntax guided possible 
variant left corner parsing head signaled left corner parsing augments left corner parsing notion head head driven parsing optimize space requirements minimize local ambiguities enable orderly incremental interaction semantics 
strategy turns different head corner parsing 
compere head signaled left corner parsing virtue keeping memory requirements minimum limit placed available memory implementation 
reasons having explicit numerical limit discussed chapter 
term computational psycholinguistics refers discipline focuses building computational models human language processing valid plausible predictive 
term context connectionist models human sentence processing 
changes parser current interpretations reading word reading word called ith parsing increment 
local ambiguity said exist word possible ith parsing increment parser 
increments parser point depend parsing strategy employed local ambiguities result choice parsing strategies 
local ambiguities cost time space depending parser chooses analysis backtrack pursue multiple interpretations parallel 
general eager parsing strategy earlier commits interpretation errors encounters 
errors cost time recover space keep track states previous decision points 
eager parsing strategy space parser needs order keep alternatives hand commit may take time computation parallel 
global ambiguities remain unresolved applying knowledge available parser derivable entire sentence 
global ambiguities independent parsing strategies 
memory requirements architectural models human language processing shaped demands minimizing space requirements amount local ambiguities encountered parser 
model finite amounts working storage amount minimal considering limitations human short term working memory 
furthermore memory limitations predict parsing breakdown 
classic example requirement seen case constructions rat cat dog chased bit ate cheese 
parser require greater amounts memory sentence easily comprehensible left constructs 
position parsing strategies psycholinguistic modeling abney johnson showed top bottom parser predicts breakdown due memory overload center embedded sentences 
fact require greater memory parse left right branching constructs center embedded constructs 
parser needs space keep partial interpretations initial substrings sentence 
parser require finite amount space inputs parse correctly 
follows space requirements syntax considered 
mean semantic interpretation require space 
valid assumption analyses parsing strategies syntactic space requirements sufficient rule certain parsing strategies 
clear space requirements semantics shared working memory long term memory 
assumed human parser constructs parse tree incrementally 
required entire parse tree accessible time 
parts trees may lost parsing proceeds 
instance bigger trees built composing smaller trees parts trees interior right hand boundary new composite tree may thrown away 
parser compute syntactic structures structural relations constituents sentence form equivalent parse tree 
syntactic analysis assumed take amount space building parse tree 
space requirement parse tree space required represent complete parse tree 
number nodes attached parent node 
space required point parsing sentence number nodes parser refer example parsing architecture designed address problem local ambiguities marcus parser marcus 
point attach node parent attach child node abney johnson 
called parser undifferentiated space requirement clarify point concern required nodes working memory shuffled working memory long term memory 
example parsing architecture designed minimize space requirements analysis model frazier built minimal attachment hypothesis 
abney johnson define space requirements size set nodes parser may need refer parse 
set set nodes parent identified nodes missing children 
characterization problematic know node acquired children parse 
consequence fact natural languages allow optional children prepositional adjuncts 
alternative formulation space requirement 
space requirement space required point parsing total number nodes right hand boundaries parse trees point 
right hand boundary node parse tree right hand boundary tree root tree rightmost child parent parent right hand boundary tree 
note may parse tree point different parts sentence different subtrees attached 
note nodes right hand boundaries ones parser may refer attachments nodes 
analysis approximate account interior nodes right hand boundaries need referred error recovery 
analysis account space required keep track syntactic expectations predictions expected node simply treated separate tree just root node 
space requirement defined may greater defined abney johnson nodes right hand boundary known grammatically take children 
common grammar allows adjuncts prepositional phrases adverbs added freely right phrase 
preliminaries section introduces concepts distinctions assumptions necessary making points rest chapter 
analyzing different parsing strategies necessary define certain terms state certain assumptions 
fundamental assumption underlying principle incremental interpretation stated chapter 
applied syntactic parser principle restated follows parser provide maximal partial interpretation initial substrings sentence crocker 
principle entails maximal lexical grammatical knowledge sources need reduce errors entails principle integrated processing birnbaum stated chapter 
principle requires parser select just interpretation times 
demand analysis model frazier parser may delay section derive heavily ideas discussed abney johnson 
figures follow abney johnson 
decisions times pursue multiple interpretations stowe depending sufficiency available knowledge choosing interpretation 
spectrum parsing strategies parsing strategy way enumerating nodes parse tree 
conversely enumeration nodes tree different parsing strategy 
uniform parsing strategy uses repeating pattern enumeration tree 
basic parsing strategies correspond basic patterns tree traversal pre order post order order traversal 
top parsing parsing strategy top node enumerated children 
results pre order traversal tree 
bottom parsing parsing strategy bottom node enumerated children descendants 
results post order traversal tree 
left corner parsing parsing strategy left corner node enumerated immediately leftmost child descendants child descendants results order traversal tree 
precisely see nijholt left corner production leftmost symbol terminal nonterminal right side 
left corner parse sentence sequence productions interior nodes parse tree nodes ordered follows 
node direct descendants nodes subtree root precede node precedes descendants 
descendants precede precede forth 
roughly speaking left corner parsing left corner production recognized bottom remainder production recognized top aho ullman 
bottom left corner top parsing points spectrum called uniform syntax directed parsing strategies 
syntax directed parsing strategy announce point grammar rule children precede announce point descendants enumerated parent node enumerated children announce point enumerated descendants abney johnson nijholt 
syntax directed strategy uniform announce point rules 
announce point zero child top parsing left corner left corner parsing rightmost child bottom parsing 
syntax directed strategy left right strategy preceding nonterminal nodes enumerated succeeding nonterminals 
figures show enumerations parse tree top bottom left corner strategies respectively 
parsing different note integrated processing principle entails independence different knowledge sources see principle functional independence chapter 
long situations kinds knowledge useful making rational decisions knowledge sources unavailable unusable reason integrated processing requires ones useful independent 
situations occur human language processing integrated processing entails independent applicability knowledge source 
strategies correlate classes languages grammars ll lr lc nijholt 
np det vp np det top parsing 
non syntax directed parsing strategies head driven parsing 
head driven parsing phrase distinguished child called head 
parent node enumerated immediately head enumerated 
subtree rooted head need enumerated parent 
head driven parsing syntax directed 
shall see advantages head driven parsing incremental semantic interpretation 
shows enumeration parse tree head driven parsing 
head driven parsing generally applied government binding theories parsing result parse tree typical produced head driven parsers 
arc enumeration strategies strategies distinction arc eager strategy arc standard strategy consequent differences space requirements local ambiguity 
arc eager strategy parser said arc eager attaches pair nodes soon nodes available regardless children enumerated 
arc standard strategy parser said arc standard attaches enumerated nodes subtree nodes enumerated subtrees rooted nodes enumerated 
strategies identical top bottom parsing strategy 
identical intermediate strategy left corner parsing 
arc eager strategy may lead reduction space requirements requires space arc standard counterpart 
reduction accompanied increase local ambiguity arc eager np det vp np det bottom parsing 
np det vp np det left corner parsing 
strategy 
showed arc eager left corner enumeration 
shows corresponding arc standard left corner parse 
np det vp np det head driven parsing 
np det vp np det arc standard left corner parsing 
required versus optional constituents syntactic knowledge set generalizations acceptable sentence structures natural language 
generalization rule grammar relates constituents structural units 
general form parent gamma 
child leftmost child child 
child rightmost 
rule says specified children specified order said parent 
words said parent expanded specified children order 
natural languages allow ways making parent appending inserting optional constituents parent structure 
words syntactic structure required unit zero optional units 
distinction optional required units important comes syntactic processing especially syntactic processing supposed interacting incrementally semantic processing 
phrase kinds constituents 
required phrase complete optional adjuncts 
optional constituents left required parts adjective np right completed phrase pp attached np 
required constituents phrase called head phrase 
head provides core meaning phrase required optional constituents modify meaning head 
example head np vp vp event centered semantics described chapter 
head defined called semantic head considered head head driven parsing techniques may syntactic considerations 
instance theories determiner head np abney 
need assume grammar formalism semantic head syntactic head 
compere head pp np recursively head np preposition 
obvious consider semantic function words involved 
preposition modifies meaning noun specifying relation noun event noun sentence 
sentence nouns verbs 
types constituents modify meanings nouns verbs mark relationships different nouns verbs 
markers appear form different linguistic cues 
word order prepositions markers english 
syntactically prepositions happen appear left pps 
preposition semantic head pp head pp noun np 
pp prep noun preposition example grammatical construct need overt preposition showing semantic head noun 
may noted semantic head phrase open class word 
bottom top 
abney johnson shown bottom parsing takes space right branching constructions center embedded constructions 
top parsing takes left branching constructions center embedded ones 
human parsing breaks sentences right left branching ones parsing strategies modeling human sentence processing 
left corner parsing right properties terms space requirements different branching structures sentences shown graphically 
results summarized table 
reasons mixing bottom top strategies intuitively principle incremental comprehension entails maximal lexical grammatical knowledge sources crocker 
small step principle incremental sentence branching structures 
table space requirements local ambiguities parsing strategies 
number terminal nodes words sentence 
parser left center right local branching embedded branching ambiguity bottom low high lexical ambiguities top high arc eager left corner low arc standard left corner low interpretation need bottom processing 
words partial interpretation constructed input substring bottom process 
making complete needs throw top strategies 
consider incremental semantic interpreter works hand hand syntactic parser 
syntactic parser sends information attachment semantic interpreter 
semantic interpreter guided syntax tries find corresponding semantic relationships entities attached syntactically 
provides feedback syntactic parser regarding semantic feasibility proposed syntactic attachment 
fact syntactic parser consults semantic processor making attachment semantic processor advise syntax semantic preferences attachment 
alternative architecture embraced semantic interpreter guided syntax 
act independently communicate decisions negotiate settlement 
violates integrated processing principle semantic interpreter may computation avoided followed guidance available syntactic information 
wasteful semantic processing seen semantics parsers 
may noted integrated processing simply requires decisions syntactic semantic preferences semantic processing done excluding syntactic guidance 
syntactic semantic processing need autonomous 
sentence processor may employ highly interactive process syntax sub word level called may syntax semantics interactions processing single word 
computational linguistics parsers built shown need combination bottom top methods berwick 
reason empty category 
empty categories posited bottom parser early able account psychological data processing long distance dependencies crocker 
psychological evidence reading time difficulties parsing head final constructs german shown arguments attached hypothesized node head occurs input string bader 
shows german parser purely bottom 
case computational models models appear bottom categorial parsers steedman fact operations type raising empty category typically empty missing np moved different position result syntactic transformation sells 
see assumptions chapter process language comprehension languages assumption section 
equivalent license arguments seeing head 
categorial grammars parsing bottom expanding laying different types knowledge top predictions licensing system categories categories 
wants avoid consequent lexical representations capture generalizations categories compact representations lexical 
result move top parsing strategy 
problems left corner parsing left corner parsing combination bottom top parsing strategies problems incremental communication semantics 
consider enumeration parse tree optional adjunct arc eager left corner parsing 
local ambiguity point attaching pp parent np vp 
parsing strategy eager commitments proceeds deal local ambiguity soon sees preposition 
semantics unable help syntax resolve local attachment ambiguity head np pp unknown 
meaning prepositional object unavailable semantic interpreter decide attachments semantically feasible 
parser waited seen head sought help semantics resolving ambiguity 
avoided wasteful processing parallel interpretations avoided errors backtracking resulted parser tried analysis derived structural preference 
arc standard left corner parser fare better 
consider tree enumerated parser 
seen arc standard left corner parser violates principle incremental interpretation 
provide maximal partial semantic interpretation little 
instance seeing event described semantically related subject np building link vp 
parser permit direct object composed words link number vp built pp np vp number object np vp number 
analysis fairly obvious need incremental semantic interpreter minimizes local ambiguities parsing strategy intermediate arc standard left corner parser 
obvious head phrase defines announce point interaction semantics 
head marks point semantics provide useful advice syntactic decision making 
seen take eager extreme attempt communicate time semantics unable help head unable alleviate increase local ambiguity resulting early commitment 
type raising formal operation certain linguistic analyses map argument subject function predicate takes arguments 
see example steedman 
argue may sources information statistical information corpus lexical verb particular prepositions contextual biases enable justified early commitment immediately preposition 
see discussion flexible parsing chapter section possible improvements parsing algorithm account sources information 
np det vp np det pp np prep det arc eager left corner parsing eager 
head signaled left corner parsing hslc parsing left corner parsing provides neat way combine bottom top strategies generate left branch bottom go level project top branches 
parsing incomplete specification parsing strategy pure bottom top parsing 
arc eager left corner strategy turns eager incremental semantic interpretation considered 
arc standard left corner strategy hand happens 
ends left corner strategies define range parsing strategies bottom top strategies 
point range defined semantic head phrase left corner parsing strategy right computational properties terms space requirements local ambiguities incremental semantic interpretation 
called head signaled left corner parsing 
see positions different parsers scale bottom top parsing 
hslc algorithm says ffl generate parent left branch 
ffl attach node seeing head 
ffl wait constituents head attachments 
np det vp np det pp np prep det arc standard left corner parsing 
shows hslc parsing algorithm 
details implementing algorithm described chapter 
storage expectations described formal analysis chapter 
illustrates data structures described graphically 
enumeration produced strategy shown 
different pure head driven parsing permits generation parent just left branch matter branch head parent node 
head driven parsing behave bottom parser waiting left branch head 
eagerness licensed left corner strategy situation valuable way 
permits generation parent associated predictions immediately left branch 
expectations resolve local structural lexical ambiguities right branches follow 
instance preference expected structure helps produce minimal attachment behavior having count number nodes tree 
consider pp attachment ambiguity tree traversal labelings produced different lc parsers shown figures 
seen attempts attach pp vp np noun pp seen 
time semantics provide useful feedback information role filler thematic role evaluate known selectional preferences role filler 
eager interactive semantics 
hand attempt attach vp 
thematic role subject np remains unresolved 
interactive semantics 
hslc hand attempts attachments right time interaction semantics 
eager bottom topdown 
left corner hslc relative positions parsing strategies 
sight appear hslc parsing quite neat strategy says wait semantic head attachments 
uniform arc eager left corner parsing wake attachment ambiguities 
left corner parsing requires wait child left branch enumerated arc eager strategy requires proceed attachments right branches waiting descendants right branches 
parser waits optional adjuncts left branch wait required descendants right branches 
arc standard strategy result far greater uniformity seen earlier arc standard bottom incremental interpretation 
hslc hand requires wait head parsed attachments branch 
left corner parent generated left branch matter 
argued waiting semantic head kills independence syntax 
hslc require parser wait particular meanings lexical strings simply requires waiting head parsed 
heads grammatically defined syntactic entities defined phrase language irrespective particular lexical items 
space requirements hslc seen table earlier left corner parsers require constant space left branching constructs unbounded space center embedded constructs desired 
arc standard left corner parsing requires unbounded space right branching constructs data structures tree ary tree nodes 
node record children ordered list children nodes 
parent parent node 
expects node expected node 
expected node expects node 
lexical entry lexical entry word node created 
head head child node phrase node represents 
complete node phrase complete 
algorithm hslc grammar empty set initial forest parse trees word add new node tw current forest trees ft category lexical entry word mark tw complete subtree repeat complete trees attached trees propose attachments complete subtree expecting optional constituent new created left corner leftmost child select attachment consulting semantics see role assign algorithm chapter arbitrating see algorithm arbitrate chapter attach new created add forest expectations required units forest just seen head mark complete subtree 
hslc algorithm 

hslc lies arc eager arc standard verify hslc require unbounded space right branching constructs 
consider right branching construct shown 
worst case situation head head head gamma head hslc arc standard lc guarantees attachments level done eliminating space required hold incomplete constituents level 
similarly optional constituent gamma hslc wait things level limiting space requirements 
may noted siblings level say optional constituents left head level xp left corner head argument 
constituents phrase 
forest parse trees complete tree incomplete tree complete tree expects expected illustration data structures hslc parsing 
problem hslc generates parent left corner keeps attaching right branches level parent 
worst case right branching situation described occur english natural language 
formalized lemma 
finite wait lemma natural language right branching construct shown sibling head gamma maximum distance consecutive heads ji gamma kj small constant say constructs language cause human language processor break just case center embedded constructs 
human language processor fails process center embedded constructs certain level embedding constructs require parser hold number incomplete structures 
worst case right branching construct requires parser hold large number constructs 
finite wait lemma essentially says constructs np det vp np det pp np prep det hslc head signaled left corner parsing 
occur natural languages cause kind breakdown sentences 
natural languages require finite wait terms number units parser needs hold provide necessary heads contain pathological right branching constructs addition center embedded ones 
worst case right branching sentence phrases keep getting opened closed time head rightmost phrase seen 
common right branching construct rightmost branches optional constituents nested pps alternate rightmost nodes pps heads nps 
note bottom arc standard left corner parser fail equally badly constructs 
hslc arc eager left corner parsing language uniformly 
hslc arc standard left corner parsing language uniformly head final 
hslc better head middle mixed head head final language 
discussion shows uniformly head final language problem hslc worst case situation 
lemma situations occur cause human parser break 
constructs possible certain case marked head final languages 
sentential complements sentences appear verb head sentences center embedded ones worst case right branching constructs 
rn rn ln right branching construct 
local ambiguities hslc seen optional constructs head problem hslc 
hslc left corner parser generates parent leftmost branch 
result parent available attaching right branches help resolve local ambiguities applying top strategies 
optional constructs come required parts lead attachment ambiguities pp attachment ambiguities figures 
hslc attempts attachments semantic heads adjuncts pp processed take advice semantics regarding choice attachment points 
avoid wasteful processing multiple attachments analysis uniform structural preference followed backtracking 
hslc provides enumeration structure sentence optimal incremental semantic interpretation principles incremental interpretation integrated processing 
hslc provides top predictions right branches 
predictions eliminate certain ambiguities arise bottom parsing 
instance lexical ambiguities resolved choosing interpretation meets existing top prediction 
hslc provides right mix early commitment delayed decisions middle ground spectrum parsing strategies terms local ambiguities 
related parsers parsing strategies close hslc 
section significant ones compared hslc 
see chapter detailed formal comparative analysis local ambiguities space requirements different parsing algorithms 
assume semantic evaluation proposed syntactic attachments provide useful information resolving attachment ambiguities 
head corner parsing different combination ideas left corner head driven parsing strategies called head corner parsing 
head corner parsing head substituted left sacrificing left right processing words sentence 
parser looks seed word head phrase 
uses head consume parts phrase left right head 
head selected searching input string predictions rest constituents 
advantage head corner parsing allows parsing scrambled discontinuous constituents 
semantics simple compositional grammars permit non concatenative constructs van noord 
hslc hand predictions left constituent heads 
strategy suitable heavily word order driven language english 
head corner parser require careful selection heads 
violates principle incremental interpretation arbitrary amounts 
instance sentence waits past subject np sees verb verb licenses subject np left 
remains seen variants head corner parsers suffer problems 
head corner parser left right parse waited heads head driven parser 
certain generalizations left corner parsing nederhof lookahead feature non unitary definition left corner 
approach announce point greater parser waits certain number initial nodes switching top strategy 
remains seen parser built equates number position head having uniform announce point rules grammar 
lookahead parsers information comes sentence help disambiguate earlier local ambiguity parser benefit looking ahead making commitment 
unlimited lookahead course violate constraints memory requirements left right incremental processing 
hand lookahead limited maximum fixed number words marcus guarantee lookahead useful 
consequence fact natural languages allow optional constructs delay disambiguating information arbitrary lengths 
hslc keep track incomplete structures top projections left corner eliminate alternatives power looking ahead provide 
categorial grammars radical proposals categorial grammars steedman purport completely bottom processing account host evidence human sentence processing behavior 
approaches categorial grammars combine semantic information various degrees categories 
takes away independence syntax semantics processing lexically 
account difficulties capturing generalization observable syntactic processing apart parsimonious 
compere tries capture generalizations far possible representing argument structures separately major syntactic categories putting categorial information hierarchies 
instance representation verb tells part vp vp combine np form information restore type information level hierarchy enables generalizations captured 
nature syntactic preferences syntactic preferences considered resulting structural criteria high low attachment minimality number nodes structure frazier 
sentence processor said choose minimal structure right association 
psycholinguistic studies crain steedman pearlmutter macdonald spivey knowlton taraban mcclelland trueswell tanenhaus various forms contextual bias demonstrate sentence processor pervasive preference minimality size structure high low attachment 
able induce avoid processing difficulties semantic context 
say sentence processor kind syntactic preference 
course preferences structure evident especially semantics preference interpretations sentence 
officers taught academy demanding 
stowe proposed alternative explanation structural preferences 
sentence processor pervasive goal complete incomplete item level processing 
syntax goal complete syntactic structure unit phrase clause sentence 
sentence processor prefers alternative helps complete current structure called syntactic default expected unit point adds optional constituent leaving incompleteness intact 
behavior described minimal attachment 
instance sentence vp required complete sentence seeing officers 
main clause interpretation helps complete requirement relative clause interpretation main clause structure selected semantics bias interpretation anyway point 
second kind preference sentence processor prefers attach new constituent unit previous unit lower right hand boundary previous tree 
preference called right association incorporated hslc algorithm 
summary computational arguments space requirements local ambiguities argue parsing strategy range defined left corner parsing right set properties modeling human sentence processing behavior 
assumption incremental semantic interpretation shown extremes left corner parsing defined arc standard strategies unsuitable human parser 
shown left corner parser head head driven parser define middle point left corner parsing 
resulting parsing strategy shown possess right space requirement local ambiguity properties 
called head signaled left corner strategy pathways parsing laid left corner strategy head driven strategy providing go signals crossroads parsing decisions 
chapter vii theory semantics communicate syntax people things talk virtue having represented 
jackendoff 
chapter theory natural language semantics compere model describe arbitration process show semantic processing communicates syntax 
context theory intermediate roles extension idea thematic roles show intermediate roles help syntax semantics interactions error recovery 
theory semantics largely unified view linguistic semantics frawley 
semantics semantics natural language linguistic meaning 
frawley defines linguistic semantics study literal decontextualized grammatical meaning 
literal concern inferences literal meaning 
decontextualized concern effects context 
grammatical concerned elements meaning reflected grammatical syntactic structure natural language 
idea employing linguistic semantics compere precise non literal inferential metaphoric implied contextual conceptual opposed grammatical theory semantics provides output representation potential situated reasoners non linguistic extra linguistic contextual conceptual ontologies knowledge representations 
linguistic semantics employed compere serves precise useful level meaning representation captures content common essential contextual conceptual representations meaning relation language processing reasoning situations 
different views semantics different approaches meaning 
views completely incompatible differ consider contents semantic representations 
different approaches 
meaning meaning view linguistic expression refers points world 
view runs philosophical questions meaning vary constant meaning exist referent exist world 

meaning logical form formal semantics contents semantic representations formed logical formulas 
semantic representations subject logical truth conditions inferences licensed logic procedures transforming representations 
logical view semantics differs linguistic semantics free content representation enforces strictly categorical view overly restricting linguistic semantics 

meaning context view meaning expression context function context 
essentially equates pragmatics semantics distinguishing set possible linguistic meanings expression meaning set appropriate context 
see frawley detailed discussion problems equating semantics pragmatics 

meaning culture similar view meaning context view meaning ultimately determined culture 
words meaning inherent linguistic expression contents semantic representations culture society 

meaning conceptual structure view equates linguistic semantics non linguistic conceptual semantics jackendoff 
large overlap conceptual representations semantic representations finds numerous incompatibilities 
words conceptualized represented semantically 
instance certain categories linguistic semantics precise exclusive conceptual categories fuzzy 
frawley argues approaches converge conceptual structure 
unified view linguistic semantics meaning linguistic expression conceptual construct mentally projected world gradient strict categories precedes contextually culturally appropriate meanings 
elements linguistic semantics section give brief overview various elements constitute semantics sentence 
follows essentially content theory linguistic semantics employed compere 
details elements reader referred frawley 
various elements 
entities objects things conceptual space temporally stable typically appear nouns 

events temporally sensitive things conceptual space typically encoded verbs 

thematic roles thematic roles relationships entities events 
semantics roles entities play events 
thematic roles represent participant causal spatial purposive roles objects events play events 
thematic roles fundamental notion predication 

spatial roles spatial relationships objects 

aspect nontemporal internal contour event 
aspect way event distributed time frame event occurs 

tense time semantics language encodes time 

modality negation modality element semantics concerned factual status statement 
instance involves negation possibility entailments statements 

modification final element linguistic semantics encompasses relationships objects called properties qualities modifiers conceptual entities 
current compere model focused objects events thematic roles 
certain elements modification captured generic state role described 
incorporating elements expected cause conceptual problem compere representations processes designed entire set semantic elements mind 
instance add semantics spatial relationships adding necessary spatial roles intermediate roles link spatial prepositions 
enhancement particularly feasible uniform representation semantic elements form call semantic roles 
distinguish classes events acts states causes motions distinctions current implementation compere 
acts motions treated uniformly events causes relationships events dealt states treated semantic roles represent property object modifier 
semantic roles elements semantic representations uniformly represented compere terms call semantic roles 
notion semantic roles extension thematic roles viewed predication semantic roles form set predicates represent elements semantic representation 
uniform representation mahesh eiselt enables compere apply set operations semantic elements operations carried error recovery 
furthermore semantic roles extended syntactic predicates leading notion call intermediate roles 
thematic roles standard set thematic roles includes roles allen frawley 
agent object caused event happen 

instrument force tool causing event 

experiencer person particular class objects involved perception psychological state 

beneficiary person act done 

theme object affected event 

location site event denote source destination motion event 

agent secondary agent event 

theme secondary theme event 
thematic roles distinguishable roles 
example author roles distinct agents themes patients sources goals 
certain purposive causal roles reason purpose enablement included current instantiation compere 
extended set semantic roles semantic relationships viewed semantic element filling role element 
instance certain causal relationships entities events traditionally viewed manner thematic roles 
compere extend notion thematic roles call semantic roles treating semantic elements objects semantic roles filled objects 
uniform extended set roles enable semantic processing treated role assignment 
role assignment accomplished compere syntax semantics mapping provided called intermediate roles 
intermediate roles syntactic analysis identifies grammatical roles syntactic units play relation units 
grammatical roles viewed set syntactic predicates 
example subject role predicate states np subject sentence extend notion representations linguistic cues 
instance voice sentence represented terms predicates called active voice role role 
may noted roles encoded language 
example sentence may single word determines sentence active passive voice 
different semantic roles combine constrained ways form roles 
combined roles various combinations individual roles 
instance active subject role conjunction active voice role subject role 
role combinations map semantic roles constitute elements semantic representation 
entire set roles including semantic roles grammatical roles linguistic roles intermediate combinations called intermediate roles 
see chapter elaboration representation intermediate roles 
intermediate roles enable semantic processing reduced role assignment 
word meaning composition see chapter viewed process role assignment various intermediate roles combine known constraints form intermediate roles result thematic semantic roles assignment 
addition intermediate roles provide uniform representation syntactic semantic representations intermediate choices commitments syntax semantics interactions sentence processing 
uniform representation declarative record kept incremental interactions syntax semantics 
record crucial modeling error recovery behaviors sentence interpretation see chapter 
natural language english example direct mapping grammatical roles thematic roles 
mapping syntax semantics determined number kinds information individual word meanings categories specific lexical entries conceptual constraints derived non linguistic conceptual world knowledge linguistic cues voice 
true natural languages heavily inflected case marked languages mappings case endings thematic roles ambiguous events considered semantic roles event fill causal temporal role event bigger knowledge structure script schank abelson instance 
multi valued english 
grammatical roles morphological cases equated thematic roles 
intermediate roles different formalism known foley van frawley 
just classes categories thematic roles class defining hierarchy thematic roles 
assigned semantic processing form content semantic representations 
particular intermediate role defined predicate 
proposed give uniform account process mapping grammatical roles thematic roles 
capture content representations involved mapping process 
linking theory thematic hierarchies linking theories attempts provide concise uniform accounts thematic roles map surface grammatical roles 
theories provide hard mapping rules describe tendencies likelihoods certain thematic roles mapped certain grammatical roles 
various thematic hierarchies orderings thematic roles determine map particular grammatical role roles hierarchy 
see frawley description thematic hierarchies 
hierarchies simplified views mapping process transforms grammatical roles thematic roles 
hierarchies compilations types knowledge constrain define mapping 
knowledge represented hierarchy 
example hierarchy embody influence voice sentence information appear simple linear hierarchies thematic roles 
intermediate roles elaborate representations involved knowledge explicit 
thematic hierarchies generic intermediate roles leave room including lexically specific hierarchies 
example conceptual meaning verb specify particular preferences thematic roles 
event specific hierarchies compere constrain assignment intermediate roles 
intermediate roles provide apparatus works lot just thematic roles 
thematic hierarchies proposed thematic roles standard set 
intermediate roles apply principle semantic roles help disambiguate role assignments 
intermediate roles advantages arbitration error recovery explained 
semantic processing functional analysis sentence understanding chapter reveals main tasks word sense disambiguation word meaning composition accomplished part semantic processing 
notions semantic intermediate roles tasks achieved method role assignment follows 
word sense disambiguation role assignment word meanings associated roles checked constraints role assignment 
meanings compatible assignment deactivated retained possible error recovery see chapter details examples see eiselt 
meanings compatible role assignment selected 
process role assignment described detail 
word meaning composition word meanings composed filling word meaning role meaning 
instance thematic roles help compose meanings objects event modifier roles may compose meanings objects 
composition performed syntactic guidance described constrain search role assignment process 
role assignment compere theory sentence processing role assignment primary operation semantic processing 
portions input sentence assigned primitive roles lexical information 
open class words get roles syntactic category 
example nouns get np role verbs get event role 
closed class words prepositions get roles specific individual prepositions lexical entries 
example gets role gets role 
may noted operation role assignment described similar formalisms lexical functional grammars lfg bresnan kaplan sells 
pointed chapters role assignment model determined dynamically sentence understanding selected previously enumerated syntax semantics mappings lexicon 
primitive roles words assigned bigger syntactic units syntactic analysis 
bigger syntactic unit acquires role head child see chapters 
example np role head noun propagated parent np structure event role verb propagated parent vp sentence structure syntactic guidance semantics propagation head child parent roles composed roles children parent 
instance syntactic modifier head role modifier composed role head child composite role parent unit 
composition results composition word meanings modifier head 
example meaning role prepositional phrase attached noun phrase composed meaning role head noun noun phrase 
chapter show representations examples role composition syntactic guidance 
syntactic compositions lead unique semantic roles 
syntactic compositions guide semantic processing suggesting roles composed avoiding exhaustive search possible word meaning compositions words sentence 
types knowledge suggested pair roles composed 
knowledge variety types conceptual constraints role assignments form selectional restrictions linguistic cues 
types knowledge accommodated compere uniformly treating constraints assigning intermediate roles 
chapter shows representations intermediate roles classes constraints assigning intermediate roles examples 
role assignment parsing compere treats semantic processing role assignment composition uniformly treats types knowledge affect semantic processing constraints assigning intermediate roles semantic processing compere viewed parsing 
individual words assigned primitive semantic categories roles roles composed form roles 
ultimately arrive role tree hierarchy similar parse tree rooted role head meaning sentence word meanings sentence hanging roles interior tree 
process semantic parsing similar syntactic parsing 
intermediate roles form grammar rules rule identifies particular role composition just phrase structure rule describes syntactic composition 
semantic rules specify constraints met order rule applicable 
example require test class word meaning child role satisfy selectional constraints specified word meaning associated parent role see chapter 
algorithm compere carry semantic parsing simple head driven parsing algorithm similar hslc parser applied syntactic processing chapter 
difference projection done case semantic parsing particular advantage doing semantics terms reducing ambiguity role assignment instance 
see chapter analysis cost left corner projection associated predictions 
algorithm role assignment syntactic guidance shown similar hslc parsing algorithm described earlier chapter 
details implementing role assignment algorithm described chapter 
shows sequence steps making role assignments correspond syntactic attachment pp vp 
illustrates forest syntactic parse trees forest role trees processing noun pp np attached pp pp attached vp 
role emergence seen description syntactic semantic processes similar compere 
agrees psycholinguistic motivations unified process stated chapter aids processes arbitration error recovery sentence processing 
concept intermediate roles enable build seamless bridge syntax semantics view processes sentence interpretation process role emergence 
type knowledge linguistic cue sentence applied perform word meaning selection word meaning composition chapter intermediate roles assigned composed 
assignment intermediate roles viewed refinement predication ultimately leads predicates constitute content semantic representation sentence 
sentence processing incremental process individual word meanings start primitive roles piece knowledge applied refine role assignment roles emerge specific roles providing role tree shows representation final semantic roles interpretation intermediate steps decisions process 
syntactic semantic processing viewed role assignment arbitration see merely task choosing best role assignment different possible ways roles emerge roles 
error recovery syntax semantics process undoing certain role assignments doing consistent coherent roles 
view sentence processing incremental role emergence variety linguistic cues away particular feature english syntactic processing english heavily influenced role word order 
theory intermediate roles role emergence equally applicable instance heavily inflected word order free language morphological case endings play bigger role determining word meaning composition word position ordering 
syntax semantics consistency correspondence important sentence processing ensure consistency syntactic semantic interpretations times 
interpretation syntax selects correspond semantics selects vice versa 
sentence processor semantics data structures role tree ary tree roles 
role record children ordered list children roles 
parent parent role 
head head child role role 
complete role complete 
algorithm role assign pair syntactic nodes semantically composed add new primitive role rw current forest role trees fr nodes mark rw complete subtree repeat rw syntactic nodes linked complete trees attached trees propose attachments complete subtree rules intermediate role attachment compere semantic knowledge checking selectional constraints meanings syntactic nodes required constituent optional constituent new created left corner leftmost child select attachment see algorithm arbitrate chapter attach deactivate meanings satisfy constraints selected role attachment new created add forest forest just seen head mark complete subtree 
syntax guided role assignment 
guided syntax semantics role assignments correspond syntactic compositions consistency initial interpretations maintained selecting interpretations suggested syntax compatible corresponding semantic role assignments 
important ensure consistency syntactic semantic representations error recovery operation 
error recovery certain commitments syntax semantics undone 
deletion role assignment syntax followed recovery operation performs corresponding deletions changes semantics vice versa 
sentence processor inconsistent syntactic semantic interpretations sentence 
compere consistency error recovery maintained vp pp prep np det vp pp prep np det vp pp prep np det event role role np role role np role event role np role role np role event role np role location role forest syntactic parse trees forest role trees academy academy academy role assignments guided syntactic attachments 
help intermediate roles 
syntactic unit role may call parse tree links semantic roles corresponds vice versa 
links maintained role assignment composition operations 
links determine parts representation affected change part syntactic semantic representation input 
addition intermediate roles accessible links role trees provide declarative representation decision role assignment 
representations intermediate roles compere changes representation necessitated change representation 
correspondence established intermediate roles examining constraints satisfaction particular intermediate role assigned 
trees intermediate roles provide declarative record interactions syntax semantics sentence processor forced abandon representation completely carry syntax semantics translation scratch ensure consistency 
intermediate roles enable compere repair interpretations having rebuild reprocessing input 
chapter chapter explores issues concrete terms introducing actual representations employed compere 
independence semantics functional independence principle chapters requires semantic knowledge applicable corresponding syntactic knowledge may available 
account syntactic guidance semantics semantic knowledge applied test semantic role assignments suggested syntactic compositions 
order comply independence principle sentence processor maintain independence semantics 
compere allows independence including methods semantic role assignment independently corresponding syntactic role assignments exist 
semantic role assignment described parsing process applied pair roles suggested corresponding syntactic composition possible pair roles currently assigned 
sentence processor capable independently proposing word meaning compositions semantic considerations 
appears independently proposed semantic compositions necessary syntax fails provide guidance semantics 
happen input ungrammatical syntactic knowledge sentence processor instance 
syntactic guidance available semantic processing guidance avoid wasteful search semantic role assignments eventually incompatible syntactic role assignments 
semantics sentence processing architecture lytinen example semantic independence carried limit 
selects semantically feasible word meaning composition tries establish correspondence possible syntactic compositions exhaustively looking phrase structure rules corresponds independently chosen semantic composition see chapter 
intermediate roles compere provide incremental mechanism maintaining correspondence syntax semantics avoids exhaustive enumeration 
time independent applicability syntactic semantic knowledge maintained 
arbitration conflict resolution ambiguity possible syntactic semantic knowledge assign different preferences various interpretations leading conflicts syntax semantics 
arbitrating process selection alternative interpretations role assignments compositions resolves conflicts 
role emergence view sentence processing arbitrating process selecting different intermediate role assignments 
described intermediate roles provide mechanisms arbitrator correspondences various syntactic semantic role assignments 
task arbitrator leads interesting question intermediate roles provide reversible mapping syntactic representations semantic representations 
independently proposed semantic role assignment sentence processor trace trees intermediate roles suggest corresponding syntactic compositions 
derivability grammatical roles thematic roles controversial issue considered untenable frawley rosen 
linking theories thematic hierarchies mentioned attempts capture tendencies mapping thematic roles grammatical roles 
analysis necessary answer question regard reversibility intermediate role mechanism 
select subset combinations corresponding syntactic semantic role assignments set possible combinations corresponding assignments 
arbitrator select single combination possible 
syntactic semantic role assignments proposed respective knowledge arbitrator examines selects interpretation effectively combines integrates different types information sentence processing 
intermediate roles provide uniform representation reasoning carrying recording integration knowledge multiple sources 
information different kinds instance syntactic semantic preferences combined continuous numerical values discrete qualitative values 
known way determine combine real number preferences different kinds syntactic preference stronger weaker semantic preference way real numbers particular situation adopted discrete qualitative values preferences compere see chapter details 
combining discrete values run problem comparing values preferences different types level preference syntax higher lower level preference semantics 
compere arbitrating algorithm avoids problem combining dissimilar values merely ranking preferences kind choosing interpretation highest preference syntax semantics 
real conflict syntactically preferred interpretation rejected semantics vice versa arbitrator simply delays selection see chapters pursues multiple interpretations new information enables resolve conflict away 
arbitration algorithm combining discrete values chapter need see certain details compere representations arbitration algorithm 
may noted arbitrator unified process compere carries ambiguity resolution error recovery 
selects alternatives clearly resolves ambiguities 
addition coordinates changes syntactic semantic representations take place error recovery recovery error accomplished compere largely re examining alternative interpretations light new information led detection error 
important note process arbitration syntactic processing semantic processing 
unified process common syntactic semantic decision making 
chapter viii compere sentence understanding system third class models consists models syntactic cues information derived content sentence guide online attachment role assignment processes 
models type number attractive properties 
drawback models quite incomplete underspecified 
matter ongoing research develop computationally sufficient models type 
taraban mcclelland 
chapter knowledge representations algorithms implement compere examples representations workings compere 
goal chapter describe knowledge algorithms sufficient detail facilitate replication results 
knowledge representation compere represents syntactic semantic knowledge separately uniformly representational primitive called node 
node structured representation information pertaining syntactic semantic category 
link represented slot filler pair node specifies parent category concept node part conditions bound parent expectations required fulfilled node bound said parent 
specifically elements uniform representation units called nodes comprised part relations nodes part part links preconditions relations expectations generated relations 
representations read parts linked wholes preconditions met corresponding expectations generated point 
structure node shown 
addition nodes syntactic semantic knowledge may links corresponding nodes type knowledge sentence processor build line interpretations input sentence syntactic unit corresponding representation thematic role word meaning role filler vice versa 
compere conceptual knowledge objects events world relationships represented kinds nodes links case links node really part links part links 
links point thematic roles attached concept preconditions preferences role fillers 
semantic role knowledge acts bridge syntactic conceptual knowledge forming continuum kinds knowledge complete listings knowledge compere program included 
representative pieces shown pointers typical enumerations knowledge included replicate results produced compere 
node 
part part preconditions expectations expectations preconditions node 
representational unit node 
purely syntactic knowledge surface structure language deep conceptual knowledge world 
addition lexicon certain minor heuristic control knowledge part process 
take look compere unified arbitration process sentence interpretation see different kinds knowledge representation 
lexical knowledge word set lexical entries lexicon category word word category ambiguity 
lexical entry frame includes things set meanings word particular category 
individual lexical entry syntactic category point conceptual meanings word 
information stored lexical entry include ffl word 
ffl syntactic category word 
ffl subcategory information include number person noun tense verb 
ffl meaning word category 
representation simplification 
different meanings categories may associated different subcategories predicate argument structures 
example word saw verb category noun category 
verb category meanings past tense form see infinitive form saw 
verb forms different subcategories past tense form valid persons numbers infinitive form valid forms third person singular 
order capture information lexical representation enhanced separate lexical entries subcategory meaning 
point highlights certain linguistic distinctions categories subcategories 
ffl role structure corresponds word closed class words prepositions sample lexical entries shown 
representations ensure possible force disambiguation word directly specifying particular category word sentence 
morphological analyzer compere 
result inflection word lexical entry entries category ambiguity 
word saw word prep role nil category word subcategory meaning role nil category word subcategory meaning role saw tool saw see saw cut category word subcategory meaning role past inf saw 
representation lexical knowledge 
syntactic knowledge syntactic knowledge mainly comprised phrase structure rules 
rules tell sentence processor different parts sentence composed form phrases clauses entire sentences 
rules compere syntactic knowledge reversed standard representation phrase structure rules 
rules indexed differently accessed efficiently bottom left corner parser 
rules conditions subcategories information attached extend grammar context free grammars capture context natural languages 
may noted lexical representation described strikingly similar lfg lexical functional grammar formalisms bresnan kaplan sells 
lfg compere require lexicalized semantic knowledge 
compere employ syntax semantics mappings defined priori stored lexical entry word 
compere uses general non lexical semantic knowledge applies arbitration algorithm uniform representation intermediate roles determine mappings syntax semantics dynamically 
preconditions expectations syntax phrase structure rule represented compere kinds relations grammatical categories 
kind expectation relation 
relationship categories nodes grammar representation 
expectation relation says constituent category np part parent constituent iff followed unit vp required unit described 
expectation relation example stored np node representation says np part sentence structure followed vp 
case language processor expects verb phrase vp follow np required complete structure 
define syntactic expectation follows 
syntactic expectation syntactic constituent expected particular point iff constituent necessary complete currently incomplete structure 
second kind link precondition relation 
called satisfaction relationship processed successfully previously expectation satisfied addition new constituent 
ternary precondition relationship connects nodes says category vp part parent category iff preceded unit np expected category 
expecting unit precede expected unit immediately left specified grammar representation 
precedence specified expectation relation expecting expected unit siblings parent category contiguous sentence 
define contiguity follows 
contiguity syntactic units said contiguous span word part sentence spanned follows word spanned immediately right 
child parent node parse tree new node added child contiguous sentence 
expectation relations represented follow lists precondition relations precede lists compere syntactic knowledge described 
syntactic contiguity represented word counter described section working memory compere 
indexing bottom parsing phrase structure rules represented set organization indexing grouped various indexing schemes facilitate access 
consider grammar possible expansions nonterminal 
set rules grouped rules nonterminal left hand side 
organization useful top parser fact start nonterminals left hand side try expand rules 
bottom parser left corner parser organization convenient especially parser required evaluate possible attachments suggested various rules time 
instance sentence boy saw girl 
parsing word rules applied 
order parser scan entire set rules matter gamma 
np vp gamma 
vp np gamma 
np gamma 
det np gamma 
det pp vp gamma 
vp gamma 
pp pp gamma 
prep np simple grammar 
left sides rules select start det right side 
rules organized differently indexing scheme suitable bottom parsing parser easily pick rules 
indexing scheme devised grammar representation employed compere 
see representation observe second reason representation grammar rules suitable compere 
word sentence rules applicable 
parser apply 
top parser fact encounter ambiguity 
purely ambiguity grammar language 
sentence ambiguous word 
parsers introduce interpretations sentence point 
order need enhanced representation rules allow distinguish kinds units right hand sides rules required parts phrases optional adjuncts 
case det required constituent pp optional adjunct 
richer representation combine rules composite rule eliminate spurious ambiguity point 
representation grammar rules minimizes ambiguities merely consequence grammar representation 
representation distinguish required optional units right hand sides rules 
note tried eliminate spurious ambiguity altering rules np left recursive rules follows np gamma 
det np gamma 
np pp pushing problem step 
ambiguity determiner 
seeing noun hypothesize pp time treat complete np try attach parent unit vp pp 
spurious local ambiguity introduced representation fails distinguish required optional constituents phrases 
ambiguity attaching det np arose partitioning syntactic knowledge set rules 
rule representation broke knowledge grammar different ways expanding noun phrases regard distinction required optional parts noun phrase 
distinction partitioning criterion various ways expanding complete noun phrase different representation resulted eliminated ambiguity 
syntactic knowledge set complex relations syntactic units 
relations broken binary relations units 
rule grammar represents subgraph complex graph ary relationships units represent complete grammar 
rules partition grammar smaller subgraphs partitioning introduces amount local ambiguity representation 
summary rules grammar organized subsequences right hand side grouped combined differ allow optional constituents right hand side form composite rule 
compere developed representation essentially set composite rules grammatical category phrase 
individual composite rule represents knowledge child unit part particular parent unit 
include ways attaching child parent different syntactic contexts 
different composite rules category tell unit category attached parent units different kinds 
grammar example composite rule det child np 
rule states det part np provided np precedes det follows det ambiguity pp 
concerned aspect point parsing 
rule states follow conditions child part parent syntactic unit 
optional adjuncts handled rules adjuncts state adjunct attached ends various parent phrases 
instance composite rule pp tells attached complete np adjunct 
xp left corner head argument 
typical structure phrase xp 
referred binary rule jensen ternary relation constituents side rule side 
required units head phrase kinds units shown earlier chapter ffl required units required units seen syntactic unit complete 
conversely syntactic unit instantiated required units said complete 
syntactic unit acquire required children said open incomplete 
complete syntactic unit take optional child time said accessible 
instance required unit np vp 
unique required unit sequence required units phrase 
phrase may set alternative required units complete 
instance np simply pronoun required unit 
associated sequence required units may optional units legally added phrase 
ffl optional units optional units may added complete phrase 
example optional unit added right complete phrase pp attached np vp 
optional units added left required units case adjectives adverbs respectively 
sure representation grammar parsing algorithm introduce spurious ambiguities due optional units 
parser expect see optional unit 
sees able parse correctly 
ffl head syntactic unit leaf unit particular required unit called head 
parent syntactic unit derives primary meaning meaning head child 
head may position phrase different phrases 
phrase may alternative head possible sequence required units 
phrase instantiated head said head complete 
head complete unit may may complete depending required units right head head instance 
head complete syntactic unit meaning available semantic processing complete acquired meaning 
may noted head syntactically grammatically defined unit phrase depend particular meanings words particular lexical items sentence 
ffl left corner leftmost child unit right hand side phrase structure rule called left corner 
left corner may head phrase required unit phrase optional unit left required units phrase 
fact left corners strictly required units optional units sense described 
phrase may possible left corners 
phrase required start left corners corresponding set required units corresponding head 
example subject np sentence required sentence optional sentence 
expected 
seen stays creates requirements completion 
units treated left corners required units grammar induced spurious local ambiguities parser suffer 
compere representation syntactic rules notion required optional head units partition syntactic knowledge bottom indexing scheme phrase structure rules rules child unit right hand side necessarily just left corners grouped rules represented compere follows 
category represent ffl name category ffl set possible parent syntactic categories category 
parent category composite rule specifies preconditions ffl precede constraint specifies sequence types previous units immediately precede child unit child attached parent 
optional attachment right complete phrase order avoid spurious ambiguities spurious multiplicity rules representation allows specify parent phrase precede condition 
condition interpreted mean child attached complete parent phrase specified type 
optional units left middle required units devise similar shorthands regular expressions example representation parsimonious 
particular advantage doing optional units introduce ambiguity parsing left corner parsing left right order processing words sentence 
ffl constraint states particular requirements attaching child parent instance subcategory information 
example vp attached reduced relative clause vp participle subcategory 
constraints enhanced take care agreement preferences number person agreement subject noun verb 
expectations ffl follow constraint specifies sequence units particular types follow required phrase complete 
follow constraints specify required constituents 
information creates expectations parser 
required units follow expected 
actions ffl procedural attachments syntactic rules 
attachments specify tiny actions need performed child attached parent unit 
instance test attached vp attachment rule checks notes voice sentence 
attachments useful utilizing linguistic cues voice specified locally particular word included word sub category information 
constraints procedural attachments enhance grammar cfg languages making grammar combinatorially large 
may noted representation gives set composite rules syntactic knowledge particular syntactic category 
entire set composite rules syntactic unit 
subgraph grammar type syntactic unit certain links represented particular directions guided indexing scheme 
shows representation simple grammar employed discussion 
complete grammar quite similar compere offered allen 
addition types constraints child parent attachments additional syntactic knowledge represents pieces information see grishman discussion adding context sensitive powers context free grammar 
part np node det precond precede nil expect follow expect expect node part np part np precond precede nil precond precede det expect node part vp precond precede nil pp part node prep precond precede nil expect follow np pp node np part expect vp part expect precond precede np precond precede vp expect node np part pp precond precede pep part precond precede nil expect follow vp expect expect node vp part part precond precede nil precond precede np representation simple grammar 
ffl set possible head units syntactic phrase ffl primitive role structure corresponds syntactic unit 
example nps np role known thing role verb event role 
see chapter discussion semantic roles 
head pp notion head phrase needs elaboration 
order see difference heads defined theories abney consider prepositional phrase 
parsing theories head phrase defined purely syntactic considerations regard meaning 
instance head phrase projects rest phrase unique phrase 
definition english languages case marked language 
english definition head prepositional phrase preposition 
particular phrase helps illustrate problem approach illustrate compere different 
compere head pp np head turn noun 
object purely syntactic grounds noun head np pp 
noun gives meaning np pp 
preposition linguistic marker denote role played word meaning noun event 
languages ways specifying roles played noun meanings 
language english uses word order indicate roles get nps directly attached vp 
roles specified word order 
prepositions mechanism specifying roles nouns 
nouns central meaning pp 
fact languages prepositions equivalents come nouns english 
case marked language case markers follow nouns mark semantic roles nouns 
interesting piece evidence points notion noun head pp 
phenomenon prep noun home john took book home 
shows pp preposition pp noun anaphoric situations clauses preposition 
notion head comes considerations meaning hslc parsing algorithm defined head phrase determine perform parsing actions compere parser existence purely syntactic parser 
compere meant model sentence interpretation just parsing way 
conceptual knowledge content words nouns verbs conceptual meanings quite independently linguistic forms words take 
meanings represented conceptual units state concept relates concepts 
concepts viewed nodes multiple hierarchies hierarchy generalization specialization structure concepts 
conceptual node specifies relations concepts stating selectional preferences classes concepts fill particular role relationships concept 
selectional preference role stated constraint terms class concepts filler role belong 
example word teach conceptual meaning event teach 
concept selectional preferences concepts fill roles teach event 
instance fillers agent roles event animate concepts fillers theme roles concepts teach event 
objects fall different hierarchies concepts tell particular concept animate entity physical object 
sample hierarchy shown 
compere conceptual knowledge built purpose demonstration included concepts distinctions necessary example sentences compere tested see chapter examples 
agent role animate experiencer role theme role object teach event officer child animate living human animal adult plant horse lexicalized conceptual knowledge non lexical concept hierarchies graphs telescope course thing object representation conceptual knowledge 
conceptual units state selectional preferences role fillers completeness requirement specify role attached concept 
optional roles location role attached event instance 
distinction required units optional units representations designed distinguish 
required roles agent theme experiencer roles particular event example form collection roles typically event 
strict requirement constraint syntax 
roles mentioned conceptual event may sentence may inferred means inter sentential extra linguistic inferences compere 
instance event agent experiencer 
assumed grammaticality requirement absence role handled syntax corresponding parts grammar 
may noted events concepts general occur various combinations concepts relates 
variety realized linguistic forms various predicate argument structures 
combinations roles explicitly represented compere conceptual knowledge 
predicate argument subcategorization information represented thematic grids conceptual knowledge tanenhaus boland verbose enumerative 
information assumed taken care combined subcategory information lexicon subcategory constraints grammar rules form constraints syntactic rules selectional preferences conceptual role fillers 
may noted conceptual knowledge selectional constraints described lexicalized 
selectional constraints specific particular word meanings accessed directly lexical entry word 
compere additional non lexicalized conceptual knowledge form concept hierarchies mentioned 
role knowledge semantic analysis compere thematic roles 
standard set thematic roles extended introducing intermediate roles link syntactic structures thematic roles 
intermediate roles help maintain declarative representations sentence interpretation process stages 
role linked syntactic structure node parse tree corresponds role side conceptual meaning word meaning filler role 
representation roles design similar content form representation syntactic knowledge 
role type node represents rules govern specialization role type specialized roles child specialized parent role 
rules state parent role child role attached constraints attachment 
constraints preferences procedural attachments go role attachments ffl syntactic guidance certain constraints role assignment inspect local syntactic context seek guidance syntax composing meanings role attachments 
instance role assignment depend parent unit vp np np subject direct object indirect object 
ffl linguistic guidance sources linguistic information help role attachments 
example role specializations check voice sentence clause determine right attachment 
ffl role context roles current role hierarchies influence role assignment 
handled corresponding constraints syntax precede constraints 
just syntax precede conditions refer parent role indicating child role added parent role long role complete 
roles required optional constituents 
subset roles required parent role determined conceptual meaning phrases type event talked syntactic argument structure surface form 
optional roles location theme added roles required corresponding conceptual knowledge 
ffl conceptual constraints particular concept participating parent role influences particular roles attached child roles 
knowledge form constraints helps disambiguate ambiguous roles theme experiencer 
disambiguation marked linguistic surface form captured adequately distinctions syntactic structure 
conceptual knowledge helps delay role specialization right time requisite knowledge disambiguation available 
instance subject role prevented getting specialized agent role actual event role accepts rejects subject noun filler agent role 
ffl combined factors certain combinations help deciding right way specialize role order attach parent role 
instance combination syntactic role contexts provide right constraints attaching agent theme roles 
intermediate roles intermediate roles structures purely syntactic purely semantic 
combine lexical syntactic semantic conceptual information represent states sentence interpretation capturing set related commitments sentence processor point interpreting sentence 
intermediate roles declarative representations sentence processing decisions great value recovering error 
example intermediate role vp np role 
role role head noun prepositional phrase preposition attached vp adjunct 
role quite instrument role point sentence processor verified conceptual meaning vp event accepts meaning head noun pp valid instrument event 
noun instrument sentence processor equipped deal eventuality complete track decisions noun initially got np role role np attached pp preposition turn vp np role pp attached vp 
representation intermediate decisions sentence processor start role assignment afresh time attempt assign particular role succeed 
graphical representation thematic roles intermediate roles currently compere shown 
nodes roles links show roles emerge parent roles combining roles 
precede preconditions links shown ensure appropriate roles emerge syntactic semantic context 
set roles shown sufficient cover example sentences compere output described chapter 
agent theme experiencer instrument beneficiary agent theme active subj non agent subj passive subj obj obj obj np subj np np passive np np np vp np event location state np np vp modifier representation intermediate role knowledge 
knowledge compere types heuristic knowledge uses reduce ambiguity assign proper syntactic semantic structures sentence 
purely structural preferences assigning syntactic structure 
instance right association preference optional adjunct means prefers attach optional adjunct pp lower syntactic unit units type 
minimal attachment preference syntactic structure assignment 
minimal attachment behavior mere consequence heuristic employs completion preference see 
essentially choice attaching structure required unit optional unit prefers required unit attachment optional 
second type heuristic knowledge completion preference 
sentence processor quest completing incomplete structures 
syntax keeps track required units seen particular open phrase prefers interpretation words complete phrase 
noted preference completing phrases provides explanation minimal attachment behaviors relying explicit count number nodes parse tree 
notion completeness directly related compere account expectations 
required units necessary complete structure expected 
heuristic compere uses exploit power expectations reduce ambiguity wasting efforts expecting unnecessary entities may may appear sentence 
notion completion useful disambiguation preference guides sentence processor making commitments right points processing sentence 
described parsing algorithm processor attachments upwards structure complete acquired required units 
addition compere certain heuristic preferences 
instance honors phrase clause boundaries knows cross arbitrarily making syntactic attachments 
knows sentence structure special status sense sentence strive create structure exist 
similar preferences event role semantics 
completion preferences roles semantics required units 
compere knows syntactic structures attached adjacent siblings parent sentence loci projections contiguous word spanned unit follows immediately word sentence spanned earlier sibling 
smaller pieces knowledge represented procedurally algorithms implement compere 
working memory compere maintains working memory keep track interpretation built able access syntactic semantic interpretations initial parts sentence processing parts 
working memory consists structures ffl parse trees set partial parse trees sentence eventually part parse tree entire sentence represents syntactic interpretation sentence 
parse tree comes additional constraint approximation clarified parsing algorithm 
briefly structure attached parent soon head complete seen head unit attachment refined time acquires new units required optional right head 
np det vp move insect bug microphone bug event role agent role active subject subject role np role bugs moved role prep pp np word counter embedded clauses flag active ignore semantics syntactic alternatives vp attached rel parent 
semantic alternatives agent role retained meaning microphone bug parse trees role trees syntactic expectation accessible right boundary word meanings note links parse tree nodes role tree nodes word meanings shown 
seen structure compere working memory 
right hand boundary accessible attachment error recovery 
trees stored left right order ones currently incomplete clause accessible attachment 
compere keeps track seen structure syntactic structure processed accessed near 
nodes parse trees representation window words span sentence 
tuple stands starting word number portion sentence spanned syntactic unit 
ffl role trees similar set role hierarchies accessible directly parse trees 
nodes set trees connections conceptual meanings words 
ffl embedded clauses semantic roles conceptual meanings embedded clauses kept accessible constitute final interpretation sentence interpretation main clause 
embedded clauses available attachment structural modifications happen right hand boundary currently open accessible syntactic structure 
distinctions semantic representations main clauses embedded clauses see woods discussion distinctions represented making meaning main clause available node meanings clauses available separately list embedded clauses 
ffl syntactic expectations parse trees expected units hanging right nodes expecting siblings right hand boundaries 
nodes attach incoming words expected parent units preference attachments 
expectations serve fulfill quest completing incomplete units 
expected units instantiated time expectation generated 
expected units linked parse trees horizontal links sibling units expecting unit expected unit 
horizontal expectation links certain advantages alternative attaching expected units parent units 
distinct possible syntactic attachment links part parse tree eliminating ambiguity expectation attachment links 
syntactic unit expected different left corners particular parent phrase 
example see auxiliary adverb expect see verb 
expected verb linked parent vp known expected aux left corner adverb left corner 
course verified traversing tree locally having information explicitly represented helps semantic role assignment error recovery 
ffl syntactic alternatives record syntactic alternatives previous attachment decisions kept order switch interpretations repair structures error recovery 
syntactic alternative set alternative attachment proposal child structure attachment proposed 
alternatives accessible child nodes right hand boundaries removed list 
ffl semantic alternatives word meanings deactivated due conceptual selectional constraints particular role assignments retained alternative meanings 
alternative word meanings accessible role structures parse trees error recovery reason deactivate revised role assignments 
ffl word counter current word position sentence 
check spans syntactic structures terms subsequence window words span 
checks contiguity overlap sentence loci syntactic structures great value syntactic structure assignment especially wake structural categorial ambiguities 
ffl voice flag register indicates currently open clause active voice passive voice 
useful way handling non local non cfg effects sentence processing 
similar registers may needed dealing agreement issues 
associated register determining voice embedded relative clause 
flag notes vp relative clause potential passive voice participle form auxiliary form 
register determines clause really passive voice depending auxiliary relative pronoun 
ffl ignore semantics third flag note semantic preferences including selectional preferences completely disregarded flag reset 
necessary error recovery sentence processing see 
representing proposed attachments compere proposed attachments syntactic semantic making attachment needs hold proposed attachments working memory 
proposals include variety information proposed attachment transient thrown cases soon arbitrator selects proposal 
proposals alternatives selected ones retained lists alternatives needed error recovery 
added list discarded nodes involved inaccessible moving interior parts parse trees 
see algorithms clear analysis proposal thrown retained 
syntactic attachment proposal information specified ffl parent category name syntactic category proposed parent node 
ffl child category name syntactic category child unit attached 
information easily obtained child str included anyway sake uniformity 
ffl parent str parent structure exists parse forest 
ffl child str child structure attached 
ffl preference value preference value assigned proposed attachment 
ffl passivity child structure attached passive voice 
slot determine voice relative clauses voice depends verb subcategories vp presence absence relative pronoun 
ffl lexical entry lexical entry word attachment attempted 
word category ambiguity identifies particular lexical entry child category name provides access necessary subcategory information 
thorough illustration determining voice relative clause thematic role assignment relative clauses see examples chapter 
ffl precede syntactic category ies units precede child str attachment parent str 
ffl follow syntactic category ies units expected time child str attached parent str 
ffl constraints subcategories words child str proposed attachment 
example vp participle mode 
ffl actions actions procedural attachments carried time attachment 
feature sparingly mainly set voice register 
semantic attachment proposal types information ffl parent category name role category proposed parent role 
ffl child role str child role structure attached 
ffl parent role str existing parent role structure attachment 
ffl preference value preference value assigned proposed attachment 
ffl precede role category ies units precede child role str attachment parent role str 
ffl follow role category ies units expected time child role str attached parent role str 
ffl actions actions procedural attachments carried proposed attachment 
procedures mainly specify tests non cfg aspects implement role preconditions described links role graph 
ffl directly role attachment direct intermediate role created child parent roles attached 
ffl middle role intermediate role middle attachment direct 
ffl active meanings meanings child structure remain part current interpretation attachment 
ffl alternative meanings meanings child structure deactivated attachment done meanings alternatives may time error recovery purposes 
ffl role left role left sibling child role attached 
see section processing left roles description information 
may noted compere arbitrator passes syntactic attachment proposal semantics combines corresponding semantic proposal syntactic form complex proposal ensemble 
arbitration described 
sentence processing methods having seen representations knowledge intermediate results working memory turn methods algorithms process sentence representations 
focus syntactic processing describe implementation hslc parsing algorithm 
implementation hslc parsing algorithm important methods hslc parsing algorithm deciding attempt attach syntactic unit parent unit ii proposing possible attachments iii selecting subset proposed attachments iv making attachment 
enumeration include minor steps creating instances word categories 
discussed chapter parsing algorithm determined essentially choices attachment project parent syntactic unit 
top parser projects start need attachments projects top 
bottom parser hand attachment phrase 
words announce point see chapter abney johnson zero top parsers phrase bottom parsers irrespective required optional constituents phrase 
hslc announce point head different different phrases depending position head optional modifiers head 
hslc left corner parsing algorithm question projection done 
left corner project parent unit expectations required units parent 
expectations created undergo minor adjustments starting sentence loci instance optional modifiers seen expecting unit left corner expected required units 
deciding attachments hslc says constituent just received head attached parent unit 
words unit attached parent unit soon unit head complete 
done maintaining unit completion status true list required units acquired complete 
leaf units word categories heads attached immediately instantiation 
identifying possible parents possible categories parent units obtained looking phrase structure rules current child category 
composite rules represented described tell types parent nodes constraints attachment precede constraints instance 
types parents identified parser needs propose attachments locating parent units existing parse trees proposing new parents units created 
proposing attachments right hand boundaries parse trees propose ways attaching syntactic unit existing parent unit needs freshly instantiated 
ways proposing attachments see pseudocode algorithm ffl attaching satisfy expectation possible syntactic unit previously seen created expectation current unit 
case current unit attached parent expecting unit right expecting unit sibling 
possible merge case cases expecting unit right hand boundary parent type attachment checked help disambiguation 
explicitly representing expectation links catch expected attachments treat preferentially attachments reducing ambiguity structure assignment 
ffl attaching expected unit possible parent unit expected current child unit 
case child unit attached expected parent unit leading completion 
optional unit left corner added expected parent unit 
ffl attaching unit right hand boundary syntactic unit may attached parent unit right hand boundary tree 
expectation case unit type unit optional unit parent unit 
optional unit left required units parent unit sentence processor expectations required units making attachment sentence loci expected units pushed right intervening optional unit 
example adding pp adjunct subject np 
case np expectation vp pushed right amount equal length pp 
ffl attaching projecting new parent unit suitable parent unit existing objection creating new parent unit violation incomplete phrase clause boundaries child unit lead creation new parent unit 
child unit leftmost child parent unit left corner 
may noted child unit attached children just turned head complete 
words child unit partial parse trees compere working memory 
may noted contiguity sentence locus checked attachment 
siblings contiguous sentence parents accurately reflect sentence loci children 
locating existing parent unit attaching child unit right hand boundaries parse trees searched leaf root upwards terms word counter partial tree tree long tree accessible 
trees incomplete tree inaccessible honor phrase clause boundaries avoid links crossing final parse tree 
search ordering results right association preference attachments absence stronger preferences completion preference 
right association behavior seen compere case attaching optional adjuncts phrase instance 
selecting proposed attachments proposed attachments ranked preference levels different types attachments 
different types attachment proposals preference levels shown table 
selecting preferences task arbitration algorithm described part description algorithm 
parent unit may expected head child 
done keep expectations general representation parsimonious 
recall phrases may head depending expansion take 
instance preposition generates expectation np specifically noun 
np noun head pronoun 
generate alternative expectations noun pronoun simply generate expectation np leaving rest processing 
word np det word np det word expectation link expected category np word expectation link expected category prep pp np word prep pp det expected category word np vp aux pp prep np np vp aux np vp aux np vp aux pp prep np pp prep np attaching satisfy expectation attaching expected parent attaching optional adjunct existing parent projecting new parent left corner ways making syntactic attachments 
current syntactic unit attached parse forest possible parent tree parse forest rightmost leftmost node right hand boundary tree crossing incomplete phrase boundary clause boundary node expecting current unit select parent node expecting unit type possible parent select node current unit attached optional child node right hand boundary select node fails current unit precede create new node projecting current unit left corner new parent unit 
pseudocode proposing syntactic attachments 
table preference levels syntax 
type attachment preference level attaching satisfy expectation attaching expected parent required child attaching existing parent optional child attaching expected parent optional child creating new parent unit modifications done levels preference 
sentence structure formed proposal create proposal gets increment preference value 
idea prefer starting structure complete sentence structure may formed adding nonessential optional units 
structure sense expected structure start 
secondly addition preference levels shown table preference level increased procedural attachments attached attachment proposals 
heuristic says test action associated proposal test action lead rejection proposal additional information attached procedure additional information corroborated proposal preference level proposal increase small amount 
making attachments selected attachments relevant structures working memory updated reflect changes syntactic structures 
example updates done working memory date ffl meanings child head parent meaning child unit propagated parent 
meanings accessible child parent 
corresponding roles propagated upward parent 
instance event role meaning propagated vp node node vp main verb sentence 
ffl sentence loci increase span parents result attachment reflected updating sentence loci parent unit ancestors accessible right hand boundary 
ffl completed lists child unit required unit parent completed list parent unit updated reflect fact required units seen 
ffl propagate completion child unit head parent unit parent just head complete 
parent attached units possible 
process called propagate completion compere jargon recursively applied upward far possible get complete incremental interpretation point processing sentence 
thing upward propagation intermediate node head complete 
head completeness license attachment green signal upward propagation processing 
implementation role assignment semantic analysis compere essentially process assigning semantic role thematic role modifier roles various kinds frawley content word sentence 
word meanings sentence assigned semantic roles syntactic guidance role assignments correspond syntactic compositions words proposed hslc parsing algorithm independently semantic conceptual knowledge 
focus kind role assignment discussion 
compere propose role assignments independently syntactic attachments unguided role assignment exhaustive search pair roles meanings possible attachments come handy processing ungrammatical input instance 
implementing role assignment involves steps deciding role attachments ii generating semantic attachment proposals iii selecting proposed role assignments iv making assignments 
deciding role assignments taken care hslc parsing algorithm 
role attachments attempted head complete syntactic unit attached parent unit 
time compere want attempt role attachments composition suggested syntax input ungrammatical 
discussion concern situation making role assignments correspond syntactic attachment proposals 
second place role attachments carried 
phenomenon known left role processing compere explained 
set proposed syntactic attachments compere evaluates semantic feasibility attachments 
results generation possible semantic attachment proposals corresponding syntactic attachment proposals 
arbitration algorithm selects set pairs syntactic semantic attachment proposals subset sentence processor needs pursue attachments 
discuss steps detail 
generating semantic attachment proposals syntactic attachment proposal compere generates corresponding semantic attachment proposals attempting attach semantic roles syntactic structures directly intermediate roles 
links checks conceptual constraints fillers roles 
tests done pair child parent roles 
parent role time syntactic attachment gets role child child head child parent remains role 
pair roles attached compere employs parsing algorithm similar hslc parsing algorithm generate attachment proposals 
case direct attachment child role parent role process equivalent attaching syntactic child existing parent unit 
new intermediate parent role created process similar happens syntax new parent structure created left corner phrase 
roles attached satisfy expectations case pp roles preposition role expects np role 
syntax little gained prediction projection structural ambiguities composition taken care hslc syntax 
roles composed children roles see algorithm parse role sequences simpler hslc 
employ projection prediction 
simply carries purely bottom process satisfactory conceptual constraints syntactic correspondence constraints role links attachment parent role 
summary generating semantic attachment proposals syntactic attachment proposal comprised steps ffl examine role complete role complete acquired required children head driven strategy event role complete attached roles higher 
ffl consider possible parents mentioned composite phrase structure rule child role attached 
ffl follow conditions attachment parent delay attachment follow satisfied head driven strategy 
ffl precede conditions conceptual constraints role filler correspondence constraints satisfied propose attachment parent 
constraints checked looking see existing parent role child ren role types specified constraint 
conceptual constraints role fillers checked seeing word meaning attached child role type specified constraint 
conceptual constraints obtained looking slots conceptual meaning attached parent role meaning parent syntactic phrase specifies constraints fillers roles meanings child syntactic phrase fillers meet constraints 
process checking correspondence constraints described 
ffl find existing parent role propose new role type created parent child role 
note finding existing role involve search role trees parse trees role obtained local search syntactic child syntactic parent syntactic left child case left role processing 
ffl repeat process child role linked intermediate roles role parent syntactic structure 
steps essentially constitute role assignment method compere semantic analysis 
algorithm generating semantic role assignments earlier chapter 
processing left roles child syntactic node attached existing parent syntactic node roles attached node processed 
see scenario precise terms consider syntactic node syn child left corner syn 
suppose syn head syn 
syn meaning role time 
syn meaning intermediate role waiting composed meaning syn 
suppose new child syn head syn attached syn 
result syn going acquire meaning role head syn 
attachment syn syn verify semantic feasibility making attachment arbitrating algorithm decide wise commitment time 
making syntactic link syn syn essentially results composition meanings syn syn need evaluate feasibility attaching intermediate role syn new role syn role syn 
necessary process roles left link link parent syntactic structure syn child syn left child syn 
parent acquire meaning new child child head relationships newly acquired meaning children left investigated determine feasibility attaching current child parent syntactic structure 
scenario typical example immediate semantic feedback syntactic processing helps resolve structural ambiguities syntax 
example semantic feasibility agenthood subject noun help syntax determine verb main verb sentence part reduced relative clause modifying subject noun 
explain example sentence garden path sentence sentence 
courses taught academy demanding 
officers taught academy demanding 
may noted checking semantic feasibility syntactic link described involves chain intermediate roles times making role attachments 
instance np role subject noun specialized way agent role order determine feasibility vp link processing np details algorithm left role processing 
context processing necessary explained illustrated 
processing left role follows role assignment algorithm earlier chapter 
syn syn syn syn head role syn role syn syn syn syn syn head syntactic node semantic role semantic role conceptual meaning 
syntactic expectation link 
syntactic link right boundary 
semantic role semantic role 
inaccessible syntactic link 
processing left role 
left link 
serves show general correspondence individual operations parse trees role trees 
single composition operation parse trees involve building entire tree semantic roles vice versa 
checking semantic feasibility syntactic link involves examining semantic consequences making link 
syntactic link arbitrator evaluates proposed compositions parallel making attachment process poses problem implementing compere 
solution employed compere involves making syntactic attachment temporarily evaluate semantic consequences attachment removing syntactic link arbitrator decide link build 
temporary syntactic links may needed instance see correspondence constraints role links satisfied proposed syntactic link 
semantic preference levels arbitration algorithm selects proposed attachments means set preference levels semantic attachments 
proposed role attachments assigned different preference levels semantic conceptual constraints satisfied violated 
semantic preferences come combination syntactic correspondence constraints conceptual selectional constraints semantic role attachment constraints 
constraints may constraints role attachment roles pp example constraints correspondence syntactic compositions attachment np vp constraints role filler classes coming conceptual knowledge constraints linguistic knowledge attachment active passive voice construct 
table preference levels semantics 
semantic constraints preference level constraints satisfied meanings check constraints constraints exist constraints satisfied positive integer table shows different levels semantic preferences 
preference exists constraint violated 
arbitrary value assigned preference level 
higher preference exists words composed meanings check semantic constraints 
assigned positive value close zero third preference level assigned word meanings available known constraints check 
assigned slightly higher value rationale meanings meanings violate constraints known sentence processor 
previous case constraints known role fillers check constraints 
meanings acquired time known constraints may violated 
case assigned lower level preference constraints checked 
highest level preference exists known constraints fact satisfied word meanings 
number assigned level positive integer greater value previous levels exact value depending actual constraints satisfied 
numbers greater significance partitioning scale preferences discrete ranges compared 
example greater ratio significance whatsoever 
values chosen values needed zero negative values zero indicate failure meet semantic constraints positive integers greater equal indicate constraints satisfied actual value giving idea satisfied weight satisfied constraints carried 
intermediate values stand inability check existing constraints absence semantic constraints 
need fine tune numbers implementation compere 
may noted constraints table may conceptual role composition precede syntactic correspondence constraints 
equal weights satisfied 
amounts heuristic constraints satisfied higher preference proposed attachment 
constraint violated preference falls lowest level result rejection proposal 
essentially semantic preferences levels corresponding constraints satisfied intermediate levels absence constraints absence sufficient information input check known constraints 
selecting making role attachments just case selection syntactic attachments semantic selection unified task requiring arbitration syntactic semantic proposals preferences 
job done unified arbitration algorithm described 
attachment selected making role attachment essentially bookkeeping operation pretty process making syntactic attachments 
constraints role assignment semantics addresses relationships linguistic structure conceptual meaning semantic constraints lean syntactic aspects semantic relationships conceptual aspects 
constraints determine semantic role assignment basic kinds ffl syntactic correspondence constraints assignment semantic role correspond syntactic compositions order ensure consistency syntactic semantic interpretations sentence 
syntactic guidance semantics implemented compere set correspondence constraints role links 
constraints enforce tests local syntactic context sure syntactic structures context license role attachment proposed 
constraints include subject np syntactic subject np np child rel 
object np syntactic object np np child vp 
direct object np syntactic direct object np np second object nps vp 
indirect object np syntactic indirect object np np nps vp 
np parent syntactic parent node np 
vp parent syntactic parent node vp 
agent role parent np agent role 
note conjunction np parent constraint check presence particular role 
theme role parent np theme role 
conjunction np parent constraint check presence particular role 
ffl role constraints constraints role grammar phrase structure rules say roles precede follow roles parent role structure 
precede constraint preceding child role existing parent role appropriate kind 
follow constraint child role followed role appropriate kind 
event exists event role take role 
check presence event role 
helps delay unwarranted attachment subject noun agent role verb seen example 
ffl conceptual constraints constraints selectional restrictions role fillers 
insist role fillers meanings particular kind animate object classes objects 
satisfies slot role filler meet constraints fillers role specified conceptual knowledge parent role role filler 
event affords event role accept current role role filler satisfy constraints 
combination role constraint satisfies slot constraint 
checking constraint involve role attachments child role indirectly attached event role satisfies slot constraints checked 
example subject np role event role specialize subject np role active subject role checking see word meaning np satisfies selectional constraints agent role event 
satisfies role slot role filler meet constraints role fillers semantic role knowledge 
constraint current implementation compere 
allows generalize certain lexical knowledge 
specify satisfies role slot constraint constraint filler particular role having repeat information conceptual entry word meaning accepts role 
ffl linguistic constraints linguistic cues provide additional constraints role assignment 
deal voice sentence 
similar constraints imposed agreement word inflections number person gender case different parts sentence 
active voice clause active voice 
passive voice clause passive voice 
may noted constraints take role processed child role parent role proposed attachment argument corresponding syntactic structures access information local syntactic role context 
may noted order possible parent roles associated constraints attaching checked important 
order implement negation certain constraints 
example constraints active subject role non agent subject role 
active subject role specialized non agent subject role current event afford role agent role subject noun agent role sentence active voice experiencer instrument role 
arbitration having generated semantic attachment proposals rejections matter corresponding syntactic attachment proposals compere different syntactic semantic alternatives 
arbitration really task combining information arising disparate sources knowledge 
arbitrator combine syntactic preferences alternative interpretations arising syntactic knowledge sources semantic preferences originating semantic conceptual knowledge 
distinct knowledge sources benign arbitrator weigh preferences order select alternative best 
fundamental problem doing determining projection scale preferences 
scales merged preferences combined arithmetic operations 
know instance level preference syntax higher lower level semantics 
preferences embody conceptual knowledge projection derived analyses corpus texts domain application task sentence interpretation situated 
arbitration algorithm simpler problem projecting scale preference line avoided altogether 
result avoiding having combine information explicitly arbitrator appear slightly biased favoring syntax bit semantics problem compere 
arbitration algorithm described suited explaining psychological data ambiguity resolution error recovery holbrook eiselt mahesh mahesh eiselt stowe 
mathematical approaches doing arbitration real numbered preferences various theories probabilities proposed integrating information multiple knowledge sources precision necessary compere produce acceptable sentence processing behaviors 
noted previously compere goal match individual body psychological data word word real purpose design implement computational machinery takes produce variety sentence processing behaviors 
noted arbitration algorithm approximation real numbered preferences 
aspect discrete levels preferences compere deal question real numbers originate acquired learned 
passive voice detected follows clause passive voice verb participle form auxiliary form 
clause passive participle verb form auxiliary relative clause relative pronoun 
clause active voice passive voice 
may noted certain connectionist networks precisely having merged single scale activation levels start arbitration sense automatic 
may noted computational complexity algorithm concern import rarely come examples number syntactic semantic alternatives handful 
true algorithm implemented efficiently building sorted lists attachment proposals incrementally instance necessary 
implementing arbitration algorithm proposal complex potential syntactic attachment syntactic preference corresponding semantic role attachments semantic preferences 
proposal complex specifies attach syntactic child unit parent unit specifies semantic role attachments intermediate roles correspond syntactic attachment 
proposal complexes sorted decreasing order preference levels syntactic attachments 
partitioned equivalence classes members class syntactic preference level 
equivalence class sorted decreasing order highest preference semantic attachment proposals associated complex 
doubly sorted sequence proposal complexes equivalence class picked highest syntactic preference positive semantic preference 
class class highest syntactic preference picked 
equivalence class proposal complexes picked highest semantic preference levels semantic attachment proposals 
words simply select highest preferred syntax semantics agree 
arbitration algorithm shown 
may noted algorithm implicitly allows delayed decisions 
semantics equal preferences positive zero negative allows selection alternative equal preference pursued disambiguated new information 
semantics positive preference syntactic proposal proposal selected 
semantics preference syntactic attachment preferred syntactic attachment selected 
hand semantics rejects syntactic proposals preferred syntactic proposals selected allowing syntax override semantics produce interpretation 
may noted semantics negative preference highly preferred syntactic proposal positive preference syntactically preferred proposal arbitration algorithm selects proposal goes ahead 
implications decision terms cognitive accuracy reasons selecting delaying decision circumstances discussed chapter 
officers taught academy demanding 
consider example sentence situation depicted shows syntactic semantic preferences ambiguity composing verb taught subject np officers 
clear case strong syntactic preference main verb attachment 
semantics equal preferences attachment arbitration trivial case main verb attachment selected 
courses taught academy demanding 
considering sentence hand see syntactic preferences remain previous example semantics negative preference main verb attachment semantics rejects attachment proposal data structures proposal complex record nodes nodes syntactically composed 
syn pref syntactic preference level 
roles role pairs semantically composed 
sem pref semantic preference levels role pairs 
algorithm arbitrate set feasible compositions fp proposal complex sort set decreasing order syn pref partition sorted list equivalence classes equal syn pref partition sort decreasing order maximum sem pref select positive maximum sem pref exists select partition sorted list syntactically preferred select chosen partition maximum sem pref arbitration algorithm 
courses agents taught 
case reduced relative attachment selected arbitrator 
resolving lexical semantic ambiguities methods proposing selecting syntactic role attachments explain compere resolve lexical category ambiguities structural ambiguities 
apart syntactic ambiguities methods resolve ambiguities role assignment structural semantic ambiguities 
tell compere resolves lexical semantic word sense ambiguities 
ambiguities lend construed choice form attachment 
separate methods necessary resolve lexical semantic ambiguities 
compere additional methods conjunction selection methods choose contextually appropriate word meanings 
ffl deactivate meanings method called role attachment 
deactivates word meanings compatible role attachment 
meaning violates selectional preferences conceptual constraints role fillers taken set conceptual meanings structure conceivable semantic network spreading activation model word sense disambiguation selecting word senses construed choice links paths semantic network 
det np vp officers taught np role subject np role active subject role agent role event role det np vp officers taught rel cl rel np role subject np role event role passive subject role experiencer role attachment proposal main verb attachment syntactic preference preference attachment proposal reduced relative attachment 
syntactic preference semantic preference arbitration benign situation 
det np vp taught np role subject np role active subject role agent role event role det np vp taught rel cl rel np role subject np role event role passive subject role attachment proposal main verb attachment syntactic preference attachment proposal reduced relative attachment 
syntactic preference semantic preference courses courses semantic preference theme role arbitration conflict situation 
attached 
meanings retained alternative meanings potential recall error recovery processes 
ffl retained meanings method applied error recovery operation 
deactivated meaning new context brings back meaning appropriate selectional constraint eliminated place new context 
new selectional constraints hand method service deactivate meanings remove previously active meanings 
compere capacity switch conceptual meanings appropriately syntactic role structure interpretation changes 
retention elimination alternatives order enable recovery errors opposed just reprocessing input compere retains unselected alternative interpretations point 
retention soon prohibitive hundreds alternatives retained sentences 
compere uses simple heuristic decide retain alternative safely discard unselected proposal 
heuristic ffl retain accessible alternatives alternatives attachments currently accessible right hand boundary parse tree retained 
subtree moves interior parts tree alternatives associated nodes subtree discarded 
greatly reduces number alternatives retained error recovery 
rule hypothesis right hand boundary accessible part making attachments part accessible repairing parse forest error recovery 
hypothesis contradicted sentence compere tested 
implementation error recovery algorithms attempts produce incremental interpretations deterministic extent possible compere commits errors syntactic semantic interpretation 
ability recover errors syntax semantics 
specific error recovery methods employs reinterpreting sentence reprocessing entire sentence 
essential mechanism error recovery obviously backtracking previously unselected alternative compere error recovery methods plain chronological backtracking 
alternatives stored working memory mentioned 
error recovery methods pick appropriate alternatives memory information available error situation having search unrelated alternatives 
error situations corresponding recovery methods basic kinds 
composition failure new word meaning composed existing interpretations syntactically semantically composition failure 
assuming sentence correct compere looks alternatives see reinterpreting initial part sentence errors occur incorrect algorithms bugs compere implementation 
result fact compere incremental decisions information access time decision information available processing sentence proves previous decision incorrect 
retained alternatives results new interpretation new word meaning composed successfully 
new structure composed available type error compere searches memory alternatives precisely involves alternative composition previous structure kind 
reasoning heuristic previous structure taken away place left open attaching new structure 
heuristic search process chronological dependency directed backtracking 
go back reexamine decision processing sentence 
furthermore similar dependency directed backtracking dependency directed explicit knowledge causal dependency previous decision error 
bugs moved lounge quickly 
example consider sentence error situation reading word shown top half 
composition failure way compose meaning previous part sentence 
point retained syntactic alternatives shown 
compere examine pursue 
error situation knows error occurred lack place attach new vp 
looks alternatives attaching previous vp 
selects alternative 
compere repairs parse forest follows ffl removes existing vp connection 
ffl corresponding role assignments removes corresponding intermediate roles 
example removes agent role subject noun retracts role subject noun back subject np role 
ffl meanings 
example removes move meaning event role node point back vp node 
ffl vp relative clause structure suggested retained alternative proposal 
ffl performs corresponding role assignments 
example subject noun gets theme role move event 
ffl attaches new vp open expected position ffl performs role assignments suggested new attachment 
example new find event subject noun theme role 
resulting correct interpretation shown bottom half 
may noted error recovery process described involved repair reinterpretation complete reprocessing input sentence 
instance prepositional phrase role parent vp modified manner recovery 
incompleteness failure syntactic semantic structure remains incomplete sentence example words processed result incompleteness failure 
situation compere analyzes required units incomplete sentence phrase completed expected units point picks alternatives working memory involve compositions structures right boundary det np vp prep pp det np bugs moved lounge new vp error composition failure 
composed rest 

attach pp 
attach previous vp rel 

attach subject np rel 
retained alternatives det np vp pp bugs moved vp rel cl rel recovery successful composition 
retained alternative selected repair tree 
error recovery composition failure 
accessible time type required unit 
compere explores alternatives see reinterpreting removes error producing complete structures 
heuristic employed search retained alternatives error situation different previous 
children taught academy 
example consider sentence 
shown top half compere pursued reduced relative interpretation sentence conceptual constraint teach allow children fill agent role 
interpretation children fill experiencer role event 
sentence incompleteness error sentence structure incomplete 
structure waiting head vp 
alternatives retained point shown 
compere selects repairs structure obtain complete structure follows ffl identifies structures right hand boundary incomplete gathers expected units required units complete incomplete structures 
ffl search similar described case composition failure selects retained alternative release previous structure meet expectation complete incomplete structures 
ffl repairs parse forest removing previous attachment making attachment suggested retained alternative 
ffl performs appropriate role assignment operations reflect changes repair 
resulting complete structure shown bottom half 
interpretation children fill agent role teach event 
may noted error occurred place conceptual selectional constraint said children fill agent role event 
compere discount constraint repair process constraint prevent building complete structure 
compere accomplishes telling arbitrator disregard semantic constraints go ahead considering syntactic preferences 
change strategy necessary model type error recovery behaviors illustrated example possible compere architecture unified arbitrator 
arbitrator provides necessary control interaction enable recovery conflicts errors 
error recovery accomplished repair reinterpretation reprocessing input sentence 
recovery induced errors possible recovering error cause decision previously revoked altered 
instance reinterpreting syntactic structure previous word sense disambiguation 
sentence example time composition failure word bugs disambiguated mean insect microphone meaning deactivated retained alternative 
repair recovery error longer reason reject meaning bugs 
compere active deactivated meanings structures involved error recovery structures roles reassigned see current status new constraints coming new role assignments 
process done concurrently role re assignment process ensure consistency syntactic semantic interpretations times 
example bugs example turns insect meaning det np vp pp taught rel cl rel vp expected vp retained alternatives 
attach pp rel 

attach pp np 

attach vp 
attach np rel 
error incompleteness failure 
expected vp seen 
det np vp pp taught recovery successful completion 
retained alternative selected repair tree 
children children error recovery incompleteness failure 
valid new interpretation 
microphone meaning compatible new role assignment bugs assigned theme role original agent role move event 
microphone meaning brought back retained state active state 
previous decision resolved word sense ambiguity revoked word sense ambiguity unresolved result error recovery process 
having unified arbitration process helps providing control interactions syntax semantics ensure consistent 
compere capable recovering types errors described program state change manner encounters error recovers 
example behaves way making errors recovering sequence sentences lead processor similar errors 
appears compere differs human sentence processors respect human processor appears aware difficulties encountered recovering certain errors 
order model awareness program appears having single process acting unified arbitrator definite advantage single process keep record additional decisions perform order recover error 
records change behavior program subsequent processing model psychological effects encountering recovering errors 
compere program compere computational model sentence understanding implemented tested variety sentences containing syntactic semantic ambiguities 
program written common lisp common lisp object system clos 
graphical user interface compere developed common lisp interface manager clim 
interface allows user run compere sentence typing new sentence selecting set sentences menu 
running compere displays words processed current syntactic output parse trees current semantic output role bindings shown intermediate role trees separate windows 
key feature interface allows user compere word 
allows clear graphical demonstration incremental processing capabilities garden path effects error recoveries 
course compere run graphical interface 
compere implementation portable computing platform supports common lisp 
program designed syntactic processing separated semantic processing 
setting single flag compere run syntactic parser semantic processor interprets directly lexical entries words depending syntactic parse input sentence 
feature allows see clearly functional independence syntax semantics compere 
compere program lines common lisp code including grammar small lexicon limited amount semantic knowledge 
lexicon extended include english words 
compere grammar categories nonterminals rules category covering variety phrase clause sentence structures including prepositional phrases relative clauses 
compere semantics intermediate roles rules role 
conceptual knowledge concepts hierarchies 
compere runs fairly fast second process word average 
resolving ambiguity refers operation selecting proper subset set possible interpretations ambiguity 
consequently term may refer operation switching back bigger set possible interpretations previously selected subset 
compere tested types sentences various syntactic constructs various combinations syntactic semantic ambiguities lexical structural 
compere integrated isaac story understanding system tested couple complete stories short science fiction stories ram 
addition compere partially integrated design comprehension system called ka mahesh peterson goel eiselt peterson mahesh goel tested sentences texts describing design simple physical devices 
chapter ix performance analysis evaluation wide range language processing strategies employed top scoring systems indicating natural language processing techniques provide viable foundation sophisticated text analysis 
evaluation needed produce detailed assessment relative merits specific technologies establish true performance limits automated information extraction 
lehnert sundheim chapter comparative analysis performance compere sentence processor 
compere shown produce desired interpretations variety sentences 
order show illustrate feasibility compere sentence processor small set sentences covers range phenomena sentence interpretation show compere fact adheres functional cognitive principles processing sentences 
perform comparative analyses compere models sentence interpretation 
provide formal analysis compere automaton 
view compere gives formal machinery enable talk empirical factors involved analysis performance sentence interpreter vis vis features design 
formal analysis elicit tradeoffs inherent choices design sentence interpreter enable compare performance different sentence interpreters attribute tradeoffs features design 
validation compere program issue evaluating claims thesis establish feasibility sentence processing model showing compere system described chapter implemented compere program fact interpret variety sentences producing desired behaviors 
purpose compere behaviors set interesting sentences analyze behaviors showing compere produced adhering functional cognitive constraints model outlined chapter 
simple sentences officers taught academy 
compere output simple sentence unambiguous prepositional adjunct shown 
officers academy 
sentence auxiliary verb ambiguity result lexical syntactic ambiguity word category auxiliary verb 
local ambiguity resolved det np vp officers taught academy prep pp det np teach agent officer location academy simple sentence 
word starts new prepositional phrase vp 
output sentence shown 
officers taught academy 
sentence similar previous local category ambiguity resolved favor auxiliary verb taught processed 
output shown 
examples academy assigned location role requiring verb meaning event optional location role 
may noted sentence passive voice compere able correctly assign appropriate thematic role subject noun 
possible intermediate roles shown figures chapter having explicitly perform passive transformation syntax 
relative clauses officers taught academy demanding 
sentence syntactic garden path reduced relative 
subcategory ambiguity taught simple past past participle 
result structural ambiguity main verb reduced relative structures 
compere resolves ambiguity favor main verb structure garden paths result recovers error det np vp officers academy prep pp det np agent officer location academy aux ambiguity sentence 
assign final structure shown 
intermediate interpretations shown intermediate results sentence 
officers taught academy demanding 
sentence differs previous explicit marker relative pronoun signal relative clause 
ambiguity error committed processing sentence 
relative clause sentences shows compere abilities deal non trivial syntax structures complex simple subject verb object structure 
compere correctly assign appropriate thematic roles subject noun main relative clauses 
compere output sentence shown 
officers taught academy demanding 
variation relative clause passive voice pushing role subject noun relative clause teach event experiencer role 
corresponding output structures shown 
officers taught men academy demanding 
variation relative clause transitive back active voice direct object left previous examples 
resulting structures shown 
det np vp officers academy prep pp det np aux taught teach experiencer officer location academy passive voice sentence 
courses taught academy demanding 
sentence looks similar sentence results different behaviors 
semantic bias resulting conceptual knowledge courses teaching regarding courses acts main verb interpretation 
semantic effect selectional preference compere directly pursues syntactic alternative reduced relative clause shown 
error result garden path avoided leading final interpretation 
officers man taught demanding 
illustrate abilities compere deal nuances syntax sentence shows subject np reduced relative clause gap direct object position 
words center embedded sentence level embedding 
compere correct interpretations shown 
bugs moved new lounge quickly 
sentence lexical semantic structural ambiguity 
structural ambiguity kind previous examples main verb reduced relative ambiguity sentence arising subcategory ambiguity moved 
lexical ambiguity semantic bugs mean insect microphone 
addition resolving resolves det np vp officers academy prep pp det np taught teach experiencer officer location academy vp demanding adv rel cl rel agent officer state demanding reduced relative garden path sentence 
ambiguity 
interaction seen interpretations shown figures 
compere selected main verb interpretation consequence selectional preferences teach deactivated microphone meaning bugs 
compere recovered error switching reduced relative interpretation reintroduced microphone meaning new thematic role bugs restrictive selectional constraint 
sentence serves show compere deal interactions syntactic semantic decisions sentence multiple ambiguities 
children taught academy 
simple sentence interesting anomaly 
selectional preference resulting semantic bias explain compere avoids garden path sentence 
selectional preference violated example 
syntax overrides semantic bias forces children agent teaching 
compere pursues reduced relative interpretation initially point semantic bias interpretation 
sentence prevailing syntactic structure unacceptable incomplete structure waiting see main verb 
forces compere carry error recovery reinterpret sentence discounting semantic bias 
assume semantic bias children agents teaching adult animate det np officers vp demanding adv rel cl vp academy prep pp det np taught rel agent officer state demanding rel pro teach agent officer location academy relative clause sentence 
structural ambiguities seen type structural ambiguity results underlying lexical ambiguity 
order cover compere abilities deal structural ambiguities general examples 
pp attachment ambiguities saw man horse 
sentence purely structural ambiguity pp horse modify np man verb saw 
example np attachment permissible compere selectional preferences conceptual knowledge see horse 
result compere resolves ambiguity produces interpretation shown 
entities teachers 
see chapter discussion psychological aspects compere behavior sentence ways dealing anomaly 
possible interpretation pp modifies node result horse agent seeing ignore possibility common example det np officers vp demanding adv rel cl vp academy prep pp det np taught rel agent officer state demanding rel pro aux teach experiencer officer location academy relative clause sentence 
saw man telescope 
similar previous sentence pp attachment ambiguity global sentence previous just local ambiguity horse seen 
consequence compere produces possible interpretations sentence instrument role theme role 
results shown 
intermediate roles shown provide unambiguous representation correspondence possible syntactic attachments role assignments 
phrase boundary ambiguities type structural ambiguity results phrase boundary ambiguity ambiguity words belong previous phrase start new phrase 
underlying lexical ambiguity 
illustrated examples adjective modify preceding verb noun direct object np 
compere deals ambiguity implicitly delaying decision word disambiguates situation 
delay implicit compere choose delaying delaying decision 
merely considers possibilities trying compare contrast 
include attachment resulting ambiguity global resolved compere null context processes sentences 
det np officers vp demanding adv rel cl vp taught rel agent officer state demanding rel pro det np academy prep pp det np men teach agent officer experiencer man location academy relative clause sentence 
attachments permissible current context 
doing turns adjective attached verb left corner new noun phrase 
choices lead immediately composition preceding phrase compere selection immediately 
information point selection 
compere simply pursues possibilities resolves ambiguity time necessary information available 
man demanding 
example local ambiguity resolved favor vp attachment noun adjective 
resulting interpretation shown 
man taught demanding courses 
case ambiguity resolved favor np attachment adjective vp attachment removed 
resulting output shown 
examples serve show compere repertoire abilities deal variety ambiguities interactions 
early commitments recover errors switch repair interpretations delay decision pursue multiple interpretations parallel 
det np vp academy prep pp det np taught rel cl rel courses teach theme course location academy reduced relative semantic bias 
multiple ambiguities challenge large hold water 
final example consider sentence multiple ambiguities 
word way lexical category ambiguity noun auxiliary verb 
similarly hold noun verb 
sequence ambiguous words results plethora syntactic possibilities 
amazingly ambiguities local correct interpretation compere produces 
shown 
claims revisited summarize briefly illustrations show compere meets claims demonstrating theory sentence interpretation feasible set functional cognitive constraints 
noted reason believe compere theory applicable set sentences 
discuss possible large noun adjective 
ignore additional possibility illustration 
det np vp academy prep pp det np taught vp demanding adv rel cl rel courses agent course state demanding teach theme course location academy complete sentence semantic bias 
claims state briefly breadth compere coverage sentences terms syntax semantics 
syntactic coverage sentences shown show variety syntactic features relative clauses sentences prepositional phrases sentences passive forms sentences category ambiguities aux ambiguities sentences structural ambiguities main reduced relative clause ambiguities sentences pp attachment ambiguities sentences phrase boundary ambiguities sentences transitive intransitive verb structures sentences 
possible compere program analyze syntax sentences produce parse trees shown say representation processing method proposed syntactic analysis large subset english sentences 
compere analyzes syntax sentences resolves syntactic ambiguities recover errors correct syntactic structures built switching retained interpretation sentences repairing structure sentence 
det np vp officers taught vp demanding adv rel cl rel agent officer state demanding det np man teach agent man experiencer officer center embedded sentence 
semantic coverage sentences show compere ability assign appropriate thematic roles variety sentences 
particular examples show effects syntactic structure sentences word meanings selectional preferences due sentences word sentences passive voice sentences embedded clauses gaps sentences assignment thematic roles 
examples show part played kinds information role assignment 
roles said emerge kinds information span structure meaning spectrum starting surface syntactic form semantic role structures conceptual representations 
roles played parts sentence events described sentence start form primitive roles np role originating lexical categories items emerge new kind information brings evidence specialized roles resulting thematic roles shown figures 
consider claims compere state compere program meets claim providing wide syntactic semantic coverage noted 
claim integrated processing independence compere separate representations syntactic semantic knowledge applied independently 
integrated processor combines types det np vp prep pp det np bugs moved lounge new move agent insect bug location lounge resolving structural ambiguity resolves lexical ambiguity 
knowledge soon 
illustrated examples means immediate effects syntactic decisions semantic decisions vice versa 
sentences show syntax helps semantic processing sentences especially sentences semantic constraints help resolve syntactic ambiguities especially sentences 
program process sentences produce correct output shown sentence incrementally word combining syntactic semantic knowledge represented independently 
program demonstrated compere meets claim sentence processor integrated processor complying integrated processing principle retaining functional independence different types knowledge 
claim functional independence know syntactic semantic knowledge fact functionally independent compere 
show applied matter available particular situation 
easily done compere program simple lesions performed setting software switches determine type knowledge corresponding processing applied 
compere ability disregard type knowledge situation requires 
instance recovering error sentence compere deliberately discounts semantic constraint det np vp prep pp det np vp adv rel cl rel bugs moved new lounge quickly find theme insect bug microphone bug move theme insect bug microphone bug location lounge recovering garden path lexical ambiguity 
making children subject taught 
clear demonstration functional independence types knowledge 
compere program designed temporarily kinds knowledge unavailable see kinds knowledge applied best decisions available knowledge 
may noted functional independence new claim theory 
simply maintained model 
claim synchronizing syntactic semantic compositions claim validated showing synchronizing points syntactic semantic compositions performed minimize total cost sentence interpretation 
done section formal analysis performance sentence interpreters 
det np vp taught det np children pp prep academy teach agent children location academy syntax violates semantic bias 
claim error recovery syntactic error recovery structural ambiguity resolution exemplified sentence 
example shows compere structural changes necessary syntactic error recovery corresponding changes semantics incremental interpretations internally consistent time 
sentence shows compere capable recovering semantic errors 
decision deactivate microphone meanings error case compere recovered error brought deactivated meaning back interpretation 
stated earlier example structural ambiguity leads error recovery syntax similar sentence 
compere able carry error recoveries account interactions 
claim syntax semantics interaction arbitrator compere employs single arbitrating algorithm control interaction syntax semantics resolve conflicts preferences 
examples show architecture supports interaction rich enable immediate influence semantic decisions syntactic processing vice versa provides sufficient control interaction account error recovery phenomena illustrated sentences 
evidence compere arbitration architecture sufficient model syntax semantics interaction sentence interpretation section argue np vp det np pro saw man see agent speaker theme man theme horse prep pp det np horse unambiguous pp attachment 
necessity architecture comparing possible architectures light examples 
may emphasized claims form coherent set define compere model conceived 
compere program needs engineered usable software product example ways enumerated chapter believe groundwork laid enable easily carry engineering scale model 
comparative analysis architectures section reconsider different architectures described chapter show produce behaviors saw examples 
sequential architectures fairly obvious sequential architectures produce outputs shown examples especially intermediate outputs considered 
example sequential syntax architecture reproduced chapter produce incremental outputs sentences 
grain size interaction reduced say word word level cascaded architecture interaction way 
np vp det np pro saw man prep pp det np telescope see agent speaker theme man theme telescope instrument telescope pp attachment ambiguity 
instance sequential syntax model show effects semantic decisions syntactic processing vice versa sequential semantics model 
way transfer syntactic decision making second module semantics transfer decision making semantics third module 
doing processing second module effect decisions originally module pure sequential model 
case module decisions start looking arbitrator power transferred module 
semantics architecture sequential semantics architecture able produce outputs just exhaustive search algorithm behaviors 
semantics approach parser shown lytinen attempts semantic compositions early defers application syntactic knowledge best semantic connection chosen 
result explores syntactically impossible connections 
example simple sentence passive voice sentence semantics sequential parser consider possibility subject noun agent verb realize interpretation licensed syntax 
searching possible semantic connections arrives correct interpretation shown 
furthermore complex examples sentence clear semantics parser det np vp man demanding agent man state demanding attachment ambiguity 
produce garden path behavior 
choosing best semantic connection interpreted choose connection resolves lexical semantic ambiguities guarantee strong garden path effect syntactic preferences seen sentences example word meanings compatible main clause reduced relative interpretation 
clear semantics driven approach show syntax driven error detection recovery effects seen sentences 
consider sentence instance 
semantics algorithm error reduced relative interpretation detected corrected sentence 
direct result role syntax act verifier 
concerned compere suffers similar weakness say semantics acting verifier compere 
valid criticism reasons 
semantics compere propose connections independently 
opportunity syntax fails propose connections semantics lacking guidance syntax propose unacceptable connections lead semantics approach analyzed 
second evidence show real conflict syntactic semantic preferences syntax dominates overrides semantics 
evidence comes psychological experiments stowe purely functional reasoning lines chapter 
functional point view natural language allow communicate new semantic det np vp man demanding np courses taught teach agent man theme course local phrase boundary ambiguity 
connections word meanings order convey new ideas 
consequence natural language provide mechanism syntax mark sentence prior knowledge preferences semantic connections overridden new meaning conveyed receiver crain steedman 
hand syntax natural language presumably covers construct may need convey known new meaning functional motivation semantics override syntax 
sequential architecture syntax semantics explores space possible interpretations dictated source information syntax semantics 
syntactic possibilities semantically acceptable vice versa sequential parsers waste lot effort exploring alternatives unacceptable knowledge consider processing 
compere hand considers available knowledge arbitrating say ungrammatical sentences non sentences examples want semantics override syntax 
sentences ungrammatical definition syntactically unacceptable 
doubt syntactically acceptable sentence intended meaning involves semantic connection incompatible accepted syntactic interpretation 
implausible example due woods personal communication saw man telescope asked find intended meaning requires pp telescope modify verb saw relative clause asked find modify object noun man questionable usage entails syntactic links criss crossing parse tree permitted english 
det np vp np large hold water det aux hold agent theme water multiple lexical category ambiguities 
decision 
integrated architectures integrated architectures trouble accounting variety syntactic structures variety relative clauses shown sentences 
particular unable show effect requires processor separate disregard type knowledge sentence 
uncontrolled parallel architectures uncontrolled parallel architecture including translator blackboard architecture chapter difficulties encountered desired behavior requires control interaction syntax semantics 
control may needed ensure consistency syntactic semantic interpretations error recovery sentences 
control necessary arbitrate type information preference sentence 
see syntax semantics arranged sequentially order ii integrated completely integrating knowledge representations priori iii run parallel iv arbitrator controlling interactions produce syntax semantics pragmatics input sequential architecture 
right interpretation right behavior producing intermediate outputs 
turn third part chapter formal analysis sentence processor automaton address claim 
formal analysis compere previous analyses parsers push automata various kinds johnson laird resnik aho ullman 
formal models provide certain measures stack size enable compare formally evaluate different parsing algorithms 
feature models measures stack size take syntactic complexity language account regard meaning complexity associated ambiguities meanings 
worse analyses consider ambiguities kind 
syntactic complexity introduced lexical structural syntactic ambiguities ambiguities grammar people refer 
order perform meaningful evaluation compere desire formal analysis takes syntactic complexity semantic complexity account defining measure yardstick grade different sentence interpreters parsers 
semantic complexity mean factors costs lexical semantic ambiguities holding individual meanings composed 
goal really define measure ambiguity sentence 
easier conceive measure global syntactic ambiguities terms size parse forest goal include semantic ambiguities particular local ambiguities sentence 
order account local ambiguities metric compute costs word sentence accumulate local amounts manner determine measure ambiguity sentence 
local ambiguities result order parsing operations performed cost metric show different amounts different algorithms letting compare evaluate algorithms 
may noted metric developed direct measure aspect computation computational complexity terms number primitive operations find possible semantic connections concepts active memory possible connections choose best connection find syntactic rules semantic actions connection choose rule syntactic pattern satisfied rule remove connection list possible connections select rule indexing syntactic patterns execute rule interaction syntax semantics parser 
amount computational resources required working memory processing time 
simply measure increases increase number lexical structural syntactic semantic local global ambiguities 
serves evaluating comparing sentence interpreters factors type information difference amount local ambiguity interpreter difference measure 
desired measure performance sentence interpretation take costs account ffl cost keeping parts syntactic structure sentence accessed point 
ffl cost lexical syntactic ambiguities category ambiguities 
ffl cost structural syntactic ambiguities care packing sharing partial structures sentence interpreter pursuing multiple syntactic interpretations parallel 
may interactive effects costs listed total cost multiple ambiguities sum costs listed 
analysis interactive effects scope dissertation 
possible connections find possible syntactic connections trees parse forest arbitrate choose best connection find semantic connections correspond syntactic connections trees find semantic connections trees connection choose best semantic connection delay connection connection interaction syntax semantics compere 
ffl cost holding individual word meanings composed meanings cost holding sentence meanings meanings embedded clauses 
ffl difference cost holding individual meanings holding composite meaning meaning role filler 
ffl cost lexical semantic ambiguities 
ffl cost structural semantic ambiguities cost holding multiple role assignments role filler composed meaning 
ffl cost making holding expectations 
intuitions developing cost measure helps think syntactic parse tree set nodes pipes 
link added nodes parse tree adding pipe meanings flow 
meaning lower node farther root tree flows analysis assume meaning compositions result unambiguous role assignment 
ignore cost holding role assignments cost structural semantic ambiguities 
pipe upper node closer root soon meaning lower node pipe available 
meanings flow pipes compose soon arrive node 
happen instance meaning left child waiting parent node meaning right child arrives parent node 
view parse trees define meanings compose arrive sentence node roots embedded clauses 
viewing parse trees light tells exactly need hold parts parse trees need 
need hold pipe precisely times meaning flow time 
throw away pipes 
consequently throw away syntactic nodes currently roots pipes connected 
corollary fact nodes pipes right hand boundary tree retained optional adjuncts added right tree require meanings flow nodes right hand boundary 
piece intuition allows model cost lexical ambiguities just way syntactic complexity modeled terms size parse forest size stack automaton 
view sentence set meanings variety linguistic markers including word order inflections closed class words inform interpreter intended relationships meanings 
view sentence interpreter applying grammar linguistic markers map configuration meanings markers call sentence representation relationships meanings 
view meanings words terminals grammar various inflected marked forms words non terminals grammar 
extend notion ambiguous words treat non terminals grammar 
lexical syntactic lexical semantic ambiguity sentence non terminal terminal unique meaning expanded get terminals 
expansion allow represent cost lexical semantic ambiguities terms size parse forest 
intuition add meaning set stacks automaton include size set total size parse forest including trees introduced category ambiguous word total cost metric 
mentioned notion lexical ambiguities nonterminals grammar meant purposes performance analysis viewed going sentence interpretation 
compere automaton sentence interpreter described formally push automaton enhanced graph structured stack 
graph structured stack stack elements stack connected set graph structures forming simple linear stack elements 
automaton graph structured stack referred main stack elements partial parse trees 
nodes right hand boundaries trees elements stack 
right hand boundary right hand boundary tree excluding rightmost leaf link leaf parent 
graph structured stack partitioning sequence right hand boundaries parse forest entire right hand boundary tree top stack currently accessible just root tree element top stack simple linear stack 
graph structured stack enhanced augmentations 
second stack expectations 
expectation stack linear stack syntactic nodes predicted current time 
nodes stack pointers nodes main stack 
expectation stack enables automaton model prediction operations account cost 
automaton third stack meanings 
really set stack elements may accessed time 
meaning set list meanings meaning compositions 
elements list pointers nodes main stack 
meaning list enables automaton model semantics minimally accounting costs word meanings ambiguities composition operations 
bottom stack top stack graph structured main stack expectation stack meaning set finite state network operator application sentence interpretation automaton 
operations automaton automaton fundamental operations 
push expectation add expected node expectation stack 
involves adding pointers node main stack generated syntactic prediction 
prediction satisfied expected node right sibling expecting node currently main stack 

pop expectation remove expected node expectation stack 
operation expectation longer valid sentence took different turn expected may followed push tree operation adds popped node main stack expected unit seen sentence 

push tree add tree may just root node top stack 
operation carried category word processed 
right hand boundary tree new accessible part stack 

pop compose trees remove top stack compose tree new top stack 
done adding link root popped tree nodes right hand boundary tree new top stack 
modified extended right hand boundary new top stack accessible part stack 

pop tree remove tree main stack discard 
done tree longer supported word alternative tree span sentence supported left context word 

bring node link right hand boundary implicit operation marks previously unmarked nodes links announce right hand boundary tree accessible tree top stack 
performed result push tree pop compose trees operation 

remove node link right hand boundary implicit operation inverse bring operation 
performed consequence push tree pop compose trees operation 

add meaning add meaning meaning set 
new meaning links nodes main stack 
nodes may right hand boundaries syntactic trees main stack element meaning embedded clause sentence 
contents set time constitute current meaning part sentence processed automaton 
meaning pushed set stays composed meaning thrown inappropriate meaning 

delete compose meanings remove meaning meaning set compose meaning set continues member set composition 
meaning deleted assumed accessible second meaning longer direct member meaning set 

delete meaning remove meaning meaning set feasible meaning sentence discard 
description sentence interpretation automaton specified stack representations fundamental operations stacks specify finite state network determines operation performed 
aspect different deleted meaning retained compere error recovery 
automaton model error recovery noted section assumptions 
sentence interpretation models differ 
complete specification preconditions operation constitute specification algorithms sentence interpreter 
table specifies preconditions form brief summaries performing operations design choices embodied compere 
models similar preconditions 
table operator preconditions compere 
operator preconditions ffl push expectation accessible node top main stack definite prediction expected unit 
ffl pop expectation expected unit left corner child placed top main stack 
ffl push tree category new word left corner tree top main stack 
ffl pop compose trees topmost trees main stack composed tree going child head complete 
ffl pop tree tree longer supported current word alternative tree span sentence supported left context current word 
ffl bring right hand boundary node link happens come new right hand boundary tree main stack 
ffl remove right hand boundary node link longer right hand boundary tree main stack 
ffl add meaning lexical meaning word 
ffl delete compose meanings corresponding trees main stack just composed 
ffl delete meaning meaning appropriate corresponding tree main stack alternative meaning appropriate 
automaton described model processes error recovery sentence interpretation 
instance elements retained interpreter syntactic semantic alternatives part stacks 
cost error recovery operations considered wonder possible preconditions certain operators attempt operations continually 
example model try composition operation time pairs elements 
design conceivable lead uncontrolled interaction model described chapter 
analysis 
simplification justified observation error recovery costs common models comparing factored analysis 
related note semantic roles explicitly represented automaton stacks 
simply assumed meanings composed suitable unambiguous role meaning fills 
additional cost associated role binding taken account analysis 
mentioned earlier analysis ignores cost structural semantic ambiguities 
reader cautioned formal analysis compere automaton taken analysis tool 
implication compere runs way automaton human sentence interpreter automaton kind 
simple cost metric attempt cost metric may simply add number separate meanings held word sentence 
measure clearly shows advantage making early commitment delaying semantic composition account cost syntactic processing cost structural ambiguities especially local structural ambiguities 
instance include cost prediction reduction done early parsing example 
cost metric cost metric processing sentence particular sentence interpretation algorithm determined adding cost word 
cost word sum values ffl size parse forest size graph structured main stack 
ffl number expected syntactic units size expectation stack 
ffl number meaning compositions size meaning set 
computing size parse forest size parse forest defined sum size tree forest 
size tree sum number nodes right hand boundary tree excluding leaf node root plus number links called pipes right hand boundary excluding link excluded leaf node meanings flow 
reason excluding leaf node meaning leaf node parent node root flowed parent node 
new word gets added parent added parent accessing leaf node link excluded cost see assumptions 
exclude links meanings flowed meanings supposed accessible child parent ends link 
obvious fact node parse tree points current meaning 
consider simple sentence example boy drove car 
table cost metric calculation example 
word stack size expectation cost meanings cost total cost boy drove car 
total shows contents augmented graph structured stack word sentence 
table shows corresponding cost calculations word hslc algorithm compere operator preconditions shown table 
characterization sentence interpreter automaton enables cost metric defined yardstick compare performance various parsing algorithms various architectural configurations syntactic semantic processing 
describe different sentence interpreter terms fundamental operations factor differences different models terms preconditions perform operations analyze cost metric changes various manipulations preconditions 
analysis lead tradeoffs inherent deciding perform various operations 
tradeoffs package empirical factors depend distribution various kinds ambiguities input sentences 
performing formal analysis able characterize classes input texts terms empirical factors particular sentence interpreter performs 
cost metric assumptions known metric previously proposed attempts count cost syntactic semantic ambiguities 
analysis attempted ambitious number assumptions drastic 
assumptions 
units cost 
syntactic node syntactic link meaning element expected node unit cost cost metric 

composite meaning size complexity unit cost cost metric 
composing meanings reduces cost holding 

meanings flow syntactic links soon links established 
meanings modifiers prefix head phrase waiting parent node combined meaning head prefix modifiers 
need count cost rightmost leaf nodes prefix size parse forest 
reason right hand boundaries excluding leaf counted cost metric 

cost syntactic nodes potentially acquire child root tree child node tree included det np vp word graph structured stack expectations meanings boy drove car det np vp det np vp det np det np vp det np det np boy drive drive drive contents stack example 
metric 
entire right hand boundary excluding leaf compute cost nodes boundary may modified particular sentence 

parts syntactic trees right hand boundary may thrown away included cost trees 
left branches participate error recovery processes need retained 

syntactic links meanings flow time retained counted cost metric 
means links righthand boundaries need included cost meanings heads children nodes flowed 

subtree part different trees counted assuming stack exploits packing sharing 

head parent recursively parent head parent links meaning element head 
multiple links enable get meaning part sentence having keep syntactic trees 
allows exclude cost links nodes meanings flowed 

cost prediction 
cost simply number expected syntactic nodes long valid expectations 

cost links elements main stack expectation stack meaning set 

multiple word meanings cost units meanings meanings composed meanings 

multiple unresolved meanings cost composed meanings 
words composite meanings cost just unit ambiguities role fillers 

sufficient count costs processing word counting costs operation processing word change balance comparative analyses different models 

need consider costs error recovery retention alternatives 
costs common models assuming recover errors affect analyses 

certain closed class elements carry meaning added cost metric 
example pp just preposition processed sufficient know pp 
interpreter know particular preposition generated pp right attachment pp 
identity preposition meaning propagated parent pp unit add additional unit cost metric 
similar costs accounted analysis takes morphological breakdown word inflections prefixes account 
cost metric validity order illustrate validity cost metric outlined observe cost metric ffl increases increase lexical category ambiguities 
ffl increases increase lexical semantic ambiguities 
ffl increases increase structural syntactic ambiguities 
ffl shows orders magnitude increase center embedded sentences 
changed add costs alternative meanings role fillers significantly affecting analyses 
ffl increases linearly length intermediate clauses 
ffl successive word increase monotonically position word sentence 
may noted cost metric increases linearly length right branching construct 
metric fault automaton modified truncate right boundary small finite length leaf upwards 
justified number course hard introduce number automaton 
number empirical parameter constant 
cost metric increases lexical category ambiguities new node introduced category word 
category ambiguities may eliminated immediately predictions left context category considered pursued cases adding size parse forest cost metric 
lexical semantic ambiguities introduce meanings added meaning set eliminated immediately semantic conceptual knowledge 
structural syntactic ambiguities pp attachment reduced relative clause ambiguities introduce possible configurations trees parse forest 
packing sharing avoid duplicate subtrees structural syntactic ambiguities introduce additional links adding cost metric 
example sentences types ambiguities analyzed showing associated costs 
cost word non zero cost metric increases increase length sentence 
increase measure directly proportional length sentence 
related note cost word increase monotonically 
decreases word drastically syntactic semantic compositions reducing size right hand boundaries trees reducing number elements meaning set see examples illustrations 
surprising metric really measure apparent size input sentence truly cumulative measure amount ambiguities local global sentence vary directly number words sentence 
cost center embedding consider simple sentence boy drove car 
cost sentence shown table 
successively introduce center embeddings sentence determine cost measures embedding see cost metric defined reflects degree difficulty experienced human sentence interpreter dealing sentences 
table shows performance analysis hslc center embedded sentence boy girl loved drove car 
introduce second center embedding boy girl teacher loved drove car 
cost metric sentence hslc algorithm increases enormously shown table 
cost went simple sentence center embedding center embeddings 
rate increase measured average cost word sentence table cost center embedding 
algorithm 
hslc word boy girl loved drove car 
total example seen length sentence extended comparable amounts right left branching constructs see examples 
table shows costs head driven bottom algorithms 
cost head driven algorithm interestingly drastic hslc 
increase costs head driven parser center embedding introduced sentence drastic hslc algorithm 
increases simple sentence see table sentence single center embedding shown center embeddings table 
cost parsing decisions ready look analyses performance different models sentence interpretation variety sentences 
restrict analyses models share features ffl produce incremental interpretations word 
ffl incremental interaction syntax semantics 
ffl output thematic role assignments sentence 
ffl build syntactic structures 
models leave sentence processing decisions empirical factors availability right conceptual knowledge example performance analyses chapter assumed grammar covers just sentence analyzed 
instance analyzing simple sentence consider possibility relative clause adjunct noun phrase 
difference hslc head driven algorithms compose words head phrase 
difference bottom parsers depending produce multiple interpretations parallel chart parsers wait word confirm producing composite structure 
case considered grammar broader coverage performance algorithms worse 
form hypothesis observation correlation cost metric kind capacity human sentence interpreter 
hypothesis argue head driven parsing candidate human parser show enormous costs center embedded sentences known cause human sentence interpreter break 
table cost center embeddings 
algorithm 
hslc head driven boy girl teacher loved drove car 
total conceptual information processors birnbaum selfridge ca amenable formal analysis kind described 
ffl perform conceptual inferences extra linguistic reasoning 
ffl specified algorithm control processing 
models computationally specified example merely say happens spreading activation network analyzed outlined 
ffl assume powerful oracle nondeterministically selects right interpretation point sentence processing 
addition analysis include aspects models compere deal 
include phonetic morphological analysis discourse context analyses effects 
cost metric developed extended difficulty include cost analysis 
costs sentence processors built incorporating different parsing algorithms parsing spectrum eagerness incremental syntax semantics architectures compere 
idea show examples lay groundwork analyses tradeoffs performing operations automaton earlier compere performs 
certain extremes parsing spectrum completely top algorithm syntax architecture incremental semantic interaction analyzed show viable 
shall deal cases examples 
performance analysis simple sentences tables show word word final costs processing sample sentences left corner parsing algorithms hslc pure bottom head driven models 
actual contents stack case shown due extreme length details 
table shows performance analysis algorithms process simple subject verb object sentence 
comparison bottom parser unfair algorithm ones analyzed produce incremental interpretations apart non incremental significant lengths times 
instance models compose meanings subject noun verb immediately verb bottom model waits sentence 
simple sentence ambiguity analyzed head driven parser comes best unacceptable bottom parser 
main reason increased cost left corner parsers cost making predictions 
left corner projection consequent generation expectations mere burden sentence ambiguity prediction help eliminate 
may noted suffers accumulates costs prediction delays composition sentence bottom left corner parsers 
difference metric hslc mainly due eager linking determiner vp object np object noun processed 
hold extra pipe noun processed 
table performance comparison simple sentence 
algorithm 
hslc head driven boy drove car 
total performance analysis pp attachment ambiguity table shows performance various algorithms sentence pp attachment ambiguity 
ambiguity structural syntactic ambiguity regarding pp attached object np vp 
local ambiguity presumably conceptual knowledge disambiguates sentence favor np attachment 
hslc comes best left corner parsers difference hslc lc parsers marked example 
interesting note bottom parsing produce incremental interpretations waits pp compose subject noun verb meanings turns sentence ambiguity kinds dealing 
referential ambiguity sentence 
expensive right branching sentence 
head driven parsing cost 
previous example simple sentence prediction lc parsers buy ambiguity prefix part head phrase 
analysis assumed head pp noun np 
take preposition head pp head driven algorithm behave trying attach pp immediately preposition 
fact head driven algorithm expensive hslc preposition considered head pp 
analysis consider category ambiguity word saw noun verb 
assumed verb 
done primarily exclude additional factors focus tradeoffs eager versus late attachments adjunct phrase 
considered category ambiguity saw left corner parsers fare better prediction verb phrase left corner projection processing word saw 
may noted ignored apparent lexical semantic ambiguity verb saw seeing cutting saw 
ambiguity arises subcategory ambiguity word past tense form tense form second person singular plural third person plural third person singular algorithms agreement checking mechanisms disambiguate easily case 
table performance comparison pp attachment ambiguity 
algorithm 
hslc head driven boy saw man horse 
total analysis prepositional phrase attachment attachment unambiguous performance analysis looks shown table 
seen table hslc better attachment unambiguous 
reason higher cost syntactic attachment pp vp early immediately preposition meanings flow links hold links longer 
hslc better exploiting head head driven algorithm 
table performance comparison unambiguous pp attachment 
algorithm 
hslc head driven girl went lounge 
total performance analysis modifiers prefix analyses appears head driven parser provides best performance models considered 
picture changes consider effect modifiers prefix head 
modifiers left head left corner parsers compose immediately left corner projection mechanism reduce costs 
see example hslc better head driven parser left corner parsers exploiting eagerness left corner mechanism head driven mechanism 
table shows performance analysis sentence modifiers prefix subject object noun phrases 
example shows modifying meanings appear left head cost head driven algorithm increases sharply process semantics modifiers compose meanings composed head 
hslc employs left corner projection compose modifiers immediately yield best performance algorithms considered 
analysis assumed bracketing sentence light green parrot uttered exceptionally long original sentence 
words meanings light green composed noun parrot seen meanings exceptionally long composed immediately resulting composite meaning combine meaning original 
meaning original held separately noun sentence processed 
modifiers new modifier composed previous ones immediately difference performance hslc head driven parser greater head driven algorithm performing worse 
contrast example previous ones shows tradeoff cost prediction left corner parsers cost predicting delaying semantic processing prefix modifiers head driven parser 
obvious numbers tables taken seriously say select algorithm numbers underlying cost metric provide language analyzing expressing tradeoffs timing table performance comparison effect modifiers prefix 
algorithm 
hslc head driven light green parrot uttered exceptionally long original sentence 
total interactions syntactic semantic processing sentence interpretation 
help illustrate advantages hslc offer combining best left corner head driven parsers 
table highlights places head driven parsing loses hslc 
precisely places left corner projection enables early semantic composition head reduce cost 
similar situation occurs noun groups occur frequently certain kinds technical texts 
example taken local network posting colloquium shows extreme examples difficult noun phrases highlighted architecture design decision support systems command control software design support represents new interesting aspect human machine systems engineering problem 
presentation describe architecture design decision support directed collecting disseminating command control software design knowledge facilitating construction plausible solutions design problems 
goal research effort formulate demonstrate evaluate concepts assist designer unfamiliar commonly occurring domain specific design situations 
consider noun group human machine systems engineering problem example 
left corner projection enables incremental composition noun meanings 
head driven parsing waits head noun problem performing composition 
additional complexity analyzing example nouns head noun seen noun modifier head noun 
parsers assume noun head go ahead compositions incrementally recover new noun encountered simply wait phrase ends doubt 
issue account performance analysis just phrase shown table kinds parsers 
parser left corner parser hslc projection talk series cognitive science georgia tech john morris july 
prediction overheads 
parser parser left corner projection prediction head driven parser 
parser pure bottom parser waits composition 
difference incremental assuming noun replaces previous head phrase assumes noun head certain nouns 
seen table measure remains constant noun parsers keeps increasing parser keeps waiting noun making composition 
result eager parser accumulates costs higher parser heavy penalty early projection np prediction vp 
head driven parsers may implemented parser parser analysis shows real benefits word word incrementality costs related decisions design parser 
table performance comparison complex noun group 
algorithm 
word human machine systems engineering problem 
total may noted purely left branching construct hand pose problem algorithms analyzed 
instance example may contrasted left branching chain cousin aunt dog tail noun head np 
word head rightmost unit phrase left branching construct parsers tables compose immediately resulting cost metric algorithm discounting additional cost left corner parsers incur repeatedly trying project np repeatedly expecting see vp 
performance analysis complex example final example consider sentence lexical structural ambiguities leads garden path subsequent error recovery 
table shows performance analysis sentence 
head driven parser performs little better hslc cost prediction hslc put sentence modifiers prefix sentence 
small differences numbers taken literally performance metric attributes equal costs syntactic nodes links meaning units 
head driven parsing reduces cost creating syntactic nodes links early hslc help reduce number separate meanings composed 
hand seen sentence complexity increases difference performance measures algorithms highly ones bottom parsers grows enormously 
consistently higher slightly higher cost hslc advantage hslc offers delaying compositions head significant apparent tables shown 
metric attributes significant portion cost merely holding intermediate interpretations benign situations ambiguities 
difference cost hslc comes ambiguities attachment hslc avoids delaying attachment time semantic conceptual information help resolve 
ambiguities higher degrees attachments possible ambiguity suffer greater amounts 
table performance comparison complex example 
algorithm 
hslc head driven bugs moved new lounge quickly 
total performance tradeoffs sentence processing formal analysis formal analyses cost tradeoffs depending certain operations automaton performed 
particular concern important scenarios 
costs benefits prediction consequences performing push expectation operations operations enable useful pop tree operations 
costs benefits eagerness lack effects performing pop trees different announce points phrase immediately left corner immediately head phrase 
costs benefits projection effects push tree operation parent node left corner consequent pop compose trees operations 
tradeoffs prediction simplest tradeoff prediction 
costs significant amounts hold prediction syntactic unit 
having prediction help eliminate choices ambiguity resulting saving ambiguity encountered 
analysis assume prediction strategy similar compere required units predicted 
optional units predicted prediction expensive leading excessive cost measures 
cost prediction unit predicted unit added expectation stack 
cost adds measure long predicted unit stays expectation stack 
cost prediction equal number words place prediction generated including word place place satisfied rejected thrown expectation stack 
example prediction noun generated determiner noun phrase 
prediction stay intermediate adjectives allowed modifiers determiner noun 
cost prediction case determiner plus modifier words noun 
suppose word meets prediction category ambiguity 
prediction helps eliminate predicted category 
helps avoid having add meanings eliminated categories meaning set 
reduction cost resulting prediction sum number categories word minus plus total number meanings rejected categories word 
example sentence large cost predicting noun determiner units corresponding benefit units auxiliary category verb category meaning verb 
fact benefit higher due elimination subsequent costs pursuing alternatives rejected prediction 
instance auxiliary category pursued leads expectation verb 
benefits prediction rejected categories lead syntactic structure far complex leads bigger parse forests 
example prediction verb phrase subject noun phrase sentence 
help eliminate reduced relative clause structure verb subcategory ambiguity simple past tense past participle forms complex simple main verb structure see sentences chapter 
cost prediction wasted entire phrase leading prediction required child rejected 
required units predicted predictions met sentence grammatical 
prediction met sentence due intervening clauses cost prediction correspondingly higher 
example argue need explicit prediction 
left context eliminate auxiliary verb categories sentence parser predictions 
argument hold case predictions left context unambiguously select single category ambiguous word 
example reduced relative clause ambiguity mentioned np left context followed main verb phrase reduced relative clause main verb phrase 
parser hslc generates prediction main verb knowledge required complete structure 
prediction eliminate expensive reduced relative structure main verb assuming large adjective noun structure rejected conceptual constraints 
benefits prediction really come knowledge required optional units 
tradeoffs left corner projection projecting parent left corner enables sentence interpreter compose words prefix syntactically semantically waiting head 
cost projecting cost creating parent node early 
benefits projection reduction cost resulting immediate composition words prefix left corner head 
left corner head meanings wait till head strategy projected parent predicted head composite meanings 
projection prediction prefix processing left corner tradeoffs left corner projection prediction 
words head phrase 
words may meanings meaning lexical semantic ambiguities 
may lexical category ambiguities ignore complexity 
simply assume words average meanings 
cost left corner projection parent unit projected early held words head phrase head complete 
total cost metric head projection immediate discussed category ambiguities lead additional costs predictions alternative trees parse forest eliminated immediate composition 
composition theta 
composition performed total cost theta theta simple analysis shows expressions equal 
low close cost lesser projection 
general appears cost projection significantly projection incremental composition 
analysis simple ignores factors 
consider paragraphs 
reason project left corner able predict required constituents parent 
noted prediction adds cost reduce cost due immediate disambiguation predicted categories 
prediction combined projection cost projection prediction turns theta assuming predicted node added expectation stack left corner satisfied head words 
expression equal greater cost prediction projection cost incremental composition 
fact projection prediction expensive delaying composition value similarly equals value third prefix words having meaning prediction projection expensive option equals prediction projection beneficial equals just incremental alternative expensive unit value analysis consider savings prediction possible way immediate resolution category ambiguities 
benefits considered incremental option profitable 
analysis consider additional costs projection certain types ambiguities grammar 
left corner ambiguous determining parent parent phrase projected left corner prediction projected phrases 
happens projection prediction turn expensive analysis showed 
tradeoffs eager reduction performance tradeoffs performing pop compose trees operation early late 
consider different situations terms announce points operation performed sentence interpreting automaton 
announce point may left corner may equal head hslc head driven parsers bottom parsers 
shall analyze costs benefits having announce point head general head head 
announce point left corner equal attachment attempted head shown special cases left corner head 
eager attachment left corner result additional cost amount equal number different attachments possible multiplied length prefix phrase 
new links number possible attachments added eagerly announce point 
head seen links need retained head processed length prefix phrase assumes meanings composed previous ones meanings average need hold 
attachment attachment projected parent left corner expected head eager attachment announce point additional cost number attachments 
tradeoffs eager reduction cost reduction left corner 
meaning head flow links appropriate 
true knowledge disambiguates attachment head seen example knowledge particular preposition pp modifies verb object noun matter head noun np pp 
announce point head get minimal costs seen examples compere chapter 
announce point pushed head additional costs accrue sources delayed composition head meanings prefix meanings delayed composition postfix adjunct argument meanings head meaning 
shown attaching immediately head processed composing meaning head meanings prefix phrases reduce cost number meanings prefix phrases 
meanings considered part composite meaning arising head counted separately cost metric 
additional savings result right hand boundary resulting attachment shorter prevailing right hand boundary point 
similarly shows situation postfix adjunct composed immediately head 
delay result additional cost equal number meanings postfix phrase 
attached immediately meanings composed head meaning reducing cost 
head left corner head meaning meaning meaning meaning cost attachment cost attachment additional cost delayed composition prefix announce point head cost higher 
tradeoffs eager reduction cost delayed head composition 
empirical factors analysis identify certain empirical factors affect performance sentence interpreters cost metric 

average number category ambiguities word text average lexicon 

average number meanings category word text 

average length intermediate modifiers left corner predicted required unit length prefix 

percentage times head left corner phrase 

percentage times head rightmost child phrase 

average number phrases unit left corner grammar 

percentage postfix children unambiguously predicted grammar 

percentage times ambiguous attachment disambiguated just left corner parts prefix head seen 
head left corner meaning meaning meaning cost attachment head head meaning cost attachment additional cost delayed attachment postfix units announce point head cost higher 
tradeoffs eager reduction cost delayed postfix composition 
formal analysis cost metric provide framework carrying empirical studies sentence interpreters 
framework existed took semantics cost ambiguities account 
cost metric developed clearly measure amount local ambiguity sentence interpreter 
identified empirical factors affect cost measure 
impossible devise mathematical function set empirical factors cost metric 
empirical variables contribution cost amount local ambiguity encountered depends number factors position syntactic context ambiguity occurs sentence 
framework allows articulate concrete terms tradeoffs altering individual design decisions ones analyzed 
hard combine tradeoffs different design decisions single analysis 
possibly unknown unaccounted factors complex interactions design decisions preclude complete mathematical analysis 
appears empirical factors noted define classes sentences easy classify sentence certain empirical factors play role 
sentences kinds ambiguities associated empirical factors 
consider entire texts rarely sentences kind 
design decisions analyzed compere model selected reasonable set design choices 
set really optimal particular class texts evaluated actual empirical study 
study requires compere program able process corpus texts requires substantial amount engineering study conducted 
study require build programs different design choices engineer compare performance compere 
formal analysis provides framework evaluating costs tradeoffs design sentence interpreters expensive process actual empirical comparisons 
chapter discussion discussion method confirming errors 

devil dictionary 
chapter address significant issues come design implementation compere model 
predictions compere model describe predictions verified 
psychological predictions compere value computational model aspect human cognition goes far mere simulation psychological data 
computational model predictive power 
concrete predictions suggest psychological experiments verify predictions 
compere predictions 
predictions concerned interactions syntactic semantic decisions ambiguities vicinity sentence 
sentences having type ambiguity sentence may complex interactions choices different ambiguities difficult design control experimental studies human sentence comprehension 
compere suggests examining interactions reveal confirm interesting details human sentence processor 
particular second prediction serve challenging test theories conditional retention error recovery eiselt holbrook 
predictions compere predictions 
sentence structural syntactic ambiguity lexical semantic ambiguity ffl prediction interactive ambiguity resolution resolving structural ambiguity immediate effect resolving associated lexical ambiguity vice versa 
ffl prediction interactive error recovery recovering error resolving structural ambiguity immediate effect previous decisions associated lexical ambiguity vice versa 
predictions central compere claims crucial applicability cognitive model sentence comprehension 
predictions follow directly compere architecture parallel syntactic semantic processing arbitrating controller see chapter 
syntactic semantic preferences considered arbitrated unified process decision resolves ambiguity affects ambiguity 
decision selecting interpretation considering alternatives possible point 
selecting interpretation resolve ambiguity automatically resolve second ambiguity 
example sentence bugs moved new lounge quickly 
resolving structural ambiguity moved favor main clause interpretation automatically resolves lexical semantic ambiguity bugs favor insect meaning 
meanings bugs insect meaning compatible chosen main clause interpretation moved 
insects agents move microphones move 
similarly strong contextual bias microphone meaning bugs lexical semantic ambiguity resolved immediately word bugs structural ambiguity moved resolved automatically immediately favor reduced relative interpretation 
previous demonstrated context sentence processed immediate effect ambiguity resolution crain steedman tyler marslen wilson see chapter 
interactive resolution prediction extending view dynamic situations change context produced decision sentence processing immediate effect resolving ambiguities 
interactive error recovery compere architecture interactive error recovery prediction central compere controlled parallel architecture architecture prediction 
architectures posit single controlling process 
process able predict changes syntactic interpretation error recovery immediate consequences previously resolved associated ambiguities semantics vice versa 
sequential syntax architecture instance predicted error recovery lexical semantic ambiguity effect associated syntactic decision 
integrated model knowledge types integrated priori account types dynamic decisions syntax semantics complex interactions decisions different levels modeled compere predicted 
parallel models controlling process arbitrator predicted interactions error recovery multiple ambiguities 
guarantee interactions occur syntax semantics models explain control coordination necessary ensure consistency syntax semantics multiple types ambiguities errors resolving 
detailed discussion types interactions syntax semantics possible different sentence processing architectures earlier chapter 
error recovery retention second prediction interactive error recovery interesting tests retention theory error recovery eiselt holbrook see chapter 
retention theory unselected alternatives retained error recovery 
error recovery carried examining retained alternatives switching current erroneous interpretation retained interpretation 
consider situation sentence previous decision resolved different ambiguities 
previous decision turns erroneous respect ambiguities sentence processor recovers error switching retained alternative ambiguity ambiguity affected 
alternatives retained second ambiguity examined switched necessary 
interpretation resulting error recovery inconsistent inaccurate 
bugs moved new lounge quickly 
example sentence see illustration encountering word processor detects error syntax way compose word previous syntactic structures 
resolving error switching reduced relative interpretation preceding clause processor change status lexical semantic ambiguity bugs resulting interpretation incorrect 
insects microphones themes move counted possible meanings bugs time 
longer reason rule second meaning bugs agents 
processor retained alternatives lexical ambiguity situations result 
case sentence lexical ambiguity unresolved meanings brought back interpretation 
depending selectional constraints ambiguity resolved differently 
different meaning chosen current deactivated retained change changes structural error recovery orthogonal selectional constraints lexical ambiguity 
similar arguments previously resolved lexical ambiguity preceding context instance leads error associated structural ambiguity affected error recovery 
example chosen meaning subject noun ruled main clause interpretation reconsidered lexical disambiguation error 
compere capable producing correct interpretations sentences complex interactions syntactic semantic ambiguities 
interactive error recovery prediction challenging test retention theory demands unselected alternatives retained types ambiguity resolutions resolved new information provided sentence resolved automatically consequence resolving ambiguities 
suggests experiment test theory retention capable meeting requirements posted prediction observable errors interpretation occur error recovery 
preliminary sketch experiment 
sketch experiment experiment test predictions requires design materials sentence ambiguities syntactic semantic 
ambiguities alternative ambiguity compatible alternatives second second alternative ambiguity compatible alternatives second ambiguity 
sentence insect meaning compatible syntactic interpretations microphone meaning compatible reduced relative interpretation 
sentence sufficient distance point ambiguities resolved resolution point point error consequent recovery occur error point 
window moved sentence called resolution window 
words error point word resolving ambiguity refers operation selecting proper subset set possible interpretations ambiguity 
consequently term may refer operation switching back bigger set possible interpretations previously selected subset 
distance length intervening phrase clause sufficient msec see seidenberg tanenhaus employ experimental techniques lexical decision naming determine interpretations active point 
sentence form recovery window 
allow test current interpretations initial resolution error error sentence 
recovery window essential processor resolves ambiguities sentence available information garrett see holbrook 
bugs moved new lounge quickly 
ambiguity ambiguity resolution point error point resolution window recovery window multiple ambiguities composite errors 
experimental technique employed show effects processing loads effects test current interpretations windows mentioned 
resolution point experiment show ambiguities resolved 
done resolution window sufficiently long showing evidence interpretation active significantly active 
point sentence recovery window conduct similar tests show interpretations active 
different types sentences necessary scenarios mentioned resolving differently change occurs 
experiment produce outcomes ffl possibility resolution point interpretations equally active 
happens ambiguities resolved said predictions result 
ambiguity resolved resolved available information interactive resolution prediction supported 
ffl ambiguities resolved resolution point input sentence explicit information sufficient resolve ambiguity interactive resolution prediction correct 
ffl interactive resolution prediction correct tests done error point revealed automatically resolved ambiguity properly corrected error recovery conclude interactive recovery prediction supported 
ffl error recovery ambiguities properly resolved syntactic semantic interpretations consistent interactive recovery prediction supported 
expect outcome interactive resolution prediction supported error recovery prediction supported 
predictions supported experiment supports contradicts retention error recovery 
resolution prediction supported recovery prediction retention theory loses ground 
say human sentence processor employ retention successfully recover errors single ambiguities extend mechanisms situations multiple interacting ambiguities different levels 
hand predictions supported retention theory accurate able demonstrate processor capable recovering single errors just ambiguity multiple ambiguities composite errors 
noted rough preliminary sketch experimental design 
considerable analysis effort needed design right type sufficient number sentences experiment 
variables complex situations described multiply possibility complex interactions confounds 
third prediction third possible prediction compere lexical ambiguity word bugs sentence remains unresolved sentence resolved temporarily error recovery reintroduced ambiguity 
interesting investigate see people leave ambiguity unresolved show bias original interpretation error choice 
analysis prediction extension experiment test prediction scope dissertation 
history compere history development compere model constitutes interesting case history cognitive science research 
started intuitions largely cognitive motivations 
trying build computational model explain wider range psycholinguistic results previous models formed hypothesis knowledge sources kept separate sentence processor processing levels unified see chapter 
started working architecture computational model accommodate independent knowledge representations common control structure carries syntactic semantic processing raised architectural issues see chapter 
focus cognitive modeling computational properties model 
stage building model having implemented prototype unified process applied carry syntactic analysis author began away details program write formal algorithm program 
clear rediscovered left corner parsing see chapter compere program 
finer analysis showed algorithm compere arc eager arc standard left corner parsers 
head driven head corner parsing 
unique combination left corner head driven parsing algorithms mahesh 
new parsing algorithm interesting computational properties incremental sentence processing interactive syntax semantics see chapters 
way building compere program theory intermediate roles introduced intuitively refined defined concept distinct advantages uniform representation syntactic semantic interpretations error recovery operations currently working dr jennifer holbrook concrete experimental design 
mahesh eiselt see chapters 
review literature showed links existing linguistic formalisms linking theory thematic hierarchies see chapter frawley 
clear mechanism intermediate roles developed thesis previous theories 
shown compere computational model able concrete seemingly testable predictions human sentence processor 
completed rare cycle piece research cognitive science cognitive model developed interesting computational model computational model able interesting psychological predictions 
strongly believe model compere motivated psychological computational points view able provide better constrained plausible account sentence understanding phenomena psychological computational considerations 
limitations compere model compere limitations 
limitations merely current implementation model 
discussed section 
look limitations compere model sentence understanding 
cognitive accuracy emphasized goal thesis simulate exactly particular set psycholinguistic data compere cognitive model better model closer psychological results limitations lack additional constraints resource limits approximation introduced parsing algorithm 
examine limitations implications terms cognitive accuracy 
resource limits compere architecture unified arbitrator designed include constraints resource limits making ambiguity resolution error recovery decisions 
resource limits included model fundamental reasons ffl know limits 
numbers define resource limit reached 
justification add arbitrarily chosen number claim model considers resource limits 
limits human working memory difficult computational resource limits 
ffl measure amount resources takes process sentence understanding known method counting amount working memory resources takes maintain process intermediate interpretations especially semantic representations included 
chapter provided preliminary analysis proposed metric measuring resource requirements 
challenges claim compere flexible architecture unified process controlling interactions syntax semantics equipped include resource limits decisions limits measure resource requirements 
limitation illustrates distinction specified computational model vaguely incompletely articulated model 
example stowe model admittedly advertised computational model proposed change strategies modular interactive behaviors limits amount delay making decisions permitted resource limits 
model account human behavior sentence processing shows highly interactive behaviors normal circumstances switches modular behaviors syntactic information decisions pressed resources increasing load processing sentence 
true computational model compere implement theory difficulties modeling memory limits mentioned 
consequence difference cognitive model put forth stowe computational instantiation compere seen familiar examples 
officers taught academy demanding 
courses taught academy demanding 
children taught academy 
seen previously sentence results garden path behavior syntactic ambiguity taught resolved incorrectly point syntactic preferences semantic bias example 
significant difficulties expected processing sentence 
semantic conceptual bias adult animate entities teachers see courses children fit agents teaching 
main clause interpretation pursued sentence 
strategy explain sentence garden path easier process sentence unable explain sentence strong garden path sentence 
compere reduced relative selected results error sentence 
compere able recover error see chapter ultimately produce correct interpretation sentence syntax semantic bias allow children agents teaching compere unable explain difference difficulty sentences 
stowe model explained difference claiming structural ambiguity taught sentences resolved immediately syntax semantics conflicting preferences point 
decision delayed interpretations pursued point resource limits force decision 
sentences presumably reach resource limits sentence processor proceed reduced relative interpretation main clause interpretation 
limitation modeling resource limits compere unable implement types resource controlled delay strategies 
strongly believe merit introducing arbitrary numbers compere program fine tuning numbers fit model accurately piece data collected set experiments 
developments distributed models computation provide new ways modeling factors resource limits 
flexible parsing eager hslc head signaled left corner parsing algorithm enables compere syntactic semantic compositions better sequence points sentence algorithms bottom top left corner parsers leaves room improvement 
hslc somewhat conservative times delays commitments desire reasons better cognitive accuracy 
adjunct prepositional phrase pp attached hslc delays attachment head pp np processed 
may possible uniquely attach pp head noun pp 
example see carpenter just holbrook location pp attachment human sentence processor dependent context 
head depending meanings prefix head mentioned prior context see chapter 
early attachment may possible recency frequency information pearlmutter macdonald seidenberg 
early attachment possible arc eager left corner parsing gives better account attachment position hslc see chapter 
fact attachment occurs left corner head strategy hslc necessary produce behavior 
may sources information statistical information corpus lexical verb particular prepositions contextual biases enable justified early attachment immediately preposition 
source information compere unified arbitrator mechanism available lexical entries words 
compere hslc algorithm early commitment information available 
compere conservative commitments late certain cases 
unjustified early commitments cases 
possible improvement compere see preference available immediately preposition say commitment available 
compere switch strategies hslc depending availability outside information 
may situations compere wait head see required unit right head able commit attachment 
case compere improved switch strategy closer delaying attachment 
quantitative aspects early commitment justified commitment leads error answered empirical study corpus sentences 
may noted source lexicalized preferences left unspecified compere preferences come conceptual knowledge slot filler preferences statistical collocation data licensing preference 
sources information permit earlier commitments times communication semantics semantics process selecting composing meanings words form composite meanings delayed content word meaning processed 
analysis propose new parsing algorithm flexible changes strategies hslc 
call algorithm eager hslc indicate hslc eager earlier attachments possible 
words eager hslc keeps attempting attachment soon unique attachment possible 
attachment ambiguous delays attachment head adjunct 
noted performance analysis chapter early attachment unambiguous adds cost syntactic link added early retained meaning head flows link 
additional cost making early attachment 
may benefits early attachment help resolve ambiguities adjunct 
expand flexibility new algorithm widen range parsing algorithms flexible algorithm switch strategies relaxing definition head phrase 
allow head include certain required arguments follow head word parsing algorithm wait head word required units processed attachments 
results algorithm take position spectrum parsing strategies see chapter way depending context 
limitations assumptions see chapter construed limitations compere 
limitations functionality task modeled compere limitations model 
instance compere model inference non linguistic reasoning 
goal thesis build model sentence processing produced linguistic meanings sentences build model produce conceptual interpretations inferred linguistic meanings appropriate situation non linguistic task domain 
limitations model issues sentence processing interesting 
comes mind resolution 
resolving involves intersentential interactions making part discourse processing problem may need resolved different phrases clauses sentence 
compere extended deal resolution 
drawback current model knowledge applied particular sentence processing situation matter context situation occurs 
may changed allow context effect sentence processing 
example preferences different interpretations changed context sentence produces different behaviors compere depending context 
may accomplished allowing context discourse processor non linguistic reasoning program determines context directly communicate arbitrator allowing modify preferences directly time lexical access depending contextual preferences available individual word meanings concepts bigger linguistic units 
limitations current compere program current implementation compere limitations 
limitations shown require large engineering effort remedy 
ffl lexicon currently limited 
compere knows words half meanings encoded 
extending syntactic knowledge lexicon difficult availability line lexicons 
adding meanings words require substantial amount corresponding meaning representations conceptual knowledge selectional constraints concept hierarchies see chapter encoded 
ffl grammar limited certain extent 
example compere grammar deal relative clause hanging prepositional phrase sentence 
academy officers taught full demanding courses 
ffl compere semantic knowledge considerably limited time 
knowledge semantic roles intermediate roles confined thematic roles ignoring semantic elements spatial roles modifiers tense time aspect 
example handful prepositions primitive intermediate roles represented 
substantial amount needed define encode mappings elements prepositions elements linguistic semantics 
instance elements frawley encoded compere formalisms representations 
linguistic knowledge added compere integrated discourse reasoning systems 
directions exploring suggesting directions research discussion limitations places fruitful directly related limitations 
listed 
ffl compere model parsing breakdown 
instance experience difficulty processing center embedded sentences 
find method impose resource limitations model parsing breakdown behavior 
ffl may necessary build explicit representation syntactic parse tree sentence 
intuitively possible syntactic cues influence thematic role assignment building parse tree 
clear syntax achieve result 
research intermediate roles uniform representation syntactic semantic knowledge yield better ways representing syntactic interpretations 
representation lead smoother integration syntax semantics sentence processing 
ffl area requires investigation concerns hypothesis intermediate roles powerful capture syntactic transformations 
compere shown mechanism intermediate roles sufficient deal passive transformations 
remains seen intermediate roles powerful represent transformation surface deep syntactic structure general 
ffl point extend compere sentence understanding 
way separate projects compere integrated discourse processor understanding science fiction stories called isaac ram non linguistic reasoner called ka mahesh peterson goel eiselt peterson mahesh goel acquires knowledge design physical devices reading natural language descriptions devices 
projects currently compere front system integrated part system 
compere output systems reasoning systems way influencing sentence interpretation 
achieved working methods allowing reasoning situation context affect preferences compere outlined 
integration compere sentence processing model reasoning systems potential variety applications information retrieval information extraction knowledge acquisition conceptual information processing machine translation 
ffl compere theory tested english 
model sentence processing tested natural languages 
enable compere serve computational model applications machine translation 
particularly interesting uniform representation syntactic semantic interpretations compere intermediate roles independent strong influence word order linguistic cue english 
ffl evaluation compere model carried combination additional formal analysis evaluations empirical factors tradeoffs ones discussed chapter 
empirical tests require implementation engineered deal large number sentences 
empirical results combined formal models performance analyses tell model practice certain sentences 
instance evaluate eager hslc algorithm proposed manner 
chapter xi control structure necessarily need highly dynamic exploiting information syntax semantics context best defined moment lead system appropriate interpretation 
allen model sentence understanding compere demonstrated computational architecture unified process independent knowledge sources explain sentence processor produce modular behaviors situations interactive behaviors situations 
compere process sentence lexical syntactic semantic levels resolve syntactic semantic lexical structural ambiguities recover errors syntactic semantic ambiguities 
unified arbitrator head signaled left corner parsing algorithm uniform representation syntactic semantic interpretations intermediate roles shown distinct advantages computational terms modeling wide range psycholinguistic findings 
addition modeling known behaviors compere generated predictions new situations sentence processing insightful ideas interactions syntax semantics sentence understanding 
issues addressed addressed issues significance study natural language understanding ffl language processor integrate different kinds knowledge lead appropriate interpretation sentence 
shown application single unified process multiple sources knowledge result smooth integration knowledge different sources 
appealed integrated processing principle shown interaction happen incrementally earliest opportunities sentence processing 
ffl sentence processor integrate information multiple sources soon possible retain ability independently 
essence modularity debate study human language processing 
shown keeping knowledge sources independent unifying process support early frequent interaction different knowledge sources sacrificing functional independence different types knowledge 
ffl language understander cope variety ambiguities natural languages decisions conflicts resolved select unique interpretations sentences 
shown unified arbitrator resolve different kinds ambiguities having exhaustive search wasteful backtracking 
ffl language understander recover errors way due lack sufficient information different points sentence processing 
model maintains line interpretation portion input best respect information available point processing 
model retains information alternative interpretations switch retained interpretations repair erroneous interpretation information proves current wrong 
shown method proposed originally semantic pragmatic error recovery eiselt applicable syntactic error recovery 
ffl sentence processor jump decision delay commitment 
time course decisions human sentence processor processing different sentences 
developed hslc parsing algorithm produces sequence decisions closer desired time course ones produced parsers 
shown unified arbitrator capable delaying decisions provided architecture accommodate additional cognitive factors working memory limitations 
contributions contributions areas research related language processing 
contributions areas language study involved listed 
ffl architecture sentence processor unified process separate knowledge sources contribution multiple disciplines natural language processing psycholinguistics 
provides new architecture building natural language processing system exploit piece available knowledge demanding complete knowledge type 
psycholinguistics provided specified computational model demonstrates human sentence processor produce modular interactive behaviors single architecture 
contributes artificial intelligence blackboard architecture additional arbitrating process monitors controls interactions occurring blackboard 
ffl hslc parsing algorithm unique combination left corner head driven parsing algorithms contribution computational linguistics natural language processing 
ffl concept intermediate roles uniformly representing syntactic semantic interpretations contribution computational linguistics natural language processing 
ffl error recovery repair methods demonstrated compere contributions natural language processing artificial intelligence psycholinguistics 
ffl theoretical framework enhanced graph structured pushdown automaton described chapter enables formal analyses performance sentence processors contribution computational linguistics computer science general 
ffl psychological predictions see chapter potential contributions psycholinguistics 
ffl history compere see chapter illustrated cognitive motivations psychological observations led cognitive model exhibited interesting computational properties turn led cognitive predictions suggested psychological experiments 
methodological cycle serves interesting illustration benefits interdisciplinary studies cognitive sciences 
ffl notion emergence roles see chapter primitive roles initiated lexicon progressive refinement intermediate roles variety different types linguistic cues knowledge characterization semantic processing prove particularly useful studies bilingual multi lingual language processing machine translation 
building complete computational model sentence understanding difficult unsolved problem 
task sentence understanding requires variety different types knowledge assumed available situations 
different types knowledge integrated sentence interpretation big difference amount local ambiguity processor struggle 
thesis computational model sentence understanding flexible architecture allows available knowledge exploited right points sentence understanding produce best interpretations derivable sentence knowledge available 
algorithms built shown examples workings discussed cognitive computational motivations model implications claims 
conclude study initial hypothesis sentence processor unified process applied independently multiple knowledge sources provides answer modularity debate explains better possible architectures human sentence processor produces wide variety behaviors 
bibliography abney 

computational model human parsing 
journal psycholinguistic research 
abney johnson 

memory requirements local ambiguities parsing strategies 
journal psycholinguistic research 
aho ullman 

theory parsing translation compiling volume parsing 
prentice hall 
allen 

natural language understanding 
benjamin cummings publishing allen 

natural language understanding 
section 
barr cohen feigenbaum editors handbook artificial intelligence volume iv pages 
addison wesley publishing altmann dennis 

avoiding garden path eye movements context 
journal memory language 
bader 

defense top parsing evidence german 
proceedings sixth annual cuny sentence processing conference amherst ma mar 
barr feigenbaum 

handbook artificial intelligence volume 
addison wesley publishing 
bates macwhinney 

cross linguistic research aphasia overview 
brain language 
berwick 

cartesian parsing 
talk sixth annual cuny sentence processing conference amherst ma mar 
garrett 

interaction perceptual processes ambiguous sentences 
memory cognition 


devil dictionary 
dover publications birnbaum 

integrated processing planning understanding 
phd thesis yale university department computer science new haven ct research report 
birnbaum 

critical look foundations autonomous syntactic analysis 
proceedings eleventh annual conference cognitive science society pages 
cognitive science society 
birnbaum 

critical essays language representation critical look foundations autonomous syntactic analysis 
tech report institute learning sciences northwestern university 
birnbaum selfridge 

conceptual analysis natural language 
schank riesbeck editors inside computer understanding pages 
lawrence erlbaum associates 
blackwell bates 

inducing profiles normals 
proceedings sixteenth annual conference cognitive science society pages 
hillsdale nj lawrence erlbaum 
bresnan kaplan 

grammars mental representations language 
bresnan editor mental representation grammatical relations 
mit press 


restricted interactive model parsing 
proceedings fifteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
burgess lund 

multiple constraints syntactic ambiguity resolution connectionist account psycholinguistic data 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
burgess simpson 

neuropsychology lexical ambiguity resolution contribution divided visual field studies 
small cottrell tanenhaus editors lexical ambiguity resolution perspectives psycholinguistics neuropsychology artificial intelligence pages 
morgan kaufmann publishers 
burgess tanenhaus hoffman 

semantic effects syntactic ambiguity resolution 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
caramazza berndt 

semantic syntactic processes aphasia review literature 
psychological bulletin 
cardie lehnert 

cognitively plausible approach understanding complex syntax 
proceedings ninth national conference artificial intelligence pages 
morgan kaufmann 
carlson tanenhaus 

thematic roles language comprehension 
wilkins editor syntax semantics vol 
thematic relations 
academic press 
carpenter 

lexical retrieval error recovery reading model eye fixations 
journal verbal learning verbal behavior 
carpenter just 

role working memory language comprehension 
editors complex information processing impact herbert simon 
erlbaum 
carpenter miyake just 

working memory constraints comprehension evidence individual differences aphasia aging 
gernsbacher editor handbook psycholinguistics 
academic press 
carroll 

psychology language 
monterey ca brooks cole 
charniak 

passing markers theory contextual influence language comprehension 
cognitive science 
chomsky 

syntactic structures 
mouton 
clifton ferreira 

modularity sentence comprehension 
garfield editor modularity knowledge representation natural language understanding 
mit press 
cottrell small 

connectionist scheme modelling word sense disambiguation 
cognition brain theory 
cottrell 

connectionist parsing 
proceedings seventh annual conference cognitive science society irvine ca pages 
covington 

dependency parser variable word order languages 
research report ai artificial intelligence programs university georgia athens ga crain steedman 

led garden path context psychological syntax processor 
dowty karttunen editors natural language parsing psychological computational theoretical perspectives 
cambridge university press 
crocker 

properties principle sentence processor 
proceedings fifteenth annual conference cognitive science society pages 
lawrence erlbaum associates 


script application computer understanding newspaper stories 
phd thesis yale university department computer science new haven ct research report 
carpenter 

individual differences working memory reading 
journal verbal learning verbal behavior 
dejong 

skimming stories real time experiment integrated understanding 
phd thesis yale university department computer science new haven ct research report 
dejong 

overview system 
lehnert editors strategies natural language processing 
lawrence erlbaum 
earley 

efficient context free parsing algorithm 
communications acm 
eiselt mahesh holbrook 

having cake eating autonomy interaction model sentence processing 
proceedings eleventh national conference artificial intelligence aaai pages 
aaai press mit press 
eiselt 

inference processing error recovery sentence understanding 
phd thesis university california irvine ca 
tech 
report 
eiselt holbrook 

unified theory lexical error recovery 
proceedings thirteenth annual conference cognitive science society 
cognitive science society 


types ambiguity 
london 
erman hayes roth lesser reddy 

hearsay ii speech understanding system integrating knowledge resolve uncertainty 
acm computing survey 
ferreira clifton 

independence syntactic processing 
journal memory language 
ferreira henderson 

recovery garden path sentences 
journal memory language 


context effects syntactic ambiguity resolution location prepositional phrase attachment 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
fodor 

modularity mind 
mit press cambridge ma 
fodor 

modules frames sleeping dogs music spheres 
garfield editor modularity knowledge representation natural language understanding 
mit press 
foley van 

functional syntax universal grammar 
cambridge university press 
forster 

levels processing structure language processor 
cooper walker editors sentence processing psycholinguistic studies merrill garrett 
lawrence erlbaum associates 
frawley 

linguistic semantics 
lawrence erlbaum associates 
frazier 

theories sentence processing 
garfield editor modularity knowledge representation natural language understanding 
mit press 
frazier 

lexical generation syntax 
marslen wilson editor lexical representation process 
mit press 
frazier fodor 

sausage machine new stage parsing model 
cognition 
frazier rayner 

making correcting errors sentence comprehension eye movements analysis structurally ambiguous sentences 
cognitive psychology 
gernsbacher 

handbook psycholinguistics 
academic press 


studies human syntactic processing ranked parallel versus serial models 
phd thesis university connecticut 
unpublished ph dissertation 
grishman 

computational linguistics 
cambridge university press 
halliday martin 

writing science literacy power 
university pittsburgh press 
hirst 

semantic interpretation ambiguity 
artificial intelligence 
holbrook 

studies inference retention lexical ambiguity resolution 
phd thesis school social sciences university california irvine 
holbrook eiselt granger 

letting go inference retention text understanding 
small cottrell tanenhaus editors lexical ambiguity resolution perspectives psycholinguistics neuropsychology artificial intelligence pages 
morgan kaufmann publishers 
holbrook eiselt mahesh 

unified process model syntactic semantic error recovery sentence understanding 
proceedings fourteenth annual conference cognitive science society pages 
cognitive science society 
holmes stowe 

lexical expectations parsing complement verb sentences 
journal memory language 
jackendoff 

semantics cognition 
mit press 
jacobs 

parsing run relation driven control text analysis 
proceedings tenth national conference artifical intelligence aaai pages 
jacobs krupka mcroy rau zernik 

generic text processing progress report 
proceedings darpa speech natural language workshop pages 
morgan kaufmann publishers 


syntactic processing connected speech 
journal verbal learning verbal behavior 
jensen 

peg english grammar 
jensen heidorn richardson editors natural language processing approach pages 
kluwer academic publishers 
chapter 
johnson laird 

mental models cognitive science language inference consciousness 
harvard university press 
jurafsky 

line model human sentence interpretation 
proceedings thirteenth annual conference cognitive science society pages 
cognitive science society 
jurafsky 

line computational model human sentence interpretation 
proceedings tenth national conference artificial intelligence aaai pages 
just carpenter 

theory reading eye fixations comprehension 
psychological review 
just carpenter 

psychology reading language comprehension 
allyn bacon newton ma 
just carpenter 

capacity theory comprehension individual differences working memory 
psychological review 
kimball 

principles surface structure parsing 
cognition 
king just 

individual differences syntactic processing role working memory 
journal memory language 


studies syntactic ambiguity resolution 
phd thesis massachusetts institute technology 
laird newell rosenbloom 

soar architecture general intelligence 
artificial intelligence 
lebowitz 

memory parsing 
artificial intelligence 
lehman lewis newell 

integrating knowledge sources language comprehension 
proceedings thirteenth annual conference cognitive science society pages 
lehnert sundheim 

performance evaluation text analysis technologies 
ai magazine 
lehnert dyer johnson yang harley 

boris experiment depth understanding narratives 
artificial intelligence 
lewis 

computational theory human sentence comprehension 
phd thesis proposal school computer science carnegie mellon university 
lewis 

architecturally theory human sentence comprehension 
proceedings fifteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
lewis 

architecturally theory human sentence comprehension 
phd thesis carnegie mellon university computer science department pittsburgh pa tech 
report 
cmu cs 
lytinen 

organization knowledge multi lingual parser 
phd thesis yale university department computer science new haven ct research report 
lytinen 

dynamically combining syntax semantics natural language processing 
proceedings fifth national conference artificial intelligence pages 
lytinen 

integrating syntax semantics 
nirenburg editor machine translation theoretical methodological issues pages 
cambridge university press 
macdonald just carpenter 

working memory constraints processing syntactic ambiguity 
cognitive psychology 
mahesh 

building parser afford interact semantics 
proceedings twelfth national conference artificial intelligence aaai pages 
aaai press mit press 
mahesh 

benefits interactive syntax semantics 
proceedings nd annual meeting association computational linguistics pages 
acl morgan kaufmann 
mahesh eiselt 

uniform representations syntax semantics arbitration 
proceedings sixteenth annual conference cognitive science society pages 
hillsdale nj lawrence erlbaum 
mahesh peterson goel eiselt 

ka integrating design problem solving natural language understanding 
working notes aaai spring symposium active nlp natural language understanding integrated systems stanford university california 
available technical report american association artificial intelligence 
marcus 

theory syntactic recognition natural language 
mit press cambridge ma 
marr 

vision computational investigation human representation processing visual information 
freeman san francisco 
marslen wilson tyler 

modularity 
garfield editor modularity knowledge representation natural language understanding 
mit press 
mcclelland kawamoto 

mechanisms sentence processing assigning roles constituents 
mcclelland rumelhart pdp research group editors parallel distributed processing 
explorations microstructure cognition vol 
psychological biological models 
mit press 
mcroy hirst 

race parsing syntactic disambiguation 
cognitive science 
meyer carlson 

lexicographic principles design knowledge machine translation 
technical report cmu cmt center machine translation carnegie mellon university pittsburgh pa miikkulainen dyer 

language processing modular pdp networks distributed lexicon 
cognitive science 
miyake just carpenter 

working memory constraints resolution lexical ambiguity maintaining multiple interpretations neutral contexts 
journal memory language 
ram 

integrating creativity reading functional approach 
proceedings sixteenth annual conference cognitive science society pages 
hillsdale nj lawrence erlbaum 
nederhof 

generalized left corner parsing 
sixth conference european chapter association computational linguistics proceedings conference utrecht netherlands 
newell 

knowledge level 
ai magazine 
presidential address american association artificial intelligence aaai stanford university aug 
nii 

blackboard systems 
barr cohen feigenbaum editors handbook artificial intelligence volume iv pages 
addison wesley publishing 
nijholt 

context free grammars covers normal forms parsing 
springer verlag 
nirenburg carbonell tomita goodman 

machine translation knowledge approach 
morgan kaufmann publishers san mateo ca 
nirenburg levin 

syntax driven ontology driven lexical semantics 
pustejovsky bergler editors lexical semantics knowledge representation 
springer verlag heidelberg 
proceedings siglex workshop berkeley ca june 
nirenburg 

lexicon scheme things 
tech report computing research laboratory new mexico state university las cruces new mexico 
pearlmutter macdonald seidenberg 

modeling frequency contextual biases sentence processing 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
pearlmutter macdonald 

plausibility syntactic ambiguity resolution 
proceedings fourteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
peterson 

correspondences syntactic form meaning anarchy hierarchy 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
peterson mahesh goel 

situating natural language understanding experience design 
tech report git cc college computing georgia institute technology atlanta ga appear international journal human computer studies 
ram 

question driven understanding integrated theory story understanding memory learning 
phd thesis yale university new haven ct research report 
ram 

theory questions question asking 
journal learning sciences 
rayner 

eye movements reading information processing 
psychological bulletin 
rayner carlson frazier 

interaction syntax semantics sentence processing eye movements analysis semantically biased sentences 
journal verbal learning verbal behavior 
rayner 

discourse influences parsing delayed 
cognition 
reddy erman neely 

model system machine recognition speech 
ieee transactions audio au 
resnik 

left corner parsing psychological plausibility 
proceedings fourteenth international conference computational linguistics coling 
riesbeck martin 

direct memory access parsing 
kolodner riesbeck editors experience memory reasoning pages 
lawrence erlbaum hillsdale nj 
riesbeck martin 

completely integrated parsing inferencing 
proceedings eighth annual conference cognitive science society pages 
cognitive science society 
rosen 

interface semantic roles initial grammatical relations 
rosen editors studies relational grammar pages 
university chicago press 
schank 

explanation patterns understanding mechanically creatively 
lawrence erlbaum 
schank abelson 

scripts plans goals understanding 
lawrence erlbaum associates hillsdale nj 
schank lebowitz birnbaum 

integrated understander 
american journal computational linguistics 
seidenberg tanenhaus 

automatic access meanings ambiguous words context limitations knowledge processing 
cognitive psychology 
sells 

lectures contemporary syntactic theories 
center study language information stanford university 
small rieger 

parsing comprehending word experts 
lehnert editors strategies natural language processing 
lawrence erlbaum 
spivey knowlton tanenhaus 

immediate effects discourse semantic context syntactic processing evidence eye tracking 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
spivey knowlton 

context effect sentence processing implications principle referential support 
proceedings fourteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
steedman 

combinatory grammars human sentence processing 
garfield editor modularity knowledge representation natural language 
mit press 
steedman 

grammar interpretation processing lexicon 
editor lexical representation process 
mit press 
stevenson 

unified model preference recovery mechanisms human parsing 
proceedings sixteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
st john mcclelland 

learning applying contextual constraints sentence comprehension 
artificial intelligence 
stowe 

ambiguity resolution behavioral evidence delay 
proceedings thirteenth annual conference cognitive science society pages 
cognitive science society 
tanenhaus boland 

combinatory lexical information language comprehension 
altmann editor cognitive models speech processing psycholinguistic computational perspectives 
mit press 
tanenhaus carlson 

lexical structure language comprehension 
marslen wilson editor lexical representation process 
mit press 
tanenhaus dell carlson 

context effects lexical processing connectionist approach modularity 
garfield editor modularity knowledge representation natural language understanding 
mit press 
taraban mcclelland 

constituent attachment thematic role assignment sentence processing influences content expectations 
journal memory language 
just carpenter 

model time course content reading 
cognitive science 
trueswell tanenhaus 

consulting temporal context sentence comprehension evidence monitoring eye movements reading 
proceedings fourteenth annual conference cognitive science society pages 
lawrence erlbaum associates 
tyler marslen wilson 

line effects semantic context syntactic processing 
journal verbal learning verbal behavior 
van noord 

head corner parsing discontinuous constituency 
proceedings th annual meeting association computational linguistics pages 
waltz pollack 

plausible parsing 
proc 
aaai pages 
waltz pollack 

massively parallel parsing strongly interactive model natural language interpretation 
cognitive science 
wanner 

atn approach comprehension 
halle bresnan miller editors linguistic theory psychological reality pages 
mit press 
wilks 

preferential pattern seeking semantics natural language inference 
artificial intelligence 
winograd 

procedural model language understanding 
schank colby editors computer models thought language pages 
freeman 
woods 

link foundations semantic networks 
bobrow collins editors representation understanding studies cognitive science 
new york academic press 
woods 

cascaded atn grammars 
american journal computational linguistics 
woods 

transition network grammars natural language analysis 
communications acm 
reprinted readings natural language processing grosz jones webber ed morgan kaufmann publishers 
woods 

experimental parsing system transition network grammars 
editor natural language processing 
algorithmics press 
vita author currently research scientist computing research laboratory new mexico state university 
september november graduate student graduate teaching research assistant college computing georgia institute technology 
obtained ms information computer science georgia institute technology december 
coming georgia tech scientific officer department computer science automation indian institute science bangalore india 
india obtained master technology degree computer science engineering indian institute technology bombay bachelor engineering degree bangalore university 
born bangalore india april 
author research interests include natural language processing computational linguistics syntax semantics interaction sentence understanding parsing knowledge representation natural language processing information retrieval cognitive science language 
new mexico state university currently working ontology acquisition semantic analysis machine translation systems 
author interests include photography traveling literature learning different languages 
author address mahesh computing research laboratory box 
dept crl new mexico state university las cruces nm usa mahesh crl nmsu edu 
