appears proceedings th int joint conference artificial intelligence ijcai 
practical partition theorem proving large knowledge bases bill knowledge systems lab computer science dept stanford university ksl stanford edu sheila mcilraith knowledge systems lab computer science dept stanford university sam ksl stanford edu query answering commonsense knowledge bases typically employs order logic theorem prover 
order inference intractable general provers hand tuned answer queries reasonable performance practice 
appealing previous theoretical partition reasoning propose theorem proving strategies exploit structure kb improve efficiency reasoning 
analyze experimentally evaluate strategies testbed theorem prover 
exploiting graph partitioning algorithms show compute partition derived ordering ordered resolution experimental results offering automatic alternative hand crafted orderings 
propose new resolution strategy mfs resolution combines partition message passing focused sublanguage resolution 
experiments show significant reduction number resolution steps strategy 
augment partition message passing partition derived ordering mfs combining set support restriction 
combinations incomplete produce dramatic improvements practice 
presents promising practical techniques query answering large potentially distributed commonsense kbs 
theorem proving order logic fol intractable general 
order provers commonly query answering large knowledge bases kbs containing thousands axioms cycorp cyc high performance knowledge base hpkb 
headway large kbs theorem provers usually require tuning customization 
partition reasoning pbr promises speed reasoning manual tuning exploiting structure implicit large commonsense kbs typically contain loosely coupled clusters domain knowledge 
eyal amir computer science div 
university california berkeley ca eyal cs berkeley edu tom uribe ai center sri international menlo park ca uribe ai sri com pbr uses graph techniques automatically partition logical theory network subtheories minimally connected links shared vocabulary 
theorem proving performed locally subtheory relevant results propagated partitions achieve globally sound complete collaborative reasoning 
previous pbr theoretical framework claims potential improving efficiency reasoning practice 
validate claims empirically introduce novel fol resolution strategies exploit pbr techniques improve efficiency reasoning 
outline section review theoretical framework pbr 
section explain generic theorem prover may easily augmented pbr describe experimental testbed developed theorem prover 
testbed section compare performance pbr message passing algorithm mp popular resolution strategies 
mp far outperforms unrestricted resolution fares comparably ordered resolution default ordering beats setof support sos resolution 
section show automatic partitioning induce partition derived ordering pdo ordered resolution 
ordering highly efficient resolution strategy success previously depended handcrafted orderings tailored specific kb trial error 
pdo competitive hand crafted orderings far outperforms default ordering 
important result theorem provers incorporate efficient automatic ordering 
section novel resolution strategy mfs resolution show sound complete 
mfs combines mp focused support restriction employed partitions 
focused support novel resolution restriction complete consequence finding specified sublanguage 
experiments mfs significantly reduces number resolution steps required answer queries 
section examine combinations strategies mp pdo mfs sos 
combinations general incomplete perform experimental testing 
pdo sos outperform strategy combination examined theoretical incompleteness encountered practice 
introduces novel easily implemented techniques improving efficiency fol theorem proving large structured kbs commonsense kbs 
report experimental results pbr examine combinations mp strategies theoretical experimental setting 
background partition reasoning pbr framework components graph algorithms automatic partitioning theory messagepassing algorithms reasoning partitioned theory 
details see 
automatically partitioning theory say ai partitioning logical theory ai 
ai set axioms called partition ai signature set non logical symbols ai language set formulae built ai 
partitions may share symbols axioms 
partition theory construct symbols graph axioms vertex represents symbol theory vertices joined edge iff symbols appear axiom 
tree decomposition algorithms generate tree node corresponds tightly connected cluster symbols defining partition ai consisting axioms original theory contain symbols 
result partition graph vertices correspond partitions edges correspond communication links partitions labeled communication vocabulary label edge ai aj set symbols shared partitions ai aj 
efficient partition reasoning depends finding tree decomposition keeps communication languages small 
partitioning algorithms tree decomposition tree nodes node set symbols tree satisfies property symbol appears different nodes appears nodes edges path nodes 
width tree decomposition size number symbols largest node largest set symbols single node 
optimal tree decomposition lowest width tree decompositions graph 
tree width treewidth original graph 
tree decomposition algorithms commonly variety ai applications including constraint satisfaction problems bayes nets 
performed experiments graph partitioning algorithms 
algorithm due ordering heuristic named min fill 
heuristic iterate symbols symbols graph 
step select symbol graph add missing edges symbol neighbors graph remove symbol graph 
symbol selected number added edges minimal 
tree decomposition extracted order 
experimental results reported partitioning algorithm 
second algorithm due uses divide andconquer approach guaranteed approximate optimum decomposition factor log treewidth symbols graph 
iteratively algorithm finds vertex cut graph set vertices removal separates graph parts 
vertex cut sent recursively separated parts subsequent iterations required find vertex cut separates balanced fashion may algorithms 
tree decomposition built final parts vertex cuts vertex sets recursively 
experiments algorithm generated partitions somewhat fewer number larger size algorithm yielded similar performance answering queries 
reasoning message passing mp displays forward message passing mp pbr algorithm proposed 
takes input partitioned theory associated partition graph query formula ak returns query entailed mp directs edges partition graph goal partition ak 
tree means partition goal exactly outbound link leading partition path goal outbound link vocabulary lout 
mp performs consequence finding independently partition propagates derived formula outbound link goal iff formula signature matches lout 
procedure forward mp ai ai partitioning theory graph connections partitions query ak 

define iff path 
concurrently perform consequence finding partitions ai 
consequence aj aj add set clauses ai 
proven ak return 
initially add ak derive inconsistency 
forward message passing algorithm 
algorithm shown sound complete partition graph corresponds tree decomposition reasoning procedure employed partition sound complete consequence generation language defined outbound link vocabulary lout definition 
target language reasoning procedure complete consequence generation formula logically entailed set axioms entailed set consequences generated ordered resolution example reasoning procedure satisfies condition 
experimental setup evaluate performance various pbr strategies built experimental platform fol theorem prover developed mark stickel sri ai center 
adding pbr capabilities straightforward 
extensions required associate set partitions clause 
restrict resolution occur partitions 
ensure appropriate propagation new clauses neighboring partitions 
modifications easy implement resolution prover 
implementing pbr row data structure stores clause metadata inference method derive 
extend data structure include non empty set partition ids indicating partitions clause resides 
separate data structure holds description partition graph partitions links connect vocabulary partition link 
resolution restricted occur partitions rows may resolved intersection partition sets non empty 
resolvent inherits intersection partition set appears partitions parents 
restriction may superimposed top resolution restrictions set support 
implement message passing partitions examine vocabulary new resolvent 
matches outbound link language lout partition partition set partition set expanded include adjacent partition reached link 
generate initial partitioning load kb axioms convert clausal form 
clauses passed external partitioning tool generates partition graph defines vocabulary partition link particular partitioning strategy selected see section 
partition graph essentially static generated just kb cost partitioning amortized queries 
links partitions mp query basis ensure communication links lead goal partition 
sample kbs evaluation metrics greatest problem encountered obtaining large kbs fol suitable test data 
test suites theorem provers tptp biased propositional logic pl small problems fol minority test problems containing significant numbers fol axioms usually describe domain employ small number symbols making unsuitable partitioning 
best application partitioning commonsense kbs contain large numbers axioms symbols 
mathematical theorem proving problems kbs exhibit structure exploited partitioning improve efficiency reasoning 
kbs publically available tend employ proprietary extensions fol making direct comparison common testbed problematic 
subset cyc kb containing axioms symbols concerning spatial relationships set queries supplied outside source 
continuing efforts remedy paucity experimental data adding large kbs 
currently testing queries suggested upper merged ontology experimental results reported project website collected variety statistics kb partitioning task query trial including runtimes elapsed times 
interested metrics allow compare trial size search space explored 
processor runtime imperfect proxy depends greatly implementation details primary concern 
remainder focus number resolution steps best measure quantity required trial 
baseline evaluation mp starting point evaluating effectiveness mp compare common resolution restriction strategies set support sos ordered resolution 
sos places negated query designated set support allows resolutions involving clause set support newly derived clauses added 
ordered resolution global ordering predicates user clauses resolved highest literals predicate ordering 
assess effectiveness resolution strategy examine required answer query strategy relative strategy allowing possible resolution 
described section number resolution steps measure done answering query 
absolute number resolution steps typically thousands number may vary widely query normalize order meaningful comparisons queries 
query strategy report number resolution steps required answer query percent number resolution steps required strategy 
results representative selection queries shown histograms 
relative strategy mp reduces numbers steps required answer queries third thirds 
mp significantly outperformed sos queries 

vanilla version mp operates global level restricts resolution partitions allows unrestricted resolution partitions equivalent strategy local level 
sections show complement mp smart local strategies enhanced performance 
trials ordered resolution default arbitrary ordering results surprise 
sec www ksl stanford edu projects partitioning tion introduce mechanism automatically inducing efficient orderings partition structure 
partition derived ordering major obstacle effective ordered resolution finding predicate ordering minimize inference 
provides default ordering saw section compared mp sos better strategy 
efficient ordered resolution usually achieved arduous hand crafting predicate ordering theorem proving expert 
section propose automatic partitioning particular pbr tree decomposition algorithms automatically produce predicate ordering 
important contribution paves way improving software ordered resolution providing effective ordered resolution non expert relieving expert arduous hand coding predicate ordering 
describes algorithm inducing symbol ordering computed partitioning 
takes input partition graph partitioned theory ai query ak outputs ord symbol ordering call ordering partition derived ordering 
combined ordered resolution call strategy pdo 
recall ordered resolution uses ordering predicate symbols pdo fact uses ord restricted predicate symbols ignores ordering imposed constant function symbols 
underlying intuition follows mp perform resolution message passing starting partitions farthest away goal partition 
predicates resolved outbound link language resolved partition downstream continue appear subsequent outbound link languages 
way ordering partitions paths goal determines ordering predicates resolved 
procedure partition graph partitioned theory ai query ak 

define iff path 
lout lout 
output language partition ai 

may multiple 
input language partition ai 

initialize ord empty list 

traverse tree furthest leaves root decreasing order ord append ord ai 

ord append ord ak 
algorithm compute predicate ordering 
theorem 
ai partitioning predicates function constant symbols appear partitions tree decomposition corresponding query 
ordered resolution order ord equivalent mp inference partition uses ordered resolution order compatible ord 
proof 
smallest partition 
exactly partition connected contradicting fact tree decomposition guarantees symbol appears partitions appears edges path 
define order symbols iff precedes ord equivalently 
define total order agrees 
pi enumeration predicate symbols notice ordered resolution resolved clauses pi pi highest symbol clauses 
show ordered resolution equivalent mp showing ordered resolution step done mp vice versa 
clauses resolved ordered resolution order partition partition 
assume mp resolve clauses 
means different partitions clauses say sent partition aj order clauses resolved largest partition 
sent partition vocabulary label edges path symbol appears edges path partitions largest symbol meaning appears path appears path subset path appear path largest 
path path includes implies contradicts previous observation appears path sent partition holds 
mp resolve clauses 
direction resolution mp resolution ordered resolution simpler follows theorem 
interesting observe conversely generate theory partitioning symbol ordering expert 
algorithm follows stack containing predicate symbols logical theory designated order ord 
empty stack 
pop symbol create set symbols includes symbols appear axiom set symbols contained set discard 
push continue empty 
set empty graph iteratively pop sets symbols set symbols zi add neighbor set symbols performance comparison reasoning strategies set support sos ordered resolution vanilla mp ordering pdo mp focused support mfs combinations strategies 
representative selection queries show number resolution steps required answer query strategy expressed percent number steps required strategy 
columns exceeding represent timeouts 
shares largest number symbols 
empty create partition ai set symbols zi ai includes axioms zi 
call resulting set partitions ord graph ord 
theorem 
assume ord order nonlogical symbols theory query final symbols order ord 
ordered resolution order ord equivalent mp partitions ord graph ord inference partition uses ordered resolution order compatible ord 
proof sketch 
see mp perform resolutions ordered resolution order need notice partition corresponds bucket ordered resolution algorithm 
mp resolves predicate partition resolved highest predicate 
resolved ordered resolution order proposition 
pdo sound complete 
experimental evaluation illustrated pdo strong showing 
performance comparable sos queries queries pdo orders magnitude efficient sos 
unsurprisingly pdo invariably outperformed ordered resolution default ordering 
pdo outperformed vanilla mp focus reasoning local level 
mp augmented focused support mfs combination pdo comparative advantage largely disappears 
section see perfor mance pdo enhanced combining strategies 
new restriction strategy mfs resolution mp operates global level focus reasoning restricting partition resolution passing relevant results goal partition 
mp impact local reasoning reasoning partitions 
fact strengths mp individual partitions may employ heterogeneous reasoning methods including specialpurpose reasoners optimized particular domains 
described section global soundness completeness mp follow soundness completeness reasoners partition 
mp orchestrate collaborative reasoning disparate systems provided share common vocabulary 
absence local strategy limits gains efficiency 
section exploit pbr propose new restriction strategy mfs resolution combines global mp local strategy focused sublanguage resolution 
vanilla mp possible resolutions performed partition resolvents propagated partitions outbound link language 
propose local resolution strategy focused support takes inspiration strategies described sol restriction resolution 
definition focused support restriction 
clausal theory designated subset 
initialize set clauses non exhaustively include symbols clauses may resolved resolved predicate query strategy ordering sos mp pdo mfs mp sos pdo sos mfs sos number resolution steps vn runtime seconds vn absolute performance metrics reasoning strategies strategy ordered resolution default ordering set support sos vanilla mp partition derived ordering pdo mp focused support mfs combinations 
representative selection queries show number resolution steps runtime required answer query strategy 
blanks indicate timeouts 
resolvent added focused support local strategy pbr clausal theory individual partition ai partitioned theory output communication language partition ai 
focused support sound complete generating consequences restricted vocabulary proof relies lemma lemma 
ordering predicate symbols finite unsatisfiable set clauses model semantic deduction empty clause roughly deduction resolves clauses predicate satisfies satisfy largest predicates preset order 
theorem 
focused support sound complete generation definition 
proof 
clausal theory clause show focused support eventually generates result assume consistent 
model satisfies definition focused support strategy lemma says resolution model ordering predicate symbols 
resolves remove resolution graph proof yield deduction shows deduction show focused support deduction need show restricting resolution occur non literals prevent proving choose order symbols come sentences symbols resolve sentences clearly focused support condition holds 
move clauses completely symbols outside distinguished set resolve sentences symbols symbols take precedence ones focused support condition held 
resolvent literals put put assume consistent 
shown deduction consistent 
sentences resolution semantic support condition equivalent ordered resolution order specifying literals resolved literals known complete consequence finding know proof done 
mfs resolution combination mp focused support restriction partitions 
discussed section mp sound complete provided partition uses reasoning procedure sound complete consequence finding 
focused support procedure mfs resolution sound complete corollary soundness completeness mfs 
mp focused support restriction mfs resolution sound complete 
relative performance mfs depicted encouraging 
queries performance mfs comparable sos minority queries mfs orders magnitude efficient 
examined performance mfs combined pdo mfs pdo slightly superior mfs 
mfs mfs pdo incomplete 
section discusses incomplete strategy mfs sos exhibited better performance 
theorem incompleteness mfs pdo 
pdo focused support restriction mfs pdo incomplete 
incompleteness mfs pdo seen noticing focused support stricter sos semantic resolution 
add pdo restriction eliminate resolutions clause share predicates clauses negated query 
interestingly mfs pdo close complete sense 
close examination proof theorem reveals apply predicate order restriction clauses contain predicates maintain completeness consequence finding 
simple modification mfs pdo allowing clauses focused support partition resolve non literal considerations ordering complete 
combinations strategies preceding sections examined reasoning strategies shown complete mp pdo mfs 
section examine combinations strategies sos 
combinations complete interesting theoretical properties practice showed best performance strategies evaluated 
results experimental evaluation summarized 
combine mp sos maintain global set support initially contains negated query allow resolution clauses partition support 
messages sent goal partition mp away resolution occur goal partition place negated query partition language includes 
case sos resolution occur partitions negated query appears 
clearly mp sos combination complete 
information crucial proving query may reside partitions participate computation 
algorithm determines clauses relevant proving query simple dynamic way 
sort inference extensively large kbs selection kb fragments needed answer query done hand 
automatic selection mechanism may suffice applications experiments bear 
argument incompleteness mp sos shows pdo sos incomplete 
follows relationship mp ordered resolution performance comparison combinations reasoning strategies 
contrast vertical axis normalized relative sos 
theorem 
pdo predicate ordering determined partitioning mp pdo sos restricts resolution clauses include predicates appear support 
despite incompleteness pdo sos performed extremely experimental evaluation 
incompleteness encountered practice pdo sos combination answered query fewer steps strategy combination strategies 
combination mfs sos mfs sos incomplete mfs restricted form mp mp sos incomplete 
incompleteness revealed experimental testing mfs sos combination failed answer queries 
fail mfs sos highly efficient answering queries steps pdo sos 
summary related propose analyze experimentally evaluate variety strategies improve efficiency resolution fol theorem provers 
propose algorithm automatically induce predicate orderings ordered resolution 
experimental results confirm significant performance improvements techniques 
promising practical contributions theorem proving community manner designed facilitate replication 
software data see www ksl stanford 
edu projects partitioning 
results particularly significant query answering commonsense kbs size structure distributed nature suited structure efficiency improvements 
diversity related 
algorithm induce predicate ordering graphical structure particular treewidth approximation algorithms fol resolution 
current automated approaches ordering predicates properties predicates arity knuth bendix method applied uniform weight function generate arbitrary default ordering lexical 
significantly distinguished csps propositional reasoning partition subsequently order graph includes nonlogical symbols theory propositional methods order nodes graph correspond propositional symbols ordering dynamic 
focused support restriction mfs resembles resolution sol resolution computation resolvents target language 
contrast resolution target language closed subsumption 
clear way determine predicate ordering 
mfs resolution combines focused support predicate ordering imposed mp generating significant improvement performance 
little experimental studying behavior theorem proving strategies large kbs commonsense kbs 
success rate leading theorem provers otter setheo protein tap formal verification problems hundreds axioms shown depend strongly finding relevant axioms needed proofs 
presents principled method successfully elicit set relevant axioms pdo sos strategy notably successful 
plan continue experimental evaluation additional kbs 
hope demonstrate mp collaborative theorem proving distributed kbs diverse special purpose reasoners 
note pbr naturally enables parallelization fol theorem proving task 
benefits parallelism evaluated little implementation effort 
mark stickel vinay chaudhri adam pease richard waldinger assistance feedback comments 
research supported part darpa navy darpa onr muri fund onr muri fund nsf ecs 
amir 
efficient approximation triangulation minimum treewidth 
proc 
uai pages 
mk 
amir mcilraith 
logical reasoning 
proc 
kr pages 
mk 

chang 
lee 
symbolic logic mechanical theorem proving 
academic press 
cohen schrag jones pease lin starr burke 
darpa high performance knowledge bases project 
ai magazine 
darwiche 
utilizing knowledge semantics graph algorithms 
proc 
aaai pages 
dechter pearl 
tree clustering schemes constraint processing 
proc 
aaai 
del val 
new method consequence finding compilation restricted language 
proc 
aaai pages 
aaai press mit press 
inoue 
linear resolution consequence finding 
artificial intelligence aug 
karypis 
multilevel algorithms multi constraint hypergraph partitioning 
technical report university minnesota department computer science minneapolis mn 
knuth bendix 
simple word problems universal algebras pages 
pergamon press oxford 
leighton rao 
multicommodity max flow min cut theorems designing approximation algorithms 
acm 
mcilraith amir 
theorem proving structured theories 
ijcai pages 
mk 
pease 
standard upper ontology 
nd international conference formal ontology information systems fois pages oct 
ontology 
com 
reif 
theorem proving large theories 
proc 
ftp pages 
rish dechter 
resolution versus search strategies sat 
automated reasoning 
rose 
triangulated graphs elimination process 
discrete mathematics 

automatic theorem proving renamable semantic resolution 
acm 
stickel waldinger chaudhri 
guide 
technical report sri international 
sutcliffe 
tptp problem library cnf release 
automated reasoning 
www cs miami 
edu tptp 
tison 
generalization consensus theory application minimization boolean functions 
ieee transactions electronic computers ec 
keen theobald topic 
version 
proc 
cade pages 
springer 
