code red worm propagation modeling analysis cliff zou dept electrical computer engineering univ massachusetts amherst ma ecs umass edu code red worm incident july stimulated activities model analyze internet worm propagation 
provide careful analysis code red propagation accounting factors dynamic countermeasures taken isps users slowed worm infection rate code red propagation caused congestion troubles routers 
classical epidemic model derive general internet worm model called worm model 
simulations numerical solutions factor worm model match observed data code red worm better previous models 
model leads better understanding prediction scale speed internet worm spreading 
categories subject descriptors models principles miscellaneous general terms security human factors keywords internet worm modeling epidemic model factor worm model 
easy access wide usage internet primary target malicious activities 
particular supported part aro contract daad contract dt cx department justice office justice programs darpa contract nsf eia 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
ccs november washington dc usa 
copyright acm 
gong dept electrical computer engineering univ massachusetts amherst ma gong ecs umass edu don towsley dept computer science univ massachusetts amherst ma towsley cs umass edu internet powerful mechanism propagating malicious software programs 
worms defined autonomous programs spread computer networks searching attacking infecting remote computers automatically developed years morris worm 
today computing infrastructure vulnerable 
code red worm nimda worm incidents shown vulnerable networks fast worm spread furthermore weaver design principles worms spread faster 
order defend worms need understand various properties worms propagation pattern lifetime worms impact patching awareness human countermeasures impact network traffic network topology accurate internet worm model provides insight worm behavior 
aids identifying weakness worm spreading chain provides accurate prediction purpose damage assessment new worm threat 
epidemiology research exist deterministic stochastic models virus spreading models exist internet worm propagation modeling 
kephart white chess ibm performed series studies viral infection epidemiology models 
traditional epidemic models homogeneous sense infected host equally infect susceptible hosts 
considering local interactions viruses time extended epidemic models nonhomogeneous networks random graph dimensional lattice tree hierarchical graph 
time local interaction assumption accurate sharing disks today longer valid worm modeling worms propagate internet able directly hit target 
addition authors susceptible infected susceptible sis model viruses modeling assumes cured computer immediately 
sis model suitable modeling single worm propagation infected computer patched cleaned immune worm 
wang simulation results simple virus propagation clustered tree hierarchical networks 
showed certain topologies selective immunization significantly slow virus propagation 
tree hierarchic topology suitable internet 
code red worm incident july stimulated activities model analyze internet worm propagation 
staniford classical simple epidemic equation model code red spread right july th incident 
model matched pretty limited observed data 
heberlein visual simulation code red worm propagation incident com 
moore provided valuable observed data detailed analysis code red worm behavior 
weaver provided worm design principles produce worms spread faster code red nimda worms 
previous worm modeling neglects dynamic effect human countermeasures worm behavior 
wang investigated immunization defense 
considered static immunization means fraction hosts worm propagates 
reality human countermeasures dynamic actions play major role slowing worm propagation preventing worm outbreaks 
new viruses worms come day 
die away infecting computers due human countermeasures 
human countermeasures virus worm include anti virus softwares special programs clean infected computers 
patching upgrading susceptible computers immune virus worm 
setting filters firewalls routers filter block virus worm traffic 
disconnecting networks computers effective methods available 
epidemic modeling area virus infection rate assumed constant 
previous internet virus worm models treat time required infected host find target infected susceptible constant 
author treated infection rate random variable considering unsuccessful ip scan attempts worm 
mean value infection rate assumed constant time 
constant infection rate reasonable modeling epidemics may valid internet viruses worms 
analysis code red incident july th find factors affecting code red propagation dynamic countermeasures taken isps users slowed worm infection rate propagation code red caused congestion troubles routers 
accounting dynamic aspects human countermeasures variable infection rate derive accurate worm propagation model factor worm model 
simulation results numerical solutions show model matches observed code red data 
particular explains decrease code red scan attempts observed hours july th code red ceased propagation previous worm models able explain phenomenon 
shows code red didn infect susceptible online computers utc concluded 
code red infected roughly susceptible online computers time 
rest organized follows 
section gives brief description code red worm incident july 
section give brief review classical epidemic models point problems exhibit modeling internet worms 
section describe factors unique internet worm propagation new internet worm model factor worm model 
code red simulations new model section 
derive set differential equations describing behavior worm model section provide corresponding numerical solutions 
simulation results numerical solutions match observed code red data 
section concludes discussions 

background code red worm june th serious windows iis vulnerability discovered 
month version code red worm exploited vulnerability emerged july th 
due code error random number generator propagate 
truly strain worm code red version began spread utc july th 
new worm implemented correct random number generator 
generated threads 
threads randomly chose ip address tried set connection port target machine system english windows system th worm thread infected system web site thread infect systems 
connection successful worm send copy victim web server compromise continue find web server 
victim web server connection setup worm thread randomly generate ip address probe 
timeout code red connection request programmed seconds 
code red exploit windows iis server installed infect windows nt jump address code invalid nt 
code red worm version programmed uniformly scan ip address space 
web server survey showed windows iis web servers june 
conservatively assume iis servers online july th average worm need perform ip scans find windows iis server 
worm need average ip scans find target number windows iis servers online 
code red worm continued spread july th utc july th worm stopped propagation design 
independent observed data sets available code red incident july th 
goldsmith collected types data class networks independently number code red worm port scans hour number unique sources generated scans hour 
number code red scan attempts data sets plotted fig 
number unique sources fig 
functions time 
scan attempt number code red scan attempts hour class networks dave goldsmith ken utc hours july code red scan attempts unique source number code red scan unique sources hour class networks dave goldsmith ken utc hours july code red scan unique sources code red scan data class networks code red worm programmed choose random ip addresses scan ip address equally scanned code red worm 
explains code shown fig 

class networks covers th ip address space number unique sources number scans fig 
portion active code red worms internet time 
correctly exhibit pattern code red propagation uniform scan code red reason data study code red propagation 
infected computer generate simultaneous scans scan thread number worm scans bigger number unique sources 
fig 
shows number unique sources number scans identical time able represent code red propagation internet 
example number active code red infected computers internet increased times hour number unique sources number scans observed goldsmith increase times 
moore provided valuable data set collected code red worm day july th 
data collected goldsmith hour moore recorded time attempt infected host spread worm networks 
number infected hosts data non decreasing function time 
number infected hosts observed shown fig 
function time rebooted code red infected computer went back susceptible state 
affect number infected hosts shown fig 
host source ip scan data collected moore 
moore considered patching filtering collected code red data 
authors observed course day initially infected machines patched rebooted filtered consequently ceased probe internet 
host previously observed code red propagation number infected hosts caida org infected considered authors deactivated unsolicited traffic observed 
number observed deactivated hosts time shown fig 

code red worm programmed spreading utc july th number infected hosts stopped increasing utc 
curve fig 
kept increasing extent 
abrupt rise host inactivity fig 
utc due worm design stopping infection midnight 
interested issues explain code red worm propagation curves shown fig 
fig 

factors affect spreading behavior internet worm 
derive accurate model internet worm 

epidemic models model code red worm propagation computer viruses worms similar biological viruses self replicating propagation behaviors 
mathematical techniques developed study biological infectious diseases adapted study computer viruses worms propagation 
observed code red propagation number deactivated hosts caida org epidemiology area stochastic models deterministic models exist modeling spreading infectious diseases 
stochastic models suitable small scale system simple virus dynamics deterministic models suitable large scale system assumption mass action relying law large number 
model internet worms propagation consider large scale network thousands millions computers 
consider deterministic models 
section introduce classical deterministic epidemic models bases factor internet worm model 
point problems try model internet worm propagation 
epidemiology modeling hosts vulnerable infected virus called susceptible hosts hosts infected infect called infectious hosts hosts immune dead infected virus called removed hosts matter infected 
host called infected host time infected virus matter infectious removed time terminology computer worms modeling 
classical simple epidemic model classical simple epidemic model host stays states susceptible infectious 
model assumes host infected virus stay infectious state forever 
state transition host susceptible infectious 
classical simple epidemic model finite population dj dt number infected hosts time size population infection rate 
hosts infectious hosts susceptible 
fraction population infectious time dividing sides yields equation da ka dt value dynamic curve 
classical simple epidemic model time classical simple epidemic model denote number susceptible hosts time replace byn get ds 
dt equation identical minus sign 
curve fig 
remain rotate degrees point 
fig 
eq 
show roughly equal number infectious hosts nearly exponentially increased 
propagation rate begins decrease susceptible hosts infected 
staniford code red propagation model data provided utc july th 
model captures key behavior half part code red dynamics 
essentially classical simple epidemic model 
provide detailed analysis accounts important factors involved code red spreading 
part effort explain evolution code red spreading phase propagation 
classical epidemic model match phase code red spreading explain part code red propagation hours utc worm scans kept decreasing fig 

simple epidemic model fig 
authors concluded code red came saturating utc susceptible iis servers online july th infected time 
numerical solution model section shows susceptible iis servers online infected utc july th 
classical general epidemic model model epidemiology area model considers removal process infectious hosts 
assumes epidemic contagious disease infectious hosts recover die host recovers disease immune disease forever hosts removed state recover die disease 
host stays states time susceptible infectious removed 
host system state transition susceptible infectious removed stays susceptible state forever 
denote number infectious hosts time denote number removed hosts previously infectious hosts time removed host infected population time host infected removed circulation time denote number infected hosts time matter infectious state removed 

simple epidemic model model dj dt dr dt infection rate rate removal infectious hosts circulation number susceptible hosts time size population 
define relative removal rate 
interesting result coming model di 
dt new susceptible host generated number susceptible hosts monotonically decreasing function time ifs di dt time 
words initial number susceptible hosts smaller critical value epidemic outbreak 
model improves classical simple epidemic model considering infectious hosts recover die time 
model suitable modeling internet worm propagation 
internet cleaning patching filtering countermeasures worms remove susceptible hosts infectious hosts circulation model accounts removal infectious hosts 
second model assumes infection rate constant isn true spreading internet worm code red worm 
list table 
frequently notations 
removed hosts circulation worm infected anymore don try infect 

new internet worm model factor worm model propagation real worm internet complicated process 
consider continuously activated worms 
mean worm infectious host continuously tries find infect susceptible hosts case code red worm incident july th 
real world hackers write codes worms arbitrarily worms usually don continuously spread forever example code red worm stopped propagation utc july th 
worm models including model continuous propagation stopping time 
predict stopping event manually analyzing worm code 
consider worms propagate topology constraint case code red 
topology constraint means infectious host may able directly reach infect arbitrary susceptible host needs infect hosts route target reach target 
worms code red belong worms topology constraint 
hand email viruses melissa love bug depend logical topology defined users email address books propagate 
propagations topology dependent need modelled considering properties underlining topology discussed 
factors affecting code red worm propagation studying reports papers code red incident july th find factors considered traditional epidemic models affected code red worm propagation human countermeasures result removing susceptible infectious computers circulation course code red propagation increasing number people aware worm implemented countermeasures cleaning compromised computers patching upgrading susceptible computers setting filters block worm traffic firewalls edge routers disconnecting computers internet 
decreased infection rate constant rate large scale worm propagation caused congestion troubles internet routers slowed code red scanning process 
human countermeasures cleaning patching filtering played important role defending code red worm 
microsoft reported iis index server patch downloaded times august st 
code red worm stopped propagation utc july th programmed august st 
scheduled recurrence worm august st substantially damaging appearance july th large number machines patched 
course code red propagation july th initially infected machines patched rebooted filtered consequently ceased probe networks susceptible hosts 
moore provided data number deactivated hosts time fig 

host previously infected considered deactivated authors observed unsolicited traffic 
shows number deactivated hosts kept increasing day number small fig 
shows infected computers fig 
infected computers deactivated code red worm ceased propagation utc july th 
large scale code red worm propagation july th caused congestion troubles internet routers slowed code red scanning process 
table notations notation explanation number susceptible hosts time number infectious hosts time number removed hosts infectious population time number removed hosts susceptible population time total number hosts consideration number infected hosts time infection rate time infection delay time simulation representing time code red worm find iis server code red swept internet july th computers infected sent worm scan traffic continuously 
fig 
shows computers infected day 
considering infected computer threads continuously scanning parallel infected computers july th worm propagation generated huge number small scanning packets 
volume packets relatively small compared normal internet traffic huge quantity packets caused congestion troubles routers especially edge routers limited resources 
code red worm generates random ip addresses scan ip addresses example broadcast ip addresses unknown addresses seen rarely seen edge routers routers normal conditions 
code red spreading july th huge quantity packets abnormal destination ip addresses caused congestion troubles edge routers 
major router vendor large number code red scans sent random ip addresses caused edge routers fill arp caches exhaust memories restart 
high traffic load triggered defects routers caused low routers reboot 
decreased worm infection rate congestion caused possible bgp storm don know bgp storm really happened 
showed existed strong correlations bgp message storms code red nimda worm propagation periods 
global internet routes unstable autonomous systems transient route failures bgp storms 
authors argued bgp stood worm attack bgp storm happened 
new worm propagation model worm model order account slowed worm scan rate infection rate eq 
modeled function time 
worm point view human countermeasures remove hosts worm spreading circulation including hosts infectious hosts susceptible 
words removal process consists parts removal infectious hosts removal susceptible hosts 
ber removed hosts infectious population denote number removed hosts susceptible population 
principle deriving model change number susceptible hosts time follows equation dq 
dt ds dq 
dt dt note holds time substituting 
yields differential equation describing behavior number infectious hosts di dt dr 
dt refer worm model described eq 
factor worm model 
strictly speaking worm propagation discrete event process 
treat worm propagation continuous process continuous differential equation describe 
approximation accurate large scale system widely epidemic modeling internet traffic fluid modeling internet worm propagation large scale problem suitable continuous differential equation model 
order solve eq 
know dynamic properties andq 
impact worm traffic internet infrastructure spreading efficiency worm code andq involve people awareness worm patching filtering difficulties 
specifying dynamic properties derive complete set differential equations worm model 
discuss section 
section simulate factor worm model validate observed code red worm propagation data fig 


simulation code red worm factor worm model description simulation model simulation model propagation code red worm discrete time 
system simulation consists hosts reach directly topology issue simulation 
host stays states time susceptible infectious removed 
host removed state matter previous infected susceptible 
state transition host susceptible infectious removed susceptible removed 
simulation hosts initially infectious susceptible 
copy worm infectious host sends sequence infection attempts lifetime 
infection attempt worm randomly chooses host population infect 
infection delay time consecutive infection attempts represents time required code red worm find windows iis server random ip scans regardless host infected susceptible 
infected host change infection behavior infected copies worm 
capture cleaning patching filtering impacts worm propagation dynamically hosts simulation discrete time randomly choose non hosts regardless infectious susceptible 
total number hosts infected time including infectious hosts previously infected hosts monotonically increasing function time denote total number removed hosts 
run immunization process discrete simulation time aj 
vary infection delay time capture slowed worm infection process 
random variable normal distribution mean value variance model parameters 
simulation equation generate infection delay time worm copy base infection delay time normal distribution simulate randomness scan process worm copy 
power exponent adjust sensitivity infection delay time number infected hosts 
simulation experiments simulate scenarios 
classical simple epidemic model 
consider factors discussed simulated model letting 
second scenario consider decreased infection rate andd 
third scenario consider effects patching filtering constant infection rate 
scenario factor worm model allowing immunization decreased infection rate asin anda 
scenario run simulation times derive mean value number infected hosts time 
scenarios plotted fig 
functions time simulation parameters initially infected hosts 
purpose comparison plot fig 
right simulation results fig 

comparing factor worm model simulation curve blue solid line fig 
observed code red data fig 
observe considering removal processes worm decreased infection rate match observed data better original code red worm simulation black dotted line fig 

number infected hosts increases exponentially 
propagation speed decreases total number infected hosts reaches population 
decreasing propagation speed happens earlier original code red simulation 
internet worms adjusting parameters simulation adjust curve match real data understand characteristics worms investigate 
investigate variable simulation simulation runs factor model 
maximum minimum values number infected hosts time derive envelope curves contain curves 
envelope curves close distinguish 
maximum difference curves population size words worm propagation deterministic process reason deterministic differential equation model large scale internet worm propagation essentially stochastic process 
reason random events little effect worm propagation population huge hosts worm copy infects independently 
worm propagation point view huge number random events eventually average 

numerical analysis factor worm model factor worm model general worm model undetermined dynamic parameters 
assume infection rate consider removal process susceptible population derive exactly model 
general factor worm model get closed form analytical solutions 
analyze model numerical solutions differential equation matlab simulink need determine dynamical equations describing factor worm model 
removal process infectious hosts assumption model total number infected hosts code red propagation simulation original code red simulation consider slowing infection rate consider human countermeasures factor worm model time code red worm simulation different models 
uses dr 
dt removal process susceptible hosts complicated 
worm propagation people don know exists kind worm 
consequently number removed susceptible hosts small increases slowly 
computers infected people gradually aware worm importance defending 
speed immunization increases fast time goes 
speed decreases number susceptible hosts shrinks converges zero susceptible hosts available 
description removal process susceptible hosts looks similar typical epidemic propagation 
classical simple epidemic model model dq 
dt model decreased infection rate bythe equation initial infection rate 
exponent adjust infection rate sensitivity number infectious hosts 
means constant infection rate 
assumptions write complete differential equations worm model ds dt dr dt dq dt dq dt parameters obtain numerical solutions factor worm model plot fig 

illustrates behavior number infected hosts caida org 
comparison plot number infected hosts classical simple epidemic model 
classical simple epidemic model derived factor worm model simply setting 
number hosts factor worm model numerical solution classical simple epidemic model infected hosts infectious hosts removed hosts susceptible time numerical solution factor worm model comparing factor model solution 
number infected hosts code red worm simulation fig 
see consistent matched 
shows number infectious hosts reaches maximum value 
decreases number removed infectious hosts unit time greater number newly generated infectious hosts time 
explain phenomenon analyzing model equation 
derive di dt dr dt number susceptible hosts monotonically number unique sources code red scan unique source ip data networks code red scans hour utc hours july observed code red scan unique sources hour hour decreasing function time 
maximum number infectious hosts max reached time tc tc tc 
tc decreases tc 
behavior number infectious hosts 
explain code red scan attempts dropped hours july th 
data collected smith contain number code red infectious sources sent scans hour 
tells computers infectious hour july th number observed infectious sources corresponds model 
plot average values data sets fig 

plot fig 
observed data fig 
derived model shown fig 
observed data july th utc 
code red worm stopped propagation utc july th 
shows matched quite 
classical simple epidemic model explain dropping code red propagation hours july th 
simple epidemic model fig 
observed data fig 
authors concluded code red came saturating utc july th susceptible iis servers online july th infected utc 
numerical solution model shown fig 
shows roughly susceptible iis servers online infected time 

accurate internet worm model model code red worm propagation 
internet worms similar viruses epidemic research area epidemic models model internet worms 
epidemic models accurate 
capture specific properties internet worms 
checking code red worm incident networks properties find major factors affect internet worm propagation number infectious hosts comparison model observed data observed code red infectious hosts factor worm model utc hours july comparison observed data model effect human countermeasures worm spreading cleaning patching filtering disconnecting computers networks slowing worm infection rate due worm impact internet traffic infrastructure 
considering factors derive new general internet worm model called factor worm model 
simulations numerical solutions factor worm model show model matches observed code red worm data july th 
factor worm model increasing speed number infected hosts slow susceptible hosts infected 
explains earlier slowing code red infection july th fig 

number current infected hosts fig 
matches corresponding observed data quite shown fig 

explains code red scans dropped hours july th previous worm models explain phenomenon 
due factors affect internet worm propagation exponentially increased propagation speed valid phase worm 
traditional epidemic model worm prediction overestimate spreading damages worm 
factor worm model general internet worm model modeling worms topology constraint 
isn just specific model code red 
slowing worm infection rate happen worm sweeps internet causes troubles internet traffic infrastructure code red worm nimda worm 
human countermeasures cleaning patching filtering disconnecting computers play major role kinds viruses worms propagations matter fast slow viruses worms propagate 
human countermeasures successfully slow eventually eliminate viruses worms propagation 
real world viruses worms coming day show propagate seriously internet 
eventually pass away due human countermeasures 
viruses worms contagious code red nimda 
cleaning patching rate exceeds viruses worms propagation rate viruses worms gradually disappear internet circulation 
internet worm models limitations 
example factor worm model worm models suitable modeling continuously spreading worm continuously spreading period worm 
predict arbitrary stopping restarting events worm stopping code red propagation utc july th restarting august st find events manually code analysis 
factor worm model select parameters numerical solutions match observed code red data 
simple epidemic model need determine parameter 
prediction damage assessment viruses worms need research find analytical way determine parameters 

anderson may infectious diseases humans dynamics control 
oxford university press oxford 
andersson britton 
stochastic epidemic models statistical analysis 
springer verlag new york 
bailey 
mathematical theory infectious diseases applications 
hafner press new york 
cert advisory ca 
continued threat code red worm 
www cert org advisories ca html cert advisory ca 
love letter worm 
www cert org advisories ca html cert advisory ca 
melissa macro virus 
www cert org advisories ca html cisco security advisory code red worm customer impact 
www cisco com warp public cisco codered worm pub shtml cisco tech 
notes dealing high cpu utilization resulting code red worm 
www cisco com warp public ts worm shtml cnn news 
code red worm minimized 
www cnn com tech internet code red worm cowie yuan 
global routing instabilities code red ii nimda worm propagation 
www com projects bgp instability digital security 
ida code red worm 
www com html research advisories html digital security 
worm analysis 
www com html research advisories html 
re possible codered connection attempts 
lists com incidents html news 
code red lessons big small 
www com article asp 
mathematical modeling epidemiology 
springer verlag new york 
goldsmith 
maillist possible codered connection attempts 
lists com incidents html heberlein 
visual simulation code red worm propagation patterns 
www incidents org archives intrusions msg html incidents org diary archive 
www incidents org diary july php web server survey june 
www com survey index html kephart white 
directed graph epidemiological models computer viruses 
proceedings ieee security privacy 
kephart white 
computers epidemiology 
ieee spectrum 
kephart white 
measuring modeling computer virus prevalence 
proceedings ieee security privacy 

worm calls doubt ability protect net 
news com com html 
microsoft reveals web server hole 
news com com html matlab simulink 
mathworks misra gong towsley 
fluid analysis network aqm routers supporting tcp flows application red 
proceedings acm sigcomm 
moore 
spread code red worm 
www caida org analysis security codered analysis xml 
evolving virus threat 
rd proceedings baltimore maryland 

info analysis code red 
www org library texts malware commu codered php spafford 
internet worm incident 
esec nd european software engineering conference coventry united kingdom 
staniford paxson weaver 
internet spare time 
th usenix security symposium san francisco august 
wang knight elder 
viral propagation effect immunization 
proceedings th acm annual computer applications conference new orleans la 
wang zhao pei bush massey wu zhang 
observation analysis bgp behavior stress 
internet measurement workshop france november 
weaver 
worms potential fast internet plagues 
www cs berkeley edu html 
