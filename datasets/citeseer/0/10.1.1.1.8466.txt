foundations service ontologies aligning owl dolce peter mika department business informatics vrije universiteit amsterdam netherlands cs vu nl aldo gangemi laboratory applied ontology loa institute cognitive sciences technology national research council rome italy gangemi ip rm cnr clarity semantics rich formalization semantics important requirements ontologies designed deployed large scale open distributed systems envisioned semantic web 
especially important description web services enable complex tasks involving multiple agents 
initiatives semantic web community describing web services owl attracts lot interest development 
identify problematic aspects owl suggest enhancements alignment foundational ontology 
contribution core ontology services tries fill epistemological gap foundational ontology owl 
reused align web service description languages 
demonstrate applicability aligning owl standard example called 
categories subject descriptors information systems miscellaneous information storage retrieval online information services web services general terms languages design keywords semantic web web services daml owl dolce descriptions situations core ontology services 
ontologies basic infrastructure semantic web idea hinges possibility shared vocabularies describing resource content capabilities 
clarity semantics rich formalization semantics important requirements ontologies designed deployed large scale open distributed systems envisioned semantic web 
copyright held author owner 
www may new york ny usa 
acm 
daniel oberle institute applied informatics formal description methods aifb university karlsruhe germany oberle aifb uni karlsruhe de marta sabou department artificial intelligence vrije universiteit amsterdam netherlands marta cs vu nl due fact ontologies facilitate mutual understanding enabling effective cooperation multiple artificial agents establishing consensus mixed society artificial agents cooperate human beings 
foundational ontologies fulfill requirements serve starting point building new domain application ontologies provide point easy rigorous comparisons different ontological approaches create framework analyzing integrating existing ontologies metadata 
clarity semantics rich formalization especially important ontologies describing web services enable complex tasks involving multiple agents 
web services important resources web standards developed syntactic description 
initiatives semantic web community semantically describing web services owl known daml attracts lot interest development 
owl ontology general concepts aiming automatic discovery composition invocation web services 
contribution development ontology identify problematic aspects suggest enhancements alignment foundational ontology 
owl suffers conceptual ambiguity lacks concise axiomatization designed loosely offers overly narrow view web services 
typically service descriptions cross boundary information system objects record book external world objects physical book 
reason web services part service value attributed requestor 
believe phenomenon characterize real world services users paying simply information recorded manipulated process includes actual changes effects real world book delivered 
addition descriptions independent views world real imagined various actors involved may significantly differ notions information vs book granularity descriptions high level tasks vs detailed processes 
similarities views level constructs describe views discuss roles played number objects plans courses events realized different sequences activities 
alignment discovered possible enhancements problematic aspects ontology 
findings benefit designers users owl 
detail owl coalition standard example called aligned 
furthermore core ontology services developed middle layer aligning web service description languages 
lastly note contribution limited concrete results reported consists examples benefits alignment foundational ontologies description alignment method 
structured follows 
related section 
section identifies explains problematic aspects owl seen motivation 
section presents main body viz 
alignment owl dolce foundational ontology 
includes short foundational ontology alignment example 
section details suggested improvements problematic aspects introduced 
conclude section 
related previous efforts responded problems owl 
briefly discuss initiatives aware describing motivation parts owl focus techniques initial results available 
initiative motivated need formal semantics describe simulate automatically compose test verify web service compositions 
focuses solely owl servicemodel provides constructs specifying composition 
authors establish situation calculus semantics main elements owl servicemodel atomic composite processes conditional effects outputs translate operational semantics provided petri nets 
knowledge representation formalism rich theoretical tool support various composition tasks 
semantics allowed re existing simulation modelling environment 
authors able identify tractable subsets owl expressive efficient analysis verification composition model checking 
second effort focuses owl service model proposes concurrent operational semantics incorporates subtype polymorphism 
motivation provide initial semantics discover possible ambiguity developed language 
serve developing techniques automated verification owl models 
web standards provide similar semantics easier compare understand strengths weaknesses 
authors efforts mutually acknowledge similarity proposed semantics minor details discussed 
aiming increased formal axiomatization wish explain owl concepts terms foundational ontology reflects generally accepted theories linguistics philosophy cognitive sciences show ontological analysis owl brings surface irregularities model just semantics promises 
long term benefits alignment allows comparison aligned ontologies goal stated 
result extend analysis entire owl model 
methodological perspective previous approaches provide independent reconstructions owl alignment embed owl model larger context offered foundational ontology 
deduce owl address difference real life object book representational counterpart information system isbn number important ontological distinction 
semantics established previous reflected current owl formalization model 
case model inherits axiomatization available owl dl version dolce 

problematic aspects owl section identifies illustrates problematic aspects understanding owl foundational perspective 
revisit discussing suggestions improvements section 
relate issues question ontology quality 
ontology quality topic provides criteria evaluation extensional coverage concerning amount entities supposed described ontological theory intensional coverage concerning kinds entities described ontological theory precision concerning axioms required describe just models ontology designer intends cover 
criteria ontology approximate domain discourse supposed described signature maps kinds entities intended designer axiomatize predicates order catch intended models exclude unintended ones 
introduce problems encountered owl 
conceptual ambiguity features insufficient intensional coverage 
second third poor axiomatization loose design cases insufficient precision 
third problem weakness mainly inherited limitations owl expressivity 
fourth narrow scope case extensional intensional coverage 
conceptual ambiguity clear conceptual framework owl difficult users understand intended meaning concepts relationship concepts relate modelled services 
concepts clarified owl coalition public mailing lists addition web services architecture wsa working group introduced owl ontology web service concepts independent owl probably leads necessity alignment ontologies needs explication respective assumptions 
conceptual ambiguity affects particularly upper level owl shown 
notion service introduced follows service mean web sites merely provide static information allow effect action change world sale product control physical device 
read web accessible program sensor device declared service regarded service 
definitions operationalized concept web site web appears ontology 
notion service characterized solely cf www daml org services cf www org wsa relationship number service model number sufficient understand concept service considered owl 
note term web service closely related terms service service suffer overloading 
search possible formalizations variety definitions emphasizing different aspects service offering functionality usefulness particular task interoperability standards providing interface existing system 
refer reader compares contrasts definitions business literature software engineering information sciences 
service presents supports describes serviceprofile servicemodel owl service ontology poor axiomatization owl goal machine processable operates open environment 
important concept characterized rich axiomatization order support meaningful inferences 
general believe level commitment owl need raised shall support complex reasoning tasks put forward coalition 
issue mentioned previous section poor axiomatization reflects lesser problem definition concepts clear axiomatization ontology needs improvement 
respects owl shows characteristics typical application ontology firm concept relation hierarchy concepts relations direct subconcepts top level concept relation relations take owl thing domain range 
propose adding foundations owl level axiomatization increased 
alignment foundational ontology means relating concepts relations ontology basic categories human cognition investigated philosophy linguistics psychology 
approach advantage restrictions level common sense inherited concepts application ontology 
prompts ontology engineer sharpen notions respect distinctions foundational ontology 
promotes reuse highlighting commonalities especially helps reduce proliferation relations typical application ontologies 
alignment modularized foundational ontology allows selectively import theories ontology mereology time theory demonstrate section aligning control constructs owl ontology plans basic extensions dolce foundational ontology 
loose design problematic aspect owl point view entangled design 
heart problem lies purpose owl providing descriptions various views web services required support number different service related tasks discovery composition invocation 
functional dimension web service descriptions contextualized represent various points view service possi bly different granularity 
views overlapping concern attributes service 
straightforward modularization cases results entangled ontology placement certain knowledge arbitrary intensive mapping required modules 
phenomenon described object oriented design notion aspects proposed encapsulate concerns cross cut concept hierarchy software 
case point application attribute binding owl 
construct attribute binding necessary owl express example output process input process output composite process output subprocesses 
programming equivalences expressed variables 
variables governed rules scoping define boundaries commitment 
owl lacks notion variables argument binding expressed explicit value maps 
shown value map form list attached 
list contain instances valueof concept members valueof concept point single relation single concept relations example case processes process takes output process input list valueof members related concept output relation related concept input relation 
reader may note intended meaning entire construct sensible instantiations process respect equivalences expressed value map encoded axiomatization 
explained lack expressivity description logic 
owls process component owls rdf list rdf owls owls valueof owls process owls owls parameter representation attribute binding owl tedious representation unfortunate consequence solution guess scope commitment represented value map 
owl suggest attaching value map process sub processes involved value map 
argued multiple value map restrictions inputs outputs process resulting service composition expanding collapsing processes 
current owl proposal unclear approach situation 
narrow scope mentioned section scope owl needs extended represent real world services naturally cross lines owl specification mentions ability profile providing views 
actual constructs provided map possible service executions 
enforced 
explanation ordered collection ordering means 
cardinality restrictions missing formalization 
information systems physical world 
owl acknowledges aspect services unclear distinction objects events information system regarding data manipulation data real world objects events external system 
foundational ontology possible required creator description distinctions fundamentally affect ontological nature objects events concerned 
return issue section 
insufficient intensional coverage owl core shows precision top service concept related servicemodel concept cardinality 
means service servicemodel expected hold 
prevents consider alternative service models evaluate relationship servicemodel required customer guideline legal regulation underlying provider system instance 
contribution extend owl relationships mapping descriptions service elements actual service executions covered owl 
relationships directly inherited descriptions situations ontology module dolce introduced section 
alignment section shows align owl foundational ontology 
chosen dolce explained section 
extended ontology descriptions situations detailed 
epistemological gap owl descriptions situations large constructed core ontology services section 
depict owl concepts expressed core ontology services example aligned respectively 
give short summary alignment methodology 
dolce role foundational ontologies serve starting point building new ontologies provide point easy rigorous comparisons different ontological approaches create foundational framework analyzing integrating existing ontologies metadata standards 
conceptualizations contain specifications domain independent concepts relations formal principles derived linguistics philosophy mathematics 
dolce descriptive ontology linguistic cognitive engineering belongs wonderweb project foundational ontology library designed minimal includes reusable widely applicable upper level categories rigorous terms axiomatization extensively researched documented 
upper part dolce taxonomy sketched 
dolce fundamental distinction enduring entities 
main relation endurants objects substances perdurants events processes participation endurant lives time participating perdurant 
example person endurant may participate discussion perdurant 
person life perdurant person participates duration 
qualities seen basic entities perceive measure shapes colors sizes sounds smells weights lengths electrical charges 
spatial temporal qualities encode spatio temporal attributes objects events 
fi nally abstracts spatial temporal qualities qualities 
quality regions sets 
particular regions encode measurement qualities metric conceptual space 
dolce axiomatized modal logic maintained languages particular trade expressivity computational complexity required certain application 
example kif version suited detailed meaning negotiations complete axiomatization 
loom version support ontology driven industrial applications required high expressivity classification services version modal temporal axioms removed transformed order take advantage loom variety description logic incomplete desirable certain settings 
owl dl version currently maintained semantic web applications 
due variety description logic expressed owl dl constructs removed called value maps relation composition 
probably provides best scaled version due completeness owl dl strategy applied porting dolce different languages quite liberal consists finding appropriate naming policy constructs sound natural best modelling practices certain language provided subsumption hierarchy axioms accurate mapping version 
scope mention dolce chosen basis reasons due internal structure rich axiomatization explicit construction principles careful interdisciplinary literature common sense orientedness due modular nature 
fact part wonderweb foundational ontology library dolce mapped foundational ontologies possibly suitable certain applications extended modules covering different domains legal biomedical problems planning contexts lexical resources wordnet lexica 
features internal consistency external openness dolce specially suited needs 
descriptions situations modelling physical objects events dolce quite straightforward intuition comes odds want model non physical objects social institutions plans organizations regulations roles parameters 
difficulty due fact intended meaning non physical objects results statements meaning emerges combination entities 
norm plan social role usually represented set statements concept 
hand non physical objects may change manipulated similar physical entities treated order objects 
means ontology account objects modelling context frame depend 
representation context common problem realistic domains technology society law finance full non physical objects 
order respond modelling requirements developed module dolce called descriptions situations 
results theory ontological contexts capable describing various notions context frame non physical situations topics plans beliefs entities 
features philosophically concise axiomatization 
owl dl version dolce www loa cnr dolce html physical endurant subconcept non physical endurant entity endurant perdurant quality arbitrary sum event stative temporal quality physical 
quality quality region set 
depicted introduces new category situation reifies state affairs constituted entities ground ontology case dolce 
situation satisfies situation description description aligned dolce non physical endurant composed descriptive entities descriptions parameters functional roles courses events 
axioms enforce descriptive component links certain category dolce parameters regions functional roles played endurants courses events sequence perdurants cf 

situation entity endurant non physical endurant description description parameter functional role 
description top level taxonomy dolce course events aligning dolce descriptions model contexts example murder situation reported witness functional role played person endurant testimony 
situation may interpreted alternative descriptions 
captures multiple overlapping alternative contexts may match world model contexts systematic relations elements 
shows practical value applied ontology design pattern re structuring application ontologies require contextualization 
see remainder section case describing web services 
core ontology services descriptions services show clear contextual nature modelled situation descriptions sense dolce descriptions situations 
may consider number different views may exist service view service provider service requestor legal view contract concepts formulate view clearly separate actual objects act independent concepts appearing views 
refer dolce basic extensions ontology plans dolce 
description parameter situation region region requisite functional role functional role endurant requisite modality target course events course events valued played sequences location location participant descriptions situations perdurant different views service need equally detailed 
example commercial advertisements typically feature selected characteristics service 
various views naturally focus different aspects service means descriptions may partially mapped 
directly aligning owl descriptions situations developed core ontology services cos aligned owl sources ontology 
stage alignment common technique conceptual gap source ontologies foundational ontology large 
core ontology services features concise axiomatization detailed reused scenarios purely commercial services 
currently consider frequently occurring descriptions service represents separate viewpoint service offering request agreement assessment norms views may added needs arise 
service views specializations description defined descriptions situations ontology cf 

introduce specializations course event viz 
task service task computational task 
allows model activities information system real world 
axioms ensure service tasks sequence service activities computational tasks sequence computational activities 
activities new kinds perdurants especially introduced shown 
axioms ensure information objects newly introduced non physical endurant participate computational activities 
core ontology services may optionally take advantage number concepts ontology plans module dolce 
allows division tasks elementary complex construction complex tasks elementary ones features 
core ontology services models frequently occurring functional roles 
requestor provider service conceived legally constructed persons agentive legal role dolce executor service considered agentive functional role legal nature 
group roles played instruments services 
include computational inputs outputs formalized instrumentality roles 
comprehensive axiomatization requires computational input played information object 
addition introduce role value objects sense subtype generic dolce 
role distinguishes generic inputs outputs ones value attributed 
usually done actor viewpoint modelled 
note features ontology neglected due lack space 
interested reader referred 
description functional role course events service requirements description service offering description legally constructed person requestor provider 
agentive functional role executor instrumentality role service task task computational task service input service output computational input computational output aligning core ontology services aligning owl core ontology services describe alignment owl core ontology services experiences process 
process alignment proved value early allowing quickly separate concepts ontology clear unique ontological interpretation respect basic categories dolce 
example valueof concept introduced technical reasons see section 
similar arguments hold class models ternary relationship process precondition effect 
valueof class introduced representation purposes real semantics captured ontology similarly distinctions serviceprofile profile servicemodel introduced owl provide flexibility modelling representing conceptual differences 
definition service ambiguous natural text description owl sake argument considered service service offering description serviceprofile servicemodel service offering descriptions parts 
note serviceprofile just expands servicemodel process descriptions 
opinion need separate parameters service name profile 
intention just align owl reorganizing 
concepts printed italics part owl namespace indicated 
leaves open interpretation example case multiple conditional effects process 
service offering description service serviceprofile servicemodel agentive functional role actor 
task service input service output input output aligning owl core ontology services relations servicename regard profile aligned service offering description domain literal range 
notion actor service profile aligned agentive functional role depicted 
concept aligned task concept core ontology services individual control constructs mapped task components included ontology plans 
example repeat control construct aligned cycle task concept kind cyclical task exit condition repetition interval 
example construct maps notion alternate task case task exactly branches shown 
note difference control constructs owl task types core ontology task types tasks sequence activities branching synchro tasks particular sequence planning activities 
disambiguation inputs outputs preconditions effects relatively straightforward core ontology 
input output aligned service input service output respectively 
hand notions precondition effect inherited ontology plans modelled situations linked respective tasks task precondition task postcondition relationships 
conditional outputs conditional effects modelled case task construct 
omitted alignment grounding ontology wsdl focus 
notion software tool core ontology services information object expressed number description systems 
wsdl description system modelled extent required express 
aligning congo example owl coalition uses fictitious book buying service standard example didactic purposes 
provider congo publishes suite programs web 
programs self described names details 
preconditions means task precondition process pc condition pc precondition pc 
refined representation considered model software description sense algorithm 
core ontology services owl alignments available download athttp www cs vu nl research www www daml org services owl examples html profile congo service situation 
contacts task precondition 

played congo played played sequences info object exploitation example defines service instances mainly differ process descriptions 
describes atomicprocess called describes complicated process uses control structures including alternatives conditional executions limit service instance 
explained previous section service aligned service offering description sod profile process descriptions parts 
shows container profile congo book buying service 
profile congo book buying service service offering description servicename literal relations owl 
contacts represents instance actor role played legally constructed person congo situation 
related description inputs played information objects played information objects preconditions 
note preconditions effects aligned additional situations independently satisfying service 
words service model specify preconditions effects case 
features atomicprocess aligned dolce elementary task 
sequences newly introduced service activity called book buying 
inputs outputs exploitation task 
preconditions situations linked task task precondition relation 
similar holds related task postcondition 
mentioned previous section obvious process description just ex info object example 


tension profile description 
inputs outputs identical descriptions creates unnecessary modelling overhead just description solely acting container 
congo example introduces new domain concepts aligned dolce categories 
original process ontology defined concepts cart 
instance defined means owl oneof mastercard visa instances 
alignment subconcept dolce legal document subconcept dolce information object 
note modelled card information artifact physical object information artifact participates execution web service physical card missing 
summary ontology stack summarizes alignment effort 
dolce foundational ontology extended descriptions situations module defined core ontology services align owl concrete domain ontology 
note methodology alignment align compare service description efforts web services architecture wsa ontology application server semantic web alignments detailed 
specialized domain application ontologies service descriptions formulated generic service ontologies 
method combination bottom top approach 
hand ontologies lower layers provided representation requirements higher layers abstracted concepts relationships 
hand upper layers provided design guidelines lower layers 
meant goal preserve structure owl possible method suggested rearrangement ontology backbone provided 
requirements dolce descriptions situations core ontology services 
owl 
domain application ontologies ontology stack 
suggestions improvement section highlights suggestions improvement problematic aspects owl depicted section 
note subsection corresponds introduced section 
conceptual alignment foundational ontology helped understanding concepts owl 
example ontological analysis explained difference information object application domain counterpart role plays information system cf 
section 
indicated possible enhanced modelling information object modelled serviceprofile servicemodel logical consider single instance playing multiple roles 
improvement implemented owl coalition 
core ontology services went separate functionality process software aspects service loaded single concept service owl 
replaces service concept different kinds service descriptions descriptions context envision process certain roles related individual tasks process 
inputs outputs tools carry certain task examples roles 
case information services inputs outputs played information objects tools played particular software implementations 
definition service description may fact formulated foundational ontology allows compare alternative definitions foster discussion alternative conceptualizations web service 
increased axiomatization key advantage alignment foundational ontology prompts engineer take stance respect principles established foundational ontology 
typically gained increased understanding ontology richer axiomatization ties foundational ontology 
dolce mitigates danger process imported theories shared engineer extensive modularization world views domains law finance 
example core ontology services ontology plans includes subtypes generic task concept detailed modelling plans process models 
constructs directly comparable control constructs owl provide higher level axiomatization 
example types dolce synchro task owl definition depicted appendix 
matches concept join split join control construct owl 
synchronization task typically bind execution planning activity domain activity referred activity supposed re synchronize process waits execution concurrent partly concurrent activities 
design higher axiomatization partly possible natural linkage ontology time module dolce describing constraints temporal relations process elements executions plan 
owl need ontology time natural adopt existing ontology creating ontology scratch 
ontology plans allowed align relations owl components relate control constructs components 
owl relation described merely subrelation owl property domain 
aligned relation temporary component relation dolce 
firm foundation subrelation basic component functional proper part mereological relation partly temporally indexing relation characterized formal restrictions application basic concepts object description event improved design propose complement modularization owl contextualization design pattern 
contextualization allows move monolithic process description service representation different possibly conflicting views various granularity 
descriptions situations ontology provides basic primitives context modelling notion roles allows talk inputs outputs level independent objects play roles 
pattern results intuitive representation attribute binding clearly defined semantics scoping provided descriptions situations 
inputs outputs modelled functional roles precisely instrumentality roles serve variables ontology 
single endurant example physical book play multiple roles different descriptions natural express book output respect process input 
easier represent requirement input process played instance output process putting constraints objects process task play roles expressivity required goes power owl 
intuitive representation functional roles components explicit scope descriptions belong 
addressed clearly defined limits scope necessary describe semantic relationships service descriptions talk conflicts descriptions 
wider scope seen web services exist boundary world inside information system external world 
rare case pure information service web services carry operations support real world service 
functionality essential property service arises entire process comprises computational real wold activities 
web service descriptions necessarily descriptions parallel worlds 
world consist software manipulating representations information objects 
activities sequenced computational processes 
real world books delivered destinations 
connection worlds information objects represent real world objects 
computational activities comprise part service execution real world 
example order needs entered web agent information system warehouse knows books deliver address 
distinction information objects events physical ones explicitly owl 
believe distinction important disambiguating nature services open environment semantic web 
separation naturally follows dolce foundational ontology distinction important part characterization concepts 
particular possible precise kinds relationships occur objects objects events 
represented information object literal instance inferno refers refers physical object subconcept book instance inferno represented name instance inferno name information objects dolce example dolce distinguish physical object book information object name book representation information particular description system string encoding 
relations provided dolce shown 
reader may note building descriptions situations ontology design pattern naturally extends owl representation service situations 
service situations correspond possible execution service 
description service executions considered owl coalition purposes service execution monitoring 
believe direction pursued owl service requests formulated terms actual values input output parameters relatively narrow sets parameter values 
example customers clear idea book want buy kind book imagine intelligent matching engine case returns services offer particular book category books returning known book selling services 
examples far may conjecture owl inputs outputs concern physical objects relating information objects message parts wsdl grounding 
fact lack distinction stands emergence semantic web identity crisis results ambiguous identifiers semantic web ontology languages rdf 
practice uri document web fragment document containing definition concept represent concept intended actual location web 
unfortunately standard scheme exists distinguish kinds identifiers need resolved different ways 

identified problematic aspects owl suggested possible improvements alignment foundational ontology 
stack ontologies alignment dolce descriptions situations core ontology services 
note alignment dependent dolce descriptions situations may aligned foundational ontology 
parts service description deal service quality assessment left 
exercise giving ontological foundation owl useful better understanding owl enriching additional formal semantics 
see results example benefits alignment foundational ontologies methodology applicable standards 
matter fact core ontology services applied framework ongoing efforts characterize web services commit specific software design framework generic social notion service 
example ontology web services architecture wsa working group interesting methods web service deployment problemsolving methods interpreted aligned interoperable reusable ontological components 
alignment owl core ontology services means web services described owl automatically aligned dolce 
descriptions enriched adding dolce semantics example spatio temporal relations domain concepts involved 
imagine allow sufficiently sophisticated matching composition engine reason additional semantics order provide targeted matches result 
building tool scope 
difficulties encountered method ontology alignment required understand extent principles foundational ontology 
principles stem sciences philosophy psychology semiotics communication theory means re engineering kind requires considerable intellectual investment knowledge engineer moment 
think investment materialized core ontology services pay new web service ontologies aligned web service ontology communicate domain ontologies case workflow ontologies service actors matching composition services overlapping domains tasks 
pay shows just taken reusable ontology foundational reusable ontology carry analysis owl order gain access conceptual alignment service domain task ontologies reusability need appropriate flexible foundational ontology 
try foundational ontology alignment process accessible 
believe generation ontology editors help knowledge engineers deal complexity rich ontologies incorporating idea ontology design patterns offering support modularization 
similarly editors designed specifically authoring web service descriptions hopefully take away existing burden creating web service descriptions web engineers 

financed wonderweb eu information society technologies ist funded project ist wonderweb semanticweb org 

ankolekar huch sycara 
concurrent execution semantics daml subtypes 
horrocks hendler editors st int 
semantic web conference iswc proceedings volume lncs 
springer 
akkermans gordijn 
online configurability real world services 
proceedings fifth international conference electronic commerce icec pages pittsburgh pa 
acm 
gordijn akkermans 
shared terminology online service provisioning 
available www cs vu nl ziv 
borgo gangemi guarino masolo 
ontology roadmap 
wonderweb deliverable dec 
wonderweb semanticweb org 
christensen curbera meredith weerawarana 
web services description language wsdl www org tr wsdl mar 
note 
filman bader 
aspect oriented programming 
communications acm october 
gangemi mika 
understanding semantic web descriptions situations 
doa coopis odbase international conferences doa coopis odbase proceedings lncs 
springer 
gangemi mika sabou oberle 
ontology services service descriptions 
technical report laboratory applied ontology national research council rome italy nov 
www cnr 
macgregor 
description classifier enhance deductive inference 
proceedings seventh ieee conference ai applications pages 
martin burstein denker hobbs kagal lassila mcdermott mcilraith paolucci parsia payne sabou sirin srinivasan sycara 
owl draft release 
www daml org services owl dec 
masolo borgo gangemi guarino 
ontology library final 
wonderweb deliverable dec 
wonderweb semanticweb org 
mcguinness van harmelen 
web ontology language owl overview 
www org tr owl features feb 
recommendation 
motta domingue 
framework infrastructure semantic web services 
semanticweb iswc volume lncs pages 
springer 
narayanan mcilraith 
analysis simulation web services 
computer networks 
gangemi guarino masolo 
ontologies dolce 
mez rez benjamins editors knowledge engineering knowledge management 
ontologies semantic web th international conference ekaw spain october proceedings volume lecture notes computer science 
springer 
pepper schwab 
web identity crisis 
technical report www net 
richards sabou 
semantic markup semantic web tools daml description rdf store 
proceedings nd int 
semantic web conference iswc volume lncs pages 
springer sep 
appendix dolce synchro task owl syntax class dolce synchro task partial dolce elementary task restriction dolce predecessor somevaluesfrom unionof dolce concurrent task dolce partly concurrent task restriction dolce direct predecessor mincardinality restriction dolce sequences allvaluesfrom dolce planning activity restriction dolce represented allvaluesfrom dolce join node annotation rdfs label synchro task annotation rdfs comment task joins set tasks branching 
