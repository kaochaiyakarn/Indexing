automating context aware application development ted mcfadden karen henricksen crc enterprise distributed systems technology dstc mcfadden dstc edu au develop robust evolvable context aware applications flexible reconfigure adapt response changes context location connectivity resources security user preferences rich context model infrastructure components programming paradigms required 
development deployment context aware applications assisted tools automate transformation context model appropriate forms ready manipulation developers administrators 
describes extensible set tools developing conjunction existing context modelling framework infrastructure provides substantial assistance development deployment contextaware applications 
keywords context modelling context management 
constructing context aware applications challenging time consuming task applications need supported context models context management systems 
modeling context information especially complex contextaware applications error prone 
exacerbated fact context models contextaware applications may evolve consequent required changes may introduce errors 
context management systems hand quite complex allow addition removal update context information need support rich context query capabilities notifications context changes 
context aware applications evolvable context models complex context management systems benefit automation tools support consistency checking models automate software engineering tasks related context management context dissemination 
describe automation tools developed assist context management system development context aware applications 
tools support tasks validation context model automated mapping model context management system ii automatic generation context model specific programming libraries context aware applications iii auto reported funded part operative research centre enterprise distributed systems technology dstc australian federal government crc programme department education science training 
indulska school information technology electrical engineering university queensland itee uq edu au matic generation adapter messaging notification system context aware applications context management system 
structure follows 
section briefly introduce approach context modeling show example context model defined context aware communication application 
section presents brief description mapping context model context management system 
remaining sections example introduced section illustrate functionality particular automation tools 
section discusses context schema derived defined context model characterises types automation tools 
section describes automation mapping context model context management system 
section describes generation supporting programming libraries section overviews tool generates adapter messaging notification system 
section concludes discusses possible automation assist developers context aware applications 

context modelling approach section briefly reviews approach context modelling 
information earlier papers :10.1.1.60.274
model context levels detail fact situation abstractions 
section presents fact context modelling approach context modelling language cml section describes represent situations terms fact types modelled cml 
section briefly outlines previously developed approach mapping cml relational data model describes exploited mapping implement generic context management system extensions top relational database 
cml cml primarily serves tool enables application developers explore formally specify context requirements context aware application 
provides constructs defining entities context information required types information facts interest relation entity 
allows developers identify appropriate source fact type sensors user profiles derivation context information specify dependencies constraints explore information quality issues described 
modelling approach builds object role modeling orm provides graphical notation designed primarily conceptual modelling information systems 
orm represents object types ellipses relations object types fact types drawn sequences role boxes role attached object type participates role 
object type assigned name mode shown parentheses describes instances type represented 
fact types annotated uniqueness constraints represented double headed arrows spanning role boxes place restrictions populations fact types manner key constraints attributes relations relational data model 
variety constraints supported discussion falls outside scope 
cml introduces variety extensions basic notation illustrated example model shown 
example builds context model defined communication application assists users selection appropriate communication channels interactions people 
application relevant types context information include associations users communication channels devices ownership permissions proximity case devices current locations users current planned activities 
cml extensions allow fact type classifications labelled static sensed derived profiled types depending persistence source temporal types capture histories context information user activity period day week alternative types capable describing ambiguous information conflicting location reports gathered variety location sensors 
cml provides extensions support special constraints temporal alternative fact types annotation fact types appropriate metadata types dependencies pairs fact types person activity current location indicate location changes typically linked activity changes 
situation context modelling addition modelling context fact level cml provide situation abstraction describing context high level terms 
situations defined variant predicate logic capture classes context terms fact types cml model 
situations easily combined logical connectives form increasingly rich context descriptions 
feature useful programming abstractions allow software engineer predicate application behaviour simple situation expressions natural way 
situations written predicates zero variables evaluated set variable bindings context represented repository facts yield values true false possibly true 
possibly true value arises available context information inadequate determine absolute truth falsity incompleteness ambiguity 
example situations shown table 
definitions situations general discussion situation logic previous repeat 

mapping context management system relational data model implemented context management system context modelling approach leverages straightforward translation cml relational data model 
translation builds orm relational mapping procedure incorporating additional mappings context modelling constructs introduced cml appropriate constraints metadata described briefly 
context management system responsible storing context models instantiations parsing evaluating situation expressions processing queries subscriptions receive context change notifications formulated terms facts situations providing transaction support queries managing updates variety sources accordance integrity constraints expressed cml models 
implementation currently built top relational database 

context schema automate devel opment context modelling language cml described section provides powerful technique capture application context information requirements comprehensive manner providing visual representation semi automated procedure map context models context management systems relational databases 
initial experiences developing cml context aware applications suggested database application coding administration effort reduced error resistant introducing additional tools automate aspects deploying administering programming context 
specifically tools needed address issues mapping context models specific context management systems sql non relational data stores managing database programming language namespaces providing programming language libraries development tool eclipse ide support manipulation context information 
addressing issues developed text context schema captures cml models higher level situation definitions 
allows full context model validated processed context schema compiler 
additional tools front compiler transform context models forms useful application development 
context schema syntax similar sql database schema providing easy transcription cml models familiar syntax developers 
initially identified automation tool outputs channel located near iff person located communication channel id person identity engaged activity name mode requires device permitted located near owns person located controls device located device id device located place name engaged dependson person located iff synchronous communication mode name type owned controlled certainty device type name organisation identity probability nr modelling context communication application cml 
directly reduced coding effort involved prototype applications sql scripts load remove context model definitions context management system database 
context model specific java programming language classes allow context type safety checking compile time feed existing development tool features method selection code completion eliminate manual coding boiler plate context manipulation code 
support sending context information notifications content publish subscribe notification router elvin context management system loosely coupled context producers consumers system 
shows selected portions context schema context model shown section 
create schema statement defines context schema namespace allows deploying multiple context models single context management domain 
context schemas may elements schemas fully scoping 
schema naming scope partially defines output scope programming artifacts java package names 
domain statements follow define type names context model 
domain statements map base sql data types shown due space limitations 
fact statements capture fact names classifications static profiled derived sensed alternative temporal dependencies details context fact information alternative role indicator location attribute fact type 
context schema supports definition situations situation statement 
portion statement similar sql create table statement 
remainder situation definition syntax defined 
context schema syntax described sufficient fully capture context model definitions 
illustrates tool architecture process context schema definitions 
tool developed context schema compiler validate process context models common intermediary form 
task specific front tools generate specific outputs 
tools developed address initial requirements shown 
described detail sections 

mapping context management systems initial map context models corresponding database relations required sql context management system relied simple manually produced java programs 
programs generated executed appropriate sql statements jdbc api 
fully functional programs required careful table example situations context aware communication application 
situation description occupied person true person currently involved activity meeting phone call determined fact type example model 
person channel true person appropriate access permissions devices associated channel determined fact types 
engaged device true device telephone hastype fact type currently person fact type 
indicates current time falls normal working hours 
create context schema dstc pace comm 
create domain identity 
create domain identity 
create profiled fact type key person channel 
create alt sensed fact type quality certainty person key place 
create fact type derived person key device key iff person location device location location location 
create profiled temporal fact type depends person key activity 
create situation occupied person exists activity person activity activity meeting activity phone selected portions context schema example context model 
coding manually updated context model changed uncommon research development 
certain errors naming fact type tables fact specifications go undetected client applications encountered errors manipulating context information 
reasons developed sql database tool automate mapping context model existing context manager underlying sql database 
abbreviated database tool output communication context model shown 
shown create schema statement multi level namespace original context schema collapsed reflect ca context schema common tool back context schema compiler intermediary form sql database mapping tool java binding library tool elvin notification library tool tools task specific tool front ends tool architecture 
sql database schema fact domain classes elvin classes tool outputs target database 
context domains fact types mapped sql domains tables respectively 
object types involved fact type roles map table columns 
fact type quality annotations mapped additional table columns 
temporal fact types mapped tables additional columns represent start times 
key constraints database tables representing alternative temporal fact types set support fact type semantics relational domain 
derived fact types defined sql views appropriate view select statement 
context schema situation definitions loaded tables part context management system fact metadata shown 
sql database tool brought direct benefit removing manual administrative database coding allowing rapid deployment context models context management system ensuring context model updates correctly applied 
expect able apply similar context management mapping tools explore alternatives sql context managers pervasive environments distributed context management 

context model specific programming libraries functionality current java context management system described section 
context management api provided allows applications full access appropriate authorisation context information generic context management interface context model specific operations compile time validation request parameters available 
practice lack features lead application coding er create schema dstc pace comm create domain dstc pace comm varchar 
create table dstc pace comm person dstc pace comm channel dstc pace comm primary key person channel create table dstc pace comm person dstc pace comm place dstc pace comm dstc pace comm certainty primary key person place create view dstc pace comm person device select distinct person device 
create table dstc pace comm person dstc pace comm activity dstc pace comm timestamp timestamp primary key person context schema relational database mapping example 
result subtle alterations system behavior may readily identifiable detailed review 
experiencing prototype systems desirable write context model specific code libraries provide programming convenience compiletime checking 
brought additional benefits developers java ides offer context model specific assistive information 
code manually constructed context model specific library provided context manipulation class fact type situation class represent context model domain types personname 
classes conceptually simple numerous tedious write making prime candidates automatic generation 
communications context model section requires classes 
context model library tool written generate necessary java helper classes 
result tool helper classes consistent form offer complete coverage specific context models refreshed immediately reflect additions context models changes desired class implementations 

context notifications context aware infrastructure components applications previously mentioned content notification routing system elvin offers loosely coupled publish subscribe communication semantics 
style communication attractive pervasive environments minimises dependencies known endpoints allows flexible modes communication oneto rpc mechanisms java rmi 
elvin initial prototype applications interface classes written send receive context fact events elvin 
additionally existing context manager api exposed elvin messaging elvin adapter applications written receive elvin context events relay context manager java rmi interface 
case context model specific programming libraries elvin interface classes gateway code boiler plate nature elvin notification library tool written generate automatically 
tool shown detail 
tool fed output context schema compiler step generates java interface defines methods context fact events represented context schema 
example method signature interface described communications context model void generated interface method parameter types domain classes generated java context model library tool shown input 
void return type indicative method represents event notification rpc call 
generated context fact interface processed additional tool developed elvin interface compiler 
tool takes java interface generates send receive stubs map interface methods elvin notifications 
eliminates need applications manually construct unpack elvin notification messages 
java python currently supported target languages 
step elvin stubs available context fact interface 
elvin notification library tool uses just created elvin receiver stub generate context model specific elvin adapter context management system 
class provides gateway relay elvin context fact messages context manager 
uses fact binding domain classes generated java context model library tool 
may run part context manager process stand gateway 
tool allows context model instantly accessible elvin clients written variety languages running number operating system platforms 
expect develop elvin generation tools extend capabilities context management system 
elvin generation tool model extensible number distributed communication infrastructures rpc notification corba web services wsdl 
give opportunities extend context system operating domain 

elvin notification library tool elvin interface compiler tool java context model library tool generated classes elvin context fact java interface definition elvin sender stubs elvin receiver stubs context manager model specific elvin adapter elvin notification library tool detail 
early experiences shown context aware application development requires significant careful coding efforts ensure context models faithfully represented target context management system applications perform valid manipulations context information 
changes context model requires detailed re examination context related code 
address limitations manually constructing context manipulation code adopted model driven development approach 
cml context model expressed text context schema 
context schema validated processed intermediary representation context schema compiler 
form specialised front tools generate specialized outputs 
described tools generate sql database scripts context management system context model specific programming libraries adapters elvin notification router 
tools contributed reducing effort required develop maintain context aware applications 
discussed extending tools add new features context libraries adapters communication transports support alternative context management systems 
currently investigating extending features context model specific library tool exploring ontology approaches context modelling creating tools represent cml models ontology languages owl dl swrl 
henricksen indulska software engineering framework context aware pervasive computing 
nd ieee conference pervasive computing communications percom orlando henricksen indulska modelling imperfect context information 
workshop context modeling reasoning nd ieee conference pervasive computing communications percom orlando henricksen indulska rakotonirainy modeling context information pervasive computing systems 
st international conference pervasive computing pervasive 
volume lecture notes computer science springer halpin conceptual schema relational database design 
nd edn 
prentice hall australia sydney henricksen indulska rakotonirainy generating context management infrastructure context models 
th international conference mobile data management mdm industrial track melbourne foundation eclipse open extensible integrated development environment www eclipse org 
ansi iso iec structured query language sql standards 
iso iec standards 
segal arnold boot henderson phelps content routing elvin 
proceedings auug conference 
mcguinness van harmelen owl web ontology language overview 
recommendation horrocks patel schneider boley grosof dean swrl semantic web rule language combining owl ruleml version www daml org swrl 
