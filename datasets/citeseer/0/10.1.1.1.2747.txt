preliminary version quantitative approach noninterference probabilistic systems alessandro aldini istituto sti universit carlo bo italy di pierro dipartimento di informatica universit di pisa italy technique measuring security system relies probabilistic process algebraic formalisation noninterference 
define mathematical model technique consists linear space processes linear transformations 
model measured quantity corresponds norm suitably defined linear operator associated system 
probabilistic model adopt reactive sense processes react environment probabilistic choice set inputs generative sense outputs autonomously chosen system governed probability distribution 
setting noninterference formulated terms probabilistic notion weak bisimulation 
show probabilistic information notion estimate maximal information leakage security degree system powerful attacker 
key words probabilistic noninterference process algebra similarity relation weak bisimulation characterisations security system illegal information flows high security level enclave low security level enclave proposed literature employ qualitative methods logical interpretation noninterference idea goguen meseguer gm 
idea ultimately depends notion indistinguishability process behaviours see fg rs 
practical situations complete absence information flow difficult guaranteed realistic assume amount information leakage tolerated gra 
partially funded progetto la il tempo email aldini sti email di unipi preliminary version 
final version published electronic notes theoretical computer science url www elsevier nl locate entcs aldini di pierro scenario security absolute requirement approximated versions security properties appropriate 
allow estimate difference real system interest idealised perfectly secure system means measure approximation 
basis considerations shown security property termed probabilistic noninterference pni establishing security system approximated way 
pni extends probabilities nondeterministic notion noninterference fg checks viewpoint low level observer behaviour system invariant respect behaviour high level users interacting system 
particular class high level users considered pni denoted viewed family probabilistic adversaries try set covert communication channel high level low level affecting behaviour system 
adversaries memoryless sense probabilistic behaviour fixed change system execution 
formally equivalence check performed process modelling behaviour system highlevel interferences process modelling behaviour system interacting low level views system equivalent low level observer infer activity words affect low level behaviour system see 
main idea approximated notion probabilistic noninterference replace equivalence similarity 
allows tolerance comparison low level views system giving binary answer potential equality 
concentrate problem estimating tolerance factor terms similar probabilistic processes 
relaxed notion indistinguishability propose implies described allows apply methodology detect powerful adversary corresponds high level user maximises difference low level views considered pni criterion adopt establish indistinguishability probabilistic processes refers probabilistic notion weak bisimulation bh 
approximated version noninterference formalised definition corresponding similarity relation 
define relation terms observable difference processes observability weak probabilistic bisimulation semantics 
maximal observable difference processes give measure indistinguishability formalisation measure information leakage 
formal justification quantity mathematical framework operational semantics probabilistic calculus defined terms linear operators vector space representing state space 
setting show metric induced particular operator norm process terms corresponds notion distance coincides measure 
result exploits techniques introduced 
probabilistic model adopt introduced bb abg formalise pni property 
model includes probabilities nondeterminism 
hand probability distribution govern choice various output actions autonomously performed system 
hand choice different types input actions accepted system depends aldini di pierro environment behaviour 
choices nondeterministic 
precisely environment decided type input activated system reacts specified probability distribution associated input actions type 
model mixed generative reactive model output operations follow generative model probabilities input operations follow reactive model probabilities gss 
presence nondeterminism model sense compatible quantitative approach requires transition probabilities specified order calculate behavioural difference processes 
fact security analysis nondeterminism resolved probabilistic adversaries play role probabilistic schedulers 
schedulers responsible information may flow high low level represent attackers model security 
rest describe formal model surveyed section pni property application exact verification system security section done abg 
section introduce main contribution presenting quantitative approach measuring noninterference 
section show quantity introduced measure noninterference formalised terms metric probabilistic processes induced particular operator norm 
section conclude discussing related 
probabilistic model section probabilistic framework formalise quantitative approach noninterference 
particular consider probabilistic calculus introduced ba abg define probabilistic extension nondeterministic approach noninterference fg 
calculus derives simple nondeterministic process algebra actions syntactically divided input actions output actions 
formally visible action type distinguish output action input action 
process terms synchronously communicate environment inputs outputs perform internal computations unobservable actions termed actions 
probabilities introduced adding probabilistic information algebraic operators 
example classical ccs choice operator replaced probabilistic choice operator parameter probability distribution guides choice chosen probability chosen probability 
far model probabilities concerned adopt mixture generative reactive approaches gss 
assume output actions behave generative actions system autonomously decides basis probability distribution output action offered environment behave event 
particular generative action expresses autonomous internal move react external stimuli 
example process execute probability proceed execute probability proceed input actions modelled reactive actions system internally reacts choice action type performed environment 
action type nondeterministically chosen particular reactive action type executed basis aldini di pierro probability distribution 
see input actions underspecified execution guided environment behaviour 
example process react action types selected environment 
note choice purely nondeterministic depend probability distribution specified parameter chosen event system performs possible reactive input actions probability distribution specified parameter chosen event system reacts executing unique reactive input action perform probability 
syntax semantics probabilistic calculus 
interested reader referred abg ba bb details 
describe notion process equivalence bh probabilistic extension weak bisimulation mil 
syntax syntax probabilistic process calculus follows represent terminated process usually omit 
action drawn set actions act internal action output action input action belongs set visible action types atype 
performs action probability behaves alternative choice operator performs mixed probabilistic nondeterministic choice actions precisely executes generative reactive type action probability generative reactive type action probability process execute generative reactive type actions chooses generative reactive type action process probability 
choice generative reactive actions reactive actions different types purely nondeterministic 
parameter probabilistically guides choices comes play probabilistic choice performed 
parallel composition operator atype asynchronously performs actions belong synchronisation set imposes synchronisation actions belonging actions synchronise type input actions result input action type output action input action result output action type 
probabilistic choice mechanism actions described case choice operator 
synchronisation policy execution actions may prevented normalise probabilities generative actions executable order obtain probability distribution 
symmetric argument holds restriction operator prevents execution actions type atype 
semantics operator expressed terms parallel operator 
fact choice parameter corresponds hiding operator turns visible actions type internal actions 
particular aldini di pierro hiding action pay attention side effect caused fact reactive action generative action 
purpose parameter express probability generative actions obtained hiding reactive actions executed respect generative actions previously enabled obviously hiding generative actions particular case nondeterminism resolved 
example consider process defined probabilistic choice governed parameter semantics probabilistic choice governed parameter case parameter hiding operator nondeterministic choice resolved 
consider process choice purely nondeterministic parameter considered 
semantics probabilistic choice governed parameter obtained hiding turning reactive actions generative invisible actions hiding operator allows obtain closed fully generative systems open systems systems enabling reactive choices 
order obtain closed system nondeterministic choices due possible interactions environment resolved parameter turns choices probabilistic choices 
sense hiding operator allows obtain concrete fully specified system essential requirement quantitative reasoning system 
constants specify recursive systems 
general defining process term assume set constants defining equations form guarded term mil 
rest denote set finite state guarded closed terms mil called processes generated syntax 
assume case parameter probabilistic operator omitted 
operational semantics semantics probabilistic process calculus expressed terms mixed generative reactive transition systems introduce 
aim assume follow ing notation 
sets denote sets input actions output internal denoting actions respectively 
abbreviation execute action probability behave process indicate denoting execute generative action belonging set operational semantics probabilistic process algebra labeled transition system act called generative reactive transition system states process terms transition relation multiset satisfying operational rules reported table table 
far rules concerned addition reported rules refer local moves left hand process consider symmetric rules account local moves right hand process symmetric rules obtained exchanging roles terms premises aldini di pierro replacing label derived transitions 
semantics rules reflect informal presentation syntax operators 
go details concerning parallel operator 
execute synchronising actions composed system execute actions probability action executable product probabilities actions involved synchronisation 
probabilities generative actions executable normalised order obtain probability distribution gss 
purpose employ additional notation 
set gs atype contains action types belonging set action types belonging input action performed 
intuitively gs contains types actions process execute function gs atype computes sum probabilities generative actions type gs value gs normalise probabilities generative actions executable weak probabilistic bisimulation security analysis conduct semantics processes security check considers program behaviour need equivalence relation allowing comparison observable behaviours different systems 
argued smith abg natural notion observational equivalence base notions confinement weak bisimulation semantics weak bisimulation allows neglect details internal behaviour system important security analysis running time concurrent thread concentrate behaviours interesting analysis behaviours observable external low level viewpoint 
consider probabilistic variant weak bisimulation introduced bh 
relation denoted pb probabilistic extension weak bisimulation mil 
essence pb replaces classical weak transitions probability reaching classes equivalent states 
precisely function prob prob denotes aggregate probability going term class equivalent terms executing action prob expresses aggregate probability going term equivalence class sequences number actions followed action possibly equal 
lemma value prob minimal non negative solution equation system prob prob prob prob prob shown abg system solution 
ready define aldini di pierro weak probabilistic bisimulation equivalence 
table operational semantics part definition equivalence relation weak probabilistic bisimulation prob prob prob prob 
terms weakly probabilistically bisimulation equivalent denoted pb aldini di pierro gs gs gs gs gs gs gs gs table operational semantics part ii exists weak probabilistic bisimulation including pair 
note definition requires equivalent terms strongly equivalent case reactive actions weakly equivalent case generative actions 
generative action computing probability associated mixed trace generative reactive actions sense 
note shown bh equation definition equivalently written prob prob 
example processes behave viewpoint external observer see output action output action equal probabilities 
formally weakly probabilistically bisimulation equivalent relation satisfies definition 
interesting case verified related execution visible action possibly preceded sequence internal actions starting initial state reaching null term 
easy see prob 
far prob concerned observe execute arbitrary number times aldini di pierro action reaching state action 
probability associated outgoing internal transition distributed outgoing transitions formally resolving equation system lemma prob prob derive prob similarly 
weak probabilistic bisimulation pb probabilistic noninterference standard definition noninterference goguen meseguer gm high level user high short said interfere low level user low short high reflected low observe 
setting high perform highlevel activities observe interactions system environment 
low perform low level activities allowed directly observe occurrence high level events 
spite low may succeed detecting high behaviour simply interacting low level interface system 
words exist direct communication channel high low high may possibility indirectly passing information low interactions system 
noninterference analysis mainly aims checking presence indirect information flows called covert channels high low 
probabilistic framework low see order infer high behaviour logical low level interface system interacting environment probability distribution events representing interactions 
section describe formalisation noninterference approach probabilistic process calculus surveyed previous section abg 
noninterference security analysis roughly consists deriving models system specification hand corresponding different low level views system checking semantic equivalence derived models 
semantic equivalence processes weak probabilistic bisimulation pb introduced section choice low level models compared depends definition security property 
property consider introduced abg probabilistic extension strong nondeterministic noninterference property fg 
property call probabilistic noninterference pni compares low level view system absence high level interactions low level view system presence high level interactions 
formally divide actions high level actions low level actions denoted high low respectively depending nature activities represent 
high low disjoint sets form covering atype 
process denote 
sequence alphabetic order types high level actions syntactically occur action prefix operators application security check follows 
low level view absence high level operations obtained preventing executing high level actions 
carried applying restriction operator high 
low level view presence high level interactions obtained turning high level actions invisible actions low expected observe 
carried applying 
pn hiding operator obtaining family processes 
pn aldini di pierro possible sequence 
pn expresses probability distribution chosen high hidden high level input actions executable possible compare abbreviation stand 
pn high check weak probabilistic bisimilar 
condition holds say satisfies pni property pni definition pni high 
pn 
pn 
note sequence 
pn represents particular probabilistic behaviour strategy followed high 
universal quantification possible sequences imposes equivalence check hold high strategy 
particular interpret representing adversary probabilistic behaviour may responsible setting covert channel high low 
pni definition takes account family adversaries pni checks presence information flows high low turn active adversary alter probabilistic low level behaviour system application hiding operator affects probability distribution generative low level actions 
memoryless adversary alter strategy step step probability distribution hidden high level inputs expressed parameters 
pn chosen adversary change system execution 
pni holds low infer behaviour adversary means system leak information high low 
shown abg probabilistic noninterference reveals covert channels observable purely nondeterministic setting offers means measuring information leakage terms probability observing related covert channel 
provide examples showing expressive power pni example consider process may accept highlevel input type interacting low low level actions 
viewpoint low observable interface system altered strategy followed high 
reflected security check states satisfies pni property choice parameter example information flow high low process 
produces sequence low level outputs high interact system information flow high low 
system chooses high responsible deciding executed 
formally expresses semantics weak probabilistic bisimilar expresses semantics particular equivalent choice parameter hiding operator 
example revisited nondeterministic scenario reveals covert channel described turns purely possibilistic information flow 
example probabilistic information leakage process aldini di pierro 
behaviour high affect set possible results observable low 
high alter probability distribution results 
formally probabilistic covert channel captured pni property semantics equivalent semantics equivalent 
weak probabilistic bisimilar 
statistical viewpoint high interferes low observes repeated executions average result experiments hand observation occurs times average case high interact viewpoint low small number experiments sufficient guess behaviour high see mathematical justification statistical interpretation 
example shows application noninterference general idea study interferences honest users malicious parties see application noninterference approach analysis cryptographic protocols 
example assume low represents user interacts system order obtain service high potential adversary interacting system malicious intentions 
particular consider abstraction low level shared resource password access 
low access consume resource high allowed 
spite high try guess access password order consume resource place low 
system parallel composition processes lu act resource lu expresses behaviour low level user lu low request low insert password low consume resource low available resource models shared resource reacts external requests may arrive lu high level adversary resource low request low insert password low consume resource high request 
high try password high consume resource low available high try password resource absence adversary low normally access consume resource 
formally lu act resource high enable action low available 
hand high tries interfere low may able access resource 
particular lu act resource high request high try password high consume resource reaches null note hiding action type high request parameter hiding operator resolve choice resulting invisible action synchronising action low request 
hand hiding action type high try password resp 
high consume resource parameter hiding operator system performs action type probability 
term performing sequences form low available probability measuring noninterference aldini di pierro section show exploit probabilistic information associated behaviour system order give quantitative estimate possible information 
gives means evaluate effectiveness covert channel responsible illegal information flow 
shown related number tests system executions needed external observer detecting information flow 
technique going introduce aims quantifying information leakage system calculating maximal difference transition probabilities observed low level user system interacting high respectively 
consequence basic requirement technique systems analyse fully specified viewpoint low level observer 
means nondeterminism due possible interactions environment resolved 
fact effect hiding operator turning reactive actions generative internal actions 
modelling pni property hiding applied high level actions need assure reactive transitions enabled system 
think assumption restrictive quantitative estimate covert channel observed low really sense behaviour low fully specified ii technique takes account possible ways behaviour high may influence probability distribution low level events 
approach applicable general case systems including low level reactive actions provided complicated model order consider possible associated interactions 
probability observing information flow high level low level estimated relaxing behavioural equivalence relation expressed weak probabilistic bisimulation defined section 
intuitive idea inspired abg follows 
pni property introduced section process secure low level models corresponding behaviours high interferences equivalent probabilistic weak bisimulation semantics 
information leakage detected sequence chosen high equivalence relation including pair high exist pair prob prob 
difference probabilities give estimate amount information leakage 
precisely equivalence relation including pair high consider pair states class weak transition probabilities maximally different calculate difference 
define measure security minimal differences equivalence relations 
formally define quantity simply process clear context expresses behavioural distance low level models high system respect relation including pair high particular choice sequence parameters 
pn governing interaction high level input action high 
definition process equivalence relation including pair aldini di pierro high 
pn sequence parameters pi define sup prob prob 
quantity define measure security degree system follows 
definition process definition 
define inf quantity expresses maximal distance process high interferences process interacting high level user modelled sequence obtained particular relation best approximation weak probabilistic bisimulation 
point quantity depends parameters 
pn forming sequence parameters represent hypothetical high level adversary pass low amount information quantity measure interpreted effectiveness adversary strategy corresponding sequence fact determines easy low level user obtain confidential information terms number tests system executions low level user needs perform order distinguish behaviours interference adversary 
number tests analysed various standard statistical methods called hypothesis testing method shao 
method provides simple way estimate tests needed distinguish processes confidence tests outcome correct 
application method statistical interpretation approximation confinement properties described detailed description statistical interpretation process algebraic setting 
abg approximated notion noninterference proposed employing relaxed version weak probabilistic bisimulation pb termed weak probabilistic bisimulation precision non transitive relation formally defined follows 
definition relation weak probabilistic bisimulation precision prob prob prob prob 
exists weak probabilistic bisimulation precision including pair 
replacing pb pni definition obtain relaxed property checks system approximated version secure system tolerance 
recall section apply security check fully generative processes systems consider enable reactive low level transitions 
verification condition definition applied generative actions 
aldini di pierro respect pni security check definition section proposed specific notion measure security system adversary corresponding sequence important consequence definitions turns approximately secure adversary modelled exists relation including pair high weak probabilistic bisimulation precision 
proposition process definition 
high 
ii high 
iii exist high proof 
immediately derive definitions definition weak probabilistic bisimulation precision 
condition ii simply holds take relation derive iii suffices observe exists exists relation including pair high holds prob prob 
means violating hypothesis minimum relations family values seen pni checks system secure class adversaries interested evaluating effectiveness adversary maximises information leakage powerful adversary 
formally 
qn sequence representing adversary sup problem estimating effective adversary corresponds problem finding upper bound function examples provide intuitive examples explain role approximation estimating security degree systems determining worst case maximal information leakage class adversaries defined pni may set high level low level 
example process performs high level input operation type internal move 
choice nondeterministic depends behaviour high 
action executed nondeterministic choice performed high level input operation type low level output note information flow high low occurs action observed low executed high interacts system 
hand execution reveal strategy followed high 
show labeled transition systems modelling low level views compared equivalence checking 
left hand system represents behaviour high 
right hand system expresses low observe case high decides interact case nondeterministic choice probabilistically resolved high parameter words expresses high level strategy followed adversary 
aldini di pierro fig 

process low observe high interactions 
transition probabilities omitted equal 
consider relevant equivalence relations 
prob prob prob prob derive min 
means probabilistic behaviour high directly affects capability distinguishing low level views system 
order evaluate worst case maximise function obtaining fact easy see 
conclude powerful adversary high level user expressed parameter 
statistical interpretation mentioned inversely proportional number tests adversary perform breach security system powerful adversary attacker needs minimal number tests 
particular assume powerful adversary modelled parameter interacting system 
applying technique explained obtain probability low level observer guessing activity high level user tests 
example consider high level user modelled parameter 
adversary interferes system way rarely revealed low level observer 
order correctly guess behaviour adversary probability success observer needs tests tests probability value close success probability blind guess 
example consider second process example 
low level models compared seen weakly bisimulation equivalent see fig 

particular distinguishing behaviour arises execute probability 
fact event process executes action probability process executes internal move probability action probability formally prob prob aldini di pierro fig 

low level views process prob prob relation different follows min note information leakage negligible tends zero case tends zero 
means high interfering rarely interferes system 
clearly closer easier low reveal behaviour high 
worst case corresponding limiting scenario 
maximal probability observing information leakage depends probability reaching state high interfere 
example consider shared low level resource described example 
low level views compared equivalence checking depicted fig 

instance take relation obtain prob prob example derive prob prob verified considering relations meaningful want estimate 
min 
recall probability guessing password parameter hiding operator guides choice low level access requests high level access requests 
easy verify high lets parameter tend tends 
means low level access request preempted high level access request high succeed guessing password consuming resource 
measure operator norms quantity introduced previous section behavioural distance processes defined considering possible equivalence relations 
give formal justification distance terms appropriate metric space low request low insert password low consume resource aldini di pierro low request low insert password low consume resource fig 

low level views shared resource example 
low available processes calculus defined section 
purpose linear operators framework introduced defining approximate process equivalences 
framework operational semantics probabilistic process described linear operator representing transition graph distance processes defined notion operator norm 
re cast security framework weak probabilistic bisimulation linear operators setting show quantity corresponds particular operator norm captures idea behavioural distance introduced section 
weak probabilistic bisimulation linear operators base treatment basic assumption introduced section systems fully specified viewpoint low level observer words choices probabilistic potential interaction system high resolved 
consequence consider model restriction model introduced section generative transitions executable 
precisely refer restricted version labelled transition system act considers fully generative processes 
restriction described fully probabilistic processes considered associate probabilistic relation linear operator ma matrix defined ma exists represents step transition action transition system 
note transitions ma sum empty set 
symbol represents direct sum operation defined set mi aldini di pierro ni mi matrices ni mi matrix 

mi 


mk process denote associated transition matrix 
matrix cardinality set sp processes reached computation starting linear operators defined vector space containing distributions set states processes space formal linear combinations elements coefficients sake simplicity assume set finite restrict ourself time consider finite dimensional vector spaces finite dimensional linear operators 
results extended general infinite case lines 
aim re formulate weak probabilistic bisimulation semantics introduced section terms defined linear operators representing operational semantics process order take account transitions involving sequences actions milner double arrow relation extend single step operator ma encode transitions strings finite length follows ma ma 
man denotes empty sequence order express condition weak probabilistic bisimulation definition equation need define operator encodes probabilities form prob equivalence class relation shown equivalence relations correspondence particular class linear operators called classification operators equivalence relation set classification operator vice versa 
note matrix cardinality set dimension space number equivalence classes partition dimension space 
classification matrices express probability prob equivalence relation represented operator particular prob re phrase lemma stating probabilities prob resolve equation system ak ak ma 
denote kp operator kp aldini di pierro 
restriction states reachable matrix kp restricted matrix rows corresponding states reachable eliminated 
kp np matrix np number states reachable denote kp operator ak restricted matrix define completion matrix ok indicates dimensional null matrix matrix zero entries 
operation define process operates number states classes represented columns transitions extra states 
weak probabilistic bisimulation relation introduced bh formulated linear operator setting follows definition processes np nq number states reachable respectively 
weak probabilistic bisimilar iff exists classification matrix np nq kp kq kp kq completions kp kq respectively 
definition corresponds equation definition restricted case fully specified processes 
metric weak probabilistic bisimulation section show quantity introduced section measure confinement system corresponds notion distance induced particular operator norm 
general norm operator describes maximal stretching factor normalised vectors 
formally define recalling basic definition vector norm definition norm vector space map ii iii iv null vector 
normed vector space operator norm linear operators defined sup sup 
aldini di pierro exact numerical value operator norm depends course particular vector norm 
consider supremum norm defined xi sup xi corresponding operator norm define metric set linear operators representing semantics probabilistic processes 
definition set equivalence relation 
define metric metric induced supremum operator norm 
metric particularly suited expressing notion behavioural distance introduced section 
particular calculate values quantity definition shown 
recall order verify pni property system check weak probabilistic bisimilar models high 
pn probabilities 
pn 
equivalence checking performed comparing equivalence relation set sp sp states reached equivalently classification matrix vector space operators kp kp cf 
definition 
distance definition outcome comparison numerical quantity coincides measure proposition high 
pn hp 
pn sequence parameters pi equivalence relation set sp sp corresponding classification matrix 
max kp kp kp kp restrictions states sp sp respectively 
proof 
normalised vector 
vector kp kp vector components difference probabilities going state equivalence class sequence 
observe choice vector corresponds choice pair definition 
finite upper bound maximal element set 
thesis follows definition supremum operator norm 
distance zero sequences conclude secure definition definition pni property 
consider relation minimises distance 
corresponds quantity definition aldini di pierro corollary process proposition 
related inf kp kp 
introduced formal definition amount information flowing system high low notion process similarity corresponding approximate probabilistic version weak bisimulation mil 
approach able detect measure probabilistic covert channels high low comparing effect lowlevel view absence presence high level user 
different approach aiming objective quantifying information flow proposed lowe quantity defined terms behaviours highlevel user distinguishable low level user point view 
approach consider probabilistic behaviours relies worst case analysis possible ways resolve nondeterminism 
related approach chm amount confidential information may leaked programs written simple imperative language analysed shannon information theory 
desharnais propose extension defining fixed point characterisation pseudometric approximating weak bisimulation zero distance corresponds weak bisimilarity 
quantitative meaning metric nearby processes nearby propensities leak information 
metric defined context alternating model labelled concurrent markov chains 
lcmc states probabilistic nondeterministic 
transitions probabilistic states labelled associated probability distribution set reachable nondeterministic states 
transitions nondeterministic states labelled finitely branching lead probabilistic states 
probability reaching state weak transition computed supremum possible computations computation purely probabilistic transition system obtained resolving nondeterministic choices follows nondeterministic state outgoing transition picked 
respect framework model states probabilistic nondeterministic choices depending nature interactions environment 
computing distance different processes nondeterminism resolved probabilistic scheduler deterministic way 
notion pseudometric strictly related notion channel capacity information theory ct 
hand notion confinement processes provides natural statistical interpretation terms number experiments needed average distinguish confined processes 
shown measure security degree systems formal interpretation metric induced norm linear operator associated probabilistic processes 
works deal approximate reasoning order obtain relaxed notion truth goal moving qualitative scenario unique truth values quantitative scenario interval collection truth values 
line approaches investigated koz js bw aldini di pierro related information flow capacity issues 
asymptotic notion probabilistic equivalence defined estimate secrecy property 
particular setting variant spi calculus observational equivalence expressed terms indistinguishability polynomial time statistical tests 
secrecy checked verifying protocol analysis observationally equivalent idealized protocol 
respect framework probabilities intended means polynomial time treatment cryptographic primitives come play modelling protocol behaviour 
aldini di pierro gorrieri hankin 
formal approaches approximating noninterference properties 
foundations security analysis design ii tutorial lectures springer lncs 
abg aldini gorrieri 
process algebraic approach analysis probabilistic noninterference 
journal computer security 
bh baier hermanns 
weak bisimulation fully probabilistic processes 
proc 
th int 
conf 
computer aided verification cav springer lncs 
ba aldini 
discrete time generative reactive probabilistic processes different advancing speeds 
theoretical computer science 
bb bernardo 
compositional asymmetric cooperations process algebras probabilities priorities time 
proc 
st workshop models time critical systems entcs 
bw van worrell 
quantitative verification probabilistic systems extended 
proc 
th international colloquium automata languages programming icalp springer lncs 
chm clark hunt malacaria 
quantitative analysis leakage confidential data 
entcs di pierro eds elsevier science publishers 
ct cover thomas 
elements information theory 
john wiley new york 
desharnais gupta jagadeesan panangaden 
approximation labeled markov processes 
proc 
th symposium logic computer science lics pp 
ieee cs press 
desharnais gupta jagadeesan panangaden 
metric analogue weak bisimulation probabilistic processes 
proc 
th symposium logic computer science lics pp 
ieee cs press 
di pierro hankin 
quantitative relations approximate process equivalences 
proc 
th int 
conf 
concurrency theory concur springer lncs 
aldini di pierro di pierro hankin 
measuring confinement concurrent probabilistic systems 
proc 
wits ifip wg acm sigplan gi workshop issues theory security 
di pierro hankin 
approximate noninterference 
proc 
th computer security foundations workshop csfw pp 
ieee cs press 
fg focardi gorrieri 
classification security properties 
journal computer security 
focardi gorrieri 
non interference analysis cryptographic protocols 
proc 
th int 
colloquium automata languages programming icalp springer lncs 
gss van glabbeek smolka steffen 
reactive generative stratified models probabilistic processes 
information computation 
gm goguen meseguer 
security policy security models 
proc 
symposium security privacy ssp pp 
ieee cs press 
gra gray iii 
probabilistic interference 
proc 
symposium security privacy ssp pp 
ieee cs press 
js 
jou smolka 
equivalences congruences complete axiomatizations probabilistic processes 
proc 
st int 
conf 
concurrency theory concur springer lncs 
koz kozen 
semantics probabilistic programs 
journal computer systems sciences 
lincoln mitchell mitchell scedrov 
probabilistic poly time framework protocol analysis 
proc 
th conf 
computer communications security pp 
acm press 
lowe lowe 
quantifying information flow 
proc 
th computer security foundation workshop csfw pp 
ieee cs press 
mil milner 
communication concurrency prentice hall 
ryan mclean millen gligor 
non interference needs 
proc 
th computer security foundations workshop csfw pp 
ieee cs press 
rs ryan schneider 
process algebra non interference 
journal computer security 
shao shao 
mathematical statistics 
springer texts statistics springer verlag new york berlin heidelberg 
smith smith 
probabilistic noninterference weak probabilistic bisimulation 
proc 
th computer security foundations workshop csfw pp 
ieee cs press 

