topology centric look service garc ross biersack felber keller institut eurecom sophia antipolis france felber eurecom fr polytechnic university brooklyn ny usa ross poly edu 
topological considerations paramount importance design lookup service 
toplus lookup service structured peer peer networks hierarchical grouping peers network ip prefixes 
toplus fully distributed symmetric sense nodes role 
packets routed destination path mimics shortest path providing small stretch 
experimental evaluation confirms lookup toplus takes time comparable ip routing 
important proposals put forth providing distributed peer peer lookup service including chord pastry tapestry :10.1.1.111.1818:10.1.1.111.1818:10.1.1.140.3129:10.1.1.105.3673:10.1.1.28.5987:10.1.1.28.5987
lookup services compared ways including speed lookup implementation complexity symmetry potential caching resilience faults attacks 
turns measures speed lookup potential caching highly desirable lookup service takes underlying ip level topological considerations account 
acknowledging importance topological considerations researchers proposed number modifications original lookup services take topology special consideration 
position topological considerations paramount importance lookup service designing lookup service topology needs built ground 
explore issues 
design lookup service topological considerations take precedence 

advantages disadvantages topology centric design 

topology centric design modified advantages original design preserved disadvantages 
respond question propose new lookup service topology centric look service toplus expressly designed ground exploit topological structure underlying internet 
toplus nodes topologically close organized groups 
furthermore groups topologically close organized topologically close organized groups level hierarchy heterogeneous size fan outs groups heterogeneous 
groups derived directly network prefixes contained bgp tables sources 
toplus strengths including stretch packets routed destination path mimics router level shortestpath distance providing small stretch 
caching demand caching data straightforward implement dramatically reduce average file transfer delays 
efficient forwarding shall see nodes highly optimized ip longest prefix matching techniques efficiently forward messages hop 
symmetric toplus carefully designed reflect underlying network topology nodes similar responsibilities 
toplus design lookup service 
serves benchmark lookup services compare stretch caching performance 
describing toplus lookup service detail evaluate performance group structures derived large set prefixes obtained mainly bgp routing tables 
experimental results show toplus provides small stretch configurations 
obtain near optimal stretch figures nodes maintain quite large routing tables 
organized follows 
related section 
section describe toplus design elaborate limitations possible solutions section 
section describe obtained nested group structures bgp tables measurement procedure evaluating average stretch 
provide discuss experimental results 
conclude section 
related authors show original design modified account topological considerations 
approach online measurement techniques group nodes bins 
measurement binning technique significantly reduce stretch resulting stretch remains significant simulation results 
authors examine topological properties modified version pastry 
design message typically takes small topological steps initially big steps route 
shall see toplus opposite initially large step series small steps 
reports significantly lower stretches lookup services reports average stretch mercator topology model 
coral proposed adapt chord internet topology :10.1.1.13.2762
coral organizes peers clusters uses hierarchical lookup keys tries follow path inside peer cluster possible 
query passed higher level clusters lookup continue inside original cluster 
cluster architecture cap architecture built ground topological considerations 
toplus differs cap ways 
importantly cap unstructured architecture toplus structured dht architecture 
cap uses level hierarchy toplus uses multi level hierarchy cap uses supernodes managing groups toplus uses symmetric design 
toplus mandate specific clustering technique believe clustering procedures krishnamurthy wang cap currently promising techniques create groups toplus 
overview toplus lookup service key responsibility node 
message containing key lookup service routes message current node responsible message travels source node ns series intermediate peer nodes 
nv destination node nd node responsible principal goals toplus follows message key source node ns sends message ip level routers hop node topologically close nd arriving message remains topologically close nd routed closer closer nd subsequent intermediate nodes reaches nd 
clearly lookup service satisfies goals stretch close 
formally describe toplus context ipv 
set bit ip addresses 
collection sets set set ip addresses 
refer set group 
group contain group said inner group 
say collection proper nesting satisfies properties 

pair groups groups disjoint group proper subset 

inner group union finite number sets 
consists set contiguous ip addresses represented ip prefix form example 
shown section collection sets created collecting ip prefix networks bgp tables sources 
case sets correspond ases sets subnets ases sets aggregations ases 
approach defining bgp tables require sets properties proper nesting satisfied 
additionally groups may aggregated new artificial tiers may introduced order reduce size nodal routing tables 
note groups differ size number groups group fanout different group group 
simplicity assume ip addresses permitted 
course blocks ip addressed private blocks defined 
toplus refined accordingly 
straightforward see proper nesting relation defines partial ordering sets partial ordering defines partial order tree multiple tiers 
set tier highest tier 
group belongs tier exist define remaining tiers recursively manner see 
note leaf groups partial order tree inner group 
node state node required know ip addresses relatively small part nodes 
describe node state denote number tiers tree set current nodes consider node node contained collection telescoping sets denote sets hn hn hn hn tier depth inner group 
telescoping sets siblings partial order tree see 
si set siblings groups hi tier union sibling sets sn 
part node state information group node know ip address node node know ip addresses nodes inner group 
refer collection sets ip addresses node routing table constitutes node state 
consider number ip addresses stored node routing table 
assume node inner group lowest tier total number ip addresses node routing table hl 
formation nested groups desirable prevent routing table large order minimize nodal storage computation 
time desirable prevent node inner group table large 
xor metric key required element set bit binary strings fixed 
key drawn uniformly randomly biased describe 
key denote bit suffix note corresponds ip address 
discussion typically refer key bit suffix original key 
key ip address expressed 

xor metric defines distance ids metric properties curious property hold standard metrics max 
number bits common prefix 

note refinement longest prefix matching 
unique longest prefix match closest terms metric 
ties longest prefix match metric break ties 
kademlia dht uses xor metric 
key node minimizes node said responsible nodes equally close responsible node uniquely defined 
lookup algorithm node lookup api 
node ns inputs api key bit suffix api returns node nd nodes closest terms xor metric 
suppose node ns wants look node ns determines node routing table closest terms xor metric 
suppose node nj closest 
node ns forwards message nj 
process continues forwarding message peer peer message key reaches node nd closest node nd routing table nd 
trivial prove nd node responsible groups nestings derived directly underlying topology toplus topology centric 
set groups form proper nesting straightforward show number hops look depth partial order tree 
typically big topological jumps initially example going fig 

sample toplus hierarchy inner groups represented plain boxes 
source destination subsequent jumps typically shorter message converges target subnet 
note toplus satisfies goals described section 
hop message sent node group say nd 
node topologically close nd 
message arrives remain arrives nd 
previously mentioned node toplus mimics router sense routes messages generalization longest prefix matching ip addresses 
nodes longest prefix matching schemes deployed high speed routers routing messages 
overlay maintenance new node joins system asks arbitrary existing node determine toplus closest node ip address key 
denote closest node node initializes routing table routing table 
node routing table modified satisfy diversity property node ni routing table asks ni random node ni group 
way nodes group respective sets delegates group disjoint high probability 
diversity property aims making routing robust case delegate fails possible node delegate 
small fraction existing node tables modified joins nodes group update inner group tables 
tier tier tier maintenance overlay network relatively simple 
note groups virtual fail nodes fail 
existing groups partitioned aggregated slow time scale need 
needed keys moved group lazily node receives query key storing node perform query excluding group 
key retrieved corresponding location subsequent queries normally satisfied 
demand caching isp university corporate campus residential isp deploys web cache improve file transfer times 
similar manner toplus provide powerful caching service 
suppose node ns wants obtain file associated key ns learns lookup service node nd responsible key node ns asks nd send file directly 
unfortunately may bottleneck physical links example isp peering interfaces ns nd 
preferable ns obtain cached copy file topologically close node node high speed lan ns 
suppose group wants provide caching service nodes inner group group higher hierarchy 
suppose pairs nodes send files relatively quickly 
example nodes may interconnected highspeed lan 
distributed caching service nodes configured contact cache attempting download desired file global lookup service 
done follows 
network prefix denoted suppose node ns wants find file associated key ns creates new key kg bits replaced bits node ns inserts message key kg toplus 
lookup service return ns node ng responsible kg 
node ng messages traveling ns ng confined ns asks ng ng cache hit ng send ns relatively high rate 
ng cache ng toplus obtain global lookup service 
obtaining ng cache local shared storage pass copy ns 
nodes cooperate provide distributed cache storage aggregated nodes node employ file replacement policy 
ordinary web cache popular files cached techniques optimally replicate files handle intermittent nodal connectivity 
distributed caching idea extended distributed cache hierarchies analogous web cache hierarchies 
files pushed groups creating distributed set cdn nodes designated groups 
drawbacks solutions toplus design gives precedence topological considerations toplus exhibit excellent stretch caching performance 
admittedly features come sacrificing desirable properties lookup service 
discuss drawbacks toplus design 
approaches address drawbacks 
non uniform population id space number keys assigned inner group approximately proportional number ip addresses covered inner group 
number active nodes inner group necessarily proportional size terms ip address coverage 
means nodes may responsible disproportionate number keys 
lack virtual nodes nodes different storage processing bandwidth desirable assign larger proportion keys powerful nodes 
chord pastry tapestry lookup services handle heterogeneous nodes assigning virtual nodes powerful peers 
toplus currently defined facilitate creation virtual nodes 
correlated node failures applications built top lookup service including persistent file storage require key data pairs replicated multiple nodes 
chord pastry 
tapestry toplus replicate key data pairs successor nodes inner group 
replicating manner entire inner group fails example access link crashes copies data key unavailable 
look services correlation node id locality services sensitive correlated node failures 
outline number enhancements toplus solve partially solve problems listed 
enhancement nonuniform distribution creating keys 
specifically suppose inner groups estimate average fraction active nodes inner group qj 
assigning key choose integer deterministically 
weights 
qj 
suppose choose group group prefix choose key uniformly set ip addresses covered order address lack virtual nodes issues resulting tight coupling node ids ip addresses assign node permanent virtual id uniformly distributed address space node inner group 
powerful nodes assigned multiple permanent virtual ids creating virtual nodes 
inner group table ip address table list virtual ids associated ip address 
making change modify toplus follows 
lookup process continues message reaches node longest prefix match inside inner group message node determines virtual ids inner group table virtual id closest key exclusive metric 
sends message node corresponding virtual id address issue correlated node failures 
solve problem replicate key data pairs need distribute replicas multiple inner groups 
inner group fails need detect failure move copies key data pairs new inner groups 
toplus modified solve problem comprehensive solutions fairly involved 
due lack space sketch partial solution single hash function distinct hash functions 
node publishes content data meta data system store content different locations geographically dispersed high probability 
benchmarking toplus toplus group defined ip network prefix 
simply dividing ip space arbitrary chunks ip prefixes obtained sources bgp routing tables routers internet prefixes known networks corporate lans isps 
bgp information offers coarse level perspective internet grouping ip prefixes lans isps provide finer level clustering 
shown ip prefixes obtained bgp routing tables form clusters hosts topologically close 
assumption locality property preserved extent coarser ip prefixes regroup clusters super clusters recursively ip prefixes shorter clusters larger 
ip prefix information aim constructing topology centric toplus hierarchy routes queries destinations time comparable ip routing 
ip network prefixes obtained sources bgp tables provided oregon university university michigan merit network network ip prefixes routing registries provided networks ripe 
merging information eliminating reserved non routable prefixes obtained set distinct ip prefixes organize partial order tree denoted prefix tree 
studies nlanr show total usable ip space routable 
tree covers total usable ip space believe offers nearly complete view internet 
measuring stretch stretch defined ratio average latency toplus routing prefix tree average latency ip routing 
ideally traceroute tool measure delay arbitrary hosts internet 
secu achieved specifying host gateway packets pass 
source ip prefixes provided oregon university michigan merit network networks ripe routing registry total distinct ip prefixes table 
ip prefixes obtained different sources 
measures deployed internet router nowadays prevent simple accurate measurement technique 
king tool obtain experimental results 
king gives approximation distance arbitrary hosts measuring latency dns servers responsible hosts 
general principle measurements shown peer address sends query key responsible peer 
toplus routing procedure peer route query inside tier group containing peer selects delegate routing table group note group tier satisfying 
assuming delegate group query routed path labeled latency 
delegate selects unique tier group inside contains 
new delegate node tier group 
query forwarded delegate node path 
destination group reached hop neglect final forwarding query inside destination group 
contrast toplus routing query follow path ip routing 
stretch particular case general consider length path peer weighted average length possible paths 
path weights derived probability delegate peer different group tier 
assuming uniform distribution peers internet probability node choosing delegate group tier parent si computed number ip addresses inner groups descendant divided number ip addresses inner groups descendant simplify computations keep local tier approximate proba bility computing space ip addresses covered network prefix divided space ip addresses covered groups children including 
instance hop probability delegate peer group simplified formula probability approximated 
consider query issued node ns inner group key owned node nd inner group tier dt toplus latency node group node group dip corresponding direct ip latency 

hn section telescoping set groups associated node nd hn 
reach nd ns forwards request delegate node ng belonging inner groups 
fig 

path followed query prefix tree 
pg ip pg probability ng pg note dip ns case ns delegate 
process continues ng forwarding query delegate node inner groups 
equation similar equation pg dip pg successive recursions allow obtain value dt 
obtain average stretch prefix tree compute stretch fixed origin peer randomly generated destination ip addresses king measure delay hop 
compute path length origin peer destination peer average length possible paths destination weighted individual path probabilities described 
compute stretch prefix tree average stretch origin peer destination peers 
note choice origin peer important routing starts tier independent deep origin peer located hierarchy 
experiments chose origin peer institut eurecom ip address 
confidence intervals measurements 
detail different prefix tree configurations considered experiments 
original bit regrouping bit regrouping original tier tier tier tier tier tier fig 

number groups tier prefix trees 
original prefix tree 
call original prefix tree tree resulting ordering ip prefixes operator 
partial order tree different tier groups prefixes groups tier subgroup tier groups tier subgroup 
deepest nesting tree comprises tiers 
number non inner group tier decreases rapidly tier depth roughly power law resulting tree strongly unbalanced 
left shows distribution prefix lengths tier 
prefixes bits contain nested groups original prefix tree large number tier groups 
consequently routing tables peer large keep track delegate tier group 
hand ip addresses covered tree tier inner groups large number peers reached just hop 
stretch toplus vs ip confidence interval tier original bit regroup 
bit regroup 
mean table 
stretch obtained tree depending tier destination peer 
computed average stretch original prefix tree query toplus takes average time reach destination direct ip routing 
table average stretch ip addresses located inner groups tiers 
expected observe deeper go tree reach destination higher stretch higher probability making hops 
note half queries destination peer tier group 
modified prefix trees 
previously mentioned large number groups tier peers network know delegate groups 
order reduce size routing tables modify tree aggregating small groups long prefix larger groups ip prefix sources 
consider groups small prefix longer bits represents tier groups experimental data 
bit regrouping approach consists aggregating small groups bit aggregate prefix groups 
means tier prefix moved tier new bit prefix inserted tier 
call approach bit regrouping 
process creates new tier groups average subgroups 
distribution tier prefixes shown middle 
resulting tree contains tier groups contain subgroups 
measured average stretch tree see table 
results indicate bit regrouping essentially preserves low stretch 
bit regrouping experimented second approach prefix regrouping consists coarser bit aggregate aggregate prefix groups 
tier prefix moved tier new bit prefix inserted tier exist 
call approach bit regrouping 
process creates new tier groups average subgroups 
distribution tier prefixes shown right 
resulting tree contains tier groups times original prefix tree 
groups contain subgroups half tier groups subgroups 
tree clearly balanced direct consequence reduction tier groups size routing table peer substantially smaller 
measured average stretch new tree see table 
remarkable result demonstrates aggressive aggregation large sets tier groups coarse bit prefixes low stretch property original tree preserved 
routing table size principal motivation prefix regrouping reduce size routing tables 
estimate size routing tables choosing random uniformly distributed ip addresses peers peers examine structure tree determine sibling sets inner group nodes hn compute size hn routing table node table shows mean routing table size depending tier peer average size frequency original tree prefix length bits frequency bit regrouping tree prefix length bits frequency bit regrouping tree prefix length bits fig 

prefix length distribution tier groups prefix trees original bit regrouping bit regrouping 
tiers 
looking tree structure immediately understands route table size mainly determined number tier groups 
eliminate delegates routing table see size routing tables needed route queries inside tier group remains small 
mean routing table size tier original bit regroup 
bit regroup 
mean table 
mean routing table size tree depending tier peer 
tree left column full routing table size right column size tier groups 
bit regrouping routing tables count entries see table 
recognize large number peers aware systems similar figures peers know 
reduce routing table sizes transform original bit regrouping trees tier prefixes bit long limit number tier groups 
refer resulting trees original bit 
purpose tier prefix moved tier new bit prefix inserted tier exist 
create tree called tier tiers 
top tier formed mean routing table size tier original bit tier table 
mean routing table size trees tier groups bit prefixes 
groups bit long prefixes tier groups bit long prefixes third tier groups bit long prefix 
mean routing table sizes trees table show dramatic reduction number entries stored peer 
stretch significantly penalized transformations tree shown table 
clearly face tradeoff lookup latency memory requirements 
original bit tier stretch toplus ip confidence margin table 
toplus vs ip stretch trees tier groups bit prefixes 
toplus takes extreme approach integrating topological consideration service 
toplus fully distributed symmetric sense nodes role 
toplus bears resemblance pastry tapestry :10.1.1.111.1818:10.1.1.111.1818:10.1.1.118.1870:10.1.1.28.5987
particular pastry tapestry delegate nodes prefix suffix matching route messages 
pastry map groups directly underlying topology resulting unbalanced tree rigid partitioning routing scheme initially big physical jumps small ones 
shown toplus offers excellent stretch properties resulting extremely fast lookup service 
toplus suffers limitations exposed discussed believe remarkable speed lookup simplicity promising candidate large scale deployment internet 
furthermore toplus employed straightforward manner implement demand caching data isps corporate networks serve benchmark measuring performance lookup services 

stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications proc 
acm sigcomm 

ratnasamy handley karp shenker scalable content addressable network proc 
acm sigcomm 

rowstron druschel pastry scalable distributed object location routing large scale peer peer systems ifip acm international conference distributed systems platforms middleware heidelberg germany pp 
november 

zhao kubiatowicz joseph tapestry infrastructure fault tolerant widearea location routing tech 
rep ucb csd computer science division university california berkeley apr 

shenker ratnasamy handley karp topologically aware overlay construction server selection proceedings infocom new york city ny 

castro druschel hu rowstron topology aware routing structured peer peer overlay networks tech 
rep msr tr microsoft research microsoft way redmond wa 

joseph zhao duan huang kubiatowicz landmark routing overlay networks proceedings iptps cambridge ma mar 

tangmunarunkit govindan shenker estrin impact routing policy internet paths infocom pp 


freedman mazieres sloppy hashing self organizing clusters proc 
nd international workshop peer peer systems iptps mar 

krishnamurthy wang xie early measurements cluster architecture systems acm sigcomm internet measurement workshop san francisco ca nov 

wang network aware clustering web sites proc 
sigcomm aug 

wang network aware client clustering applications 
phd thesis cornell university may 

maymounkov mazieres kademlia peerto peer system xor metric proceedings iptps cambridge ma mar 

waldvogel fast longest prefix matching algorithms analysis applications 
aachen germany shaker apr 

ross adaptive replication replacement strategies caching unpublished july 

rv archive uoregon edu oregon university route views archive 

www merit edu routing table merit network internet performance measurement analysis project 

www net networks 

www net whois html whois service ripe 

nlanr net nlanr 

www traceroute org traceroute site 

gummadi saroiu gribble king estimating latency arbitrary internet hosts proceedings nd internet measurement workshop marseille france november 

acuna martin nguyen planetp infrastructure support information sharing technical report dcs tr department computer science rutgers university 
