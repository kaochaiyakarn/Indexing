arachnid adaptive retrieval agents choosing heuristic neighborhoods information discovery menczer computer science engineering department university california san diego la jolla ca usa fil cs ucsd edu arachnid distributed algorithm information discovery large dynamic distributed environments world wide web 
approach distributed adaptive population intelligent agents making local decisions 
behavior algorithm analyzed simplified model web environment 
analysis highlights interesting feature web environment arachnid search methods 
performance algorithm illustrated simulated environments preliminary experiments prototype agents search real web environments 
interactions discussed unsupervised learning individual agents evolution population level role played user relevance feedback 
imagine looking just released product web 
probably list starting points provided favorite search engine browsing digital library 
point probably going browse manually promising links fashion resembling search satisfied browsing lead useful information 
users invest large amount time manual searches 
necessary search engines perfectly identify sets pages relevant queries know experience possible 
growth internet posing new challenges disciplines information retrieval provided useful techniques search problems 
focuses key characteristics web different 
environment large growing fast pace distributed imposing differential costs accessing documents heterogeneous respect document format style content dynamic documents added deleted rearranged constantly 
features suggest algorithms large populations distributed agents capable making local decisions 
availability powerful learning techniques relevance feedback information generated browsing users suggests agents adapt behavior experience 
describes adaptive intelligent methods automate line information search discovery web similar networked environments 
stated concisely problem consists locating documents possible relevant user query little time possible 
system analyze document text follow hyperlinks documents 
introduce simple algorithm inspired prior agents adapting environments sharing characteristics web menczer belew analyze efficiency abstracted model web 
algorithm tested simulated environments results preliminary experiments interesting piece web outlined 
background traditional approach retrieving information web extension solution problem static non distributed collections 
cases user submits query centralized server turn uses index retrieve list documents matching query 
classic case algorithm constructs index scans corpus 
web search engines index usually built updated line incremental fashion 
performed automatic programs called robots crawlers attempt visit exhaustively existing document 
solution scale equally domains 
centralized case collection changes index rebuilt entirely 
rare cost building index amortized queries 
distributed case cost larger robots know changes occur revisit documents periodically 
transferring documents internet expensive 
robots impose high load network resources costs hidden user submits query 
active robots improve accuracy enormous costs network load 
need complement index search engines intelligent browsing user 
autonomous agents semi intelligent programs making automatic decisions behalf user viewed way decreasing amount human computer interaction necessary manage increasing amount information available online maes 
machine learning techniques suggested produce effective information agents yielding example agents perform lookahead searches provide suggestions user basis reinforcement learning armstrong 
techniques weighted keyword vector representations relevance feedback conjunction genetic algorithms paradigms inspired artificial life applied information retrieval filtering sheth maes kraft shoham moukas 
approaches led multi agent information systems population evolution individual learning occur 
proposed application machine learning methods problem information discovery menczer 
traditional genetic algorithms selection schemes global operation ranking averaging performed fitness population decide genotypes get reproduce 
result population typically converges solution hopefully optimum 
unimodal behavior appropriate information discovery domain relevant documents possible need retrieved just relevant 
techniques dealing multimodal optimization problems fitness sharing horn suggested genetic algorithms literature efficient distributed environments require global operations mahfoud 
approach proposed employs genetic algorithm local selection 
agent fitness 
situate initialize agents ffl alive agents 
pick random agent 
pick link follow 
fetch new document da 
ea ea gamma cost da da new da 
mark da visited 
learn reinforcement 
ea ffl mutate clone ea ea die pseudo code arachnid algorithm 
compared members population 
measure fitness energy accumulated time selection occurs distributed fashion comparing energy fixed threshold 
selection scheme inspired artificial life models endogenous fitness menczer belew 
result type non converging behavior required multimodal optimization local selection appropriate information discovery problem 
related method proposed de bra post fish search algorithm agents identical clones fixed exhaustive search strategies 
algorithm arachnid algorithm shown 
keep fundamental algorithm schema general possible representation specific details left black boxes subsections 
notice threshold ffl constant decision agent reproduce local independent agents making arachnid distributed algorithm 
line user may assess relevance documents visited algorithm certain point 
assessments alter behaviors online agents 
interactions occur computations energy payoffs new visited documents respectively step 
relevance feedback mechanism depends agent representation 
general function correlated user assessment document relevance 
user initially provides list keywords list starting points form bookmark file 
step population initialized pre fetching starting documents 
agent positioned documents random behavior depending representation initial reservoir energy 
step agent senses obtained example consulting search engine 
local neighborhood analyzing text document currently situated 
way relevance neighboring documents pointed hyperlinks current document estimated 
link relevance estimates agent moves choosing links current document 
step agent energy updated 
energy needed order survive continue visit documents behalf user 
agents charged costs network resources incurred transferring documents 
agents rewarded energy visited documents appear relevant 
role function agent uses estimate relevance documents 
steps algorithm embody principle conservation resources 
agents visiting marked documents get energy user feedback 
mechanism implemented cache speeds process minimizing duplicate transfers documents 
caching documents form communication bottleneck parallelism distributed algorithms 
network communication expensive resource algorithm performance improvement warranted cache outweigh degradation 
instantaneous changes energy step reinforcement signals 
way agents adapt lifetime representation allows 
agent modify behavior prior experience learning predict best links follow 
step agent may killed selected reproduction 
case offspring situated document location parent mutated provide evolution necessary variation 
evolutionary adaptation differs learning important respects 
change reproducing agents biases population successful individuals 
second selection energy accumulated steps evolution averages short term energy fluctuations rely better assessments agent behaviors 
output algorithm flux documents visited population 
naive representation describe particularly simple representation allows elementary behaviors limited relevance feedback interactions user 
simplicity lends characterizing statistically way simulations information environments best suited approach 
costs function resources example transfer latency 
simplicity constant cost assumed new documents cost cache hits 
representation consists genotype passed offspring reproduction actual mechanisms genotype implement behaviors 
naive representation agent genotype consists parameters fi fl 
roughly represents degree agent trusts descriptions page contains outgoing links represents degree agent trusts user relevance assessments 
behaviors implemented algorithm follows numbers parentheses refer algorithm steps 
initialization fi fi max fl fl max uniform random distribution 
action selection agent computes relevance estimates link current document weighted sums keywords da match dist match ae dist number links separating agent uses stochastic selector pick link probability distribution pr fi da fi relevance feedback user assessed relevance current document oe gamma agent receives energy fl oe relevance computation agent estimates relevance document computing cosine matching function document query normalized appropriate energy range da match learning occurs representation 
mutation offspring fi fi gamma fi fi fi fl fl gamma fl fl fl max fi fl parameters 
fi grow bound fl distribution clipped fl max discourage stationary behaviors 
vector representation consider alternative representation may better suited detect useful features information environment internalize adaptive behaviors learned evolved 
information easily available analyzable text features want focus words 
agent genotype contain vector keywords feed forward neural nets employed adaptive computational devices 
genotypes contain vector real valued weights 
keywords represent agent opinion terms best discriminate relevant documents rest 
weights represent relative possibly negative importance terms 
sketch algorithm working basis representation 
initialization agent word vector initialized query terms neural net architecture inputs query terms provided random initial weights distributed uniformly small interval 
action selection agent estimates relevance associated link considering words link similarly naive representation agent keyword vector place original query 
link weighted frequencies terms current document fed agent neural net computes relevance estimate naive representation stochastic selector explore consequences alternative moves 
relevance feedback energy obtained relevance assessments naive representation 
addition feedback list encountered words maintained 
word list associated signed counter updated time document assessed user ae oe gamma oe gamma relevance computation newly visited document yields energy tanh freq delta freq frequency term document tfidf weight term variation term frequency inverse document frequency index weighting scheme algebraic term frequencies 
relevance feedback delta log fraction cache documents containing learning representation lends naturally learning way connectionist learning lin 
agent visits document reinforcement signal 
agent network weights adjusted back propagation error teaching input delta max discount factor 
mutation weights mutated adding random noise 
offspring word vector mutated replacing term arg min ji arg max freq delta ji document birth 
environment stated performing useful tasks networked information environments difficult large dynamic non centralized 
characterize environments bit closely 
information providers impose structure distributed database hypertext case web 
environment represented graph jv nodes corresponding documents edges corresponding hyperlinks 
statistical features word frequencies physical properties network organization protocols course important dimensions environment exploited 
want argue semantic structure imposed organization documents manually constructed hyperlinks provides useful resource 
clear case structured information environments editors ensure documents organized meaningful classification criteria 
unstructured information spaces web authors tend cluster documents related topics letting point hyperlinks 
refer hypothetical property semantic topology 
structure detected exploited intelligent algorithms worthwhile question investigate 
idea identify conditions ecology information agents outperform nonadaptive search algorithms breadth random walk 
comparing arachnid algorithm time step random document retrieved 
correlations relevance links detected arachnid population exploit locality document space way local reproduction edges current locations evaluate advantage random search 
simplify analysis assume agent follows random edge current node ii interactions agents negligible 
assumptions reasonable arachnid run reasonable time passes 
precision defined fraction returned documents considered relevant user 
interested time course retrieval process employ measure performance rate relevant documents retrieved 
define relevance measure ae fv 
respect query 
characterize generality query pr ae ju ae constant expected rate relevant documents retrieved random algorithm random knows certain document relevant may expect neighbors 
define relevance autocorrelation graph conditional probability pr ae jae parameters characterize search graph respect query 
algorithm starts running define fraction current size population number agents current population located relevant nodes 
expected rate relevant documents retrieved arachnid algorithm spider gamma yielding performance improvement ffi spider random gamma easy see ffi hypothesis useful correlation relevant documents expressed condition call semantic topology conjecture realistic queries information environments 
derived recursively estimate performance time 
derivation omitted lack space 
recursions solved numerically equation obtain performance estimates arachnid respect random search 
way proceed see time necessary arachnid reach frequency retrieval relevant documents double random algorithm function generality relevance autocorrelation nodes accessed improvement obtained 
times plotted ffi different parametric characterizations 
time required outperform random search increases sharply situation documents relevant case example presence noise words query 
performance degrades similarly expected relevant documents closer random documents advantage local search 
wide range reasonable parameterizations arachnid algorithm behaved 
bibliometric studies suggest web environment possesses structured semantic topology larson 
observation arachnid approach 
semantic topology conjecture tested directly arachnid outperform random search assumptions 
realistic estimates determined gathering statistics actual web 
performed preliminary measures set realistic queries corresponding range different values 
queries fed wais engines searching hypertext collections lycos large index actual web pages britannica online better structured article database lycos eb 
retrieved set approximate relevant set collect relevance autocorrelation statistics 
obtained counting fraction links documents relevant set pointing back documents set plotted size relevant set normalized size collection 
results indicate information fact structured way support semantic topology conjecture 
lycos queries eb queries lower bound semantic topology measures lycos eb search engines 
values normalized eb lycos 
lower bound simulations comparing arachnid search algorithms real data run experiments simulated models web 
graphs constructed run time relevance topology information built ad hoc accordance userspecified parameters 
web model validated experiments actual data allows efficiently explore algorithmic behaviors respect parameters 
arachnid simulator implemented naive agent representation described section 
arachnid search algorithms cache visited documents 
number new documents retrieved measure time 
comparison bfs breadth search bfs baseline performance evaluation 
typical exhaustive search algorithm visit node time theta 
bfs viewed local algorithm sense new nodes visited edges previously visited ones 
focus adaptively promising areas 
arachnid adapt exploration exploitation behavior local conditions encountered agent selective reproduction evolving fi parameter 
shows comparison bfs arachnid simulation experiments 
performance measured recall defined fraction relevant documents retrieved 
observe implications different models seman recall captures relevant documents suggested user 
precision valid measure 
obtained modulo generality constant dividing recall level corresponding value axis 
fraction documents visited bfs arachnid fraction documents visited bfs arachnid fraction documents visited bfs arachnid arachnid versus bfs simulated graphs ini outi 
plots show recall function fraction documents retrieved total 
tic topology link estimation accuracy 
semantic topology usual modeled link estimation accuracy modeled quantity pr ae simulator draws link estimates 
experiment semantic topology counts link estimates noise level 
evolving fi values consequence 
result shows semantic topology sufficient condition arachnid outperform exhaustive algorithms 
second experiment situation reversed semantic topology links provide useful hints agents 
exploited strategies evolving fi values 
cues provided environment allow arachnid secure better performance 
third experiment attempts model realistic situation semantic topology somewhat detectable experiment link estimates somewhat reliable second experiment 
population averages evolved fi values range link estimation accuracies means standard errors repeated simulation runs 
arachnid significantly outperform bfs 
internalization evolution allow agents detect important features information space adapt strategies accordingly 
naive behaviors implemented simulator partial answer question obtained analyzing fi distribution population agents 
run simulations parameters 
run fi initialized uniform distribution range measured document accesses 
shown fi fact evolve match reliability encoded links inaccurate links low drive fi low random walk values accurate links high push fi higher best values 
positive correlation fi indicates population internalized environmental feedback accuracy agents estimate link relevance 
local selection simulator support sought claimed superiority arachnid versus traditional machine learning approach standard genetic algorithms class problems 
main feature discriminating local versus global selection 
difference captured considering reproduction threshold ffl cf 
model global selection ffl average energy level current population constant 
carried series experiments different simulated environments random graph link accuracy generality 
relevant nodes grouped separate components niches 
think niches local groups documents altogether making relevant set recall improvement local selection global selection different graphs parameterized semantic topology multimodality 
corresponding multiple ambiguous queries 
environments parameterized semantic topology measured relevance autocorrelation multimodality measured number niches 
varied test hypothesis environments complex local selection provides advantage global selection schemes genetic algorithms 
environment parameterization algorithms ran amount time nodes visited 
results shown 
plot shows axis recall improvement local global selection 
single exception environment global selection leads population premature convergence subset relevant documents consequent extinction complete recall impossible 
contrary arachnid consistently achieves recall 
local selection shows greatest improvements relevance poorly correlated small highly multimodal large conditions recall level achieved global selection degrades due exploitation information 
web validation testing purposes implemented client prototypes arachnid search actual web line 
agents employ information retrieval tools filter noise words stemmer porter frakes baeza yates 
efficient representation visited documents stored shared cache 
preliminary experiments performed arachnid prototypes 
evaluation main problem web due difficulty collecting relevance assessments 
subset web encyclopaedia britannica corpus eb bfs arachnid depth search length search length arachnid bfs queries different depth eb tree 
chosen 
environment relevant sets articles associated large number queries readily available 
articles fact organized hierarchical topical tree called manually built updated skilled human editors 
category title node query articles associated subtree rooted node relevant set 
addition article hyperlinks categories possibly semantically related articles forming graph 
experiments outlined search limited subtree containing approximately category nodes document nodes 
prototype implements naive representation section limitations range behaviors relevance feedback discussed 
measure search length defined number non relevant documents visited relevant document 
search lengths single arachnid run bfs compared queries different depth tree 
notice arachnid randomized algorithm single run provides rough measurement search length 
results shown promising arachnid finds relevant document orders magnitude quickly bfs 
second prototype implements complex vector representation section enabling richer forms adaptation learning relevance feedback 
observe effect learning relevance assessments arachnid performance 
control run learning relevance feedback takes place 
run weights agent neural net adjusted qlearning move 
run documents visited ones relevant set assessed oe 
run learning relevance feedback occur simultaneously 
runs learning relevance feedback learning relevance feedback control documents visited effects learning relevance feedback arachnid performance 
recall level may appear quite low pointed documents seen 
identical starting conditions difference outcomes attributed learning relevance feedback 
plots recall versus documents accessed 
learning causes acceleration discovery relevant documents 
relevance feedback improves recall similar degree course relevant documents 
combination learning relevance feedback results best performance relevance feedback take advantage earlier discoveries elicited learning 
discussed preliminary evidence claim adaptive algorithms local decisions appropriate machine learning methods information discovery distributed environments 
proposed algorithm allowed characterization environmental condition semantic topology sufficient success approach 
way achieve better theoretical analysis algorithm allowing predict behavior wider environmental conditions accounting interactions agents carson impagliazzo 
furthermore data collected reasonably confident conjecture holds real environments 
naive representation allows limited adaptation adjusting agents trust link estimates user feedback 
link estimates representation capture important features environment words 
consequently satisfying evidence notion internalization sought vector representation framework 
agent adaptive perception features includes seed random number generator learning relevance feedback 
relevant user internalized keyword vector neural net guide search process 
agents evolve behaviors internalizing features locally correlated relevance user seeks information sports agents give different weights word rock pages rock climbing rock music 
testing tell additional communication costs involved vector representation due centralized feedback list afford adequate performance improvements 
issue explore vector representation interactions evolution learning affect information discovery process 
argued agents internalize environmental cues different time space scales 
words retain discriminating value general contexts sport vs rock 
local selection allows agents internalize features specific local contexts time scales corresponding agent reproductive cycle 
reinforcement learning natural extension local adaptation shorter time scales 
local selection integrates energy intake time instantaneous energy changes valuable short term feedback signal 
simulation results suggest arachnid effective algorithm compared non adaptive search strategies genetic algorithms global selection 
preliminary experiments eb corpus support results provide encouraging evidence unsupervised reinforcement learning supervised adaptation relevance feedback significantly enhance system performance 
validation sought extensive experimentation real unstructured web environments 
secure languages protocols distributed computation internet available expect see servers allowing mobile agents cpu cycles exchange improved bandwidth 
agents analyze documents server transfer relevant information back client 
distributed algorithms intelligent agents arachnid may provide machine learning techniques developments feasible 
supported part nato apple atg fellowships 
encyclopaedia britannica bcd corpus available 
mark land anonymous reviewers helpful comments dave demers suggesting acronym rik belew constructive criticism discussions 
armstrong freitag joachims mitchell 
webwatcher learning apprentice world wide web 
aaai sss info 
gathering heterogeneous distrib 

shoham 
learning information retrieval agents experiments automated web browsing 
aaai sss info 
gathering heterogeneous distrib 

carson impagliazzo 
personal communication 
de bra post 
information retrieval world wide web making client searching feasible 
st intl 
www conf geneva 
eb 
www eb com 
frakes baeza yates 
information retrieval data structures algorithms 
prenticehall 
horn 

gas sharing search optimization machine learning 
proc 

kraft 
applying genetic algorithms information retrieval systems relevance feedback 
eds fuzziness database management systems 
physica verlag 
larson 

bibliometrics world wide web exploratory analysis intellectual structure cyberspace 
proc 
annual asis meeting 
lin 

self improving reactive agents reinforcement learning planning teaching 
machine learning 
lycos 
www lycos com 
maes 

agents reduce information overload 
comm 
acm 
mahfoud 

comparison parallel sequential niching methods 
proc 
th icga 
menczer belew 
latent energy environments 
adaptive individuals evolving populations models algorithms 
addison wesley 
menczer belew 
complex environments complex behaviors 
adaptive behavior 
menczer belew 
artificial life applied adaptive information agents 
aaai sss info 
gathering heterogeneous distrib 

moukas 

amalthaea information discovery filtering multiagent evolving ecosystem 
proc 
conf 
practical applications intelligent agent technology 
sheth maes 
evolving agents personalized information filtering 
th ieee conf 
ai applications 
