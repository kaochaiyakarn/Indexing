framework structured peer peer overlay networks luc ali seif haridi royal institute technology kth swedish institute computer science sics ali seif sics se sics technical report issn isrn sics se structured peer peer overlay networks emerged candidate infrastructure building novel large scale robust internet applications participating peers share computing resources equals 
past year various structured peer peer overlay networks proposed probably come 
framework understanding analyzing designing structured peer peer overlay networks 
main objective provide practical guidelines design structured overlay networks identifying fundamental element construction overlay networks embedding ary trees 
number ective techniques maintaining overlay networks discussed 
proposed framework ective development dks system preliminary design appears 

exponential growth internet possible connect billions machines scattered globe share computing resources processing power storage content 
order ectively exploit resources trend internet originally intended 
symmetric network machines share resources equals 
mind number novel distributed systems applications characterized large scale high dynamism operating environment built 
distributed systems participating peers directly share resources equals peer peer fashion 
name peer peer systems 
high dynamism systems due reasons mainly 
need freedom peers able join leave system time 
second peers underlying communication network typically funded european project ist european project ist projects ppc ges sweden 
internet fail time 
cope dynamism systems stabilizing despite high dynamism system converge legitimate configurations external intervention 
peer peer systems attractive respects 
user standpoint peer peer computing huge potential reduces need expensive back servers typically perform complex tasks 
administrative costs significantly reduced peer peer systems general built autonomous systems centralized administration 
second scientific perspective peer peer systems large scale distributed systems involve challenging issues fault tolerance scalability security 
current trend building systems consists providing overlay network substrate top novel large scale applications constructed 
overlay network logical network top networks 
known example networks internet 
main purpose overlay network provide ective means huge amount computing resources linked accessed 
seen nowadays various high level distributed services built top overlay network :10.1.1.4.2896
performance high level distributed services strongly depends properties underlying overlay network 
main design approaches identified building overlay networks 
hand un structured overlay networks peers extremely autonomous 
peer joins overlay network connecting existing peers 
say un structured overlay networks built un controlled fashion 
unstructured overlay networks advantage providing flexibility comes finding resources system 
instance arbitrary queries handled easily 
provide restricted guarantees data item inserted system guarantee located needed 
furthermore overlay networks tend ine cient mainly flooding search 
hand structured overlay networks peer joins overlay network connecting defined peers logical identifier :10.1.1.140.3129:10.1.1.19.6221:10.1.1.142.752
say structured overlay networks built controlled manner 
overlay networks provide high guarantees limited query language 
example complex queries supported natural way 
focus structured overlay networks :10.1.1.142.752
term overlay network mean structured overlay network 
core service overlay networks provide location independent virtual identifier message virtual identifier vid overlay network routes message ultimate destination dest vid related vid defined manner 
discuss relation vid dest vid section 
top core service mentioned number high level services distributed hash table dht location independent communication point point communication broadcast multicast object replication caching various consistency models built :10.1.1.4.2896
term key routing place virtual identifier routing 

motivations structured overlay networks various systems proposed 
partial list includes new systems probably come :10.1.1.1.5574:10.1.1.140.3129:10.1.1.19.6221:10.1.1.142.752
unfortunately existing structured overlay networks fragmented way 
consequence understanding new systems requires significant orts 
furthermore analysis comparison overlay networks di cult 
cases designing novel structured overlay networks amounts re inventing 
careful analysis existing structured overlay networks reveals common characteristics logarithmic diameter 
existing structured overlay network designs know strive achieve large networks logarithmic diameter maintaining peer compact routing table 
typically routing table peer logarithmic constant size 
logarithmic diameter ensured varies apparently system 
analyze performance terms overlay hops new system significant orts re invested 
need identify unifying fundamental concept achievement logarithmic degree 
ii convergence stabilization cope high dynamism structured overlay networks designed convergent stabilizing 
dynamism ceased overlay network self configures reach remain legitimate configurations 
dynamism stopped network route messages acceptable performance 
achieve convergence stabilization property practical maintenance techniques needed 

contributions motivations point important aspects contribute 
propose small set practical design principles understanding analyzing building maintaining structured overlay networks 
contributions embedding ary trees simplify understanding logarithmic diameter propose embedding ary trees fundamental concept 
briefly intuitively idea peer root directed acyclic graph spans system 
conjecture structured overlay network ensures logarithmic diameter normal system operation deterministic fashion peer root embedded ary tree form interval compact routing exploited 
addition embedding ary trees elaborate techniques introduced abuse terminology 
term tree term rooted dag directed acyclic graph 
ii local atomic operation reduce disturbances peers join leave system propose join leave operation managed restricted atomic operation involve small part overlay network 
iii correction local atomic operation guarantee system immediately legitimate configurations peers join leave system 
anyway achieved asynchronous distributed system 
joins leaves failures routing table peers inaccurate 
propose correction technique basic technique maintaining structured overlay networks 
technique unnecessary bandwidth consumption avoided 
system perform optimally perturbation injected tra high 
iv correction change correction change change occurs system peers need updated notified 
main challenge find ciently peers need updated 
notification performed cient way 
provide ective mechanisms identification peers need updated notification 

road map rest organized follows 
section summarizes steps considered designing structured overlay networks 
section principle embedding ary trees virtual identifier space 
embedding ary trees relies division virtual space relative fixed 
section presents relative division space 
section fixed division space 
section devoted principle local atomic operation joins leaves peers 
section di erent techniques maintaining structured overlay networks 
section concludes points ongoing 

steps designing structured overlay networks steps designing structured overlay networks summarized 
analysis existing structured overlay networks show number key design decisions considered building structured overlay network 
elaborate steps section 

decide identifier space design decision designing structured overlay network decide virtual identifier space 
document denote identifier space 
choice virtual identifier space motivated reasons 

addressing identifier space plays role address space identifying resources interconnected overlay network 
computing fig 

map items identifier space 
map peers identifier space 
decide assignment items peers 
embedding ary tree interconnect peers 
resource participating structured overlay network receives virtual identifier taken virtual identifier space 
scalability 
provide access large sets resources identifier space chosen large virtual space 
simply application known principle indirection achieving numerical scalability done internet 
typically size large positive integer fixed size virtual space grows exponentially base 
location independent communication 
important aspect virtual identifier space allows peers system communicate point point manner irrespective actual location 
allowing pure mobility 
identifier space assumed distance denoted 
formally function type denotes set real numbers 
required satisfies properties 


possible satisfy properties 

case satisfies properties metric space 
general case 
shall say pseudo metric space mean properties satisfied possibly 
closeness metric defined identifier space serves purposes clustering resources peers typically resource assigned managed peer virtual identifier closest virtual identifier discuss issue subsection 
routing message virtual identifiers typically route message peers 

mapping peers identifier space participating peer receives virtual identifier taken models mapping peers identifier space 
implement mapping peer assumed unique attribute mapping virtual space 
implementation done ways 
way typical approach globally known hashing function sha 
main advantage gives uniform distribution peers identifier space 
uniform distribution peers virtual identifier space necessary want cluster peers specific manner 
instance peers mapped virtual space ad hoc fashion achieve load balancing physical proximity 

management identifier space peers point time identifier space partitioned subparts managed peers 
achieved mapping identifier identifier space set responsible peers 
note assume identifier mapped peers 
usually case fault tolerance performance improvement 
formally denote identifiers peers system certain point time 
function mp takes identifier returns sub set peers system responsible identifier 
point time peer manages sub set identifiers 
function takes peer maps sub set identifier space peer manages 
function defined mp 

mapping items identifier space said overlay network serves basis interconnecting accessing resources 
typically serve storing retrieving data items system 
achieved mapping items virtual space 
resource item accessible structured peer peer overlay network receives virtual identifier taken models mapping resources items virtual identifier space 
mapping implemented ways 
typical approach implementing globally known hashing function 
advantage approach items uniformly distributed identifier space 
worth noting hash function necessary 
items mapped ensure logical proximity identifier space related similar items 
instance items mapped identifier space lexicographical ordering ensured 
advantage mapping ensures logical proximity enables cient range queries similar items 
map items peers organizational boundary :10.1.1.118.8846
disadvantage mappings distribute items uniformly identifier space 
special care needs taken ensure load peers responsible items skewed 

decide structuring strategy interconnect peers peer identifiers identifiers assigned peers possibly physical proximity overlay network directed graph built :10.1.1.111.1818:10.1.1.142.752
nodes graph represent peers outgoing arcs node graph model routing pointers peer maintain 
typically structured peer peer overlay network built guarantee logarithmic diameter maintaining compact routing table logarithmic constant size 

decide strategy maintaining overlay network strategy maintaining overlay network important decision step 
techniques maintaining overlay network significant impact practicality resulting overlay network 
think bandwidth critical resources context emerging peer peer technologies 
designing overlay network careful analysis needed decide overlay network maintained 
section ective techniques maintain overlay networks 

embedding ary trees organize peers cient overlay network structuring strategy easy understand implement required 
known fact logarithmic search goes hand hand tree structures 
motivate structuring strategy connecting peers overlay network 
propose embedding ary trees virtual space ensure overlay networks diameter log maintaining peer routing table logarithmic constant size 
focus embedding ary trees maintain peer routing table logarithmic size 
structuring strategy overlay networks peer maintains routing table constant size ongoing report preliminary results 
embedding ary trees identifier space advantages 
example clear virtual ary tree analysis worst average lookup path length straightforward 
need know height arity embedded virtual tree 
simplification compared informal arguments encountered literature 
furthermore embedding virtual trees possible introduce novel technique maintaining structured overlay networks 
correction technique explained sub section serves basis maintaining routing information dks system 
presenting principle embedding virtual ary trees virtual identifier space introduce assumptions definitions 

preliminaries 
assumptions sake simplicity assume 
virtual identifier space denoted discrete space organized ring size arbitrary identifiers resp 
addition resp 
subtraction modulo 
perfect power 
note principle described applies case perfect power 
distance function defined follows 
definitions section definitions rest 
previously mentioned generic function mp management identifier space 
simplicity abuse notation assume function maps identifier single peer 
function succ instance mp map identifier peer managing identifier 
definition 
succ defined follows 
succ min say peer successor identifier succ mapping items virtual identifier space see section say item managed successor 
item stored peer succ 
similarly function succ define function pred denote peer preceding identifier 
note domain distance function subset deal real numbers 
definition 
pred defined follows 
pred max function closest takes set identifiers maps element set closest virtual identifier space assuming clockwise orientation ring 
definition 
define closest follows 
closest min 
principle embedding ary trees principle element identifier space root rooted directed acyclic graph denoted dag 
dag tree height spans identifier space mainly determine intervals identifier space 
addition peer root rooted directed acyclic graph denoted dag 
node dag denotes set responsible peers corresponding intervals dag 
dag dag conceptually show interval routing compact routing routing process goes query starting peer principle embedding ary trees consists steps 
step virtual identifier space identifier rooted directed acyclic graph denoted dag produced systematic recursive division division space done relative fixed fashion show section section 
step division process partitions current space sub spaces 
step identifier virtual ary tree height rooted derived dag 
denote dag ary tree associated identifier step peer routing table denoted rt derived dag account peers system 
notice due dynamism routing table time dependent 
addition routing table peer maintain pointer successor identifier plus succ 
similarly peer maintains pointer predecessor pred 
net ect embedding ary trees identifier space participating peer ability see virtual identifier space di erent perspectives case peer maintains routing table logarithmic size correspond level associated ary tree 

relative division space explain relative space division principle 
proceed steps 
identifier show construction dag 
second show derive dag 
construct rt step illustrate concept examples 
approach relative division space initially 
formalize principle 

constructing dag relative division space identifier associated rooted directed acyclic graph dag spans identifier space 
directed acyclic graph identifier di erent directed acyclic graph identifier formally key invariant relative division space dag dag identifier node dag sub set root dag set identifiers 
derive nodes dag division process takes root dag input partitions sub sets 
step division 
sub set produced step division turn partitioned sub sets 
process repeats reach singleton sub sets 
dag identifier levels 
root node node level denoted 
level dag nodes denoted 
nodes defined see node parent nodes 
formally dag vd ed vd ed 
relative division space illustrated highlight relative aspect division space explained show space systematically divided di erent identifiers identifier assuming identifier space size space relatively divided steps sub sets consisting single element reached 
shows dag gives dag depicts dag 
observe division space identifier di erent division space identifier 
fig 

division space relative identifier 
fig 

division space relative identifier 
fig 

division space relative identifier 
fig 

virtual ary tree associated peer fully populated system 

deriving dag dag obtain labeled tree dag associated describe sub section 
simplicity assume node virtual ary tree represents responsible peer model easily extended node dag sub set responsible peers 
dag arbitrary peer levels 
root node node level denoted 
level dag nodes denoted 
nodes formally defined succ closest mod see node parent nodes 
formally dag 
dag relative division space illustrated example shows virtual ary tree dag associated peer identified system 
fig 

virtual ary tree associated peer fully populated system fig 

virtual ary tree associated peer fully populated fig 

virtual ary tree associated peer system peers 
level interval responsible fig :10.1.1.19.6221

possible routing table peer relative division space 

deriving routing tables main goal division space ease understanding construction structured overlay networks 
show build routing table arbitrary peer assuming virtual ary tree dag associated peer known 
build routing table peer informally principle move root node virtual ary tree dag associated peer leaf node step progress leaf node pointer maintained responsible peer immediate children 
note pointers peer responsible peer formally 
routing table rt peer function type defined rt 
obviously size resulting routing table peer factor expression due level peer pointer 

routing tables relative division space illustrated example consider virtual ary tree identifier compute routing table peer 
moving root node level level pointers stored immediate children peer peer 
level level pointers kept immediate children peer peer 
moving level level pointers maintained peer peer 
routing table peer immediately obtained applying described principle depicts resulting routing table peer 
routing table peer computed similar way 
responsible peer rt shown corresponding interval dag 
routing process simply routing 
reader familiar systems chord dks observe systems fit relative division space 
systems rule described choosing routing entries 
maintaining pointer peer mean routing information network address peer maintained routing table 

fixed division space section describe fixed division space embedding ary trees 
idea fixed division space inspired decoding trees probably foundation structured overlay networks prefix routing 
recall decoding trees rooted trees convert sequence code symbols entities code sequence represent 
case relative division identifier space proceed steps 
build dag result division space 
derive virtual ary tree dag peer show construct routing tables peer 

constructing dag fixed division space build fixed dag ary trees derived 
contrast relative division space dag relative peer fixed 
dag identifiers dag dag 
consequently dag dag 
similarity relative division space node dag contain set identifiers 
identifiers fixed division space represented strings length symbols alphabet dag constructed fixed space division invariant strings node dag prefix 
specifically strings node level dag share prefix length symbols 
set notations 
section denote set non empty strings length formed concatenating symbols 
identifier space regarded set root dag denoted root node fixed dag contains identifiers 
derive nodes dag division process takes root dag input partitions sub sets 
step division 
sub set produced step division turn partitioned sub sets 
process repeats reach singleton sub sets 
formally dag levels 
level dag nodes denoted 
nodes defined mod see node parent nodes 
formally dag vq eq vq eq note interchangeably string notation identifier notation convenient 
fig 

fixed division space 

fixed division space illustrated illustrate fixed division space assume sake simplicity identifier space size regard virtual space set strings bits length example space systematically divided illustration parts step 
result systematic division space shown dag depicted 
comments order regarding fixed dag 
level dag peer system view identifier space divided consists strings length start symbol consists strings length start symbol 
peer system 
note case relative division space 
level peers sub sets result division view composition sub set belong 
example peers view consists sub set identifiers form sub set identifiers form 
repeating reasoning obtain level sub sets consists single element 
precisely 

deriving dag section alternative ways building virtual ary tree dag peer name logarithmic degree dag size routing tables derived logarithmic order number code symbols taken alphabet peers system 
name second constant degree dag size routing tables derived constant size 

deriving logarithmic degree dag logarithmic degree dag peer built ensure reach peer log hops maintaining routing table size log 
give general principle illustrate examples 
recall definition dag associated peer sub section 
logarithmic degree dag arbitrary peer levels 
root node node level denoted 
level dag nodes denoted 
node parent nodes 
formally dag vl el vl el provide alternative rules defining peer rules common rule states successor numerically smallest identifier node taken responsible peer peer succ min advantage rule responsible peers chosen deterministic fashion 
techniques correction see sub section correction change see sub section 
disadvantage rule lead imbalanced tra load 
reason peers level virtual ary tree degree solve problem suggest rule uniformly distributes choice responsible peers deterministic fashion 
succ min mod deterministic nature rule advantages mentioned rule 
disadvantage rule responsible peers chosen deterministic fashion 
freedom choosing responsible peers proximity metric 
relax restriction imposed rule suggest rule 
rule peer identifier randomly chosen responsible peer peer nodes share prefix 
case peer identifier successor smallest identifier chosen responsible peer 
fig 

dag fully populated system built dag rule 
advantage rule proximity metric round trip time choosing responsible peer 
reader familiar peerto peer overlay networks pastry observe rule exploited systems 
random elseif succ min logarithmic degree fixed division space illustrated 
shows fully populated system built dag rule 
show dag system built dag rule 
illustrate rule system built dag 

deriving constant degree dag deriving constant degree dag ongoing 
report preliminary result 
constant degree dag arbitrary built fixed dag 
constant degree dag arbitrary peer levels 
root node node level denoted 
level dag nodes denoted 
node parent nodes 
formally dag vc ec vc ec fig 

dag system built dag rule 
fig 

dag system built dag rule 
fig 

dag system 
fig 

dag fully populated system built dag 
show derived dag system mod constant degree fixed division space illustrated 
shows fully populated system built dag shown 
deriving routing tables show build routing table arbitrary peer assuming virtual ary tree dag associated peer known 
derivation routing tables logarithmic degree dag shown 
equivalent constant degree dag shown 

deriving routing tables logarithmic degree dag build routing table peer principle move root node dag level level leaf node contains level interval responsible fig 

routing table peer derived dag shown 
path root node leaf node peer maintain pointer immediate children 
formally 
routing table rt peer function type defined rt 
size resulting routing table peer factor expression due level peer pointer 
routing tables logarithmic degree dag illustrated 
illustrate routing tables constructed logarithmic degree dag 
routing table rt constructed peer dag shown 
path root leaf node containing dag rt contain pointer immediate children node 
consequence rt rt rt rt rt rt 
routing table illustrated 

deriving routing tables constant degree dag constant degree dag peer maintain pointers peers immediate children root node peer formally 
routing table rt peer function type defined rt 
routing tables constant degree dag illustrated illustrate routing tables constructed constant degree dag 
routing table rt constructed peer dag shown 
peer maintains pointer immediate children node 
consequently rt rt rt 
routing table illustrated 
local atomic operation joins leaves ary structuring strategy associated concepts relative fixed division space know build cient structured overlay level interval responsible fig 

routing table peer derived dag shown 
networks 
story partial involve joining departures peer 
deal joins leaves operation ensure strong guarantees 
local atomic principle section serves 

join assumed virtual identifier space ring 
join peer amounts insertion existing peers case non trivial networks consisting peer 
due high dynamism peers consecutive identifiers attempt join simultaneously 
done properly concurrent insertions lead undesirable situations false lookup failure system returns message saying item system item 
simulation study systems chord weak join protocol significant number false lookup failures compared dks system local atomic join protocol 
main idea local atomic join ensure pair peers currently system peer inserted time 
requires assuming fault free environment tight synchronization joining peer pair peers joining peer going inserted 
fault tolerance considered number peers involved local atomic join grows size immediate neighbors peer maintains 

leave join peer wishes cooperate leaving system synchronization required 
high level inconsistency result 
structured peer peer overlay networks leaves failures semantics 
probably due simplification implies transition rule applies leave failure 
think operations distinct semantics 
consider leave operation cooperative departure failure merely non cooperative departure 
avoid significant amount inconsistency peer leaves system suggest time consecutive peers peer departs 
achieving requires local atomic operation 
number involved peers depends level guarantees targeted system 

techniques maintaining structured overlay networks section discuss existing techniques maintaining structured overlay networks 

periodic stabilization call periodic stabilization technique consists running periodically separate routines correcting routing information peer maintains 
existing peer peer infrastructures technique 
instance systems chord pastry :10.1.1.140.3129
idea peer periodically checks neighbors detect change occurs vicinity checking peer 
chord done periodically running stabilize fix finger sub routines 
technique advantage changes detected quickly 
cost doing periodical checking high 
immediate observation systems technique unnecessary bandwidth consumption system frequently dynamism system low 

adaptive stabilization mentioned previous sub section periodic stabilization induces unnecessary bandwidth consumption periods low dynamism 
overcome problem alternative approach call adaptive stabilization rate stabilization tuned depending observed conditions parameters suggested 
call adaptive stabilization termed self tuning requires estimate system size failure rate 
intuitively adaptive stabilization technique help reducing unnecessary bandwidth consumption 
clear parameters observed ectively tune probing rate 
importantly observations currently understood large scale nature high dynamism targeted systems 
research adaptive stabilization show importance building systems self adapt observed current behaviors 
correction change sub sections provide self adaption need separate sub routines run periodically 

correction periodic stabilization expensive induces unnecessary bandwidth consumption 
overcome problem alternative approach correction proposed 
idea take advantage overlay network order self organizes face changes 
peer joins dks network receives approximate routing information necessarily accurate 
routing information accurate time system 
achieve convergence ideas peer receives message peer receiving peer adapts account presence sender 
ii peer sends message peer peer embeds information current local view network 
local view accurate embedding ary trees 
receiving peer precisely determine sender correct view sending time 
notification sent back peer notification message carries identifier candidate peer correction 
receipt notification sender peer corrects 
ratio tra injected system dynamism system high overlay network converges legitimate configuration 
main advantage correction completely eliminates unnecessary bandwidth consumption 
peer pays needs 
ratio tra injected system dynamism su ciently high convergence overlay network legitimate configuration slowed 

correction change correction technique previous section useful eliminates unnecessary bandwidth consumption assumption tra injected system high corrections take place 
usage scenarios guaranteed tra high 
scenarios combine correction technique call correction change 
correction change technique change detected peers depend peer change occurred corrected 
call set peers depend peer set dependent peers peer dependent peer peer routing table peer legitimate configurations 
peer joins leaves fails dependent peers notified adjust routing information accordingly 
implement notification cient manner restricted version correcting broadcasting algorithms developed team 
dependent peers updated parallel 
consequence correction change leaves equivalent failures 
second failure detected dependent peers eagerly notified 
consequently system robust face high dynamism 
time accordance correction unnecessary bandwidth consumed steady periods dynamism system low 
full evaluation technique combination correction reported 

framework understanding analyzing designing structured peer peer overlay networks 
proposed framework builds principle embedding ary trees virtual identifier space 
proposed framework variants structured peer peer overlay networks derived 
designer need decide division space rule selecting responsible peers 
existing structured peer peer overlay networks fit framework 
interestingly framework embedding ary trees derive structured overlay networks constant degree 
briefly shown way achieve 
report algorithmic simulations studies constant degree structured peer peer overlay networks full 
embedding ary trees proofs correctness regarding logarithmic lookup length trivial 
understanding routing process simplified due nature interval routing embedded trees allow 
show framework routing structured peer peer overlay networks essentially interval compact routing process 
embedding ary trees impact design high level services 
example developed optimal communication primitives embedding virtual ary trees virtual space 
derived algorithms inherit correctness properties self organization underlying substrate great advantage 
embedding ary trees number ective techniques maintaining overlay networks possible 
correction techniques 
increase robustness keeping maintenance cost low combine correction correction change 
correction change eagerly corrects outdated routing pointers change network 
result combination correction correction change unnecessary bandwidth consumption avoided 
addition techniques investigating suitable adaptive maintenance techniques combine ectively correction correction change 
framework assuming participating peers homogeneous 
practice usually case 
exploring techniques framework integrating heterogeneity peers 

karl aberer grid self organizing access structure information systems lecture notes computer science 

el brand haridi dks family low communication scalable fault tolerant infrastructures applications rd international workshop ccgrid tokyo japan may 

brand haridi multicast dks overlay networks th international conference principles distributed systems la france december 

multicast dks overlay networks th international conference principles distributed systems berlin springer verlag 

scalable reliable secure read write peerto peer file system 

castro druschel 
kermarrec rowstron scribe large scale decentralised application level multicast infrastructure ieee journal selected areas communications jsac special issue network support multicast communications 

frank dabek frans kaashoek david karger robert morris ion stoica widearea cooperative storage cfs proceedings th acm symposium operating systems principles sosp chateau lake louise ban canada october 

frank dabek ben peter druschel john kubiatowicz ion stoica common api structured peer peer overlays proceedings second international workshop peer peer systems iptps 

el brand haridi framework peer peer lookup services ary search tech 
report tr sics may 

cient broadcast structured nd international workshop peer peer systems iptps february 

freenet freenet sourceforge net 

brand haridi increasing robustness minimizing bandwidth consumption structured overlay networks tech 
report isrn kth se kista sweden 

el brand haridi self correcting broadcast distributed hash tables parallel distributed computing systems calgary acta press 

gnutella www gnutella com 

harvey jones saroiu theimer wolman skipnet scalable overlay network practical locality properties fourth usenix symposium internet technologies systems usits seattle usa march 

kaashoek karger koorde simple degree optimal distributed hash table proceedings second international workshop peer peer systems iptps 

john kubiatowicz david bindel yan chen steven czerwinski patrick eaton dennis geels ramakrishna gummadi sean rhea hakim weatherspoon weimer chris wells ben zhao oceanstore architecture global scale persistent storage proceedings ninth international conference architectural support programming languages operating systems asplos november 

malki naor viceroy scalable dynamic emulation butterfly proceedings st acm symposium principles distributed computing 

maymounkov david kademlia peer peer information system xor metric st workshop peer peer systems iptps 

mahajan miguel controlling cost reliability peer peer overlays proceedings nd international workshop peer peer systems iptps 

naor wieder simple fault tolerant distributed hash table proceedings second international workshop peer peer systems iptps 

cli ord neumann scale distributed systems pp 
ieee computer society los alamitos ca 

sylvia ratnasamy paul francis mark handley richard karp scott shenker scalable content addressable network tech 
report tr berkeley ca 

rowstron druschel pastry scalable decentralized object location routing large scale peer peer systems lecture notes computer science 

stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications acm sigcomm san ca august pp 


chord scalable peer peer lookup service internet applications tech 
report tr mit january www pdos lcs mit edu chord papers 
ps 

tel distributed algorithms cambridge university press isbn 

ben zhao john kubiatowicz anthony joseph tapestry infrastructure fault tolerant wide area location routing berkeley technical report ucb csd april 

