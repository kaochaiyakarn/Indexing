stochastic model tcp ip stationary random losses eitan altman konstantin avrachenkov barakat inria route des lucioles sophia antipolis france email altman sophia inria fr model tcp ip congestion control mechanism 
rate data transmitted increases linearly time packet loss detected 
point transmission rate divided constant factor 
losses generated exogenous random process assumed stationary ergodic 
allows account correlation distribution inter loss times 
obtain explicit expression throughput tcp connection bounds throughput limit window size 
addition study effect timeout mechanism throughput 
set experiments conducted real internet comparison provided models simple assumptions inter loss time process 
comparison shows model approximates throughput tcp distributions inter loss times 
analyze performance tcp transmission control protocol widely transport protocol internet 
tcp reliable window flow control protocol window increased packet loss detected 
source assumes network congested reduces window 
lost packets recovered source resumes window increase 
performance measure consider throughput longlived tcp connection having infinite amount data send 
mathematical model find closed form expression throughput connection 
assume reader familiar basic mechanisms tcp slow start congestion avoidance algorithms methods loss detection duplicate acks timeout delay ack mechanism limitation congestion window due receiver sender buffer 
see survey tcp issues 
remarkable attention tcp modeling research community :10.1.1.26.7594:10.1.1.143.9137:10.1.1.143.9137:10.1.1.143.9137
surprising internet traffic carried tcp 
closed form expressions throughput long lived tcp connection obtained different assumptions 
expressions earlier version appeared acm sigcomm 
author financed cnet france telecom flow control high speed networks 
author financed constellations project satellite communications 
contact author 
helped understand impact network tcp parameters throughput connection efficiency network resource utilization 
expressions adapt rate udp flows audio video way friendly tcp flows 
mathematical analysis tcp requires steps 
need construct model window size evolution 
internet traffic terms bytes carried long lived tcp connections majority existing models focus congestion avoidance mode 
fluid model 
window tcp assumed increase linearly function time loss occurs divided loss detected 
initialization packet proposed losses detected timeout :10.1.1.143.9137
phase recovery losses assumed negligible source assumed resume linear increase congestion window directly reduction 
packet level model proposed account discrete nature tcp :10.1.1.143.9137:10.1.1.143.9137
volume data network moment multiple packets packet size equal mss maximum segment size due nagle algorithm efficiency reasons prohibits tcp injecting network packets small size smaller mss 
volume data increases packet increase window size exceeds packet size 
show fluid model corrected account discreteness tcp 
second tcp analysis requires characterization times congestion events 
needs model impact path source destination tcp connection 
particular models considered literature 
fixed point approach assumes constant time congestion events 
assumptions shown imply constant time congestion events :10.1.1.143.9137
congestion events modeled homogenous poisson process :10.1.1.143.9137
intensity poisson process assumed increase window size 
working real time authors chose virtual time obtained sampling congestion window tcp moments ack arrivals 
consider case times congestion events virtual time identically exponentially distributed 
distribution moments congestion window size virtual time method suggested transform back real time 
experimentations internet show times congestion events general distributions 
depending monitored path times vary approximately deterministic case considerably bursty case 
correlation exist congestion events 
note particular packets dropped independently constant probability times drops independent instantaneous transmission rate variable 
believe internet heterogeneous different types distributions times congestion events exist 
investigate case general sequence times congestion events 
sequel call congestion event loss event 
loss event corresponds moment congestion window divided constant factor usually equal 
require process loss events stationary ergodic 
minimal requirement able obtain explicit expression throughput tcp 
loss model general capture correlation distribution inter loss times 
obtaining closed form expression tcp throughput general loss processes quite useful design dimensioning purposes 
fine tuning physical transmission channels example satellite links coding schemes include redundancy interleaving cause losses appear bursts see 
formulas take account burstiness help predict impact coding schemes tcp connections optimize amount redundancy added 
model optimize amount redundancy noisy link formula tcp throughput 
important closed form expressions average transmission rate equivalently throughput design tcp friendly applications 
typically real time applications designed fair share bandwidth comparison tcp connections see 
see loss events highly bursty transmission rate computed assumption deterministic exponential inter loss times considerably underestimate throughput tcp connection 
tcp friendly applications perform better transmit higher rate precise model losses 
dynamics tcp model instantaneous transmission rate defined number packets network volume data divided rtt round trip time connection 
tcp source assumed data send 
number packets network equal number packets fit window 
denote transmission rate tcp connection time averaged rtt 
assume division result multiple packet losses 
ideally tcp connection divide window number packet losses round trip time rtt :10.1.1.143.9137:10.1.1.143.9137
time analysis multiply rtt get window size terms packets mss 
increases linearly time rate 
denote number data packets covered ack rt average round trip time find 
denote decrease transmission rate loss event occurs 
arrivals losses modeled general stationary ergodic point process non null finite intensity 
tn particular realization point process 
consider instance case losses quickly detected need long timeout period duplicate acks algorithm efficient timeout mechanism 
evolution transmission rate described recurrence xn xn sn xn value just prior arrival loss tn sn tn tn 
pair tn xn considered marked point process 
see model consider allows particular distribution sn depend xn 
section machinery stochastic processes study model tcp rate evolution 
introduce tools handle particular handle case distribution sn may depend xn 
tools compute throughput time average process 
compute moments tcp transmission rate loss arrivals stationary regime 
model compute higher moments transmission rate tcp stationary regime 
particular show find variance 
different examples loss processes studied deterministic poisson markov arrival processes 
expression throughput provided particular cases 
section ii extend model account case limitation evolution transmission rate due receiver advertised window provide bounds throughput case 
section ii explain extend model case losses detected conservative timeout mechanism tcp implementations 
section iii testbed results experimentations 
results demonstrate different types loss processes exist internet distribution inter loss times approximated constant exponential distribution 
experimentations show common problem linear rate increase models 
traces transmission rate tcp exhibits linear increase model gives excellent results 
traces tcp window grows sublinearly linear models overestimates real throughput 
conclude section iii method correct error caused fluid approximation 
section iv 
linear growth known hold tcp connections roundtrip time constant varies independently window size 
growth stops linear rtt correlated window size see usually equal half consider general scenario account possible additive increase multiplicative decrease aimd flow control mechanisms 
model propose fluid model studies aimd flow control mechanism 
extension aimd fluid models literature scenarios times loss events generally distributed constant exponential 
extension allows generalize know square root formula tcp throughput prove holds case general stationary ergodic loss processes 
explain adapt fluid model tcp protocol particular account discrete nature tcp receiver window limitation timeout mechanism 
consider tcp mechanisms techniques similar introduced :10.1.1.143.9137:10.1.1.143.9137
consequence model seen extension scenarios times loss events generally distributed constant :10.1.1.143.9137
consider constant times losses obtain close throughput obtained :10.1.1.143.9137:10.1.1.143.9137
experimental results validate claim loss rates ranging losses packets losses packets 
higher loss rates expect model inherit performance limitation works deploy modeling timeout mechanism :10.1.1.143.9137
modeling tcp performance high loss rates main objective 
ii 
main results compute throughput expression stationary regime process defined sn 
various types conditions describes unique stationary regime system 
stationary regime consider dynamic equation assumptions process sn stationary ergodic 
distribution process sn depend xn 
may construct probability space family processes xn indexed initial state inter loss times sn 
process sn xn stationary ergodic 
unique regime solves dynamic equation 
stationary ergodic sequence sn represented sn xn 
equation called stochastic recursive equation see form xn xn xn xn xn 
assume nondecreasing xn nonincreasing argument 
constant example presence complex loss processes assumption holds 
tcp friendly application considered transmission rate packets constant variations throughput implemented varying packet size 
tcp throughput independent distribution process losses packets 
monotonicity condition quite natural 
reflects fact time till loss tends general decrease window size increases packets network chances losses 
condition monotonicity argument implies finite condition constant guarantees clusters infinitely simultaneous losses 
proposition assumptions unique stationary ergodic regime expression 
transmission rate evolution starts arbitrary rate converge surely stationary regime lim xn 
proof assumption equation particular case stochastic linear difference equations 
sequence inter loss times stationary ergodic follows theorem assuming sn see appendix details equation stationary solution 
follows results 
assumption see defined stationary ergodic function stationary ergodic sequence 
sum defined summands nonnegative finite expectation 
surely finite 
unique stationary regime consider 
type scheme show defined stationary ergodic 
show finite xn converges stationary regime initial state 
define process solution obtained initial condition 
follows monotonicity argument fixed monotone nondecreasing sample 
note sn 
limit equals stationary ergodic function stationary ergodic sequence 
due monotonicity sequence fixed initial state obtained initial state bounded sequence sn sequence finite surely assumption holds sequence exception case wide area networks lot traffic multiplexed loss process seen tcp connection approximated homogenous poisson process independent window size see long distance connection experimentation part 
follows surely finite 
limit tends infinity see bounded stationary process finite surely process finite surely 
establish assumption 
xn correspond process initial state correspond process initial state loss generality assume fact monotone nondecreasing argument xn hand fact non increasing argument xn xn xn xn 
conclude xn xn follows 
implies uniqueness stationary regime 
note assumption implies assumption turns implies assumption 
weakest assumption obtain expression stationary regime weakest assumption obtain convergence stationary regime 
rest shall consider stationary ergodic regime results hold assumption 
computation moments throughput tcp compute expectation second moment tcp transmission rate instants losses tcp throughput 
proposition sn intensity loss process correlation function process sn 

note remarkable insensitivity property depend correlation times moments order greater 
proof compute expression stationary regime 
sn similarly obtain sn sn sn sn sn 
regrouping terms series get 
expectation computed taken respect loss instants 
expectation referred palm expectation context point processes 
concept palm probability proceed computation tcp throughput lim dt 
main result closed form expression throughput function correlation function loss intensity linear increase factor multiplicative decrease factor 
proposition throughput tcp 
proof process ergodic throughput equal expectation transmission rate arbitrary time point 
compute inversion formula see ch sec expectation associated palm distribution 
particular 
formula expression write ks covariance function sn correlation function 
formulas define number packets transmitted tcp connection time number loss events time probability losing packet simply lim lim 
allows write main result form grasp influence rt throughput general distribution inter loss times 
define normalized correlation function 
get rt pb 
define similarly normalized covariance defined obtain formula tcp throughput rt 
pb conclude arbitrary stationary ergodic loss process throughput tcp inversely proportional rt square root packet loss probability constitutes main finding model classical square root formula generalized case stationary ergodic losses 
note rewritten terms second moment transmission rate loss instants expression conclude constant inter loss times lead smallest tcp throughput set stationary loss processes having intensity 
examples loss process consider important particular cases general loss process 
iid random losses general renewal process model loss process general renewal process 
assume sn random variables 
formulas take form 
proposition sn sn 
particular inter loss times exponentially distributed similar expression obtained :10.1.1.143.9137
inter loss times deterministic get change variables expression equivalent classical square root formula obtained literature deterministic losses rt bp probability tcp packet lost :10.1.1.143.9137
substituting value setting recalling equal get square root formula 
obtained case deterministic inter loss times 
note throughput tcp expressed constant depends average time loss events plus term grows linearly variance inter loss times 
variable times losses higher throughput 
loss events highly bursty implies large variance inter loss times assuming loss process poisson deterministic yields non negligible underestimation tcp throughput :10.1.1.143.9137
similarly assuming loss process poisson close deterministic leads overestimation tcp throughput 
correlated losses modeled markovian arrival process section consider correlated losses modeled markovian arrival process map 
shown general point process sequence maps converges point process distribution 
particular implies principle general point process approximated appropriate maps 
furthermore ph renewal process markov modulated poisson process mmpp particular cases markovian arrival process 
briefly review definition properties markovian arrival process 
counting process associated map number arrivals losses setting interval 
auxiliary state variable 
map described terms dimensional markov process state space infinitesimal generator 
matrix governs transition process arrival loss negative diagonal elements nonnegative diagonal elements 
matrix governs transitions simultaneous arrivals nonnegative elements 
underlying markov process infinitesimal generator assume stable matrix 
ensures get absorbed class states arrivals 
rate transitions state ij 
transition occurs arrival occurs simultaneously transition probability dij cii dii 
note map mmpp infinitesimal generator arrival rate matrix take 
sn sequence inter arrival times map jn sequence states underlying markov process arrival epochs 
jn sn markov renewal process transition probability matrix exp cu du exp cx note transition probability matrix discrete time markov chain embedded instants arrivals 
stationary distribution 
take initial distribution underlying markov chain arrival process event stationary 
version map joint distribution function inter arrival times fs sn xn exp 
consequently joint laplace stieltjes transform zn exp 
laplace stieltjes transform easily compute moments correlation function interarrival time process 
sn ds zi de ds zi de zk zi zk dt palm inversion formula proof proposition moment order stationary regime written follows de 
developing term inside integral binomial formula integrating get expression th moment transmission rate tcp 
compute expectations xi expectations easily computed expression stationary regime 
show expressions expectations 
second moment variance requires expressions second moment equal 
characteristic loss process 
expression expectations expressed function auto correlation functions loss process 
derive expression correlation function formula differentiation inverse matrix valued function 
calculate moments process xn tcp throughput map loss process 
proposition loss process sn represented map 
proof formulas immediately obtained help derivation de de de proposition sn markovian arrival process 
throughput tcp 
higher moments transmission rate similarly way compute throughput tcp find expression moment tcp transmission rate stationary regime 
particular interest second moment tells transmission rate tcp oscillates 
useful design tcp friendly transport protocols multimedia applications 
multimedia applications known require small oscillations transmission rate tcp friendly requirement urges transmit packets way average rate average rate tcp connection 
js ks bounds model transmission rate limitation previous sections include modeling fact tcp transmission rate may growing congestion window exceeds window advertised receiver 
quantity corresponds maximum number packets wait destination handed application :10.1.1.143.9137
consider section transmission rate tcp limited maximal value take tcp divides minimum receiver window congestion window congestion 
note transmission rate limited factors buffer size source available bandwidth network 
difference case limitation due receiver window reduction factor 
example limitation caused available bandwidth packets tcp connection stored buffer bottleneck router moment congestion dividing congestion window free packets reduce round trip time connection ratio window size divided round trip time stay larger half available bandwidth due packets connection backlogged bottleneck router 
transmission rate sn sk xk xk xk sk xk xk xk xk xk time fig 

tn tn tn tcp transmission rate evolution limitation example tcp transmission rate evolution consider section fig 

stochastic difference equation respectively modified form xn xn sn stands minimum operation 
model nonlinear probably possible derive explicit expressions general loss process 
results previous sections obtain bounds performance measures 
deriving bounds shall state stability result process xn 
theorem assume sn stationary process 
exists stationary process defined probability space satisfying recursion 
furthermore initial state lim xn 
proof proof easily type construction similar proposition 
refer details 
note equation rewritten xn xn sn xn 
xn xn sn xn xn sn estimates prompt derive lower upper bounds throughput auxiliary stochastic processes defined probability space xn xn xn sn xn sn xn xn sn xn sn 
proposition sn stationary stochastic point process 
assume 
xn xn xn 
xn expectation xn taken respect stationary regime sn sn sn sn sn sn 
proof show induction xn xn 
holds 
assume holds consider cases sk sk sk xk xk sk xk sk inequality true xk xk 
refer illustration derivation difficult simple case homogenous poisson loss process 
xk xk induction principle inequality xn xn holds 
consequently xn xn 
results theorem processes xn xn converge stationary regime go infinity 
results lower bound holds initial state processes 
upper bound obtained similar manner auxiliary process 
calculate lower upper bounds throughput 
proposition sn sn sn sn lower upper bounds throughput 
proof obtain lower bound throughput auxiliary process 
suppose xn stationary regime define tn tn sn tn tn tn tn sn see fig 

similarly write expression stationary version xn expression obtain lower bound dt dt dt dt ks ks auxiliary process calculate upper bound throughput similar way 
note bounds proposition coincide throughput due large high loss rate 
upper bound provided goes 
propose take upper bound tcp throughput minimum upper bound 
lower bound converges expression 
shown expression appears approximation throughput maximal rate frequently reached :10.1.1.143.9137:10.1.1.143.9137
throughput obtained tcp transmission rate reaches maximum value losses 
specify bounds throughput cases poisson iid losses 
refer case losses driven map process 
assume loss process poisson 
formulas give bounds throughput note tcp throughput case poisson losses infinite maximum window size see subsection ii 
consider general case iid loss process 
correlation functions simply equal respectively 
bounds modeling conservative timeouts assuming till losses quickly detected 
case losses detected duplicate acks fast retransmit algorithm correctly set retransmission timer 
tcp implementations coarse granularity timer ms unix implementations detection losses case duplicate acks received 
back mechanism retransmission timer case retransmission losses introduce idle times congestion window tcp increasing transmission rate approximately equal zero 
call losses followed idle time resumption transmission timeout losses 
idle time separates loss packet receipt ack retransmission 
includes backoff retransmission timer due retransmission loss 
losses detected quickly need idle period called td losses td duplicate acks 
shown experimentations losses quite frequent 
instance refer tables ii iii show statistics long lived tcp connections 
th columns tables labelled indicate percentage losses type 
number non negligible different reasons high loss rate tcp connection may encounter hours day column labelled fact multiple packets lost congestion event inaccuracy estimation tcp retransmission timer 
finding reported :10.1.1.143.9137:10.1.1.143.9137
explain section include idle times explicit expression throughput believe phenomenon transmission rate tn sn sn sn zn fig 

model tcp td losses time negligible importance different enhancements proposed enhance tcp error recovery phase sack limited transmit :10.1.1.143.9137
zn duration idle period loss event zn equal loss td type greater zero loss type 
zn zn denote average duration idle periods losses zn denote probability loss type 
define tn instant transmission rate resumes increase nth loss td sn tn tn 
nth loss type connection gets idle period time tn zn time tn transmission resumed 
idle period transmission rate equal zero interested tcp throughput 
assume idle period transmission rate jumps directly half value loss 
justified fact slow start phase timeout fast compared linear increase phase 
depict fig 
sample transmission rate evolution presence losses model 
define sequence see fig 
sn loss sn zn loss assume stationary ergodic 
denote normalized covariance function sequence 
throughput tcp excluding timeout intervals rt pb 
including timeouts throughput tcp shown equal see proof qz px qz equality follows fact px general functions appear modeling compute functions needs model loss process packet level packets lost congestion event model way tcp handles packet losses 
complex problem strongly note distribution time nth th loss may depend type nth loss td 
prevent process stationary 
dependent version tcp 
effort model reaction tcp packet loss congestion event :10.1.1.143.9137
computed function packet loss probability validated real experimentations internet 
expression general holds versions tcp 
expression suites versions tcp intelligent fast recovery phase timeout packet lost congestion recovered fast retransmit 
expressions shown performance modeling tcp timeouts 
performance added fact main focus distribution inter arrival times timeouts motivated expressions proposed :10.1.1.143.9137:10.1.1.143.9137
allows fair comparison model :10.1.1.143.9137:10.1.1.143.9137
iii 
model validation mainly motivated fact loss tcp packets internet may complex structure simple processes considered literature 
support motivation run real long lived tcp connections internet sites 
connection measure instants losses statistics average round trip time total number packets transmitted 
study model different assumptions type loss process 
evaluate linear rate increase models approximate real tcp performance 
evaluate expression timeouts 
introduce method account discreteness tcp 
method model deterministic inter loss time assumption gives close results detailed discrete model :10.1.1.143.9137:10.1.1.143.9137
experimentation testbed experimentation purposes 
examine loss process check approximated simple models 
second validate tcp model 
ran different days january longlived tcp transfers different machines 
transfer consists continuous flow data day 
source machine clope inria fr running new reno version tcp located inria sophia antipolis south france 
destination machines located respectively school km inria fr hops enst school paris solo enst fr hops university south australia linus levels edu au hops 
tcp packets bytes size excluding tcp ip headers 
machine australia advertises window packets enst advertise window packets 
machines implement delay ack refer discussion different versions tcp react packet losses 
tcp reacts timing detecting loss fast retransmit duplicate acks case sack version support limited transmit enhancement 
fig 

experimentation testbed mechanism rt 
simplicity exposition denote tcp connections sd short distance md medium distance ld long distance respectively 
experimentation testbed depicted fig 

data packets corresponding acks captured tool inria 
version tcp source developed tool looks trace connection identifies instants window reductions tn 
case loss detected timeout tool computes duration timeout period 
general developed tool determines times sn packet loss probability number loss events divided number packets transmitted parameters average rtt measured trace file frequency receiver window reached 
connection run multiple hours 
total trace divided short intervals order minutes 
division necessary loss process certainly stationary scale total trace duration 
stationarity loss process time intervals order minutes judged reasonable assumption 
choose intervals number loss events interval large characterization loss process accurate loss events interval 
gives set trace files connection 
trace file compute statistics tcp connection loss process tool 
summarize results tables ii iii respectively sd md ld connections 
row tables corresponds trace file 
columns different information left right starting time trace daytime hours time trace number bytes transmitted number packets transmitted packet loss probability average rt real throughput tcp connection kbps average rate loss events probability loss event results timeout normalized covariance times loss events excluding timeout intervals probability receiver window reached 
trace file compare real throughput tcp expected model computed bounds 
compare real throughput expected :10.1.1.143.9137:10.1.1.143.9137
examine validity different models distribution inter loss times deterministic poisson iid general correlated 
moments correlation functions inter loss times calculated trace files 
study separately effect assumptions loss process correctness fluid model tcp equivalently fraction time tcp connection transmitting maximum window 
byte packet loss rtt sn cov hour hour ms kbps table statistics short distance connection byte packet loss rtt sn cov hour hour ms kbps table ii statistics medium distance connection byte packet loss rtt sn cov hour hour ms kbps table iii statistics long distance connection tcp throughput kbps inria exact fluid model correlated losses iid losses poisson losses deterministic losses real throughput day time hours fig 

short distance connection tcp throughput kbps exact fluid model correlated losses iid losses poisson losses deterministic losses real throughput inria paris day time hours fig 

medium distance connection transmission rate evolution 
validation loss model done follows 
reconstruct trace file evolution time proposed fluid model mechanism linear increase multiplicative decrease silence time timeouts maximum limit congestion window see fig 

call process exact fluid model efm compute exactly throughput 
done computing area transmission rate consecutive losses summing areas dividing result transfer time 
efm throughput throughput trying estimate analysis authors linear rate increase fluid models study tcp claiming represents real tcp throughput 
measure model distribution inter loss times close throughput predicted closed form expression agrees efm throughput 
note loss model criterion guaranteed real throughput tcp agrees throughput formulas 
expect close real tcp throughput linear rate increase model appropriate case see 
fact paths ld connection increase tcp rate far linear sub linear leads considerable throughput estimation error right model loss events general formula 
validation model losses measure close throughput predicted closed form expression efm throughput 
different tcp throughput kbps exact fluid model correlated losses iid losses poisson losses deterministic losses real throughput inria australia day time hours fig 

long distance connection instantaneous tcp window bytes exact fluid model window real window time fig 

fluid model vs real window short distance connection loss processes considered deterministic poisson general iid general correlated 
plot results fig 
function time connections sd md ld 
timeouts measure functions directly traces computed :10.1.1.143.9137:10.1.1.143.9137
figures show real throughput tcp 
clearly notice general model gives result exact fluid model terms considered infinite sum formula 
iid model gives approximately result correlated model means losses rarely correlated especially medium distance long distance connections 
correlation seen short distance connection illustrated distance separates general correlated throughput line iid throughput line 
analysis traces sd connection indicates loss events appear bursts 
burstiness loss events seen fig 
plot congestion window sd connection versus time seconds 
consider poisson deterministic cases 
expression throughput iid case states constant loss intensity throughput tcp increases variance inter loss times 
comparison iid throughput line poisson deterministic throughput lines indicates times loss events vary 
sd connection variance inter loss times exponential distribution 
caused bursty occurrence losses discovered connection shown fig 

connection expect models assuming deterministic inter loss times give bad tcp throughput kbps inria exact fluid model poisson losses dis deterministic losses dis packet level model real throughput day time hours fig 

short distance connection tcp throughput kbps exact fluid model poisson losses dis deterministic losses dis packet level model real throughput inria paris day time hours fig 

medium distance connection results compared real throughput 
interestingly case due problem tcp rate sub linearity explain 
md connection see variance inter loss times closer deterministic distribution exponential distribution 
ld connection clear losses occur poisson process sense expected result due high degree multiplexing internet routers 
validation model tcp compare exact fluid model efm real tcp connections 
objective test validity linear growth assumption fluid assumption 
results plotted fig 

sd md connections exact fluid model overestimates real tcp overestimation increases real throughput 
mainly due sub linearity tcp congestion window evolution seen fig 

tcp rate sub linearity due increase rtt congestion window turn due increase queuing time bottleneck routers 
refer example correlation rtt window size modeled 
unfortunately shown modeling sub linearity tcp complex simple assumption loss process poisson 
note problem sub linearity exist ld connection window size usually small propagation delay large tcp connection contribute considerably queuing time network routers 
source error model fluid approxi tcp throughput kbps exact fluid model poisson losses dis deterministic losses dis packet level model real throughput inria australia day time hours fig 

long distance connection mation 
fact transmission rate tcp increase continuously jumps number packets injected network increases 
due nagle algorithm prohibits tcp source injecting small packets network 
window size source assumed change continuously time loss events 
fig 
explains difference congestion window size continuous line number packets network dashed line 
expression throughput fluid model corresponds average window size number packets network expression corrected account area dashed continuous lines 
explain model adapted account discrete nature tcp 
assume measured packets unit time 
approximation shift process rt subtract throughput error caused number packets lost congestion fig 

introduce error packets lost congestion event interested computation throughput average sending rate 
follow assuming average half window size lost congestion :10.1.1.143.9137
add rtt packets transmitted detection congestion 
average number transmitted packets equal half window size 
approximate window size rtts window size fluid model loss events rt subtract rt average integral transmission rate loss events 
gives corrected expression throughput xd rt rt sn rt correction compare fig 
model deterministic inter loss times packet level model :10.1.1.143.9137:10.1.1.143.9137
plot figures throughput obtained model assumption losses poisson 
expressions computed obtained measurements :10.1.1.143.9137
lines deterministic poisson indexed dis denote fact account discrete nature tcp expressions :10.1.1.143.9137:10.1.1.143.9137
line deterministic losses coincides model number packets lost congestion statistics loss process packet level available 
fig 

fluid model vs packet model packet level model connections 
lines close real throughput sd md connections ld 
md connection result deterministic losses linear rate increase assumption correct losses quite deterministic 
sd connection result due tcp sub linearity phenomenon explained 
concerning result poisson losses better result deterministic losses ld connection loss process connection closer poisson deterministic 
md connection real throughput deterministic poisson lines 
expected loss process md connection variable poisson process 
validation bounds validate derived bounds case window size limitation choose ld connection model tcp appropriate rate linear 
plot results day fig 

see clock slack periods throughput calculated case limit congestion window eq 
significantly deviates exact fluid model 
exact fluid model accounts rate limitation 
rest day throughputs coincide 
deviation means receiver advertised window frequently reached slack periods bounds applied estimate throughput 
saturation throughput clearly reflected line table iii measure fraction time ld connection transmitting maximum window size 
plot bounds proposition 
quite close exact fluid model throughput 
shows throughput obtained asymptotic approximation recall valid maximum window size frequently reached 
shows approximates exact fluid model 
iv 
analysis tcp throughput general loss process 
assumption loss process stationarity ergodicity 
provided explicit expression throughput case limit transmission rate 
throughput shown inversely proportional rtt square root tcp throughput kbps time hours fig 

long distance connection inria australia exact fluid model unbounded window model upper bound lower bound asymptotic approximation packet loss probability proved literature simpler loss models :10.1.1.143.9137:10.1.1.143.9137
provided bounds throughput case limit exists maximum window size 
furthermore extended include timeout mechanism account discrete nature tcp 
explained model compute moments tcp transmission rate order higher particular variance 
importance model justified different types loss processes observed measuring internet traffic 
model proposed able capture correlation distribution inter loss times 
existing models seen particular cases general approach 
paths tcp transmission rate increases linearly congestion events model gives excellent results 
paths tcp window growth sublinear notice overestimation real throughput 
try account sub linearity tcp modeling 
try characterize loss process packet level compute expressions functions model timeouts 
expression variance tcp transmission rate design congestion control mechanisms real time applications friendly tcp exhibit low rate variability 
acknowledgments colleagues enst university south australia providing required material conduct experimentations 
thomas input generalization square root formula 
acknowledge interesting valuable suggestions anonymous sigcomm ieee acm ton referees 
allman balakrishnan floyd enhancing tcp loss recovery limited transmit rfc jan 
altman barakat tcp presence bursty losses acm sigmetrics june 
altman barakat stochastic model tcp ip stationary random losses acm sigcomm august 
altman avrachenkov barakat state dependent type queueing analysis congestion control data networks ieee infocom april 
altman avrachenkov barakat tcp modeling presence nonlinear window growth proceedings itc 
marked point processes limits markovian arrival streams appl 
prob vol pp 
baccelli elements queueing theory palm martingale calculus stochastic recurrences springer verlag 
barakat tcp modeling validation ieee network vol 
pp 
may 
barakat analysis link level hybrid fec arq sr wireless links long lived tcp traffic performance evaluation journal vol 
pp 
august 
bellman matrix analysis mcgraw hill new york 
foss stochastically recursive sequences generalizations advances mathematics pp 

brandt stochastic equation yn bn stationary coefficients adv 
appl 
prob vol pp 
fall floyd simulation comparisons tahoe reno sack tcp acm computer communication review vol 
pp 
jul 
fischer meier markov modulated poisson process mmpp cookbook performance evaluation vol pp 
floyd connections multiple congested gateways packet switched networks part way traffic acm computer communication review 
floyd fall promoting congestion control internet ieee acm transactions networking august 
floyd handley padhye equation congestion control unicast applications extended version acm sigcomm august 
yao stochastic vector difference equations stationary coefficients appl 
prob vol pp 
hunter moments markov renewal processes adv 
appl 
prob vol pp 
itu allowable error performance hypothetical digital path operating primary rate 
jacobson congestion avoidance control acm sigcomm august 
kang sung markovian arrival process map modeling superposed atm traffic manuscript 
kumar comparative performance analysis versions tcp local network lossy link ieee acm transactions networking august :10.1.1.26.7594
lakshman madhow performance tcp ip networks high bandwidth delay products random loss ieee acm transactions networking june 
stability queue non independent inter arrival service times proc 

phil 
soc 
pp 

meier single server queue server vacations class non renewal arrival processes adv 
appl 
prob vol pp 
mathis mahdavi floyd romanow tcp selective acknowledgment options rfc oct :10.1.1.143.9137
mathis semke mahdavi ott macroscopic behavior tcp congestion avoidance algorithm acm computer communication review july 
misra ott window distribution multiple tcps random queues ieee globecom 
:10.1.1.143.9137
gong towsley stochastic differential equation modeling analysis tcp behaviour performance 
nagle congestion control ip tcp internetworks rfc january 
versatile markovian point process appl 
prob vol pp 
structured stochastic matrices type applications marcel dekker new york 
ott mathis stationary behavior ideal tcp congestion avoidance aug available ftp ftp research telcordia com pub ps 
padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation acm sigcomm :10.1.1.143.9137
lbnl tcpdump tool available www nrg ee lbl gov telatar behavior certain stochastic processes arising window protocols ieee globecom 
stevens tcp slow start congestion avoidance fast retransmit fast recovery algorithms rfc january 
thompson miller wilder wide area internet traffic patterns characteristics ieee network vol 
pp 

le boudec long run behavior equation rate control acm sigcomm august 
zhang duffield paxson shenker constancy internet path properties acm sigcomm internet measurement workshop san francisco california usa november 
place photo eitan altman received sc 
degree electrical engineering degree physics ph degree electrical engineering technion israel institute haifa 
received mus 
degree music composition tel aviv university 
inria national research institute informatics control sophia antipolis france 
current research interests include performance evaluation control telecommunication networks particular congestion control wireless communications networking games 
editorial board scientific journals stochastic models siam 
chairman program committee international conferences workshops game theory networking games mobile networks 
place photo place photo konstantin avrachenkov received master degree control theory st petersburg state technical university ph degree mathematics university south australia 
currently research fellow inria sophia antipolis france 
main research interests markov decision processes singular perturbation theory mathematical programming performance evaluation data networks 
barakat permanent research scientist research group inria sophia antipolis march 
got electrical electronics engineering degree university master ph degrees networking university nice sophia antipolis 
ph done group inria sophia antipolis 
april march lca department epfl lausanne post doctoral position march august visiting faculty member intel research cambridge 
barakat general chair pam serves program committees international conferences infocom pam globecom 
main research interests congestion error control computer networks tcp protocol voice ip wireless lans internet measurement traffic analysis performance evaluation communication protocols 
