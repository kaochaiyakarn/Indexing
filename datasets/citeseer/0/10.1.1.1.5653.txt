enabling reconfiguration component systems runtime meyer wilhelm hasselbring department computing science software engineering group university oldenburg germany meyer hasselbring informatik uni oldenburg de development software systems iterates analysis design implementation deployment 
subsequent iterations require refactoring design reconfiguration deployed systems 
software engineering disciplines involved dealing runtime reconfiguration component software systems software architecture software configuration management software component deployment disciplines contribute various ways 
software architectures play central role design describing system model specifying formal way architecture description language 
configuration management focuses implementation defining configuration various component versions building system configuration 
component deployment addresses deployment phase managing dependencies involved components eventually producing running system 
activities may evolve independently provide models system involved reconfiguration required roundtrip engineering 
applying changes deployed system usually triggers changes system models obtain consistent system reconfiguration 
major problem solved managing run time dependencies components 
need formal system model covers components interconnection communication run time behavior integrating system models software architecture configuration management component deployment 
approach enabling reconfiguration component systems runtime aim reconfiguration component systems runtime 
proposed approach employs parameterised contracts method formal component specification adding formal run time component description technique graphs describe dependencies components considering run time concerns extending adl concept containers establish modelling deployment runtime properties system combination shall way provide foundation achieving goals 
displays suggested system configuration 
system configuration designed hierarchy gof design patterns composite decorator adapter 
composite required build system configuration decorator pattern allows functional changes components adapter pattern wrapper allows changes interfaces furthermore concept containers allows manage process run time reconfiguration run time re deployment components 
reconfiguration manager special type connector activated reconfiguration request 
consists reconfiguration analyzer dependency manager consistency manager reconfiguration analyzer takes reconfiguration request analyzes classifies requested change 
dependency manager monitors run time dependencies components determines minimal set components sends change request composite concrete decorators composite decorator subsystem interface connector connector concrete components adapter 
system configuration involved component 
consistency manager controls system 
divide activities pre reconfiguration checking static consistency intended system configuration moving consistent system ready configure state refusing reconfiguration request failure 
post reconfiguration checking run time consistency changed system success confirming reconfiguration sending rollback request 
realizes reconfiguration dependent change transaction 
starts transaction transfers affected components blocked state isolates affected subsystem applies changes sends consistency check request consistency manager 
success commits transaction failure initiates rollback transfers changed unchanged system running state 
displays states component take system runtime 
just deployed assume free 
distinguish states busy means active means executed 
component directly move state active busy 
free components transferred blocked state changed 
means reconfiguration takes place system running trying achieve ad hoc component change 
assume sub system take states runtime running ready configure reconfiguring restoring 
state corresponding part longer free passive busy execution finished requested change completed change request accepted execution finished execution started execution started requested blocked ready change active busy active busy longer 
component run time states running rollback completed restoring isolate subsystem reconfiguration successful reconfiguring reconfiguration failed ready reconfigure reconfiguration request accepted 
system run time states reconfiguration manager initiates controls possible changes state 
summary approach enabling reconfiguration component systems runtime 
approach combines disciplines software architecture configuration management component deployment 
implementation platform ee technology 
intending extend specification deployment process subprocess reconfiguration 
currently investigating possibilities control manipulate deployment process different application servers develop methodology determining formally specifying dependencies deployed components 
carzaniga fuggetta hall van der hoek heimbigner wolf 
characterization framework software deployment technologies 
technical report department computer science university colorado apr 
fowler 
refactoring improving design existing code 
addison wesley longman publishing 
gamma helm johnson vlissides 
design patterns elements reusable object oriented software 
object oriented technology 
addison wesley massachusetts 
kramer magee 
evolving philosophers problem dynamic change management 
ieee transactions software engineering nov 
larsson 
applying configuration management techniques component systems 
phd thesis uppsala university sweden dec 
larsson 
configuration management component systems 
tenth international workshop software configuration management toronto canada may 
medvidovic taylor 
classification comparison framework software architecture description languages 
ieee transactions software engineering 

ge zur bei software 
phd thesis universit 
karlsruhe 
rutherford anderson carzaniga heimbigner wolf 
reconfiguration enterprise component model 
bishop editor proceedings ifip acm working conference component deployment pages berlin germany june 
springer verlag berlin heidelberg 
sun microsystems 
java platform enterprise edition specification version 
taylor medvidovic anderson jr robbins 
component message architectural style gui software 
ieee transactions software engineering 
van der hoek hall carzaniga heimbigner wolf 
software deployment extending configuration management support field 
crosstalk journal defense software engineering feb 
van der hoek heimbigner wolf 
software architecture configuration management configurable distributed systems trois 
technical report university colorado department computer science software engineering research laboratory colorado 
