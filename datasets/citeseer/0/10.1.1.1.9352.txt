recognizing predicting context learning user behavior rene harald alois ferscha institut praktische informatik johannes kepler university linz str 
linz austria ferscha soft uni linz ac current mobile devices mobile phones personal digital assistants powerful offer features users able exploit extent 
number upcoming mobile multimedia applications ease important aspects 
way improve usability devices aware user context allowing adapt user forcing user adapt device 
approach step reacting current context predicting context making devices proactive 
mobile devices generally suited task typically close user actively 
allows devices monitor user context act accordingly automatically ring signal tones user meeting selecting audio video text communication depending user current occupation 
presents architecture allows mobile devices continuously recognize current anticipate user context 
major challenges context recognition prediction embedded mobile devices limited resources learning adaption happen line explicit training phases user intervention kept minimum non obtrusive user interaction 
accomplish architecture consists major parts feature extraction classification labeling prediction 
available sensors provide multi dimensional highly heterogeneous input vector input classification step realized data clustering 
labeling associates recognized context classes meaningful names specified user prediction allows forecast user context proactive behavior 
purpose study enhance information appliances predict context deliver proactive services user 
information appliance device designed perform specific function specialized information ability share information appliances 
currently implemented instance mobile devices pervasive computing 
visions computers including mark weiser ubiquitous computing called pervasive computing steve mann wearable computing hiroshi tangible bits hans werner gellersen smart 
common paradigms mobile computing context awareness 
visions radically different agree user interfaces obtrusive smarter regards adapting user 
today interfaces explicit ones forcing user adapt interface learn 
personal computer digital assistant pda live name adapt user offering implicit intuitive invisible interfaces 
strives add aspect vision computers proactivity 
postulate pda bounded single physical device fulfill intentions acts proactively human assistants stand reason 
idea provide software applications information current user context predictions user context 
equipped various sensors information appliance classify current situations classes learn user behaviors habits deriving knowledge historical data 
current research focus forecast user context extrapolating past 
pointed topic proactivity computer science controversial especially hci 
predicted context implicitly actions started appliance assumption erroneous need reverted user possibly causing severe problems 
proactivity applications utilized controlling actuators impact real world handled care 
possible uses predicted user context applications manifold ranging simple reminder messages emergency procedures started accident happens 
primarily concerned techniques enable proactivity embedded devices 
architecture application framework provides predicted user context basis historical data real time 
remainder structured follows section defines notions proactivity context 
section lists related sets relation projects 
main part section explains architecture including contribution adding proactivity context awareness 
section shortly summarizes describes aims 
definitions proactivity term proactivity computer science software agents important difference agent oriented programming object oriented programming proactivity software agents 
formally difference reactivity proactivity lies dependence current system output system state trajectory 
interpreted moore state machine internal state system time described qt qt qt current state qt state input value time cf 

definition system inputs state transitions assumed discrete time steps 
system output depends state difference reactivity proactivity defined context 
reactive system output bt time depends current implicitly past states bt qt proactive system depend predicted states bt qt qt qt qt states discrete time steps predicted recursively arbitrarily complex process qt qt qt qt qt needed predicting qt simply ignore predicted states 
context context defined dey information characterize situation entity entity person place physical computational object adopt 
describing situation general context aspects typically geographical physical organizational social user task action technological time described detail section single sensor appropriate capture different aspects context 
related context awareness currently highly active research topic publications assume powerful sensors video infrastructure location tracking :10.1.1.117.4330
albrecht schmidt van laerhoven architecture recognizing context multiple simple sensors tea project 
takes comparable approach context detection multiple diverse sensors extends exploit qualitative non numerical features 
additionally framework introduces prediction context considered tea project 
project concerned hybrid intelligent artefacts depends priori training artefacts vendor special training phase explicit retraining phases adaption appendix seek avoid distinction operation training phases device fully operational times 
anind dey described software infrastructure context awareness depends server aggregating context limited discrete valued types sensors 
feature extraction different types sensors described various publications describes means clustering hmm obtain context microphone describes audio video context detection 
learning user habits previously explored michael mozer neural network house able predict occupancy rooms hot water usage likelihood zone entered seconds trained feedforward neural networks 
kidd reported aware house learn user habits finished time report 
time series forecast explored different areas including distributed simulation software agents data value prediction processors data mining health records theoretically neural networks 
utilizing different types features context recognition time series forecast methods predicting context sense best knowledge new approach covered published research 
architecture architecture proactivity predicted user contexts sensor readings classified detect common patterns input values 
patterns interpreted states state machine act context identifiers 
user context abstracted states internal data structures relate sensor readings states 
interpretation complicated applications query specific aspects context location context identifier allows monitor record state trajectory state machine 
user advances context sensor readings change state active reflecting context change 
interpreting context changes state trajectory allows forecast development trajectory predict anticipated context 
clarity term context remainder similar state interpretation 
important note context classification prediction performed real time practical application feasible log data process offline 
vision described section information appliance continuously running able provide services user 
architecture targeted embedded systems running user intervention arbitrarily long periods 
derive knowledge device user context raw sensor data steps applied depicted fig 

sensor data acquisition sensors brightness microphone ieee bluetooth ieee wireless lan wlan network interfaces provide data streams time series measurements 
usually physical values incoming rf signals base measurements sensors currently active application utilized 
sensors classified physical logical doing variety reasons 
sensor entity provide measurements environment device situated 
values sampled discrete time steps frequency set maximum desired sample frequency sensors 
highly application specific general distance sample time steps determined 
sensor vector 
sl defines sensor readings sl 
sl points time 
feature extraction raw sensor data information extracted domain specific methods yielding multiple data values sensor called features samples function time 
feature extraction available data deliberately simplified transformed expanded allowing interpreted better 
usually simple statistical parameters mean standard deviation higher moments features time series numerical data 
nominal ordinal data alternative methods explored 
set features called feature vector 
fn defines samples fn 
fn points time multi dimensional feature space 

classification task classification find common patterns feature space called classes clusters 
feature vector possibly assigned multiple classes certain degrees membership probability feature vector belongs class soft classification soft clustering approaches utilized 
approaches map feature vector different features degrees membership different classes 
fn classes ci 
regarded detected user context identified simple index class vector 
class vector defines class degrees membership cm points time 
labeling ease development context aware applications presenting detected context user descriptive names assigned single classes combinations classes cf 

labeling maps class vectors set names set user defined context names strings 
context name context label nt describes currently active context points time 
prediction enable proactivity approach forecast context 
prediction step generates anticipated class vectors current ones class vector defines degrees membership class cm cm points time sections describe blocks detail 
sensors context awareness information appliances premises rely context relevant information gathered sensors 
acquired information close user possible 
sensing information domains quality assurance robotics object interest explicitly investigated sake accurate highly reliable measurement reading sensors pervasive computing information appliances intrusive 
furthermore collecting context information varieties events measured data interesting actual sensor output different techniques methods required 
gellersen proposed diverse simple sensors alternative integration single generic sensor 
presuming current information appliances equipped sensors exploited means approach rational 
variety different sensor types results better representation users context single generic sensor 
examples sensors typical information appliance pda mobile phone communicating bluetooth 
example values features 
feature extraction typical pda mobile phone additional sensor 
listed table table lists additional sensors useful recognizing user context easily added current information appliances 
time microphone brightness bluetooth wireless lan un logged application manager table typical sensors available mobile device 
gps gsm compass accelerometer tilt sensor temperature sensor pressure sensor various bio medical sensors table additional sensors mobile device 
improve quality context recognition information appliances share perceptions create complete model current context 
accomplished mutually granting access raw sensor data devices neighborhood peer peer manner 
sensor data correlated data sensors range increasing accuracy 
context information shared close range ensure recognized context local distinct global representation different neighboring situations 
means list sensors easily extensible equipping user smart sensors expose information close interested authorized device 
biological sensor measure user pulse transmit information appliance bluetooth similar ad hoc communication methods 
fig 
shows example mobile phone retrieving gsm sensor data bluetooth 
list processed sensor information limited processing capabilities memory information appliance 
feature extraction feature extraction classification known fields research publications cover numerical continuous features 
introduced model utilizing heterogeneous features list bluetooth wlan devices range combination time stamp common classification step 
feature vector fn formed arbitrary combination features highly heterogeneous necessary find way cope different types semantics feature space dimensions classification step 
concept feature type defined feature extractor actual transformation raw sensor data relevant exposition data 
transformations done independently feature completely domain specific feature type implement operators needed classification differently 
abstraction virtually maps different kinds sensor data respective feature types unified multidimensional homogeneous feature space classified commonly algorithms 
preliminary comparison different classification methods ranging clustering algorithms neural networks showed operations necessary feature distance metric adaptation operator 
operations supervised un supervised classifiers kohonen self organizing map som means clustering lifelong gng easily applied feature defines 
fig 
example list features typical mobile scenario shown pda screen including lists bluetooth wlan devices range current gsm cell queried mobile phone bluetooth specific audio features microphone 
features implemented appropriate distance modification operators 
classification classification step find similarities learn recurring patterns input data 
serves input labeling prediction steps form probability vector containing probability activity learned class 
classification algorithm fulfill requirements applicable classifying sensor data recognizing context line learning dedicated training phase learning done unsupervised continuously 
adaptivity learning user habits change time classes adapt new input data 
prevents continuously decreasing learning rate methods neural networks 
variable topology number classes determined priori general case internal topology able adapt dynamically 
soft classification context classes mutually exclusive context active time home sleeping 
noise resistance working real world data algorithms cope intrinsic noise sampled signals 
limited resources algorithm capability constraints information appliance small ram little processing power 
simplicity case algorithm perform distinct operations feature vector possible 
feature extractors provide necessary operators see feature extraction multitude operators drastically complicates implementation 
ideally classification algorithm line unsupervised variable network topology cope changing feature vector dimensionality changing sensor configurations 
classification algorithm hard competitive allow multiple active contexts designed life long learning forget overwrite learned clusters time known plasticity stability dilemma neural networks clustering literature 
table shows comparison common line clustering algorithms serves line algorithm network topology topology preserving competitive som fixed soft rsom fixed soft means fixed hard leader variable hard means variable hard neural gas variable soft ng chl variable soft gng variable soft variable hard table general overview algorithms unsupervised clustering sensor data kohonen self organizing map som recurrent self organizing map rsom means clustering hartigan sequential leader clustering growing means clustering neural gas neural gas competitive hebbian learning ng chl growing neural gas gng incremental dbscan 
van laerhoven rate ng chl gng topology preserving 
base selecting appropriate 
means leader means segregate due hard competitive classification strategies 
som rsom tend forget previously learned classes quickly due learning strategy fixed network topology 
circumvented combining som means clustering gng provide flexibility environments changing configurations 
proposed modifications original gng algorithm cope continuously changing environments life long learning 
modifications prevent gng growing permanently introducing learning rate locality criteria 
results locally converging globally adaptive learning algorithm 
new classes learned changes learned classes applied cluster representing class match new input vector properties reasonable extent 
due modifications algorithm performs better environments small memory new cluster represents new context redundant 
forget oldest erroneous cluster memory boundaries reached ensures memory available learning new classes 
basic rule learning insertion organisms learn events violate expectations previously assumed 
tests performance evaluations detail publications 
labeling applications generally unaware classes current degrees membership 
realworld scenarios virtually impossible design applications class vectors learned un supervised way differ device class vectors depend order classes detected 
indices currently active classes need mapped meaningful values 
architecture simple strings context labels allowing users enter 
step user interaction necessary case non obtrusive 
approaches interface include discreet icon corner device screen blinks unlabeled context class active period time allowing user assign name current context 
option display automatically created context log form diary allows user label detected context classes 
complexity necessary step depends quality classification step 
classes long term stable previously learned classed overwritten different new ones simple mapping classes labels 
classification algorithm overwrites older classes order learn new context degrees membership classes need mapped labels 
simple means clustering algorithm second step clustering 
class represented winner neuron kohonen som clustering means applied input vectors som correspond feature vectors architecture avoid overwriting labels 
added complexity necessary shortcomings som reasons selecting gng experiments 
open issue classification quality facilitate simple mapping complex mapping class vector labels perform better 
prediction prediction main novelty architecture focus current research 
prediction performed user interaction necessary labeled context 
prediction step architecture builds class vector generated classification step 
allows predict single best matching context exploiting class degrees membership impossible prediction take single best matching labeled context input 
aim generate class vectors points time meaning current class vector provided classification step 
allows feed predicted class vectors labeling step provide predicted context labels proactive applications cf 
fig 

going detail generally analyze requirements prediction algorithm sense 
unsupervised model estimation model topology parameters need estimated automatically user interaction explicit definition input output behavior 
line learning embedded devices real world scenarios infeasible switch artificially separated training prediction phases store history batch training 
algorithm continuously adapt parameters normal operation incorporating new class vectors soon arrive 
exception store history detail optimize evaluate quality predictions splitting history training test set 
incremental model growing new classes detected classification step run time new dimensions added class vectors 
prediction algorithm able incrementally increase internal model topology requiring complete retraining initializing new dimensions default values 
currently unclear shrinking class vectors run time necessary dead classes simply receive minimum probability 
confidence estimation algorithm able compute estimation correctness forecasted context forecast 
estimation application confidence measure determine prediction relied certain actions 
automatic feedback prediction engine continuously estimate class vectors evaluate estimations comparing real class vectors available 
manual feedback action carried automatically due forecast reverted canceled user forecast receive penalty time known reinforcement learning machine learning long term vs short term method ideally suitable parameterizable different forecasting horizons predicting context near high confidence able predict context probably lower confidence 
currently selected specific algorithm prediction step architecture open arbitrary algorithms adapted suit interface 
research possible candidates markov predictors special form variable duration hidden markov models suited 
explicitly model duration distributions capable predicting different forecasting horizons nearly variants hmms exist mature methods learning model parameters 
architecture recognize predict user context utilizing multiple heterogeneous sensors 
architecture consists steps feature extraction generate relevant representation sensor data exploiting domain specific knowledge classification find similarities common patterns input data labeling assign simple context names recognized classes prediction forecast user context past behaviors 
novelties approach prediction possible user actions context forecast abstraction feature types allow heterogeneous features combined single classification step 
accomplish feature types independently define operations necessary classification 
implemented feature extraction various sensors available typical information appliances including microphone bluetooth wireless lan additional external sensors mobile phone accessible bluetooth 
step research include gathering real world data empirical study evaluating classification prediction algorithms data 
proactivity applications support users allowing information appliances adapt user forcing user learn specifics interface 
equipped multiple sensors sensors detect predict context information appliance smarter intuitive fostering wider acceptance information appliances everyday life 
acknowledgments especially manfred nther helpful discussions general topic proactivity implications user interfaces 
chen kotz :10.1.1.117.4330
survey context aware mobile computing research 
technical report tr dept computer science dartmouth college november 
clarkson mase pentland 
recognizing user context wearable sensors 
iswc pages 
clarkson sawhney pentland 
auditory context awareness wearable computing 
proceedings workshop perceptual user interfaces pui san francisco ca usa november 
dey abowd salber 
context infrastructure smart environments 
estrin culler pister sukhatme 
connecting physical world pervasive networks 
ieee pervasive computing january march 
ferscha 
adaptive time warp simulation timed petri nets 
ieee transactions software engineering march april 
fritzke 
growing neural gas network learns topologies 
tesauro touretzky leen editors advances neural information processing systems pages 
mit press cambridge ma 
fritzke 
competitive learning methods 
technical report systems biophysics inst 
neural comp ruhr universit bochum april 
gellersen schmidt beigl 
multi sensor context awareness mobile devices smart artefacts 
accepted publication mobile networks applications 
grossberg 
adaptive pattern classification universal recoding parallel development coding neural feature detectors 
biological cybernetics 

life long learning cell structures continuously learning catastrophic interference 
neural networks may 
ishii ullmer 
tangible bits seamless interfaces people bits atoms 
proceedings conference human factors computing systems chi pages 
acm march 
kidd orr abowd atkeson essa macintyre mynatt starner 
aware home living laboratory ubiquitous computing research 
proceedings cooperative buildings integrating information organization architecture second international workshop cobuild volume lecture notes computer science pages 
springer 
van laerhoven 
real time analysis data sensors neural networks 
proceedings fourth international symposium wearable computers iswc zurich october 
ieee press 
mann 
wearable computing step personal imaging 
ieee computer february 
rene harald alois ferscha 
feature extraction wireless personal local area networks 
proceedings fifth ifip tc international conference mobile wireless communications networks 
world scientific october 
appear 
mozer 
neural network house environment adapts inhabitants 
proceedings aaai spring symposium intelligent environments pages 
aaai press 
norman 
invisible computer 
mit press cambridge 
deliverable st year progress report project 
technical report january 
franz pichler 
mathematische 
walter de gruyter berlin new york 
wagner 
theory conditioning variations effectiveness reinforcement non reinforcement 
black editors classical conditioning ii 
current research theory 
appleton century crofts new york 
rosenstein cohen 
concepts time series 
aaai iaai pages 
smith 
predictability data values 
international symposium microarchitecture pages 
schmidt 
ubiquitous computing computing context 
phd thesis lancaster university november 
schmidt beigl 
context location environment sensing technologies adaptive mobile user interfaces 
workshop interactive applications mobile computing imc 
schmidt van laerhoven 
build smart appliances 
ieee personal communications august 
tang fishwick 
feed forward neural nets models time series forecasting 
technical report university florida 
published orsa journal computing 
orgun lin williams 
hidden markov models temporal data mining 
proceedings kdd workshop temporal data mining held conjunction th acm sigkdd international conference knowledge discovery data mining kdd san francisco ca usa august 
weiser 
computer century 
scientific american september 
wooldridge jennings 
intelligent agents theory practice 
www doc mmu ac uk staff mike ker ker html hypertext version knowledge engineering review 
