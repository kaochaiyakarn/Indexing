surface reconstruction unorganized points self organizing neural networks yu computer science division university california berkeley introduce novel technique surface reconstruction unorganized points applying kohonen self organizing map 
topology surface predetermined neural network learning algorithm carried obtain correct coordinates vertex surface 
edge swap multiresolution learning proposed algorithm effective efficient 
algorithm simple implement 
experimental results shown techniques successful 
keywords surface reconstruction point set neural networks self organizing maps geometry modeling visualization laser scanner problem reconstructing surface scattered sample points arises applications geometric model acquisition graphics visualization data medical imaging cartography input devices obtain positions sample points information connectivity 
difficulty involved problem surface reconstruction unorganized points obtaining correct connectivity sample points 
correct connectivity give reconstructed surface mesh faithfully represent shape topology original object set sample points drawn 
usually difficulty tackled bottom top way 
previous tried build connections nearest points build mesh input point set :10.1.1.153.4735
approach requires sample points dense holes may appear undersampled areas changes topology surface 
pursuing totally different approach call top bottom approach 
assume mesh correct topology connectivity advance help user user tell sample points original object topologically equivalent sphere torus 
email acm org cs berkeley edu website www cs berkeley edu coordinates vertex mesh unknown initialized naive way 
building connectivity major challenge method moving vertices close input point set manifest shape 
learning procedure originally training selforganizing neural networks applied vertices obtain meaningful coordinates shape mesh approximates input point set 
summarize difference approaches learning connectivity coordinates versus learning coordinates connectivity 
major advantage approach holes appear unexpected places sparse datasets predetermined mesh topology 
organized follows 
section describes previous surface reconstruction 
section introduces kohonen self organizing map training algorithm 
section gives surface reconstruction algorithm mentioned training algorithm 
section describes assign texture coordinates approach 
section shows example results 
section 
previous types previous surface reconstruction interpolation approximation 
type combinatorial algorithms 
second type similar data fitting piecewise linear surface minimizing distance point set approximating surface 
hoppe curless levoy algorithms second type 
exploited fact surface reconstructed normal orientations get tangent planes normals area normal tangent plane order approximation local surface 
algorithms need estimate normals point set accurately 
algorithm type includes shape edelsbrunner crust amenta bern 
shape heuristic 
works uniform sampling 
major drawback shapes surface reconstruction optimal value depends sampling density varies different parts surface 
crust provably correct sampling density 
local topology may changed holes may appear due undersampling 
kohonen self organizing map basic configuration kohonen self organizing map dimensional network cells denoted fc cmg kind spatial arrangement cell network neighboring cells 
spatial arrangement definition neighborhood may different different applications 
instance fig 
cells arranged rectangular array local mesh structure shown vertex belongs part surface vertices belong part surface single swap middle edge reduce number problematic triangles shown local mesh structure shown vertices belongs part surface vertices belong part surface double swap middle triangle reduce number problematic triangles 
shows single swap shows structure second single swap 
kohonen self organizing maps rectangular triangular spatial arrangement respectively 
cell rectangular arrangement immediate neighbors 
cell triangular arrangement immediate neighbors 
cell immediate neighbors 
computer graphics triangular meshes common geometric representations 
may arrange cells vertices triangulation 
cells neighbors edge 
distance neighboring cells usually defined distance cells network defined length shortest path connecting 
input network set vectors denoted fx xng 
cell network weight vector dimensionality input vectors 
particular input vector response cell inner product input vector cell weight vector euclidean distance vectors 
winner cell defined largest inner product smallest euclidean distance response 
kohonen iterative training procedure obtaining proper weight vector cell winner cells corresponding input vectors close network input vectors close vector space 
training algorithm cell winner cell corresponding input vector time step updating rule may read wk wk wk distance ck wk 
scalar valued function distance threshold vary training proceeds 
product gain function hat function smaller smaller training proceeds usually bell shaped function width gradually decreased 
gaussian function exp appropriate controls width 
defined see appropriate set positive constant 
functions need fine tuning 
training algorithm effectively adapt network learn implicit order input vectors adjust weight vectors cells respond input vectors orderly manner winner cell move continuously network input vector changes smoothly 
achieve result initialized large value close gradually decrease small value order 
initialized value order radius network gradually decrease 
surface reconstruction kohonen training algorithm self organizing maps suitable approach 
consider vertices mesh cells neural network coordinates vertex dimensional weight vector cell input unorganized point set set input vectors 
geometric mesh defines equivalent self organizing map 
winner cell corresponding input point chosen coordinates closest input point euclidean space 
formulated xin jj min jjc xin jj cw winner cell xin input point 
algorithm ability learn implicit order input dataset neighboring vertices final mesh close geometrically final mesh look smooth discontinuities 
imagine initial mesh rubber sheet procedure learning coordinates vertices stretching rubber sheet wrapping point set big gaps point set rubber sheet 
number vertices mesh usually different number input points 
coordinates certain vertex mesh necessarily coincide particular point input 
edge swap assume triangular mesh 
real object surface concave structures simply applying kohonen learning algorithm difficulty approximate parts 
reconstructed surface may thin elongated faces connecting separate parts filling concave structures fig 

simply applying kohonen learning algorithm difficulty approximate concave structures 
reconstructed surface may thin elongated faces connecting separate parts filling concave structures 
removed edge swaps 
intermediate reconstruction edge swaps consecutive resolutions triangles respectively 
original dataset stanford bunny points final reconstruction stanford bunny triangles 
original dataset height function points reconstructed surface rectangles point set texture mapping 
part real object surface 
relatively easy detect triangles calculating minimum distance centroid triangle input point set 
minimum distance triangle defined follows 
md min distance centroid input point set 
applying kohonen learning algorithm calculate md triangle mesh obtain mean standard deviation triangles 
elongated triangles belong real object surface large minimum distance compared mean minimum distance 
remove problematic triangles adopt mesh operation edge swap 
edge swap preserve original topology mesh 
hoppe discussed elementary operations edge collapse edge swap edge split 
operations needed transform arbitrary triangular meshes 
want transform meshes number vertices edges manifolds edge swap operation needed 
simple classic example edge swap transform different triangulations convex polygon 
theorem edge swap transform manifold triangular meshes number vertices edges 
proof exists particular sequence edge swaps realize 
choose vertex mesh suppose corresponding vertex second mesh swap edges meshes way edges mesh incident edges second mesh incident desired sequence obtained concatenating sequence edge swaps mesh reversed sequence second mesh 
details swap edges left 
know edge swap changing mesh number vertices edges faces kept 
sequence edge swaps described proof useful practice 
remove problematic triangles variants edge swaps single swap double swap 
single swap original edge swap fig 

single swap triangles sharing old edge deleted new triangles sharing new edge generated 
double swap consecutive single swaps swapped edges belong triangle original mesh fig 

choose edge problematic triangle swapped define quantity called deviation edge follows 
dev md md denotes edge mesh triangles sharing edge problematic triangle minimum distance larger threshold choose swap edge largest deviation 
single swap tried accepted deviation new edge smaller old minimum distance new triangles smaller prescribed threshold 
single swap fails continue try double swap means keep swap try swap edge second largest deviation 
double swap accepted second swap satisfies conditions 
recover original mesh edge swap happens considered triangle 
mesh obtain minimum distance triangle gradually decrease threshold minimum distance large value mean 
step decrement single list triangles minimum distance larger threshold try single double swap 
minor problem needs attention edge dangling vertex middle different parts surface need move close part surface edge swap happen 
left shows structure move right shows structure move 
swap carried 
may small number vertices far away input point set fig 

edge swap move triangles incident closer input points vertices pull centroids incident triangles away input point set 
need move vertices 
go vertices nearby point input move neighboring vertices mesh far away input points 
process repeated times vertices nearby point input 
multiresolution learning performance algorithm improved applying kohonen learning algorithm multiple resolutions mesh 
low frequency features learned lower resolutions computational cost 
comes desired resolution limited high frequency details need learned 
number iterations fairly small highest resolution 
edge swap intermediate resolution learning algorithm applied 
concave structures learned gradually multiple resolutions 
triangular rectangular meshes 
time learning edge swap finished certain resolution higher resolution desired face mesh needs split smaller faces edge needs split new vertex inserted 
total number faces 
computational cost level 
texture mapping arbitrary mesh assignment texture coordinates vertex painful 
approach texture mapping carried natural way point set topology equivalent disk 
start flat rectangular triangular mesh initially embedded texture space 
initial coordinates vertex considered pre assigned texture coordinates 
kohonen learning algorithm applied mesh learn geometry input point set 
learning done vertex correct coordinates texture coordinates 
texture mapping final mesh straightforward 
results implemented surface reconstruction algorithm pentium ii mhz processor running linux 
currently considering different kind mesh topology open surface continuous boundary homeomorphic disk closed surface holes homeomorphic sphere 
rectangular mesh open surface topology triangular mesh spherical topology initialized icosahedron faces 
subdivision splits face smaller ones 
number iterations resolution 
tested algorithm datasets point dataset sampled height function defined mixture gaussian functions fig 
point dense dataset known stanford bunny fig 

open surface topology dataset closed spherical topology 
results see algorithm quite effective generate correct surface reconstruction 
running time algorithm half hour smaller dataset little hour larger bunny dataset 
introduced novel technique surface reconstruction unorganized points applying kohonen selforganizing map 
learning procedure carried obtain correct coordinates vertex surface 
edge swap multiresolution learning introduced algorithm effective efficient 
algorithm simple implement 
experimental results shown techniques successful 
extend accommodate sophisticated topology try different distance metrics geodesic distance cells self organizing map 
space subdivision schemes octrees accelerating search nearest input point mesh vertex 
acknowledgments research supported multidisciplinary university research initiative dimensional direct visualization onr fdn microsoft graduate fellowship 
author wishes marshall bern providing bunny point set reviewers valuable comments 
kohonen self organizing map proceedings ieee vol 
pp 
amenta bern new voronoi surface reconstruction algorithm proc 
siggraph pp 
curless levoy volumetric method building complex models range images proc 
siggraph pp 
turk levoy polygon meshes range images proc 
siggraph pp 
edelsbrunner dimensional alpha shapes acm transactions graphics pp 
hoppe derose duchamp mcdonald stuetzle mesh optimization proc 
siggraph pp 
hoppe derose duchamp mcdonald stuetzle surface reconstruction unorganized points proc 
siggraph pp 
hart guaranteeing topology implicit surface polygonization interactive modeling proc 
siggraph pp 
yu efficient visibility processing projective texture mapping journal computers vol 
pp 

yu wu rendering equation specular transfers integration global illumination 
eurographics journal computer graphics forum pp 

