linear road stream data management benchmark arvind arasu stanford university cs stanford edu anurag brandeis university anurag cs brandeis edu mitch cherniack brandeis university mfc cs brandeis edu esther brandeis university cs brandeis edu specifies linear road benchmark stream data management systems sdms 
stream data management systems process streaming data executing continuous historical queries producing query results real time 
benchmark possible compare performance characteristics sdms relative alternative relational database systems 
linear road endorsed sdms benchmark developers aurora brandeis university brown university mit stream stanford university stream systems 
linear road simulates toll system motor vehicle large metropolitan area 
system uses variable increasingly prevalent technique uses dynamic factors traffic congestion accident proximity calculate toll charges 
linear road specifies variable system fictional urban area including features accident detection alerts traffic congestion measurements toll calculations historical queries 
specifying benchmark describe experimental results involving implementations commercially available relational database aurora 
results show dedicated stream data management system outperform relational database factor streaming data applications 
material supported national science foundation nos 
iis iis iis iis iis 
permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference toronto canada eduardo brandeis university eddie cs brandeis edu michael stonebraker mit stonebraker csail mit edu david maier ogi maier cse ogi edu richard mit mit edu introduce linear road benchmark stream data management systems sdms 
stream data management highly active research area inspired development prototype systems including aurora stream telegraphcq niagara 
way compare performance characteristics systems traditional data management systems configured process streaming data relational dbms configured triggers 
linear road designed measure system meet real time query response requirements processing streaming historical data 
endorsed developers aurora brandeis university brown university mit stream stanford university basis performance comparisons stream processing approaches 
linear road compare performance sdms aurora relational database configured process stream data inputs 
course implementation linear road relational database may optimal invite implement linear road report numbers 
believe results reported show dedicated sdms far better suited relational database supporting streaming data applications 
streaming data poses unique challenges design benchmark 
queries data meaningful input data semantic validity just random 
stream queries continuous performance metrics response time completion time 
benchmark verifiable results returned may vary depending generated 
absence query lan get performance numbers stream time include 
numbers description stream implementation linear road available stream linear road web page 
guage standard stream queries means benchmark queries specified general unambiguous way 
linear road designed meet challenges 
linear road simulates urban expressway system tolls determined dynamic factors congestion accident proximity 
linear road traffic orientation inspired increasing prevalence variable known congestion pricing urban traffic systems 
traffic congestion major metropolitan areas increasing problem built fast keep traffic flowing freely peak periods 
idea variable issue tolls vary time dependent factors congestion levels accident proximity motivation charging higher tolls peak traffic periods discourage vehicles roads congestion 
variable increasingly popular option urban planners due effectiveness reducing traffic congestion advances microsensor technology feasible 
illinois california finland pilot programs utilizing concept 
london singapore charge tolls peak periods vehicles enter downtown area similar reasoning 
section presenting unique challenges stream data introduces designing benchmark describing ways linear road addresses challenges 
section specify benchmark requirements 
section describe experiments involving implementations benchmark commercially available relational database call system aurora 
show dedicated sdms outperform relational database supporting stream data applications factor 
challenges streaming data poses unique challenges design benchmark semantically valid input input data stream benchmark purely random semantic validity 
typical stream presents discrete measurements continuous activity movements soldiers 
content stream consistent activity 
example positions soldier reported minutes positions consecutive reports differ far soldier travel time 
ensure semantic validity input data stream benchmark produced simulation 
continuous query cq performance metrics stream queries predominantly continuous typical database benchmark metric completion time inappropriate queries complete 
appropriate metrics streams response time average maximum difference time input arrives sdms time sdms outputs computed response 
supported query load input stream system process meeting specified response times correctness constraints 
correct results benchmark implementation validated ensure produces results consistent benchmark specification 
continuous queries results may depend evolving historical state arrival order tuples stream different results query may correct 
validation account queries multiple correct answers 
query language exists standard query language streaming systems query requirements stream benchmark clear semantics 
linear road designed meet challenges listed 
benchmark simulates urban expressway system toll charges determined dynamically 
input data consists stream position reports historical query requests 
position reports specify location vehicle expressway emitted vehicle seconds 
historical query request issued vehicle fixed probability time emits position report 
benchmark requires processing set continuous historical queries input stream 
processing position reports system maintain statistics number vehicles average speed segment expressway minute basis detect accidents alert drivers accidents dynamically calculate toll charges segment statistics proximate accidents notify assess vehicles charges 
processing historical query request system report account balance total assessed tolls expressway day estimated travel time cost journey expressway 
query answer satisfy response time correctness requirements specified document throughput system sustain meeting requirements measured number input processes constitutes benchmark score rating 
expressway expressway expressway expressway expressway expressway expressway expressway expressway expressway 
geometry linear city linear road meets challenges sdms benchmark semantically valid input input data linear road generated publicly available traffic simulator 
describe details simulated data section 
cq performance metrics rating associated linear road measure supported query load measure amount input sdms process measured number meeting response time correctness constraints specified section 
correct results queries depend evolving state account balance queries depend table updated toll assessed variation response times mean multiple answers returned correct 
linear road includes queries validation considers possible valid answers 
query language linear road queries specified formally predicate calculus specific stream query language 
linear road benchmark linear city fictional metropolitan area urban setting linear road benchmark 
city encompasses area miles wide miles long divided grid origin southwestern point city coordinate lane exit lane entrance lane entrance lane travel lane travel lane travel lane travel lane travel lane travel mile lane exit 
example expressway segment feet east feet north origin 
linear city contains parallel numbered running horizontally miles apart illustrated 
simplicity run vertically 
expressway lanes east west direction travel lanes lanes lane devoted entrance lane exit lane ramps 
expressway entrance ramps exit ramps direction dividing mile long segments 
shows example segment 
vehicle linear city equipped sensor emits position report identifies vehicle exact coordinates seconds 
assume position reports specify coordinates accuracy 
position reports processed generate statistics traffic conditions segment expressway minute including average vehicle speed number vehicles existence accidents 
statistics determine toll charges variable 
addition vehicles issue queries find current account balance expressway system total tolls assessed day expressway travel time estimates 
simplicity assumptions position reports 
clock skew global clock assumed basis position report timestamps vehicles 

position interpolation position vehicle time assumed exactly position reported vehicle times sec unknown position report emitted range 

instantaneous delivery position report timestamp available stream processing system exactly seconds start simulation 
guaranteed data driver 
simplistic justify assumptions pointing purpose benchmark suite serve stress test systems performing stream processing accurately model traffic patterns 
linear road input input data linear road benchmark generated mit traffic simulator stored flat files 
separate data driver responsible reading files delivering data manner simulating arrival real time 
simulation position reports generated traffic model followed traffic simulator 
simulator generates set vehicles completes vehicle trip journey begins entry ramp segment finishes exit ramp segment expressway 
making vehicle trip vehicle placed entrance ramp accelerates rate allowed traffic 
merges expressway moves destination rate determined degree traffic congestion 
vehicle reaches destination moves exit ramp 
trip selected source location vehicle uniformly distributed possible entrance ramps chosen expressway 
exit ramp normally distributed mean segment location middle expressway segment standard deviation miles 
vehicles affinity exiting downtown area 
expressway vehicle proceeds standard traffic spacing model built traffic simulator 
simulator ensures vehicle emits position report seconds staggering ev ery second roughly reports vehicles currently expressway emitted 
position report timestamp integer count seconds start simulation 
vehicle travels faster mph emit position report segment travels 
vehicle guaranteed average mph entering exiting expressway emit position report entrance ramp position report exit ramp vehicle trip 
simulator generates accident random location expressway minutes position reports 
accident occurs vehicles stopped position time 
vehicle stopped reports position consecutive position reports 
accident occurs segment traffic proceeds segment reduced speed determined traffic spacing model 
accident takes minutes cleared detected 
accident clears vehicles involved accident continue emit position reports 
vehicles emits position report reveals moved note vehicles may complete vehicle trips simulation period 
site accident accident assumed cleared 
probability emitted position report accompanied historical query request vehicle 
historical query requests requests account balances requests total daily tolls day expressway requests travel time predictions 
specify historical queries processed section 
stream data stream data generated simulator consists types tuples position reports historical query requests account balances daily expenditures travel time estimation 
position reports position report tuple form type time vid spd lane dir seg pos identifies tuple position report time timestamp identifying time position report emitted vid maxint integer vehicle identifier identifying vehicle emitted position report spd integer reflecting speed vehicle mph time position report emitted lane dir seg pos functions vehicle coordinates identifies expressway position report emitted lane identifies lane expressway position report emitted entrance ramp entry travel lane travel exit ramp exit 
dir indicates direction vehicle traveling emits position report seg identifies mile long segment position report emitted pos identifies horizontal position vehicle measure number feet point expressway pos 
seconds hour simulation period 
strictly speaking seg redundant position reports include pos 
benchmark computations depend vehicle segment number convenience include input position reports 
historical query requests historical query request account balance request vehicle current account balance daily expenditure request vehicle total tolls specified expressway specified day previous weeks travel time request estimated toll travel time journey expressway day week time 
account balance requests tuples form type time vid qid type identifies tuple account balance request time time request vid vehicle making request qid integer query identifier 
daily expenditure requests tuples form type time vid qid day type identifies tuple daily expenditure request time time request vid vehicle making request qid query identifier day identify expressway day yesterday weeks ago expenditure total desired 
travel time requests tuples form type time vid qid send dow tod time request vid vehicle making request qid query identifier expressway journey occurs segment segments specify day week minute number day journey take place 
avoid complication unpredictable event delivery order types input tuples multiplexed single stream tuples consisting union fields 
order type time vid spd lane dir seg pos qid dow tod day 
linear road implementations type field determine fields relevant tuple 
historical data historical data summarizing weeks worth history maintained system answer historical query requests refer data dating prior start simulation 
data includes account data vehicles toll charges average speeds segment expressway minute previous weeks 
historical data generator constructs flat text files comma separated values file consists tuples form vid day tolls entry vehicle uses expressway hour simulation vid day previous weeks day expressway 
vid day combination tolls total amount tolls spent expressway 
file consists tuples form day min dir seg lav cnt toll entry day day minute min expressway direction dir segment seg 
values lav cnt toll entry reflect average speed number vehicles toll charge segment expressway time 
implementations linear road bulk load data storage system offline time bulk loading included time run benchmark 
linear road requirements linear road benchmark requires processing fixed set continuous historical queries 
queries response time accuracy requirements discussed detail 
queries described informally specified formally predicate calculus 
response time checks require output tuple include timestamps identifies time emitted emit timestamp input tuple triggered generated time 
emit requires system implementing linear road invoke system call get current time immediately prior emitting output 
time timestamp input resulting generation 
example toll notification time timestamp position report vehicle reporting position segment toll applies 
timestamp generated simulator data driver ensures timestamp time tuple available stream processing system 
toll processing systems implementing linear road calculate toll time vehicle reports position new segment notify driver toll 
toll calculations determined basis current congestion segment measured terms number vehicles average speed segment proximity accidents 
distinction toll notifications toll assessments happen different times 
time vehicle issues position report segment toll segment calculated vehicle notified toll 
time position report identifies vehicle crossing segment toll reported segment exited assessed vehicle account 
toll calculation segment concurrent account previous segment 
vehicle exits exit ramp segment toll segment charged 
toll notifications table expresses conditions output recipients response time requirements toll notifications 
formalization terms set position reports uses shorthand notation position report identifies position report emitted vehicle vehicle trip immediately prior vehicle emits position report seconds vehicle trip defined formally 
vid vid time time 
similarly position report identifies position report vehicle trip emitted immediately 
vid vid time time 
vehicle identifier time denotes th position report emitted prior 
vid time 
example position interpolation assumption current position time 
timestamp defined integer number seconds start simulation minute number minute number falls 

note minute simulation minute number 
obviously undefined position report vehicle trip 
function defined provided time midst vehicle trip began position reports ago 
trigger position report preconditions seg seg exit output type vid time emit spd lav toll toll recipient response sec table 
toll notification requirements trigger toll notification vehicle charge traveling segment position report type time vid spd spd seg pos lane dir 
stated table triggers toll notification reports new segment position report exit lane 
tuple output consists identifying tuple toll notification vid identifying vehicle notified toll time specifying time emitted emit specifying time toll notification emitted speed specifying minute average speed segment specifying calculated toll 
recipient notification response time requirement seconds time position report emitted time toll notification sent 
values calculated fields spd toll expressed terms functions lav toll defined table 
lav short latest average velocity computes average speed expressway segment direction averaging vehicle speeds minutes precede minute 
minute averages expressed function specifies average speed vehicles emitted position report segment expressway direction minute note vehicles emit position reports minute 
accounted calculates average speed vehicle position reports emits minute cars returns set vehicles emit position reports segment expressway traveling direction minute note notation 
seg dir shorthand seg dir denote contents bag 
default value toll time segment average speed number vehicles reporting segment minute 
specifically lav time interval minute greater equal mph number vehicles segment minute toll assessed 
default toll determined formula basic intuition raise tolls congestion high discourage drivers contributing worse congestion 
toll calculation described issued segment accident detected segments downstream minute 
case toll charged 
accident detection discussed section 
toll assessments time position report identifies vehicle crossing segment toll charge quoted vehicle entered segment leaving assessed vehicle account 
systems implementing linear road keep track tolls assessed answer account balance queries report current balance vehicle daily expenditure queries report total tolls assessed expressway day vehicle travel time estimation queries previous toll charges estimate tolls segments days times 
accident processing systems implementing linear road detect accidents occur detection subsequently alert vehicles vicinity notification 
discussed section accident detection result reduction tolls assessed segments upstream 
accident detection stream processing system detect accident segment vehicles stopped segment lane position 
vehicle considered stopped consecutive position reports vehicle come position expressway lane position direction 
expressed formally table predicates acc predicate holds positions reports time location 
predicate acc holds vehicles stopped time position expressway direction accident notification accident detected vehicle enters segment vicinity accident notified vehicles opportunity exit expressway avoid resulting congestion 
exact requirements accident notification summarized table 
trigger position report precondition dn seg acc seg seg seg exit output type time emit seg recipients response sec table 
accident alert requirements trigger accident notification position report type time vid spd spd seg pos lane dir identifies vehicle entering segment segments upstream accident location emitted earlier minute minute accident occurred minute accident cleared 
expressed predicate acc seg dn holds accident segment exactly segments downstream expressway travel lanes direction minute tuple output consists fields type identifying tuple accident alert time specifying time emitted emit specifying time notification emitted seg specifying segment accident occurred 
response time requirement seconds time emitted time accident notification sent 
note accident multiple accident notifications may sent vehicle vehicle exit expressway enters segments bringing closer site accident 
repeated notifications intentional allows vehicles enter segments accident occurs notified accident 
vehicle stops receiving accident notifications assume passed accident location accident cleared 
historical query processing aside continuous queries involving toll accident notifications systems implementing linear road able respond historical query requests issued vehicles 
types historical queries 
described 
account balance queries customer traveling expressway request account balance time 
start simulation segment segments downstream dn min direction max 
cars vid time 
seg dir avg spd vid time seg dir avg cars lav avg 
toll cars lav cars acc seg dn table 
notation define tolls 
lane pos dir acc travel acc seg acc vehicle account balance zero account balance time sum tolls assessed requirements account balance historical queries summarized table 
historical query return account balance vehicle triggered request tuple type time vid qid 
tuple output consists fields type identifying tuple account balance time specifying time emitted emit specifying time query response emitted qid identifying query issued request bal account balance calculated time updated 
balance sum tolls charged vehicle account 
expressed terms set position reports resulted toll charge assessed 
subset position reports generated alerts consists position reports issued segment subsequent position reports indicated vehicle exit expressway segment formally vid seg seg 
dir 
function toll specifies toll calculation described table 
linear road requires answering account balance queries means tolls charged vehicle maintained timely fashion 
substantial overhead resulting inclusion historical query comes cost answering cost maintaining data required answer 
response table 
notation define accidents trigger account balance request condition output type time emit qid bal time seg seg toll time seg dir recipient response sec accuracy sec table 
account balance requirements time requirement seconds time historical query request issued time response emitted 
accuracy requirement specifies returned balance accurate time seconds prior time account balance request issued 
tolls issued emitted position report means query possible correct answers 
interval gives stream processing system flexibility update balance vehicle result assessing toll 
query request time concurrent toll charges assessed vehicle account system choose process historical query updating account balance potentially producing result accurate time waiting tolls assessed 
daily expenditure queries second historical query issued linear road requests sum tolls spent express trigger daily expenditure request condition output type time emit qid bal day time toll time seg dir recipients response sec table 
daily expenditure requirements way day weeks including current day day ended minutes 
requirements daily expenditure historical queries summarized table 
historical query return account balance vehicle triggered request tuple type time vid qid day 
tuple output consists fields type identifying tuple daily expenditure report time specifying time emitted emit specifying time query response emitted qid identifying query issued request bal account balance calculated 
value bal sum tolls expressway day charged vehicle account 
able respond daily expenditure queries systems implementing linear road maintain weeks worth toll data vehicle expressway 
approximately vehicles generated hour simulation amounts roughly rows 
travel time estimation queries historical query return time travel estimate triggered request tuple type time vid qid dow tod response system responds tuple form type qid toll respectively predicted travel time toll charge vehicle journey calculated basis statistics maintained previous weeks manner described 
request travel time toll charge estimate journey segment segment expressway starting day time tj expected arrival time segment 
yi yj yj tav tj tav seg dow tod computes expected travel time average vehicle speed weeks data expressway segment day time 
expected travel time ye expected toll cav yj cav seg dow tod computes expected toll average vehicle speed number vehicles expressway segment day time table 
systems implementing linear road maintain weeks worth statistical data segment linear road 
data maintained segments includes count number vehicles segment lav note weeks historical data minute granularity segment requires maintaining roughly rows 
response time requirement travel time query seconds 
running benchmark aside document linear road benchmark web site available tools assist researchers implementation linear road historical data generator generates set flat files containing historical toll data summarizing activity weeks prior simulation run traffic simulator generates set flat files containing streaming input data benchmark data driver delivers data generated traffic simulator system real time validator verifies correctness query results ensuring response time requirements met 
purpose benchmark determine stream processing system maximum scale factor system respond specified set continuous historical queries meeting response time accuracy requirements 
assumed benchmark run increasingly larger scale factors requirements met 
queries formulated system benchmark executed steps 
historical data generator run generate flat files consisting weeks worth historical data 
offline data loaded system storage facility choice 

traffic simulator run generate flat files consists hours traffic data historical query requests vehicles reporting single expressway rush hour 
data driver invoked deliver data manner simulating arrival real time 

system running benchmark configured generate flat file containing output tuples timestamps reflecting times generation times input tuples triggered generation response queries defined benchmark 

validation tool check response times accuracy generated output see meet requirements benchmark 
system achieves rating benchmark meets response time accuracy constraints supporting worth input 
systems implementing linear road direct output single flat file 
validation involves comparing system output generated set validation tool input 
validation tool read output flat files generated stream system check results see meet response time accuracy requirements described previously 
expected systems produce accurate output scale factor unable continue meeting response time constraints 
reporting rating system specify hardware configuration ran 
implementations experiments section describe implementations linear road benchmark compare relative performance 
implementation pre release commercialization aurora described section 
second implementation commercially available relational database system described section 
systems run ghz pentium box gb ram running linux 
compare performance implementations section show dedicated stream processing engine outperform relational database streaming data applications measured respective scale factors factor 
aurora system benchmark pre beta version commercial product anticipate improvement factor increase product matures 
queries included benchmark travel time estimation query far complex difficult express 
benchmark implementations described supports query requests input type query ignored 
linear road aurora aurora uses workflow boxes arrows model constructing queries stream data 
aurora implementation linear road consists query network roughly boxes shared tables vehicle information including vehicle things known location expressway position direction account balance stopped cars including locations cars stopped cars involved accidents including segments close proximity accident time accident segment statistics including segment expressway minute minutes toll history vehicle expressway day previous weeks total tolls spent expressway 
historical query requests handled separately position reports require boxes read appropriate tables vehicle information account balance query toll history daily expenditure query process results 
position reports processed consecutive subnetworks query network 
subnetwork responsible detecting recording cars stopped ones accident 
subnetwork reads writes stopped cars accidents vehicle information tables 

subnetwork responsible maintaining statistics segment expressway minute granularity 
subnetwork reads accidents table writes segment statistics table 

subnetwork responsible calculating emitting tolls position reports show vehicle crossed new segment emitting accident alerts position reports show vehicle entered segment segments upstream accident 
subnetwork reads segment statistics table emits results toll notifications accident alerts output stream 
subnetworks listed connected sequence 
synchronization primitives ensure position report timestamp processed subnetwork position reports timestamps minute processed subnetworks 
box time scheduler aurora constrained primitives availability inputs boxes deciding boxes eligible scheduled 
linear road system built implementations linear road system trigger implementation uses built trigger facility system process position reports historical query requests arrive 
second polling implementation uses data driver written perl preload dedicated relation second worth position reports second subsequently invoke system stored procedure 
implementations recovery logging turned 
polling implementation allows batch processing position reports sensitivity analysis showed performed better trigger implementation polling implementation 
linear road implementation system structure linear road implementation aurora 
stored procedure roughly lines queries accompanying code implementation uses tables store vehicle information stopped cars accidents segment statistics toll history 
additional table hold input tuples delivered driver second additional table receive output results 
aurora historical queries handled separately simple sql queries 
position reports follow sequence processing aurora detect accidents generate statistics calculate emit toll accident alerts 
possible tuples processed batch mode 
example arrival minute worth position reports query run position reports determine segment statistics minute 
results section experimental results running aurora system implementations linear road varying numbers 
scale factor table shows factors achieved aurora system running linear road 
expressway worth input data consists roughly position reports system aurora table 
ratings linear road account balance query requests daily expenditure requests delivered hours 
corresponding output consists roughly toll alerts accident alerts historical query output historical query request 
average system implementation processed roughly input tuples second delivering average throughput tuples second meeting response time requirements linear road aurora processed roughly input tuples second delivering average throughput tuples second factor performance gain 
table shows maximum response times toll notifications run system aurora 
run numbers show highest response time output toll notification response time output equal emit time 
note timestamps granularity second reported response times may second 
response time calculated way indicates actual response time time sec sec 
observe table system fails meet benchmark requirements number fails substantially 
aurora succeeds worst case response time roughly minutes 
system succeeds worst case response time roughly minutes expressway 
degree system fails depends early hour run system starts fall input fails meet response time requirements 
occurs case input tuples backed input queue soon case response time requirements fail processing begins inputs 
aurora fails processing input position report timestamp roughly hours benchmark tuples accumulating input queue min run 
system fails expressway processing input position report timestamp roughly hours benchmark tuples accumulating input queue hour minutes run 
system fails earlier run worst case response time higher 
note run system fails sooner input tuples idling input queues reports worst case response times roughly hours respectively 
system unable meet benchmark requirements expressway results generated granularity half expressway 
system aurora table 
max response times tolls sec discussion results suggest dedicated sdms outperform relational database system processing stream data factor 
response time requirements strict seconds toll alerts seconds aurora meets requirements system may fail meet response time requirements 
unfortunately second granularity timestamps stopped confirming result time deadline factor improvement known certainty 
purpose benchmark stimulate creative thought meet challenges large scale streaming data applications 
goal initial experiments described see stream data management system architected exactly kinds applications compare relational database system configured process queries response pushed data 
numbers suggest dedicated sdms far better suited stream data applications relational database 
readily acknowledge implementation linear road relational database may optimal invite implement benchmark report numbers 
presents linear road benchmark accompanying toolkit comparing capabilities systems perform stream data management 
linear road inspired increasing prevalence variable highways systems world 
fictional urban area simple geometry linear road simulates traffic monitoring system maintains current historical statistics mile segment expressway detects alerts drivers accidents calculates tolls segment statistics accidents frequency supports historical queries report account balances daily expenditures predicted travel times tolls 
outlining challenges formulating stream data benchmark section describing benchmark section described implementations linear road commercially available relational database system system commercialization aurora 
experimental results showed aurora factor system factor showing factor performance gain resulting dedicated stream data management system process stream data 
fact performance gain higher time constraints deadline allow refine time precision establish certain 
serving basis comparison purpose benchmark stimulate creative thought design stream data management systems 
invite run benchmark systems contribute discussion 
abadi carney cetintemel cherniack convey lee stonebraker tatbul zdonik 
aurora new model architecture data stream management 
vldb journal august 
carney cetintemel cherniack convey lee stonebraker tatbul zdonik 
monitoring streams new class data management applications 
proceedings th international conference large data bases vldb pages hong kong china august 
carney cetintemel zdonik cherniack stonebraker 
operator scheduling data stream manager 
proceedings th international conference large data bases vldb pages berlin germany september 
chandrasekaran cooper deshpande franklin hellerstein hong krishnamurthy madden raman reiss shah 
telegraphcq continuous dataflow processing uncertain world 
stonebraker gray dewitt editors proceedings st biennial conference innovative database research cidr asilomar ca january 
chen dewitt tian wang 
niagaracq scalable continuous query system internet databases 
chen bernstein editors proceedings special interest group management data sigmod dallas tx june 
pricing report intelligent transportation systems may 
url www path berkeley edu leap demand manage pricing html 
linear road benchmark website 
url www cs brandeis edu 
motwani widom arasu babcock babu datar manku rosenstein varma 
query processing resource management approximation data stream management system 
stonebraker gray dewitt editors proceedings st biennial conference innovative database research cidr asilomar ca january 
poole 
hot lanes prompted federal program november 
url www org html 
stream project page linear road benchmark 
url www db stanford edu stream cql benchmark html 
guide hot lane development department transportation federal highway administration white 
march 
url www dot gov te html 
yang 
microscopic traffic simulator evaluation dynamic traffic management systems 
transportation research june 
