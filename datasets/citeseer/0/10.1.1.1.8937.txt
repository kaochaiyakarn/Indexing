self synchronization cooperative agents distributed environment sergio 
eduardo mena illarramendi iis department univ zaragoza maria de luna zaragoza spain es lsi department univ basque country 
spain si ehu es keywords coordinated behaviour distributed cooperative agents 
multiagent systems widely applications inherently distributed information retrieval network diagnosis distributed vehicle monitoring 
multiple cooperative agents ers important advantages parallelism robustness scalability applications 
synchronization multiple agents important challenge specially executing di erent computers 
formal description mechanism deadline commitments synchronize agents distributed application 
proposal agents synchronize reacting changes environment 
proposal considers loose coupling agents goal maintaining autonomy independency involved agents 
multiagent systems widely applications inherently distributed information retrieval network diagnosis distributed vehicle monitoring 
multiple cooperative agents ers important advantages parallelism robustness scalability applications 
synchronization multiple agents important challenge specially executing di erent computers 
synchronization techniques describe suitable multi agent applications satisfy conditions 
main task decomposed subtasks 
agent charge performing main task 
achieve goal agent creates agents needs possibly di erent computers 
agent create network agents achieve goal 
agents organized multi layered hierarchical architecture 
supported cicyt project tic dga project 
supported government european social fund 

task returns certain result 
simple ag indicating success failure information obtained environment 
agents bottom layer gets information environment perform tasks 
agents intermediate layer results received created agents input tasks 
process performs recursively root agent gets nal result main task shown user stored 

task performed periodically certain execution frequency result task data obtained dynamic environment changes time 
formal description mechanism deadline commitments synchronize agents distributed application 
proposal agents synchronize reacting changes environment 
proposal considers loose coupling agents goal maintaining autonomy independency involved agents 
explain manage problems due clock desynchronization network delays lead agents lose deadline 
section section explain synchronization technique deadlines 
section describe agents decide start task 
section describe related 
shown section 
dealing deadlines explained necessary coordinate agents multi agent application order avoid generation suboptimal solutions waste computational communication resources due generation redundant unneeded poorly timed results worst case failure getting result getting wrong result 
explain section basics technique propose coordinate agents distributed application ecient way 
idea agent provide creator agent result obtained late possible order maximize novelty data considers get result required time return new result required frequency 
assure timely communications agent network associated certain deadline indicates time new result available creator agent 
problem keeping nal result date solved network agents communicating new results root agent right new result main task required 
show agents interact layers 
focus intermediate agent layer agent created certain agent layer 
explain main steps consider order manage deadlines agent communicates agent deadline layer agent receives deadline calculates deadline agents layer considering deadline estimated task delay agent communicates agents layer agent agent agent agent deadline estimate deadline layer agent deadline processing results fig 

interactions agents deadline agent waits deadline layer comes meet deadline agent processing received results right obtained layer agent sends result agent agent processes received results agent sends result agent agents lowest layer receive results agent obtain data directly environment 
mentioned agent adopts deadline approach perform task communicate result waiting approach agent wait received necessary results processing communicating result 
consider solution major advantages nal result obtained despite partial failures system 
agent perform task despite received result underlying agents received result agent suitable approach applications 
consistent snapshot environment considered associating agent time instant task nish 
way synchronize moment results certain layer obtained 
example consider multiagent application goal get average temperature campus averaging temperatures obtained agents located di erent buildings 
waiting approach example get temperature degrees happened average temperatures measured di erent time instants 
general waiting approach dicult involved agents get data small time window get consistent result 
calculate deadlines agent aware time needs perform tasks 
di erent types delays agent incurs de nition de nition 
de nition 
call task delay agent layer created certain agent layer time spends performing task processing results received underlying agents communicating result creator agent de nition 
call deadline change delay agent layer creates agents layer time spends performing tasks change delays tasks estimation new deadline agents communication deadline agents agents layer di erent delays execute di erent computers 
delays change time communication tasks time expensive size results transmit vary network load change time needed perform processing results change depend size results process values 
agents keep track delays incur order able estimate delays 
estimated delays agent obtain deadline underlying agents 
symbol denote estimations values 
de nition 
call absolute deadline agent layer time instant result available creator agent layer agents multiagent system execute di erent computers dealing absolute deadlines require keep internal clocks computers synchronized 
consider strong requirement dicult achieve heterogeneous environments specially computers synchronize wireless connected 
superscript indicate certain time instant measured regard computer clock certain agent layer resides 
move computers mobile agents 
de nition 
clock shift desynchronization clocks computers agents layer agent layer reside certain time instant just slight clock shift agents deadlines try tasks late possible maximize novelty data tasks 
consequently deadlines communicated layers relative want result seconds absolute want result ready 
agent calculates relative deadline underlying agents indicated de nition de nition 
call relative deadline certain agent layer time interval remain absolute deadline comes receives relative deadline creator agent layer denotes time instant agent layer starts estimating relative deadline underlying agents 
obtaining absolute deadlines relative deadlines seen deadlines communicated relative manner 
agent transform relative deadline receives absolute deadline order know time instant nish task 
transformation performed indicated de nition 
de nition 
call absolute deadline estimation way agent layer estimates absolute deadline relative deadline receives denotes time instant agent layer receives relative deadline creator agent 
corollary prove formula de nition estimation absolute deadline agent 
theorem 
error absolute deadline considered certain agent equals error committed creator agent estimated deadline change delay 
proof 
consider agent layer created certain agent layer 
de nition relative deadline agent calculated agent time instant follows de nition previous equality decomposed considering agent receives new relative deadline estimated deadline communicated de nition previous equalities de nition obtain corollary 
absolute deadline estimation de nition precise estimation absolute deadline agent de nition assuming precise estimation deadline change delay provided 
proof 
hypothesis holds theorem waiting deadline explain section agent determines time wait performing tasks 
de nition 
de ne spare time agent layer time instant time interval agent wait performing tasks 
de nition 
call task nalization time time instant agent nishes tasks certain refreshment period computer clock agent resides 
agent layer waits time units time instant performing tasks holds proposition 
time instant maximum time interval agent layer wait time instant performing task see de nition 
proof 
assume instant agent waits time units performing task 
de nition de nition holds keep agent missing deadline hold corollary 
time instant agent layer wait de ned de nition performing tasks 
proof 
order consider data new possible agent perform task late possible 
proposition maximum amount time agent wait time instant performing tasks consequently exactly time interval agent wait 
de nition 
de ne estimated spare time agent layer time instant follows theorem 
value de nition approximation de nition assuming estimation task delay provided 
proof 
estimation delays implies small value 
de nition de nition proposition 
estimation delays pessimistic calculation estimated spare time agent agent deadline 
proof 
consider agent layer 
de nition assuming agent waits estimated spare time indicated corollary holds de nition agent deadline agent waits spare time estimated agent shown de nition performing task 
avoid slight increase estimated delays agent deadline agent wait estimated spare time indicates 
theorem prove agent start processing received results arrival results underlying agents 
due fact agent performs task late possible 
theorem 
time instant agent layer starts task equals deadline underlying agents layer 
proof 
agent starts task waiting estimated spare time knows deadline ask sake readability omitted superscript spare time 
formula de nition time instant get ask related network distributed sensors track location moving objects triangulating measures sensors 
necessary measures obtained triangulate moving object location refer approximately possible time instant 
propose approach deadline commitments reevaluate periodically location 
mention problem suppose desynchronized computers solution proposed 
tackle problem generic way negotiation agents considered having agents xed roles 
mobile agents proposed mechanism perform data integration distributed sensor network ecient way 
far know propose mechanism assure measures integrating refer approximately time instant 
provided formal description mechanism deadline commitments synchronize agents distributed application 
main features approach agents adapt changes environment changes network processing delays 
loose coupling agents considered allowing asynchronous independent way 
system agents system tasks time 
agent performs task late possible order consider data possible 
plan analyze deal situations required execution frequency achieved 
preliminary speci application location dependent query processor shown 
plan study estimations parameters network delays past measured values 

white pagurek 
mobile agents network management 
ieee communications surveys 

brian robert gray david kotz george cybenko daniela rus 
mobile agents distributed information retrieval 
matthias klusch editor intelligent information agents 
springer verlag heidelberg germany 

mena illarramendi 
system mobile agents tracking objects location dependent query processing environment 
twelfth international workshop database expert systems applications dexa fourth international workshop mobility databases distributed systems munich germany pages 
ieee computer society isbn september 

mena illarramendi 
monitoring continuous location queries mobile agents 
sixth east european conference advances databases information systems adbis bratislava slovakia 
springer verlag lncs september 

mena illarramendi 
dealing continuous queries just time data refreshment 
ieee annual conference pervasive computing communications percom dallas fort worth texas 
ieee computer society appear march 

victor lesser 
cooperative multiagent systems personal view state art 
knowledge data engineering 

qi iyengar 
distributed multi resolution data integration mobile agents 
ieee transactions systems man cybernetics part applications reviews august 

qi iyengar 
multisensor data fusion distributed sensor networks mobile agents 
proc 
intl 
conf 
information fusion pages august 

vincent bryan victor lesser thomas wagner 
implementing soft real time agent control 
org uller elisabeth andre sandip sen claude editors proceedings fifth international conference autonomous agents pages montreal canada 
acm press 

regis vincent bryan roger shen kyle rawlins victor lesser 
spt distributed sensor network real time tracking 
fifth international conference autonomous agents montreal canada may 
