immune system approaches intrusion detection review uwe aickelin julie jamie school computer science university nottingham uk jpt cs nott ac uk 
artificial immune systems intrusion detection appealing concept reasons 
firstly human immune system provides human body high level protection invading pathogens robust self organised distributed manner 
secondly current techniques computer security able cope dynamic increasingly complex nature computer systems security 
hoped biologically inspired approaches area including immune systems able meet challenge 
collate algorithms development systems outcome implementation 
provides review key developments field addition making suggestions research 
keywords artificial immune systems intrusion detection systems literature review central challenge computer security determining difference normal potentially harmful activity 
half century developers protected systems rules identify block specific events 
nature current threats conjunction larger systems urgently requires development automated adaptive defensive tools 
promising solution emerging form biologically inspired computing particular artificial immune systems aiss human immune system detect defend harmful previously unseen invaders build similar system computers 
presumably systems beneficial properties error tolerance adaptation self monitoring 
alongside techniques preventing intrusions encryption firewalls intrusion detection systems idss significant method safeguard computer systems 
main goal idss detect unauthorised misuse abuse computer systems system insiders external intruders 
sections briefly introduce areas idss aiss examination core components basic definition 
research development implementation immune inspired idss catalogued terms evolving methodology algorithmic exploration system implementation details 
overview research area provided conjunction indications areas study 
background section gives brief distinct fields study intrusion detection systems idss artificial immune systems aiss setting background defining terminology sections follow 
detailed discussion readers consult 
intrusion detection systems idss software systems designed identify prevent misuse computer networks systems 
number different ways classify idss 
focus ways analysis approach placement ids alternative taxonomies 
regarding classes misuse detection anomaly detection 
misuse detection approach examines network system activity known usually form pattern matching algorithm 
contrast anomaly detection approach bases decisions profile normal network system behaviour constructed statistical machine learning techniques 
approaches offers strengths weaknesses 
misuse systems generally low false positive rates unable identify novel obfuscated attacks leading high false negative rates 
anomaly systems hand able detect novel attacks currently produce large number false positives 
stems inability current anomaly techniques cope adequately fact real world normal legitimate computer network system usage changes time meaning profile normal behaviour needs dynamic 
second distinction terms placement ids 
respect idss usually divided host network systems 
host systems host requires monitoring collect data concerning operation host usually log files network traffic host information processes running host 
contrarily network idss monitor network traffic network containing hosts protected usually run separate machine termed sensor 
systems offer advantages disadvantages 
host systems able determine attempted attack successful detect local attacks privilege escalation attacks attacks encrypted 
systems difficult deploy manage especially number hosts needing protection large 
furthermore systems unable detect attacks multiple targets network 
network systems able monitor large number hosts relatively little deployment costs able identify attacks multiple hosts 
unable detect attempted attack successful unable deal local encrypted attacks 
hybrid systems incorporate host network elements offer best protective capabilities systems protect attacks multiple sources development 
artificial immune systems human immune system protects body damage extremely large number harmful bacteria viruses termed pathogens 
largely prior knowledge structure pathogens 
property distributed self organised lightweight nature mechanisms achieves protection years focus increased interest computer science intrusion detection communities 
seen perspective viewed form anomaly detector low false positive false negative rates 
increasing amount carried attempting understand extract key mechanisms able achieve detection protection capabilities 
number artificial immune systems aiss built wide range applications including document classification fraud detection network host intrusion detection 
aiss met success cases existing statistical machine learning techniques 
aiss broadly divided categories mechanism implement networkbased models negative selection models distinction somewhat artificial hybrid models exist 
categories refers systems largely network theory recognises interactions occur antibodies antibodies antibodies antigens 
negative selection models negative selection method generating population detectors 
approach far popular building idss seen described section 
immune system approaches section offer depth review relating application aiss problem intrusion detection 
initially looking comparing broad methodological issues move describe compares efficacy advantages disadvantages individual ais algorithms context intrusion detection 
review complete implementations immune idss firstly adaptive computation group university new mexico researchers 
methodological issues dasgupta compare negative selection approaches ais design 
network model effects antibodies react antigen 
contrast self nonself model forrest probabilistic individual antibodies interact 
authors consider applications aiss including anomaly detection fault diagnosis pattern recognition computer security 
specifically relating computer security discuss virus detection process anomaly detection describing different approaches 
unix processes changes behaviour detected short range correlation process system calls especially root processes 
viruses detected detecting changes files honeypots signature approach monitor decoy programs observe changed build signatures main system 
aickelin discuss application danger theory intrusion detection possibility combining research wet computer labs theoretical 
aim build computational model danger theory consider important order define explore find danger signals 
models hope build novel algorithms build intrusion detection system low false positive rate 
correlation signals alerts alerts scenarios considered particularly important 
ideas build previous immunology attack correlation kim bentley 
proposed system collects signals hosts network correlates signals alerts 
alerts classified bad parallel biological cell death apoptosis 
apoptosis process cells die natural course events opposed cells die 
hoped alerts correlated attack scenarios 
signals originate clear probably mixture host network sources 
examples include traffic device sits traffic stream corrects potential ambiguities stream packet program collecting live network data idss snort 
danger algorithm specified correlation algorithm 
system actively respond attacks clear 
aickelin conclude approach works overcome scaling problems negative selection large amount research remains done 
intend implement system 
burgess build previous burgess combine anomaly detection models ph 
motivated need provide better automated response mechanism ph system better detection capabilities need collect detailed data research 
combination signals systems hope provide robust accurate scalable anomaly detection system 
approach combine systems ph able adjust monitoring level inputs able adjust behaviour response signals ph 
discuss possibility ph combination provide automated response mechanism able kill misbehaving processes 
represents exploration combine systems detail results experiments authors intend carry 
algorithmic explorations kim bentley observe complex just negative selection evaluate respect aiss investigating performance scaling related network intrusion detection 
builds lisys system proposed kim bentley incorporates phenotype generation matching process 
describe architecture system similar details 
tcp packet headers communications lan local area network external network internal lan communications 
tcp transmission control protocol commonly network communication protocol 
derived dataset profiles data extrapolated test training data 
thirteen self profiles constructed data detectors generated negative selection profiles 
encoding detectors contains number alleles represented arbitrary numerical value 
different alleles chromosome related different properties packet 
range values subject clustering algorithm 
similarity self strings incoming strings case test data measured contiguous bit scheme value chosen estimating expected number detectors detector generation trials expected false negative rate 
matching activation threshold derived number detectors generated 
authors compare results negative selection system described hofmeyr 
generate self profiles information exploration dataset 
data contains specified attacks 
profile generator extracts information dataset connection identifier known port vulnerabilities way handshake details traffic intensity 
feasibility terms time resources negative selection algorithm assessed calculating time taken produce detector set 
coupled number detectors needed feature space coverage time taken generation comprehensive detector set calculated 
additionally anomaly detection rate recorded analysed 
maximum number detectors varied attack included test profile 
non self detection rates various attacks recorded detector coverage case sufficient 
estimated detection rate take years produce detector set large achieve kind accuracy just minutes worth data detectors needed 
results conclude negative selection produces poor performance due scaling issues real world problems 
opinion immune algorithms clonal selection need better matching function derived 
intend evaluate static dynamic clonal selection algorithms 
dasgupta gonzalez interested building scalable ids step goal investigate compare performance negative positive selection algorithms 
positive selection selection cells natural immune systems negative selection time series perspective terms scalability changing self building forrest previous 
implementation positive selection algorithm generates self training data time windows 
dimensional tree giving quick nearest neighbour search 
parameter bytes second packets second icmp packets second 
followed combination parameters 
alert generated values go threshold 
negative selection implementation uses real valued detectors self defined positive selection algorithm 
multi objective genetic algorithm evolve rules cover non self fitness correlated number self samples covered area overlap rules 
allows niching multi objective problem 
define variability parameter distance self considered normal 
results rule time windows equal rules time window equal 
rules build detectors 
system parameters set manually size time window threshold 
test system small subset lincoln labs outside tcpdump datasets week training week testing 
results concentrate attacks week see find 
combination parameters attacks detected 
single parameter yielded detection cases 
positive selection needs store self samples memory scalable high detection rates compared negative selection rate window sizes respectively memory positive selection 
best detection rates positive negative selection respectively 
concluded possible negative selection idss time series analysis choice time window imperative 
intend data comprehensively test system 
system implementations developments adaptive computation group university new mexico early analysis adaptive computation group university new mexico headed stephanie forrest instrumental develop ment intrusion detection systems employ concepts algorithms field aiss 
early group described forrest aims build intrusion detection system notion self computer system 
builds previous anti virus system immune principles intrusion detection system called ides 
system host looking specifically privileged processes runs system connected network 
system collects information training period define self 
information form root user sendmail popular unix mail transport agent command sequences 
database normal commands constructed sendmail commands examined compared entries database 
authors consider time complexity operation length sequence 
command matching algorithm implemented new traffic compared defined behaviour database 
intrusions detected level mismatches entries database predefined level 
subsequent alerts generated direct system changing response implemented 
building previous group hofmeyr motivated need improve anomaly intrusion detection systems 
privileged processes examined superuser protocols different representation 
system call traces window system calls value case 
window compared database normal behaviour stored tree structure compiled training period 
deviation normal seen mismatch generated sequence similarity assessed hamming distance metric 
sufficiently high level mismatches generates alert alter system 
user definable parameters necessary mismatch threshold automatically derived training data 
cases intrusions detected system 
vast majority results evidence database scaling finding optimum sequence length setting mismatch threshold parameters 
regard false positives bootstrap method proof concept actual results 
authors conclude false positives reduced increase training period 
claimed system scalable generates average false positives day directly compare system 
results suggestive approach data real controlled environments difficult generate live data dynamic environment 
note issues efficiency largely ignored addressed real world 
intend perform fine grained experiments implement response just user alerts incorporate immune principles 
synthesis incorporation suggestions hofmeyr forrest 
goal constructing robust distributed error tolerant self protecting system 
previous hofmeyr forrest forrest aimed implement test ids different components 
system network examines tcp connections classifying normal connections self non self 
detectors form binary strings generated negative selection tcp connections represented form data path triplet subsequently matched triplets network contiguous bit matching scheme 
detector matches number strings activation threshold alarm raised 
detectors produce alarms promoted memory cells lower activation threshold form secondary response system 
permutation masks implemented prevent holes self definition 
stimulation provided user specifying alert genuine reinforces true positives 
activation threshold set adaptive mechanism involving local activation thresholds match counts detectors 
system distributed machines network central machine analyse traffic network 
focus describe algorithms immune concepts experiments briefly described additionally shown rate false positives reduced user aided stimulation 
criticism kim bentley regarding scaling false positives provide depth analysis lisys ids evolved research described 
uses simpler version lisys system developed hofmeyr addition kim bentley 
system monitors network traffic deployed individual hosts 
detector set distributed hosts network tcp connections triplets monitored detectors 
diversity created host independently reacting self nonself 
system uses negative selection algorithm mature bit binary detectors tested connections collected training period 
matured detectors deployed live network 
anomaly detected detector matched number connections threshold parameter contiguous matching function 
generality detectors improved affinity maturation intrusion detected alert message generated 
stimulation permutation masks original system implemented 
case user responsible setting value matching function 
initially detectors randomly generated subject negative selection detectors match tcp connections destroyed 
activation threshold parameter set automatically system depending number matches detector 
additionally parameter temporal element form decay rate thought reduce false positive rates 
value varied manually total number detectors allowed length period decay rate activation threshold 
compared system terms components terms performance described kim bentley government cdis system uses negative selection 
experiments took parts stage involved defining best parameters second running attacks system 
part number detectors investigated specifically effects detector saturation 
second part attacks performed 
number detectors reached certain point saturation occurred 
saturation point greater value better detector set coverage 
longer period fewer false positives increasing activation threshold reduced number false positives 
information provided statistical significance tests 
detection successful attacks instance tuning parameters reduced false positive rate 
regarding scaling issue raised kim bentley noted sensitivity system investigated deployed 
light version lisys system described focus research improving representation detectors exploring richer representation 
dataset experimental system 
experiments investigate improvement contiguous matching chunk scheme 
scheme regions detector specified remaining wild cards 
thought reduce amount holes detector coverage elimination crossover length limited holes creation deployment detectors 
effect permutation masks system performance examined measured terms false positives increase generalisation detector coverage 
observation anomaly produce multiple alerts 
additionally varying little effect full length detectors 
chunks scheme performed remarkably authors investigated subsequently dramatic increase performance part due configuration test network 
outperformed full length detector scheme 
incorporation chunks permutation masking reduced false positives increased true positives 
results series experiments compared setup described 
conclude chunks appealing matching scheme addition permutation masks useful controlling rate false positives 
intend run system larger dataset attacks 
system implementations developments researchers performed university new mexico contributed significantly development aiss idss 
means researchers implemented systems manner 
section aims outline system implementations performed number different research groups common goal implementing various aiss applications security 
ais described kephart earliest attempts applying mechanisms intrusion detection 
focuses automatic detection computer viruses worms 
interconnectivity computer systems increases viruses able spread quickly traditional signature approaches involve manual creation distribution signatures effective 
interested creating system able automatically detect respond viruses 
proposed system detects viruses fuzzy matching pre existing signature viruses integrity monitors monitor key system binaries data files changes 
order decrease potential false positives system suspected virus detected system infect set decoy programs sole function infected 
decoy infected certain detected program virus 
case proprietary algorithm described automatically extract signature program infected binaries cleaned proprietary algorithm described 
order reduce rapid spread viruses networks systems infected contact neighbouring systems transfer signature databases systems 
details testing performance author claims mechanisms employed commercial product tested laboratory setting 
gonzalez dasgupta build anomaly detector requires positive samples negative ones compare self organising map som approach 
soms data dimensionality reduction technique self organising neural networks 
explores issue scalability binary versus real value detectors fuzzy distinction self non self building previous papers authors forrest 
system uses real valued negative selection dimensional vectors detectors 
detectors radius words represent hyper spheres 
fuzzy euclidean matching function 
training detectors generated randomly moved away self spaced 
detectors match median distance nearest neighbours certain time detectors die old age eventually set detectors 
detectors generate abnormal samples 
multilayer perceptron classifier trained back propagation learn distinguish self nonself real data comes classified 
abnormalities reported system operator 
concluded scaling problem negative selection real values binary continuous matching 
concluded negative selection train classifier effectively seeing non self 
intend immune networks artificial neural networks 
le boudec build immune system detect misbehaving nodes mobile ad hoc network 
wireless networks user system termed node acts client router 
nodes act routers proper functioning essential transmission information network 
authors consider node functioning correctly adheres rules laid common protocol route information case dynamic source routing dsr protocol 
node network monitors neighbouring nodes collects dsr protocol trace monitored neighbour 
low bit rate networks amount routing traffic large potentially prohibitive relation negative selection algorithm authors employ 
lead adopt strategy dsr protocol events sampled fixed discrete time intervals create series data sets 
protocol events data set reduced identification sequences protocol events 
creates binary antigenic representation genes records frequency sequences protocol events data set 
mapping raw data antigen chosen authors way genes antigen correlated certain way nodes behaving correctly different manner misbehaving nodes 
negative selection algorithm generated antigens set uniformly randomly generated antibodies eliminate antibodies match exact matching function 
maturation stage collected protocol events assumed indicative routing traffic behaved nodes 
mature set detectors generated antibodies monitor traffic node match antigens node classify suspicious 
system self gene negative clonal immune response non self libraries selection selection memory networks kephart forrest hofmeyr hofmeyr gonzalez le boudec dasgupta table 
summary immune algorithms systems reviewed discussion information sections provided detailed overviews systems implemented containing algorithms concepts 
order clarify various different types immune algorithm shall concentrate complete systems ideas partial implementations 
table presents chosen systems records opinion algorithms 
context table regard identification column conforming criteria gene libraries mean system implemented initialise random detector genotypes evolutionary method 
negative selection refers process selection detectors elimination binding self occurs 
clonal selection refers cell analogy increasing detector generality coverage process 
immune memory refers secondary response meaning similar rapid response elicited attack occur irrespective time attacks 
networks correspond implementation network theory different immune components effect 
response context simply mean generation alert implemented change system result detection 
self nonself refers sense self system recognition normal belonging system order detect opposite nonself 
table evident popular means implementing immune system self nonself model 
approach systems review 
furthermore negative selection popular researchers new mexico adopted dasgupta system comparatively advanced features response immune memory clonal selection respectively 
system reviewed networks gene libraries 
conclude inspired idss room grow areas explore observed kim bentley 
experimental results far shown relatively simple ais idss relatively simple problems selected test data small medium sized testbeds 
larger scale implementations borrow heavily incorporating aspects networks gene libraries danger theory successful 
currently underway 
proof outstanding works vivo ought able silico 
project supported epsrc gr hewlett packard labs bristol intrusion detection system team 

aickelin bentley kim mcleod 
danger theory link ais ids 
proc 
second internation conference artificial immune systems pages 

forrest glickman 
coverage artificial immune system 
proceedings gecco pages 

forrest glickman 
revisiting lisys parameters normal behaviour 
proceedings congress evolutionary computation pages 

burgess 
scaled immunological approach anomaly countermeasures combining ph 
integrated network management pages 

boudec 
artificial immune system approach misbehavior detection mobile ad hoc networks 
technical report ic ecole polytechnique de lausanne 

burgess 
computer immunology 
proc 
systems administration conference lisa pages 

dasgupta 
immunity systems survey 
ieee int conference systems man cybernetics 

dasgupta forrest 
novelty detection time series data ideas immunology 
proceedings th international conference intelligent systems reno 

dasgupta gonzalez 
immunity technique characterize intrusions computer networks 
ieee transactions evolutionary computation 

de castro 
artificial immune systems new computational intelligence approach 
springer 

debar dacier wespi 
taxonomy intrusion detection systems 
annales des telecommunications 

stephanie forrest alan perelson lawrence allen rajesh 
discrimination computer 
proceedings ieee symposium security privacy page 
ieee computer society 

richard thomas barbara osborne freeman editors 
immunology 
freeman th ed edition 

gonzalez dasgupta 
anomaly detection real valued negative selection 
journal genetic programming evolvable machines 

georges grinstein 
information exploration benchmarks information exploration 
proceedings th conference visualization pages 
ieee computer society press 

hofmeyr forrest 
intrusion detection sequences system calls 
journal computer security 

hofmeyr forrest 
immunity design 
proceedings gecco pages 

steven hofmeyr 
immunological model distributed detection application computer security 
phd thesis university new mexico 


network theory immune system 
annals immunology 

kephart 
biologically inspired immune system computers 
proceedings fourth international workshop synthesis living systems artificial life iv pages 

kim bentley 
evaluating negative selection artificial immune system network intrusion detection 
proceedings gecco pages july 

kim bentley 
artificial immune system network intrusion detection investigation dynamic clonal selection 
congress evolutionary computation cec seoul korea pages 

kim 
integrating artificial immune algorithms intrusion detection 
phd thesis university college london 

kim 
artificial immune system network intrusion detection 
una may reilly editor graduate student workshop pages orlando florida usa 

lincoln labs 
dataset 
mit lincoln labs 

leach 
network intrusion detection system 
documentation 

lunt jagannathan neumann javitz valdes garvey 
real time intrusion detection expert system ides final technical report 
technical report computer science laboratory sri international california 


innate sense danger 
seminars immunology 

nist 
intrusion detection systems 
nist computer science special reports sp november 

novak 
network intrusion detection 
new riders rd edition 

project 
www org 

green 
snort users manual snort release 
snort documentation 

boudec 
artificial immune system approach secondary response misbehavior detection mobile ad hoc networks 
technical report ic ecole polytechnique de lausanne 

somayaji forrest hofmeyr longstaff 
sense self unix processes 
ieee symposium security privacy pages 

anil somayaji 
operating system stability security process homeostasis 
phd thesis university new mexico july 

williams anchor lamont 
cdis computer immune system detecting network intrusions 
raid volume pages 
