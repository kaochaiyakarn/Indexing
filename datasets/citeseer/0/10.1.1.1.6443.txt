rt role trust management framework ninghui li john mitchell department computer science stanford university gates stanford ca ninghui li mitchell cs stanford edu rt role trust management framework provides policy language semantics deduction engine pragmatic features application domain specification documents help distributed users maintain consistent policy terms 
provides general overview framework combining aspects described previous publications improvements explanation motivating applications 
agile management dynamic collaboration project develops infrastructure support secure trusted dynamic coalitions emphasis areas 
trust management support distributed management trust relations form suitable determining degree trust associated potential peer service coalition 

search selection coalitions partners protocols facilities authenticated selection communication partners coalitions 

mobile code risks security dynamic installation executable code required support dynamic system self configuration 
focus rt role framework developed course project :10.1.1.133.3395
supports approaches areas project outlined section 
rt aims address access control authorization problems large scale decentralized systems 
problems arise example independent organizations enter coalitions membership existence change rapidly 
coalition may formed autonomous organizations wishing share resources 
supported part darpa contract 
sharing resources organization retains ultimate authority resources controlled prior entering coalition 
call systems collaborative systems single central authority 
rt combines strengths role access control rbac trust management tm systems :10.1.1.29.5742
rbac takes notions role interposed assignment permissions users aid organizing assignments sessions selective role activations 
tm rt takes principles managing distributed authority credentials clear notation denoting relationships authorities localized name spaces linked local names sdsi simple distributed security infrastructure 
delegation logic rt takes logic programming approach :10.1.1.11.3049
addition rt framework contributions 
rt policy concepts intersections roles role product operators manifold roles delegation role activations 
concepts express policies possible express existing systems express policies succinct intuitive ways 
logic tm systems datalog semantic foundation 
rt expressive constraint datalog enables express permissions regarding structured resources time preserving desirable properties datalog 
rt supports credential chain discovery credential storage distributed goal directed chain discovery algorithm 
rt storage typing system guarantees distributed credential chains discovered guides efficient discovery 
rt addresses issue vocabulary agreement application domain specification documents enables rt strongly typed credentials 
design rt driven requirements practical applications 
order better understand practical issues associated sharing information different parties designed implemented demonstration applications digital stor secure web file sharing application august distributed scheduling application 
ongoing development specific policies applications identified need specific policy features 
parts rt result collaboration attribute access control abac project network associates laboratories 
rt abac project underlying policy language 
rest organized follows 
give overview tm discuss related section 
give overview rt section 
sections discuss language semantic foundation chain discovery issues implementation applications rt section briefly discuss tm related service selection mobile code conducted project 
conclude section 
overview trust management traditional access control mechanisms authorization decisions identity requester 
decentralized environments resource owner requester unknown access control identity may ineffective 
trust management approach distributed access control authorization access control decisions policy statements multiple principals 
tm framework framework trust management systems consists aspects language deduction infrastructure 
language tm language mechanism identifying principals syntax specifying policy statements queries semantic relation determines query true set policy statements 
principals issue policy statements requests authorized perform actions 
policy statements describe properties principals derive property properties 
example properties include membership group student having birthday certain date membership role organization receiving delegation permission role decentralized environments authenticity integrity policy statements need protected 
tm systems principals identified public keys nonlocal policy statements digitally signed 
signed policy statements called credentials 
query corresponds access request semantic relation tm language defines notion commonly known proof compliance set policy statements prove request authorized helpful tm language support advanced queries finding principals authorized access resource finding access permissions specific principal deduction deduction implements semantic language 
tm system may deduction engines algorithms 
proof checking engine takes set policy statements query answer input verifies answer true 
answer may equipped proofs proof hints proof checking simpler 
proof construction engine known chain discovery engine takes set policy statements query input finds answer optionally constructing proofs proof hints 
systems may large number millions policy statements stored decentralized manner chain discovery engine complete set policy statements input able start evaluation query incomplete set policy statements interleave retrieving policy statements inferencing 
infrastructure infrastructure aspect tm system includes support policy statement creation storage distribution revocation issues coupled language deduction 
similar public key infrastructure extensively studied 
usage scenarios tm describe scenarios tm systems useful 
illustration purposes intended exhaustive rigid classification 
flexible control centralized environments trust management systems achieve flexible control centralized environments operating systems web file sharing systems unix owner file permission access file group owner 
ordinary user wants share file say group collaborators working user involvement administrator 
useful user define groups needs assign permissions access file flexibly 
applications useful delegate ability file permission users 
collaboration systems collaboration systems users belonging organization need access resources controlled organizations coalition 
trust management allows resource controllers delegate certain forms policy setting users organizations 
may done controlled manner delegating arbitrary access control 
example access decisions may resource controllers local policy statements encode relationship collaborating organizations credentials encode requesters roles positions organizations 
loosely coupled decentralized systems tm system provide expressive global scale public key infrastructure having digital credentials driver licenses student ids credit cards organization memberships trusting relationships regarding digital credentials 
cases online transaction may require combination credentials 
distributed computing environments addition access requests individuals trust management control access processes distributed computing environment 
suppose user starts session activating eligible roles issues request 
fulfill request session process starts second process behalf user invokes third process running different host access back services needed complete requested task 
processes delegated authority act user behalf pass authority processes initiate 
related term trust management coined policymaker system introduced 
second generation policymaker keynote 
keynote version simple public key infrastructure spki called permission tm systems policy statements delegate permissions 
statement delegates certain permissions issuer subject 
chain statements acts capability granting certain permissions subject statement chain 
permission systems keynote spki thresholds capability directed graph credentials 
affect discussion limitations 
express fact issuer permissions principals certain property 
result delegation relationships system quite limited 
see detailed discussions limitation :10.1.1.133.3395
ablp logic propositional modal logic designed mainly authentication distributed systems :10.1.1.112.4473
logic determine tightly coupled distributed systems originally request gone multiple encrypted channels processes multiple hosts 
core concept ablp logic speaks relation principals speaks means principal statement believe principal 
pointed modal operators ablp logic defined general higher order propositional logic 
framework described specific systems define operators clients responsible construct proof access certain resources server needs generic verifier general logic verify proof 
system concept implemented 
logics propositional logic describe permissions structured resources 
logics principal delegate permission access directories files certain directory authority issue student certificates name school certain value permission approve purchase orders value threshold 
previous tm systems ones closest rt delegation logic spki sdsi 
new contributions rt listed section elaborated coming sections 
overview rt framework section give overview rt principals roles rt principals uniquely identified individuals processes public keys central organizing concept rt notion roles 
rt principal name space roles similar localized name spaces sdsi 
role named principal role term 
example ka principal role term ka role defined principal ka read ka role 
role term consists role name zero parameters 
ka issue policy statements defining role ka statements determine members ka example ka define ka include principal kb role effectively delegating control role ka kb 
ka issues multiple statements defining role role contains union resulting principals 
rt single element roles manifold roles 
semantics single element role set principals 
notion single element roles unifies concepts access control trust management literature including groups systems identity identity certification systems roles permissions rbac names sdsi authorization tags spki attributes attribute certificates 
possible unify concepts common mathematical underpinning semantics concepts set principals 
group clearly set principals 
identity set principals corresponding physical user systems require set contain just principal 
role rbac viewed set principals members role 
role hierarchy relationship kb powerful ka viewed definition members kb members ka permission corresponds set principals permission 
granting permission principal amounts making principal member set corresponding permission 
granting permission role amounts asserting set corresponding permission includes subset set corresponding role 
name sdsi resolved set principals 
attribute may identified set principals attribute 
notion manifold roles generalizes roles allow member role principal set principal 
principal set member manifold role ka means privileges associated ka acting privilege 
semantics manifold role set principal sets 
manifold roles introduced support separation duty sod policies expressive way threshold structures 
scenarios user prefers exercise rights 
administrator logs ordinary user perform ordinary tasks 
example user temporarily delegated certain access rights manager manager absence 
user want exercise customary rights wishing temporary rights explicitly working manager behalf 
notion related privilege principle supported systems 
rbac supported notion sessions 
user selectively activate eligible roles session 
viewed delegation role activations user session 
natural generalization user session delegation role activations process process delegation role activations 
need particularly acute distributed computing environments 
rt framework delegation role activations express selective role activations delegation role activations access requests supported subset requesting principal roles 
semantic foundation datalog semantic foundation rt framework :10.1.1.133.3395
policy statements rt translated datalog rules 
guarantees semantics precise monotonic algorithmically tractable 
constraint datalog introduced expressive foundation tm languages preserving advantages datalog 
requirement rt policy statements translated rules datalog tractable constraints main design constraint expressivity design rt framework 
support distributed chain discovery previous addressing credential chain discovery problem assumes gathered potentially relevant credentials place consider gather credentials 
assumption credentials stored place hold applications trust management decentralized control 
systems credentials issued stored distributed manner 
distributed discovery requires evaluation procedure goal directed expending effort chains involve requester access mediator trusted authorities considering credentials demand driven manner 
goal directed algorithms contrasted bottom algorithms require collecting credentials commencing evaluation 
internet distributed storage millions credentials unrelated goal directed techniques crucial 
distributed credential chain discovery requires procedure evaluation incomplete set credentials suspend evaluation issue request credentials extend partial chains resume evaluation additional credentials obtained iterate steps needed 
goal directed credential chain discovery algorithms rt basic component rt 
algorithms credentials stored distributed manner 
issues related distributed credential storage addressed 
support vocabulary agreement distinguishing feature rt framework directly addresses issue vocabulary agreement 
credential chains delegate access permissions resources principals involved chain need consistent terminology specify resource permissions delegation conditions 
different credential issuers incompatible schemes credentials meaningfully combined 
intended permissions may granted schemes intended different purposes accidentally interact unintended authorization may follow 
systems address issue try come vocabulary applications 
philosophy different applications share common policy concepts need able different vocabularies 
rt address issue scheme inspired xml namespaces 
introduce application domain specification documents 
globally uniquely identified 
way uniquely identify uri pointing document collision free hash document 
declares suite related data types role names called vocabulary 
credentials role name refer role name declared 
enables rt strongly typed credentials policies 
feature helps ensure interoperability reduce possibility errors writing policies credentials unintended interaction credentials 
think files programs credentials files 
data types role names declared credentials role names type consistent way 
notion vocabularies complimentary notion localized name spaces roles 
addresses distinct name space issue 
example board issue declares role name student 
defines names data types role parameters 
parameters may include university name student name program enrolled may contain description conditions principal member student role may require principal registered degree program 
university issue credentials defining student 
vocabulary created principal authority member role student 
rt family tm languages basic language rt family tm languages rt 
rt role terms simply role names take parameters 
additional components rt introduced :10.1.1.133.3395
rt adds rt parameterized roles 
rt provides manifold roles role product operators express threshold separation duty policies 
rt provides delegation role activations express selective capacities delegation capacities 
rt rt independently rt rt 
rt defining roles rt policy statements take form role definitions 
role definition head body 
head role definition form ka ka principal role term simply role name rt 
simple member ka kd body consists principal kd 
defines principal kd member role ka simple containment ka kb body consists role 
defines role ka contain principal member role kb 
linking containment ka ka call ka linked role 
defines ka contain kb kb member role ka 
note body starts ka role terms limitation affect expressive power intermediate roles additional statements express long linked roles 
see rationale limitation 
intersection containment ka kb kbk rk defines ka contain intersection roles kb kbk rk 
simple delegation ka kb kc part colon kc optional 
means ka delegates authority kb 
words ka trusts kb judgement assigning members kc ka wants control delegation kb assign members kc members ka rt viewed convenient shorthand ka kb kc 
linking delegation ka ka kc part colon kc optional 
means ka delegates authority members ka delegation restricted members kc 
implies ka ka kc 
simple delegation linked delegation definable forms definitions 
intermediate roles needed linking delegation 
forms delegation necessary roles take parameters extended additional parameters 
example fictitious web publishing service epub offers discount preferred customer parent organization ieee member 
considers university students preferred customers 
delegates authority identification students principals accredited universities 
identify universities accepts credentials issued fictitious board universities abu 
credentials prove alice eligible discount epub discount preferred ieee member preferred university student university abu accredited abu accredited student alice ieee member alice rt adding parameters rt adds rt parameterized roles 
role definitions rt format rt 
rt role term takes form 
pn role name pj takes forms name name part optional name name name parameter constant appropriate type variable value set appropriate type 
variables parameters role definition equal 
value set viewed typically constraint representation set values 
example firewall administrator uses key firewall issue credential gives system administrator sa authority stanford id permission connect host domain stanford edu 
sa alice permission connect host cs stanford edu port 
perm host descendants stanford edu ksa ksa perm host cs stanford edu port alice stanford id requests connect host cs stanford edu port fw allow connection 
credentials descendants special value set constructor tree domains see section 
credential port parameter appear role term perm host means port parameter constrained delegation 
similarly role term credential parameters constraint required 
rt supporting separation duty separation duty sod security principle requires different persons responsible completion sensitive task 
sod discourage fraud requiring collusion principals commit fraud 
spki keynote allow delegation ofn threshold structures explicitly lists principals 
argued threshold structures inconvenient 
example express policy requires different spki keynote policy statement needs explicitly list statement needs changed time members cashier role change 
delegation logic expressive dynamic threshold structures satisfied agreement set principals satisfy specified condition 
rbac sod achieved constraints mutual exclusion roles requiring cooperation mutually exclusive roles complete sensitive tasks 
principal allowed simultaneously occupy mutually exclusive roles sensitive tasks completed cooperation principals 
threshold structures require agreement different principals drawn single set 
mutually exclusive roles require agreement disjoint sets set 
mechanisms limitation achieve mechanism achieves 
rt introduces notion manifold roles achieve agreement multiple principals set disjoint sets 
similar role defines set principals manifold role defines set principal sets set principals cooperation satisfies manifold role 
manifold roles defined role expressions constructed role product operators 
product containment ka kb kbk rk defines role ka contain principal set pk pj member rj 
exclusive product containment ka kb kbk rk defines role ka contain principal set satisfies condition pk pi pj pi pj nonintersecting pj member rj example bank fb roles manager cashier auditor 
fb policy requires certain transaction approved manager auditor 
different 
manager cashier serve 
auditor different parties transaction 
fb fb cashier fb cashier fb fb manager fb fb approval fb auditor fb rt delegation role activations introduce rt handle delegation capacity exercise role memberships 
rt adds notion delegation role activations rt framework 
principal activates role session represented delegation credential issued 
call role activation 
delegate role activation issuing credential 
principal issue multiple delegation credentials principal 
role activations delegated delegation credential 
viewed shorthand multiple delegation credentials 
delegation credential contains keyword 
example means ing role activations means delegating role activations activating roles 
request rt represented delegation credential delegates requester request 
example requests read filea capacity represented cess read filea 
request authorized member role role read access filea chain delegation role activation note read filea principal 
delegation interpreted dummy principal representing request read filea 
rt system assigns unique dummy principal request 
making request req ities represented req 
delegation role activations delegation capacity act role 
different kind delegation delegation authority define role role definition credential 
examples rt dt example organization sorg purchasing order submitted approved placed 
employee submit purchasing order 
manager approve order 
manager employee manager approve order 
represented follows sorg place sorg submit sorg approve sorg submit sorg employee sorg approve sorg manager sorg employee sorg manager suppose alice bob managers sorg manager alice sorg manager bob alice submit order issuing alice sorg employee alice order bob approve issuing bob sorg approve bob order order approved 
scenario described example originally 
example server authorizes filea deleted requested workstation behalf user 
knows alice user trusts ca certifying public keys users 
knows ws workstation trusts ca certifying public keys workstations 
expressed credentials del filea user user alice ws credentials issued ca alice alice ws ws station stores private key tamper resistant firmware 
boots generates key pair operating system issues credential delegate activation new key 
user alice logs workstation ws new process set new key pair generated 
alice request server delete filea 
process sets secure channel ch server sends request channel 
delegation credentials needed 
ws ws os ws os alice user alice ws alice user ch request sent ch delete filea behalf user alice working workstation represented ws alice user ch del filea 
request authorized 
semantic foundation rt constraint datalog original design rt framework datalog :10.1.1.133.3395
datalog restricted form logic programming variables predicates constants function symbols 
previous tm languages datalog delegation logic sd binder :10.1.1.11.3049
datalog attractive reasons 

datalog declarative subset order logic semantics datalog tm language declarative unambiguous widely understood 

datalog extensively studied logic programming context relational databases query language supports recursion 
tm languages datalog benefit past results advancements fields 

function symbol free property datalog ensures tractability 
safe datalog program fixed upper bound number variables rule construction minimal model takes time polynomial size program 

efficient goal directed evaluation procedures answering queries 
datalog limitations foundation tm languages 
significant limitation inability describe structured resources 
example may want permission read entire document tree uri assign responsibility associating public keys dns names domain restrict network connections port numbers limited range approve routine transactions value upper limit 
permission access files subdirectories directory pub rt represents permissions access potentially infinite set resources naturally expressed logic programming language function symbols 
tractability datalog direct consequence absence function symbols 
previous tm languages express certain structured resources spki formal foundation studies suggest spki may ambiguously specified intractable 
showed datalog extended constraints denoted datalog define access permissions structured resources compromising properties datalog attractive trust management establishing suitable logical foundation wider class tm languages 
datalog allows firstorder formulas constraint domains may describe file hierarchies time intervals body rule representing access permissions structured resources declarative language 
rest section give brief overview datalog see details 
constraint datalog restricted form constraint logic programming clp class query languages constraint databases cdb 
notion constraint database introduced grew research datalog clp 
generalizes relational model data allowing infinite relations finitely representable constraints 
intuitively constraint domain domain objects numbers points plane files file hierarchy language speaking objects 
language typically defined set firstorder constants function symbols relation symbols 
definition constraint domain tuple 
signature consists set constants collection predicate function symbols associated arity indicating number arguments symbol 
structure consists set called universe structure mapping constant element mapping predicate symbol degree ary relation mapping function symbol degree function class quantifier free order formulas called primitive constraints domain 
common conventions assume binary predicate symbol contained interpreted identity assume true false closed variable renaming 
examples commonly constraint domains 
equality constraint domains signature consists set constants predicate 
primitive constraint form variables constant 
datalog viewed specific instance datalog equality constraint domain 
order constraint domains signature predicates 
structure linearly ordered 
primitive constraint form 
structures order constraint domains integers rational numbers real numbers subset 
linear constraint domains signature function symbols predicates 
primitive constraint form ci constant xi variable predicate constant 
linear constraints may interpreted integers rational numbers real numbers 
range domains range domains syntactically sugared order domains 
primitive constraint form constant constant special symbol meaning unbounded 
similarly 
tree domains constant tree domain takes form 
ak imagine tree node labelled string value 
constant 
ak represents node 
ak strings path root node 
primitive constraint form 
ak 
ak means child node 
ak 
ak means descendant 
ak tree domains represent hierarchical resources file systems dns names example uses tree domains range domains represent network permissions 
value set constructor descendants syntactic sugar 
definition constraint domain 
constraint tuple constraint variables 
xk finite conjunction primitive constraint 
furthermore variables free 
xk 
constraint datalog rule form 


rn xn 
xn kn constraint set variables rule 
constraint rule called constraint fact 
certain conditions constraint rule hypotheses applied constraint facts produce new constraint facts somewhat similar applying datalog rule datalog facts 
process applying rule set facts requires form quantifier elimination 
fixpoint datalog program constraint domain admits quantifier elimination may computed iterated rule application 
say constraint domain tractable roughly complexity equality constraint domain datalog 
tm languages useful appeal constraints domains 
straightforward define datalog standard definition multi sorted order logic 
order keep constraint domain separate assume constraint domains combined domain separate sort predicate symbols applicable arguments appropriate constraint domain variable belongs sort 
datalog program constraints domains evaluated time polynomial size program involved constraint domains tractable 
translation rt credentials datalog translate rt credentials constraint value sets datalog distributed credential chain discovery goal directed credential chain discovery algorithms rt :10.1.1.133.3395
algorithms credential storage distributed 
trust negotiation protocol rt chain discovery mechanism 
protocol enables parties joint chain discovery interactive manner enables parties policies protect sensitive credentials attribute information contained credentials 
distributed storage credentials raises nontrivial questions chain discovery 
trying construct credential chain answer access control query look credentials 
look case chain sure exists 
distributed credential chain discovery requires scheme address questions 
example consider credentials example 
preferred university student university abu accredited abu accredited student alice credentials prove alice member preferred 
credentials stored distributed manner non trivial guarantee chain discovered 
example stored abu just knowing know look credentials 
wants avoid having go university determine alice university student 
storage type system notion typed credentials address problems 
guarantee credential chains discovered credentials stored distributed manner 
types guide search right direction avoiding huge fan outs 
give summary storage type system 
credential assumed stored issuer issuer stored credential subjects subject stored credential subject issuer defined follows 
credential call issuer principal base subject credential base defined follows base base base base ak rk 
ak 
role name types issuer side type type 
issuer side possible types issuer traces issuer traces def issuer traces order increasing strength 
issuer def issuer credential form required issuer stored 
issuer typing rule credentials additionally requires issuer 
types role expressions determined role names 
means retrieve credential discover subject allowing find issuer stored credentials issued subject repeat process discover members subject side possible types subject traces subject traces 
subject credential form required subject stored 
ensure credentials issuer stored subject stored typing rule requires role expression issuer subject 
linked role issuer true subject 
issuer def issuer def subject issuer issuer def 
example typing credentials example preferred university issuer def subject accredited student issuer 
credentials typed credentials stored issuer stored subject stored alice 
arrangement enables search algorithm find credentials starting alice touching credentials students universities 
implementation applications java rt inference engine implemented 
engine demonstration applications described 
implementation trust target graph trust negotiation protocol developed attribute access control project 
process implementing inferencing engine rt provide expressive basis applications 
august secure distributed calendar august distributed calendar program 
august user calendar specify policy determines allowed view part user calendar allowed add activity certain kinds certain time 
effect august simple distributed database data special format scheduling information 
august user declares different roles groups friends family members colleagues defines members roles 
users may delegation defining role members 
example user may specify friends family members friends 
avoids need explicitly list eligible users assignment roles appropriate authorities 
calendar consists activities 
activity category time period importance level creator addition information specific activity 
user define calendar categories time periods activity category scheduled 
user assign read write permissions roles 
read permission parameterized category 
write permission parameterized category importance level limits maximum important level possesses permission schedule 
august user sets policy dialog boxes policy preferences translated rt rt policy statements associated august determines read write user calendar entry 
stor secure web file sharing digital stor distributed file sharing application web file sharing system formulated provide useful service allow experiment policy development policy requirements 
stor user connects service browser user authentication done client side certificates generated stor certificate authority 
access controlled policy access individual file determined policy statements specified users 
policy language allows user refer policy user specifying policy 
addition storing files stor message processing version control facilities providing secure collaboration tool centered policy concepts expressed rt service selection mobile code stanford architecture mobile code security enhancements jini primitives conventions calling library services 
clients want access services lookup proxies directories proxies ways similar local service 
flexible traditional client service architecture just data transferred clients servers 
approach involves mobile code risks need manage trust code obtained services previously know client 
rt provides natural way expressing trust policies environment 
security goals mobile code architecture restrict ability proxy code access client virtual machine executes secure proxy service network communication allow client authenticate proxy sure comes right service allow service authenticate authorize requesting client 
goal addressed java security mechanisms 
addition bytecode filtering mechanism enhance protection 
jini client manages mobile code risks invoking java bytecode filter screens java bytecode security risks 
filter may customized enforce coding restrictions software conventions established coalition designed prevent mobile code attacks 
information java bytecode filtering mechanisms client examine service proxy installed virtual machine may 
goal may achieved consistent communication protocol ssl secure sockets layer standard implementations java rmi ssl may 
focus provide additional security mechanisms meet goals 
goal need authenticate code data 
goal wish enable single authentication session multiple authentication mechanisms authorization arguments calls 
main mechanisms meeting goals new form signed service proxy includes signed code signed object state form authenticated service session 
signed service proxies state ip address obtain service allow client programs verify signature proxy making call proxy 
client gets proxy directory verifies proxy signed public key consults trust management engine ensure signing public key trusted 
authenticated client session client program call service service consults tm engine service side compute set permissions client 
service generates dedicated service session associates set permissions session generates proxy ded service session returns proxy client 
service session session proxy dynamically generated transmitted secure channel secret key secure communication channel 
dedicated service session provides performance optimization controls clients services flexible policy driven manner 
overview rt role trust management framework 
presentation summarizes main aspects rt described previous publications improvements explanation motivating applications 
rt framework provides policy language semantics deduction engine pragmatic features application domain specification documents help distributed users maintain consistent policy terms 
comparison systems spki sdsi keynote advantages rt include declarative logic semantic foundation support distributed chain discovery vocabulary agreement strongly typed credentials policies flexible delegation structures expressive support separation duty policies 
mart abadi michael burrows butler lampson gordon plotkin 
calculus access control distributed systems 
acm transactions programming languages systems october 
andrew appel edward felten 
authentication 
proceedings th acm conference computer communications security ccs november 
mads dam 
note spki authorization syntax 
pre proceedings st annual pki research workshop april 
available www cs dartmouth edu pki 
bauer michael schneider edward felten 
general flexible access control system web 
proceedings th usenix security symposium august 
matt blaze joan feigenbaum john ioannidis angelos keromytis 
keynote system version 
ietf rfc september 
matt blaze joan feigenbaum jack lacy 
decentralized trust management 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
tim bray dave hollander andrew layman 
namespaces xml 
recommendation january 
john mitchell shin 
mobile code security java bytecode instrumentation 
darpa information survivability conference exposition discex ii june 
david clark david wilson 
comparision commercial military computer security policies 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
john detreville 
binder logic security language 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
carl ellison bill butler lampson ron rivest brian thomas 
spki certificate theory 
ietf rfc september 
jonathan howell 
naming sharing resources administrative boundaries 
phd thesis dartmouth college may 
trevor jim 
sd trust management system certified evaluation 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
paris kanellakis gabriel kuper peter revesz 
constraint query languages 
journal computer system sciences august 
preliminary version appeared proceedings th acm symposium principles database systems pods 
gabriel kuper leonid libkin jan paredaens editors 
constraint databases 
springer 
butler lampson mart abadi michael burrows edward wobber 
authentication distributed systems theory practice 
acm transactions computer systems november 
ninghui li benjamin grosof joan feigenbaum 
delegation logic logic approach distributed authorization 
acm transaction information system security february 
appear 
ninghui li john mitchell 
datalog constraints foundation trust management languages 
proceedings fifth international symposium practical aspects declarative languages january 
appear 
ninghui li john mitchell william winsborough 
design role trust management framework 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
ninghui li william winsborough john mitchell 
distributed credential chain discovery trust management 
journal computer security february 
ronald rivest lampson 
sdsi simple distributed security infrastructure october 
theory lcs mit edu rivest sdsi html 
ravi sandhu edward coyne hal feinstein charles :10.1.1.29.5742
role access control models 
ieee computer february 
simon mary ellen 
separation duty role environments 
proceedings th computer security foundations workshop pages 
ieee computer society press june 
william winsborough ninghui li 
protecting sensitive attributes automated trust negotiation 
proceedings acm workshop privacy electronic society november 
appear 
william winsborough ninghui li 
practical automated trust negotiation 
proceedings third international workshop policies distributed systems networks policy pages 
ieee computer society press june 
