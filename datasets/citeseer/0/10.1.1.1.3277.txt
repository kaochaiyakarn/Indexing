ieee transaction pami index terms automata classes defined grammars automata machine learning language acquisition language models language parsing standing machine translation speech recognition synthesis structural pattern recognition syntactic pattern recognition 
ieee transaction pami probabilistic finite state machines part vidal de la carrasco probabilistic finite state machines today variety areas pattern recognition fields pattern recognition linked computational linguistics machine learning time series analysis circuit testing computational biology speech recognition machine translation 
part survey generative objects study definitions properties 
part ii study relation probabilistic finite state automata known devices generate strings hidden markov models grams provide theorems algorithms properties represent current state art objects 
probabilistic finite state machines probabilistic finite state automata pfa hidden markov models hmms stochastic regular grammars markov chains grams probabilistic suffix trees deterministic stochastic probabilistic automata dpfa weighted automata names syntactic objects past years attempted model generate distributions sets possible infinite cardinality strings sequences words phrases terms trees :10.1.1.131.2084
successes wide amount fields ranging computational linguistics pattern recognition including language modeling speech recognition bioinformatics music modeling machine translation circuit testing time series analysis objects valuable :10.1.1.131.2084
researchers entered field definitions notations dr vidal dr 
sistemas inform computaci instituto de inform tica 
universitat polit cnica de val ncia 
spain 
dr de la dr universit jean 
france 
dr carrasco 
de sistemas inform 
universidad de 
spain 
ieee transaction pami varied energy spent reach common language 
outsider choice best fitting syntactic object describe sort distribution working seldom depend usual knowledge sub field background 
number survey papers dedicated models past years obvious reading papers models inter relate difficulties lie 
difficulties theoretically analyzed computational learning theory literature alas results highly technical reached adequate communities 
possible exception article dupont 
furthermore folk theorems appear hmms equivalent pfa parsing string non deterministic case best derivation summing possible derivations approximation determinism common language theory modify expressive power pfa 
results true 
case true folk theorems researchers know hold 
complexity objects underlying theories instance probabilities matrix calculus rational power series usual results depend exterior theory example consider question studied section iv knowing mean regular deterministic distributions regular deterministic 
merge distributions dpfa 
false proof results rational series 
argue proof albeit simpler propose offers little insight people working field 
knowing construct counter example helps instance build hard cases problems identify sub class distributions counter example hold 
example gives spirit written 
aims provide date theory pfa survey objects give answers questions naturally arise 
preliminary question justifying interest pfa describe distri ieee transaction pami butions devices popular may hmms 
choice centering survey pfa hmms obeys reasons formal language theory appears today widespread background knowledge researchers engineers computer science 
adding probabilities known objects automata permits build intuitions experiences 
hand hmms directly issued probability theory 
affects way theory constructed 
pfa built deal problem structured space adding probabilities structure hmms considered devices structure probabilistic spaces adding structure probabilities 
choice fundamentally better concerned task wishes probabilistic devices order grasp structure data appropriate 
prove second part pfa represent distributions class modeled hmms defined section 
furthermore space common algorithms simple 
third point pfa finite state automata weights verify constraints underlying automaton deterministic deterministic probabilistic finite state automaton dpfa 
formal language theory key difference deterministic non deterministic finite state machines ex tends probabilistic case dpfa favored parsing simpler admit minimal object turn equivalence problem tractable 
probabilistic deterministic machine exists study special attention 
machines powerful non deterministic counterpart play important role number applications 
objective establish correct definitions different sorts proba automata done section ii 
probabilistic automata consider generative processes 
noted line probabilistic acceptors studied 
simple problem parsing provide section iii ieee transaction pami required equations algorithms dealing parsing 
goal section study relationship pfa strings generate 
section iv devoted study intrinsic properties pfa 
minimality issues discussed section iv 
section iv prove distributions represented dpfa pfa 
topology regular distributions thoroughly studied section hand entropy measures kullback leibler divergence perplexity arguably measure quality model 
hand alternative mathematical distances 
effectively computed distributions deterministic 
part ii devoted comparison types models learning issues presentation extensions probabilistic automata 
order manuscript readable proofs propositions theorems left corresponding 
surveys incomplete 
case completeness particularly difficult achieve due enormous increasing amount different fields objects 
advance apologize subject recalled 
ii 
definitions probabilistic finite state automata chosen key syntactic representations distri butions certain amount reasons formal language theory appears today widespread background researchers engineers computer science 
pfa represent distributions modeled hmms 
pfa admit deterministic version natural problems tractable non deterministic pfa equivalent deterministic counter parts dpfa studied number authors particular properties 
practice pfa implement finite state models 
ieee transaction pami variety definitions regarding pfa literature 
ones choose give sufficiently general cover cases intended distribution set strings just set strings special length 
cases fit definition analyzed second part 
general definition automata probabilities real numbers intended practical probabilities represented rational numbers 
rational probabilities needed discussing computational properties involving concept size automaton 
different line successfully followed probabilities just special case weights algebra weights computed allows deal cases computable 
give formal definitions probabilistic automata going rest 
stochastic languages finite alphabet set strings built including empty string denoted 
language subset convention symbols denoted letters alphabet 
strings denoted alphabet letters 
length string written 
set strings length resp 
denoted resp 

substring position position denoted xi xj 
substring xi xj iis empty string 
stochastic language probability distribution denote prd probability string distribution distribution verify prd 
distribution modeled syntactic machine probability probability distribution defined denoted pra 
distribution modeled machine denoted da simplified non ambiguous context 
language distribution prd prd usual notation pr pr pr pr random variables ieee transaction pami sample multi set strings usually built sampling string may appear 
write indicate instances string represented sample 
size sample total number strings sample total sum lengths strings noted measures sizes corresponds actual number bits needed encode sample 
empirical finite support distribution associated denoted ds prds frequency number repetitions prds probabilistic automata section formal definitions probabilistic automata 
directly inspired number works machine learning pattern recognition including 
definition tuple qa ia fa pa qa finite set states alphabet qa qa set transitions ia qa initial state probabilities pa transition probabilities fa qa final state probabilities 
noted probabilities may null functions ia fa pa considered total 
similarly sake notation simplification pa assumed extended pa ia pa fa functions ia qa qa fa qa pa 
follows subscript dropped ambiguity 
generic state denoted specific states denoted ieee transaction pami sequence states length denoted sj si seen section automata definition corresponds models generative nature 
contrast standard definition automata conventional non probabilistic formal language theory strings generated grammars automata accepting devices 
difficult prove definition adopted article equivalent definition stochastic regular grammar 
probabilistic point view process randomly accepting string essentially different process generating random string 
probabilistic acceptors defined seldom considered syntactic pattern recognition probabilistic formal language theory 
typically pfa represented directed labeled graphs 
shows pfa states initial state state anda symbol alphabet 
real numbers states arrows final state transition probabilities respectively 
ia ia qi fig 

graphical representation pfa 
particular case pfa arises underlying graph acyclic 
type models known acyclic probabilistic finite state automata 
hand general model defined subsection 
probabilistic finite state automata pfa definition pfa tuple defined pfa extended ieee transaction pami verify similar normalization pfa sum extended include 
pfa appear natural objects combining distributions 
powerful pfa sense generate distributions see sec tion iv 
pfa introduce specific problems particular sequences transitions labeled considered 
section iii problems analyzed 
considering pfa concepts needed definition pfa transition transition labeled loop transition form cycle sequence transitions si si si si sik si sij sij 
deterministic probabilistic finite state automata dpfa determinism shall show restricts class distributions generated introduce deterministic probabilistic finite state automata reasons parsing easier path followed 
intractable problems finding probable string comparing distribu tions tractable 
number positive learning results dpfa hold pfa 
definition dpfa initial state 
dpfa transition completely defined dpfa simply denoted ieee transaction pami particular case dpfa probabilistic prefix tree automaton underlying graph tree rooted initial state 
size pfa pfa implemented concerned issues 
hand probabilities encoded range functions second point order compute complexity algorithm able give size pfa dpfa pfa 
complexity polynomially linked number bits needed encode pfa reasonable way 
follows case dpfa correct measure size sum number states size alphabet number bits needed encode non null probabilities automaton 
case pfa pfa non determinism number transitions automaton appear 
distributions modeled pfa pfa stochastic machines may generate probability space space set finite strings pfa pfa process generating string proceeds follows initialization choose respect distribution state initial state 
define current state 
generation current state 
decide probability produce move probability output set current state cases process may may generate strings unbounded length see section ii 
pfa generates finite length strings relevant question computing probability pfa generates string deal problem sk sk path sequence transitions sk sk note general 
simplify notation symbols sequences transitions omitted needed 
ieee transaction pami probability generating path pra sj sj sk 
definition valid path pfa path probability greater zero 
set valid paths denoted general string generated multiple valid paths 
denote set valid paths probability generating pra pra 
pra defines distribution model interest 
conditions guarantee discussed section ii 
probabilistic finite state automaton ambiguous string exists 
pfa valid path string 
probability pra string valid paths 
pfa ambiguous 
probability pra definition dpfa directly yields proposition dpfa ambiguous 
conclude section defining classes string distributions base corresponding generating automata 
unambiguous context extended section iii mean set sub paths generate substring sub paths allowed start states null initial final probabilities respectively 
ieee transaction pami definition distribution regular generated pfa 
alternative definition regular distribution probabilistic distribution regular language 
assume definition problem exist regular distributions generated pfa 
result easily derived 
definition distribution regular deterministic generated dpfa 
definition pfa equivalent generate distribution 
definition pfa dpfa hierarchy follows proposition regular deterministic distribution regular distribution reverse proposition true see proposition section iv 
interesting note generate distributions finite sets strings 
finite sample easily constructed generates empirical distribution ds 
consistency pfa question consistency probabilities provided automaton equation sum 
early papers field question supposed simple contrary complex concerned stochastic context free grammars setting consistency checked analyzing behavior underlying probability matrix 
conditions needed pfa consistent established follows definition state pfa useful appears valid path proposition consistent states useful 
note condition proposition sufficient necessary non useful state harmless inaccessible string reach probability greater zero 
syntactic models corresponding string distributions defined discuss section compute probability string distribution modeled probabilistic automaton 
ieee transaction pami iii 
parsing issues understand parsing computation equation page 
case dpfa algorithms simpler non deterministic pfa 
case time computation cost equation equation section 
computational cost depend number states step possible state computed cost 
general discussed probability string generated pfa equation computed efficiently dynamic programming 
problem related parsing computation probability substring pfa 
parsing pfa probabilities assigned paths section ii compute efficiently pra 
idea similar proposed hmms defining probability generating prefix xi reaching state si xi sj xj sj si case extended sub paths 
equation calculated algorithm algorithm forward algorithm xi 
string proposition straightforward proposition assumed notation ai pra 
ieee transaction pami way computing pra introducing probability generating suffix xi state si calculated si xi algorithm backward algorithm sj xj sj xi 
corresponding proposition proposition pra 
computation performed time complexity length number transitions searching optimal path string pfa equation probability generating defined sum probabilities valid paths deal interesting search valid path generates highest probability argmax pra 
probability optimal path denoted pra 
relation pra pra equation studied 
models practice probability equation mainly distributed paths close optimal 
case probability optimal path adequate approximation probability equation 
optimal path practical interest pattern recognition applications useful information attached states cases problem search information optimal path 
path useful efficient estimation parameters model training sample see section iii part ii 
ieee transaction pami computation pra efficiently performed defining function probability generating prefix xi best path reaching state max si xi algorithmic solution algorithm 
algorithm viterbi algorithm sj xj sj si max xi corresponding proposition proposition pra max computation presents time complexity computation implementation ones may lead numerical precision problems easily circumvented implementation logarithms 
parsing pfa pfa string want compute probability pra generates introduce similar way equation probability generating prefix xi reaching state xi sj sj si denotes set sub paths full paths 
hand xl xi 
case computation performed new function represents probability generating transitions prefix xi ieee transaction pami transitions reach transitions transitions 
function defined xi 
successive application equation equation element th power matrix matrix defined tq transitions 
probability reach equations account existence possible sequence transitions 
applying equations equation xi identity matrix inverted cases xi probability generating pfa proposition pra 
analogous results obtained backward viterbi algorithms 
algorithms propositions subsections derived results theory discrete stochastic process 
ieee transaction pami probable string problem previous problems string wishes compute probability generating path 
related interesting problems probable string probable constrained string pfa 
problem consists searching string highest probability da argmax pra 
second problem search string upper bounded length highest probability da argmax pra 
defined theorem holds 
proposition computation probable string computation probable constrained string pfa np hard problems 
formal proof proposition 
noted problem np complete membership np open question 
similar question proved undecidable pfa acceptors different pfa covered 
problem searching string associated probable derivation pfa pfa compute polynomial 
argmax pra 
iv 
properties turn study properties models 
normal forms 
equivalent 
expressive 
questions may standard formal language theory lead unexpected results probabilistic case 
ieee transaction pami minimal form dpfa central question arises considering finite devices able decide equivalence devices 
important learning known class hard learn equivalence problem tractable 
terms probabilistic automata question wishes answer pfa resp 
dpfa equivalent 
case probabilistic objects natural question may pfa respectively dpfa equivalent distance distributions 
second question requires concept distance discussed section part question answered 
nerode theorem dpfa dpfa equiv relation trivially finite index pr xu pr pr yu pr pr probability unique path states initial state pr sj zj sj 
construction minimal dpfa 
construction definition equivalence relation strings hand states 
extending nerode relation states automaton goes follows xk sk path xk sk path relation finite index minimal canonical dpfa constructed merging equivalent states unique state isomorphism 
done poly nomial time 
efficient algorithm 
cases non deterministic pfa put canonical form instance acyclic studied 
ieee transaction pami enables test equivalence dpfa minimize compare 
corresponding minimal dpfa isomorphic simple relabeling states minimum prefixes test initial dpfa equivalent 
non deterministic case proposes algorithm directly tests pfa equivalent result concerning minimal pfa known 
equivalence pfa dpfa expects find standard automata results dealing regular stochastic lan guages 
instance determinism imply loss expressive power 
prove true 
result known proved instance construction counter example informs mean deterministic regular distributions may regular deterministic 
define mean deterministic regular distributions argue distri bution deterministic 
definition mean distributions distributions denote distribution prd prd prd 
proposition regular deterministic distributions may regular deterministic 
proof proposition appendix proposition exist distributions generated pfa dpfa 
proof simple consequence proposition take pfa counter example see appendix 
fig 

counter example distributions generated pfa dpfa 
ieee transaction pami equivalence pfa pfa pfa equivalent pfa transitions proposition pfa representing distribution da exists pfa just initial state da size size states number states constructed polynomial time 
illustrate proposition 
pfa transformed second contain transitions 
fig 

pfa equivalent pfa combining distributions automata product simple ways combining non deterministic pfa 
special interest dpfa represent singular means modifying deterministic regular distributions combining 
give results section relating product automata emission probability second computation weight language inside distribution 
proposition know mean regular deterministic distributions may regular deterministic 
combining dpfa done different way 
compute product automaton follows dpfa 
consider automaton ieee transaction pami automaton affects string score pra pra 
product called emission probability 
score corresponds probability generating simultaneously 
sum scores defines emission denoted 
quantity computing distance distributions interest measures interactions distributions 
proved computable 
intractability results complicated architectures proved 
formally pra pra 
introduce variable xi state product automata intended meaning xi pr 
qi computing done solving system xi xj qj qi qj qj qi qj qj qi xj qj qi 
solving system equations enables solve equation xi qi 
qi sort techniques allows consider product automaton obtained deterministic finite state automaton dpfa consider automaton 
define formally recommend reader refers usual textbooks needed 
ieee transaction pami note construction necessarily yield consistent dpfa state sum probabilities 
construction interest yields result proposition pra la pra 
proof follows construction automaton enables give direct method computing weight regular language regular distribution complexity linear product sizes automata 
noted problem solved special cases language la efficient algorithms 
vi 
comparing distributions similarity measures defining similarity measures distributions natural way comparing 
question exact equivalence discussed section iv interest practical cases wish know distributions close 
tasks involving learning pfa dpfa wants measure quality result learning process 
learning takes place training sample measuring far learned automaton test sample done comparing distributions sample encoded 
families distance measures 
true distances measure cross entropy 
study types 
mathematical distances definitions seen definitions distances distributions doing implicitly define distances automata automata samples samples 
general family distances referred dn distances distances norm ln dn prd prd ieee transaction pami get natural distance known distance distance norm 
prd prd special case obtain prd prd distance name distance norm dmax max prd prd concerned small probabilities may arise infinite number strings non null probability may useful logarithms probabilities 
way strings small probabilities may influence distance relative probabilities different suppose pr pr effect particular string logarithmic distance difference probabilities logarithmic distance defined dlog max log prd log prd noticed logarithmic distance infinite probability string null distribution strictly positive 
entropy measures similar log distance known kullback leibler divergence dkl prd log prd prd 
set standard way log logarithms 
assume log represent base noticed case string null probability kullback leibler divergence infinite 
ieee transaction pami rewriting kullback leibler divergence dkl prd log prd prd log prd note term entropy depend second term cross entropy information theory interpretation term measures optimal number bits needed encode second measures cost number bits encoding pay estimating fix ideas divergence dkl mean average optimal number bits needed code message distributed optimal code obtained consider random variables prd prd kullback leibler divergence expressed dkl ed log 
writing see kullback leibler divergence logarithmic distance properties 
properties dn dmax dlog distances comply usual properties 
max log dx dx dx dx dx dx dlog assume null subset 
obviously dmax 
dkl mathematical distance 
verifies properties dkl dkl dkl ln ieee transaction pami computing distances consider problem compute distance dx 
main positive results include proposition dpfa computation done polynomial time 
proof proposition reported appendix proposition dpfa computation dkl done polynomial time 
estimating distances places interesting compare theoretical distribution empirical compare different distributions respect empirical 
purpose lemma lemma lemma distribution sample size pr dmax log case wants learn estimate distributions result commonly compare different learning algorithms sample target distribution built distance learned distribution sample computed 
applications language modeling statistical clustering distance kullback leibler divergence commonly compare estimators 
target distribution model 
previously noted distance decomposed entropy cross entropy da respect da da prd log pra generally unknown replaced adequate empirical estimate ds sample denote set contains unique elements sample removing repetitions 
corresponding empirical cross entropy written da prds log pra log pra ieee transaction pami number occurrences set notation da log pra 
measure language model community perplexity model computed equation written pp da 
pp pa 
practice entropy perplexity string previous equations entropy perplexity symbol preferred 
obtained approximately replacing equation equation 
properties perplexity summarized follows equation says cross entropy measures average number bits pay model coding sample equation perplexity measures corresponding average number choices entailed coding 
equation perplexity seen inverse geometric mean probabilities sample strings model 
hand practical properties carefully taken account perplexity entropy diverge soon probabilities zero 
practice implies perplexity smoothed provides non null probability string obviously perplexity entropy sense smoothed version really probabilistic model pra 
perplexity compare models sample ieee transaction pami vii 
provided part number results centered probabilistic automata distributions 
remains study relationships models important models literature 
important task approximating learning identifying models central problems structural pattern recognition need explored 
done part ii 
acknowledgments authors wish anonymous reviewers careful reading depth criticisms suggestions 
ieee transaction pami proof proposition appendix proposition regular deterministic distributions may regular deterministic 
proof consider distribution defined dpfa distribution defined dpfa implement 
suppose automaton exists call determinism qi qi qn qk denote length cycle 
automaton see consists string states eventually followed cycle states infinity strings non null probability 
fig 

general shape dpfa letter alphabet pra exists consistency 
pr ph fh ieee transaction pami ph pa qi qi fh qh pr ah ph fh qn qk qi qi pr ph fh follows pra pra pra pra simplifying right hand side equation odd left hand side clear contradiction 
solve reach contradiction 
proof proposition proposition dpfa computation done polynomial time 
proof matches definition page 
ieee transaction pami prd prd prd prd prd prd prd prd prd prd prd prd prd prd dpfa solved polynomial time 
paz probabilistic automata 
academic press new york ny 
rabiner tutorial hidden markov models selected applications speech proceedings ieee vol :10.1.1.131.2084
pp 

jelinek statistical methods speech recognition 
cambridge massachusetts mit press 
carrasco oncina learning stochastic regular grammars means state merging method ser 
lecture notes computer science carrasco oncina eds 
berlin heidelberg springer verlag pp 

saul pereira aggregate mixed order markov models statistical language processing proceedings second conference empirical methods natural language processing cardie weischedel eds 
somerset new jersey association computational linguistics pp 

ney martin wessel corpus methods speech language processing 
young kluwer academic publishers ch 
statistical language modeling leaving pp 

ron singer tishby learning probabilistic automata variable memory length proceedings seventh annual acm conference computational learning theory 
new brunswick new jersey acm press pp 

mohri finite state transducers language speech processing computational linguistics vol 
pp 

fu syntactic pattern recognition applications 
prentice hall 
structural methods pattern recognition 
springer verlag 
lucas vidal amari comparison syntactic statistical techniques line ocr ser 
lecture notes computer science carrasco oncina eds 
berlin heidelberg springer verlag pp 

ron singer tishby learnability usage acyclic probabilistic finite automata proceedings colt pp 

ney stochastic grammars pattern recognition proceedings nato advanced study institute mori eds 
springerverlag pp 

ieee transaction pami abe predicting protein secondary structure stochastic tree grammars machine learning vol 
pp 

sakakibara brown mian underwood haussler stochastic context free grammars trna modeling nuclear acids res vol 
pp 

pedersen nielsen metrics similarity measures hidden markov models proceedings ismb 
pedersen complexity comparing hidden markov models proceedings isaac 
cruz vidal learning regular grammars model musical style comparing different coding schemes ser 
lecture notes computer science honavar eds 
berlin heidelberg springer verlag pp 

thomason regular stochastic syntax directed translations computer science department 
university knoxville tech 
rep cs 
mohri pereira riley design principles weighted finite state transducer library theoretical computer science vol 
pp 

alshawi bangalore douglas learning dependency translation models collections finite state head transducers computational linguistics vol 

head transducer model speech translation automatic acquisition bilingual data machine translation 
castellanos jim nez pastor prat vidal speech translation system machine translation journal vol 
pp 

bangalore riccardi stochastic finite state models spoken language machine translation proceedings workshop machine translation systems naacl seattle usa may pp 

finite state approach machine translation proceedings north american acl pittsburgh usa may 
ney och vidal garc mart nez pastor pic tillmann approaches statistical finite state speech speech translation computer speech language 
br lin gascuel hidden markov models patterns learn boolean vector sequences application built self test integrated circuits ieee transactions pattern analysis machine intelligence vol 
pp 

bengio 
experiments application iohmms model financial returns series ieee transaction neural networks vol 
pp 

fu syntactic methods pattern recognition 
new york academic press 
general definition stochastic automata computing vol 
pp 

fu booth grammatical inference survey 
part ii ieee transactions system man cybernetics vol 
pp 

probabilistic languages review open questions computing surveys vol 

ieee transaction pami relations stochastic finite state networks automatic speech ieee transactions pattern analysis machine intelligence vol 
pp 

angluin identifying languages stochastic examples yale university tech 
rep yaleu dcs rr march 
kearns valiant cryptographic limitations learning boolean formulae finite automata st acm symposium theory computing pp 

kearns mansour ron rubinfeld schapire sellie learnability discrete distributions proc 
th annual acm symposium theory computing pp 

kearns vazirani computational learning theory 
mit press 
abe warmuth computational complexity approximating distributions probabilistic automata proceedings third workshop computational learning theory 
morgan kaufmann pp 

dupont denis esposito links probabilistic automata hidden markov models probability distributions learning models induction algorithms pattern recognition appear 
vidal de la carrasco probabilistic finite state automata part ii ieee transactions pattern analysis machine intelligence vol 
special issue syntactic structural pattern recognition 
rabin probabilistic automata information control vol 
pp 

forney viterbi algorithm ieee procedings vol 
pp 

de la computational complexity problems probabilistic grammars transducers ser 
lecture notes computer science de oliveira ed vol 

berlin heidelberg springer verlag pp 

carrasco accurate computation relative entropy stochastic regular grammars rairo theoretical informatics applications vol 
pp 


polynomial time algorithm equivalence probabilistic automata siam comput vol 
pp 

fred computation substring probabilities stochastic grammars grammatical inference algorithms applications ser 
lecture notes computer science de oliveira ed 
berlin heidelberg springer verlag vol 
pp 

young lai tompa stochastic grammatical inference text database structure machine learning vol 
pp 

ron rubinfeld learning fallible deterministic finite automata machine learning vol 
pp 

cook rosenfeld experiments grammatical inference nato asi computer orientation learning process pp 
bonas france 
knill young corpus statistical methods speech language processing 
eds 
young 
kluwer academic publishers ch 
hidden markov models speech language processing pp 

merhav hidden markov modeling dominant state sequence application speech recognition computer speech language vol 
pp 

ieee transaction pami maximum likelihood hidden markov modeling dominant state sequence states ieee transaction signal processing vol 
pp 

discrete stochastic processes 
kluwer academic publisher 
blondel undecidable problems probabilistic automata fixed dimension theory computing systems vol 
pp 

harrison formal language theory 
reading ma addison wesley publishing 
de la characteristic sets polynomial grammatical inference machine learning vol 
pp 

carrasco oncina learning deterministic regular grammars stochastic samples polynomial time rairo theoretical informatics applications vol 
pp 

de la transitions necessary probabilistic finite automata university saint etienne tech 
rep 
cover thomas elements information theory 
wiley interscience publication 
goodman bit progress language modeling microsoft research tech 
rep 
kneser ney improved clustering techniques class language modelling european conference speech communication technology berlin pp 

brown della pietra de souza lai mercer class gram models natural language computational linguistics vol 
pp 

carrasco oncina eds grammatical inference applications ser 
lecture notes computer science 
berlin heidelberg springer verlag 
de oliveira ed grammatical inference algorithms applications ser 
lecture notes computer science vol 

berlin heidelberg springer verlag 
