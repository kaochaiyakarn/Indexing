layered naming architecture internet hari balakrishnan hari csail mit edu scott shenker shenker icsi berkeley edu currently internet level name resolution dns converts user level domain names ip addresses 
borrow liberally literature argue levels name resolution user level descriptors service identifiers service identifiers endpoint identifiers endpoint identifiers ip addresses 
additional levels naming resolution allow services data class internet objects directly persistently named seamlessly accommodate mobility multihoming integrate middleboxes nats firewalls internet architecture 
argue flat names natural choice service endpoint identifiers 
architecture requires scalable resolution flat names capability distributed hash tables dhts provide 
categories subject descriptors computer communication networks local wide area networks internet computer communication networks network architecture design computer communication networks distributed systems distributed databases general terms design keywords naming internet architecture name resolution distributed hash tables middleboxes global identifiers mit computer science artificial intelligence lab uc berkeley computer science division intel research berkeley international computer science institute icsi permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm aug sept portland oregon usa 
copyright acm 
lakshminarayanan cs berkeley edu ion stoica cs berkeley edu sylvia ratnasamy sylvia intel research net michael csail mit edu 
despite tremendous success internet architecture widely acknowledged far ideal internet increasing ubiquity importance flaws evident urgent 
case architectural change stronger witnessed burgeoning set architectural critiques counter proposals emerging research community 
ironically growth motivated proposals success sheer size internet installed router infrastructure renders significant changes ip impossible 
decade long struggle deploy ipv give network architect pause 
attempt task modifying routers focus improving malleable facet architecture naming 
restriction focus prevents addressing issues inherently involve routers complete denial service protection fine grained host control routing quality service issues changes ip irrelevant changes naming architecture crucial 
current internet global namespaces dns names ip addresses tied pre existing structures administrative domains network topology respectively 
rigidity paucity namespaces responsible variety architectural 
instance internet widely applications gain access services processes remotely invoked clients web servers data files streams internet mechanism directly persistently naming data services 
named relative hosts reside 
dns name data overloads names rigidly associates specific domains network locations making inconvenient move service instances data replicate 
sense internet current naming treats data services second class network citizens 
addition users system administrators resort architecturally suspect middleboxes nats firewalls transparent caches get similar functionality architecture 
known architectural problems posed today middleboxes include violating ip semantics making internet application specific course naming proposal requires alterations host software discuss new name resolution infrastructure 
alterations significant deployment barrier changing router infrastructure 
return issue section 
see details 
remedy architectural problems revisit issue naming 
describing general design principles nature names 
principles seemingly innocuous routinely violated today internet 
claim adherence principles requires naming framework layers user level descriptors search keywords mail addresses service identifiers sids endpoint identifiers eids ip addresses forwarding directives 
propose architecture essential namespaces 
architecture benefits services data class internet objects named independent network location dns domain freely migrate replicated host administrative boundaries mobility multi homing hosts gracefully accommodated network layer application layer middleboxes intermediaries interposed data path communicating endpoints 
principles naming framework architecture rely heavily existing proposals 
nimrod host identification protocol hip proposal borrow idea decoupling transport networking layers address mobility multi homing 
unmanaged internet protocol uip proposal borrow idea decoupling address problems result private addressing realms created nats 
internet indirection infrastructure borrow idea source directed indirection 
semantic free referencing sfr borrow idea service identifier namespace flat meaning identifiers unstructured overloaded semantics object named flat identifier number chosen uniformly random hip uip borrow idea endpoint identifiers flat 
proposal requires name resolution infrastructure scalably resolve flat names 
distributed hash tables dhts represent possible solution resolution problem see background dhts borrow literature :10.1.1.140.3129:10.1.1.28.5987
pastiche borrowed elements contribution distillation basic principles synthesis coherent architecture 
basic design principles section followed description architecture benefits section 
key aspect proposal flat names discuss issues associated section 
survey related section section conclude brief discussion 

design principles principles don 
marx basic design principles feel essential nature internet names 
naming hierarchy particular realization saltzer taxonomy network elements identified users services sids hosts eids network attachment points ip addresses paths 
don consider aspects architecture require router involvement don address issue naming paths 
names protocols design principle addresses role names protocols 
principle names bind protocols relevant aspects underlying structure binding protocols irrelevant details unnecessarily limits flexibility functionality 
seemingly innocuous principle routinely violated today architecture 
applications request service data care identity service content data object requested particular host servicing request immaterial 
today dns names services data urls abc org dog jpg force applications resolve service data names ip address fetch data named url web browser lower level software module learn ip address represented abc org binding application request particular network location expressed ip address 
resolution violates principle twice binds data services particular hosts worse network locations hosts 
rest brevity term service mean service data rectifying double violation requires new naming layers 
principle implies applications able refer services persistent names aren tied endpoint hosting service 
claim class names called service identifiers sids exist give applications exactly ability 
think humans software get sids output various mapping services take input user level descriptors 
userlevel descriptors mean handles various formats humans exchange search queries mail addresses 
see discussion mapping services 
second transport protocols exchange data endpoints network locations endpoints irrelevant basic semantics transport 
ip layer ip address naturally part protocol semantics best effort packet delivery network layer addresses 
today semantics ip wound transport layers 
example hosts name tcp connections quadruple includes ip addresses 
result tcp connection fails ip address endpoint changes tcp connection endpoint ip addresses time 
principle suggests transport protocols able refer endpoints manner independent ip address network topology 
adopt previous mentioned section idea topologically independent endpoint identifier eid uniquely identifies host 
new naming layers motivated principle require additional layers name resolution sids eids eids ip addresses 
interact solution problem mobile ip treats mobile host home ip address permanent identifier relies ip layer packet interception redirection 
solution migrating tcp connections band 
third allowing connections break session layer re initiate broken connections giving applications abstraction uninterrupted connection 
solutions fundamental issue endpoints named topological identifiers ip addresses 
directly addresses architectural shortcoming 
service web server application initiates communication session destination named service sid 
application resolves sid gets eids identify hosts run service 
session typically involve transport layer tcp connections client service eids 
invoking ip transport layer resolves eid current set ip addresses eid attached 
crucial property layering resolution sid eventual set ip addresses communication session happen prematurely 
concretely applications generally deal sids resolving user level descriptors transport protocols generally deal bind eids ip deals ip addresses 
resulting bindings accurate appropriate face host mobility service migration 
instance eid ip mapping changes transport layer re initiate eid lookup rebind 
service moves copied location new sid lookup provides current sid eid bindings service move session progress application initiate lookup continue session 
namespaces network elements principle concerned names relate protocols 
second design principle discusses names relate referents 
users care identity object location object name persistent remains unchanged object location changes 
principle names persistent impose arbitrary restrictions elements refer 
current global namespaces ip addresses dns names closely tied underlying structure 
achieving scalable routing requires ip addresses reflect network topology 
dns names flexible reflect administrative structure 
noted urn literature dns names data inherently ephemeral 
data naturally conform domain boundaries data replicated moved hosts outside originating domain 
replication movement happens existing data invalid file dog jpg moves def org abc org existing web links abc org useless 
complete discussion problems hostname pathname urls see citations 
difficulty arises services move pre existing pointers services popular ftp server encodes dns name longer correct argue services data 
namespace currently exists persistently name data services 
urn literature proposes new namespace resolution mechanism genre isbn numbers canonical resolver 
partitioning allows resolution scale different resolver types incorporate genre specific knowledge adherence principle depends accurate mapping elements genres element changing genres 
contrast globe project semantic free referencing open network handles take entirely different approach advocate single new flat namespace serve network elements 
flat namespace inherent structure impose restrictions referenced elements ensuring eid ip intent send eid source querier eid resolution service eid ip ip eid ip delegate dest target eid level delegation 
source queries eid ip address delegate 
source delegate eid multiple eids shown 
universal compliance principle 
adopt second approach flat namespace sids eids 
resolution delegation design principles concerned role names 
third addresses names resolved 
typical definition resolving name mapping name underlying location 
case sid location usually eid transport port triple eid location ip address 
think typical definition restrictive adopt general notion resolution 
principle network entity able direct resolutions name location locations names chosen delegates 
logical network connection initiator level human requesting web page endpoint initiating transport connection intends connect destination entity 
case example transport protocol entities connect destination eids 
destination entity may want handle connection directly preferring direct connection chosen delegate shown 
kind delegation alters essential trust relationships trust entity trust delegates interferes established protocol semantics seen describe details delegation section 
recipient controlled delegation principle esoteric crucial architecture 
describe section delegation allows architecture gracefully incorporate intermediaries define cleaner flexible versions middleboxes 
delegation yields resolving sid return meta data pathname web server addition location allowing data case web page named sid 
recipient controlled delegation accommodate kind distributed network element envisioned destination delegate part logical element physically distinct 
protection denial service attacks discussed section 
sequences destinations traditional ip routing routing protocol responsible choosing packet path network 
source routing proposals sources power specify path case loose source routing points path 
believe ability available just routing layer concern endpoint service layers 
specifically abstraction sending destination generalized allow sources indicate packets traverse series endpoints specified sequence eids communications granularity address traverse series services specified sequence sids 
abstractions generalize notion destination sequence destinations 
note various destinations specified ip layer endpoint service layers intermediate points merely forward packets may act non trivial ways 
combining sentiment principle suggests endpoints services able names resolve just single location generally sequence identifiers ip addresses eids 
way senders receivers loosely dictate paths packets sent destined 
idea captured fourth final design principle 
principle destinations specified sources resolution sids eids generalizable sequences destinations 

architecture note belief general principles deeper conviction architectural details follow 
description intended illustrate achieve benefits flow principles view architecture merely existence proof general principles realized definitive embodiment 
fact details arose implementation effort described 
general principles led claim additional sets names sids eids exist names flat architecture support delegation basic primitive destinations specified source receiver fact sequences destinations 
section architecture results claims focusing consequences sids eids section delegation section 
defer discussing consequences flat names section incorporate notion sequences description delegation 
process describing architecture note yields benefits stated section making services data class objects support mobility graceful incorporation intermediaries 
eids sids start describing architecture works basic case 
discussion intermediaries section complicate story 
refer sids eids section application require sids eids 
mechanisms logically distinct need coupled 
user level descriptor uld lookup mail address search string app obtains sids corresponding uld lookup search service sid resolution app session protocol resolves sid eids sid resolution service eid resolution transport protocol resolves eid ip addresses eid resolution service ip address resolution routing naming layers 
principle led claim applications bind sids transport protocols bind eids 
applications layer transport resolves sids eids similarly transport protocols layer ip translates eids ip addresses 
call layers resolution layers simply resolve identifiers 
layers separate libraries software part application transport protocol 
resolution layers result naming architecture depicted 
give details resolution layers focusing fit architecture 
defer mechanics resolution section 
follows assume humans applications control auxiliary mapping service search engine map user level descriptor search query sid 
result discuss user level descriptors assume applications hand sid representing service data 
sid resolution consider sid aware application running host say wishes gain access service data represented sid application hands sid resolution layer contacts resolution infrastructure realization described section handed back eid transport port triples triple represents instance desired service 
approach sid abstracts data item just service sid resolution layer receive triple application directive 
example represented web server triple returned eid web server tcp port 
represented web page just web server pathname web server returned 
functions describe abstracted application independent library 
library control applications want different behavior elect library describe actions performed library 
eids required triple id transport port id host identifier dns name ip address 
noted usage cope host mobility 
triple kind mentioned communicate specified eid specified transport protocol port number transport specific information 
transport protocols bound eids ip addresses eid source eid triple destination eid 
depending application semantics multiple triples simultaneous connections multiple triples backups case current connection failed 
triples failed re invoke sid resolution layer re resolve check new triples 
eid resolution transport protocol prepares packets send passes eid resolution layer 
eid resolution layer resolves destination eid ip addresses 
multiple ip addresses arise multi homed hosts logical endpoint represented collection physical machines ip address 
handing control ip layer eid resolution layer uses returned ip addresses destination ip address source ip address sending host 
destination host unreachable eid layer ip address received resolution step 
previously returned ip addresses works eid resolution layer re resolves eid case corresponding destination ip addresses changed 
identifiers go 
packets logically destined endpoints identified eids 
imagine eids carried packets identify packet logical endpoint 
section say sender put destination eid packet 
see complete description instantiation architecture eid level 
case sids conceptually identical 
sids name services data sid carried band eid 
sid required packet logical piece data communicated sender recipient 
actual location sids data streams vary application sid 
example sid corresponding smtp server carried mail header 
similarly sid corresponding web proxy header 
sid named web page sid header 
term application data unit mean coherent unit data transmitted applications examples mail requests adus 
benefits explained sections naming data services sids overcomes problems urls purpose 
naming endpoints eids provides natural solutions mobility multi homing endpoint identified eid changes ip address eid resolution layer peer endpoint re resolve find new ip address 
explained rebinding enables continuous operation presence mobile hosts provides smooth failover multi homed hosts direct reader details 
envision hip explicit signaling expected address changes eid resolution layer detect unexpected address changes failures 
re resolution conceivably occur packet invoked eid layer peer detects failure 
delegated bindings intermediaries major aspect architecture delegation dictated principle 
section explain mechanics delegation describe delegation provides support intermediaries 
delegation eid layer host eid insert ip address eid different host resolution infrastructure 
result third host establishes transport connection packets go delegated host 
host identified establish state delegated host protocol outside scope discussion packets arrive delegated host forwarded 
intermediary uses destination eid carried packet determine intended ultimate recipient packet 
type intermediary network level delegate endpoint service 
sid layer mechanism similar service running host listing eid resolution infrastructure lists eid endpoint 
list sid eid sid map eid 
establish state know handle adus destined example application level gateway hosts trying contact connections terminated endpoint gateway inspect adus decision forward 
reason sid data stream near adu know service logical destination adu gateway services call endpoints application level intermediaries give examples intermediaries 
accordance principle sid resp eid level receiving entities express fact intermediary involved services resp endpoints list resolution infrastructure sequence sids resp eids 
identifiers represents intermediary receiver wants adu resp packet visit way final destination 
principle applies source architecture allows sources specify sequence eids sids traversed known mechanism stacked identifiers 
think waypoints opposed receiver controlled intermediaries source express wants intermediaries send behalf just destination express resolution eid wants intermediaries receive behalf 
intermediary assumed chosen delegate sender receiver decisions behalf delegator include pushing additional identifiers destination stack 
mechanisms sender receiver controlled indirection exclusive entities specify intermediaries source creates actual sequence intermediaries concatenating desired sequence sequence specified receiver returned resolution step 
receiver sender switch roles original receiver may need resolve original sender eid determine path back sender 
thing occur sid level require introducing notion source sid 
example eid level delegation mechanism described endpoint inserts resolution infrastructure map eid ip address delegate support standard network level intermediaries nats firewalls cleanly coherently 
depending scenario security assumptions intermediary may configured access control doing nat access control acts firewall allows certain ports stringent access control acts vpn box logically interposed private network global internet accepting packets pre specified eids 
expand slightly firewall example hosts belonging institution logically reside network level firewall host list firewall eid resolution infrastructure send firewall eid possibly ip address security information allowing firewall endpoint authenticate firewall know forward packets 
approach detailed 
eid level delegation provide protection denial service dos attacks 
server shield attackers placing forwarding intermediary untrusted clients installing traffic filters forwarding intermediary 
approach identical spirit overlay dos protection schemes proposed sos point merely illustrate basic techniques implemented architecture 
course attacker launch dos attack sending packets directly server ip address architecture prevent leaves current routers 
having incoming packets directed intermediary simplify router level packet filtering 
sid level delegation mechanism allows owners services data items invoke application level proxies 
example say mail user user domain wants receive mail smtp mail server having scanned spam viruses third party site specializing task 
achieve functionality today administrator domain mx record domain resolve third party site 
approach limited mail address map intermediary second different mail addresses domain forced resolve mail server limitation overcome deploying mb resource record works granularity mail addresses 
sids address limitations 
continuing emphasize details give possibility better approaches sids exist 
sids owner address insert auxiliary mapping service service dns record type mapping mail addresses sids mapping user domain functions user level descriptor single sid identifies mail account 
owner address inserted sid resolution infrastructure map sequence destinations identifies third party virus filtering service identifies user smtp server 
observe point services change administrative domains mobile multi homed long mapping si corresponding eids correct owner address need get involved 
send mail user domain mail agent resolve user level descriptor get resolve get send mail endpoint represented requires resolving get eid 
mail arrived third party service third party service resolve endpoint send mail message 
pseudo code gives detail 
course approach message sent sid virus filter sid mail server send message sid lookup user domain sid sequence sid resolve send email send send email eid sid resolve tcp connect note tcp sees eids tcp send eid sends cleaned message forward cleaned email eid sid resolve tcp connect note tcp sees eids tcp send pseudo code showing sid level delegation mail example 
mail agents sid aware 
general advantage sids requires changes application software discussed section 
examples application level intermediaries include web 
owners web servers particular web objects direct resolution appropriate sid cache sequence transcoders result web clients requesting objects directed sequence intermediaries 
senders invoke proxies sids 
sender receiver invoked intermediaries require changes 
functionality provided intermediaries achieved today middleboxes think intermediaries better approach reasons 
intermediaries violate layering principles protocol semantics inspect packets adus explicitly addressed 
second explicitly invoked endpoints network level services application level endpoint forced send traffic intermediaries 
course people may deploy architecturally suspect middleboxes impose endpoints 
point middleboxes longer necessary achieve functionality 
third intermediaries explicitly requested globally addressed need lie ip routing path logical source logical destination 
purpose section illustrate general terms build architecture principles section 
leave fine points unresolved signaling protocols required set state intermediaries software api interpret create stacks identifiers detailed implications layered naming host software 
discussed security 
brief comments 
broadly speaking security proposal exist network application levels levels believe proposal things worse better 
network level decoupling location identity means ip routing send packet location ip longer means packet going host intended identity eid 
hand eids flat hold cryptographic meaning identifiers derived hashing public key 
result communicating parties identifiers authenticate way hosts identified ip address 
hip uip facts hip exactly designed address security issues inherit mechanisms 
discussed think proposal provides set primitives endpoints network level protection 
application level tradeoffs arise 
proposal sacrifices convenience tell looking sid corresponds intended target achieves stronger security properties computer tell looking sid eid accompanying meta data correct 
issues discussed depth section 
turn issue ignored effectively handle flat namespace 

coping flat names argued section flat names uniquely able provide persistence uses 
flat names pose significant problems 
systems designed meet challenges globe project open network handles sfr 
discuss troubling aspects flat names hard resolve aren human readable 
discuss issues turn 
resolution dns achieves scalability hierarchy 
assumption implicit scalable resolution required structure 
result network architecture proposals away requiring new global namespaces 
advent distributed hash tables dhts suggests flat namespaces scalably resolved resilient self organizing extensible distributed infrastructure 
literature dhts large rapidly growing don review technical details 
note challenges possible come dhts flat namespace resolution method 
dhts arose context peer peer systems unmanaged untrusted system unsuitable crucial piece internet infrastructure 
envision managed distributed collection machines providing name resolution service dht flat namespace resolution algorithm 
dns hierarchical delegation naturally ensures name unique controlled relevant authority flat names goals harder impossible achieve 
mechanisms exist global uniqueness see example :10.1.1.110.5867
data integrity ensuring change resolution entity name challenging possible see 
dhts typical resolution time log node system unacceptable name resolutions particularly comparison dns dns returns results local name server 
latency issue addressed levels 
dht style routing algorithms design caching far better log performance see example :10.1.1.1.5939
second dht resolution infrastructure designed local proxies local replication layered resolvers enable hosts local network find local instances entries written network schemes provide fate sharing organization disconnected rest internet hosts gain access entries written locally 
see detailed explanation issues 
advantage dns infrastructure builtin economic trust model domains provide name servers 
central facilities required root servers minimal inexpensive 
contrast resolution infrastructure pay model names stored essentially random nodes 
model raises questions pay users trust infrastructure 
predict eventual economic model infrastructure easily envision resolution service providers form competitive cooperating commercial market current isps 
customers pay lookups storing flat fee reasonable number accesses 
various mutual peering relationships exchange updates tier isps interconnect today 
rsp judged served customers incentives process requests honestly 
living opaque world troubling performance economic issues lack semantics names 
flat namespace highly versatile provides user readable hints 
fact poses little challenge eids replacing equally opaque ip addresses difficulty arises dealing data services human readability urls crucial 
issue addressed length somewhat different ways various proposals mentioned comments 
relates users obtain sid 
users find urls search engines directly typing browser search engines continue perform function services data identified sids 
third parties offer directory services mapping human readable canonical names sids 
advantage canonical names part infrastructure offered multiple competing entities 
second comment users need assurance sid hand points intended target 
url www com provides hints false target opaque bit string gives assurance 
bit strings accompanied meta data includes cryptographic statements authority says sid points newspaper new york times authorities authority part resolution infrastructure part competitive market sid authenticators 
addition embedding cryptographic meaning identifiers deriving identifier hash public key allows users verify output resolution step correct result identifier 

related noted section borrows heavily projects hip sfr seen synthesizing works narrower goal larger 
works describe related ideas superficial overview 
saltzer fine distinctions network elements common practiced distinctions host identifier address see comprehensive discussion topic 
distinction embedded proposals uip borrow eid mechanism 
overlays dht inspired routing algorithms serves mobile networks uip seeks interconnect heterogeneous networks nodes network routers 
approach differs uip look mechanisms accommodate middleboxes uip overlay peers certain classes middleboxes nats transparent 
internet indirection infrastructure uses flat identifiers supports intermediaries service composition 
chief difference describe binding identifier sid eid ip address done 
uses late binding having packet general case sent resolution infrastructure approach uses early binding lookup occurring packets transmitted 
distinction approaches blurred uses extensive caching approach re resolves packet 
creating location independent persistent names objects accompanying infrastructure resolution long goal urn literature 
addition open network handles argues flat unfriendly domain names web sites 
globe project envisions single infrastructure mapping possibly human unfriendly persistent object identifiers current locations 
increasing number proposals range architectural enhancements radical refactorings 
include earlier proposals pip ipv dynamic networks active networks nimrod proposals smart packets network pointers predicate routing role network architecture ephemeral state processing :10.1.1.19.8598
proposals shares goals differ respects full glory require significant modifications network elements just hosts middleboxes 
second proposals intended obsolete middleboxes intended accommodate 
proposals deserve special mention 
authors triad share nearly motivations 
observe data class objects modern internet capable addressed create host identifiers 
technical details triad solution quite different triad resolution step routing step conflated improving latency shim layer ip transport forward reverse tokens record path taken stacks 
main difference proposals identifiers triad hosts data derived domain names triad approach relies semantics hierarchy domain names aggregate routes content names 
hold conviction persistent names ought flat layers names technical problems differ triad vice versa 
shares motivations 
creates separate host identifiers leaves core ipv routing infrastructure untouched 
host identifiers domain names authors acknowledge flat cryptographically strong identifier hip may preferable security reasons 
meta architecture actual network architectures instantiate basic unit communication entity analogous service packets logically delivered entity explicit invocation hosts underneath entities 
details exact mapping concepts scope mapping reveals proposal viewed instantiation consistent aspects contradict spirit avoids notions host identity 
second aid identifies connection entities supposed local scope analogous construct sid global identifier 
proposes dht infrastructure way deploy ipv sites send ipv packets gateway dht node treats ipv destination address flat identifier uses identifier look ipv address counterpart dht gateway sends packet traditional ipv counterpart encapsulation inverted packet delivered destination 
shares motivations give hosts persistent names site changes isps identifiers site change 
mobile ip creates host identifiers ip addresses separating location identity measure 
mobile ip uses form delegation limited host home network intermediary called home agent receive packets logically destined host question intermediary required host home network 

discussion design principles derives layered naming architecture alleviates internet current problems 
services data named persistently flexibly elevating class network elements 
middleboxes long bane network architects application network level intermediaries 
mobility seamless modest means complete protection denial service attacks 
believe proposal details important deeper messages emphasize 
dhts allow time contemplate flat namespaces architecture 
transition namespaces hardly painless payoff profound 
flat namespace established name 
longer old namespaces dns names ip addresses network elements underlying structure 
new applications longer face devil choice accepting existing inappropriate namespace bearing overhead creating new flat namespace new network elements effortlessly incorporated 
second message extra naming layers shield applications underlying routers 
great network architects quickly internet went flexible academic playground commercial infrastructure 
feels progress prematurely permanently frozen time 
day significant changes come infrastructure general purpose overlay render irrelevant 
crucial insulate applications protocols underlying 
layered naming architecture binds ip addresses lowest logical layer minimizing extent routing infrastructure constrains protocols applications 
variety reasons including address exhaustion attacks efficient delivery content seemingly irreversible trend interposition functionality communicating internet endpoints 
currently functionality implemented middleboxes rightly criticized violating architecture reducing internet flexibility 
third message adverse effects need case 
concept delegation functionality explicitly invoked endpoints allows interposition violating spirit principle semantics ip 
believe intermediaries retain desired architectural purity application flexibility achieving aims middleboxes 
course proposal faces serious hurdles 
incorporating new naming layers requires significant changes host software applications protocols 
resolving flat names requires new resolution infrastructure 
underestimate difficulty making changes massive challenges 
changes occur incrementally 
dhts incrementally scaled clients resolution infrastructure small demand grows size dht 
host software incrementally deployed early adopters get significant benefit remain long time backward compatible old architecture 
don mean imply deployment easy won impossible 
unfortunately hope 
acknowledgments anonymous reviewers gupta eddie kohler comments 
done part iris project project iris net supported national science foundation cooperative agreement ani 
supported nsf career award ani nsf itr ani fellowship sloan foundation fellowship 

andersen 
distributed filtering internet services 
th usenix symposium internet technologies systems seattle wa march 
anderson roscoe wetherall 
preventing internet denial service capabilities 
nd acm hotnets workshop cambridge ma nov 
balakrishnan kaashoek karger morris 
looking data systems 
communications acm feb 
van steen tanenbaum 
scalable user friendly resource names 
ieee internet computing 
braden faber handley :10.1.1.19.8598
protocol stack protocol heap role architecture 
st acm hotnets workshop princeton nj oct 
calvert griffioen wen 
lightweight network support scalable services 
acm sigcomm pittsburgh pa aug 
steenstrup 
nimrod routing architecture august 
rfc 
clark braden falk pingali 
reorganizing addressing architecture 
acm sigcomm workshop directions network architecture karlsruhe germany aug 
clark sollins wroclawski faber 
addressing reality architectural response demands evolving internet 
acm sigcomm workshop directions network architecture karlsruhe germany aug 
clark tennenhouse 
architectural considerations new generation protocols 
acm sigcomm philadelphia pa august 
van 
urn namespace definition mechanisms june 
rfc 
deering 
internet protocol version ipv dec 
rfc 
eriksson faloutsos krishnamurthy 
pushing peer peer stack 
nd intl 
workshop peer peer systems berkeley ca march 
ford 
unmanaged internet protocol taming edge network management crisis 
nd acm hotnets workshop cambridge ma nov 
ford 
peer peer communication middleboxes october 
internet ford txt progress 
francis 
near term architecture deploying pip 
ieee network 
francis 
addressing internetwork protocols 
phd thesis university college london uk 
francis gummadi 
nat extended internet architecture 
acm sigcomm san diego ca aug 
lin 
framework ip virtual private networks feb 
rfc 
cheriton 
triad new generation internet architecture 
www dsg stanford edu triad july 
gupta liskov rodrigues 
efficient routing peer peer overlays 
st usenix acm symposium networked systems design implementation nsdi san francisco ca march 
gupta birman demers van renesse 
building efficient stable dht increased memory background overhead 
nd intl 
workshop peer peer systems berkeley ca feb 
international doi foundation www doi org 
kubiatowicz oceanstore architecture global scale persistent storage 
th asplos cambridge ma november 
keromytis misra rubenstein 
sos secure overlay services 
acm sigcomm pittsburgh pa aug 

name thoughts september 
draft irtf report ietf draft progress 
lynn 
endpoint identifier destination option 
internet draft ietf nov 
expired 
mazi res kaminsky kaashoek witchel 
separating key management file system security 
th acm symposium operating systems principles pages kiawah island sc dec 
mislove druschel 
providing administrative control autonomy peer peer overlays 
rd intl 
workshop peer peer systems san diego ca february 
mockapetris 
domain names implementation specification november 
rfc 
moore 
things nats break 
www cs utk edu moore opinions html june 
moskowitz 
host identity protocol architecture september 
draft moskowitz hip arch ietf draft progress 
moskowitz henderson 
host identity protocol october 
draft moskowitz hip ietf draft progress 
johnson perkins 
mobile host protocol supporting route optimization authentication 
ieee journal selected areas communications june 
wall 
integrating security mobility multi homing hip way 
network distributed systems security symposium ndss pages san diego ca february 
donnell 
open network handles implemented dns sep 
internet draft draft imp dns txt 
donnell 
proposal separate internet handles names people cs uchicago edu citizen network identifiers february 
submitted publication 
malley peterson 
dynamic network architecture 
acm transactions computer systems may 
sirer 
beehive lookup performance power law query distributions peer peer overlays 
st usenix acm symposium networked systems design implementation nsdi san francisco ca march 
ratnasamy francis handley karp shenker 
scalable content addressable network 
acm sigcomm pages san diego ca august 
roscoe hand isaacs 
predicate routing enabling controlled networking 
st acm hotnets workshop princeton nj oct 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
th ifip acm international conference distributed systems platforms middleware november 
rowstron druschel 
storage management caching past large scale persistent peer peer storage utility 
th acm symposium operating systems principles banff canada october 
saltzer 
naming binding network destinations 
editor local computer networks pages 
north holland publishing amsterdam 
reprinted rfc aug 
schwartz jackson strayer zhou rockwell partridge 
smart packets applying active networks network management 
acm transactions computer systems feb 

inter network naming addressing routing 
th ieee computer society conference compcon pages washington dc september 
snoeren 
session architecture internet mobility 
phd thesis massachusetts institute technology december 
snoeren balakrishnan 
approach host mobility 
proc 
acm mobicom pages 
snoeren balakrishnan kaashoek 
reconsidering internet mobility 
th acm workshop hot topics operating systems germany may 
sollins 
architectural principles uniform resource name resolution january 
rfc 
sollins masinter 
functional requirements uniform resource names december 
rfc 

traditional ip network address translator traditional nat january 
rfc 
stoica zhuang shenker surana 
internet indirection infrastructure 
acm sigcomm pittsburgh pa aug 
stoica morris liben nowell karger kaashoek dabek balakrishnan 
chord scalable peer peer lookup protocol internet applications 
ieee acm transactions networking feb 
tennenhouse smith wetherall 
survey active network research 
ieee communications magazine 
tschudin gold 
network pointers 
st acm hotnets workshop princeton nj october 
van renesse zhou 
peer peer approach internet infrastructure 
rd intl 
workshop peer peer systems san diego ca mar 
van steen hauck tanenbaum 
locating objects wide area systems 
ieee communications magazine january 
balakrishnan shenker 
web dns 
st usenix acm symposium networked systems design implementation nsdi san francisco ca march 
stribling krohn balakrishnan morris shenker 
middleboxes longer considered harmful 
technical report tr mit csail june 
zhao huang stribling rhea joseph kubiatowicz 
tapestry global scale overlay rapid service deployment 
ieee journal selected areas communications january 
zhou van renesse marsh 
implementing ipv peer peer overlay network 
workshop reliable peer peer distributed systems st ieee symposium reliable distributed systems srds japan oct 
