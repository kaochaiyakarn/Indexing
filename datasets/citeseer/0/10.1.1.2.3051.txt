ieee acm transactions networking volume august rate congestion control convergence properties scalability analysis loguinov member ieee radha senior member ieee study properties congestion control rate applications 
derive necessary conditions generic binary feedback congestion control converge fairness monotonically guarantees asymptotic stability fairness point show aimd tcp friendly binomial control monotonic convergence fairness 
study steady state behavior binomial controls competing flows single bottleneck 
main result shows combined probing new bandwidth flows results significant overshoot available bandwidth rapid super linear function increase packet loss 
show aimd best scalability lowest packet loss increase tcp friendly binomial schemes 
conclude deriving conditions necessary achieve constant packet loss regardless number competing flows examine new scheme constant packet loss called ideally scalable congestion control iscc simulation streaming experiments 
congestion inherent property currently best effort internet 
consequently transport protocols commonly implement congestion control refers endto algorithms executed protocol order properly adapt sending rate network flow available bandwidth network 
protocols window flow control utilize version tcp friendly congestion control includes jacobson modifications tcp tcp congestion control algorithms equation methods :10.1.1.16.8597
algorithms shown environment sender relies self clocking refers positive recover lost packets slow sender congestion 
current real time streaming applications internet typically rely rate flow control 
rate congestion control protocols far ietf far adopted proprietary streaming applications 
exact operation controls windows media player manuscript received august revised january january approved ieee acm transactions networking editor 
loguinov computer science department texas university college station tx usa email cs tamu edu radha electrical computer engineering department michigan state university east lansing mi usa email radha egr msu edu widely available believed consist additive increase additive decrease layer dropping layer adding algorithms 
contrast studies rate controls applications large body data link algorithms exists methods rely routers compute sending rate flow atm explicitly feed back flows 
current internet computation considered costly implemented network layer methods unsuitable applications 
furthermore atm rarely available desktops paths built entirely top atm technology 
emerging streaming protocols native atm congestion control rely rate methods utilize packet loss feedback network 
analyzes performance methods video streaming derives novel results generic binary feedback controls special nonlinear subclass called binomial algorithms 
examine problem determining increase decrease functions binary feedback controls guarantee convergence fairness 
keep problem tractable focus monotonic convergence desirable property congestion control guarantees asymptotic stability fairness point 
results section show aimd tcp friendly binomial control monotonic convergence fairness 
focus steady state properties binomial congestion control derive long term link utilization packet loss rates controls 
study shows long term average packet loss rates increase super linear function number flows prevents rate congestion controls scaling large number flows 
finds aimd best scalability properties tcp friendly binomial algorithms 
finish showing existence binomial controls called ideally scalable congestion control iscc suffer rapid packet loss increase observed existing binomial schemes 
evaluate particular iscc control equation simulation cisco experiments find scale significantly better existing methods 
studying iscc controls drift away note window flow control real time streaming typically results form qos penalty longer startup delays frequent buffer underflow events video inherently rate application 
ieee acm transactions networking volume august tcp friendly schemes 
mention words find practice acceptable 
internet possible udp traffic compete tcp router queues diffserv may separate types traffic router level 
intuition driven fact real time flows substantially different delay requirements tcp may practical mix types traffic queues 
furthermore rate applications fully tcp friendly follow tcp fast retransmit timeout backoff algorithms rely packet conservation principle flow control 
rest organized follows 
section ii discusses related 
section iii studies convergence properties generic binary feedback congestion control 
section iv analyzes steady state average link utilization packet loss binomial schemes 
section derives rate packet loss increase function number flows section vi builds ideally scalable congestion control iscc shows performance control simulation mpeg streaming experiments 
section vii concludes 
ii 
related binary feedback congestion control class congestion control protocols focus class binary feedback methods 
congestion control implements simple reactive control system responds congestion decreasing sending rate responds absence congestion increasing sending rate 
stage decision congestion control binary 
furthermore increase decrease functions congestion control assumed local means local state flow computing value sending rate 
addition existing models memoryless controls amount increase decrease value current sending rate history sending rate flavors aimd history examined 
explicitly assume local memoryless model binary feedback congestion control 
prevent high frequency oscillations congestion control executed discrete timescales time units long delay control loop cases simply equals rtt 
papers study congestion control context window flow control apply control formulas size congestion window cwnd 
notation assuming size congestion window cwnd interval particular flow wi binary feedback congestion control summarized wi wi wi wi wi wd wi pi pi 
pi congestion feedback interval positive values indicate congestion wi wd increase decrease functions window congestion control respectively 
practice feedback pi usually equal packet loss rate observed flow interval focuses rate streaming applications cwnd little meaning write equivalent formulation congestion control value flow sending rate ri congestion window wi 
conversion window notation rate notation straightforward unit wi mt equivalent rate rt bits mtu maximum transmission unit bits rtt mt seconds 
words ri wi rt re write congestion control ri ri ri ri ri rd ri ri rd increase decrease functions rate binary feedback congestion control respectively 
special case congestion control binomial algorithms increase decrease curves power functions current rate wi wd wl ri rd rl constants positive 
binomial algorithms difference notations lies constants front corresponding power functions 
conversion window notation supplied formulas mt rt mt rt 
rest versions binomial algorithms referring constants constants keeping mind conversion 
special case binomial congestion control implemented tcp called aimd additive increase multiplicative decrease 
aimd equals wi equals wd 
absence congestion aimd probes new bandwidth linearly congestion aimd backs exponentially 
note notation aimd refers window version aimd increase decrease constants 
aimd implemented tcp increases rate packet rtt absence congestion decreases rate half congestion 
aimd tcp friendly achieves average throughput competing tcp connection conditions 
necessary condition long term fairness :10.1.1.16.8597
note papers different notation wd formula different form 
furthermore rate aimd dominated timeouts formula assumes form 
ieee acm transactions networking volume august hand binomial congestion control tcp friendly bansal show equal 
non aimd tcp friendly binomial congestion control propose methods called inverse increase additive decrease sqrt square root mention analysis congestion control typically assumes ideal network synchronized immediate feedback 
synchronized feedback means flows sharing congested link receive notifications packet loss time 
immediate feedback means capacity link path exceeded interval feedback pi strictly positive 
ideal conditions chiu jain show aimd schemes converge fair state 
addition bansal show binomial algorithms converge fairness strictly greater zero 
atm rate congestion control atm asynchronous transfer mode networks implement congestion control data link layer 
abr available bitrate service atm allows connections send data prior admission control reservations abr similar best effort class diffserv 
types congestion control originally proposed abr credit rate 
credit approach implements hop hop window congestion control 
hand rate methods rely network provide congestion feedback special rm resource management cells 
simplest form feedback consists congestion indication 
schemes include forward explicit congestion notification backward ecn proportional rate controller derivatives 
receiving feedback network schemes typically linear controls reduce increase sending rate 
advanced controllers category suffer undesirable performance penalty rm cells lost leads increased congestion poor fairness oscillation 
addition congestion notification schemes feedback abr may carry explicit rate er flow 
depending particular mechanism abr er may may require switch maintain local flow state 
volume area proposed schemes range simple enhanced adaptive proportional rate control sophisticated provable convergence stability 
example propose study proportional proportional derivative pd controllers applied switch queue size mascolo switch feeds back size flow queue kulkarni model abr service quasi death birth process incorporate round trip delays model 
propose rate control called explicit rate indication congestion avoidance switch estimates number active flows divides available bandwidth equally competing flows 
dual pd controller achieve convergence stability transient steady states 
research related atm er including stochastic modeling queue sizes video transport atm abr 
continuous feedback utility functions continuous feedback congestion control explicitly takes value feedback control loop 
words methods summarized simple differential equation dr dt sending rate continuous feedback network typically packet loss 
kelly propose study aimd continuous feedback controller converted context dr dt 
shows flows controls converge called proportional fairness maximize combined utility flows utility function logarithmic 
study fairness issues congestion control develop minimum potential delay fairness maximizes combined utility users hyperbolic functions 
study long term throughput behavior proportional minimum potential delay fairness analytically simulation 
prove stability toend continuous feedback controller non negligible propagation delays 
examines similar issue context heterogeneous delays 
kar study distributed convergence proportional fairness controllers networks users different utility functions 
continuous feedback controllers analyzed context active queue management aqm 
continuous feedback congestion control nice property converging single stationary point maintaining constant smooth transmission rate steady state 
stationary point strictly non zero packet loss continuous feedback controllers incompatible tcp flows aggressive comparison binary feedback controller 
interesting combination binary continuous feedback called additive increase loss proportional decrease evaluated lee 
rate congestion control keshav studies rate flow control sampling available bandwidth fair queuing networks 
similar method proposed context layered multicast 
show delayed feedback results oscillatory behavior ieee acm transactions networking volume august fig 

non monotonic converge leads quasi asymptotic stability left monotonic convergence leads asymptotic stability right 
generic rate controllers 
mishra controllers inside routers exchange queue length information neighbors achieve hop hop congestion control 
iii 
convergence properties increase decrease functions ri rd guarantee convergence fairness 
context congestion control convergence fairness usually defined ability number identical flows sharing common bottleneck link reach state rates equal stay equal infinitely long 
practice difficult goal achieve due non uniform delayed feedback ideal conditions chiu jain model schemes guarantee convergence fairness 
interesting properties congestion control guarantees asymptotic stability monotonic convergence fairness 
fairness interval fi fi conditions necessary monotonic convergence fi fi lim fi 
point view control theory monotonic convergence desirable necessary 
monotonically convergent controls guarantee stability stationary point means system started neighborhood stationary point stays 
consider illustration types convergence fig 

left side shows particle oscillates stationary point eventually converges non monotonically distance particle attractor monotonically decreasing function time 
similar scenario monotonic convergence shown right side 
important remember convergence fairness different convergence efficiency congestion control 
binary feedback controls asymptotically converge efficiency oscillate efficiency line 
hand binary continuous feedback controls asymptotically converge fairness 
follows section study monotonic convergence fairness generic binary feedback controls derive conditions necessary asymptotic stability point 
common examine case flows sharing link extension flows performed sending rate flow yi xi pi equi fairness line fairness line efficiency line fig 

flow binary feedback control system 
sending rate flow considering flows pair wise 
common continuous fluid approximation model disregard discrete nature packets 
furthermore max min fairness function fi chiu fairness index 
recall max min fairness flows non zero sending rates xn min xi xj 
consider flows sharing bottleneck link assumptions 
suppose interval flows sending rates xi yi respectively 
help understand behavior flow control system fig 

axes represent sending rates flows 
furthermore line known fairness line represents points fairness equals 
assuming capacity bottleneck link line called efficiency line represents points bottleneck link overflow 
particular point pi xi yi line mx connecting pi origin called equi fairness line points line fairness fi xi yi 
furthermore define efficiency ei point pi combined rate flows point ei xi yi 
decrease function ensure monotonic convergence proper response congestion signals conditions hold decrease step assuming system point pi just decrease step 
efficiency new state strictly old state ei ei 
condition ensures flows back congestion 
second fairness decrease new state fi fi guarantees monotonic convergence fairness 
pointed condition desired necessary 
third properly maintain convergence system arbitrarily cross oscillate fairness line stay side fairness line times 
case fig 
write yi xi yi xi 
system impossible maintain monotonic convergence non negative rates allow scheme cross fairness line 
interested reader show analytically derivations section 
ieee acm transactions networking volume august allow rates equal zero arbitrary state xi yi guarantee xi yi 
condition equivalent xi xi yi yi rd xi rd yi satisfied positive function rd 
second condition equivalent xi yi xi xi yi 
yi expanding generalizing dropping indexes inequality depends xi yi 
writing dividing sides rd rd rd rd rd 
restricting rd differentiable function equivalent rd 
result interesting simplicity 
understand properties solution bring rd left integrate sides rd positive drd rd dx ln rd ln rd 
result shows original condition restricts rd grow slower linear function 
similar derivations third non cross condition results means rd grow slower function slope rd points 
fourth condition rd automatically satisfied combining 
summarize combining rd positive differentiable function values asymptotically substantially large linear function slope strictly 
example aimd function rd satisfies conditions 
note non linear functions lg advantage similar linear functions clear 
increase function analysis increase function ri similar 
time conditions 
efficiency new state increase ei ei guarantees flows probe new bandwidth absence congestion 
second fairness decrease fi fi result monotonicity requirement 
third system cross fairness line yi xi 
crossing fairness line violates monotonic converge fairness see happens practice binomial schemes 
condition satisfied positive function ri ri 
second condition opposite due different sign ri 
third condition similar assumes shape 
find ri grow faster linear function ri decay quicker example aimd increase function ri satisfies conditions monotonic convergence 
look examples section studying binomial congestion control methods 
convergence note conditions guarantee convergence fairness 
words conditions guarantee system converges monotonically fact convergence established 
impose final restriction rd ri decrease increase step strictly improve fairness strict inequality 
strict inequality longer satisfy condition 
consequently remain form strict inequality 
proof convergence restrictions proceeds follows 
note point upper bound sequence fn fn fn monotonically non decreasing bounded converge 
suppose system converge fairness conditions fn 
words system converges stationary fixed point strictly 
restart system point congestion control cycle includes decrease step increase step fairness strictly improve 
steps fairness reach point condition contradicts fact system previously converged fixed stationary point consequently flows converge stationary point 
finish section making observation convergence conditions hold window increase decrease functions wi wd cases xi yi 
ieee acm transactions networking volume august overview iv 
properties binomial algorithms consider binomial algorithms 
functions ri rd positive satisfy condition 
second condition monotonically nondecreasing fairness results restrictions applying strict form kx xl 
third non cross condition derived restricts impose limit assuming sufficiently large 
restriction dictated fact sending rate flow limited priori selection positive constant substantially large feasible power non negative 
show restriction lifted kind advantages schemes bring congestion control protocols 
assuming upper limit known binomial controls possess monotonic convergence fairness satisfied 
combination conditions constrains strictly 
recall binomial algorithms tcp friendly 
consequently major result aimd tcp friendly binomial algorithm monotonic convergence fairness 
result shows linear controls aimd expected robust convergence asymptotically stable tcp friendly binomial control variety network conditions 
non monotonic controls discussed sqrt guarantee stability stability quasi asymptotic 
non monotonic schemes non monotonic binomial schemes bansal study controls forced reduce fairness decrease step increase fairness increase step 
illustrated fig 
left form 
equi fairness line 
deviation right equi fairness line increases fairness deviation left decreases fairness 
system reduces fairness point point decrease step recovers achieves fairness point higher point long resulting cycle steps points increases fairness scheme eventually implicitly assume limited constant xmin 
window congestion control xmin equivalent unit cwnd mtu rtt rate congestion control xmin minimum rate real time material received 
time fig 

non monotonic convergence fairness left 
oscillation sending rate steady state right 
converge fairness 
parameters determine shape curve increase decrease steps taken 
constants determine size step taken corresponding curve 
note system oscillate curve rd ri 
assumption continuous fluid approximation condition protocol take decrease steps curve increase steps resulting advance away fairness line 
formulated differently binomial scheme converges fairness iff diverges iff 
consequently combining convergence rule notice necessary restrictions convergence non monotonic binomial algorithms 
efficiency average efficiency important property congestion control scheme reflects scheme utilizes bottleneck bandwidth steady state 
higher efficiency desirable necessarily expense properties packet loss responsiveness 
analysis section helps study efficiency binomial schemes necessary background packet loss scalability analysis section 
common define average efficiency scheme long term link utilization scheme reached steady state 
steady state flow sending rate oscillate points call upper point lower point shown fig 
right 
single flow network equals capacity bottleneck link flows compete shared link capacity equals flow flows reached fairness time 
cases 
addition pattern fig 
right repetitive sufficient determine average throughput flow single oscillation points longer period time 
note window notation congestion control maximum capacity link rt mt ieee acm transactions networking volume august continuous fluid approximation results flow rate increase phase points fixed duration control interval 
duration points fig 
right total amount bits transmitted interval 
consequently derive flow average sending rate interval average efficiency percent link utilization binomial congestion control scheme 
equation converted window notation replacing rate window equivalent 
note large exact model efficiency inapplicable drops longer derivations term equation negative 
caused drop zero effect rate negative tried avoid 
nonzero rates automatically guaranteed monotonic convergence fairness absence monotonicity explicitly restrict result suggests link utilization binomial algorithms regardless values clearly incorrect aimd achieves utilization 
examine close average efficiency error single term error double term value error single error double value fig 

exact average efficiency relative error term term approximations left 
increase approximation error number flows large right 
equation models reality plotted fig 
left exact average efficiency computed relative error exact value derived single flow case 
shows values efficiency high close corresponding error negligible 
approaches error increases 
plotted results change significantly different values error varies monotonically 
bansal schemes sqrt analysis suffer significant round errors small number flows see discussion larger 
having established leading term insufficient achieve approximation exact formula values close examine term approximation 
focus simplifying expression 
equation contains terms form expanded taylor series qz perform self check plug aimd parameters get familiar exact formula average efficiency aimd scheme 
note value means higher order terms get progressively smaller 
consider keeping leading term taylor expansion qz term examine resulting approximation reflects actual values keeping leading term average efficiency 
recall aimd 
result comparing shown fig 
left 
depending value error term approximation times smaller single term approximation 
interestingly depends value means efficiency depend number flows sharing link 
consider case flows flow 
easy notice controllers multiplicative decrease schemes efficiency change regardless number flows zero 
rest binomial schemes suffer reduction efficiency seen en nl 
larger term smaller 
consequently denominator en ieee acm transactions networking volume august smaller larger illustrated fig 
right 
top curves show exact efficiency changes cases equal curves marked respectively 
shows large efficiency schemes suffers drastic reduction compared similar cases fewer flows fig 
left 
addition approaches upper limit performance schemes worse aimd 
bottom curves fig 
right show amount accumulated error term term approximations 
amount error approximation substantially increased compared stays 
fact expected close large higher order terms longer insignificant 
practice may turn difficult fine tune binomial schemes achieve consistent performance links capacities average efficiency schemes depend number flows sharing link capacity usually known advance 
mention binomial schemes possess limited scalability support large number flows large small seen 
exceeds schemes forced reduce rates zero minimum rate xmin packet loss clearly efficient achieved simpler methods 
consequently find aimd may best solution heterogeneous links current internet average efficiency change link link users join leave particular path 
addition see section serious problem schemes utilizing packet loss rates increase faster pace aimd number flows large 
packet loss amount packet loss steady state important property congestion control scheme 
consider oscillation cycle points fig 
right case single flow 
maximum amount overshoot non ideal discrete conditions value increase function just flow reaches upper boundary point amount maximum overshoot single flow fixed duration control actions discussed 
knowing bits sent flow interval duration write average percentage lost data assuming worst case maximum overshoot particular aimd schemes average packet loss rate maximum overshoot 
closer look equation reveals number flows increases replaced aimd packet loss rate increase 
furthermore amount increase proportional number flows 
confirms known fact aimd scales comes packet loss 
note amount overshoot kr large compared value approximations longer 
exact formulas asymptotically approach correct value 
consider simple explanation aimd scales quadratically 
aimd increase packet loss factor comes places reduction number discrete increase steps points fig 
right interval factor increase distance times smaller 
result number bits sent interval proportional reduced factor amount overshoot unchanged 
consequently total amount lost packets relative number sent packets increased factor example results single aimd flow may experience packet loss link 
flows start sharing link loss theoretically increase factor reaching 
flows sharing link packet loss theory approach 
reasons see kind performance degradation practice 
results continuous fluid model assumes packets infinitely divisible 
practice approximation true amount increase negligible compared difference upper lower limits fig 
right 
number discrete increase steps equal approaches longer reduced factor remain integer 
account values close increase packet loss subquadratic linear function second protocols employing aimd rely positive acks implementing congestion control 
self clocking packet conservation capable significantly improving scalability aspects aimd sender inject packets network network handle time 
window flow control coupled exponential timer backoff significantly increases stability tcp protocols 
hand rate congestion control nice cushion fall back explains rate aimd schemes suffer higher ieee acm transactions networking volume august packet loss increase equivalent window schemes see experimental results 
packet loss scalability congestion control overview rapid packet loss increase aimd discussed previous section bad news rate protocols general internet video streaming particular 
situation appears analysis leads existence controls constant packet loss nicer properties aimd 
suppose average packet loss flows share link capacity pn 
packet loss increase factor sn ratio pn 
parameter sn specifies fast packet loss increases flows share common link directly relates ability scheme support large number flows schemes lower sn scale better 
pn applying term approximation sn nl 
packet loss increase factor sn binomial algorithms proportional small overshoot small compared grows faster rest aimd get familiar scalability formula sqrt scale respectively 
tcp friendly schemes packet loss increase sn means tcp friendly schemes largest scale best 
established non cross condition immediately arrive second major result tcp friendly binomial schemes aimd scales best 
observations applicability practice 
assumed overshoot large possible cases actual overshoot random value distributed zero second recall discussion aimd scalability previous section 
increase distance small compared value increase step aimd starts scaling linear function quadratic function 
accurate increase steps small compared results model skewed kr large compared case exact formula 
aimd aimd number flows fig 

packet loss scalability sn aimd simulation note log scale axis 
simulation verify packet loss scalability findings show examples simulation results rate aimd bottleneck link kb 
aimd set mt rt constant values kb corresponding schemes called aimd aimd show scalability changes large compared upper boundary mt selected rt kb allow scheme maintain pn loses packet loss increase 
discrete event simulation flows type shared common link standard assumption immediate synchronized feedback 
furthermore simulated flows retransmission error control recover lost packets 
fig 
shows parameter sn actual maximum overshoot simulation function types flows 
aimd curve middle packet loss increase ratio reaches factor equivalent scalability just predicted 
hand aimd bottom curve maintains quadratic packet loss increase time switches linear increase 
aimd reaches increase factor equivalent scalability may larger increase step aimd better due larger aimd aggressive searching bandwidth suffers packet loss aimd values example aimd loses sent packets aimd loses 
scalability performance worse aimd schemes seen top curve 
packet loss flows times larger packet loss flow 
analysis data squares fit curve shows scalability approximately slightly predicted 
dips fig 
occur capacity happens multiple aimd similar situation holds amount overshoot significantly ieee acm transactions networking volume august average 
pointed shown fig 
actual increase packet loss non ideal discrete conditions may lower predicted 
theoretical result performance measure comparing scalability different binomial schemes 
feasibility ideal scalability examine ideal scalability binomial schemes derive necessary conditions 
define scheme ideal scalability sn constant definition driven fact matter small packet loss link sufficient capacity accommodate large number concurrent flows pn unacceptably high 
especially true better quadratic scalability binomial congestion control 
consequently ideal situation scheme maintains consistent packet loss rate regardless number flows utilizing scheme pn furthermore necessary desirable scheme maintains packet loss links different capacity show existence ideal scalability examine find congestion controllers allow sn remain constant 
necessary conditions ideal scalability recall second equation needed convergence fairness 
condition means plan satisfy non cross conditions prevent scheme reducing rate zero ideal scalability requires knowledge tight upper limit sending rate see discussion earlier 
consequently assuming limited constant possible find satisfy necessary condition rates come third major result binary feedback congestion control schemes ideal scalability possible sending rates limited constant flows knowledge bottleneck capacity 
possible ways application learn value real time measurements asking network provide explicit feedback value section examine viability applying method sampling capacity bottleneck link possibility estimates ideally scalable congestion control 
method similar spirit er explicit rate service atm abr differs proposed complexity 
atm er controllers inside switch compute differential equation function router queue size parameters feed back available bandwidth flows 
approach router needs feed back bottleneck bandwidth line speed outgoing link practical approach context methods proposed atm 
note flows sharing single link receive estimate fairly close true capacity link 
major drawback employing congestion control relies estimates different flows may form different estimate may lead poor convergence scalability depending amount error 
approach section relaxes condition imposes new flows measure bottleneck capacity high consistency reasonable accuracy 
note thorough evaluation various bandwidth estimation methods ideally scalable congestion control topic going research 
section vi briefly show preliminary results 
fair mention drawback ideal scalability typically slower convergence fairness due aggressive probing bandwidth non monotonic convergence fairness 
believe ideally scalable controllers interesting dimension congestion control 
investigated ideally scalable congestion control established working version algorithm remainder 
note area required recommend binary feedback congestion control aimd practical internet 
ideally scalable congestion control section introduce new method called ideally scalable congestion control iscc show bottleneck capacity iscc adapt values path 
notation iscc refer ideally scalable schemes described section powers note ways covered iscc selecting may possible achieve goal constant sn 
assuming current estimate bottleneck capacity sending rate limited times condition satisfied choosing mdc md constant greater equal easy show decrease step schemes state md 
rate guaranteed stay positive times 
furthermore varying constant md scheme adjust average efficiency larger values md mean higher efficiency 
addition carefully select value negative value power cause high increase steps 
way achieve select fixed value multiply mt rt shown losing functionality convergence allow equal lx case system may touch fairness line cross 
ieee acm transactions networking volume august 
increase steps remain virtually mt unlimited value rt little relationship value needed effectively limit 
addition different flows may different multiplicative factors due differences rtt mtu 
alternative approach apply similar thinking selecting choose increase step rate mi mi constant greater equal 
written mi mi satisfied choice mi 
mi parameter mi vary aggressiveness scheme searching new bandwidth larger values mi result aggressive behavior scheme 
combining packet loss iscc schemes longer depends md section compare performance particular iscc congestion control scheme rate real time streaming application sqrt aimd tfrc tcp friendly rate control 
vi 
simulation experiments choice powers functions start observation larger iscc scheme sending rate smaller capacity large congestion control responsive packet loss 
responsive usually results small rate reductions alleviate congestion single step 
schemes large usually need multiple back back decrease steps move system efficiency line fig 

assumptions model behavior actual resulting packet loss schemes turns higher predicted convergence time substantially increased 
perspective larger values desirable 
value guarantees ideal scalability tcp friendly schemes quite high equals 
practice scheme converges slowly may feasible solution real internet 
non tcp friendly schemes values close force come close remain zero results slower convergence fairness sum approaches zero infinite number iscc schemes arbitrarily selected scheme achieves values close zero mean system small steps fairness line converges slowly 
catalyst mb mb cisco cisco cisco mb mb client server fig 

setup experiment 
catalyst reasonable compromise packet loss convergence show performance 
note particular scheme somewhat aggressive aimd typically yields bandwidth aimd effect noticeable number flows large 
practical application iscc scheme internet requires new qos methods routers diffserv discussed 
analytical result suggests value equal 
simulation sufficient maintain constant packet loss 
fact appeared successful controlling combined packet loss flows resulted slowly decaying function sn flows lower packet loss pn 
observation holds real network topic investigation 
real time bandwidth estimation section briefly examine accuracy real time bandwidth estimation rate streaming applications 
section show performance iscc schemes rely real time estimates computing values 
cisco network depicted fig 
reallife experiments 
server client connected catalyst switches mb ethernets 
switches turn connected cisco routers mb ethernets 
routers connected links passing additional cisco router 
experiment disabled wfq interfaces reflect current setup backbone routers 
server supplied client real time mpeg video included fgs fine granular scalable enhancement layer regular base layer 
time server able adapt streaming rate rate requested client long rate base layer combined rate layers 
minute mpeg video sequence base layer coded kb enhancement layer coded maximum rate rmax kb note concurrent flows needed fully load bottleneck link 
experiments cover case sn defined ratio pn 
experiment client applied simple estimation technique server video packets 
ieee acm transactions networking volume august histogram estimated bandwidth kb histogram estimated bandwidth kb fig 

histogram bandwidth estimates left right aimd flows shared link 
simplify estimation bottleneck bandwidth server sent packets bursts pre defined length 
bandwidth sample derived burst contained packets 
establish baseline performance fig 
left plots histograms ip bandwidth estimates obtained aimd flows topology fig 
flows fixed value mt rt equal kb 
shows flows measured ip bottleneck bandwidth kb close actual rate kb discrepancy easily explained physical layer overhead line 
furthermore flows perfect agreement estimates flow kb fig 
right shows histograms bandwidth estimates obtained simultaneous aimd flows running topology value mt rt time majority estimates lie proximity kb estimates contained kb kb 
lower accuracy bandwidth estimation second case explained lower average sending rate flow kb compared kb case higher packet loss 
scalability results rate streaming application flows slow start transfer results exclude behavior network transient phase focus steady state performance schemes interval starting seconds flow finished slow start flow terminated 
interval seconds long depending number flows included combined transfer approximately packets 
experiment tried select parameters schemes average packet loss competing flows scheme 
fixed value mt rt equal kb constraint re selecting parameters aimd sqrt 
value mtu variable tfrc equation selected bytes flows started second delay 
sqrt tfrc aimd number flows fig 

packet loss increase factor sn cisco experiment 
actual packet size experiment bytes schemes 
note tfrc protocol real time measurements rtt computation rate 
efficiency aggressiveness parameters iscc schemes set goal mind maintain low initial packet loss md mi 
parameters guaranteed flow decrease rate probe new bandwidth current sending rate 
aggressively results experiment summarized fig 
shows packet loss increase factor sn different schemes values 
results experiment show non scalable schemes maintained steady packet loss increase 
example reached sqrt aimd tfrc 
recall simulation suggested adequate schemes 
practice value turned insufficient balance large positive value scalability power shown fig 

contrary simulation results iscc maintained steady packet loss increase values reached reasonably high loss rate 
scalability scheme squares fit power function hand packet loss iscc climbed range flows squares fit suggests increase packet loss slow noticeable 
iscc able achieve constant packet loss practice show substantially better performance scheme 
discrepancy continuous fluid model iscc studied earlier experimental results easily explained delayed lost feedback non uniform packet loss errors measuring value expected high packet loss experiment resulted large number underflow events produced ieee acm transactions networking volume august table summary experimental results scheme scales efficiency sqrt aimd tfrc iscc iscc frame missing decoder buffer time decoding 
recall underflow events base layer severe results effect 
enhancement frame received received partially time decoding underflow events severe base layer played enhancement layer partially received enhancement layer pictures 
worst conditions data show non scalable protocols maintained frozen picture corresponding session 
results indicate high packet loss harmful video applications presence low rtts ms large startup delays seconds case efficient packet loss recovery mechanism retransmission scheme able recover base layer packets deadlines loss rates exceeded approximately 
hand iscc recovered frames deadlines missing enhancement layer frames 
iscc recovered base enhancement layer pictures decoding deadlines representing ideal streaming situation user 
table summarizes observations experiment shows iscc schemes maintained reasonably high average efficiency comparison meaningful selected value flows achieved approximately packet loss 
table shows iscc efficiency fact better aimd 
experimented red random early detection studied effect performance binomial controllers 
separate set experiments topology enabled cisco weighted red interfaces default parameters suggested cisco ios internetwork operating system 
interestingly red major impact packet loss increase curves fig 
average efficiency 
notice slight improvement fairness individual flows 
little effect cisco congestion control link utilization noticed 
section traditional schemes including aimd sqrt tfrc poorly suited protocols utilize self clocking 
furthermore observed ideally scalable schemes promise provide constant packet loss scalability simulation practice 
study required area understand tradeoffs different values establish slower convergence fairness simulation strong implications large networks real internet 
vii 
studied binary feedback class congestion control derived simple conditions increase decrease functions guarantee monotonic convergence fairness asymptotic stability fairness point 
interestingly derivations show aimd binomial controller monotonic convergence fairness 
showed binomial controls decrease function suffered reduced link utilization number flows increased 
second half studied origin significant packet loss increase rate binomial schemes number flows large 
phenomenon caused reduction fair share bandwidth allocated flow factor unchanged greater overshoot fair bandwidth increase phase 
implication result isps scale bandwidth proportionally number users flows networks support 
overcome rapid packet loss increase developed studied new class ideally scalable controllers iscc keep amount overshoot proportional amount data sent flow oscillation cycle 
iscc offers better packet loss characteristics variety simulation real life scenarios requirement flows measure bottleneck bandwidth slower convergence large leave room research 
non iscc binomial schemes linear controls aimd offer robust behavior wide range paths lowest packet loss fastest convergence fairness variety conditions 
non aimd binomial schemes may possess certain level appeal smoother rates rate applications leads rapid packet loss increase may turn serious drawback practical implementations 
acknowledgment authors thankful anonymous reviewers providing excellent suggestions comments 
allman paxson stevens tcp congestion control ietf rfc april 
bansal balakrishnan binomial congestion control algorithms ieee infocom april 
bansal balakrishnan floyd shenker dynamic behavior slowly responsive congestion control algorithms acm sigcomm august 
feedback control congestion packet switching networks case single congested node ieee acm transactions networking vol 
december 
carter crovella measuring bottleneck link speed packet switched networks international journal performance evaluation 
ieee acm transactions networking volume august 
chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems vol 

chong lee kang simple scalable stable explicit rate allocation algorithm max min flow control minimum rate guarantee ieee acm trans 
networking vol 
june 
christiansen jeffay ott smith tuning red web traffic acm sigcomm august 
dovrolis ramanathan moore packet dispersion techniques measure ieee infocom april 
rodriguez weiss analysis rate feedback control strategy long haul data transport performance evaluation vol 

floyd handley padhye equation congestion control unicast applications acm sigcomm september 
floyd handley padhye comparison equation aimd congestion control aciri technical report www aciri org tfrc aimd pdf may 
fulton li lim abr feedback control scheme tracking ieee infocom 
basar srikant abr congestion control atm networks ieee control systems magazine 
jacobson congestion avoidance control acm sigcomm 
tan congestion control internet delays stability ieee acm transactions networking vol 
december 
jain fahmy goyal switch algorithm abr traffic management atm networks ieee acm trans 
networking vol 
feb 
kar sarkar tassiulas simple rate control algorithm maximizing total user utility ieee infocom 
kelly tan rate control communication networks shadow prices proportional fairness stability journal operational research society 
keshav control theoretic approach flow control acm sigcomm 
kim lu bharghavan loss proportional decrease congestion control internet university illinois technical report timely crhc uiuc edu drafts tech ps gz july 
control theoretic approach design closed loop rate flow control high speed atm networks ieee infocom 
kulkarni li performance analysis rate feedback control atm networks ieee acm transactions networking vol 
december 
kung blackwell chapman credit flow control atm networks credit update protocol adaptive credit allocation statistical multiplexing acm sigcomm 
srikant congestion control schemes utility functions random losses ecn marks ieee infocom march 
lakshman mishra ramakrishnan transporting compressed video atm networks explicit rate feedback control ieee infocom 

lee kim bharghavan comparison congestion control algorithms case aimd university illinois technical report timely crhc uiuc edu infocom ps gz 

lee puri kim ramchandran bharghavan integrated source coding congestion control framework video streaming internet ieee infocom march 
biersack plm fast convergence cumulative layered multicast transmission schemes acm sigmetrics 
low wang doyle dynamics tcp red scalable control ieee infocom july 
mascolo cavendish gerla atm rate congestion control smith predictor implementation ieee infocom 
stability distributed congestion control heterogeneous feedback delays ieee transactions automatic control vol 
june 
roberts bandwidth sharing objectives algorithms ieee infocom march 
may bolot diot lyles reasons deploy red ieee ifip iwqos june 
mena heidemann empirical study real audio traffic ieee infocom march 
microsoft windows media player 
www microsoft 
com windows 
mishra kanakia hop hop rate congestion control scheme acm sigcomm 

lee li bharghavan scalable service differentiation purely mechanisms features limitations ifip ieee iwqos june 
murata suzuki ikeda congestion control atm networks acm sigcomm computer communication review ccr vol 
april 
padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation acm sigcomm september 
paxson measurements analysis internet dynamics ph dissertation computer science department university california berkeley 
radha chen parthasarathy cohen scalable internet video mpeg signal processing image communication 
rejaie handley estrin rap rate congestion control mechanism real time streams internet ieee infocom march 
real networks 
real com 
rhee yi tear tcp emulation receivers flow control multimedia streaming ncsu technical report april 
ritter effect bottleneck service rate variations performance abr flow control ieee infocom 
srikant deterministic fluid models internet congestion control ieee infocom july 
yang kim lam transient behaviors congestion control protocols ieee infocom april 
yang lam general aimd congestion control university texas austin technical report may 
zhao li linear dynamic model design stable explicit rate abr control schemes ieee infocom 
loguinov received degree honors computer science moscow state university ph degree computer science city university new york 
september working assistant professor computer science texas university 
research interests include internet video streaming congestion control image video coding internet traffic measurement modeling scalable overlay peer peer networks emerging qos architectures 
radha sm received degree honors michigan state university msu degree purdue university ph ph degrees columbia university electrical engineering 
joined msu associate professor department electrical computer engineering 
dr radha worked philips research usa initiated internet video project led team researchers working scalable video coding streaming algorithms 
dr radha philips research fellow 
prior working philips radha distinguished member technical staff bell labs worked areas digital communications signal image processing broadband multimedia 
research interests include image video coding wireless technology multimedia communications networking 
patents areas 
dr radha served chair editor atm lan video coding experts group itu 
