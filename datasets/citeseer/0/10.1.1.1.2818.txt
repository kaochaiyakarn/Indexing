jena implementing semantic web recommendations jeremy carroll ian dickinson chris dave reynolds andy seaborne kevin wilkinson digital media systems laboratory hp laboratories bristol hpl december th mail firstname lastname hp com rdf java api metadata ontology daml owl triple stores rdql inference new semantic web recommendations rdf rdfs owl heart rdf graph 
jena rdf toolkit similarly centered rdf graph 
rdfs owl reasoning seen graph graph transforms producing graphs virtual triples 
rich apis provided 
model api includes support aspects rdf recommendations containers reification 
ontology api includes support rdfs owl including advanced owl full support 
jena includes de facto rdf xml parser provides rdf xml output full range rich rdf xml grammar 
supported 
rdf graphs stored memory databases 
jena query language rdql web api offered round standardization 
internal accession date approved external publication copyright hewlett packard jena implementing semantic web recommendations jeremy carroll dave reynolds hp labs bristol uk new semantic web recommendations rdf rdfs owl heart rdf graph 
jena rdf toolkit similarly centered rdf graph 
rdfs owl reasoning seen graph graph transforms producing graphs virtual triples 
rich apis provided 
model api includes support aspects rdf recommendations containers reification 
ontology api includes support rdfs owl including advanced owl full support 
jena includes de facto rdf xml parser provides rdf xml output full range rich rdf xml grammar 
supported 
rdf graphs stored memory databases 
jena query language rdql web api offered round standardization 
categories subject descriptors find list acm categories descriptors see www acm org class general terms algorithms standardization languages 
keywords keywords designated keywords 

new recommendations resource description framework rdf web ontology language owl just published provide simple triple representation knowledge formal semantics allowing automated inference 
rdfs owl provide useful vocabulary particularly building schema ontologies 
jena leading semantic web programmers toolkit 
heart semantic web recommendations rdf graph universal data structure 
rdf graph simply set triples 
jena similarly graph core interface components built 
presents jena concentrating key architectural design principles 
key architectural goals jena multiple flexible presentations rdf graphs application programmer 
allows easy access manipulation data graphs enabling application programmer navigate triple structure 
particularly model api presents graph terms concepts rdf recommendations ontology api presents graph concepts owl rdfs 
note referees hope true time need final copy 
ian dickinson andy seaborne firstname lastname hp com chris kevin wilkinson hp labs palo alto ca 
usa simple minimalist view rdf graph system programmer wishing expose data triples 
particularly useful exposing rdfs owl reasoning 
layered top second essentially triple source back presentation api 
triple sources may materialized example database memory triple stores virtual example resulting inference processes applied triple sources 
provides general view mechanism view definitions java 
semantic web query language rdql supported top materialized graphs virtual results rdfs owl reasoning 
third presentation interface rdf provides query access rdf graphs web clients 
access available system application programmer interfaces acts unifying theme architecture 
queries levels passed relational databases sql visible sql optimizer 
starts overview jena architecture details parts system greatest architectural significance 
semantic web standards rdf syntax provides triples universal data structure 
vocabulary rdf rdfs provide core set properties classes triples 
triples serialized rdf xml 
formal meaning triples vocabulary permits entailments drawn 
rdf schema vocabulary permits definition new classes properties graph 
augmented web ontology language owl 
owl provides levels owl lite owl dl owl full 
owl full expressive 
owl lite easiest address complete reasoning services possible owl full 
levels differentiated syntactically 
compatible semantics provided owl full owl dl 
owl full builds top rdf semantic extension 
owl dl syntax mapped rdf exchange language 
round semantic web standardization query languages possibly web apis semantic web 
jena 
jena released downloads 
jena released august downloads 
main contribution jena rich model api manipulating rdf graphs 
api jena provides various tools example rdf xml parser query term model taken original rdf model syntax recommendation meaning data model 
language modules triple rdf xml output 
api user choose store rdf graphs memory persistent stores 
jena provides additional api manipulating daml oil 
jena provides additional functionality general developers support rdfs owl 
new apis accessing ontologies processing vocabularies 
jena offers new extension points system programmers 
allows development new presentation apis new functionality developers 
second allows development new triple sources particularly virtual triples generated dynamically result processing inference access legacy data sources 
inference rdf semantics owl semantics provided 

jena architecture overview heart jena architecture rdf graph set triples nodes 
shown graph layer see 
layer rdf syntax minimal design possible functionality done layers 
permits range implementations layer inmemory persistence triple stores 
layer extension point build apis jena functionality offered layer implement jena model api new ontology functionality owl rdfs upgrading jena daml api 
done model layer essentially historical reasons 
jena architecture supports fast path query goes way layers rdql top right sql database bottom allowing user queries optimized sql query optimizer 
give detail layers 
graph layer triples universal data structure graph layer rdf syntax 
straightforward implement triple stores memory backed persistent storage read views non triple data triples data read computer file system hierarchy web page virtual triples corresponding results inference processes set triples premises 
implementations graph layer provided jena give variety concrete materialized triple stores built inference specifically rdfs subset owl 
model layer views application programmers jena maintains model api jena primary abstraction rdf graph application programmer 
gives richer set methods operating graph model interface nodes graph resource interface subclasses 
daml api updated enhanced jena form ontology api realized daml api owl api 
arp rdql ontology models model layer api layer jena compatibility layer nodes context polymorphism equality graph layer see rdf concepts fast path query reification materialized graphs memory stores sql database model graph statement triple inferencing resource node virtual graphs 

jena architecture graph union layer multiple simultaneous views model ontology layers lie top graph layer intermediate layer layer 
provides extension point providing views graphs views nodes graph 
generalizes needs model ontology apis significantly design decision presentation layers stateless state kept graph 
caching state permitted presentation layers layer designed permit multiple views graphs nodes simultaneously 
java single inheritance model provide polymorphic objects layer 
allows multiple inheritance typing rdfs reflected java 

graph spi jena implementation rdf syntax graph spi system programmer interface triples jena graphs accessed 
overview graph layer defines interface representing rdf graphs 
design goals graph layer include allowing collections triples queried updated efficiently 
particular querying triples held databases able exploit underlying database engine 
easy reimplement new triple collections represented graphs minimal programming effort 
supporting specialist operations model api easily constructed base functionality particular reification operation 
elements graph triples triple comprises nodes subject predicate object fields 
node represents rdf notion uri label blank node literal variable nodes named variables match wildcard query interface 
rdf restriction literal appear object property labelled uri enforced jena model layer graph layer 
implementations graph layer memory triple store relational database rdb triple stores 
core graph interface supports modification add delete triples access test triple list triples matching pattern 
graph implementations free restrict particular triples regard legal restrict mutability reflected java exceptions 
significant part core graph interface find operation 
primitive find node node node delivers iterator triples graph match triple 
match means equal node 
allows graph queried properties particular subject predicates particular object triples graph 
extensibility point inference engines graph combinators generating virtualized triples 
fast path query goals graph layer allow queries expressed exploit underlying efficient query engines return different kinds results variable bindings subgraphs example 
add operations graph graph associated query handler manages complex queries 
standard simple query handler provided implements complex queries terms find primitive graphs offering efficient possibilities 
query consists collection triple patterns matched graphs 
triple pattern triple may contain extended variable nodes mentioned 
subgraph contain request bindings matching triples graph 
subgraph executed find possible bindings variables return minimal matching subgraph 
jena memory graph model simply implements triple pattern matches iterating graph find 
rdb graphs compile query sql submitted database query engine 
query handling operates triples expressed graph generated base assertions inferred consequences 
rdql uses interface non constraint parts query handling 
reification rdf model syntax suggests making statements statements means reification representing original triple triples forming known reification quad 
known anonymous resource 
feature development 
new rdf recommendations clarify reification syntax completely achieve goals continue recommend reification provenance 
keeping practice jena users reification heavily able add metadata triples 
important optimization able treat reification quads efficiently 
api layer notion reflected graph interface 
jena provides api notion encodes statement model reification quad 
graph associated reifier responsible storing reified triples 
separation separate interface implementation keeps graph interface uncluttered allows different graph implementations share code 
may created single api call users explicitly reify statements need pay large cost reification quads 
graph implementation may choose reification visible picking reification style 
default style standard intended conform rdf standard quads reified statements visible find primitive queries 
style convenient suppresses parts query results compatible behaviour jena 
style minimal useful internal graphs reification irrelevant 
details graph layer datatypes 
requirements rdf manipulation typed literals differ java norms 
semantic value multiple rdf representations xsd int xsd short 
initially tempted arrange java equality operation literals take value mapping account 
interferes literals indexed collections 
introduced separate notion arrange searches graphs default notion equivalence preference java equality 
size 
graphs sets triples set naturally size possibly infinite 
notion inferencing graphs implementing size tricky behaviour 
jena graphs size method meaning unclear 
transactions 
jena graphs may support transactions changes graph may committed abandoned 
rdb models offer capability 
bulk update 
needed triples may added removed en masse time efficiency reasons initialising database 

adding apis graph layer easy provide triples 
easy application level see 
jena includes api act presentation layer raw graph model api 
provides programming abstractions rdf graph align abstractions rdf vocabulary 
key abstraction model api resource 
corresponds rdfs resource 
blank node seen part graph 
merely node collection facts node particular rdf graph 
point view recommendations resource provides view node merely interpretation rdf graph 
useful application level view manipulate resource richer set primitives extended functionality reflecting aspect interpretation particular graph 
example known type rdf bag viewing corresponding resource bag allows easier access members having explicit access rdf rdf triples 
way find direct support rdf containers defined rdf vocabulary model layer 
similar api classes methods provide support rdf reification vocabulary implemented reification primitives graph layer see section 
model layer shown alternative presentation layer ontology layer 
ontology layer find explicit support concepts rdf schema owl 
ontology support adds additional views node particular graph functionality model layer previously published example ontology layer described section 
enhanced graph layer jena attempt consolidated presentation api rdf graph 
consolidated api rdf type owl objectproperty realized java object class objectproperty implement interfaces appropriate inherit appropriate superclass 
obviously correct class hierarchy different concepts model api ontology api 
choosing view take particular graph tends closed world assumption resource rdfs class information may cause reconsider 
direct mapping class hierarchy rdf java mistake 
address issue framework different presentation layers provided built instantiations model api ontology model api 
presentation layers personalities presentation layer consists interfaces implementation classes mapping interfaces factory methods invoke implementation classes 
mapping known personality presentation layer 
presentation layers stateless 
state stored graphs 
implementation classes extend 
simple wrapper graph pointer personality 
wrapper node additional field pointing 
context seen 
example model extends resource extends 
subclass provides set operations performed graph 
instance acts view graph 
subclass provides set operations performed node graph 
instance acts interpretation rdfs semantics requires reflected rdfs reasoner see section 
view node specific graph 
appropriate take different views node 
polymorphism rdfs permits resource multiple types may may related 
rdfs subclassof express multiple inheritance just simple hierarchy 
contrast java objects single java class tree classes single inheritance 
jena implements polymorphic resources model java rdfs style multiple typing 
node possible factory methods personality create view instance subclass node implements particular interface 
constraint stateless ensures safe create identical 
permits caching performance reasons 
key method interface returns view node implements interface 
desired result simple cache view created factory methods personality 
method implementing presentation api model ontology layer part extended casting idiom 
class particularly useful implementing owl full separation vocabulary 
user defined presentation apis applications may want specialized views resources 
jena architecture views generated rdf schema owl ontology incorporated framework 
shows instantiations top layer instantiations added 

input output de facto parser rdf xml part jena 
rdf validator site 
jena provided model layer 
basic primitives read write models choice semantic web languages 
languages supported rdf xml triple 
parsing rdf xml rdf xml parser uses xerces parse xml validates rdf input range standards incorporated rdf xml 
specifically input checked conformance rfc uris rfc languages including iso iso checking character model 
parser architecture described cleanly separates rdf processing xml processing permitted parser closely track revised rdf xml working drafts evolved new recommendation 
jena realization architecture improved xerces pull parsing mode permits routine architecture realized single java thread threads xml parser rdf parser jena 
unparsing rdf xml rdf xml output performed basic mode preferred large files pretty writer mode 
groups triples graph subject writes triple simple property element 
striped syntax 
abbreviations provided rdf xml utilized 
pretty writer format intended output may seen people significantly expensive uses productions revised syntax 
striping described recommendation default 
options control output switches rules specified revised syntax 
option takes argument url productions rdf xml abbrev string www org tr rdf syntax grammar url link directly rec tying software behaviour formal specification 
described code closely follows formal grammar recommendation straightforward provide behaviour understood users terms grammar 

inference support treatment schema ontologies formal semantics rdf owl clear entailment core feature semantic web recommendations 
reflected hundreds entailments tests provided 
jena supports giving access range inference capabilities 
core set capabilities available box particularly rdfs inference owl inference supporting subset owl full roughly corresponding union owl lite rdfs whilst architecture permits plug connections engines developed wider community racer fact java theorem prover 
planned plug ins complete owl lite improved owl dl reasoning supported 
design center jena inference api enable applications access rdf data enriched additional assertions entailed set relevant ontologies emphasize abox queries tbox queries 
bias influences choice api architecture inference engines 
inference access api architecture jena inference engines structured graph combinators called reasoners 
instance reasoner combines rdf graphs exposes entailments rdf graph retrievable triples virtual entailments materialized data see 
input graphs contain ontology instance data optional separation 
particular possible partially bind reasoner ontology resulting specialized reasoner access multiple different data graphs reusing ontology inferences 
layering offers great flexibility 
example owl lite reasoner stacked top rdfs reasoner infer type statements required owl lite syntax deducible domain range declarations owl lite properties 
rdql query issued inferred graph just graph allowing query entailments 
instance inferred rdfs graph rdql schema directed queries functionality rql additional query syntax better alignment rdf recommendation 
different apis bound inferred graph allowing results viewed rdf level convenience ontology api 

inference api layering entailments easily accessible graph model apis way 
example finding instances class simple triple query rdf type node representing rdfs class ontology graph named class 
limitations api approach address 
arbitrary class expressions introduced comprehension axioms owl directly supported 
addressed requirement extending find operation take optional parameter additional premises 
parameter graph containing expressions nodes query triples intended expressions known valid comprehension axioms 
second transitive relations convenient able query direct minimal transitively closed version relations 
handle introducing additional rdf properties represent direct version transitive property 
style extension introducing additional rdf properties represent inferable relationships api flexible 
thirdly give convenient access consistency information added validate method returns report containing list warnings errors identified graph 
convenient property technique case validity reports may need refer statements groups statements simply nodes 
built reasoners part default distribution include selection inference engines conform architecture 
transitive reasoner 
reasoner provides transitive closure rdfs subclassof rdfs subpropertyof relationships contained source graphs dealing correctly cases declaring subproperties rdfs subclassof property 
relatively simple functionality corresponds quite closely hard coded inference implemented jena daml oil api enabling applications similar queries jena similar performance needing invoke sophisticated inference engines 
rdfs reasoner 
provides implementation rdfs closure rules 
strikes balance eager lazy processing 
sub class sub property lattices cached embedded 
domain range sub property sub class declaration eagerly translated single query rewrite rule 
result query graph union results applying query plus rewritten versions query underlying graphs 
reasoner 
reasoner supports rule rdf inferences 
rule clauses extended triple patterns procedural primitives defined java 
triple patterns extended sense objects triple functor data structures 
allows rule authors control combinatorics graph pattern matching having rule map subgraph pattern compact data structure rules fire data structure 
forward chaining memoized backward chaining rule engines provided hybridization forward rules able create install new backward rules 
rule engines may application specific rule sets rule sets rdfs owl lite subset owl full 
rule approach corresponds emphasis abox reasoning handle class subsumption checking introducing prototypical instances classes letting instance rules determine type labels prototype 
addition inference engines useful provide set operators union multi union intersection difference delta combining data graphs 
external reasoners generic triple interface inference results possible expose capability wide range reasoning engines api 
enhance flexibility providing available reasoners registered identifying uri reasoner capability description expressed rdf 
way applications somewhat independent particular inference engine 
intend construct adaptors openly available reasoners enable jena 

rdql rdf query rdql rdf data query language pioneered jena 
jena implementation de facto implementation 
full description original 
rdql consists graph pattern expressed list triple patterns 
triple pattern comprised named variables rdf values uris literals 
rdql query additionally set constraints values variables list variables required answer set 
select www org rdf syntax ns type example com triple pattern matches statements graph predicate www org rdf type object example com 
variable bound label subject resource 
returned rdql query treats rdf graph purely data 
implementation graph provides inferencing appear rdf basic rule inference kit 
virtual triples triples appear graph ground facts rdql include triples possible matches triple patterns 
rdql distinction inferred triples ground triples 
phase semantic web activity address rdf query 
hope take positive rdql account 
jena rdql implementation evolve result new 

persistent storage jena database subsystem jena supports persistent storage rdf models conventional database 
implemented graph layer provides usual graph operations add delete find efficiently supports reification 
denormalized schema jena stores triple general purpose triple table property table specific property 
schema trades space time 
uses denormalized schema resource uris simple literal values stored directly triple table 
separate literals table store literal values length exceeds threshold typed language tag 
possible process large class queries join 
denormalized schema uses database space value literal uri stored repeatedly 
increase database space consumption addressed ways 
common prefixes uris namespaces stored separate table prefix uri replaced 
prefix table cacheable memory expanding prefix require database join 
second literals table long literals stored 
third jena supports property tables described 
property tables offer modest reduction space consumption property uri stored 
configuration configuration parameters specified rdf statements memory model passed argument creating new persistent model 
jena includes default models containing default configuration parameters supported databases 
specifying configurations rdf configurations easy search share re manipulated jena existing operations 
property tables property table known attribute tables holds statements specific property 
stored subject value pairs separate table 
triple tables property tables disjoint statement stored 
properties maximum cardinality possible cluster multiple properties single table 
single row table stores property values common subject 
example dublin core property table store dc title dc publisher dc description 
multi valued properties dc creator clustered stored separate tables 
note datatype object value known may possible underlying database column value match property type 
xsd types correspond sql datatype 
property class table special kind property table stores properties associated particular class records instances class 
property class domain 
jena implements reification property class table 
properties rdf subject rdf predicate rdf object class constrained rdf statement 
subject property class table uri reifies statement 
query processing queries executed graphs may multiple statement tables 
statement table handler convert graph view jena tuple view sql 
evaluate triple pattern query processor passes pattern turn table handler evaluation 
goal jena support fast path query processing rdql see section 
jena rdql query converted pipeline triple pattern queries 
evaluated nested loops fashion java results triple pattern bind values variables generating new triple patterns evaluation 
goal fast path query processing database engine move processing database engine 
full discussion fast path query processing scope 
simple cases mention difficulties general case 
simple case assume triple patterns triple table 
mentioned single triple pattern completely evaluated table single sql query 
evaluate multiple patterns database engine sufficient combine sql statements individual patterns add additional join conditions linking variables 
second simple case patterns completely evaluated single property table 
similar case 
may possible eliminate joins patterns properties stored property values subject stored row 
triple patterns query apply multiple tables difficult construct single sql query satisfy patterns 
jena nested loops approach applied case 
currently investigating optimized solutions general case 

ontology support jena heart rdf platform restrict ontology formalisms built top rdf 
specifically means rdfs varieties owl daml oil 
owl builds top rdf specifications possible treat owl separate language right built rdf foundation see example owl api merely uses rdf serialisation syntax rdf centric view treats rdf triples core owl formalism 
views valid jena take view 
ontology support jena addresses owl full features owl dl ability single denote class property participant ontological schema 
ontology layer defines interface extends model interface model api 
having java classes tightly bound language processed ontology api classes objectproperty 
support languages profile lists permitted constructs uri classes properties 
daml profile uri object property daml objectproperty owl profile owl objectproperty rdfs profile null rdfs define object properties 
profile bound ontology model extended version jena model class 
general model allows access statements collection rdf data 
extends adding support kinds objects expected ontology classes class hierarchy properties property hierarchy individuals 
properties defined ontology language map accessor methods 
example method list super classes corresponds values subclassof property 
information stored object 
method called information retrieved underlying rdf statements 
similarly adding subclass asserts additional rdf statement model 
statements ontology java objects see depend asserted statements underlying rdf graph statements inferred reasoner 

statements seen asserted statements held base graph 
presents simple internal interface graph 
reasoner inference engine contents base graph semantic rules language show complete set statements including entailed base assertions 
graph interface model works interface 
allows build models reasoner variety different reasoners changing ontology model 
means base graph memory store database backed persistent store storage structure altogether ldap directory affecting ontology model 
rdf level polymorphism java consider rdf sample rdfs class rdf id rdfs class declares resource relative uri ontology class 
appropriate model declaration java instance 
suppose augment class declaration information rdfs class rdf id rdf type owl restriction rdfs class saying owl restriction subclass rdfs class 
problem java allow dynamically change java class object modeling resource 
resource changed uri 
appropriate java class choose model changed restriction 
conversely remove rdf type restriction model restriction java class longer appropriate 
worse owl full allows counterintuitive construction rdfs class rdf id rdf type owl objectproperty rdfs class class property 
may useful operation illustrates basic point rely consistent unique mapping rdf resource appropriate java abstraction 
imports imports mechanism owl daml oil usually handled shown 
ontology internal structure including imports see imported ontology document held separate graph structure 
imports processed impossible know statement came 
possible switch imports processing 
classes ontology api represent ontology values common super class 
contains shared functionality ontology classes example properties annotations label 
properties standard pattern available methods set get singleton value modify inspect 
provides methods listing getting setting rdf types resource 
rdf type property entailment rules defined semantic models various ontology languages 
values returns usually dependent actual reasoner bound ontology model 
example suppose class class subclass resource asserted rdf type reasoner listing rdf types return reasoner able calculate closure subclass hierarchy rdf types include furthermore complete reasoners infer type owl thing rdf resource 
tasks getting complete list rdf types resource exactly needed 
tasks case 
ontology editor example want distinguish display inferred asserted types 
example rdf type asserted inferred 
way distinction base model union graph containing base model imported graphs see 
getting resource base model listing type properties return asserted values 
aspects expect ontology api contains classes corresponding main concepts owl ability inspect manipulate principal properties classes 
api daml oil subset api useful rdfs 
base model stored database required 
independent module owl syntax checker conforming specification owl test cases 
inspects set triples determines fit owl lite owl dl owl full syntactic species owl 
triple oriented operation described 

views jena seen graph interface acts uniform interface triples actual documents databases virtual defined arbitrary java code particular reasoners 
similar constrained mechanism triple proposed 
views virtual triples defined high level view definition language terms views collections materialized triples 
possible translate high level view definition languages java code care features jena fast path query utilized 
jena architecture shows continuum view languages inference 
rule language jena seen view definition language somewhat different intent triple views 
particular reasoners jena add triples triple view adds new triples hides old triples 

feature jena hope standardized round semantic web activity 
takes rdf graph primary design concept accessible remote clients applications 
rdf provides simple universal access mechanism application machine extract information rdf repository hosted machine 
access mechanism graph query access remote knowledge base query results expressed terms single graph 
query access primitive fits jena paradigm providing access graph 
graph may ground data may graph inference performed yield entailed triples 
visible remote client application 
contract information consumer information publisher graph set triples expressing information 
information derived purely matter information provider part contract provider publisher client application 
query forms access paradigm desirable copy knowledge bases networks may large client application interested small part graph knowledge base frequently changing making locally caching ineffective 
query returns single subgraph 
query modifies request additional parameters contract subgraph returned yield matching results original query entire knowledge base 
minimal complete subgraph smallest graph 
conjunctive query language rdql equivalent calculating result triples substituting query solutions graph pattern merging single graph 
graph returned minimal 
sophisticated cache return precomputed previous computed subgraph larger minimal matching subgraph meets completeness requirement 
query provides sufficiently coarse grained operation efficient application 
direct triple access cause large numbers fine grained network accesses leading excessive overhead 
rdf rdf repositories available internet rdf requires graph url purposes naming routing query traffic repository providing graph 
host repository may rdf graphs available necessary direct queries right network location name 
urls provide mechanism 
protocol query specifically get verb 
order provide compatibility regular web plain get query string provided interpreted fetching rdf graph 
query string provides refinement get extract subgraph target graph 
query string consists identification query language specific string giving query 
full details member submission 
client library client library provides integration rest jena api ways 
primitive operation querying returning minimal complete subgraph provided remote query processor expected compute complete subgraph 
second remote query engine matching standard interface graph layer provided 
access mechanism yields iterator bound variables just local query 
variable bindings locally calculated complete subgraph returned remote operation 

jena provides integrated implementations semantic web recommendations centred rdf graph 
additional features jena query language ones hope finalized phase semantic web activity 
jena architecture cleanly separates presentational issues concerning application programmer wishes rdf graph system programming issues store concrete triples derive virtual triples 
enables new features jena rdfs inference support rdf semantics 
full integration ontology support jena components 
ontology presentation api layered inference support triple store 
rdql query virtual triples resulting rdfs owl inferences 
adding new extensibility point jena integrating dl reasoners racer fact part improving ontology support particular support owl 
integration query optimizers example passing back relational databases complex sql queries representing user level query merely relational database triple store 
seamless extension access web 
jena available bsd style license sourceforge net project php group id 

jena jena team kuno brian mcbride craig authors 
participants jena devel mailing list 

alexaki christophides karvounarakis plexousakis tolle ics forth managing voluminous rdf description bases nd intl workshop semantic web semweb www pp 
hongkong may 
baader calvanese mcguinness nardi patel schneider description logic handbook cup 
volz lord 
cooking semantic web owl api proceedings iswc pp 
carroll validating owl syntax submitted www 
beckett rdf xml syntax revised beckett miller brickley expressing simple dublin core rdf xml recommendation 
org documents xml berners lee primer getting rdf semantic web www org swap primer html brickley guha rdf vocabulary description language rdf schema carroll unparsing rdf xml www 
carroll pulling xml events parse rdf submitted iswc 
carroll de owl test cases dean schreiber owl beckett rdf test cases frank general interface interaction special purpose reasoners modular reasoning system question answering systems 
papers aaai fall symposium pp 

volker haarslev ralf ller description racer system applications intl workshop description logics dl stanford usa 
august hayes rdf semantics horrocks hendler eds semantic web iswc international semantic web conference sardinia italy june 
proceedings springer 
horrocks 
expressive description logic fact fiction cohn schubert shapiro editors principles knowledge representation reasoning proceedings sixth international conference kr pages 
morgan kaufmann publishers san francisco california june 
karvounarakis christophides plexousakis alexaki querying community web portals sigmod 
carroll rdf concepts syntax lassila swick rdf model syntax mcbride jena ieee internet computing july august 
tannen christophides plexousakis 
viewing semantic web lenses proc 
iswc pp 
neumann zdun sintek querying semantic web resources triple views proc 
iswc pp 
miller seaborne implementations simple rdf query language ff 

patel schneider hayes horrocks owl semantics syntax patel schneider hayes horrocks owl rdf compatible model theoretic semantics reynolds jena relational database interface performance notes jena download www hpl hp com semweb download htm craig kuno kevin wilkinson jena persistence design implementation hp laboratories technical report hpl xxx preparation 
seaborne rdql query language rdf preparation expected publication nov 
seaborne rdf net api www org submission subm rdf seaborne rdf ff van harmelen patel schneider horrocks description daml oil march ontology markup language www daml org technical reports www org tr 
