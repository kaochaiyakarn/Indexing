heterogeneous modelling evolution socio technical systems stuart anderson massimo lfcs school informatics university edinburgh mayfield road edinburgh eh jz united kingdom tel 
fax 
soa inf ed ac uk massimo ed ac uk concerned evolution socio technical systems 
possible identify evolutionary space socio technical systems methodologies address evolution socio technical systems 
challenging address modelling methodologies 
addresses heterogeneous modelling evolution socio technical systems 
analysis case study highlights combination diverse models allows characterisation requirements evolution 
evolution socio technical systems modelling methodologies languages advocate different design strategies 
strategies support different aspects software development originate common systems approach solving complex problems managing complex systems 
despite fact system approach highlights system consists heterogeneous parts development generally entire life cycle socio technical systems mainly technology driven 
case technology development explicitly planned social aspects implicitly worst poorly considered 
system approach emphasises comprehensive viewpoint highlighting interaction heterogeneous parts 
practitioners proponents embrace holistic vision 
focus interconnections subsystems components special note interfaces various parts 
significant system builders include heterogeneous components mechanical electrical organizational parts single system 
organizational parts managerial structures military command political entities government bureau 
organizational components interact technical ones reflect characteristics 
instance management organization development missile system divided divisions mirror parts missile designed 
heterogeneous engineering stresses holistic viewpoint allows understand underlying mechanisms evolution socio technical systems 
possible identify taxonomy evolution conceptual framework analysis evolution socio technical systems 
evolutionary framework extends dimensions evolution design evolution hard evolution soft evolution define evolutionary space socio technical systems 
evolution design evolution capture system life cycle perspective 
evolution design identifies technological evolution mainly due designers engineers driven technology innovations financial constraints 
respect technical systems evolution identifies social evolution due social learning 
social learning involves process fitting technological artefacts existing socio technical systems 
hard evolution soft evolution capture different system viewpoints evolution takes place 
viewpoint identifies different stakeholders 
hard evolution identifies evolution technological artefacts hardware software 
soft evolution identifies social evolution people engineered persuaded suspend doubts induced provide resources trained motivated play parts production process unprecedented demands 
successfully inventing technology turned heterogeneous engineering engineering social physical world 
hard systems viewpoints basically held designers engineers trying create systems meet understood need effective economic manner 
soft camp caricature approach head concerned optimization quantitative metrics highly pragmatic 
fact term system thinking soft camp thought 
soft camp term engineer philosophy describe hard approach requirement stated customer engineer satisfies requirement question 
soft systems viewpoints held behavioural management social anthropology social psychology science students concerned observing living world particular human world 
human activity systems messy exhibit clear need purpose said exhibit purpose 
organisational evolution respect technological artefacts 
soft evolution captures evolution stakeholder perception technical systems 
shows evolutionary space socio technical systems 

evolutionary space 
identification broad spectrum evolutions socio technical systems points strong contingencies system evolution dependability 
evolution socio technical systems desirable feature 
hand evolution allows capture emerging social needs 
hand evolution allows mitigation propagation socio technical failures 
sociotechnical failures failures evolve 
argues better understanding socio technical evolution better system dependability 
unfortunately current methodologies severe limitations respect evolution socio technical systems 
highlights heterogeneous modelling evolution sociotechnical systems 
structured follows 
section describes case study 
section reviews related modelling requirements engineering 
review highlights modelling limitations respect evolution 
section describes combination diverse models allows characterisation analysis requirements evolution socio technical systems 
section draws 
case study healthcare section describes socio technical system drawn healthcare context 
case study consists patient information management system presents design deployment issues due lack support system evolution 
case study highlights new system evolution complex real world people idea driving optimal solutions may non starter see simply understand concern improving situation 
old system new may affect practice 
patient information management systems enabling technology heart healthcare strategy aimed generating new knowledge guide variety healthcare processes clinical decision making resource allocation clinical governance 
heart patient information systems users asked take classification decisions variety different situations 
quality classification classification activity key quality knowledge generated system 
investigation new patient information management system large primary healthcare highlights design deployment issues due lack support system evolution 
system introduced aim integrating patient administration practices numerous different healthcare service units 
new system aims provide various benefits higher quality uniform data healthcare activities 
enables accurate resource allocation decisions timely accessible detailed clinical data inform clinical nursing users care patients support evidence practice research activity 
unfortunately new system represents instance unsupported socio technical evolution may affect practice give rise dependability hazards 
critical part new system contact purpose menu 
previously healthcare services relied locally meaningful classifications contact purpose 
new system introduced standard contact purpose classification built system user interface menus 
configuration prior roll contact purpose menu originated previous existing systems 
new integrated system intended replace numerous separate systems developed different services 
contact options placed contact purpose menu allowed purpose selected 
contrast previous systems allowed users select option useful 
system users unfavourable comparisons functionalities previous systems provided little constraints practice 
unfortunately users struggled sense new menu categories 
despite issues new contact purpose menu system users rarely selected unspecified option 
option aims take account situations users unable match situation hand newly standardised categories system users preferred select seemingly similar options category nearest 
initial development assumption contact purpose menu unproblematic failed capture user expectations 
contact purpose menu appears need maintenance system useful 
result users unhappy system poorly reflected practices 
management concerned quality data captured poor support strategic goals 
requirements evolution modelling modelling attracted substantial effort research practice requirements engineering 
spite quality effective development processes faults software systems traced back high level requirements 
motivated increasing modelling requirements engineering 
goal modelling mainly support development activities testing reduce gap system requirements design 
gap sources requirements changes research requirements evolution clearly points origins changes 
modelling incorporates design concepts requirements specifications 
enhances ability assess requirements correctness completeness 
instance software cost reduction scr consists set techniques designing software systems 
scr techniques formal design techniques tabular notation information hiding order specify verify requirements 
information hiding principles separate system modules implement system features change 
module decomposition reduces cost software development maintenance provides limited mechanisms deal requests requirements changes requirements evolution 
intent specifications support analysis design evolving systems 
intent specifications extend dimensions 
vertical dimension consists various hierarchical levels represent intent 
horizontal dimension intent specifications decompose system heterogeneous parts environment operator system components 
third dimension refinement breaks intent decomposition dimensions details 
level vertical dimension provides rationale intent level 
level mappings relate appropriate parts levels 
mappings provide traceability high level system requirements constraints physical representation level code vice versa 
general mappings intent levels relationships 
accordance notion semantic coupling intent specifications support strategies reduce cascade effect changes 
strategies support analysis design evolving systems provide limited support understand evolution high level system requirements better understanding requirements evolution effective design strategies 
models give different representations systems approach represents common origin 
common aspect models identify relations different system parts 
hand relations constrain system behaviour defining environmental dependencies 
hand important system management design 
looking requirements heterogeneous engineering perspective explains complex interaction system specification environment 
common understanding requirements engineering considers requirements goals discovered design solutions separate technical elements 
requirements engineering reduced activity technical solutions documented goals problems 
heterogeneous engineering requirements specify mappings problem solution spaces 
spaces socially constructed negotiated sequences mappings solution spaces problem spaces 
mappings define functional ecology model implies requirements emerge set consecutive solution spaces justified problem space concerns stakeholders 
shows representation functional ecology model 

functional ecology model 
leveson reports problem caused reversals tcas traffic alert collision avoidance system years original tcas specification written experts discovered adequately cover requirements involving case pilot intruder aircraft follow tcas advisory tcas change advisory pilot 
change basic requirements caused extensive changes tcas design introduced additional subtle problems errors took years discover rectify local solution space global solution space gs current solution space st proposed system problem space pt proposed solution space st 
model defines evolutionary cycles iterations form solution problem solution 
implies requirements engineering processes consist solutions searching problems way problems searching solutions 
important difference solution space transformation requirements engineering models emphasis stakeholder interactions 
heterogeneous account requirements convenient capture requirements evolution 
despite existence modelling methodologies languages directly address requirements evolution 
proteus project proposes formal goal structure framework representing reasoning requirements changes 
proteus framework represents requirements interactions respect requirements changes 
importantly framework captures interactions system environment operates 
interactions requirements system environment form basis sensitivity impact analyses 
order effective analyses take account information requirements volatility rationale design decisions 
combination sensitivity impact provides measure risk 
approach directly model requirements evolution 
way modelling requirements evolution ordered sequences requirements releases 
requirements evolve changes release successive 
formalisation requirements releases provides logical framework modelling reasoning requirements evolution 
little coherence different models address requirements evolution 
hand due complexity requirements evolution 
hand requirements evolution received little attention 
evolutionary models capture diverse aspects possible identify stakeholder interactions important driver evolution 
heterogeneous modelling evolution heterogeneous engineering stresses holistic viewpoint allows understand underlying mechanisms evolution socio technical systems 
requirements mappings socio technical solutions problems represent account history socio technical issues arising solved industrial settings 
formal extension solution space transformation functional ecology model provides framework model capture requirements evolution 
basic idea provide formal representation solutions problems 
aim formal representation twofold 
hand formalisation solutions problems supports model driven development 
hand allows formally capture solution space transformation requirements evolution 
formalisation represents solutions problems terms modal logic 
intuitively solution space just collection solutions represent organisational knowledge acquired social shaping technical systems 
solutions accessible possibilities possible worlds solution spaces available production environment 
resulting framework sufficient interpret requirements changes 
possible define requirements evolution terms sequential solution space transformations 
requirements evolution consists requirements specification evolution requirements changes evolution 
requirements evolution evolutionary process 
formally augmented solution space transformation captures evolutionary requirements dependencies 
important capture dependencies order understand requirements evolution 
modelling evolutionary dependency highlights formal extension solution space transformation enables gathering evolutionary information different abstraction levels 
formally extended solution space transformation allows reasoning ripple effects requirements changes different abstraction levels 
underlying heterogeneity functional ecology solution space transformation supports stakeholders requirements specification activity 
understanding stakeholder interactions highlights requirements evolution poor understanding mechanisms requirements evolution affects stakeholder interactions 
results poor requirements baselines affect system production system features 
activity theory describes social interactions influence human cognition 
shows structure human activity extends structure mediated act 

structure human activity 
mechanisms underlying social design implementation technology systems referred social shaping technology sst 
model allows analysis multitude relations triangular structure activity 
important aspect grasp human activity 
systemic model allows take account connections oppose separate connections 
hand activity theory allows interpretation productive activities 
possible instantiate activity model context healthcare cases study 
hand activity theory allows analysis system design activities requirements phase 
possible instantiate activity model respect functional ecology model 
instance subject software engineer negotiates community design context division labour business stakeholders objectives desired solutions specific rules change management process specific instruments current solutions 
outcome consists requirements mappings solution problem spaces 
healthcare case study unclear conflicting objectives negotiated vague rules 
resulted negotiation system requirements early phases roll users particular large specialist service asked additions menu felt options supplied failed reflect teams activities 
development team granted request service concerned large vocal powerful previously kept records expectation help achieve user buy ensure compliance system 
smaller prestigious teams unhappy contact purpose menu options discussed proposed additions reflect activities 
sent development team lost trace requirements process case study vaguely specified possible explain capture requirements evolution terms solution space transformation 
delivery initial solution gave rise user feedback reporting specific problems 
proposed solution address problems 
requires commitments order achieve objectives 
structure human activity allows capture diverse interactions contribute outcome provides limited support characterise evolution interactions 
particular fails capture new configuration due changed objectives basic model entities 
combination activity model functional ecology model captures requirements evolve due social interactions 
useful characterise socio technical solutions 
distributed cognition focuses just interaction representational resources located human mind external artefacts 
holistic view socio technical systems may explain nature socio technical systems 
instance model defines productive process performed combination hardware software resources embedded environment 
model supports systemic view provides limited support capture resource interactions evolve may due localised changes software changes 
healthcare case study cleary highlights heterogeneous resources system users unfavourable comparison affordances previous systems represent practice quite reduced way concerned evolution socio technical systems 
possible identify evolutionary space socio technical systems methodologies address evolution socio technical systems 
challenging address modelling methodologies 
addresses heterogeneous modelling evolution socio technical systems 
takes multidisciplinary account socio technical systems 
analysis case study highlights combination diverse models allows characterisation requirements evolution 
possible analyse requirements evolution respect activity theory distributed cognition 
heterogeneous engineering stresses different role requirements 
shift paradigm problems searching solutions solutions searching problems points new role requirements respect design solutions problems 
heterogeneous engineering points requirements link design solutions problems observed coding testing usage system implementation 
modelling requirements evolution highlights requirements evolve due social shaping technical systems 
new role requirements respect solutions problems points new scenarios requirements engineering tools 
requirements engineering tools support mapping solutions observed problems 
requirements engineering tools support analysis observed problems order narrow solution space 
address integration heterogeneous models socio technical systems 
increase current understanding evolution socio technical systems 
allow characterisation strong contingencies evolution dependability 

colleagues working healthcare case study particular rob procter robin williams 
supported uk epsrc project interdisciplinary research collaboration dependability computer systems gr 
stuart anderson rob procter robin williams 
supporting evolution organisational information systems 
ackerman erickson editors evolving information artefacts 
kluwer published 
mark bergman john leslie king lyytinen 
large scale requirements analysis heterogeneous engineering 
social thinking software practice pages 
mark bergman john leslie king lyytinen 
large scale requirements analysis revisited need understanding political ecology requirements engineering 
requirements engineering 
wiebe thomas hughes trevor pinch editors 
social construction technology systems new directions sociology history technology 
mit press 
edwards 
man machine systems safety 
proceedings british airline pilots associations technical symposium pages london 
british airline pilots associations 
learning expanding approach developmental research 
massimo 
taxonomy evolution dependability 
proceedings second international workshop unanticipated software evolution pages warsaw poland april 
massimo 
observational models requirements evolution 
melvin fitting richard mendelsohn 
order modal logic 
kluwer academic publishers 
heitmeyer james kirby bruce labaw ramesh bharadwaj 
scr toolset specifying analyzing software requirements 
www org uk alan hu moshe vardi editors proceedings th international conference computer aided verification cav volume lncs pages 
derek 
putting systems 
john wiley sons 
hughes thomas hughes editors 
systems experts computers systems approach management engineering world war ii 
mit press 
nancy leveson 
intent specifications approach building human centered specifications 
ieee transactions software engineering january 
donald mackenzie 
inventing accuracy historical sociology nuclear missile guidance 
mit press 
donald mackenzie judy editors 
social shaping technology 
open university press nd edition 
donald norman 
invisible computer 
mit press cambridge massachusetts 
proteus 
meeting challenge changing requirements 
deliverable centre software reliability university newcastle tyne june 
vygotsky 
mind society 
university press 
kathryn anne weiss ong nancy leveson 
reusable specification components model driven development 
proceedings international conference system engineering 
steve easterbrook 
formal modeling space shuttle software change requests scr 
proceedings ieee international symposium requirements engineering re pages 
ieee computer society 
robin williams david edge 
social shaping technology 
research policy 
ray offen 
logical framework modeling reasoning evolution requirements 
proceedings third ieee international symposium requirements engineering pages annapolis maryland usa january 
ieee computer society press 
