asymptotically optimal geometric mobile ad hoc routing fabian kuhn department computer science eth zurich zurich switzerland kuhn inf ethz ch roger wattenhofer department computer science eth zurich zurich switzerland wattenhofer inf ethz ch aaron department computer science eth zurich zurich switzerland inf ethz ch afr new geometric mobile adhoc routing algorithm 
algorithm completely distributed nodes need communicate direct neighbors transmission range 
show best route cost afr finds route terminates cost worst case 
afr algorithm cost bounded function optimal route 
give tight lower bound showing geometric routing algorithm worst case cost 
afr asymptotically optimal 
give non geometric algorithm matches lower bound needs memory node 
establishes intriguing trade geometry memory 
categories subject descriptors analysis algorithms problem complexity algorithms problems geometrical problems computations routing layout computer communication networks network protocols routing protocols general terms algorithms theory keywords ad hoc networks face routing geometric routing routing unit disk graphs wireless communication supported part national competence center research mobile information communication systems mics center supported swiss national science foundation number 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
dial september atlanta georgia usa 
copyright acm 

mobile ad hoc network consists mobile nodes equipped wireless radio 
think mobile nodes points euclidean plane 
nodes directly communicate transmission range 
assume nodes transmission range nodes distance greater communicate relaying messages series intermediate nodes process called multi hop routing 
study called geometric routing networks support geometric routing node equipped location service node knows euclidean coordinates node knows neighbor nodes nodes transmission range coordinates sender message knows coordinates destination 
addition standard assumptions take granted mobile nodes arbitrarily close positive constant distance pair nodes motivated fact physical limitations close mobile nodes placed 
distances neighboring nodes ad hoc network typically order transmission range 
new geometric routing algorithm borrows eminent face routing algorithm kranakis singh urrutia 
tradition community give algorithm name afr stands adaptive face routing algorithm completely local nodes exchange messages direct neighbors nodes transmission range show best route cost algorithm finds route terminates cost worst case 
bound holds prominent cost models distance energy link metric 
note distance best route sum distances single hops arbitrarily larger euclidean distance source destination 
algorithm algorithm bounded function optimal route original face routing algorithm geo technical part simplify presentation scaling coordinates system 
achieved similar results assumption 
coincidence afr reflects names 
metric routing algorithms bounded function number nodes 
show geometric routing algorithm cost 
tight lower bound proves algorithm asymptotically optimal lower bound holds randomized algorithms 
apart theoretical relevance results feel algorithm practical potential especially fall back mechanism greedy geometric routing algorithms cient average case 
surprising cost geometric routing algorithms quadratic cost best route 
show bound achieved simple non geometric routing algorithm 
exchange missing location service give algorithm extra memory node 
show algorithm cost contrary intuition proves worst case gps useful extra bits memory 
organized follows 
section discuss related 
section formally model mobile ad hoc networks geometric routing algorithms 
section analyze geometric routing algorithm afr 
give matching lower bound section 
section concludes discusses 

related traditionally multi hop routing mobile ad hoc networks classified proactive reactive algorithms 
proactive routing algorithms copycat behavior wireline routing algorithms node mobile ad hoc network maintains routing table lays forward message 
mobile nodes locally change topology network turn provokes updates routing tables network 
proactive routing algorithms cient ratio mobility communication low 
nodes network reasonably mobile overhead control messages update routing tables unacceptably high 
storing large routing tables cheap mobile nodes prohibitively expensive 
reactive routing algorithms hand find routes demand 
advantage fixed cost bureaucracy 
node needs send message node sender needs flood network order find receiver route 
myriad obvious helpful optimization tricks flooding process significant amount scarce wireless bandwidth 
reviews routing algorithms mobile ad hoc networks general 
decade ago researchers started advocate equipping node location information system node knows geometric coordinates 
approximate coordinates destination known message simply sent forwarded best direction 
approach called directional geometric geographic location position routing 
growing availability global positioning systems gps galileo easily imagined corresponding constant lower upper bound depends cost model generally quite large 
receiver node 
case conceive nodes calculate position local scheme research area studied 
geometric routing works nodes know location destination 
clearly approximate location destination changes frequently structure underlying graph 
sense certainly expensive keep approximate locations destinations graph 
area peer peer networking lot data structures store type information cient way 
possible overlay peer peer network maintain position destinations 
imagine want send message node area routing concept known geocasting 
overviews geometric routing algorithms 
greedy routing fails nodes distributed letter 
geometric routing algorithms purely greedy message forwarded neighboring node closest destination 
shown simple location configurations guarantee message reach destination forwarded greedily 
example network nodes distributed letter see 
assume node wants send message destination southeastern tip 
greedy routing message forwarded source best neighbor southeastern direction 
node north eastern tip neighbor node closer destination routing algorithm fails 
circumvent gap source sent message west 
shown definitions best neighbor best angle compass routing guarantee delivery 
geometric routing algorithm guarantees delivery face routing algorithm proposed seminal kranakis singh urrutia short call algorithm compass routing ii 
face routing algorithm building block routing algorithm afr discussed detail 
face routing algorithm guarantees message arrive destination terminates steps number nodes network 
satisfactory simple flooding algorithm terminate steps 
case source destination close algorithm terminates earlier 
particular interested competitive ratio route algorithm best possible route 
suggestions geometric routing algorithms guaranteed delivery worst case best knowledge better original face routing algorithm 
partly non deterministic greedy routing algorithms shown find destination special planar graphs triangulations convex subdivisions performance guarantees 
shown shortest path nodes delaunay triangulation small constant factor longer distance 
shown competitive routing algorithm delaunay triangulations 
nodes communicate transmission range delaunay triangulation applicable edges arbitrarily long delaunay triangulations 
accordingly attempts approximate delaunay triangulation locally better bound performance routing algorithms construction 
detailed discussion geometric routing 

model section introduces notation model 
consider routing algorithms euclidean graphs weighted graphs edge weights represent euclidean distances adjacent nodes particular embedding plane 
usual graph defined pair denotes set nodes denotes set edges 
number nodes called euclidean length edge denoted cd 
path 
vk list nodes consecutive nodes adjacent 
note edges traversed multiple times walking convenient denote path corresponding list edges 
mentioned consider standard model ad hoc networks nodes limited transmission ranges 
leads definition unit disk graph udg 
definition 
unit disk graph set points dimensional plane 
euclidean graph edges nodes distance called unit disk graph 
natural assumption distance nodes limited 
definition model distance nodes bounded term order der positive constant lower bound distance nodes referred del mainly focuses geometric ad hoc routing algorithms defined follows 
definition 
geometric ad hoc routing algorithm euclidean graph 
aim geometric ad hoc routing algorithm transmit message source destination sending packets edges complying conditions initially nodes know geometric positions geometric positions neighbors source knows position destination nodes allowed store temporarily storing packets transmitting 
additional information stored packet limited log bits information nodes allowed 
literature geometric ad hoc routing various names memory routing algorithm local routing algorithm routing 
due storage restrictions geometric ad hoc routing algorithms inherently local 
analysis interested di erent cost models link distance metric number hops euclidean distance metric total traversed euclidean distance energy metric total energy 
cost model implies edge weight function 
defined euclidean length edge denoted cd 
link distance metric edges weight energy weight edge defined square euclidean length ce cd 
cost path 
ek defined sum costs edges 
cost algorithm defined analogously sum costs edges traversed execution algorithm particular graph lemma 
model euclidean distance link distance energy metrics path 
ek equal constant factor unit disk graph proof 
cost link distance metric cd edges euclidean distance energy costs upper bounded lower bounded cd ce respectively 

afr adaptive face routing section describe algorithm afr asymptotically optimal unit disk graphs model 
algorithm extension face routing algorithm introduced kranakis original algorithm called compass routing ii 
energy metric usually assumed node send message simultaneously di erent neighbors energy corresponding farthest neighbors 
neglect change results 
generally metrics edge weight functions polynomial euclidean distance weight equal constant factor unit disk graph del formulation include hybrid models energy metrics exponents 
faces planar graph white region infinite outer face 
face routing afr planar graphs 
term planar graph specific embedding planar graph consider euclidean planar graphs 
case nodes edges planar graph partition euclidean plane contiguous regions called faces see illustration 
note get finite faces interior infinite face main idea face routing algorithm walk faces intersected line segment st source destination completeness describe algorithm detail see 
face routing algorithm face routing 
start face incident intersected st immediate region 
explore boundary traversing edges remember intersection point st edges nearest traversing edges go back reach traversing boundary done 

divides st line segments pt traversed part st update face incident intersected line segment pt immediate region go back step 
order simplify subsequent proofs show face routing terminates linear time 
lemma 
face routing algorithm reaches destination traversing edges number nodes 
proof 
show algorithm terminates 
choices faces step respectively see step find point nearer previous start tour coming nearer iteration finitely intersections st edges reach finite number iterations 
performance analysis see choosing st face boundary intersection nearest traverse face twice 
partition edges subsets edges incident face face lies sides edge edges incident faces edge lies di erent faces 
exploration face step edge traversed twice edge traversed times 
edges appear face edges appear faces edges traversed times algorithm 
face planar connected graph nodes edges boundary 
euler polyhedral formula yields number edges bounded proves lemma 
order obtain new algorithm afr going change face routing steps 
step assume upper bound cd euclidean length cd shortest route graph known 
geometric adhoc routing algorithm reaches link distance cost cd 
bounded face routing bfr cd 
ellipse defined locus points sum distances cd ellipse foci definition shortest path point outside longer cd best path completely inside change step face routing stay 
start face incident intersected st immediate region bounded face routing success cd chosen small successful bounded face routing 
explore face remember best intersection st edges start exploration face routing starting walk possible directions 
continue come face normal face routing algorithm cross boundary case turn walk back get boundary 
case going back exploration yield better value previous iteration bounded face routing find route restart bfr find route back source proceed step 
divides st line segments pt traversed part st update face incident intersected line segment pt immediate region go back step 
shows example cd chosen small shows successful execution bounded face routing algorithm 
lemma 
length optimal path euclidean distance metric graph model upper bounded constant cd bounded face routing finds path bounded face routing succeed finding route succeed returning case bounded face routing terminates link distance cost 
proof 
show path completely inside bounded face routing finds route traversing cd edges 
lemma follows 
path inside bfr succeeds routing drawn picture 
suppose path lies inside show case bfr finds route consider point st start traverse face show find point st nearer exploring face assume completely lie inside ellipse find normal face routing algorithm 
intersection path st intersection st see illustration 
part path line segment qq define polygon 
denote area covered polygon traverse boundary leave possible directions points traversal case take directions 
walking boundary cross path edges part planar graph face 
order leave cross st point nearer boundary cross 
second step show edge inside traversed times execution bfr algorithm 
order prove consider graph defined follows 
prune outside ellipse intersections edges introduce new nodes take segments new nodes additional edges illustration edges drawn thick lines 
consider step bfr exploring face exploring face intersection st start traversal st face boundary intersection closest path inside path inside assume case 
part boundary includes part boundary includes connected additional edges separate parts containing containing step algorithm bfr yields new point st bfr sense equivalent face routing execution bfr face visited 
exploration face step bfr edge traversed twice matter walk normal face routing algorithm hit turn edges sides belong face traversed times 
conclude edge inside traversed times 
step prove cd edges inside planar graph know number edges linear number nodes shown proof lemma 
consider del euclidean distance pair nodes circles radius nodes intersect 
length axis ellipse area smaller number nodes inside bounded 
cd cd 
proven path inside algorithm bfr terminates traversing consider additional edges straight lines 
adding additional new nodes connecting new nodes straight line segments construct real euclidean planar graph 
cd edges 
thing remains open order conclude proof lemma unsuccessful execution bfr terminates traversing cd edges 
faces visited execution algorithm 
fk face find better point st fk face divides parts 
analysis clear faces visited 
fk explored twice find best accessible intersection st see improvement 
edges traversed times arrive point st turn way back know path lies inside arrive visiting edge times 
coming definition afr 
problem bounded face routing usually upper bound length best route known 
afr apply standard trick get 
afr adaptive face routing 
determining estimate cd unknown value cd cd st 
algorithm runs bounded face routing exponentially growing cd eventually destination reached 
execute bfr cd 

bfr execution step succeeded done double estimate length shortest path cd cd go back step 
lemma 
shortest path node node planar graph adaptive face routing finds path traversing edges 
proof 
denote estimate cd optimal path length ec consecutive estimates ec ec furthermore define ec cd ec cost bfr cd bfr cd cd bfr cd cd constant su ciently large cd 
total cost algorithm afr bounded afr bfr ec ec ec ec remainder section show apply afr unit disk graph 
need planar subgraph unit disk graph afr requires planar graph 
possible explore face fk asymptotic analysis ignore optimization 
various suggestions construct planar subgraph unit disk graph distributed way 
intersection udg relative neighborhood graph rng gabriel graph gg respectively proposed 
rng edge nodes node closer gabriel graph edge node inside circle diameter uv 
relative neighborhood graph gabriel graph easily constructed distributed manner 
suggestions intersection delaunay triangulation unit disk graph 
mentioned graphs connected provided unit disk graph connected 
gabriel graph meets requirements shown lemma 
lemma 
model shortest path considered metrics euclidean distance link distance energy gabriel graph intersected unit disk graph constant longer shortest path unit disk graph respective metric 
unit disk graph contains energy optimal path 
proof 
show best path respect energy metric udg contained gg udg 
suppose edge energy optimal path udg 
sake contradiction suppose contained gg udg 
node circle diameter uv see 
edges edges udg described circle inside circle diameter uv energy path smaller energy energy optimal path 
circle energy optimal path argument applies recursively 
lemma see optimal path costs respect euclidean link distance metrics constant factor greater energy cost concludes proof 
lemma directly leads theorem 
theorem 
optimal path respect corresponding metric unit disk graph model 
afr applying afr gg udg model 
proof 
theorem directly follows lemma lemma lemma 
lower bound section give constructive lower bound geometric ad hoc routing algorithms 
lower bound graph theorem 
cost best route source destination pair deterministic randomized geometric ad hoc routing algorithm expected cost link distance energy cost 
proof 
construct family networks follows 
positive integer define euclidean graph see circle evenly distribute nodes distance neighboring points exactly circle radius 
second node circle construct chain nodes 
nodes chain arranged line pointing center circle distance neighboring nodes chain exactly 
node arbitrary circle node chain chain consists nodes distance 
node chain center node note edge center node need distance 
please note unit disk graph consists edges circle edges chains 
particular edge chains chains chain strictly outside radius 
note graph chains nodes 
route arbitrary node circle source center circle destination 
optimal route follows shortest path circle hits node directly follows chain link cost 
ad hoc routing algorithm routing tables node find best route 
geometric ad hoc routing algorithm needs find correct chain routing information stored nodes done exploring chains 
deterministic algorithm needs explore chains deterministic order finds chain adversary place chain explored 
algorithm explore nodes 
argument similar randomized algorithms 
placing accordingly randomly adversary forces randomized algorithm explore chains chain constant factor probability 
expected link cost algorithm 
edges construction length costs euclidean distance link distance energy metrics equal 
lower bound holds metrics 
note lower bound hold generally graph higher worse lower bound 
conclude section main theorem stating afr asymptotically optimal unit disk graphs del theorem 
cost optimal path source destination pair unit disk graph model 
worst case cost applying afr find route source destination 
asymptotically optimal 
proof 
theorem immediate consequence theorem theorem 
proved lower bound geometric adhoc routing algorithms unit disk graph 
specifically showed worst case cost geometric ad hoc routing algorithm quadratic cost optimal path 
result holds euclidean distance link distance energy metric 
furthermore gave algorithm afr matches lower bound optimal 
interesting see allow nodes store log bits achieve results source know coordinates destination 
lower bound holds upper bound achieved simple flooding algorithm 
source floods network take gg udg initial time live ttl nodes depth ttl reached 
result flood destination reached reached echoed back source paths reverse direction 
iterate process exponentially growing time live reach destination 
nodes reached flooding ttl ttl circle radius ttl source 
circle ttl nodes ttl edges traversed times including echo process 
cost iteration ttl ttl ttl cost algorithm quadratic cost best path considered metrics 
find intriguing storage bits node appear geometric information destination 

bose morin 
online routing triangulations 
th international symposium algorithms computation isaac volume springer lncs pages 
bose morin carlsson demaine fleischer munro lopez ortiz 
online routing convex subdivisions 
international symposium algorithms computation isaac pages 
bose morin stojmenovic urrutia 
routing guaranteed delivery ad hoc wireless networks 
proc 
discrete algorithms methods mobility pages 
broch maltz johnson 
hu jetcheva 
performance comparison multi hop wireless ad hoc network routing protocols 
mobile computing networking pages 
datta stojmenovic wu 
internal node shortcut routing guaranteed delivery wireless networks 
proc 
ieee int 
conf 
distributed computing systems workshops cluster computing appear pages 
dobkin friedman 
delaunay graphs complete graphs 
discrete computational geometry 
finn 
routing addressing problems large metropolitan scale internetworks 
technical report isi rr usc isi march 
gabriel sokal 
new statistical approach geographic variation analysis 
systematic zoology 
giordano stojmenovic 
position routing algorithms ad hoc networks taxonomy july 
www site ca ivan routing survey pdf 
hightower 
location systems ubiquitous computing 
ieee computer 
hou li 
transmission range control multihop packet radio networks 
ieee transactions communications 
imielinski 
gps addressing routing 
technical report rfc computer science rutgers university november 
ko vaidya 
geocasting mobile ad hoc networks location multicast algorithms 
technical report tr texas university september 
kranakis singh urrutia 
compass routing geometric networks 
proc 
th canadian conference computational geometry pages vancouver august 
kuhn wattenhofer 
geometric ad hoc routing unit disk graphs general cost models 
technical report eth zurich department computer science 
submitted 
www ethz ch publications tr ps 
li jannotti de couto karger morris 
scalable location service geographic ad hoc routing 
mobicom pages august 

li 
wan 
distributed construction planar spanner routing ad hoc wireless networks 
ieee infocom 
mauve widmer hartenstein 
survey position routing mobile ad hoc networks 
ieee network magazine november 
imielinski 
geocast geographic addressing routing 
mobile computing networking pages 
ramanathan steenstrup 
survey routing techniques mobile communications networks 
mobile networks applications 
royer toh 
review current routing protocols ad hoc mobile wireless networks 
ieee personal communications pages april 

han srivastava 
dynamic fine grained localization ad hoc networks sensors 
mobicom pages july 
takagi kleinrock 
optimal transmission ranges randomly distributed packet radio terminals 
ieee transactions communications 
toussaint 
relative neighborhood graph finite planar set 
pattern recognition 
urrutia 
routing guaranteed delivery geometric wireless networks 
stojmenovic editor handbook wireless networks mobile computing chapter pages 
john wiley sons 
appendix afr implementation appendix contains detailed distributed implementation afr algorithm pseudocode notation 
network node instance algorithm runs independently 
basically instance waits react messages arriving network 
message structure defined follows message state state message state point source destination boolean cw sense face traversal int ellipse size estimate point intersection points line segment st int hop counters iteration state assume number primitive operations structures ered underlying software layer algorithm 
particular employ data structures point edge representing network node locations intersection points edges network nodes respectively 
denote position network node considered instance algorithm running 
additionally define point point describe line segment points define value set types state containing values face forward consisting values normal failed disconnected 
state contains values describing state traveling message course bfr iteration algorithm 
message face state face traversal phase face routing algorithm performed 
possibly hitting ellipse message changes state 
message simply forwarded having fully explored face hitting ellipse second time message forward state 
consists values denoting state bfr iteration 
source receives return message failed iteration afr doubled started 
disconnected informs source network disconnected way destination reachable 
non error cases iteration state normal 
addition structures define primitive operations employed algorithm implementation message state state point point 
factory method allowing easy creation new message send message edge send message edge receive message edge wait receipt message edge read parameters point nexthop edge returns position node adjacent edge edge point point returns incident edge face intersected line segment ab immediate environment edge edge boolean cw returns edge message arriving edge forwarded clockwise cw true counter clockwise traversal corresponding face adjacent dist point point computes euclidean distance points point intersect edge returns intersection point line segment edge null intersection boolean point edge returns true iff point lies edge endpoint nodes lie note operations run locally network node information collected directly neighboring nodes 
observe node forward message exactly intermediate destination lies edge traversed face traversal direction changed 
note error message return source changing exists path back source currently considered ellipse 
edge boolean stopped false stopped receive normal reached destination failed back original source failure message restart algorithm doubled face true normal send disconnected graph disconnected continue switch state case face traditional face routing cw circled face graph disconnected send failure report face true disconnected cw cw state forward way face intersect null intersection dist new closer point nexthop dist dist hop lie outside ellipse state cw cw break case bounded face routing cw intersect null intersection dist new closer point nexthop dist dist 
hop lie outside ellipse state forward travel cw cw failed path ellipse break case forward just forward packet cw normal start face traversal face true normal failed send error message failed true failed cw send 
