dynamic adaptive acknowledgment strategy tcp multihop wireless networks de oliveira torsten braun technical report iam july dynamic adaptive acknowledgment strategy tcp multihop wireless networks de oliveira torsten braun institute computer science applied mathematics university bern ch bern switzerland oliveira braun iam unibe ch multihop wireless networks ieee mac protocol promising ad hoc networks small scale today 
protocol minimizes known hidden node problem eliminate completely 
consequently bandwidth utilization may quite poor involved protocols interact smoothly 
particular tcp protocol manage obtain efficient bandwidth utilization congestion control mechanism tailored complex environment 
main problems tcp networks excessive amount spurious retransmissions contentions data ack packets transmission medium 
propose dynamic adaptive strategy minimizing number ack packets transit mitigating spurious retransmissions 
strategy receiver adjusts wireless channel condition delaying packets channel condition 
technique improves bandwidth utilization reduces power consumption retransmitting regular tcp 
extensive simulation evaluations show scheme provides enhancements variety scenarios 
cr categories subject descriptors computer communication networks network architecture design computer communication networks network protocols computer communication networks internetworking 
general terms algorithms design performance 
keywords wireless networks transmission control congestion control packet loss energy efficiency shared medium 
supported part national competence center research mobile information communication systems mics center supported swiss national science foundation number 
transport control protocol tcp widely deployed transport protocol internet today 
tcp successful due robustness dealing dynamic changes network traffic conditions providing reliability basis 
wide acceptance driven development great deal applications tcp motivates extension protocol wireless networks 
networks pose critical challenges tcp originally designed complex environments level bit error rate ber due physical medium negligible 
high levels mobility may degrade performance tcp reduces sending rate perceives dropped packet 
address mobility related issues investigated past target scenarios level mobility relatively low pedestrian movement 
disturbance movements disruptive transport protocol 
technique expected satisfactorily moderate level mobility 
fact investigates tcp multihop wireless media thoroughly investigated research community 
ieee protocol standard medium access control mac protocol ad hoc networks consists link physical layer specifications 
explained detail implements robust link layer retransmissions strategy rts cts request clear send control frames recovering locally link level potentially lost frames 
virtual carrier sense mechanism node announce nodes area medium busy aims preventing known hidden node problem 
protocol works efficiently topologies hops sender receiver commonly referred hop scenario 
larger scenarios terms number hops hidden node problem persists due spatial reuse property inherent propagation model wireless networks 
basically spatial reuse imposes certain geographical area node transmit time studied 
characteristic networks causes adverse impact traditional tcp protocol probing network bandwidth increasing transmission rate lost packet detected 
efficient coordination mac transport protocols place performance severely impaired 
belief research community tcp improve performance simply ignoring medium induced losses slowing reacting 
research developments subject indicated procedure may really effective 
aggressive behavior adversely degrade protocol performance inducing losses 
main problem tcp mac protocol excessive number medium accesses carried protocol 
caused ack packets compete data packets medium retransmissions performed tcp reacting losses 
presents dynamic adaptive strategy decreasing number medium contentions possible 
specifically technique generalizes concept delayed recommended rfc receiver send ack packets data packet received 
proposal receiver may delay packets wireless channel condition channel facing losses 
doing protocol outperforms regular tcp channel able provide higher bandwidth perform effectively regular tcp channel heavily constrained 
simple changes reduce considerably number transmissions retransmissions wireless medium 
result power consumption greatly reduced key issue battery powered devices place 
proposed protocol keeps tcp friendly behavior neglected existing proposals 
focus discussions short chain nodes hops reasonable limit today networks 
concepts general expected effective larger scenarios 
remainder organized follows 
section describes main related tcp wireless networks 
section iii provides overview spatial reuse impacts tcp 
section iv introduce proposal design decisions explained main features discussed detail 
section presents discusses simulation results 
section vi concludes pointing main open issues potential 
ii 
related tcp performance wireless environments investigated studies 
meant cellular networks hop communicates wireless link 
section focus multihop networks long chains wireless links may exist 
sake clarity classify main related groups follows 
group describe techniques deal packet loss discrimination wireless environment prevent tcp sender slowing face wireless losses 
second group address schemes propose changes mac layer simply propose adjust tcp parameters pursuing better tcp mac interaction 
third group join proposals improve bandwidth utilization decreasing number medium access requests costly shared medium 
group proposed tcp feedback holland vaidya proposed similar approach elfn explicit link failure notification messages liu singh proposed atcp protocol 
proposals quite similar regarding way detect react failures network 
attempt distinguish actual cause packet losses inside network slow loss believed due noise congestion 
specific protocol notify sender link interruptions due mobility occur 
fu investigated tcp improvements multiple metrics metric 
claim single metric may provide accurate results conditions 
metrics inter packet delay difference idd receiver short term throughput stt packet order delivery ratio por packet loss ratio plr 
metrics cross checked accurate detection network internal state 
evaluations focused mobile scenarios channel errors appropriately investigated 
biaz vaidya studied schemes predicting cause packet loss inside wireless networks key idea rtt simple statistics observed rtt observed throughput tcp connection deciding increase decrease tcp congestion window 
general results discouraging evaluated schemes performed really 
liu proposed technique distinguishing packet loss due congestion packet loss wireless channel 
designed hidden markov model hmm making mentioned discrimination round trip time rtt measurements channel 
proposed similar idea discriminate packet losses due congestion packet losses wireless short chains ad hoc networks 
discrimination performed fuzzy logic engine inference robust uncertainties inherent rtt measurements 
second group li conducted extensive analysis spatial reuse properties mac protocol multihop networks 
main ideal capacity long chain nodes raw channel bandwidth obtained radio 
greedy senders place capacity degrades nodes closer source starve nodes 
fu investigated best value maximum sender transmission window results confirm tcp best throughput achieved window size limit hop chain chain hops 
proposed link red lred algorithm improving tcp performance 
lred monitors number retransmissions mac protocol compute link drop probability red threshold conventional congestion threshold 
rationale mechanism observation link losses significant congestion networks 
chen proposed adaptive congestion window limit trip hop count 
obtain considering bandwidth delay product path multihop networks 
third group proposed technique combining tcp data ack packets single packet mitigating interference problems multihop networks 
evaluations performed ideal channels typical losses 
altman jimenez investigated impact delaying acks packets tcp performance multihop wireless networks 
concluded chain topology nodes substantial improvement may achieved delaying ack packets 
approach sender delays packets startup sender timeout expires 
sender uses fixed interval ms react packets order filling gap receiver buffer opposed recommendation rfc 
results positive obtained single flow 
proposed simple analytical model tcp wireless ad hoc networks 
model congestion window limit size defines number acks delayed 
assume timeout delayed acks opposite standard delayed ack algorithm rfc delay higher interval typically ms 
model simplified results claimed quite accurate predicting tcp throughput 
allman conducted extensive evaluation delayed acknowledgment da strategies variety mechanisms improve tcp performance presence side effect delayed acks 
results interesting focused wired networks 
spatial reuse multihop wireless networks iii 
background section introduce spatial reuse property ieee investigated detail revisited tcp perspective 
propagation model defines interference range slightly higher twice transmission range 
means node communicate nodes placed maximum distance defined transmission range interfere nodes located distances interference range 
prevent classical hidden node problem includes way rts cts data ack exchange may retransmitted times order recover possible potentially lost packets due mainly wireless errors 
additionally encompasses virtual carrier sense mechanism node overhears nodes transmission backs random interval avoid collisions 
detail refer 
mechanisms effective scenarios hops place explained 
fig 
depicts chain topology nodes 
transmission range represented full line interference range shown dashed line 
explanation node transmit immediate neighbors transmission range prevent transmission nodes placed hops away 
fig 
clear transmission nodes prevent node transmitting transmission interference ranges node respectively 
fig 

spatial reuse multihop networks interference range transmission range furthermore transmission node prevent node receiving request rts node sending response cts impacting node transmission 
node succeed transmission node done transmission node 
words group subsequent hops active time imposes maximum channel utilization comparison hop bandwidth utilization 
analysis considers ideal mac protocol schedule nodes transmission evenly 
smoothly sender chain able pace transmission rate match channel capacity channel utilization decreased 
words factor achieved sender injects network exact amount data channel able forward 
optimal limit tcp congestion window size spatial reuse discussed indicates tcp sender limit size congestion window cwnd order achieve better performance 
cwnd defines maximum number packets tcp sender may inject network waiting ack packet receiver 
discussion limit cwnd presumably optimal setting number hops chain topology 
means long chains groups consecutive hops higher limit cwnd short chains 
interestingly hop chain ideal limit packet tcp cwnd 
authors limit packets size provided best channel utilization hop chain topology slightly higher theoretical limit explained 
simulation results showed better match achieved long chains due better distribution packets flight nodes 
extensive investigation problem performed authors propose limiting cwnd round number hops place 
investigation short chain nodes nodes limit packets 
confirmed results simulation slight variations depicted fig 

simulations performed ns simulator default settings apart packet size set bytes 
fig 
draw important 
short chains nodes hops small cwnd packets size sufficient maximum throughput 
scenarios hops large number applications elaborate limit packets size suffices 
fig 

optimal limit sender congestion window size throughput tcp throughput vs maximum window size maximum cwnd pkts opposed related results indicate short chains nodes help avoid decrease cwnd size 
problem cwnd set hops hops hops hops hops hops hops hops small sizes anyway difference throughput different limits cwnd size shown fig 

iv 
dynamic adaptive acknowledgment section main features proposed approach call tcp daa 
earlier mentioned tcp daa meant feasible scenarios ieee mac protocol may provide acceptable performance 
investigations shown protocol effective recovering wireless losses typical scenarios scale number wireless hops increase due spatial reuse property discussed section 
number important applications number hops involved far hops number nodes normally exceed nodes 
instance typical classrooms meeting workshop events working offices wifi home buildings 
particular tcp daa takes advantage fact protocol schedules contending transmission requests way normally node transmit packet time contend medium order prevent capture medium single node 
feature allows tcp source send packets receiving acks 
receiver acknowledges incoming data packet probability collisions data ack packets increases considerably 
additionally receiver contend medium cts rts control frames overhead mac layer transmitting acks negligible 
problems may mitigated sender merges just single ack possible due cumulative ack scheme tcp congestion control 
figs 
show transmission delay experienced data ack packets chain topology hops simulation run lasts seconds 
easy see configuration delayed acknowledgments fig 
delays experienced ack packets quite significant comparison data packets delay 
standard da delay decreases substantially tcp daa improvement higher 
average delay run top bottom fig 
ack delay accounted total transmission time respectively 
note simulation ack packets sequence number neighborhood experienced higher delay average 
phenomenon triggered spurious receiver 
discuss issue 
fewer amount acks sender lead tcp low performance typical wired scenarios congestion window cwnd limit usually high 
happen tcp sender may increase cwnd size limit receipt acks 
problem critical technique cwnd limit place packets low 
means reduction cwnd due packet loss quickly reach limit receiving acks 
improvement possible sender increases cwnd way compensates fewer number acks received investigated 
left 
delaying acknowledgment notification sender receiver may trigger retransmission timeout sender receiver delays excessively 
receiver adjusted order avoid spurious retransmissions 
standard delayed da proposed rfc recommends receiver send ack packet received delay ack order packet packet filling gap receiver buffer received 
maximum delay exceed time interval typically ms 
concepts standard da reasonably wireless environments shown higher enhancements possible delaying ack packets shown 
authors concluded chain topology nodes substantial improvement may achieved delaying acks 
approach simply delay packets startup wait timeout expiration fixed interval sending ack sender 
considered large limit sender cwnd packets order keep packets transit 
call approach lda large delayed acknowledgment compare results results technique 
main problem standard da lda schemes fixed timeout interval ms packet inter arrival receiver change channel data rate intensity traffic going network 
tcp daa combines idea higher number delayed acks dynamic reaction proposed rfc reaction packets order filling gap 
furthermore protocol adjusts channel conditions computes adaptively timeout interval receiver basis packet inter arrival interval receiver 
way receiver delays just avoid spurious retransmissions sender able adapt different levels delays imposed wireless channel independent channel data rate number concurrent flows crossing network 
show section tcp daa outperforms schemes standard da lda scenarios 
delay ms tcp data ack tx delay vs sequence number hops sequence number pkts delayed ack data fig 

data ack delay typical wireless channel delay ms ack delay ms tcp data ack tx delay vs sequence number hops sequence number pkts tcp daa tcp data ack tx delay vs sequence number hops data ack sequence number pkts standard da data ack sender receiver fig 

timing diagram tcp daa algorithm ti data ti ack ti ti ti 
start timer increment counter ack count mentioned smooth interaction sender receiver may provide optimal performance approach 
currently investigating sender side terms response losses timeout interval computation affected delayed acks 
technique minimizing unnecessary retransmissions timeout consists adjustments number duplicate acks triggering retransmission fast retransmit mechanism decreased packets timeout interval increased 
changes performed regular tcp sender proved effective evaluations 
fig 
depicts timing diagram tcp daa normal conditions startup loss 
data packets transmitted sender responses ack 
ack delayed associated timer started ti restarted ti ti running 
receiver measures data packet inter arrival gap packets ack delayed 
note receiver keeps track number acks delayed maintaining ack count variable increases current value delaying window value 
checking value ack count receiver able determine received packet group going acknowledgment delayed 
case packet inter arrival interval received packet current 
needed avoid unnecessary intervals fig 
improperly taken timeout interval computation 
strategy assure normal conditions inter arrival measurements reflect closely gap received data packets triggering delayed acks 
note packet loss receiver need measurements delay order packets 
await receives order packets 
similarly tcp sender receiver computes smoothed packet inter arrival arrival data packet pi indicated refers calculated value packet inter arrival sampled inter arrival smoothing factor 
value computed set timeout interval receiver 
design established receipt data packet causes ack delayed reasonable wait time second packet expected 
rationale delay variations relatively high environments case single dropped packet data packet arrive order trigger immediate transmission ack recommended rfc 
hand delay variation data packet arrives expected time subsequent packet timeout triggered receiver save extra time unnecessary ack packet sent network 
timeout interval ti shown 
note factor refers estimated time second expected data packet arrive 
equation includes timeout tolerance factor defines tolerant receiver may deferring transmission second expected data packet 
ti fig 
illustrates receiver dynamic window changes 
normal conditions maintained maximum size packets 
receiver gets packet outof order filling gap receiver buffer timer expires immediately sends ack sender halves packet size 
design option restart size 
chose halve technique just response lost packet exactly regular da 
algorithm subsequent data packets trigger growth maximum size provided conditions 
dynamic behavior receiver prevents sender missing acks packet losses occur 
mentioned lda proposal works fixed size startup uses large cwnd limit sender keep channel full data packets flight 
procedure may prevent lack acks sender may induce excessive number retransmissions sender shown 
growth governed shows increase may fixed packet size variable startup speed factor 
reason factor startup phase sender starts window packets size increases ack received 
initialized packet size started startup increasing rate packet size happen shortage acks sender able send packets network retransmission timer expired 
time fig 

receiver dynamic window delaying packets pi pi pi pi packet drop ack count threshold define instant startup phase occurs reaches maximum value 
evaluations noticed properly setting parameter algorithm achieved better performance short term transmissions 
false mechanisms just explained tcp daa effective possible uses scarce channel bandwidth efficiently channel facing really poor conditions performs general effective implementations 
dynamic adaptive window tcp daa probes network resource availability delay packets network permits 
furthermore protocol tcp friendly preserves basics tcp friendly behavior decrease transmission rate loss detection increase network allows 
sequence number pkts data ack sequence number vs time hops tx rx time seconds tcp daa fig 

delayed acknowledgment strategies reaction packet losses sequence number pkts data ack sequence number vs time hops tx rx time seconds lda order fix concepts explained show typical response mechanism reacting lost packets 
include response lda scheme highlight difference proposal 
fig 
shows part simulation run strategies faced dropped packed chain topology hops 
data packet sequence number 
fig 
shows sender transmits packets seconds 
run packet packet dropped receiver times acknowledges packets 
receiver updates size packets 
receipt ack packet sender sends new packets sent packets acknowledged 
moment packets flight 
packet packet detected receiver order packets trigger immediate acknowledgments receiver 
receiving duplicate ack sender transmits new packet order 
sender receives second duplicate ack seconds retransmits lost packet halves cwnd size packets fast retransmit fast recovery 
cwnd increased gradually sender leaves fast recovery phase 
sender receives third duplicate ack seconds fast recovery phase 
instant seconds sender gets acknowledgment packet retransmits packet leaves fast recovery procedure 
fills gap receiver buffer triggers ack packet due cumulative property tcp acknowledgment strategy 
instant seconds sender receives acknowledgment packet transmits new packets 
packets cause receiver send ack set packet point 
increases consequence number delayed ack increases 
fig 
shows spurious retransmissions timeout receiver 
packet unnecessarily acknowledged instants respectively 
means timeout interval computation may improved left 
fig 
shows response lda packet loss 
simulation run packet lost seconds 
differently technique amount packets flight limited packets proposed lda works large limit cwnd packets packets flight tcp daa 
notice fig 
packet dropped various acknowledgments triggered transmission optimal packets 
shows retransmission timer expired unnecessary situations 
additionally sender waits default duplicate acks retransmission lost packet longer time take action 
short comparing fig 
fig 
clearly see tcp daa provides stability terms number delayed acks 
result packet delay variation perceived sender turn tends minimize inaccuracy timeout interval computation sender 
performance evaluations evaluate compare performance tcp daa tcp flavors lda proposal 
compare lda investigates delayed acknowledgments strategy improving tcp performance multihop networks 
compare results tcp flavors theoretical best conditions sure proposal efficient wide range options 
simulate tcp flavors including potential improvements standard delayed da low limit cwnd packets sake bandwidth utilization explained section 
simulation setup ns simulator evaluations scenarios depicted fig 
single chain topology grid topology nodes 
topologies node meters apart closest neighbors wireless data rate mbps 
simulator effective transmission range meters interference range meters accordance mac protocol 
evaluations throughput bw calculated bw seq seq maximum sequence stime number bytes transmitted acknowledged stime simulated time 
parameters settings follows 
packet size bytes window limit wl flavors regular tcp packets regular tcp newreno flavor tcp daa 
parameters kept default simulator simulation runs lasted seconds 
retransmissions tcp daa tolerant packet delay variations having regular rto retransmission timeout sender multiplied factor dynamic acknowledgment strategy receiver expected minimizes spurious retransmissions timeout 
node fig 

simulated scenarios chain topology node flow flow flow flow flow flow grid topology fig 
shows result simulation run flows shared medium chain topology fig 
different number hops 
exhibits aggregate number retransmissions including retransmissions timeout fast retransmit mechanism 
fig 

aggregate number retransmissions seen hops scenarios protocol retransmit packet regular tcp retransmitted quite lot 
hops mechanism provided significant enhancement retransmitting algorithms 
evaluations tcp daa retransmitted regular tcp proposed lda 
outcome expressive terms power consumption benefits 
throughput chain topology section investigate bandwidth utilization wide range situations 
related results single flow fixed number hops show evaluation different number hops different number concurrent flows chain topology fig 

addition compare results tcp flavors usually done cases 
reasonable compare algorithm flavors including regular tcp da enabled 
vast majority related results regular tcp da evaluate configuration easing comparison related 
fig 
exhibits remarkable achievement tcp daa 
results obtained average runs 
tcp daa outperforms algorithms situations 
tcp vegas tcp optimal setting da wl outperform slightly protocol scenario hops concurrent flows 
number flows increase performance strategies degrades significantly scheme happen 
believe tcp daa improved default sender rto calculation fine tuned strategy 
interesting note general flows better improvement algorithm protocols 
reason high level transmission delays due higher number flows network 
high delays packet delay variance significant rto computation interference delayed acks perceived sender 
improvements regular tcp da 
lda obtained 
performed simulations hop scenarios results similar cases improvement observed cases algorithm performed better 
throughput grid topology describe investigations carried complex scenario grid topology illustrated fig 

evaluations flows crossing topology horizontally flows throughput kbps throughput kbps fig 

aggregate throughput chain topology throughput kbps tcp throughput vs network load hops number flows hop tcp tcp da tcp da wl tcp daa lda sack da wl vegas da wl tcp throughput vs network load hops number flows hop tcp tcp da tcp da wl tcp daa lda sack da wl vegas da wl tcp throughput vs network load hops number flows hop tcp tcp da tcp da wl tcp daa lda sack da wl vegas da wl fig 

aggregated throughput grid topology cross traffic throughput kbps tcp throughput vs network load grid topology number flows tcp tcp da tcp da wl tcp daa fig 

step flows horizontal vertical injected network concurrently results depicted fig 

results refer best outcome tcp daa simulation runs 
idea emphasize tcp daa may perform quite complex topology 
due various interactions nodes sharing medium optimal improvement possible existing unfairness mac layer 
inherent drawback mac protocol 
obtained results show performance improvement algorithm superior larger number flows 
better improvements obtained condition network flows 
terms throughput improvement tcp daa provided throughput increase regular tcp regular tcp da proposed lda respectively 
results important show algorithm may interact effectively mac protocol nodes competing medium 
evaluations needed order determine extent smooth interaction may sustained 
discussions general results quite positive sense tcp daa outperformed algorithms cases 
technique tcp connection may improve performance wireless channel facing reasonable conditions perform effective regular tcp 
evaluation results went show certain level loss rate mechanism provide enhancements 
furthermore bandwidth utilization improved power consumption gain 
surely room improvements 
throughput enhancements general significant scenarios low number concurrent flows 
may changed fine tuning algorithm sender receiver computing timeout intervals involved 
second tcp daa parameters values determined simulation coarse granularity means may eventually improved 
third sender side may increase cwnd compensate lack acks due delayed strategy 
fourth better results may achieved grid topologies mac layer fairness improved 
vi 
introduced evaluated algorithm improving tcp performance multihop wireless networks 
key idea dynamic adaptive strategy provide capability lda sack vegas tcp receiver adjust channel conditions terms ratio data packet ack packets 
outcome simulation evaluations showed algorithm outperforms regular tcp main tcp flavors similar techniques proposed literature variety conditions 
scheme improves throughput power consumption key issues environments 
easy deploy changes limited nodes 
claim technique optimal acknowledgment strategy tcp implementation multihop networks achieved results encouraging justifies investigation direction 
open issues include fine tuning timeout interval computation sender receiver optimal cwnd increase method sender receiving fewer acks investigation alternative mac layer strategies 
raghunathan venkatesan prakash 
feedback scheme improving tcp performance ad networks 
amsterdam may 
th international conference distributed computing systems icdcs 
holland vaidya 
analysis tcp performance mobile ad hoc networks 
seattle august 
annual international conference mobile computing networking mobicom 
liu singh 
atcp tcp mobile ad hoc networks 
volume pages 
ieee journal selected areas communications july 
fu greenstein meng lu 
design implementation tcp friendly transport protocol ad hoc wireless networks 
th ieee international conference network icnp november 
chen xue nahrstedt 
setting tcp congestion window limit mobile ad hoc networks 
anchorage alaska may 
ieee international conference communications icc 
ieee 
wireless lan medium access control mac physical layer phy specifications std 
institute electrical electronics engineers 
oliveira braun 
tcp wireless mobile ad hoc networks 
university bern technical report iam july 
li blake de couto lee morris 
capacity ad hoc wireless network 
rome italy july 
acm mobicom 
fu luo lu zhang gerla 
impact multihop wireless channel tcp throughput loss 
san francisco usa april 
infocom 
badrinath 
tcp indirect tcp mobile hosts 
pages vancouver canada may 
ieee icdcs 
balakrishnan seshan amir katz 
improving tcp ip performance wireless networks 
vancouver canada november 
st acm mobicom 
brown singh 
tcp tcp mobile cellular networks 
volume pages 
acm computer communications review 

tcp probing error control schema energy throughput performance gains 
japan november 
th ieee conference network protocols 
zhang 
tcp probing error control schema energy throughput performance gains 
new york june 
th ieee acm nossdav 
biaz vaidya 
distinguishing congestion losses wireless transmission losses negative result 
new orleans la usa october 
ieee th int 
conf 
computer communications networks 
liu matta crovella 
inference loss nature hybrid wired wireless environment 
inria sophia antipolis france march 
modeling optimization mobile ad hoc wireless networks 
oliveira braun 
delay approach fuzzy logic improve tcp error detection ad hoc networks 
atlanta usa march 
ieee wcnc 
yamamoto murata 
performance improvement tcp ad hoc network combining data ack packets 
ieice transactions communications 
jimenez altman 
novel delayed ack techniques improving tcp performance multihop wireless networks 
venice italy september 
personal wireless communications pwc 

throughput analysis tcp multi hop wireless networks ieee mac 
atlanta usa march 
ieee wcnc 
allman 
generation tcp 
volume pages 
acm computer communication review 
xu 
ieee mac protocol multihop wireless ad hoc networks 
volume pages 
ieee communications magazine june 

