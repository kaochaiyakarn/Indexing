roles mas managing complexity tasks environments ioannis george department information communication systems engineering university greece gr roles intuitive concept order analyze multi agent systems model inter agent social activity formal structure order implement coherent robust teams 
extensive roles implemented systems evidences importance multi agent systems design implementation 
emphasize importance roles multi agent systems act complex domains identify properties review done concerning specification exploitation roles agent oriented system engineering methodologies formal models agent social activity multi agent systems deployed dynamic unpredictable domains 

multi agent systems mas comprise agents cooperative 
cooperative agents coordinate achieving common goal self interested agents individual interacting goals 
consider agent multi agent system characterized degree autonomy 
autonomy provides agents ability decide behavior 
autonomous nature agent agents need coordinate group quickly changes number individuals chaotic behavior 
effective way achieve coordination imposing specific group organization 
organization comprises roles interrelations 
role clusters types behavior meaningful unit contributing group goals 
role interrelations interdependencies hierarchical class membership temporal resource dependency relations agents exploited effective agents coordination communication 
agents may members organization succeed undertake roles contribute collective objectives 
mainly interested collaborative activity 
collaboration special type coordinated activity participants jointly performing task carrying activities needed achieve shared goal 
coordination policies way implemented mas impact agents collaborative activity communication 
generic models devised sharedplans model joint intentions joint responsibility models provide principles underpin social activity reasoning describe necessary constructs defining cooperative individual behavior agents social contexts 
implemented systems aim explicit cooperation model agents behavior 
objective provide flexibility solving problems related individual agents behave carrying local activities context action joint action may come problems joint action repaired individuals act fellow team members problems arise agents re organize local activity response problems joint action 
address concerns implemented systems driven high level cooperation models implement employ constructs methods intentional context common recipes fixed organizations discrete roles interchanged agents dynamic assignment agents pre specified roles conjunction plan monitoring repair 
aim provide means systems track mental state individual agents participating cooperative activity coherent integrated way 
objective show importance roles flexible problem solving mas deployed dynamic unpredictable environments high degree interaction distributivity 
aims identify important properties roles examine roles conceived methodologies implementing mas formal models social agency exploited implemented systems 
structured follows second section describes importance roles order multi agent systems deal complexities task environment identifies important properties roles 
section reports way roles conceived context agent oriented software engineering methodologies formal models multi agent system architectures frameworks 
concludes discussion advantages disadvantages approaches role specification exploitation 

importance properties roles years range applicability agent technology increased substantially 
multi agent systems mas deploying complex environments including robocup rescue domains multi robot space explorations battlefield simulations information integration 
complexity environment multi agent system deployed complexity tasks expected perform assessed studying task environment dimensions degree interaction dynamics environment degree distributivity 
degree interaction specifies extend actions decisions agents impact agents goals plans 
interaction results necessity settle issues limited shared resources ii agents task interdependencies iii goals tasks require collective effort shared group agents 
dynamics specify extend environment changes due agents actions due environmental changes 
high degree unpredictability environmental changes limited agents prediction capabilities restricted monitoring capabilities complicates copying dynamics environmental changes 
distributivity specifies extend resources available agents distributed 
resources include knowledge tasks performed information environment agents task specific resources inherently distributed subsets agents 
agents capabilities impact distributivity 
general high distributivity complicates attaining consistent coherent views performed tasks agents behavior agents states status environment 
importance roles defined roles cluster types behavior meaningful units contributing achieving specific goals 
roles interdependencies relations context specific goal specify methods recipes achieving goal certain conditions 
importance roles dynamic unpredictable environments high degree interactions distributivity follows high degree interaction stated interaction results necessity concerning settling issues limited shared resources ii agents task interdependencies iii goals tasks shared group agents require collective effort 
degree interaction team agents reduced imposing specific organizational structure team members specifying resources agent information communicated agents goals achieved agent organization collective objectives 
roles provide appropriate level abstraction specification mentioned aspects concerning organizations 
approach coordination simplified degree interaction reduced controlled effectively 
environment dynamics agents need deliberate effectively evaluating options opportunities achieving shared goals considering low level details plans 
plan act robustly dynamically unpredictably changing environment agents reason intended behavior way 
roles provide abstraction aggregate intentions agents adopt successful execution tasks specify conditions hold roles apply context action capture dependencies intended behaviors shared context 
dynamic environments agents exploit role specifications form organizational structures revise existing organizational structure assign roles agents 
example agent assigned specific role context method achieving task may recognize inability proceed due unpredictable lack resources 
order agents repair group activity explicit specification role agent plays group conditions role assigned agent 
furthermore agents need mechanism dynamically assign roles exploiting role specifications context action 
activity repair may result revising method employed achieving task agents group reorganization 
concluding deal environment task dynamics robust way requires groups agents dynamically assign agents roles deliberate organization group 
reorganization group may result new assignments agents roles changes set roles changes set agents forming group changes number agents fill specific role 
distributivity inherently distributed tasks environments agents need deliberate shall perform manage distributed nature environment task 
agents need form groups shared objectives interact coherent integrated view task environment integrated view mental states collaborators 
roles specific contexts action provide specifications distributed behavioral patterns 
roles performed coordinated fashion accomplish specific objective 
explicit specification roles relations interdependencies provide shared context group agents track mental states collaborators tasks performed 
agents plan effectively manage distributivity dynamic unpredictable environments manage roles effectively decide number types roles involved number agents fill role number roles group agent play 
summarizing explicit specification roles interdependencies enable agents tame amount interaction required effective group behavior imposing organization structure deal dynamics task environment organizing group revising existing organization structure needs manage distributivity task environment deciding assignment roles agents 
role properties important role properties enable agents deal complexity task environment explicit specification roles dependencies conditions context specific methods achieving goals 
dynamics assignment 
dynamic assignment roles agents deliberative way considering conditions roles agents capabilities context action important group reorganization managing distributivity 
dynamics roles 
important agents decide roles employed organizational structure achieving specific goals 
devising dynamic organizational structures requires agents decide roles employed 
aim reduce interactions agents manage distributivity 
cardinality roles 
specifies number agents play role number roles single agent play 
general having cardinality restrictions allows agents flexibly devise effective organizational structures needs tasks environments take full advantage capabilities resources agents 
lifespan roles characterizes dynamics roles 
agents may dynamically build organizational structure roles change group action 
revising assignment roles agents deactivating existing roles important agents deal dynamics environment handle distributivity effectively 
properties roles collaborative action highly dynamic unpredictable environments high degree interactions distributivity property range values explicit specification specification roles static vs dynamic static dynamic assignment static dynamic cardinality roles agents lifespan transient long lived 
methodologies models systems roles mas extensively methodology implemented architecture framework satisfies requirements described building mas act dynamic unpredictable environments 
consider methodologies models systems specification exploitation roles emphasizing properties roles mentioned 
roles aose methodologies agent oriented software engineering central realizing agent technology new software engineering paradigm 
researchers dealing invention new software development techniques suitable mas conceived multi agent systems organizations agents interact achieve common goals 
roles methodologies intuitive natural concept defining agent organizations 
gaia mase methodologies discuss subsequently role entity system analysis direct realization implemented mas 
mase methodology 
mase methodology analyzing designing heterogeneous multi agent systems 
methodology supported 
ultimate goal mase automatic generation code correct respect original system specification 
mase methodology comprises steps capturing goals designer takes initial system specification transforms structured set system goals depicted goal hierarchy diagram 
applying cases cases drawn system requirements structured sequence events translating goals roles 
result initial set roles 
role mase description entity expected function 
refining roles designer ensures necessary roles identified develops tasks define role behavior communication patterns 
roles captured role model specifying roles interrelations 
specification roles comprises identity tasks roles perform accomplishing goals 
creating agent classes step results specification agent classes identified roles specifications 
agent classes defined terms roles agents play conversations participate 
classes documented agent class diagram 
constructing conversations step coordination protocols pairs agents constructed 
assembling agent classes step internals agent classes created 
system deployment final step designer defines configuration actual system implemented 
designer expected move back forth steps ensure models diagrams produced complete consistent 
roles mase analysis phase substituted agent classes design phase 
roles realized final system implementation 
role mase specification entity expected function comprises tasks performed role accomplish goals 
specification interrelations roles defined designer design phase change 
agent class defined set roles plays roles lifespan equals lifespan agents system 
furthermore assignment agent classes roles done design phase 
generally mentioned mapping roles agent classes designer may combine multiple roles single agent class map single role multiple agent classes 
agents instances agent classes deliberate role assignments able revise devised organization 
role properties mase summarized table property value specification role realized final system implementation 
description entity expected function comprises tasks performed assignment static 
deliberative assignment static vs dynamic static 
agents decide roles employed cardinality 
agents play role 
agent plays instance role lifespan long lived concluding systems developed mase methodology control interaction means agents coordination protocols fixed organization structure cope environment dynamics roles defined explicitly final system realization 
instance roles provide abstractions needed agents robust planning execution enable agents deliberate roles assignment 
agents revise organizational structure 
affects distributivity agents form groups need dynamic fashion 
gaia methodology 
gaia intended allow analyst go systematically statement requirements design sufficiently detailed implemented directly 
gaia stated encourages developers think building agent systems process organizational design 
organization considered collection roles stand certain relationships 
role gaia defined attributes responsibilities permissions activities protocols 
responsibilities determine functionality role divided liveness properties safety properties 
liveness properties describe states affairs brought agent assigned role 
safety properties describe states affairs agent maintain states execution role 
order realize responsibilities role set permissions identify resources available role 
activities computations associated role may carried agent interacting agents 
protocols define role interactions 
analysis stage gaia steps identification roles system 
gives prototypical informal role model defined set role schemata 
schema comprises protocols activities permissions responsibilities 
protocols interactions roles identified documented 
results interaction model captures recurring patterns inter role interaction tasks performance 
full elaboration roles model protocol model 
roles gaia specified role schemata explicitly defined actual system implementation 
design phase role specifications guide definition agent types system 
roles static long lived define fixed organizational structure statically associated specific agents types 
instances agent type plays associated role created instance qualifiers introduced agent model 
instance qualifiers define cardinality roles number agents class assigned specific role 
agents deliberate organizational structure number agents play specific role 
table describes properties roles considered gaia 
property value specification role viewed description entity expected function characterized permissions protocols activities responsibilities assignment static 
agents deliberate roles assignment static vs dynamic static 
agents decide roles employed cardinality 
agents play role 
case agent plays instance role lifespan long lived concluding systems developed gaia methodology fixed organization structure managing interaction distributivity static fashion 
systems cope environment dynamics roles defined explicitly final system realization 
roles elaborated defined detailed way design provide abstractions needed agents robust planning execution enable agents deliberate roles assignment 
methodology 
methodology operates levels abstraction external internal viewpoint 
external viewpoint system decomposed agents modelled complex objects characterized purpose responsibilities services perform information require maintain external interactions 
internal viewpoint beliefs goals plans specified agent 
agents systems built considered follow belief desire intention bdi paradigm 
details external viewpoint captured agent interaction models 
elaboration refinement done major steps 
identification roles apply elaboration initial agent class hierarchy 
roles organizational functional 
related application required system implementation respectively 
identification roles responsibilities services needed fulfilling responsibilities 
services activities decomposed may include interaction external environment agents 
agent classes decomposed service level 
identification interactions associated services 
includes identification performatives speech acts information content events conditions noticed actions performed information requirements interactions 
step includes determination control relationships agents 
point internal modeling agent class performed 
final refinement agent control hierarchies agent instances 
methodology internal modeling begins services provided agent associated events interactions 
define purpose top level goals agent 
internal modeling expressed steps 
analysis means achieving goals 
includes contexts conditions subgoals actions handling failures 
results plan achieving goal 
consideration beliefs affect appropriateness plan manner carried various contexts 
analysis input output data requirements subgoal plan 
final system realizes agent hierarchy built roles role interactions 
hierarchy corresponding roles change group performance 
accordance previous methodologies roles realized final system drive implementation agent classes 
properties roles summarized table property value specification role specified set responsibilities services interactions services assignment static static vs dynamic static 
agents decide roles employed cardinality 
agents play role 
case agent plays instance role lifespan long lived concluding agents employed systems developed methodology comply rigid organizational structure correspondence mentioned methodologies cope environment dynamics roles defined explicitly final system realization 
affects robust planning execution effective management distributivity interaction 
aalaadin model 
aalaadin specific agent methodology meta model describing organizations agents core concepts group agent role 
methodology supported madkit platform 
aalaadin describe multi agent systems different forms organizations market hierarchical organizations useful designing mas 
organization aalaadin framework activity interaction definition groups roles relationships 
group contains finite set roles handled specific agents 
groups roles specified madkit platform system development 
group created agent automatically takes special role group manager 
group manager responsibility handling requests group admission role requests 
role model representation agent function service identification group 
agent take roles role assigned agent local group 
furthermore role assigned agents 
case agent plays instance role 
interesting feature aalaadin agent create new groups roles 
structure system organization constructed dynamically 
agents create roles transient lifetime group structure 
aalaadin aim cooperative behavior 
just provides designer mentioned facilities order build groups agents 
building mas aalaadin requires substantial effort system designer properties roles depend sophistication designed system 
table illustrates properties roles aalaadin 
property value specification role viewed representation agent function service identification assignment dynamic static vs dynamic dynamic cardinality 
agent play role 
agent plays instance role lifespan transient concluding aalaadin model provides developers ability define systems cope task environment dynamics terms agents groups roles 
actual properties roles depend final mas system design sophistication 
complex environments requires substantial effort system designer developer order mas realize full range facilities provided roles 
mainly due fact specific methodological development framework specification exploitation roles planning execution tasks 

formal models number formal models capture important properties roles 
roles related relationship types predicate means roles relationship type adoption role agent implies adoption social commitment agent different role relationship 
social commitments agent single agent 
assumed roles instantiated time single agent 
proposed model clear agent adopt roles time doesn deal issue re assigning agents roles 
adoption role agent enforces agent adopt goals desires potential intentions associated role 
goes formalizing influence relation roles 
role influential role agent translates stronger commitments responsibilities 
framework considers goals agents adopt part playing role framework clearly distinguish socially internally motivated goals 
furthermore authors propose team plans glue framework provided 
team plans pre compiled plans selected execution group agents considered specify relationship types roles involved implying obligations agents adopting roles agents 
words team plans provide framework group communication coordination 
main restrictions model roles instantiated time single agent 
clear agent adopt roles time 
constraints conditions roles specified explicitly clear agents re assigned roles 
approach close extends way roles 
role describes major function obligations permissions attached 
roles associated obligations roles 
obligation requires obliged agent achieve goal certain conditions 
conditions case may include external stimuli messages received assumed explicitly formalized include agent capabilities 
interesting part formalization introduced organization roles inheritance hierarchy 
main restriction obligation exists agents specified roles 
role filled number agents 
summarizing follow approach regarding formalization roles 
cavedon sonenberg interested adoption goals result adopting roles degree roles influence prioritization goals 
interested obligations result adoption roles 
model exploits roles coordinating agents activities model oriented implementation 
implementation oriented advance model collaborative decision making practical reasoning incorporating roles proposed 
model proposed aims cover aspects processes involved agents reach joint decision 
critical aspect model proposed social mental shaping mechanism provides mechanism affecting agents mental state consequence agent role participating social relation agent means agent affect mental state agent outside social relationship 
way proposed model clearly distinguishes socially internally motivated mental attitudes 
social relationships defined pairs roles abstracted relationship types 
authors consider roles sets mental attitudes beliefs goals intentions governing behavior agent occupying particular position structure multi agent system 
mental attitudes mandatory optional 
notion mandatory role mental attitudes authors point consistent concept organizational commitment 
agent committed group agents adopt specific role contributes group objective committed adopt mental attitudes attached role 
agent adopting role committed act obligations responsibilities expectations constraints relative role 
agents social mental shaping process may bring new relationships organization order bring new opportunities cooperation group order engage agents group 
words establishment new social relations terms roles possibility agents establish potential cooperation context achieving particular world state 
hand recognize potential cooperation agents need believe ability achieve world state jointly 
assignment role done dynamically agent ability achieve particular state 
mentioned notion ability restricted capabilities agent ability find way jointly achieve state 
implies agent order decide shall play role 
role properties conceived model proposed summarized table property value specification role viewed set mental attitudes 
attitudes mandatory optional assignment dynamic agent ability achieve particular state static vs dynamic dynamic 
agents decide roles employed cardinality 
agent assigned roles role assigned agent lifespan lifespan role specified roles active certain amount time roles implemented mas roles implemented multi agent systems order achieve coherence teams cooperative agents domains coordinated activity required 
domains include battlefield simulations robocup simulation league 
furthermore section refers frameworks implementing cooperative agents role oriented paradigm 
karma framework 
karma framework focuses rapidly integrating distributed heterogeneous agents tasking providing wrappers encapsulate general teamwork reason ing automatically generate necessary coordination robust execution 
framework system developer builds team oriented program consists team organizational hierarchy team reactive plan hierarchy 
furthermore system designer assigns agents roles 
roles specification organizational hierarchy change team performance 
roles assigned specific tasks plan hierarchy agents play specific roles depending capabilities 
roles framework specifications set activities 
roles interrelations static 
provide useful level abstraction re assigning agents tasks monitoring re planning mechanisms 
mechanisms generic exploiting role relationships role dependency partly domain dependent inferring role non performance 
pointed re assignment agents roles capabilities role requires agents consider context action 
leaf nodes organizational hierarchy correspond single agents 
internal nodes organizational hierarchy correspond groups agents group roles defined implicitly successor leaf nodes 
tasks assigned group role assigned member group corresponds role 
roles change group action long lived 
properties roles approach shown table 
property value specification role specification set activities inherits plan assigned assignment dynamic 
reactively agents capabilities static vs dynamic static 
agents decide roles employed cardinality 
agents assigned group role agent may play role lifespan long lived concluding provides framework specification fixed organizational structure terms roles agents play achievement specific goals 
roles provide valuable abstraction assigning tasks agents 
roles provide means dealing environment dynamics 
achieved monitoring replanning agent abilities roles agents reassignment roles 
agents deliberate roles assignment considering context action reactively assigned roles capabilities 
agents revise organizational structure 
may affect distributivity cases agents assigned roles prespecified organizational structure limited capabilities 
cases alternative organizations may lead team successful execution task 
far managing interactions concerned karma integrates decision theoretic communication selectivity mechanism communication costs benefits 
roles exploited managing interactions 
robocup simulation domain 
robocup simulation highly dynamic real time environment real world complexities 
domain teams agents consisting eleven members 
objective team win game score goals opponent team 
order fulfill objective team players act coordinated coherent fashion 
roles known team architectures cmunited won robocup world robocup robocup fc portugal winner robocup world championship 
role robotic soccer simple position field 
cmunited architecture agent set internal external behaviors 
internal behaviors update agent internal state external behaviors world agents internal states select actions executed 
internal external behaviors sets condition action pairs 
conditions logical expressions actions behaviors 
role specification agent position inter position behavior passing options 
role aggregates agent internal external behaviors logical group 
roles static long lived grouped formations 
agents change formation run time 
results changing characteristics roles run time 
agents formation inter change roles order save energy 
agent undertakes role formation 
table summarizes role properties systems 
property value specification role specification agent position interposition behavior assignment merely dynamic changing positions field static vs dynamic merely dynamic deciding strategy follow cardinality lifespan transient strategies may define different agent types concluding environmental changes robocup due agents actions decisions 
agents team reactively follow pre specified organizational structures may change play 
organizations comprise eleven roles single agent 
roles interchanged agents reactive way depending current situation 
main issue concerning robocup provides case study roles successfully employed coordinating agents reactively achieve tasks 
role oriented programming 
multi agent system dynamic organization change size structure dynamically re assign agents roles decide number agents fill role deliberate roles structure group 
rope framework reported aim target exploitation roles specifying cooperation processes 
works give strong emphasis role concept 
rope role defined entity consisting set required permissions set granted permissions directed graph service invocations state visible agents 
service invocations describe agent behavior may contain arbitrary number alternatives 
roles may associated set sub roles inherit granted permissions 
agent rope defined set provided services 
aim build generic framework implementing collaborative agents 
roles define intended behavior agent collaborative task 
tasks defined special formal structure called multi role recipe 
recipe constitutes know agent contains roles specifications 
role specification comprises capabilities agent order undertake role number constraints preserved execution cooperative task action list temporal synchronization constraints actions number effects achieved role executed successfully 
agent undertake roles context activity different activity contexts 
role undertaken group agents 
approaches exploit dynamics roles complex multi agent systems 
agents may form organization structures dynamic roles discarded changed run time 
lifespan roles transient roles needed long required re assignment roles dynamic 
approaches agent undertake role different goal contexts 
second approach single role assigned group agents 
case task delegated group agents contact planning decide way perform task 
table summarizes role properties role oriented programming approaches 
property value specification set activities achieving specific goal associated constraints contextual capability mental state effects assignment dynamic including deliberation context action static vs dynamic dynamic 
agents decide roles employed cardinality 
agents assigned role means agent copy role agents collectively execute role lifespan transient role oriented agent programming provides full range facilities agents manage complexity highly dynamic unpredictable environments high degree interaction distributivity 
agents devise organizational structure decide assignment roles agents revise decisions parallel planning executing tasks 
provides ability flexible problem solving 
affects distributivity agents may form groups need dynamic fashion 
explicit specification shared knowledge roles interrelationships context action enables agents manage interactions 

concluding remarks saw earlier roles intuitive concept order analyze multi agent systems model inter agent social activity formal structure order implement coherent robust teams 
role related agent systems done main streams research agent oriented system engineering formal models agent social activity implemented multi agent systems deployed complex domains 
table illustrates approaches roles role related properties 
table observe agent oriented software engineering early stage concerning analysis specification systems act dynamic unpredictable environments 
lot done area 
known methodologies concerned analysis design systems fixed number agents static structure fixed inter agent relationships dependencies 
systems need introducing role structures dynamically reasoning roles 
agent oriented methodologies concern flexibility robustness resulting implemented agent systems limited manner dealing aspects problem domains concern dynamic assignment tasks agents run time selection roles reorganization system 
restrictions result property mase gaia aalaadin robocup rop specification assignment static vs dynamic cardinality roles realized final system 
specified behaviors define agent types classes static 
deliberative assignment static 
agents decide roles employed 
agents play role 
agent copy role role viewed representation agent function service identification service identification lifespan long lived transient long lived role specification set activities inherits requirements plan assigned dynamic dynamic 
reactively agents capabilities dynamic static 
agents decide roles employed 
agents assigned group role agent may play role role specification agent position interposition behavior merely dynamic changing positions field merely dynamic deciding strategy follow long lived transient strategies may define different agent types set activities achieving specific goal associated constraints contextual capability mental state effects dynamic including deliberation context action dynamic 
agents decide roles employed 
agents assigned role means agent copy role agents collectively execute role role viewed set mental attitudes 
attitudes characterized mandatory optional dynamic agent ability achieve particular state dynamic 
agents decide roles employed 
agent assigned roles role assigned agent transient transient fact methodologies realize roles interrelations design implementation multi agent system 
increased interest formal models contain notion role 
models mainly concerned social context agent acts affects mental state behavior 
advanced theoretical approaches formalizing multi agent systems behavior means roles pure role oriented formalization collaborative activity role properties exploitation roles interdependencies 
due mentioned models clearly define important properties roles 
need implementation oriented models help build robust reliable systems dynamic unpredictable environments exploiting roles managing complexity task environment great 
implementation specific works actively concerned complex environments advanced role properties 
extensive roles implemented systems evidences need role oriented thinking modelling multi agent design implementation 
agent framework implemented system architecture exploits full range facilities provided roles integrated fashion 
currently working analysis design generic role model collaborative activity 
development architecture major step target 
full range development architecture going 
mihai 
coordinating agents role social constraints conversation plans 
proceedings aaai 

rope role oriented programming environment multiagent systems 
proceedings fourth international conference cooperative information systems 
lawrence cavedon liz sonenberg 
social commitment roles preferred goals 
proceedings third international conference multi agent systems icmas 
philip cohen hector levesque 
teamwork 
nous 
scott mark wood 
developing multiagent systems 
castelfranchi lesperance editors intelligent agents vii lnai pages 

edmund durfee 
scaling agent coordination strategies 
ieee computer pages july 
maria 
commitment roles obligations 
theory practice multi agent systems lnai 
springer verlag 
jacques ferber olivier gutknecht 
meta model analysis design organizations multi agent systems 
proceedings third international conference multi agent systems 
barbara grosz sarit kraus 
evolution sharedplans 
anand rao michael wooldridge editors foundations theories rational agencies 
kluwer academic press 
barbara grosz sarit kraus 
collaborative plans complex group action 
artificial intelligence october 
sarit kraus 
sharedplans electronic commerce 
klusch editor intelligent information agents chapter pages 
springer 
nicholas jennings 
controlling cooperative problem solving industrial multi agent systems joint intentions 
artificial intelligence 
kinny ljungberg rao sonenberg werner 
planned team activity 
castelfranchi werner editors artificial social systems lnai 

david kinny michael georgeff anand rao 
methodology modelling technique systems bdi agents 
agents braking away seventh european workshop autonomous agents multi agent world maamaw lnai 

kitano noda matsubara shimada 
robocup rescue search rescue large scale disasters domain multi agent research 
proceedings ieee conference man systems cybernetics smc 

kitano tambe veloso noda osawa asada 
robocup synthetic agents challenge 
proceedings international joint conference artificial intelligence 
noda 
soccer server simulation robocup 
proceedings ai symposium japanese society artificial intelligence pages 
noda hitoshi matsubara kazuo ian frank 
soccer server tool research multiagent systems 
applied artificial intelligence 
pietro nicholas jennings timothy norman 
formalizing collaborative decision making practical reasoning multi agent systems 
journal logic computation 
ioannis george 
roles collaborative activity 
spyropoulos editors methods applications artificial intelligence second conference ai lnai pages 

lu paulo reis nuno lau nio costa oliveira 
situation strategic positioning coordinating team homogeneous agents 
editors balancing reactivity social deliberation multi agent systems lnai pages 

charles rich candace sidner neal lesh 
collagen applying collaborative theory human computer interaction 
ai magazine 
peter stone manuela veloso 
task decomposition dynamic role assignment low bandwidth communication real time strategic teamwork 
artificial intelligence 
sycara paolucci van 
retsina mas infrastructure 
technical report cmu ri tr cmu technical report 
tambe rosenbloom 
constraints design choices building intelligent pilots simulated aircraft pilots simulated aircraft extended 
aaai spring symposium lessons learned implemented software architectures physical agents 
milind tambe 
flexible teamwork 
journal artificial intelligence research 
milind tambe david pynadath nicolas 
building dynamic agent organizations cyberspace 
ieee internet computing pages march april 
michael wooldridge paolo ciancarini 
agent oriented software engineering state art 
ciancarini wooldridge editors agent oriented software engineering lnai 

michael wooldridge nicholas jennings david kinny 
gaia methodology agent oriented analysis design 
autonomous agents multi agent systems 

