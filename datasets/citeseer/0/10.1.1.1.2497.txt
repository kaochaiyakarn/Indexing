ieee 
personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
ieee transactions knowledge data engineering vol 
may june material ensure timely dissemination scholarly technical 
copyright rights retained authors copyright holders 
persons copying information expected adhere terms constraints invoked author copyright 
cases works may explicit permission copyright holder 
temporal entity relationship models survey christian jensen senior member ieee entity relationship er model varying notations semantic variations enjoying remarkable increasing popularity research community computer science curriculum industry 
step increasing diffusion relational platforms er modeling growing popularity 
widely recognized temporal aspects database schemas prevalent difficult model er model 
result enable er model properly capture time varying information decade half active area database research community 
led proposal close dozen temporally enhanced er models 
surveys temporally enhanced er models known authors 
provide comprehensive overview temporal er modeling meets need consolidating providing easy access research temporal er modeling 
presentation model examines time varying information captured model presents new concepts modeling constructs model 
total different design properties temporally enhanced er models defined model characterized properties 
index terms conceptual modeling entity relationship models database design temporal databases temporal data models design criteria temporal er models time semantics 
entity relationship er model different versions varying syntax semantic variations enjoying remarkable increasing popularity research community industry :10.1.1.123.1085:10.1.1.123.1085
model easy comprehend 
er diagram provides overview database design model focus structural aspects database schemas opposed behavioral aspects appears match levels ambition documentation adopted users 
er model may different related purposes analysis modeling design describing database schema computer system 
third alternative er model may supported directly dbms 
case may implementation model 
graphical textual er query languages proposed research community er model rarely implementation model 
typical model primarily design design diagrams serving analysis diagrams constructed diagrams mapped relational platform 
step increasing diffusion relational platforms industry er modeling growing popularity 
er modeling supported wealth textbook material 
example introductory database jensen department computer science aalborg university fredrik vej dk aalborg denmark 
mail csj cs auc dk 
manuscript received oct revised mar 
information obtaining reprints article please send mail tkde computer org ieeecs log number 
ieee textbooks contain chapters er modeling complete books exist devoted entirely er modeling 
companies develop er diagrams scratch purchase modify generic standard diagrams 
generic diagrams variety types applications commercially available ibm 
companies build er diagrams simple drawing tools 
companies commercially available tools sophisticated better support building diagrams map diagrams implementation platforms 
tools stand smarter knowledge systems er technologies integrated parts larger case tools teamwork im sql cayenne software visible analyst workbench visible systems 
typical implementation platforms include provided major database systems 
research community industry recognized temporal aspects database schemas prominent difficult capture er model 
put simply modeling fully temporal aspects temporal aspects tend obscure clutter intuitive easy comprehend diagrams 
result industrial users simply choose ignore temporal aspects er diagrams supplement diagrams phrases full temporal support result mapping er diagrams relational 
industry er diagrams typically termed er models 
contrast common usage research community usage data model modeling notation diagram description notation 
jensen temporal entity relationship models survey tables performed hand er diagrams document temporally extended relational database schemas application programmers 
research community response develop temporally enhanced er models models reported research literature 
informative names include temporal enhanced entity relationship model temporal entity relationship model relationship attribute keys entities model name 
general orthogonal temporal aspects received widespread attention valid time transaction time 
valid time database fact time fact true 
term part reality database consideration stores information 
database facts associated valid time 
different time types may modeling valid time aspect single time instants intervals sets intervals 
importantly valid time may may captured explicitly database choice database designer 
er models relational model database structured collection facts set entities relationships attributes 
valid times associated indirectly facts 
example consider employee entity department attribute 
valid time june associated value shipping say shipping valid june fact shipping valid june 
valid time captured attribute department database record varying department values employee entities 
captured database record department value employee entity 
orthogonal valid time transaction time database fact time fact current database may retrieved 
valid time transaction time may associated structure stored database facts 
structures stored database transaction time aspect 
aspect may may designers discretion captured database 
transaction time aspect duration insertion logical deletion 
addition valid transaction time data model may support arbitrary time attributes built semantics data model 
employee entities attributes record birth dates hiring dates data model supports time attributes said support user defined time 
summary facts stored database valid time transaction time times may explicitly recorded 
say data model supports temporal aspect valid transaction time provides built means indicating er diagram aspect captured 
temporal er models attempt naturally elegantly model temporal aspects valid transaction time information changing semantics er model adding new constructs model 
models take quite different approaches adding builtin temporal support er model 
survey known authors 
temporal er models 
addition provides comprehensive list possible properties temporal er models characterizes models properties 
models having proposed past years survey order 
single easy access source central ideas concepts insights achieved temporal er modeling 
survey easier research development maximally build benefit extend past results 
survey aimed researchers practitioners interested temporal data modeling data model design 
studies somewhat related complement study reported loucopoulos describe compare approaches specify time conceptual modeling viewed semantic data modeling requirement specification information systems 
study includes er models surveyed 
comparison models fall parts classifies models terms time semantics model semantics temporal functionalities 
criteria characterize models terms user friendliness 
primary focus examination ontology properties time context information systems focus examination extensions er model temporal er models shaped 
mckenzie snodgrass survey evaluate twelve different temporal extensions relational algebra 
evaluate algebras design criteria 
criteria mainly concerned properties data objects temporal relations components algebras manipulate properties algebraic operators 
survey concerns internal algebras survey concerns notations conceptual modeling 
addition focus properties structural aspects temporal er models 
coauthors snodgrass conducted critical comparison temporal object oriented data models 
er models incorporate structural object oriented features study consider object oriented models refer reader snodgrass study 
study emphasizes structural aspects snodgrass study focused models query languages behavioral aspects 
roddick patrick survey progress incorporating time various data models conceptual primarily logical level database modeling artificial intelligence 
describes ieee transactions knowledge data engineering vol 
may june different properties temporal modeling systems survey evaluate models properties described 
broad study briefly covers temporal er models study 
descriptions literature different models diverse times incompatible conflicting terminology 
survey adopt coherent terminology temporal database glossary possible 
addition original definitions models informal rely reader intuition 
part achieve homogeneous survey manageable size give informal descriptions aspects 
emphasize common core features temporal er models er modeling capture structural aspects database schema 
cover behavioral aspects query rule languages detail 
structured follows section provides overview temporal er models known authors 
section identifies set evaluation criteria evaluates model criteria 
section discussion 
existing models section describes existing er model separately turn 
initially overview provided explains structuring descriptions introduces running example 
overview section describes temporal er models aware 
assume reader familiar chen standard er model various extensions model subtyping see :10.1.1.123.1085:10.1.1.123.1085
models chronological order publication 
description models exceptions basic layout 
short model 
second describe model captures time 
third give example diagram built model notation 
model sample diagram models described shortly 
order keep diagrams simple able reach corners different models deviate places slightly description 
way possible concisely special features models 
deviate state explicitly 
short summary model 
mappings er diagrams implementation platforms models explained described papers differ substantially typical mappings eer model relational platforms 
describe concerns divided different departments 
department number name charge number projects 
department keeps track profits projects 
able statistics profits department record history profits 
project manager employees working project 
project id budget 
project associated department responsible project 
employees belong single department 
employee assigned department employee works department long employee 
employee registers id name date birth salary 
departments keep records different employees salary histories 
employees project time employees may reassigned projects due fact project may require employees special skills 
important keep track works project time time supposed finish working current project 
employees project managers 
manager assigned project manager manage project completed terminated 
fig 
presents er diagram describing database design corresponding 
fig 
provides overview surveyed models main citations models identifiers rest 
important presentation definition 
model precise complete 
descriptions surveyed models range formal detailed vague 
models described best term terc described great detail 
models motar ert ter articles dedicated single purpose descriptions detailed comprehensive term 
models rake teer steer articles concerning presentation models descriptions comprehensive 
description tempeer somewhat incomplete 
example description mapping algorithm supposed translate teer diagrams relational schemas cover time varying aspects 
description incomplete primarily model fully developed 
temporal entity relationship model term temporal entity relationship model temporally extended er model proposed 
main motivation term provide database designers model data definition data manipulation allows general rigorous treatment time 
accomplish term notably introduces notion history function time domain value domain 
histories modeling time varying aspects 
example time varying value attribute entity history simple value 
temporal er models term graphical syntax pascal syntax 
jensen temporal entity relationship models survey fig 

er diagram describing running example 
fig 

short presentation surveyed models 
representation time outset term strict distinction real world phenomenon er model representation 
example term distinguishes time representation time time possible representations time 
distinction extends modeling constructs values histories 
focus representations 
domains termed structures 
time domain time structure 
term designer may define time structures term includes predefined time structure dates 
dates equipped variety predicates termed structure relations date leap argument date leap year operators day fig 
illustrates value structures employee names generic identifiers 
provides partial time structure termed date relation 
history mapping time structure value structure 
histories capturing variability time varying aspects shall see section 
attributes entities roles relationships atomic histories entire entities composite histories histories composed atomic composite entities 
composite histories sets histories entity relationship history consists existence history set attribute role histories 
atomic history represented history structure set time value pairs 
achieve finite history structure situations time structure represents continuous time possible introduce part history structure derivation function uses stored time value pairs compute values additional times 
ieee transactions knowledge data engineering vol 
may june fig 

sample value time structures 
fig 

term history definitions 
fig 
exemplifies histories 
generic existence history entities relationships defined history structure variables somewhat complex condition 
domain variable date domain variable boolean kleenean 
domain consists values false true unknown 
condition involving universally quantified variables disallows holes existence histories 
right salary history sal history defined uses step wise constant derivation function deriv sal date applied pair set dates date returns largest date set larger 
data items database change time 
database items current value interest values past may known items require history entire past 
reasons histories applied individual database items database 
model components step consider association histories time varying database items 
basic modeling constructs term er model 
entities model interesting objects values model properties objects 
values associated entities attributes 
attribute history value attribute changes assigned referred constant attribute variable 
constant attributes represented attribute value pair variable attributes represented attribute history pair 
entity types declared name set constant variable attributes 
attribute named existence mandatory describes existence entity type 
existence attribute specified constant attribute boolean kleenean domain 
variable existence attribute associated boolean kleenean valued history 
entities enter relationship entity plays role 
attributes entity types roles relationship types represented values entity histories entity valued 
relationship types declared name existence description set roles set attributes 
binary relations may declared express participation constraints constraints enforced database state isolation 
writing role name restricts participation time 
placing total role name total participation indicated 
term schema consists set entity type definitions set relationship type definitions 
fig 
shows entity types project employee relationship type works 
jensen temporal entity relationship models survey fig 

sample term entity relationship types 
general bottom procedure designing term schemas provided 
steps 
step define nonstandard component value sets 
fig 
exemplifies step 
illustrated date structure possible express constraints values value sets 
called relation shown determines date leap year 
step define histories 
illustrated part fig 
histories name time structure value structure optional list predicates restricting set pairs forming history list relations list operations 
third step define patterns 
pattern value structure assertion derivation function zero approximation functions history structure derivation function zero approximation functions 
sal history shown fig 
example 
final step define entity relationship types 
consist name list components 
components specified existence attributes roles 
fig 
give example step 
summary term temporal er model syntax 
allows database designers model temporal aspects history structures values attributes relationship type roles 
addition histories employed model existence entities relationships 
relationships attributes keys entities model relationships attributes keys entities rake model developed part project federal reserve board 
tasks project design database store data history attributes interrelationships american foreign financial institutions model developed provide better support er model 
rake fundamentally adopts er model replaces er model modeling constructs new ones adds entirely new constructs 
prominently rake introduces called key fields diagrams key attributes entity types places key boxes upper left corners entity type rectangles 
explicit representation entity keys unexpectedly useful modeling time varying data record multiple states entities relationships application 
new constructs defined terms mapping relational tables terms existing er constructs 
discussion representation time domain rake consider turn modeling timevarying relationships attributes 
representation time time type rake corresponds type supported various sql implementations relational dbmss 
type modeling valid time user defined time capture transaction time 
noted history entities relationships consists series states succeeding time 
series punctuated events transform state 
states duration events 
valid times states modeled pair time attributes valid times events modeled attribute 
shall see time attributes rake diagrams 
model components usual entity types represented rectangles 
primary key entity type placed called upper left corner rectangle 
weak entity types represented rectangles 
partial key placed primary keys identifying relationships stacked top 
nonprimary key attributes entity types represented circles usual linked entity types 
attribute circle enclosed square rectangle means attribute may treated entity type 
er model relationship types represented diamonds 
attributes diamond enclosed rectangle implies relationship type may treated entity type 
nontemporal databases current state entities relationships stored 
ieee transactions knowledge data engineering vol 
may june fig 

representation time varying relationship types rake 
fig 

modeling time varying rake 
recording multiple states entities relationships identified differently 
entities identified identifiers serial numbers 
contrast rake distinguishes different relationships instances relationship type solely timestamps 
delve temporal aspects 
modeling time varying relationships 
changing binary relationship type single state recorded record multiple states relationship type turns ternary 
see consider fig 

responsible relationship type consists set pairs department project entities entities represented primary key values 
contrast want record project assignments different times necessary works ternary third period entity possible represent project assignments employee project different times 
ternary relationship type fig 
correct way represent temporal relationship entities rake 
avoid cluttering diagrams time period rectangles rake eliminates notation introduces semantically equivalent notation fig 

way rake represents temporal relationship types weak entity types owned time period entity type explicitly represented diagrams pp 

primary keys entity types participating relationship type part key owner entity type sufficient uniquely identify instances relationship type 
part owner entity type simply treated ordinary attribute 
modeling time varying attributes 
circle representing attribute may seen shorthand relationship set entities domain attribute values 
view domain attribute values entity type technique modeling temporal relationship types may modeling temporal attributes 
fig 
illustrates correspondence 
applying transformation technique relationship types arrive fig 

having entity attribute relationship explicit relationship treated weak entity implicit time period owner 
turn abbreviated fig 
attribute implicit 
rake models temporal attributes 
attribute implicit diagrams attribute eliminated assumed implicitly 
reappears diagrams mapped relational schemas 
observe approach attributevalue timestamping 
attribute treated isolation 
rake special provisions timestamping sets attributes entity type 
assume salary address employee temporal want timestamp 
fig 
illustrates accomplished 
fig 
illustrates new construct jensen temporal entity relationship models survey fig 

modeling time varying attributes rake 
fig 
shows equivalent old construct 
mapping diagrams relational database schema fig 
mapped relation schemas fig 
mapped single table 
database schemas different advantages 
rationale permitting modeling constructs 
possible timestamp attributes relationships time points model temporal events 
done simply attribute place omitting temporal relationships 
summary rake retains constructs er model usual semantics modifies handling primary keys introducing special entity types weak entity types 
rake introduces special constructs modeling temporal relationship attribute types 
modeled weak entity types owned implicit time period entity types 
new constructs rake defined terms mapping relational model existing er constructs 
model objects temporal attributes relationships motivation development model objects temporal attributes relationships motar integrate database research areas objectoriented databases knowledge systems temporal databases 
motar database schemas termed data model diagrams graphical extend er model temporal relationships attributes rules 
tool building provided mapping relation schemas 
representation time motar provides built features describing temporal aspects database application conceptual logical level 
motar concentrates modeling aspect data 
application hand requires transaction time support database approach simply add time columns single column registration time suggested appropriate relational schemas result mapping implementation schema 
conceptual level explicit notation added describe temporal aspects database design 
notation valid time timestamps implicit 
meaning new modeling constructs follows mapping logical level relational schemas 
temporal aspect described conceptual level corresponding timestamp attributes added relational tables mapping algorithm 
logical level valid time modeled sql columns details temporal constructs discussed 
model components motar includes kinds data types regular entity types relationship types relationship types attribute types rules procedural relationship types 
model provides separate notations temporal attribute types temporal relationship types 
describing constructs fig 

entity relationship types 
entity types represented circles may primitive composite 
composite entity types built primitive composite entity types 
fig 
employee primitive entity type 
entity type department shall see related project means component composite relationship 
department entities contain project entities department composite entity type 
motar proposes wider definition relationship types usual er models 
general notion relationship introduced motar general support wider variety applications 
motar relationship types procedural rules 
briefly operate attribute values entities relationships produce results ieee transactions knowledge data engineering vol 
may june fig 

describing running example motar 
may update attribute values entity relationship attribute values sets entities relationships 
kinds relationship types illustrated fig 
explained 
superclass subclass ss relationship types 
represented linking entity types dashed line arrow pointing superclass subclass 
ss relationship types instances subclass type instances superclass additional information needed instances subclass 
manager subclass employee 
inheritance attributes supported 
instances subclass attributes instances superclass addition attributes specified subclass 
inheritance built mapping ss relationship types relational tables 
example employee manager relationship generates table 
emp subclass mgr emp id mgr id tuple table links information manager manager table information stored employee table manager 
joining table employee table emp id manager table mgr id retrieve attributes manager 
component composite cc relationship types 
represented linking entity types solid line arrow pointing composite component 
notation allows specifying different constraints 
components optional indicated double solid line linking component composite 
composite entities may contain multiple occurrences component entity type line linking entity types small circle component 
exemplified fig 
letting project component department deviation running example 
cc relationship type department project results relational table generated 
dep component proj dep num proj id composite contains occurrence component key relational table reduced composite identifier 
component object optional matter mapping algorithm 
general relationship gr types 
relationships entity types type ss type cc 
represented linking involved entity types diamond solid lines 
ary gr types allowed 
entity type participates gr type cardinality ratio cardinality ratio represented linking entity type diamond solid line mentioned 
cardinality ratio represented solid line small circle diamond side 
meanings cardinality radios usual 
indicates department may employee employee belongs department 
meaning cardinality ratios time varying grs 
gr types entity type indicates entity type attributes gr type refer 
entity type determined semantics gr type 
fig 
exemplifies hours week meant describe hours week employee working jensen temporal entity relationship models survey project employee entity type relationship type works 
entity type relationship indicated small line perpendicular line connecting entity type diamond see 
special time varying gr types possible describe relations vary time project assignments employees marriages 
timevarying grs represented double diamonds 
fig 
relationship type works time varying stating employees may reassigned projects 
meaning time varying grs revealed mapping relational tables type attributes start date date introduced 
specifically works relationship type mapped tables 
rel works emp id proj id works emp id proj id emp hours week emp start date emp date second table seen employees may project key relation works consists emp id proj id 
attribute names prefixed emp employee entity type works 
attributes 
types attributes model 
initially divided identifiers simple attributes simple attributes regular aperiodic periodic 
identifiers represented rectangles considered time invariant 
example id identifier entity type project 
regular attributes change time nontemporal 
represented squares 
example departments names expected change name department fig 
modeled simple regular attribute 
aperiodic attributes expected change time irregular intervals 
double square letter inside represents aperiodic attribute 
attribute salary employee example aperiodic attribute mapped table 
emp salary emp id salary date salary mapping time attribute results interpretations meaning aperiodic attributes 
example aperiodic attributes may assumed step wise constant 
example value salary remains constant updates 
salary date value tuple indicates tuple salary value takes effect 
interpretation aperiodic attributes assumed discrete 
salary attribute means tuple salary value valid time indicated value salary date attribute 
intended meaning clear description model 
periodic attributes expected change time specific intervals monthly weekly 
double square letter inside represents periodic attribute 
letter indicates intervals attribute monitored 
periodic attributes profits recording departments profits 
sampled monthly sampled annually 
rule computes annual profits monthly profits input 
entity type department mapped tables 
dep dep num name dep annual profit dep num profit year annual profit dep monthly profit dep num profit month profit year monthly profit seen possible specify granularity periodic attributes 
rules 
notion rules known knowledge systems modeling procedural relationships 
narasimhalu provides argumentation rules thought data motar 
rules represented arrow head points condition rule 
fig 
rule exemplifies details see 
summary motar provides database designer new modeling constructs describing time varying attributes periodic aperiodic describing time varying relationships 
constructs hide time attributes necessary 
temporal eer model motivation developing temporal eer teer model authors believe natural specify temporal data temporal queries conceptual entity oriented model relational data model 
teer add new syntactical constructs eer model gives new meaning existing eer modeling constructs making temporal 
representation time time representation similar proposed gadia yeung relational model adapted requirements er model 
time interval denoted defined set consecutive equidistant time instants starting instant instant 
distance consecutive time instants adjusted granularity application equal months days suitable time units 
temporal element finite union time intervals denoted interval 
temporal database stores historical information time interval represents starting time database application represent current time continuously expanding 
authors state teer model limitations regarding support time dimensions due space limitations articles consider valid time 
ieee transactions knowledge data engineering vol 
may june fig 

teer schema modeling running example 
fig 

example lifespan entity 
model components teer model extends eer model include temporal information entities relationships superclass subclasses attribute 
graphical representation teer model components similar eer model elmasri navathe explain detail 
concentrate attention new meaning syntactical constructs eer model 
entities entity types 
teer model entity entity type associated temporal element gives lifespan entity 
lifespan entity continuous time interval union number disjoint time intervals 
teer entity type system defined surrogate attribute value unique entity database 
value attribute hidden user change lifespan entity 
temporal element surrogate attribute entity defines lifespan entity 
temporal properties weak entities similar regular entities temporal element weak entity subset temporal element owner entity 
attributes keys 
attribute types teer model eer model temporal 
temporal value attribute denoted partial function dom 
referred temporal assignment 
subset defined denoted called temporal element temporal assignment 
assumed value null un known time intervals 
give example consider database described fig 
assume chosen granularity time day 
particular employee entity lifespan may temporal attribute values fig 

constraint apply attributes keys teer model 
simple single valued attributes atomic value entity time instant 
multivalued attributes value entity time instant 
time instant value composite attribute entity concatenation values components 
temporal element temporal assignment composite attribute union temporal elements temporal assignments components 
key attribute attribute entity type constraint time instant entities value attribute 
teer allows updates key attributes entity uniquely identified system defined surrogate 
relationship types 
entities entity types relationship instance associated temporal element jensen temporal entity relationship models survey defines lifespan relationship instance 
constraint states subset intersection temporal element participating entities 
lifespan ith entity participating relationship attributes treated similarly entity attributes temporal value simple attribute partial function dom temporal element subset 
cardinality ratios participating entity types new meaning 
teer model offers user defined superclass subclass relationships 
entity superclass belong predicate defined subclass time intervals defining predicate evaluates true entity 
user defined subclass user specifies entity member subclass 
case entity temporal element specifies time intervals member subclass constraint temporal elements hold 
attributes subclass treated similarly attributes temporal elements temporal assignments subsets 
summary teer add new syntactical constructs eer model changes semantics standard eer constructs making temporal 
teer provide mapping teer diagrams implementation model 
semantic temporal eer model semantic temporal eer model steer developed order compensate lack consideration semantics associated time previous research concentrated temporal data models query languages context relational model context conceptual data models 
steer introduces new classification concept temporal conceptual objects provides guidelines identifying objects conceptual temporal 
representation time representation time steer similar representation time teer model just surveyed 
difference time domain database application expanded 
possible time points 
null represent unknown time point represent current time point 
steer supports valid time 
model components steer model distinguishes conceptual temporal entities 
conceptual entity treated object permanent existence 
entity created database referenced point time 
temporal entity called entity role models roles conceptual entity participate time hand specific lifespan describing existence 
steer distinguishes temporal nontemporal attributes differentiates temporal conceptual relationships 
defines temporal constraints entity roles conceptual temporal relationships 
conceptual entities entity roles 
understand idea distinction conceptual entities entity roles consider example 
initially note entities modeled need represented database interest 
example students exist persons 
interest university accepted university 
point university want record previous information students 
students leave university remain interest university time 
conceptual existence entity directly correspond birth dead change entity 
example persons modeled conceptual entities persons roles students modeled entity roles 
conceptual entities describe conceptual aspects real world 
conceptual entity type set conceptual entities type 
conceptual entity types represented rectangles steer diagrams fig 
employee example 
temporal aspects real world described temporal entities called entity roles represent active roles conceptual entity participate 
role type set entity roles type 
role type associated single entity type called owner entity 
role type represented filled rectangle connected owner entity type 
employee fig 
example 
employee models employees currently employed 
conceptual entity associated existence time start time point st existence time refers time entity recorded database 
time point existence time infinity entity created ceases exist 
st 
entity role ro role type ro associated temporal element ro gives lifespan entity role 
lower bound start time tl lifespan tl tu entity role closed tl null start time entity role unknown current time dynamic concept 
upper bound time tu closed open tu tl null tl 
association conceptual entity entity roles viewed sort superclass subclass relationship mutual inheritance attributes relationship instances 
set rules clarify relationship 
role type exactly entity type owner 
start time lifespan en entity role greater equal start time owner entity 
ieee transactions knowledge data engineering vol 
may june fig 

running example modeled steer model 
fig 

temporal attribute values entity role type temporal attributes 
attributes role type public owner entity type attributes temporal nontemporal owner entity type public associated role types 
entity role access relationship instances relationship types owner entity participates reversely entity access relationship instances relationship types associated entity roles participates 
nontemporal temporal attributes 
nontemporal attributes properties conceptual entity types 
value nontemporal attribute entity holds entire existence time entity 
nontemporal attributes represented circles diagrams 
example nontemporal attribute id employee fig 

entity provided system defined nontemporal surrogate attribute value unique entity database 
value visible user altered 
entity type role type ro may set temporal attributes ta ta ta temporal attribute ta associated domain values dom ta 
steer diagrams temporal attributes represented ellipses example temporal attribute profit act department fig 

definitions similar section 
entity roles temporal value attribute ta ro referred ta ro partial function ro dom ta 
subset ro ta ro defined denoted ta ro 
assumed ta null unknown value intervals ro ta ro 
similar definitions apply entities difference ro replaced lifespan entity 
partial function describes value temporal attribute called temporal assignment 
subset time points temporal attribute defined called temporal element temporal assignment 
different types temporal attributes similar teer model 
nontemporal attributes entity temporal element temporal assignment equal existence time entity 
example consider database described fig 
assume chosen granularity time day 
particular employee entity existence jensen temporal entity relationship models survey time may temporal attribute values shown fig 

conceptual temporal relationships 
conceptual relationship type degree participating entity types en 
conceptual relationship types role types participants 
relationship instance tuple en ei ei 
relationship instance existence time start time greater equal start time existence time participating entities st st ei ei 
conceptual relationships represented diamonds steer diagrams 
worked fig 
example 
temporal relationship type tr degree participating entity types role types oi entity type role type 
temporal relationship instance tr tr tuple oi oi 
temporal relationships represented filled diamonds example fig 
belongs 
temporal relationship instance tr associated temporal element tr give lifespan temporal relationship instance 
lifespan subset intersection lifespans involved entity roles entities 
entities entity roles association conceptual relationship type temporal relationship type seen sort superclass subclass relationship 
constraints enforced temporal conceptual relationships 
existence constraint 
constraint denoted tr holds conceptual relationship type temporal relationship type tr participating object types role types tri ro ro ron tr conditions hold 
exists corresponding conceptual relationship ri en owner roj ej roj tri 
start time lifespan tri greater equal start time existence time corresponding conceptual relationship ri 
second lifespan constraint denoted tr constraint holds temporal relationship type tr participating objects role types conceptual relationship type ri en conditions hold 
exists corresponding temporal relationship tri ro ro ron tr ej owner roj ej ri 
start time existence time conceptual relationship ri greater equal start time lifespan corresponding temporal relationship tri 
lifespan constraint model cases conceptual relationship exist temporal relationship started 
example students get transcript entries courses enrolled 
existence lifespan constraints represented steer diagrams placing oval respectively line connecting involved relationship types 
superclass subclass relationships 
eer model steer supports concepts subclasses superclasses related concepts specialization generalization 
class set entities entity type class 
member entity conceptual subclass represents real world entity member entity conceptual superclass 
entity exists database member subclass member superclass 
implies entity member subclass existence time corresponding entity superclass 
attributes superclass inherited subclasses 
subclass entity inherits relationship instances corresponding entity superclass participates 
graphical notation superclass subclass relationships similar eer model 
notice converting nontemporal eer diagram steer diagram subclasses role types 
example fig 
nontemporal eer schema left converted steer diagram right 
reason conceptual entity type manager exists fig 
nontemporal attribute rank moved employee 
role types participate superclass subclass relationships temporal constraints may indicated 
existence constraint holds role types ro superclass ro subclass roles ro jk ro exists role ro il ro ro jk ro il 
lifespan constraint holds lifespan entity role ro jk ro subset lifespan entity role ro il ro ro jk ro il 
notice lifespan constraint implies existence constraint vice versa 
steer diagrams existence lifespan constraints represented way existence lifespan constraints 
fig 
contains example lifespan constraint employee manager shown 
oval replaced existence constraint indicated 
summary steer semantic temporal model conceptual entities considered exist forever precisely interest application roles participate temporal entities lifespans determine existence 
distinction holds relationships 
general set constraints preserving temporal consistency 
entity relation time model entity relation time ert model exists versions original version refinement 
survey original model discuss refinements 
motivation development original ert model meet need conceptual models enhanced system functionality 
ert need addressed conceptual modeling formalism caters modeling business rules time complex objects 
formalism supported database level ieee transactions knowledge data engineering vol 
may june fig 

mapping nontemporal superclass subclass relationships teer model 
extension relational model temporal semantics execution mechanism provides functionality 
description ert term class term type 
follow description 
basic structures ert binary entity relationship model exception regards association objects relationship 
specifically distinction relationships avoided 
ert model extends er model semantics graphical notation directions modeling time varying information modeling complex objects 
ert model term time varying information refers pieces information modeler wants keep track evolution wants record variation time 
representation time time introduced ert model distinguished entity class time period class time period considered primitive temporal notion model 
time period starts ends tick duration expressed ticks tick defined smallest unit time permitted ert 
time varying entity class relationship class timestamped time period class 
time period specified granularity assigned time varying piece information exists ert schema 
time period class associated entity class models lifespans entities class 
lifespan entity referred existence period 
time period class associated relationship class models time period relationship valid 
referred validity period relationship instance models period time relationships holds 
time notion corresponds valid time 
number assumptions order increase feasibility practicality proposed approach including system generated surrogates unique identification entities 
entities permitted entity longer database meaning existence period entity ends tick current time return surrogate 
implies entities keep identity time 
existence validity periods mapped calendar axis specified absolute terms 
existence period timestamped entity specified explicitly absolute value current time taken start point existence period validity period timestamped relationship specified explicitly absolute value starting point existence times involved entities taken start point validity period relationship 
entities relationships assumed exist exist system start time current time 
model components central concept ert model class defined usual way 
means primitive data abstraction classification individual objects 
ert schemas entity classes value classes complex entity classes complex value classes relationship classes specified 
simple entity classes simple value classes 
simple object decomposed objects independent existence irreducible 
simple jensen temporal entity relationship models survey fig 

ert schema description running example 
objects classes ert model divided groups simple entity classes simple value classes 
simple entity class represented rectangle entity class time varying rectangle expanded time box example time varying simple entity class employee shown fig 
example entity class project 
simple entity class derived 
implies instances stored default obtained dynamically needed derivation formulas 
derived entity class represented dashed rectangle 
derived entity classes time varying 
derived entity class exactly derivation formula gives members entity class time 
derived entity class timestamped corresponding derivation formula instantiates entity class times entity class timestamped derivation formula obtains instances class existence periods 
simple value class represented rectangle black triangle placed bottom right corner 
simple value classes time varying 
example simple value class name fig 

simple value class simple entity class derived represented dashed rectangle black triangle placed 
complex entity classes complex value classes 
complex object object decomposed objects existence depends existence component objects 
relationship complex object component objects modeled part relationships 
complex object classes simple objects classes divided groups complex entity classes complex value classes 
complex value classes represented double rectangle black triangle placed usual inner rectangle 
complex value classes complex value classes simple value classes components complex value class time varying 
example complex value class name fig 

part relationship seen level abstraction example unfolding complex class 
complex entity class represented double rectangle time varying time box added inner rectangle 
components complex entity class simple complex value class entity class type 
time semantics timestamped complex objects explained detail explanation part relationship 
presentation motar project described component composite entity type department 
done ert making department complex entity class possible describe relationship project employee 
relationships classes 
ert kinds relationship classes 
user defined relationship classes part relationships complex objects composite objects isa relationships subclasses super classes objectified relationships 
explain turn 
user defined relationship classes binary represented small filled rectangles time varying time box added 
constraints validity periods relationship class instances 
intersection existence periods participating entities nonempty 
second validity period ieee transactions knowledge data engineering vol 
may june fig 

unfolding complex entity class 
relationship instance intersection existence periods involved entities 
instance user defined relationship class viewed named set entity value role pairs role expresses way specific entity value involved relationship 
named roles called relationship required ert schema completeness reasons 
addition relationship cardinality constraint required specified entity class participating relationship class 
cardinality constraint pair indicates minimum maximum number times entity value participate relationship 
cardinality constraints specify involvement optional mandatory 
involvement mandatory involvement optional 
example see relationship class employee department shown fig 

relationship belongs employs corresponding cardinality constraints state employee instance related belongs precisely department instance yielding uniqueness constraint employee department instance related employs employee instances 
cardinality constraints relationship class entity class value class corresponds notion key database theory 
user defined relationship classes simple entity classes derived represented dashed rectangles time varying 
derived timestamped entity class derivation formula derived timestamped relationship class specifies validity period instances class 
isa relationship classes divided groups partial total subdivided overlapping disjoint yielding types isa relationship classes 
partial isa relationship class represented circle arrows flowing subclass circle arrow flowing circle superclass 
total isa relationship class represented filled circle 
subclass arrow pointing circle relationship class disjoint relationship class overlapping 
existence time specialized entity existence time corresponding parent entity 
part relationship classes specify relationships components complex object complex object 
directly subordinate object class part related complex object class turn component related composite object class 
composition mechanism distinction aggregation grouping general 
component involvement aggregation grouping indicated cardinality constrains 
cardinality component aggregate component set 
fig 
gives example 
ert complex objects model logical part hierarchies component part complex object physical part hierarchies object part complex object time 
achieve different part relationship classes defined combinations orthogonal types constraints dependency exclusiveness 
dependency constraint dependent states complex object ceases exist components cease exist dependent composite dependency constraint independent states complex object ceases exist imply components cease exist independent composite 
exclusiveness constraint exclusive states component object part complex object exclusive composite time exclusiveness constraint shared states part complex object time shared composite 
jensen temporal entity relationship models survey fig 

objectified relationship 
specific notation introduced constraints 
cardinality constrains part relationship 
assume cardinality constraint part relationship 
implies independent dependency implies dependent dependency implies exclusive exclusiveness implies shared exclusiveness 
timestamping time varying part relationship complex object subject different time constraints depending dependent independent dependency semantics exclusive shared exclusiveness semantics 
dependency constraint dependent time varying part relationships implies existence time complex object component object time validity period part relationship 
exclusiveness constraint exclusive implies object part objects period part empty intersection period part ert binary relationship classes specified 
attributes attached relationship classes relationship class ternary illustrated fig 
may yield problems 
want add class grade schema face problem add 
specifically grade attached student subject problematic 
need model ternary relationships 
achieve ert permits relationship classes participate relationships 
called nominalization particular construct relationship class viewed entity class called objectified relationship 
objectified relationship include corresponding 
relationship class objectified cardinality constraints 
status objectified relationship entity class 
may participate relationship isa relationship 
existence periods objectified timestamped relationship class instances validity periods corresponding nominalized relationship class instances 
graphical notation objectified relationships depicted fig 

refining original ert model original ert model refined respects 
definitions temporal objects entities relationships mathematically specifying constraints placed existence validity periods object temporal marking applied 
second temporal markings represent temporal variation object respect 
particular period relationship involvement exist related period associated entities exist periods entity subclasses exist related period superclass exists 
distinct aspects temporal nature relationship called historical perspective temporal variation identified 
precursor delving consider refinement ert time periods 
notation describing ticks instance temporal entity class exists temporal relationship class holds introduced 
period instance temporal entity class temporal relationship class exists holds set ticks exists holds 
series ticks usually continuous called interval defined set intervals 
definition intervals allows usual set operators 
ensure discrete bounded model possible ticks interval limited finite set interval satisfy 
original ert model relationship class marked mark indicating relationship time varying 
temporal marking refined include marks th marks 
interval ranges intervals associated entity ieee transactions knowledge data engineering vol 
may june class properties intervals give hold instances entity class 
stating means entities 
relationship involvement exists subset ticks entities associates exist associate entities exist time tick relationship said undergo temporal variation respect entities associates relationship marked 
relationship involvement exists certain ticks entity exists ticks entity exists ticks relationship said historical perspective relationship marked 
note relationships asymmetric tick required exist inverse relationship may hold tick 
mentioned terms combined 
saying historical perspective temporal variation means entities involved perspective entire existence 
constraints validity period instance relationship class results 
initially intervals entity classes exist 
interval instances unmarked relationship second interval instances involved marked relationship class third assume instances entity classes related instances involved period respectively relationship class marked allowed 
exemplify marked relationship class consider grandparent grandchild relationship persons 
related persons need exist simultaneously tick grandparent may die birth grandchild 
shall see historical perspective relationship temporal direction 
marked relationship class relating described past holds ticks ticks holds current holds ticks holds holds ticks ticks holds 
boolean combinations possible 
follows unmarked relationship class merely current historical perspective relationship class 
example temporal direction past current depending 
characteristics relationships described derived entity classes details see 
fourth assume instances instances involved period ier involved relationship instance relationship th marked 
er 
th mark model want grandparent related grandchild grandchild born 
summary data model ert extends binary entity relationship model complex entity classes complex value classes 
ert provide users temporal markings time varying entity relationship classes instances classes timestamped time periods 
temporal markings classes refined 
temporal er model temporal er model ter origin er model 
centrally ter replaces ordinary cardinality constraints snapshot lifetime cardinality constraints 
permits refinement classification relationship types obtaining total different classes relationship types leads refinement optionality relationship participation 
designing database ter model includes steps 
ter diagram constructed uses new types constraints describing timevarying aspect relationship types 
time attributes included 
historic data expected accessed particular algorithm translates ter diagrams traditional er diagrams applied leading diagram regular cardinality constraints explicit time attributes 
third er diagrams translated relational tables standard mapping 
model components key differences ter binary er model inclusion snapshot lifetime cardinality constraints intermediate step transforming ter diagrams er diagrams 
time implicit ter diagrams 
ter diagram describing running example shown fig 

remainder subsection consider cardinalities subsection considers intermediate step 
modeling time varying information improved ter replacing traditional cardinality constraints new types constraints lifetime cardinality denoted maxl snapshot cardinality denoted mins maxs 
example consider relationship type entity types department project fig 

relationship types directions direction having source target 
ter diagrams cardinality constraints respect direction relationship type placed target entity type relationship type 
lifetime cardinality constraint maxl states minimum maximum number instances target entity related instance source entity time maxl respectively 
similarly snapshot cardinality constraint mins maxs states jensen temporal entity relationship models survey fig 

ter diagram running example 
minimum maximum number instances target entity related instance source entity single point time mins maxs respectively 
conditions define valid combination cardinalities relationship direction ter defined maxs maxl mins maxs maxl mins maxl relationship type department project department instance department may associated project instances projects lifetime may associated projects single point time 
project associated precisely department single point time project associated precisely department lifetime 
projects reassigned department 
case cardinality constraints er model cardinality constraints ter model express connectivity 
set connective values relationship type directions defined follows 
maxs maxl maxs maxl maxs new connective value time leads refined classification relationship types 
traditionally distinct exhaustive classes relationship types 
disjoint classes longer exhaustive snapshot lifetime cardinality constraints classes longer cover valid combinations values mins directions 
new relationship classes added mentioned 
optionality relationship type direction implicit 
assumed mins direction implies participation optional direction 
definitions snapshot lifetime cardinalities notion optionality refined 
relationship type direction snapshot optional opts mins snapshot mandatory mands 
relationship type direction lifetime optional lifetime mandatory 
refinement implies columns relational tables result snapshot mandatory directions relationship types allowed null values 
holds refined implies opts mands implies mands incompatible ter diagrams fig 
entity types include attributes possible distinguish different states entities 
example means recording different states employee entities 
means implicit brought mapping ter diagrams er diagrams described 
mapping ter diagrams er diagrams consequence introducing temporal aspects relationships ter exists basis semiautomatic incorporation time varying data relational tables 
applications deal timevarying data largely depends volume data frequency access ter provides general approaches dealing time varying data 
frequency access noncurrent data 
ieee transactions knowledge data engineering vol 
may june fig 

mappings ter diagrams er diagrams 
fig 

relational representation employee entity 
interest noncurrent data reason storing 
provisions retaining noncurrent data needed old data simply overwritten new 
occasional noncurrent data accessed infrequently inefficient store frequently accessed current data 
separating current data noncurrent data conceptual level simplifies design process 
frequent noncurrent data anticipated accessed frequently current data efficient store 
ter provides different algorithms translating ter diagrams er diagrams category 
fig 
shows result algorithms fraction running example 
mappings provide means recording multiple states time varying ter relationship types documented straightforward extend provide means recording multiple states timevarying entities attributes 
note lifetime snapshot constraints replaced appropriate regular cardinality constraints 
summary ter model provides means better time varying data modeling 
specifically ordinary cardinality constraints replaced snapshot lifetime cardinality constraints 
ter redefines classification relationships notion optionality 
specifically new cardinality introduced 
time implicit ter diagrams temporal aspects explicit mapping ter diagrams er diagrams 
tempeer model motivation tempeer able capture temporal information conceptual model specifically eer model appropriate mapping relational data model 
achieving tempeer add new syntactical constructs eer model assumes temporal dimension existing eer constructs 
mapping relational model level adds attributes relation schemas conventional mapping algorithm yields 
underlying assumption tempeer model design model implementation platform relational 
representation time tempeer captures valid transaction time assumed discrete domains different granularities may specified domains 
time intervals valid time values time instants transaction time values 
valid time intervals subset time value greater equal 
authors gave model name teer proposed elmasri adopt name tempeer jensen temporal entity relationship models survey current time 
time domain valid times extends teer model section 
transaction times exceed current time 
model components tempeer model add new syntactical constructs eer model temporal aspects implicit tempeer diagrams 
tempeer diagram running example identical fig 

entities entity types 
tempeer diagrams entity entity type associated lifespan capturing valid time entity 
lifespan time interval temporal element 
mapped relational platform entity represented set tuples tuple describes state entity time 
entity type mapped relation schema attributes dictated standard mapping interval valued attribute 
change attribute entity results creation new tuple capturing new state entity 
lifespan entity union intervals set tuples represent entity 
addition attribute tuple attribute records insertion time tuple making possible capture transaction time tuple 
exemplify reconsider entity described example fig 

entity lifespan represented relational level tuples fig 

temporal information weak entity types stored exactly ordinary entity types 
constraint lifespan weak entity subset lifespan owner entity enforced interaction transaction time considered 
attributes 
attribute types tempeer eer model exception changing values time retained 
single valued attribute atomic value point time multivalued attributes value point time value composite attribute point time concatenation values components point time 
valid time associated attribute value deduced tuples relational level representing entity 
example temporal element associated attribute value johnson fig 
temporal element associated value 
temporal element attribute value entity subset lifespan entity 
relationships types 
relationship instance relationship type associated lifespan defined way entities 
lifespan relationship instance subset intersection lifespans participating entities 
tempeer superclass subclass relationships 
lifespan subclass entity subset lifespan superclass entity 
summary sparsely documented tempeer model add new syntactical constructs eer model changes meaning existing constructs 
tempeer diagrams mapped relation schemas 
temporal constraints introduced 
model working kraft proposes incorporates valid time support binary er model 
motivate approach considers capturing valid time explicit timestamp attributes unattractive 
approach valid time captured temporal relationships temporal entities temporal attributes 
basic temporal construct temporal relationship type 
er diagrams usually translated relational schemas model extensional level graphical notation associated er diagrams 
notation nodes represent instances entities edges represent relations instances 
valid time domain employed discrete described 
model components model binary er model fig 
exemplifies notation 
model entity types described rectangles relationship types described feet may specified 
attributes fig 
shorthand relationship types entity type possible values value domain instances entity type having attribute 
diagonal lines indicate construct temporal 
example relationship type employee emp proj marked temporal 
temporal markings employee emp proj deviations running example 
temporal relationship types 
basic temporal structure temporal relationship 
semantics temporal relationship extension semantics ordinary relationship 
fig 
left hand side nontemporal relationship employee department repeated right hand side instances shown 
meaning relationship instance employee point time related instance department instance department may related zero instances employee 
current department assignment employee recorded 
employee reassigned new department previous assignment lost 
fig 
relationship type considered temporal 
semantics temporal relationship type nontemporal relationship type 

author model name 
clearly identify model adopt name ieee transactions knowledge data engineering vol 
may june fig 

diagram modeling running example 
fig 

temporal relationships 
employee instance related instance department point time 
difference temporal relationships timestamped retained 
illustration right hand side fig 
gives employment history alice 
time alice associated sales time associated development 
attached administration lastly time returns sales 
union timestamps temporal relationship instances describes lifespan relationship 
temporal entity types attributes 
entity types temporal 
nontemporal entity participates temporal relationship changed deleted 
consequence unwanted concept lifespans added instances making temporal 
jensen temporal entity relationship models survey fig 

temporal entity types 
fig 

describing running example terc 
lifespan instance modeled temporal relationships 
specifically universal entity type instance introduced 
entity type connected temporal relationship type entity type want temporal 
fig 
illustrates 
time employee instance instance gives lifespan employee instance 
fig 
shows shorthand model 
temporal attributes defined temporal relationships 
mentioned varying attribute shorthand regular relationship entity possible values value domain instances entity having attribute 
order attribute temporal ordinary relationship entity having attribute entity modeling value domain replaced temporal relationship 
summary model possible specify temporal relationships temporal entities temporal attributes 
temporal entities attributes defined temporal relationships 
terc motivation development terc provide users temporal conceptual model better suited design temporal application temporal relational data models described literature 
terc temporal extension erc model part methodology developing temporal applications 
representation time terc adopts linear discrete model time time points called instants 
terc defines intervals temporal elements interval represented pair instants temporal element union disjoint intervals 
model support different granularities year day hour minute supports valid time 
meaning new modeling constructs terc follow mapping corresponding erc modeling constructs making explicit information implied new modeling constructs 
erc diagrams may mapped relational model 
model components terc includes kinds modeling constructs temporal counterpart attribute types entity types relationship types dynamic relationships types 
model provides new notations temporal counterparts construct 
describing constructs diagram fig 

attributes 
types attributes model simple complex composite attributes 
types attributes single valued multivalued presence attribute value mandatory nonnull ieee transactions knowledge data engineering vol 
may june fig 

static cardinality constraints attributes relationship types 
optional null allowed 
expressed static cardinality constraints diagrams 
static cardinality constraint attribute expressed lines connecting attribute entity relationship type syntax fig 

meaning pairs numbers parentheses right lines 
integer indicates attribute value mandatory optional 
second integer indicates attribute single valued multivalued 
static cardinality constraint attribute hold point time 
notation express static participation constraints participation entity types relationship types 
identifiers key attribute values entity types reused employee entity assigned value id attribute value assigned employee entity entity deleted 
key attributes underlined diagrams 
attributes temporal indicated placing clock symbol attribute names 
example salary attribute employee entity type fig 
temporal 
means valid time attribute captured 
purpose value temporal attribute associated temporal element recording times value valid 
assumed attribute value undefined unknown inapplicable points time included temporal elements 
temporal attributes temporal cardinality max specified limiting number values attribute life time entity 
default temporal cardinality omitted diagrams 
complex attribute may attached level 
nontemporal complex attribute may temporal components 
meaning temporal attributes defined terms composite attributes erc model fig 

transforming temporal attributes erc diagrams 
temporal information explicit 
translation terc diagrams equivalent erc diagram simple 
fig 
shows transformation temporal attributes 
entity relationship types 
entity types represented rectangles may regular composite 
composite entity types built regular composite entity types 
fig 
employee temporal regular entity type 
entity type department related project means aggregation link part relationship described 
department entities contain project entities department composite entity type 
regular composite entity types temporal 
temporal entity associated life cycle encodes possible states entity 
state associated temporal element records time entity particular state 
states active employee active suspended employee sabbatical dead deleted employee longer 
life cycle consists different state temporal element pairs 
meaning temporal entity type shown fig 

temporal information explicit adding multivalued composite attribute called lifecycle entity type erc diagram 
terc supports dynamic traditional relationship types 
briefly describe behavior 
types dynamic relationship types 
transition relationships express entities may change classification student graduates 
generation relationships express generation entities land parcel may split smaller parcels 
timing relationships describe temporal relations entities 
example storm may precede 
time aggregations link entities snapshots composite entity type temporal component snapshot 
description dynamic relationship types see 
kinds traditional relationship types illustrated fig 
explained relationships 
represented linking entity types solid line arrow jensen temporal entity relationship models survey fig 

transforming temporal entity relationship types erc diagrams 
pointing subclass superclass 
relationship instances subclass represent real world instances instances superclass 
fig 
manager subclass employee 
inheritance attributes temporal specifications supported 
instances subclass attributes temporal support instances superclass addition attributes specified subclass 
subclass nontemporal superclass temporal 
relationship types 
relationships entity types represented linking participating entity types rectangle rounded corners 
lines linking entity types relationship type express static participation constraints apply discussed attributes 
ary relationship types allowed 
relationship types specified temporal instances temporal relationship types associated life cycle manner instances temporal entity types 
temporal relationship types temporal attributes temporal cardinality may specified entity type participating relationship type stating relationships entity allowed participate life cycle entity 
example fig 
limiting number projects employee employment 
temporal entity types participate temporal relationship types 
meaning temporal relationship type captured manner temporal entity types 
aggregation links 
special directed binary relationships linking entity types known part relationships 
aggregation links represented linking component entity type relationship type arrow pointing component entity type usual participation constraint linking composite entity type relationship type 
indicate relationship type aggregation link relationship type marked small diamond 
fig 
relationship type responsible aggregation link 
aggregation links specified temporal temporal relationship types temporal entity types participate temporal aggregation links 
summary terc provides database designer new modeling constructs describing temporal attributes temporal entities temporal relationships 
furthermore terc provides notation describing behavior 
design criteria evaluation models section section described temporal er models known 
common characteristic specific requirements models designers 
compare better understand models section defines comprehensive set design criteria temporal er models evaluates models criteria 
chosen evaluate eer model criteria 
doing model treated temporal model capturing time timestamp attributes 
identified total design criteria covering time semantics model semantics temporal functionality user friendliness 
criteria numbered 
criterion defined indicate source possible 
attempted include criteria objective basis evaluated 
criteria identify important aspects designing temporal er model 
possible outcomes evaluation model ieee transactions knowledge data engineering vol 
may june fig 

evaluation criteria 
fig 

evaluation criteria 
fig 

evaluation criteria 
respect criterion stated explicit definition criterion possible outcomes 
fig 
fig 
fig 
results evaluations evaluating models respect criteria respectively 
grouping criteria tables purely pragmatic 
time dimensions built support 
valid transaction time general application specific aspects database facts 
prime candidates built temporal er model analysis database design 
orthogonal independent aspects database facts possible support times independently 
support times may take different shapes may elaborate 
kind time exists called user defined time 
refers support temporal aspects built support model 
user defined times supported time valued attributes available 
employed giving temporal semantics captured data model externally database designer er diagrams 
say time supported simply support documented 
possible outcomes evaluating model criterion vt tt 
combinations vt tt 
model considered temporal time dimension supported 
models support valid time 
model eer model supports user defined time 
models jensen temporal entity relationship models survey support user defined time 
transaction time supported tempeer 
valid time aspect database application regarded interesting aspect support aiming high fidelity modeling 
new temporal constructs 
general approaches providing temporal support exist 
implicit temporal support explicit timestamp attributes hidden temporal semantics modeling constructs 
example timestamp attributes necessary temporal relationship type indicate instances type record variation time 
approach possible obtain temporal er model adding new syntactical constructs er model 
existing er constructs simply temporal changing semantics 
example ordinary relationship types temporal semantics making instances record variation time just single states 
possible approach retain existing er constructs semantics add new temporal constructs capture time varying information 
new notation temporal relationship type motar example 
extent changes er model may range minor changes total redefinition model 
explicit temporal support semantics existing er constructs retained 
approach timestamp attributes explicit 
new modeling constructs notational shorthands introduced modeling temporal aspects convenient 
nearly models added new temporal constructs 
models changed semantics ordinary er model constructs entirely 
models teer tempeer 
models retained old er constructs added new temporal constructs 
models include term motar ert ter terc 
rake add new constructs er model introduces notational shorthands certain patterns ordinary er constructs 
consider notational shorthands temporal constructs 
model changed semantics er constructs added new temporal constructs steer 
specific names added constructs seen third column fig 
mentioned order introduced 
eer model added new constructs captures time solely timestamp attributes 
mandatory vs optional temporal constructs 
extent changes notation er model determines temporal constructs added model mandatory optional 
original er modeling constructs simply temporal original constructs longer available 
mandatory temporal constructs means designer nontemporal constructs diagrams 
optional temporal constructs provides designer possibility mixing temporal nontemporal constructs diagram 
possible outcomes evaluating models criterion mandatory optional 
models mandatory temporal constructs teer steer tempeer ter 
teer tempeer changed semantics original er model constructs temporal 
steer making original er constructs temporal added new temporal constructs model 
ter replaced ordinary cardinality constraints new ones mandatory specify constraints mandatory temporal constructs users decide record single state data 
models retained ordinary er constructs added new temporal construct optional temporal constructs 
possible mix temporal nontemporal constructs models include motar ert terc 
term optional history structures history patterns attributes inclusive existence roles attributes declared constant 
rake optional temporal constructs notational shorthands patterns ordinary er constructs 
eer model added new constructs result evaluating model criterion 
data types supported valid time 
different data types implicit explicit timestamps may indicating valid time object attribute value relationship 
possible time data types include instants intervals temporal elements 
example option associate valid time intervals attribute values entities 
option timestamp attribute values valid time elements finite unions intervals 
attribute value may defined function time domain value domain 
way attribute may associate value set time instants 
consider element timestamping consider timestamping sets instants intervals element timestamping 
models surveyed adopt discrete model time distinguish support closed versus open half open intervals 
data model may provide database designer choice data types 
may increase utility model 
possible outcomes include instant interval temporal element 
data types mentioned may encode validity durations instant data type may encode validity single instants time 
case instants associated interpolation functions see criterion 
impact data types available dependent model consideration solely design model implementation model complete database instances query language 
models timestamp instants include rake events term motar ter 
models rake term ert tempeer timestamp intervals 
models teer steer terc timestamp temporal elements 
criterion applicable eer model support valid time 
ieee transactions knowledge data engineering vol 
may june data types supported transaction time 
valid transaction time different semantics timestamp types available times may differ 
possible outcomes valid time 
tempeer model supports transaction time 
timestamp transaction time tempeer instants encode durations 
indicated models 
support multiple granularities 
may temporal variability different objects captured times different granularities 
captured database different granularities 
example granularity minute may recording actual working hours employees granularity day may recording department assignments employees 
notice criterion relates valid time 
models possible conceptual level specify granularity timestamps 
motar user allowed specify frequency recording periodic attributes 
term atomic histories different time domains 
terc authors state granularity timestamps specified explain done 
rest models briefly state granularity timestamps suitable specific applications postpone choice granularity logical design phase 
support temporal im precision 
temporal variability different objects may known different precisions 
imprecision may captured multiple granularities granularities general solution 
example variability attribute may recorded timestamps granularity second varying values may known precision secs recorded value 
phenomenon may prevalent important capture scientific monitoring applications store measurements instruments 
model support temporal precision term possible specify precision timestamps values attributes 
temporal interpolation functions 
temporal interpolation functions derive information times data explicitly stored database see pp 

example possible record times new salaries employees take effect define interpolation function called step wise constant interpolation gives salaries employees time employment 
scientific domain interpolation particularly important variables sampled different rates 
user definable temporal interpolation functions supported term motar ert 
term functions handle incomplete explicitly stored data derivation functions ert handle data explicitly stored 
motar rules considered sort derivation functions 
models consider handle incomplete data 
lifespans entities 
lifespan entity time entity exists 
entities may exist times attributes nonnull values making impossible infer lifespans assignments timestamps attribute values 
concept lifespan entities supported means model built support capturing times entities exist 
models support concept lifespan entity types term rake teer ert tempeer 
lifespans entity types constant existence term lifespans entity types ert implicitly lifespan database 
models support selective specification lifespans entity types indicated letting database designer decide capture lifespan entity type 
models steer terc 
models support lifespans entity types include motar ter eer 
lifespans relationships 
concept lifespan applicable relationships meaning entities 
model provides built notion relationship lifespans may enforce certain temporal constraints involve lifespans 
example sense entity attribute value time entity exist 
models support lifespans relationship types include term teer ert tempeer 
steer terc support selective specification lifespan relationship types indicated 
models support lifespans relationship types include rake motar ter eer 
temporal constraints 
temporal data model may include built temporal constraints facilities temporal constraints 
built temporal constraints possibility having illegal data 
example binary relationship entities usually exist entities exist 
presence appropriate set built constraints built temporal constructs essence 
possible database designer specify additional temporal constraints 
example seen ter model section supports types temporal constraints relationship types snapshot lifetime cardinality constraints 
temporal constraints supported term teer ert steer ter tempeer terc models rake motar eer support temporal constraints 
user specifiable temporal support 
temporal er model offers user specifiable temporal support database designer decide temporal aspects data capture 
example temporal er model may provide built support valid transaction jensen temporal entity relationship models survey time specific application may require support transaction time 
possible omit support valid time 
models rake motar ert terc partly satisfy criterion 
rake motar ert terc temporal support valid time database designer uses temporal constructs models 
ter conceptual level translating ter diagram er diagrams 
designer wants record variations data temporal dimension supported valid time access wanted temporal support 
criterion applicable eer model supports user defined time 
remaining models enforced temporal support 
upward compatibility 
temporal er model upward compatible respect conventional er model legal conventional er diagram legal er diagram temporal model meanings diagram models 
upward compatibility important enables legacy er diagrams immediately new temporal model 
investments legacy systems protected basis smooth transition temporally enhanced er model provided 
evaluating model criterion evaluate model upward compatible respect er model extends specified chen er model models superclass subclass relationships eer model models superclass subclass relationships :10.1.1.123.1085:10.1.1.123.1085
models rake motar ert terc upward compatible respect basic models 
models syntactical constructs basic models new semantics 
eer upward compatible holds trivially true 
term upward compatible existence attributes specified entity relationship types 
teer tempeer upward compatible respect eer model models changed semantics existing eer modeling constructs 
steer changed semantics original model added new syntactical constructs 
due change semantics original model steer upward compatible eer model 
ter upward compatible er model replaced ordinary cardinality constraints snapshot lifetime cardinality constraints 
snapshot reducibility attribute types 
temporal er models add temporal support implicitly may include temporal counterparts ordinary attribute types provide temporal single valued temporal multivalued temporal composite temporal derived attribute types 
temporal attribute types may snapshot reducible respect corresponding snapshot attribute types 
occurs snapshots databases described temporal er diagram constructs databases described corresponding snapshot er diagram temporal constructs replaced snapshot counterparts 
example temporal attribute snapshot reducible snapshot attribute temporal single valued attribute single valued point time 
generalizing snapshot constructs way yields natural temporal model easily understood terms conventional er model 
models snapshot reducible attribute types rake term motar teer steer tempeer terc 
rake single valued attribute types 
snapshot reducible temporal attributes modeled relationships treated weak entity types owned time period entity types having part key 
structure value point time 
term single valued attributes variable attributes atomic history structure ensure attribute value time 
temporal attributes motar snapshot reducible mapping algorithm ensures timestamps part key relations representing attributes 
teer steer tempeer terc temporal multivalued composite attribute types 
teer steer tempeer mutually semantics attribute types semantics state snapshot reducible 
semantics static cardinality constraints terc ensure attributes model snapshot reducible 
attribute types temporal attributes model defined temporal relationship snapshot reducible see criterion temporal attributes snapshot reducible 
ert ter eer temporal attributes concept inapplicable models 
snapshot reducibility relationship constraints 
snapshot reducibility applies various constraints may defined relationship types including specialized relationship types isa superclass subclass part composite component relationships 
example temporal cardinality constraint binary temporal relationship type snapshot reducible snapshot cardinality constraint binary snapshot relationship type single point time snapshot constraint applies possible instances temporal relationship type 
models snapshot reducible relationship constraints ter virtue semantics snapshot cardinality constraint due semantics temporal relationships semantics explicit states cardinality constraints relationship hold point time terc semantics explicit state static cardinality constraints hold point time eer trivially propose additional types relationships constraints 
ieee transactions knowledge data engineering vol 
may june models rake term motar teer ert tempeer describe meaning different relationship constraints specified temporal database 
reason question marks column fig 

steer model include cardinality constraints relationship types making criterion inapplicable 
mapping algorithms available 
mapping algorithm translates arbitrary er diagram temporal er model corresponding database schema data model 
temporal er models typically considered design models 
designing er diagram diagram accordingly mapped schema available dbms mapped implementation platform 
popular type mapping relational model platform specific relational product 
benefit mapping algorithm temporally extended er model relational model single mapping algorithm controls resulting relational database schema 
alternative possible map temporal er diagrams conventional er diagrams 
benefit approach wide selection mappings conventional er model relational model may exploited 
models provide mappings regular er diagrams relational model 
model temporal er diagrams mapped er diagrams relational model rake 
ter model provide algorithm transforms ter diagrams er diagrams may transformed relational schemas standard algorithm 
demonstrated transform terc diagrams erc diagrams 
models provide algorithm translation relational schema include motar ert tempeer 
models term teer steer specify mappings diagrams 
reason absence mappings models may considered implementation models see discussion criterion 
query language provided 
alternative mapping er diagrams schema separate implementation platform approach assume system implements er model directly 
approach mapping implementation platform required 
query language available querying er databases 
query languages provided models rake term motar ter terc 
temporal extension query language provided query language models teer steer 
ert model provides query language called external rule language 
query language tempeer model temporal extension sql proposed 
graphical notation provided 
usually assumed graphical notation available describing er diagrams needs 
possible provide textual notation describing er diagrams 
generally believed er models graphical notation advantage er models programming language notation 
graphical notations tend easier learn believe simplicity graphical er notation main reasons success 
model graphical notation term model pascal syntax 
graphical editor available 
notation model graphical presence editor supporting model important model widely 
potential users opportunity try prototype editor supporting model 
models ter ert come editor support 
editor ter called modeller commercially available product editor ert called ert tool 
authors terc model states editor model currently development reason parentheses indicated model 
models teer tempeer editors supports eer model schema design mapping implementation models 
parentheses indicated models 
editors eer exist public domain 
model accompanied editor 
research directions section concludes discusses research directions 
surveyed proposals extending er model better capture temporal aspects data 
detailed motivation development proposal varies general observation temporal aspects data prevalent basic er eer model provide adequate support elegantly concisely capturing aspects 
survey emphasized common aspect temporal er models design models employed capture conceptual model database design implemented separate data model typically relational model 
yields focus structural aspects er query languages 
proposed extensions quite different approaches 
approach devise new notational shorthands replace patterns occur frequently er diagrams temporal aspects modeled 
example pattern occurs modeling time varying attribute er model 
approach change semantics existing er model constructs making temporal 
extreme form approach result new syntactical constructs original constructs jensen temporal entity relationship models survey simply temporal 
approach possible add new constructs 
approach retain existing er constructs 
models assume schemas mapped schemas relational model serves implementation platform 
algorithms map schemas models relational model constructed add appropriate time valued attributes relation schemas 
corresponds er model currently industry 
contrast models examined implementation models provide query language model 
identified total design properties relevant evaluation temporal er models taken consideration designing temporal er model 
design properties incompatible simultaneously fulfilled 
evaluated models design properties single model satisfies properties models collectively provide coverage design space 
models illustrate different ways conveniently capturing temporal aspects data conceptual level contention temporal er models varying degrees succeeded naturally capturing temporal aspects data er model 
models come approach existing er model constructs temporal semantics attractive 
database designers familiar existing er constructs 
understanding principle making constructs temporal designers ready benefit temporal er model 
approach totally problems 
approach rules possibility designing nontemporal databases databases part database nontemporal rest temporal 
problem old legacy er diagrams invalid introducing temporal er model syntax valid semantics changed longer describe existing relational database schemas 
models retain existing constructs old semantics introduce new temporal constructs problems advantages 
extensions comprehensive difficult database designers learn understand 
larger initial investment training induces may prevent model accepted industry 
hand semantics existing er constructs retained approach models approach avoid problem legacy diagrams new semantics longer describe existing relational database 
important industrial users legacy diagrams 
possible design nontemporal databases databases parts nontemporal temporal 
stated models rely data model implementation model schemas mapped schemas models schemas subsequently populated queried 
relational model implementation model choice 
temporal er diagrams mapped relation schemas directly mapped regular er diagrams mapped relation schemas 
time valued attributes result mapping er diagrams relation schemas interpreted relational model built semantics relational model 
result queries time varying data hard formulate sql 
models time extended relational models proposed implementation model 
temporal relational models data definition query language capabilities better support management temporal data constitute natural candidate implementation platforms 
research directions number topics subjects ongoing research candidates research 
set criteria necessarily complete may feasible include additional criteria evaluating comparing temporal er models 
indicates taxonomy evaluation criteria charts design space temporal extensions may indicating areas missing criteria desirable 
taxonomy possible ensure evaluate important properties temporally extended er models 
second criteria may applied extensions er model temporal ones 
described criteria specific context temporal extensions concreteness 
interesting step explore application criteria types er extensions spatial spatiotemporal multimedia security er models 
promising direction deserving attention application criteria extensions modeling notations er model 
third systematic criteria design temporally extended er model relevant research direction 
recommend designers temporally extended er models consciously consider er extension respect criterion 
ideal temporal er model easy understand terms er model invalidate legacy diagrams database applications restrict database temporal permits designer mix temporal nontemporal parts 
fourth dbmss industry relational temporal er models ideally include mappings implementation platforms relational model various dialects different dbms products temporal relational models emerging models sql 
challenge high practical relevance design mappings maximally exploit candidate implementation platforms 
ieee transactions knowledge data engineering vol 
may june fifth believe interest design standard textual representation different types er diagrams 
representation serve middle form er model designers provide mappings representation independently provide mappings various implementation platforms 
acknowledgments supported danish natural science council danish technical research council respectively 
ceri navathe batini conceptual database design entity relationship approach benjamin cummings 
:10.1.1.123.1085
chen entity relationship model unified view data acm trans 
database systems vol 
pp 
mar 
date database systems vol 
systems programming series fifth ed addison wesley 
snodgrass valid time indeterminacy proc 
ninth int conf 
data eng pp 

snodgrass temporal granularity indeterminacy sides coin technical report tr univ arizona dept computer science feb 
snodgrass temporal granularity snodgrass ed tsql temporal query language ch 
pp 
kluwer 
snodgrass temporal indeterminacy snodgrass ed tsql temporal query language ch 
pp 
kluwer 
elmasri el semantics temporal data extended er model proc 
ninth int conf 
entity relationship approach pp 
oct 
elmasri temporal query language conceptual model adam bhargava eds advanced database systems lecture notes computer science ch 
pp 
berlin springer verlag 
elmasri navathe fundamentals database systems 
benjamin cummings second ed 
elmasri wuu temporal model query language eer databases tansel eds temporal databases theory design implementation ch 
pp 
database systems applications series benjamin cummings 
elmasri wuu temporal model query language er databases proc 
sixth int conf 
data eng pp 

modeling time dimension entity relationship diagram proc 
fourth int conf 
entity relationship approach pp 

gadia yeung generalized model relational temporal database proc 
acm sigmod int conf 
management data pp 
june 
hadzilacos extended entity relationship model geographic applications technical report computer technology inst greece 
glossary temporal database concepts jensen clifford elmasri gadia hayes jajodia eds acm sigmod record vol 
pp 
mar 
jensen snodgrass semantics time varying information information systems vol 
pp 

term approach include time dimension entity relationship model proc 
second int conf 
entity relationship approach pp 
oct 
modeling information preserving databases consequences concept time proc 
ninth int conf 
large data bases pp 
oct 
kraft er modeller 
working dept information science aarhus school business jan 
lai 
temporal databases model design commercialization prospects data base vol 
pp 

entity relationship model extended describe historical information proc 
int conf 
information systems management data pp 
july 
mckenzie snodgrass evaluation relational algebras incorporating time dimension databases acm computing survey vol 
pp 
dec 
narasimhalu data model object oriented databases temporal attributes relationships technical report national univ singapore 
parent spaccapietra erc object entity relationship model loucopoulos zicari eds conceptual modeling databases case ch 
pp 
john wiley sons 
roddick patrick temporal semantics information systems survey information systems vol 
pp 
oct 
silberschatz korth sudarshan database system concepts third ed mcgraw hill 
snodgrass temporal query language tquel acm trans 
database systems vol 
pp 
june 
snodgrass temporal databases frank campari eds theories methods spatio temporal reasoning geographic space pp 
lecture notes computer science springer verlag 
snodgrass temporal object oriented databases critical comparison kim ed modern database systems object model interoperability ch 
pp 
addison wesley acm press 
snodgrass ahn batory clifford elmasri jensen kline leung roddick segev soo sripada tsql temporal query language kluwer 
snodgrass hlen jensen steiner change proposal sql temporal adding valid time part jajodia sripada eds temporal databases research practice pp 
lecture notes computer science springer verlag 
temporal extensions entity relationship model proc 
th int conf 
entity relationship approach pp 
oct 
database modeling design data management systems series morgan kaufmann 
loucopoulos entity relationship time model conceptual modelling databases case integrated view information systems development ch 
pp 
john wiley sons 
loucopoulos time dimension conceptual modelling information systems vol 
pp 

loucopoulos conceptual modelling formalism temporal database applications information systems vol 
pp 

wiederhold jajodia litwin dealing granularity time temporal databases anderson eds proc 
third int conf 
advanced information systems eng lecture notes computer science springer verlag 
parent spaccapietra terc temporal conceptual model proc 
int symp 
digital media information base nov 
jensen temporal entity relationship models survey received bsc degree computer science mathematics msc phd degrees computer science respectively aalborg university denmark 
currently assistant professor department computer science aalborg university 
research interests include data modeling temporal databases emphasis design temporal databases conceptual logical levels 
christian jensen research professor computer science aalborg university directs center database research 
university arizona prior joining aalborg university conducted graduate studies university maryland 
research interests areas database systems include issues semantics modeling performance 
colleagues receives substantial national international funding research 
member editorial boards ieee transactions knowledge data engineering acm sigmod digital review general chair international workshop temporal databases vice program committee chair best awards committee member ieee international conference data engineering program committee chair workshop spatio temporal database management held conjunction vldb 
continues serve program committee committees number conferences including acm sigmod caise edbt ieee data engineering ssdbm vldb serves regularly reviewer major database journals 
senior member ieee member acm ieee computer society 
