answering xpath queries networks sending minimal views japan advanced institute science technology ishikawa japan ac jp client submits set xpath queries xml database network set answer sets sent back database may include redundancy ways elements may appear answer set elements answer sets may subelements elements answer sets 
client submits single query answer self redundant elements may subelements elements answer 
sending answers optimal respect communication costs 
propose method minimizing communication costs xpath processing networks 
single set queries compute minimal size view set answer original queries 
database sends view set client client produces answers 
show algorithms computing minimal view set queries 
view set optimal includes elements appear final answers element appears 
xml standard data format information exchange dissemination internet 
researches various styles xml information services networks line xml databases provide interactive querying interfaces internet continuous query systems xml streaming systems :10.1.1.9.2861:10.1.1.29.2817
continuous query system push information service users permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference toronto canada register queries system 
system monitors changes data data matching user queries available delivered corresponding users 
xml streaming systems server transmits xml stream clients clients monitor stream detect data interest 
systems kind query language 
languages language called xpath popular 
originally designed component standards stand query language xml information systems simplicity expressive power 
xml data essentially tree node labels xpath tree pattern language extracts xml data set subtrees rooted nodes match tree pattern 
xpath extract subtree rooted element adds edges modifies labels 
xml information services classified categories process queries server side line xml databases continuous query systems process queries client side xml streaming systems 
necessary information sent networks server clients efficient respect communication costs 
server side approach communication cost optimal 
example client submits queries database network answer sets data common sending answer sets separately client optimal sense data sent twice 
example suppose client submits queries asking abstracts papers including xml titles entire papers including xml xpath titles line digital library continuous query system 
includes xml xpath title appears answer sets twice answer query subelement answer second query 
sending answer sets client network optimal respect communication cost 
client submits single xpath query answer self redundant elements answer set may subelements elements answer set 
example suppose client issues query retrieve chapters sections subsections word xml headings 
book section heading xml subsection heading xml queries subsection sent client twice answer subelement answer 
answers xpath queries self redundant 
notice situation occurs user issues single query asking union queries previous example 
worst case client submits query retrieve subtree database tree result sent client far larger database 
self redundancy answers comes characteristic xpath queries answer query set subtrees database tree member answer set may subtree member answer set 
similar phenomenon occur databases quite usual query language create answer bigger database 
example relational databases query product relations database 
server client agree encoding protocol avoid redundancy query answers various ways embedding pointers answers 
research assume server service internet provided submit xpath queries get answers 
environment possible minimize size data sent network examples 
example minimize submitting queries original ones retrieve abstracts papers including word xml titles xpath retrieve entire papers including words xml xpath titles 
server sends answers queries client produce answers original queries results 
scenario data sent network optimal includes data appears final answers duplication 
way second example client submit query retrieve chapters sections subsections xml headings ancestor xml heading 
client extract answers original query answers query 
data sent network example optimal 
way optimize communication cost leaving part query evaluation client fully evaluating queries server 
generalizing examples study problem single set xpath queries compute set queries produce answers original queries answers total size answers minimal 
words compute minimal view set answer original queries 
show algorithms computing view set 
notice view set includes information final answers necessarily guarantee correctly extract 
context database may lost views 
show examples 
server supports full fledged query language xquery write queries embed markers views client easily extract answers original queries 
xpath extract set subtrees database tree modification making problem non trivial property xpath efficiently processable reason researches large scale information services adopt xpath 
techniques shown ways 
way embed intelligent querying agent resides client site 
agent transforms user queries submitting extracts answers views received server 
approach embed proxy server resides continuous query server internet users local network 
users register queries proxy server proxy server registers transformed queries server 
users register queries overlapping answers optimize communication cost internet 
section explain fragment xpath 
show examples clarify problem inherent difficulties formulate problem 
sections show algorithm steps 
algorithm non recursive queries 
meaning nonrecursive recursive queries explained 
second show algorithm single recursive query show algorithm general case 
discuss related 
final section summarizes briefly discusses practicality method 
xpath mentioned xpath evaluated xml tree returns set subtrees rooted nodes matching pattern 
assume query answer form xml tree rooted node labeled ans matching subtrees children xpath processors xalan 
example query answer set subtrees 


xml tree form ans ans fragment xpath language includes main features 
syntax language defined follows 
query absolute location path xpath terminology form union queries difference queries absolute location path matches nodes reachable root paths matching relative location path xpath terminology hand matches nodes reachable paths matching starting nodes 
ordinary set union ordinary set difference 
relative location path composed constructs 
label test matches nodes label negative label test 
matches nodes label 

wild card matches nodes labels 
concatenation location paths 
example matches nodes label children node root database tree 
concatenation require path matching appears immediately beneath path matching 
example matches nodes descendants nodes matching previous query 
represents restricted form recursion call queries recursive queries non recursive queries respectively 
called predicate expression matches nodes reachable paths matching path matching beneath 
example matches nodes depth child node turn child node 
similarly matches nodes depth children children 
negative predicate matches nodes reachable paths matching path matching beneath 
definition include intersection operation computed 
complementation computed assume finite set labels 
add expressive power language assume infinite set labels 
notice 
power combination 
example equivalent 
supported xpath 
xpath directly supported express negative eq join identity equality 
negative expressed absolute location paths negative predicates identity equality expressed built count function shown 
similarly 
directly supported xpath standard express self 
self 
negative predicates expressed 
details xpath standards please refer 
problem analysis section show motivating examples order clarify problem xpath processing network difficulties 
examples non recursive queries consider examples include non recursive queries 
simple examples set xpath queries cause redundancy answers example left side answer subset sending answers separately optimal respect communication costs 
case simple solution submit server produce answer client side extracting elements answer 
assume answer query form xml tree rooted ans node children answer elements evaluating query ans answer 
rest write syntax ans hand case answers overlap partially 
case submit query extract answer client way ans ans similar situations caused union difference negative label tests cases handled way examples respectively 
cases extract answer query answer query subset 
example suppose queries answer superset answer 
case answer form ans 
ans tell elements answer included answer know labels parents original database tree 
way context information database may lost query answers 
case minimize communication cost total size data sent network submitting queries answer produced client side union answers follows ans ans pair optimal respect communication cost answers include data appear final answers duplication 
similarly intersecting queries submit queries produce final answers way ans ans ans ans efficient respect communication cost submitting results sending elements intersection twice 
example source redundancy elements matching query 
redundancy arises answers appear subelements answers 
shown simple examples case answer self redundant elements answer set may appear subelements elements answer set 
cases submit queries respectively extract final answers way ans ans ans examples extract elements matching answer answer includes context information general context information may lost query answers explained may need submit queries shown example submit set queries produce final answers way ans ans ans ans ans ans ans want number submitted queries small possible example merge query extract answers answer ans ans possible merge 
difficult detect cases space limitations consider elimination data redundancy discuss minimization number queries 
previous example need submit algorithm show produces queries 
examples recursive queries examples shown far included non recursive queries queries 
queries include union operator redundancy answers occurs user submits single query 
shown example example query retrieves subtrees rooted nodes database tree 
nodes occur descendants nodes subtrees rooted descendant sent network 
way answer sets recursive xpath queries self redundant nature nested structure xml 
case minimize size data sent network submitting query server query retrieves nodes occur node path root 
produce answer original query way ans extraction answers descendant answers complicated 
suppose query submit query tail eliminates self redundancy answer 
order extract answers answer need queries shown ans ans ans element answer element matched path beneath grandchild node matched database 
need ans shown 
computation extract descendant answers similar computation prefix function classic knuth morris pratt algorithm substring search 
recursive queries need query client submits single union free query 
example suppose query retrieves grandchildren nodes occurring level database tree 
case single query procedure sufficient ans ans procedures extract answers example children answers path database tree node node match included answer path ans answer know labels parent tell extract node 
case correctly extract answer minimizing communication cost submitting queries qa extracting answer way ans ans ans ans ans problem formulation formulate problem study 
xml element descendant xml element write 
write mean 
bag elements bag data sent network may include element define subelement enumeration follows iteration bag union operation elements including multi occurrences 
define partial order follows bag inclusion 
denotes result evaluation query xml tree say set queries 
vm view set answer query iff 
qm 
qm vm formulate problem follows minimal view selection problem set xpath queries 
qn compute view set set xpath queries 
vm 
answer 
qn 
satisfying vm minimal sections show algorithms compute minimal view sets 
algorithm arbitrary number non recursive queries show algorithm single recursive query explain algorithm general case arbitrary number recursive queries 
sake brevity restrict input algorithms language union difference 
extend algorithms language including 
forbid operations input output recursive queries shown sections 
algorithm non recursive queries section explains algorithm computes minimal view set set non recursive xpath queries 
intuition algorithm explain intuition algorithm show simpler algorithm queries 
suppose set non recursive queries 
qn 
simplest case length number element answer qi subelement elements answers queries 
case problem easy 
set queries minimal view answer 
qn 
qi view set extract answers executing qj ans example minimal view qi extract answers ans ans ans ans general length 
qn element answer may subelement elements answers 
deal define set operations generalized upper intersection generalized lower intersection generalized difference self redundancy elimination follows maximal substitute definitions fall back ordinary intersection difference 
notice symmetric 
instances filter operator instance generalized difference 
say self redundant 
properties hold 
proposition equation holds proof obvious definition obvious appears sets proposition self redundant sets disjoint 
proposition self redundant sets pairwise disjoint sense cases proof outline proposition easy show sets intersections implies self redundant 
define operations queries defined set equivalent queries notations denote representative queries equivalent classes rest 
say self redundant 
proposition holds proposition non recursive union free queries self redundant 
proof elements answer non recursive union free query appear level database tree corresponding length query 
element subelement 
proposition apply answers non recursive union free queries 
property holds proposition non recursive union free queries retrieve necessary elements answers duplication queries 
proof answers 
proposition sets include elements 
elements included subelements proposition 
addition proposition sets include duplication sense 
property suggests set sets may minimal view answer proposition just guarantees necessary elements included sets guarantee correctly extracted 
observation develop simple algorithm computing minimal view set nonrecursive union free queries 


expressions include 
assume compute minimal view way 
empty queries queries constitute minimal view 





extract final answers follows ans ans ans ans empty queries constitute minimal view 







extract final answers follows ans ans ans ans 
third line corresponds extraction 
solution directly observation explained slightly simplify view set shown 





view set extract answer exactly procedure substituting respectively 
proof easy show 
easy show result ans 
ans 
equal answer 
example extract answers procedure 
algorithm previous subsection explained intuition algorithm showed simple algorithm queries 
subsection show complete algorithm arbitrary number non recursive union free queries 
simple algorithm computed queries constructs queries may create unnecessary views empty 
hand algorithm shown subsection produces simpler queries include produce unnecessary empty views 
main part algorithm translation queries automata construction product automaton 
set non recursive union free xpath queries translate deterministic finite automata alphabet symbols sym defined sym 
sym sym automata queries automaton fail state 
label relative location path defined 
input queries include query translated automaton form simple sequence 
example suppose set queries queries translated automata shown 
explicitly add fail state automaton 
example shows automaton fail state 
add fail states need compute complementation symbols 
complementation symbols sym denoted sym defined rules corresponding syntax definition sym 

sym sym sym notice complementation symbol represented set symbols 
may need transition rules state fail state 
construct product automata standard way 
difference standard product construction need compute intersection difference symbols 
intersection symbols sym sym defined rules corresponding syntax definition 
list part rules 
undefined 

sym sym sym sym sym sym sym sym notice intersection symbols represented single symbol complementation symbol set symbols 
difference symbols sym sym computed rule sym sym sym sym product automaton intersection difference defined construct product automata queries 
product automaton shown 
notice automata queries fail states forms dag product forms dag 
product automaton constructed way may include paths followed 
example automaton shown transition label followed transition 
path followed paths 
may exist unsatisfiable symbols produced computation intersection difference 
addition original queries submitted users may include unsatisfiable conditions mistake 
determine satisfiability path testing satisfiability set predicates pp 
ppn np 
npm symbol sym pp 
ppn np 
npm path suffix path symbol pp 
ppn np 
npm suffix exists 
example satisfiability path determined testing satisfiability unsatisfiable 
path unsatisfiable 
test satisfiability set predicates follows proposition pp 
ppn np 
npm satisfiable iff prefix ppi contained ordinary sense query containment 
proof prefix ppi contained create path matches ppi 
element children satisfies pp 
ppn satisfies predicates 
determine prefix ppi contained constructing product automaton ppi explained 
product automaton 
qn compute relations operations queries proposition qi contained qj iff sat path 
sn states form 
ei 
sk 
skj ej 
proposition intersection qi qj qi qj union queries corresponding satisfiable paths 
sn states form 
ei 
ej 
proposition difference qi qj qi qj union queries corresponding satisfiable paths 
sn states form 
ei 
sk 
ej 
express intersection difference queries 
words language recursion closed intersection difference 
proofs propositions easy omitted 
computation containment test satisfiability predicates explained computation intersection difference section 
show algorithm 
algorithm non recursive queries input non recursive queries 
qn 
output set queries 
vm corresponding minimal view set list triplets qi vj showing extract answers 
qn 

translate 
qn automata add fail states explicitly construct product automaton 

satisfiable path 
sn state form 
ei 
ei 
eia 
go states form 
ej add view set add qi ans triplet list 
ia 
path state state form 
ej satisfiable add triplet qj ans list 
example product automaton shown algorithm produces view set triplets ans ans ans ans ans ans ans please examine correctly extract answers procedures 
notice view set includes unsatisfiable 
similarly ans included triplet list unsatisfiable 
theorem algorithm correct 
proof outline query added view set step algorithm corresponds simplified version explained previous subsection qi 
qia qj 
qk 
disjoint sets 
jb 
kc 
ia 
jb 
kc 

view extract part answers qi 
qia ans part answers qj 
ans addition queries added view set include duplication 
easy prove proposition number queries evaluated servers clients 
theorem non recursive union free queries 
qn need submit queries server need queries client 
proof upper bound number views larger larger number states form 
ei 
ei 
eia 
product automaton 
need extract answer qi views number queries shorter qi number queries length qi 
takes maximum value 
upper bound number queries evaluated client 
lower bound need views client queries 
qn 
cn distinct 
cn 
want minimize number queries view set merge views iff intersection symbols transitions states corresponding undefined unsatisfiable 
information distinguish elements answer information represented symbols 
intersection answer includes element matches intersection tell element belonging 
discuss issue detail mentioned section 
algorithm recursive query section show algorithm computes minimal view set answer recursive query 
restrict input language algorithms language operations output language algorithms recursive queries includes 
partly language recursion operations closed difference complementation 
example expressed 
xpath standard expressed ancestor axis explain 
assume language ancestor axis 
shown xpath fragments researches closed intersection closed difference complementation 
suppose recursive query form 
pn 
pn 
pn relative location paths include 
query starts matter discussion assume 
shown examples section redundancy answer query occurs ways elements match 
pn pn elements match 
pn suffix pn remaining prefix pn matches suffix pn 
please refer example section 
kind redundancy simply submit view query 
pn 
pn produce final answer applying ans ans pn view 
remove kind redundancy consider set relative location paths length pn 

subsequence pn position position algorithm computes views 
pn 
pn ordinary pn length answers subelements answers 
algorithm computes paths product automaton explained previous section 
result pn empty discarded 
survived view algorithm produces triplets ans ans pn ans 
length pn omitted second contains 
example suppose query 
algorithm examines views computing product automaton algorithm find empty produces view set consisting views algorithm produces triplets ans ans ans ans ans theorem algorithm correct 
proof outline view set include 
pn tail view 
show triplets extract answers 
answers appear answers paths root extracted ans 
call answers top answers 
answers appear children top answers extracted ans answers appear grandchildren extracted ans 
answers appear levels deeper top answers extracted ans pn 
theorem recursive query need queries server length longest non recursive suffix query pn 
client need evaluate queries 
proof algorithm creates views 
client may need execute queries ans ans pn views amounts queries need evaluate ans views amounts lower bound need number views client queries query form 
bk distinct 
bk 
algorithm recursive queries combining intuition shown algorithm previous section develop algorithm computes minimal view set general case set recursive queries 
pl qn 
ln ln expression includes represents 
define prefix paths pp li follows pp 
pj 
ji 
ji empty path matches elements 
create views defined 
li qi qi pp pp qi denote view defined produce triplets qi ans 
li qi ans pl example suppose queries pp pp pp defined 
consider sets sets need consider including pp including pp views created empty 
addition pp pp view queries omitted change semantics entire query 
result create views pp pp pp pp pp pp produce triplets vi ans vi ans vi ans vi ans theorem algorithm correct 
proof outline qi tail view query view set includes top answers 
qn 
top answer appear exactly view set appears qi pp database tree 
view set includes necessary elements redundancy 
view set correctly extract answers 
intuitively algorithm classify topmost answers subelements extracted answers 
algorithm may create empty views 
example 
shown simplified queries discarded 
query simplification empty view elimination need solve containment problem xpath queries including 
techniques shown past researches scope 
theorem recursive queries total length need queries server need queries client 
proof outline different different explained pp need consider including including pp different need queries form ans qi queries pp queries pp lower bound need number views client queries queries 
qn form qi 
distinct aji related large number researches view selection problem 
main goal traditional view selection problem choose set views minimizes cost answering queries limited resource storing views limited cost maintaining 
hand goal research minimize size data sent servers clients networks may increase computation costs servers clients 
similar idea computing minimal views reduce communication costs discussed 
authors discuss problem minimal views context relational databases conjunctive queries redundancy caused join operations 
discuss minimal view problem context xml data nested structure xpath queries language nested data structure redundancy caused nested structure data 
context client server database architecture concepts semantic caching remainder queries proposed studied context xml data 
semantic caching client caches answers previous queries query expressions 
user client issues new query answer partially overlaps answers previous queries client computes submits remainder query retrieves data available cached answers 
general context information may available cached answers query expressions possible correctly extract part answers new queries cached data looking expressions answers cached queries 
example submit section submit extract answers cached answer 
hand problem setting set queries 
divide queries smaller queries submitting extract answers overlapping queries 
addition consider duplication caused answers appearing substructure answers 
optimization communication costs query processing network studied context distributed databases distributed data servers cooperate 
assumed environment clients submit queries special encodings protocols 
view minimization problem studied 
goal minimize views losing power answer queries goal compute minimal view answer set queries 
researches answering queries tree graph structured data views 
goal answer queries view set compute minimal view set set queries 
discussion studied problem xml database systems networks important academy industry 
problem redundancy answers xpath queries sent network wastes network resources 
similar problem occur data models query languages problem occurs especially frequently context xml xpath 
user submits single quite ordinary xpath query answer may include significant redundancy 
problem comes characteristics xml xpath data nested structure language retrieves substructures appearing arbitrary levels 
discussed problem context xml xpath similar problems occur nested data structure query languages retrieves substructure arbitrary level 
solve problem proposed minimal view approach 
set queries compute minimal view set answer queries submit queries asking view set database 
database sends view set client client uses produce answers original queries 
showed algorithms compute minimal view set 
view sets compute minimal size optimize communication costs database servers clients 
problem approach queries minimal view set usually complex original queries may increase computation cost server 
verify problem serious approach practical conducted experiments examine approach improves communication costs practical queries affects computation costs servers 
due space limitations briefly summarize result experiments 
detail experiments reported publication 
test data generated mb artificial auction data xmark 
ran experiments settings 
stored xml data plain file evaluated xpath dom memory xpath processor xalan 
second stored data rdbms oracle standard relational encoding scheme xml researches evaluated xpath transforming sql 
tested various practical queries non recursive queries reduce computation cost server cases 
example tested queries site region item site region europe item site region item description asks complete information auction items north america europe asks descriptions auction items region 
algorithm computes view set consisting site region europe item description total size query results size data sent network reduced 
surprising surprising result computation cost reduced slightly dom setting relational encoding setting 
evaluation cost includes factors proportional answer size view queries complicated smaller answers 
recursive queries evaluate qi directly computation cost high 
expanding union queries reduce computation cost cases 
detail optimization queries produced algorithm shown important 
interesting investigate interaction approach compression approach compresses data sending decompresses client 
compression removes redundancy may offset difference size original answers minimal views 
important 
cherniack zdonik nodine form perfect union intersection difference 
dbpl franklin 
efficient filtering xml documents selective dissemination information 
vldb pp 

amer minimization tree pattern queries 
sigmod pp 

apers 
data allocation distributed database systems 
tods 
barton streaming xpath processing forward backward axes 
icde pp 

benedikt fan kuper 
structural properties xpath fragments 
icdt pp 

calvanese answering regular path queries views 
icde pp 


chan efficient filtering xml documents xpath expressions 
icde pp 

chen niagaracq scalable continuous query system internet databases 
sigmod pp 

chen rundensteiner 
ace xq xquery answering system 
webdb pp 
li 
materializing views minimal size answer queries 
pods pp 

clark derose eds 
xml path language xpath version recommendation 
clark derose eds 
xml path language xpath version working draft 
dar semantic data caching replacement 
vldb pp 

grahne 
query containment rewriting views regular path queries constraints 
pods pp 


accelerating xpath location steps 
sigmod pp 

gupta suciu 
stream processing xpath queries predicates 
sigmod pp 

halevy 
answering queries views survey 
vldb journal 
knuth morris pratt 
fast pattern matching strings 
siam journal computing 
li bawa ullman 
minimizing view sets losing query answering power 
icdt pp 

liu pu tang 
continual queries internet scale event drive information delivery 
tkde 
lud scher mukhopadhyay papakonstantinou 
transducer xml query processor 
vldb pp 

miklau suciu 
containment equivalence xpath fragment 
pods pp 

xpath looking forward 
pp 

peng chawathe 
xpath queries streaming data 
sigmod pp 

schmidt xmark benchmark xml data management 
vldb pp 

xalan 
xml apache org xalan 
