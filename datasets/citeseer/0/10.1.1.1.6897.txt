tiling databases bart inen laboratory foundations computer science school informatics university edinburgh inf ed ac uk hiit basic research unit department computer science university helsinki finland cs helsinki fi 
consider databases provide alternative way extracting knowledge databases tiles 
tile region database consisting solely ones 
interestingness tile measured number ones consists area 
efficient method extracting tiles area threshold 
collection tiles constitutes tiling 
regard tilings large area consist small number tiles appealing summaries large database 
analyze computational complexity algorithmic tasks related finding tilings 
develop approximation algorithm finding tilings approximates optimal solution reasonable factors 
preliminary experimental evaluation real data sets 
frequent itemset mining fundamental problem data mining research studied extensively 
efficient algorithms apriori eclat fp growth developed solve problem :10.1.1.3.2424
new setting finding top closed frequent itemsets minimum length proposed 
small provides small comprehensive representation data time raises question frequency right interestingness measure 
frequency criticized context association rules alternatives offered :10.1.1.13.1494
unfortunately finding objective interestingness measures itemsets hard problem 
additionally allowing measures prune huge search space itemsets harder 
currently techniques rely monotonicity property frequency itemsets 
supersets infrequent itemsets frequent pruned away huge space itemsets 
introduce new objective interestingness measure itemsets 
concept tile area 
informally tile consists block ones database shown 
fig 

example database tiling consisting overlapping tiles darkest shaded area correspond intersection tiles 
call number ones tile area tile database 
collection possibly overlapping tiles constitutes tiling see 
area tiling database total number ones part tiles tiling 
obviously larger tile tiling knowledge represent database 
large tiling consisting small number tiles extremely informative curious content database 
tiling implicitely determines upper bound number different databases consistent database presents small characterization database hand 
consider problems maximum tiling problem asks tiling consisting tiles having largest possible area minimum tiling problem asks tiling area equals total number ones database consists minimum number tiles large tile mining problem asks tiles database having minimum area top tiles problem asks tiles largest area 
furthermore hardness results complexity problems listed propose algorithms solve problems give approximations optimal solutions intractable promising experimental results large real world sparse dense databases 
show itemset constraints considered belong class length decreasing support constraints 
algorithms propose adaptation improvement known pruning strategies length decreasing support constraints :10.1.1.10.9876:10.1.1.28.9396
concept tile entirely new problems consider investigated 
notion tiles similar combinatorial rectangles communication complexity clusters clustering bi sets formal concepts conjunctive clusters learning 
difference setting look exact tiles research instantly relaxes condition exactness studies approximations tiles 
organized follows 
formally state problems section give complexity results 
algorithm problem section 
experimental results reported section 
conclude section 
problem statement set items 
assume finite set 

itemset non empty subset transaction tuple tid tid transaction identifier itemset 
transactional database set transactions 
size transaction number items size database sum sizes transactions database 
transaction database regarded binary matrix size number transactions number items th element binary matrix corresponding equal ith transaction contains item equal 
size equal number ones matrix 
mix interpretations transaction database remainder 
itemset transaction tid covers cover itemset denoted cover consists transaction identifiers transactions cover support itemset respect database cardinality cover 
denote number supp simply supp clear context 
definition tiles tilings area 
itemset database 
tile corresponding defined tid tid cover 
clear context write 
area equal cardinality 
area cover tiling 
ik consists finite number tiles area area ik 
call tile maximal corresponding itemset closed 
recall itemset closed contained larger itemset having support 
tiles considered maximal 
area tiling reflects possible databases exist consistent tiling 
compute upper bound number databases easily area tiling 
number rows number single items 
maximum nm possible databases 
tiling fixes area entries database nm area possible databases left consistent tiling relationship number databases consistent area tiling covers interesting tilings ones maximum area 
tilings reduce number databases consistent tiling 
main goal find algorithm computes maximum tiling 
problem maximum tiling 
database positive integer find tiling consisting tiles maximum area area 
related problem problem finding minimum number tiles covering database 
number measure complexity database 
complexity database small maximum tiling small values regarded excellent representation database 
problem minimum tiling 
database find tiling area equal size database consisting possible number tiles 
order solve problem problem main algorithmic task find maximal tiles area minimum area threshold 
problem large tile mining 
database minimum area threshold find tiles area 
collection large tiles large natural look largest tiles problem top tiles 
database positive integer find tiles largest areas 
analyze computational complexity finding tiles tilings consider simple subproblem finding largest tile database problem maximum tile 
database find tile largest area solution problem important approximations tilings 
theorem 
maximum tiling minimum tiling large tile mining top tiles maximum tile np hard 
proof 
maximum tile problem seen viewing database adjacency matrix bipartite graph looking largest complete bipartite subgraph largest subset edges 
problem known maximum edge problem shown np hard 
correspondence minimum tiling problem np hard 
complexity results follow directly maximum tile special case top tiles problem 
special case large tile mining problem assigned maximum area tile maximum tile problem special case maximum tiling problem 
algorithms section ltm algorithm finding large tiles 
ltm uses branch bound search strategy combined pruning techniques 
ltm algorithm give algorithm ltm finds top tiles 
ltm find approximation maximum tiling database 
approximation algorithm tiling greedy algorithm ensures approximation constant factor optimal solution 
large tile mining database minimum area threshold want find maximal tiles area 
algorithm refine pruning techniques context length decreasing support constraints itemsets :10.1.1.10.9876:10.1.1.28.9396
monotone decreasing function called support constraint itemset called frequent supp 
itemset correspond tile area seen itemset frequent length decreasing support constraint 
area supp iff supp 
algorithms follow similar depth search strategy counting mechanism eclat algorithm variants :10.1.1.111.520
search strategy successfully fp growth algorithm divide conquer mechanism :10.1.1.3.2424
denote set tiles area corresponding itemsets prefix 
main idea search strategy large tiles containing item containing item smaller called conditional database denoted consists transactions contain items removed :10.1.1.3.2424
general itemset create conditional database consisting transactions contain items item item removed 
compute area tile simply need add width tile multiply support corresponding itemset 
adding itemset exactly large tiles containing item item original database large tile mining algorithm ltm shown recursively generates item set 
note di contains large tiles 
order compute area tile need know support itemset representing tile 
value computed exactly eclat algorithm 
algorithm stores database vertical layout input initially called output prune 
occurring cover add occurring cover cover add compute recur add fig 

ltm algorithm 
input repeat occurring ub remove tid cover size tid mli remove tid cover 
changed fig 

prune procedure 
means item stored cover listing explicitly transactions 
way support itemset easily computed simply intersecting covers subsets counting mechanism perfectly suited purposes immediately gives list transaction identifiers apart itemset constitutes tile 
describe ltm algorithm detail 
algorithm initialized line 
line main pruning mechanism executed explained 
mechanism remove certain items candidate set longer occur large tile remove transactions longer contribute area large tile 
line main loop algorithm starts considering item separately 
lines large tile added output set 
lines item projected database created 
done combining item computing cover intersecting covers items line 
line algorithm called recursively find large tiles new database conditional database item treated tile represented itemset 
reasons presentation add details restricting search space closed itemsets maximal tiles considered 
algorithm easily extended techniques charm algorithm closed itemsets generated :10.1.1.111.520
unfortunately area tile meet minimum area threshold simply prune away tiles branch supersets considered branch represent tiles large areas 
possible compute upper bound area tile generated current branch 
upper bound prune procedure shown able prune items search space time reduces size database 
prune procedure consist repeated application node pruning methods lpminer bamboo :10.1.1.28.9396
specifically item database line compute upper bound ub largest possible tile containing 
obtain upper bound count transactions current conditional database containing size occurring 
denote number supp 
upper bound size largest possible area tile containing ub max supp 
obviously compute number need size transaction current conditional database 
size perfectly derivable vertical representation conditional database 
practice efficient store separate array size transaction stored conditional database 
note size transaction current conditional database smaller size transaction original database 
upper bound item database smaller minimum area threshold line means part itemset corresponding tile area larger removed line 
implicitly means size transactions decreased may affect upper bounds items recomputed 
process repeated items removed 
item completely removed database possible remove transactions 
specifically consider number ml min supp number gives minimum size transaction containing generate tile area 
transaction containing shorter removed lines 
prune procedure find size transaction tid size tid 
removal effect upper bound items upper bounds recomputed removed 
top tiles order find top largest tiles adapt ltm algorithm follows 
initially minimum area threshold zero 
algorithm generated large tiles increases minimum area threshold size smallest tiles 
minimum area threshold increased time large tile generated current threshold 
generated tiles area larger increased minimum area threshold course removed 
finding tiling finding tilings close best ones reasonable guarantees feasible theory find tilings anyway 
minimum tiling problem clear best tiling complete tiling database smallest number tiles 
best tiling similarly considered tiling largest area 
data mining due exploratory nature data mining data mining tool support interactive 
example determining value advance unreasonable requirement data analyst 
tool convenient possible explore different values case suggested tiling tiling differ lot 
best case data analyst suggested tiling tiling differ tile 
tilings values determined simply fixing ordering tiles considering tiles ordering best 
clearly kind ordering provide tilings maximum area values approximation ratio guaranteed values simultaneously ordering tiles determined way 
example ordering tiles constructed greedily adding tile covers largest area uncovered parts database get decent upper bounds approximation ratios minimum tiling maximum tiling problems 
theorem 
minimum tiling problem approximated factor log nm maximum tiling approximated factor values simultaneously oracle finds database tiling tile area maxi area 
proof 
problems interpreted instances minimum set cover problem maximum coverage problem respectively set covered corresponds ones database sets cover maximal tiles problem straightforward reduction set cover number maximal tiles exponential size database 
fortunately greedy algorithm set cover gives desired approximation bounds variants problem depends ability finding tile maximizes area area collection tiles 
algorithm approximation bounds follow bounds minimum set cover problem maximum coverage problem 
oracle gives tile covering extra area outside tiling implemented reasonably efficiently adapting ltm algorithm 
compute area tile line ltm algorithm subtract part area covered earlier 
additionally improve prune procedure computing second upper bound takes covered area account 
current upper bound needs take size original transactions account simply remove covered remaining part tile anymore 
store second array containing uncovered size transaction 
array uncovered area candidate tile current conditional database contains item sum sizes transactions contain take minimum bounds ub min ub tid cover size tid replace old upper bound line prune procedure 
note size stores sizes uncovered parts transactions containing item practice solve problems minimum tiling maximum tiling approximation bounds 
experimental evaluation implemented algorithms experimented ghz pentium pc gb memory running linux 
evaluation algorithms substantially different datasets 
mushroom data set dense dataset containing characteristics various species mushrooms originally obtained uci repository machine learning databases 
consists single items transactions resulting ones 
bms webview dataset sparse dataset containing months click stream data commerce website publicly available blue martini software 
consists items transactions resulting ones 
series experiments ran ltm algorithm various minimum area thresholds shown 
seen execution times show feasibility approach account extremely low minimum area thresholds 
minimum area bms webview dataset corresponds ones database 
similarly mushroom dataset minimum area corresponds ones database 
number tiles number generated candidate tiles ltm algorithm various minimum area thresholds shown 
shows dense mushroom dataset contains huge number large tiles sparse bms webview dataset contains modest number large tiles lot smaller ones 
reason number candidate tiles closer actual number large tiles mushroom dataset compared bms webview dataset 
note mushroom database contains transactions minimum area threshold forces discovered tile consists single item 
similarly minimum area threshold larger size transactions guarantees single transaction large tile 
seconds bms webview time consumption ltm ltm minimum area threshold seconds mushroom time consumption ltm ltm minimum area threshold fig 

large tile mining bms webview left mushroom right data set 
plots show execution times ltm ltm algorithms various minimum area thresholds 
number tiles bms webview number tiles large tiles number minimum area threshold number tiles mushroom number tiles large tiles number minimum area threshold fig 

large tile mining bms webview left mushroom right data set 
plots show number tiles number tiles checked ltm algorithm various minimum area thresholds 
percentage covered ltm tiling top tiling bms webview tiling number tiles percentage covered ltm tiling top tiles mushroom tiling number tiles fig 

comparison covered area tilings bms webview dataset left mushroom dataset right obtained running ltm algorithm tiling algorithm data sets different values second series experiments ran ltm algorithm various minimum area thresholds shown 
seen execution times larger execution times standard ltm algorithm shows feasibility approach 
show effectiveness tiling algorithm tested algorithm varying number tiles 
compare plot percentage number ones covered tiling algorithm number ones covered top tiles generated ltm algorithm 
results shown striking mushroom dataset 
ones database covered tiles 
obtain tiling covers database tiles needed 
bms webview dataset slightly tiles needed obtain similar tiling course expected sparsity database 
introduced concepts tiles tilings context transaction databases argued area tile tilings interestingness measure 
tiling implicitely determines upper bound number different databases consistent database presents small characterization database hand 
computational challenges computing different types tilings 
theoretical analysis challenges shows np hard 
practice computing tilings feasible 
powerful iterative upper bounding mechanism developed elegant branch bound algorithm discovers large tiles respect minimum area threshold 
algorithm prunes away lot tiles huge search space possible tiles 
algorithm derive algorithms small adaptations problem finding largest tiles finding largest tiling consisting tiles 
experiments verify efficacy efficiency algorithms 
knowledge discovery point view show marginal number tiles able picture databases hand 
preliminary sense knowledge extraction aspect barely investigated 
main goal introduce problem show feasibility approach 
investigate quality tilings knowledge representations 
thorough experimental evaluation comparison existing approaches frequent itemsets top frequent itemsets postponed follow 
want improve upper bound databases consistent tiling result accurate interestingness measures 
acknowledgments 
wish blue martini software contributing kdd cup data 

agrawal mannila srikant toivonen verkamo 
fast discovery association rules 
advances knowledge discovery data mining chapter pages 
aaai mit press 

ausiello crescenzi kann marchetti spaccamela 
complexity approximation combinatorial optimization problems approximability properties 
springer verlag 



constraint mining formal concepts transactional data 
proceedings pakdd pages 

blake merz 
uci repository machine learning databases 
www ics uci edu mlearn mlrepository html 

dhillon modha 
information theoretic clustering 
proceedings kdd pages 

feige 
threshold ln approximating set cover 
journal association computing machinery 

han pei yin mao 
mining frequent patterns candidate generation frequent pattern tree approach 
data mining knowledge discovery 

han wang lu 
mining top frequent closed patterns minimum support 
proceedings icdm pages 

kohavi brodley mason zheng 
kdd cup organizers report peeling onion 
sigkdd explorations 
www ecn purdue edu kddcup 

kushilevitz nisan 
communication complexity 
cambridge 

inen mannila 
pattern ordering problem 
proceedings pkdd volume lecture notes artificial intelligence pages 
springer verlag 

orlin 
containment graph theory covering graphs cliques 
mathematicae 

peeters 
maximum edge np complete 
discrete applied mathematics 

ron mishra swaminathan 
conjunctive clustering 
proceedings colt pages 

karypis 
lpminer algorithm finding frequent itemsets length decreasing support constraint 
proceedings icdm pages 


tan kumar srivastava 
selecting right interestingness measure association patterns 
proceedings kdd pages 

wang karypis 
bamboo accelerating closed itemset mining deeply pushing length decreasing support constraint 
proceedings siam dm 

zaki 
scalable algorithms association mining 
ieee tkde 

zaki 
hsiao 
charm efficient algorithms closed itemset mining 
grossman han kumar mannila motwani editors proceedings siam dm 
