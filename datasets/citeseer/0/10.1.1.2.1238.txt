centro la ricerca scientifica tecnologica povo trento italy tel fax mail itc url www itc distributed description logics assimilating information peer sources borgida serafini march technical report istituto di cultura limited distribution notice report outside itc probably copyrighted accepted publication 
issued technical dissemination contents 
view copy right tot outside publisher distribution outside publication limited peer communications outside publication material available form authorized copyright owner 
distributed description logics assimilating information peer sources alex borgida luciano sera ni dept computer science rutgers university new brunswick usa borgida cs rutgers edu itc irst trento italy itc 
due availability internet wide variety sources information closely related topics problem providing seamless integrated access sources major research challenge 
problem studied decades especially database community need re ned approach cases original sources maintain independent view world 
particular motivate examples utility directed non injective mappings individuals domains multiple information sources 
description logics served successfully information integration ontology languages extend formalism ability handle kinds mappings 
result called distributed description logics investigate examples desirable properties formal de nitions providing number theorems concerning theoretical computational aspects 
signi cant problem modern information management integration information multiple sources 
standard version presumes framework users accessing single interface data information sources local iss include databases web data les important goal provide seamless access data making users unaware original source information 
achieved providing single global schema traditionally result merging local schemata 
query processing consists identifying relevant iss translating user query collections queries local iss collating answers expressed terms global schema 
traditional approaches global schema de ned integrating local schemas de ning contents views local iss making query processing relatively easy 
levy investigated approach global conceptual schema developed independently local de ned terms 
somewhat di erent related approach preserves identity local user interface 
local system wishes import information available sources related directly kinds assertion indirectly chains relations 
approach appropriate loosely related information sources information appearing web distributed agents source information independent 
concerned investigating second peer peer kind combination 
traditional view database integration holds semantic local may exhibit matches called con icts semantic heterogeneities need resolved order allow information source properly visible source 
rodriguez identify high level categories semantic heterogeneities useful presentation heterogeneities object classes ii heterogeneities class structures iii heterogeneities object instances 
rst categories relate schema thoroughly studied 
con icts third category deal facts may record capital china beijing respectively 
situations may interesting systematic relationships individuals 
example consider case contains personal information credit card purchases contains census information records information households 
correspondence households people identity relation simple functional bijection 
important establish record relationship integrated 
section provide examples complex correspondences domains multiple federated system 
description logics formalisms knowledge representation reasoning 
variety roles databases including description data semantics meta data form conceptual schemata 
turn dl conceptual schemas play central role proposals database integration general information integration :10.1.1.45.6987:10.1.1.33.2070
hand term taxonomies web sites dmoz yahoo commerce stores viewed weight description logic ontologies 
importantly oil current leading contender ontology language semantic web clear example description logic syntax 
tim berners lee vision semantic web explicitly abandons notion universal ontology embraces kind distributed ontologies mind 
reasons carry investigations concerning complex correspondences domains context dls 
start providing examples motivate new kinds relationships peer review related database ontology literature 
section introduce description logics distributed description logics ddl showing examples handled 
section review desirable properties distributed information systems discuss ddl measure 
formal de nitions section section provide theorem shows general conditions ddl reasoning translated reasoning single global ordinary dl 
investigate properties ddl case ontologies simple taxonomies atomic terms dmoz google yahoo provide algorithm reasoning harder original dls 
motivating examples considering variety possible correspondences individuals domains discourse say noted 
simplest case integration individual name toronto occurs somewhat complex situation needs identify match di erent representations real world individual 
case scaling con icts di erent units measure relationship quite systematic described mathematical equations 
cases needs achieved key attributes heuristics persons having name 
way result thought new binary relation objects assumed bijection 
complications may arise situation 
consider case unit measure currency conversion function euro dollars inverse function dollars euro banks add transactions 
single conversion relation sucient acknowledge need directional mappings domains dollars euro euro dollars 
di erent complication arise case mapping domains described extensionally 
example suppose school assigns simple letter grades school allows quali ed plus minus 
rst school corresponds fa ag school way tell 
note partial information important having grade known better having grade 
examples explore intricacies relationship domain elements di erent example 
suppose increasingly dicult courses topic 
university univ ers university univ ers 
universities concerned classes student completed order check pre requisites courses meet degree requirements 
particular universities allow course substituted course harder covers material say 
universities allow credits earned transfered 
univ may decide accept substitute hand univ may accept substitute 
suppose courses modeled concepts extension set students completed 
situation want instances included instances univ subsume instances univ despite univ may necessarily want view subclass courses disagree material 
example 
suppose information married couples information persons 
need express correspondences individuals domains couple mary general relationships information example know couple involves exactly persons 
case contains information individuals sense abstractions individuals similar examples arise situations called materialization abstraction occurs individual standing class re ned view world 
example 
consider situation harvard mit serving needs college libraries town 
libraries information copies books taken available shelf 
hand student database accessed students want know library go need book 
notice student care copies book available abstraction student corresponds harvard mit student wants know material located mit copy currently shelf mit library 
examples reinforce need consider greater detail role mapping domain objects integrated federation 
needs pair general relations just functions connect pair information ow directional 
second aspects mappings speci individual objects related 
couple mary 
general statements mappings individuals 
couple instances correspond exactly person instances 
deals hitherto unexplored aspects useful see considerable prior devoted integration information multiple sources related information integration great deal problem integrating database schemas databases general 
motivated process integrating user views order arrive corporate schema satis es needs 
additional motivation provided advent heterogeneous federated databases especially data warehouses nature integrate possibly radically di erent sources 
key questions research include match schema data level information multiple databases ort devoted heuristics tools nding relationships 
see fairly exhaustive list con icts schema level survey solutions 
relevant concerned languages expressing relationship elements di erent especially relate instance level 
kent provides extensive list problems arise due data level mismatches databases recognizing need domain relationships currencies context dependent salaries vs stock prices di erent currencies 
examines complex solutions domain mapping functions orchestrated integrator functions expresses iris database programming language 
schemalog just representative class declarative languages relating multi databases powerful data restructuring facilities 
ne section reviewing similar approaches 
higher order syntax allows querying schema inter relating schema value identi ers 
similar comments apply integrating heterogeneous semistructured data sources see survey 
di erent declarative approach speci problem data mediation illustrated meta attributes rules deal complex value conversions 
desirable feature approach introduces notion contexts allows automatic invocation conversion functions 
information integration studied eld arti cial intelligence ontologies essential components knowledge rich environment required problems natural language understanding 
ontology supposed collection shared term de nitions agreed community users 
need integrate ontologies arose leave discussion particularly close having carried description logic framework 
integrates dictionaries 
considerable done problem resulting heuristic tools methodologies supporting integration exception shows take local assertions agent sees connecting global ontologies derive global connection 
klein provides review literature distinguishing ontology integration results single ontology weaker ontology combination original ontologies kept 
cases perform ontology alignment involves relating terms ontologies 
closely related terms connected generalization specialization disjointness assertions relate database schema elements 
distributed description logics description logics familiar dls start review aspects relevant 
description logics family object centered knowledge representation formalisms mentioned earlier proven useful design querying information systems including information integration representing ontologies :10.1.1.45.6987
description logics view world populated individuals grouped classes called concepts related binary relationships called roles 
speci dl provides speci set constructors building complex concepts roles programming language type system provides type constructors building complex types simpler ones 
example concept constructors conjunction written value restriction written describe object oriented style classes multiple superclasses constraints members attributes 
examples meant provide intuitive sense constructors possibilities combining dl 
primitive concepts person university integer primitive roles attends integer objects role attribute integer values attends university objects attends role values instances university new england objects located places considered new england attends university new england objects attending universities new england attends university new england persons attending universities new england seen examples description usually corresponds nounphrase unary formula logic 
dls possible construct complex roles 
example attends refer inverse attends role called 
description terms di erent tasks 
de ne new concepts starting members 
example new england may de ned vermont second claim description subsumes general written vd meaning satis es conditions necessity satisfy conditions useful asserting necessary conditions student person necessary sucient conditions provided de nitions 
general statements called axioms relating various terms complex ontology 
example concept constructor representing objects role ller concept student attends ivy league rich person says students attending ivy league universities rich parent 
collections assertions specify terminology describe application domain 
collection called box resembles schema database ontology 
subsumption additional uses 
formal de nition possible deduce new subsumptions just possible deduce new implications logical theory 
example attends university subsumes attends ivy league assuming university deduced subsume ivy league 
provides speci cation algorithm computes new old description subsumes 
useful organizing terminology domain familiar hierarchy detect description incoherent sense hold individual 
incoherence detected checking subsumption empty concept 
third assert membership individual concept way giving partial description 
example male anna asserts anna student male 
addition assert inter relatedness individuals attends anna harvard 
collections assertions individuals partially describe state world form box resembles database state collection tuples relations example 
subsumption assert membership concepts deduce compute arbitrary individual instance arbitrary description possibly box box 
example attends iv league anna deduced assertions assuming harvard turn deduced instance ivy league 
dl knowledge base pair ht ai terminology box uses descriptions valid usual ask speci subsumption membership questions background theory 
description logics quite successful conceptual modeling languages capturing semantics world modeled information source 
done direct modeling result translating traditional conceptual data models extended entity relationship model 
example suppose start typical er relationship enrollment relates entity student cardinality upper bound entity course 
enrollment student course fig 

er diagram introducing roles express er diagram subsumptions 
course functions connecting enrollment object student course 
connects students student connections expressed inverse role 
enrollment connects courses ready proceed new notions wish introduce 
distributed description logics suppose collection information sources potentially di erent description logic dl 
full dl knowledge bases just boxes try express connections way aligning 
pioneering catarci lenzerini proposed continued description logics 
particular subsumption assertions relate descriptions di erent knowledge bases gradstudent int student indicate graduate student part world described student overlapping part world described semantics implies inter schema assertions ect individuals shared respective domains correspondence domain elements identity 
reason part current dl de nition new concept retrieve subset existing set individuals create new individuals 
order deal complex examples turn inspiration ghidini sera ni distributed order logic :10.1.1.21.8187
idea introduce conceptually binary relations ij called domain relation describing correspondences pairs domains called bridge rules constrain relationships implicit manner 
order support directionality bridge rules set jk viewed describing ow information point view importing information jk may di erent kj studies patterns constraints correspondence relationships express bridge rules :10.1.1.21.8187
instance concept instances corresponds instances 
instances corresponding instance 
instance corresponding instances 
domain relation identity relationship 

domain relations study rst kinds bridge rules 
order help keep confusing descriptions various start labeling description dl index written 
talking subsumption single readable formally correct av 
introduce kinds bridge rules de nition 
concepts dl dl respectively bridge rule expression forms called bridge rule called bridge rule bridge rule speci es objects correspond objects ij relation bridge rule states object corresponding pre image concept intuition interpretation bridge rules shown example bridge rule couple person indicate couple corresponding persons normally include bridge rule couple person may persons partners couple 
informally distributed box collection boxes representing local bridge rules grouped sets indicating direction transfer information 
fig 

intuitive interpretation fig 

intuitive interpretation examples revisited recast earlier examples notation distribute description logics ddl brie consider subtle aspects representation 
course correspondences example yield bridge rules allow import appropriate information entail bridge rules concern mappings opposite directions 
example peer peer approach imports information independently 
consider example involving libraries 
boxes tm tm describe information systems libraries 
concepts book corresponding copies books concepts person model 
role taken meant record borrowed book concept book shelf de ned follows book shelf taken person box modeling students information system includes concept called book meaning di erent mentioned abstractions libraries copies book 
bridge rules intended capture fact students see books copies respective libraries book book book book note imply books harvard library seen students database mapping hs may partial 
imply book copy mapped books student require di erent kind bridge rule expressing correspondence certain cardinality 
addition uses role located capture name library student go order get material question assuming available 
convenience contains concept available book lets students tell quickly book available available book located students want hear material located library copies shelf bridge rules follows book shelf located book shelf located shall see consequences ddl reasoning bridge rules subsumption located book follows bridge rules allow infer student located harvard library book instance concept available book de ned earlier 
distributed boxes order deal correspondences speci individuals follow approaches 
description logic suciently expressive state correspondences bridge rules 
example correspondence couple mary example expressed bridge technical note enumerated concepts shiq elements string constants properties 
known language constructs eliminated mutually exclusive primitive concepts rules description logics support concepts formed enumeration 
need introduce individual level equivalent 
de nition 
individual dl individuals dl partial individual correspondence expression 
complete individual correspondence expression 
fy rst kind assertion indicates domain relation ij includes correspondence note couple 
couple 
mary capture fully relationship couple mary additional objects may correspondence couple 
need complete correspondences couple 
distributed boxes connect individual boxes bridge rules distributed boxes 
formal de nitions formal speci cation notions starting semantics ordinary dls 
formal syntax semantics description logics typical dl shiq start atomic concepts constants denoting universe empty set respectively build complex descriptions recursive syntax second column 
additional concept constructor may available shiq enumeration describes concept enumerating instances fin notion interpretation structure familiar studied predicate calculus 
speci cally interpretation pair treats concepts roles unary binary predicates assigning subsets non empty domain 
atomic concepts subsets 
atomic roles distinct values 
di erent named individuals 
interpretation proceeds recursively driven syntax complex concept role constructors shown column 
case recursive concept de nitions interpretation assigns extensions descriptions complex concepts constrain valid interpretations 
de ne formally subsumption introduce convenient notation talk interpretations satisfying boxes 
particular dl interest basis proposed daml oil language expressing web ontologies 
concept construct name syntax semantics primitive concept top concept 
bottom concept conjunction disjunction negation 
value restriction fd 
exists restriction fd 
number restrictions nr fd 
jr ng nr fd 
jr ng quali ed number restriction nr fd 
jr ng nr fd 
jr ng role construct name role semantics primitive role role inverse fig 

syntax semantics shiq description logic ij vd read subsumes interpretation ij de nitions subsumptions satis ed tj vd subsumes background theory box ij vd interpretations ij de nitions extended boxes rules ij ij ij ij assertion kj ij interpretations ij similarly 
particular description logic complexity reasoning associated various questions wants subsumption concept membership 
complexity depends set constructors ered language 
ort dl research identifying di erent sets constructors decidable inferences characterizing computational complexity 
variable free nature dl formalisms limit expressive power time contribute ability reason eciently incomplete information see 
formal syntax semantics distributed description logics just precise restatement notion ddl introduced previous section 
de nition 
set indexes fdl collection description logics 
distributed box dtb bi consists set ordinary dl boxes ft set fb ij bridge rules descriptions corresponding language dl bridge rule ij concepts languages dl dl respectively 
distributed box dab hfa ci consists set boxes fa set fc ij partial complete individual correspondences descriptions corresponding language dl correspondence rule 

fy ij individual name dl dl ddl knowledge base pair ht ai consisting distributed box distributed box provide semantics distributed description logics local interpretations individual information systems connecting domains relations ij de nition 
distributed interpretation hfi ri consists interpretations dl domain 
function associating binary relation ij 
ij denote fd hd ij 
ij denote ij 
de nition 
distributed interpretation satis es written ij elements dtb bi clauses ij ij satis ability bridge rules ij ij satis bridge rules ij satis local subsumptions ij 
satis local boxes ij ij satis es bridge rule tj vd distributed interpretation ij implies ij vd 
concerning individuals de nition 
distributed interpretation satis es elements dab hfa ci clauses ij 
ij satis ability individual correspondences ij 
fy ij fy satis ability complete correspondences ij satis ability local assertions ij satis ability local assertions ij ij assertion 
satis ability local boxes ij ij satis es individual correspondence aj distributed interpretation ij implies ij 
similarly 
library example revisited formally ignoring libraries tm say order simplify matters de ne distributed box lib ht hs hs contains single bridge rules book shelf located provides example distributed interpretation lib lib db book db person taken philosophical investigations harvard book philosophical located investigations rhs fig 

example distributed interpretation lib note bridge rule satis ed lib book ih contained book hs book ih subset book philosophical 
lib satis es bridge rule hs book shelf ih hs db superset located 
recall lib located book veri ed considering possible distributed interpretations 
example exhibits common pattern inference ddl starting subsumes mapped bridge rule mapped bridge rule conclude subsumes example inference suppose contains subsumption assertion villa bridge rules dwelling villa cottage conclude cottage 
inference illustrated diagram provide intuition 
horizontal arrows describe bridge rules 
cottage villa second residence isa isa fig 

example inferred subsumption relationship dashed line ddl properties ddl section restrict attention simplest kinds ddl distributed boxes involving single set bridge rules ht list intuitively desirable properties system motivation 
deducing things distributed system local information available 
formally vy vy 
absence bridge rules information pass component systems 
formally ht ij vy vy 
ddl exhibit directionality back ow said contains bridge rules setup provide information ow set ect reasoning formally 
allow ective reasoning need feedback loop new inferences 
distributed system allow local inconsistencies pollute entire system sense information satis able deductions sites ected 
formally mean inconsistent vy vy 
easily seen de nition ddl rst properties component boxes consistent 
far back ow concerned unfortunately possible bridge rules enforce certain properties descriptions example rule requires distributed interpretation property extension concept empty individuals correspond 
kind reasoning translated new subsumptions depend show introduce role constant universal role relates possible pair objects universal role consider dtb gg bridge rule gg 
entails formula universal role interpretation empty object object related universal role interestingly possible prove back ow occur 
example components dtb involve shiq description logic support universal role course consistent 
result formally space formal derivation 
inconsistency ddl far inconsistency propagation concerned unfortunately component boxes unsatis able distributed interpretation satisfying entire dtb possible assertion automatically entailed unsatis able dtb 
kind inconsistency propagation peculiar ddl feature logic formal models multiple components 
looking issue closely context 
de nition seen dtb unsatis able distributed interpretation satisfy local bridge rule instance combination thereof instance hfa ggi 
conversely satis able entire dtb unsatis able distributed interpretation deduced entailment quanti es set distributed interpretations case empty 
unsatisfactory state airs distributed consider possibilities case just unsatis able want ect reasoning especially back ow stance 
reasoning reduce reasoning just unsatis able desire inconsistency infect reasoning point form vy entailed help integrator desirable able distinguish cases inconsistency due ect bridge rules 
simple syntactic solution available just check local tbox consistency de ne interpretations exclude inconsistent component prefer nd semantic solution having properties order sure coherence 
introduce new special dl interpretation 
original non empty domain denotation description domain 
intuitively provides interpretation locally inconsistent box subsumption satis ed including 
means dtb inconsistent box distributed interpretations fi ones means de nition entailment quantifying empty set distributed interpretations 
addition special interpretation change set theorems set logical consequences component dl maintains formal computational properties 
suppose repeat previous de nitions encompassing notion satisfaction obtain satis es entails proposition shows inconsistent desired ect generally get back ow 
proposition 

proof 
recall general de nition vn interpretation vn arbitrary model show 
consider distributed model ffi 
satis es assumption satis es prior comment concerning right hand side bridge rules corresponds set 
satis ed 
fi includes 
case inconsistent proposition 
inconsistent box ht vf vf obtained extending bg 
shows inconsistent results ected bridge rules 
proof 
model fi 
distributed interpretation set bridge rules clearly far bridge rules note construction 
rules automatically satis ed 
hand concept appearing right side rule required property mapping satis es rules possibly ones denotes empty set 
denotes empty set case arise 
get hypothesis vf relating ddl ordinary dl interested nding connection dls allow transfer theoretical results complexity analysis reasoning techniques extensive current dl literature 
building global dl encodes information available local boxes bridge rules ddl 
start creating language gdl descriptions global dl 
suppose family description logics fdl primitive concept resp 
role dl resp 
primitive concept resp 
role gdl 
gdl concept role constructors appearing dl gdl permits equivalents composite descriptions dl gdl usual top bottom concepts case distinguished tops bottoms hierarchies dl ordinary concepts names 
emphasize symbols top bot gdl special set role symbols ij simulate domain relations additional role symbol strictly technical reasons 
start providing translation dl concepts roles concepts roles global dl extending map entire ddl boxes 
unexpectedly translation recursive structure concepts dl operators 
emphasize view concept role functors take arguments simpler descriptions 
example viewed expression expression constructor 
mapping de ned recursively follows 
atomic concepts roles 
atomic base cases 

concept constructor arguments top 
complex concepts translated rst translating constructor arguments intersecting domain top 
role constructor arguments 
complex roles translated rst translating arguments 
example likes teacher produces top likes op teacher ready produce global dl box de nition 
applying dtb bi yields box language gdl consisting axioms 
copies axioms local boxes 

translations bridge rules value restrictions ij ij bridge rule 
translations bridge rules existential restrictions inverse ij ij bridge rule equivalent top role role conjunction de nition constructors rarely dls 

restrictions role ij connects objects ij op range ij 
top ij ij unde ned outside 

restricting bot incoherent concept 
bot 

ensuring top proper local top hierarchy atomic concept dl 
ensuring top empty op 
ensuring role domain range top top op role dl range 
top unde ned outside 
propose circumstances entailment reduced ordinary dl reasoning translation tj vy proof usual constructing appropriate interpretation conversely 
turn proof correctness constructions relies induction structure concepts 
proof depends concept role constructors particular dl involved 
fact proof quite similar great variety constructors try state general terms order common part proof 
start noting semantics descriptions compositional denotation arg argn function denotation arguments 
example equal associated semantic function xr xc fd 
xr 
function depends interpretation arguments case set 
imagine general scenarios consider constructors depend explicit way 
require function dependence explicit additional argument dy instantiated 
getting denotation particular concept constructed 
example take arguments xr xc dy xr xc dy de ned fd dy xr expressed 
semantic functions property interest de nition 
concept constructor semantics expressed arg argn arg arg function dy de nition contains bn 
sets 
subset called local constructor satis es condition bn 
bn case arguments constructor concept role description number restrictions argument integer extended evaluate concept constructors bn 
bn role constructor 
main result theorem 
suppose dtb fdl concept role constructor local 
tj vy proof 

fi fr ij interpretation 
de ne interpretation domain 

disjoint union domains dl interprets gdl rule atomic concept atomic role 
ij equal ij start verifying arbitrary concepts dl proof structural induction base cases atomic concepts roles hold construction 
consider composite concept description arg argn arguments descriptions objects invariant value interpretation numbers 
arg argn top arg argn arg argn arg argn hand arg argn arg argn 
letting 
arg 

de nition local constructor 
arg argn arg argn equal arg argn identical argument holds role constructors 
fi fr ij interpretation satis es rst need show 
consider various items de nition 
vw result satis es subsumptions item 
satis es items es bridge rules item de nition axioms item satis ed interpretations domains 
nonempty turn interpretations top remaining items follow fact model theory domain satis es 
fact get vy ij part proof starts arbitrary interpretation 

de ne mappings 
dl 
atomic concepts roles 
need show 

interpretation dl requires verifying non empty set true axiom satis ed de nition 
axiom de nition atomic concepts axioms atomic roles 
axioms proves argument case 
rest proof follows way previous part 
corollary uses properties constructor describe collection familiar concept role constructors allow translation ddl reasoning dl reasoning go 
corollary 
equivalence tj vy holds dl ers subset concept constructors fc ud td npd npd role role role constructors proof 
provide constructor de nition corresponding semantic function 
concept semantics constructor function uc xc xc dy tc xc xc dy xc dy fd dy forall xr xc dy fd dy xr exists xr xc dy fd dy xr xc nr xr xc dy fd dy cj ng nr xr xc dy fd dy cj ng xr xr dy fd dy xr xr role semantics constructor function inverse xr dy compose xr xr dy xr xr ur role xr xr dy xr xr tr role xr xr dy xr xr straightforward demonstrate constructor local notes dy semantics role constructors case concept constructors appears form fd dy property fd fd ready theorem obtain signi cant rewards proposition 
ddl dl contained decidable description logic dl primitive roles supports quali ed existential restriction ii arbitrary subsumption assertions boxes decision procedure dl decide unsatis ability entailment 
proof 
know reasoning equivalent ordinary dl reasoning 
proof relies observations design axiom involving ij form ij ij axiom form equivalent allows axioms involving ij rewritten involve quali ed existentials ij point replace ij new role ij removes need inverse roles universal restrictions 
get corollaries dl dlr shiq reasoners determining examples concept role constructors satisfy conditions required theorem role complement identity role role constructor semantic function written dy 
hypothetical concept constructor denotes objects related role concept domain interpretation 
constructor xr dy fd dy xr dy 
second dy body 
construction theorem extended deal individuals boxes adding language gdl individual names ind corresponding individuals appearing dl extending ind ind adding axioms top ind indicating restricted interpreted sub domain engendered representation local top concept 
corollary shown apply constructors involving individuals fills syntax semantic function ind fills xr fv vn dy fd dy fv xr find oneof vn fv atomic ddl practical applications web ontology simply list words organized generalization hierarchy 
scheme visible topic areas search sites dmoz google yahoo 
taxonomies terms widely commerce sites www standard net unspsc www unspsc com 
lightweight ontologies correspond dls concept constructors atomic names 
opportunity de ne complex descriptions box describes essentially hierarchy identi ers 
computation subsumption reduces computing transitive closure boxes additional services provided actual systems visually reduced partial order redundant links link answer subsumption questions vy may take constant time tree hierarchies potentially little trees preprocessing nal hierarchy 
obvious need integrate simple ontologies wants provide access variety related resources 
example show integration ontologies software repositories downloads com provide seamless retrieval software multiple sources 
ontologies especially commerce expected change daily de nitely want tied distributed system 
approach peer peer coupling reasonable case 
example process starts expressing statements link terms ontologies usually additional subsumption relationships holding terms ontologies 
deduce relationships terms reasoning box union original ontologies cross relating subsumptions 
framework provides re ned tool bridge rules 
question case reason ectively resulting ddl 
natural course theorem transform problem ordinary dl reasoning global dl 
aspect approach original dl atomic concepts theory uses quali ed existential quanti ers known subsumption computationally dicult general 
contrast situation atomic hierarchies mentioned 
hope reasoning looks carefully translation contain nested existential restrictions 
exploiting hole prove interesting result theorem 
dtb ht involve atomic concepts 
tj gv inference rules bottom top bottom vx re ex vy isa vy vz vz trans general continue interested tj vf derivable integrates terminology ontology addition bridge rules form respectively 
theorem proofs essentially chains subsumptions interspersed switches rules switches back rules shown obvious surprisingly hard ev bv fig 

intuitive shape subsumption proofs ddl prove formally possible inferences importance theorem 
recall assimilating information terminologies wanted obtain reduced hierarchies preserve fast access preprocessing nal hierarchy 
proceed single wholesale action previous theorem add subsumption bridge statements incrementally 
case waste done processing large 
shows smaller number additions bounded square number bridge rules 
returning observation form proof precompute cases switches possible 
particular collect bridge rules bridge rules va incorporate corresponding subsumption vh assuming computation fast nding additions quick process desired results additional links number bridge rules 
convenience drop pre xes pre xes note cases vg holds equivalent far sees ddl bow tie situation imply ddl corresponding identical inconsistency 
advantage allowing non identity directional mapping connecting domains iss 
note general pre process bridge rules eliminate redundancies observing vh rule redundant removed ddl 
generally remove rule va vh similarly rules vb vg implies second rule removed 
summary related seminal catarci lenzerini integrating iss described dls implicit assumption local iss notion individual objects set subsumption assertions relating argued cases loosely allied peer peer single global view conditions need relaxed allowing general correspondence relationships objects local domains having directed import assertions 
closely related calvanese interesting detailed mechanism specifying data integration context data warehouses 
conceptual data model speci ed dl sense provides global terminology local iss relation schemata connected datalog rules augmented important information concerning keys domains 
aspect distinguishes corresponds closely speci cation reconciliation correspondences including ones conversion matching merging speci data 
thought describing di erent aspects instance level connections similar domain relationships 
characterized rules declarative part procedural part performing operations conversions 
useful practical applications converting currencies tied back conceptual schema implicitly ect relationships 
contrast approaches reviewed earlier ddl extends reasoning available ordinary schemas case multiple schemas aligned arbitrary binary correspondences individuals 
reasoning wide variety tasks including query re formulation dealing partially speci ed individuals surveyed 
emphasized approach lends situation multiple ontologies merged integrate information source assimilated 
stuckenschmidt provides additional nice motivating example local ontologies agents time provides testimony potential appeal approach distributed description logics earlier workshop 
identi ed desirable properties aligned dl back ow localizing ect inconsistencies infect reasoning entire system 
interesting results obtained translation ddl reasoning dl reasoning 
representation target dl knowledge base requires presence quali ed existential restriction dl constructor ability reason acyclic background axioms needs local allows complexity results reasoning algorithms transferred ddl local theories come decidable logics shiq dlr 
taken closer look case ddl concept constructors ones atomic concepts organized subsumption hierarchy 
interest correspond majority ontologies currently especially web 
case showed back ow reasoning needed compute entailment needed compute regular entailment addition relatively small number pre computed links hierarchy ontology imports information 
open questions ones concerning behaviour ddl local boxes presence absence cycles domain relations 
investigation greater variety bridge rules especially ones practical preserve useful ddl dl translation theorem 

rakesh agrawal alexander borgida jagadish 
ecient management transitive relationships large data knowledge bases 
sigmod conference 
arens knoblock shen 
query reformulation dynamic information integration 
intelligent information systems 
tim berners lee 
semantic web represent 
parenthetical discussion web architecture feet 
semantic web roadmap 
september 
www org designissues html 
description logic handbook eds 
baader calvanese mcguinness nardi patel schneider cambridge university press january 
bergamaschi castano 
semantic integration heterogeneous information sources 
data knowledge engineering 

martin van beck incremental encoding multiple inheritance hierarchies 
cikm 
borgida 
description logics data management 
ieee trans 
knowledge data engineering 

buchheit donini schaerf decidable reasoning terminological knowledge representation systems 
arti cial intelligence research volume pages 

calvanese lenzerini nardi 
unifying class representation formalisms 
arti cial intelligence research 

diego calvanese giuseppe de giacomo maurizio lenzerini daniele nardi riccardo rosati 
description logic framework information integration 
proc 
th int 
conf 
principles knowledge representation reasoning kr pages 

calvanese de giacomo lenzerini nardi rosati 
information integration conceptual modeling reasoning support 
proc 
coopis pp 

diego calvanese giuseppe de giacomo maurizio lenzerini daniele nardi riccardo rosati 
data integration data warehousing 
int 
cooperative information systems 
calvanese de giacomo lenzerini nardi rosati 
principled approach data integration reconciliation data warehousing 
proc 
intl 
workshop design management data warehouses dmdw heidelberg germany 

catarci lenzerini 
representing interschema knowledge cooperative information systems 
international journal intelligent cooperative information systems 

florescu levy mendelzon 
database techniques world wide web survey 
sigmod record sept 

ghidini sera ni 
distributed order logics 
gabbay de rijke editors frontiers combining systems studies logic computation pages 
research studies press 

horrocks patel schneider van harmelen 
reviewing design daml oil language semantic web 
proc 
aaai 

deborah mcguinness richard fikes james hendler lynn andrea stein 
daml oil ontology language semantic web 
ieee intelligent systems vol 
pages september october 

horrocks sattler 
description logic transitive inverse roles role hierarchies 
logic computation 

kashyap sheth 
semantic schematic similarities database objects context approach 
vldb journal 

kent 
solving domain mismatch schema mismatch problems object oriented database programming language 
proc 
vldb pp 


klein 
combining relating ontologies analysis problems solutions 
proceedings ijcai workshop ontologies information sharing seattle usa august 

knight luck 
building large scale knowledge base machine translation 
proc 
aaai 
lakshmanan sadri subramanian 
logic algebraic languages interoperability multi database systems 
journal logic programming nov 

levy rajaraman ordille 
query answering algorithms information agents proc 
aaai 
deborah mcguinness richard fikes james rice steve wilder 
environment merging testing large ontologies proceedings seventh international conference principles knowledge representation reasoning kr breckenridge colorado usa april 
eduardo mena illarramendi alfredo automatic ontology construction multiagent software gathering service proc 
workshop cooperative information agents iv springer lncs pp 

mena kashyap illarramendi sheth 
imprecise answers highly open distributed environments approach information loss multi ontology query processing 
int 
journal cooperative information systems december 

massart 
materialization powerful ubiquitous abstraction pattern 
proc 
vldb pp 


rahm bernstein 
survey approaches automatic schema matching 
vldb journal 
dec 

rodr guez 
intelligent access heterogeneous information 
baader jeusfeld nutt eds proc 
krdb athens greece august pp 

siegel rosenthal 
semantic values facilitate interoperability heterogeneous information systems 
acm tods june 

sowa 
building sharing merging ontologies 
www com ontology htm 
stuckenschmidt 
exploiting partially shared ontologies multi agent communication 
cooperative information agents vi cia springer lncs 
proof theorems reasoning description logics standard reasoning questions involving descriptions include checking subsumption satis ability 
reasoning algorithms dls fall categories 
normalize compare concepts put normal form reduces redundancy explicit information implicit subsumption checked comparing normalized concepts 
tends ecient operation implementations languages expressive power limited computational complexity low cases reasoner incomplete 
case unsatis ability concept detected normalized empty inconsistent concept 

tableaux satis ability concept tested trying construct model interpretation denotation concept empty 
approach applied expressive dls chief advantages reasoner proven complete 
tableaux provers determining subsumption vd holds reduced testing concept unsatis ability 
interested tableau reasoning particularly details alc supports complete reasoning theories 
useful demonstrating indirectly certain properties restricted dls standard completeness proof techniques apply example lack negation 
typical dl tableau algorithm starts description tested satis ability starts partial model asserting individual named written 
algorithm repeatedly takes candidate partial model constraint system tries grow complete repeatedly expansion rules example expansion rule adding partial model set containing assertion 
attempts construct model lead contradiction occurrence inconsistent descriptions original concept unsatis able 
expansion rules nondeterministic sense suggest alternative successor partial models 
example expansion rule concept disjunction adds atb 
said want examine attempts nd models keep track expansion rule applications proof tree nodes associated partial models edges implicitly labeled expansion rule application producing 
partial model collection assertions form called individuals arbitrary description role identi er 
application expansion rule introduce nodes contain new individual assertion 
notation diagrams write node part set child node indicate expansion rules alc language leave unexplained technical terms concerning blocking play role analyses 
rules suppose leaf node proof tree individual partial model 
node said clash individual fa atomic node called closed clash proof tree called closed leaf nodes clashes 
proof tree represents refutation indicates formulas root form unsatis able set 
subsumption reduced testing unsatis ability interested closed proof trees 
figures shows examples proof trees 
expansion rules check formedness proof tree 
secondary conditions parentheses applying rules algorithm terminate acceptable proof tree super uous branches resulting applying rules rst condition satis ed 
terminology notation somewhat non standard order facilitate presentation proofs reduce confusion notation 
example 
normally written add labels 
rule un blocked fm add proof tree unique child node fm rule tn blocked fm add proof tree child nodes fm fn rule blocked add proof tree unique child node fp new individual appearing proof tree 
node called rule blocked add proof tree unique child node fc theory set descriptions apply individual encode box theory vn vn time new individual added add assertions tn vn presence due axioms form vn 
denoted usually leave implicit 
fig 

tableaux rules alc goal section prove theorem theorem 
dtb ht involve atomic concepts 
tj gv inference rules vx bottom top 

bottom vx re ex vy isa vy vz vz trans approach ddl know theorem tj vn 
working dl theory 
prove inference rules sucient explain refutations produced expansion rules alc known complete 
cu atb atb rule atb rule atb rule rule fig 

examples proof trees dl notational abbreviations conventions capital letters possibly decorated concepts stand atomic identi ers write top emphasize just ordinary concept name proof 
similarly capital letters stand 
similarly written top 
letters stand concept form atom top top 
general description 
abbreviation recall main role symbol theory role symbols 
continue write top similarly abbreviation case dl dl concept constructors atomic identi ers de nition theory contains kinds axioms alongside form descriptions apply individuals abbreviated form subsumption axiom term axiom term abbreviation av atb gv gt av gv gt top 
top 
top top top top top top top proof require terminology de nitions 
de nition 
individual family individual chain individuals roles 
family individual family set individuals family basically family individual set individuals proof tree rules depends existence de nition stating things succinctly 
crucial properties proof trees proofs de nition 
root node proof tree tr element said essential tr closed conditions holds participates clash complement tr complement 
role rule tr add new node new individual tree rooted closed 
participate clash presence may permit clash manifest 
node fs mg rule add essential note de nition circular atomic cases recursive cases reduce rst require checking closedness 
normalized replacing tm observe tr closed proof tree rooted essential proof tree obtained removing nodes tree tr valid proof tree closed 
need deal quasi minimal proof trees times purpose introduce notion pruning cuts obviously unnecessary parts proof tree leaf merging nodes eliminating path de nition 
node proof tree 

closed application expansion rule pruned eliminating subtree node 

suppose node child non essential added rule application omitted merged 
suppose node child redundant added 
rule application omitted merged 
suppose descendant individuals family substituting closed proof tree tr yields closed tree tr merge tr tr observe pruning closed proof tree results closed proof tree 
high level demonstration theorem consists closed proof tree original subsumption rooted manipulating semi normal form repeatedly reorganizing uncover portions translated derivations proposed proof theory 
demonstration series lemmas propositions statement proof appear 
inductively applying lemma closed proof tree reorganized collection small trees hanging little tree tr starts rest tr involves expansions adding assertions form 
furthermore lemma subtree tr rules adding terms form postponed till just lower subtree tr closed pruned proof trees said semi normal form 
propositions show original proof tree starting fe 
essential case proposition vf inference rule bottom vf get 
essential case proposition essential 
proposition inference rules top bottom yield vf 
proves original theorem 
lemmas propositions proofs 
results talk reorganizing closed proof tree moving certain subtrees 
key reorganization subtree tr contained old root node new root node 
lemma 
closed proof tree possible exchange application rule creating child node adding rule creating child node adding see figures resulting closed proof tree conditions holds result expanding added rule ii result expanding added rule 
iii result expanding introduced rule 
tr tr tr tr tr tr tr fig 

swapping expansion rules tr tr tr tr fig 

swapping expansion rules proof consists checking case reorganization shown diagram permissible 
tr tr fig 

swapping expansion rules lemma 
proof tree tr node inside reorganized subtree tr hanging contains expansions adding expressions form family 
proof 
tn expanded movement node blocked possible family expansion repeatedly moved expanded add upward movement expansion blocked 
things original theory result expanding moved 
movement expansion blocked addition addition family rst obstacle remains requisite introductions appear 
lemma 
pruned proof tree size greater essential atom root rewritten encounter immediately underneath expansion tm individual 
done increasing size proof tree ecting closed nature 
essential resulting tree pruning 
similarly replacing 
proof 
pruned tree size greater contain node tree rooted introduced come assertion form tm 
sub terms form os ignored 
rst case proof tree reorganized clash occurs immediately child increasing number nodes 
proof tree essential essential prune tree way original clash disappear path pruned 
di erence tr node reason path disturbed mor redundant essential path tree tr way left resulting pruned tree 
second case essential individual family semi normal form introductions appear allowing proof tree expansion subtree closed 
propositions establish form proof subtrees resulting introductions proposition 
tr closed tree rooted possibly having 
essential property essential essential vc essential 
proof 
proof induction number nodes pruned proof tree 
convenience lead confusion 
essential tree size clash participate essential 
essential 
rst case inference rule re ex 
second case vc rule re ex 
case tree pruned expansion node rst clash occurs 
possibly essential suppose tree size greater 
essential clash tree 
tree pruned size lemma reorganize tree introduce right increasing size 
resulting tree forms 

fc cg child added due expansion 
case case vc re exivity plus essential description needed close child node 

alternatively clashes tm children closed 
due axiom vm axioms form tm recall letters stand concepts form 
tree pruned essential 
induction cases 
dv vd creating branch leads 
transitivity 
induction essential essential things cause clashes alternatively dvd vd transitivity 
induction thing property essential 
fd assertions form added statements hold replaced concluding proof 
proposition 
node root tree tr essential positive atoms may nd 
essential node tr top expanded add top 
proof 
induction size proof tree 
suppose pruned closed tree single node rooted essential 
clash positive 
recall normalized tm constructing theory 
essential positive atoms form possible contradicting assumption closed tree size 
assume trees size smaller kind described suppose pruned tree size essential 
clash 
come expansion kinds sources axiom top claimed applied td essential proof tree pruned 
proof proposition lemma reorganize proof yield tree children top added immediately closed added closed subtree size 
means closed tree essential essential positive atom positive atoms added step 
contradicts inductive assumption tree size deal case essential positive negative atoms proposition 
proof tree form figures essential top essential tr tr tr tr tr tm tr tr tm tr tr tr tr fig 

impossible proof tree proposition proof 
proof tree form tree tr ected top axioms family 
structure proof tree assertions expanded rules tr create new nodes top essential proposition essential subtree tr essential thing proof tree tr depends family closed version tr replaced situation occur proof tree clause de nition pruning 
repeat variants propositions nodes essential concepts form proofs extensions ones additional axioms just form tf proposition 
tr proof tree rooted essential property 
essential note need 
proof 
induction number nodes proof tree 
drop convenience 
essential tree size argument applies proposition suppose tree size 
clash root introduced terms form corollary 
theory way introduced expansion tm due subsumption axiom vm case proof applies proposition proof completed 
case essential means node closed subtree top essential just proposition 
propositions introduces pruned proof 
consider cases 

essential introduced proof proposition implies av essential essential top introduced leading proposition top ins rule top gives av 
transitivity 
case av get 
isa inference rule turn empty inference rule transitivity twice get desired 
tr tr tr tr tr tr fig 

proof tree movement making rules adjacent con icting 
introduced expansion 
proof tree form recall form 
proposition leads av inference rule isa 
transitivity rules building tree lead vg 
problem prove 
purpose re organize increasing number nodes proof tree second part 
variants depending number children 
essential induction gv gg 
transitivity vg non negated atoms added 
proposition 
semi normal proof tree subtree tr rooted node contains essential essential proof 
proof proposition inductive case consider case clashes case clashes tr closed essential introduced asserted 
tree rooted closed 
come 
proof tree looks left side rules swapped 
re balance tree rules successors see second tree 
essential node essential unnegated atoms induction tree exist size tr size tr size original tree proposition 
root original proof tree essential proof 
proposition essential relevant part 
consider rst branch root proof tree caused expansion tm tm left subtree essential negated atom contradicting propositions 
proof expansion gt essential analysis proposition shows subtree single negated essential atom positive ones contradicts proposition 
leaves case rst step expanding formula form op 
top essential proposition top 
possibility 
top essential proposition top 
way op 
rule inference isa providing 
axioms form op result holds 
leaves case proof tree place con icts occur node caused op top essential 
means 
indistinguishable original proof tree pruned substituted contradicting nature 

