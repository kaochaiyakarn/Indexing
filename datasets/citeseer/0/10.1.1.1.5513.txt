modeling querying biomolecular interaction networks marc vincent danos fran ois fages vincent sch chter december introduce formalism represent analyze protein protein protein dna interaction networks 
illustrate expressivity language proposing formal counterpart kohn compilation mammalian cell cycle control 
effectively turns static knowledge discrete transition system incorporating qualitative description dynamics 
propose computation tree logic ctl query language querying possible behaviours system 
provide examples biologically relevant queries expressed ctl mammalian cell cycle control show effectiveness symbolic model checking tools evaluate ctl queries context 
years molecular biology engaged large scale effort elucidate cellular processes terms biochemical basis molecular level 
mass production post genomic experimental results mrna expression data protein expression protein protein interaction data completing initial piecemeal catalog elementary components genes proteins sequencing genomic analyses projects progressively painting global picture complex interactions take place cell 
exploiting experimental data understand underlying processes requires database integration storage calls strong parallel effort formal representation biological processes 
formalisms proposed years modeling metabolic pathways extracellular intracellular signaling pathways gene regulatory networks boolean networks tt ordinary differential equations hybrid petri nets ht hybrid automata abi gt 
formal concurrent languages considered including hybrid concurrent constraint languages bc rewriting inria rocquencourt france 
university paris france 
cnrs paris france 
inria rocquencourt france 
france 
logics 
regev shapiro rss propose calculus mpw 
formal approaches mentioned proceed wholesale importation language petri nets calculus emerged answer specific design goals may relevant modeling task may 
expected benefit direct inheritance preexisting methods tools results translations existence useless constructs somewhat defeats explanatory purpose formalization 
advocate different approach ab initio design formal languages represent chosen subset biological phenomenology adaptation redesign accompanying theoretical tools 
allows greater freedom coping essential tension design modeling language expressivity analyzability 
language express phenomenon obtained models lend investigations 
model learn significant rich concrete learnt pure simulation 
learnt pure simulation questionable model taught behave expects place 
ambition formalism rich describe interesting systems simple support formal methods 
expressivity simplicity tested examples drawn kohn molecular map cell cycle control koh reasonably confident language representational value particularly legible authors wish taught molecular biology way 
second focus issue providing automated methods querying validating models 
current state art modeling simulation graphical display abi bc mb attempts stability bifurcation analyses dynamical behaviour small systems tt dj described differential equations discretizations thereof 
approach markedly different promotes symbolic manipulation exploration model means computational logics commonplace hardware verification instance 
formal methods extend ways play model may second simulation replace quantitative information sparse 
idea introducing formal methods mentioned prime motivation early efforts formal modeling rss specific prospects computational logics clearly articulated 
give substance idea proposing computation tree logic ctl query language biomolecular networks 
provide concrete examples relevant biological queries expressed ctl mammalian cell cycle control show effectiveness symbolic model checking techniques preliminary benchmarks obtained proof implementation symbolic model checker nusmv ccg 
process algebra specializing representation protein protein interactions dl dl dk membrane interactions rps car investigated basic modeling language somewhat simpler 
core modeling language case simplicity introduce simple biologically legible formalism meant represent molecular biology networks protein interaction level 
formalism quite expressive aims demonstrate side side comparison standard biological subsystems described natural language precise concise rendering formalism 
examples taken cell cycle control reaction network kohn koh able complete formalization kohn map resulting reactions cd 
ambiguities kohn description resolved process 
formal set reactions obtained complemented different operational semantics individual level non deterministic stochastic dynamics population level deterministic differential equation systems 
advantage having core formalism stay agnostic regarding operational semantics dynamics wants equip point gone largely unnoticed practice biological modeling 
different operational semantics probably support different analytic tools chosen depending application 
advantage simple formalism stimulate finding better richer ones 
instance choose represent domains functional sub units proteins involved bindings fortiori able represent internal protein complexes 
involved biological narratives take place domain level account needs domains language 
choose take complexes multisets proteins consequently unable express situations order complex constructed bear interactive capabilities 
choices best commented examples hand 
suffices say language abstractions clear notation 
contrast kohn formalism extremely useful displaying information formal equipped operational semantics allow unambiguous determination reaction paths 
formalism assume infinite set protein names written ranged symbols 
arity function 
protein names integers mapping protein name integer representing number sites 
formal protein simply protein pair written name vector booleans representing occupancy state sites simply state protein protein interaction 
proteins may assembled protein complexes simply complexes ranged 
write composition 
furthermore composition assumed associative commutative 
words order proteins inside complexes irrelevant 
example expressions denote compound biologically complex bundle proteins connected low energy bonds 
course interactions members complex may exchange smaller molecules phosphate groups modified 
turn induces different space subsequent changes complex interaction capabilities 
level abstraction formalism interactions grouped generic name modification represented state transformation 
protein dna interaction 
complexes modulate rate synthesis proteins binding specific sites dna small strings dna upstream genes having positive negative effect synthesis protein associated gene 
express map 
stands set regulatory binding sites associating binding site 
ll keep notation describing binding complex binding site 
solutions reactions 
solutions ranged 
multisets proteins complexes 
reactions defined rewriting rules shape chemical metaphor ll call complexes left hand side rule reactants complexes right hand side products rule 
consider kinds reactions modification synthesis degradation comments reactions 
modification commented just reaction inverse 
synthesis reaction expresses transcription factor bound regulatory binding site activates synthesis protein synthesis degradation reactions complex commonly known transcription degradation factor absent empty mathematically minded 
reaction types linear preserve number components 
simple formal apparatus see offer mechanism cell revise programming stock current instructions 
notation 
biochemical reactions require catalysis presence type protein called enzyme modified reaction enables lowering free energy barrier modifying kinetics 
express conveniently cases simplified notations modification synthesis degradation additionally synthesis may indicate qualitative influence dynamics 
note signs endowed purely descriptive meaning notion reaction rate discrete continuous required interpretation operational semantics 
general set reactions defined rule schema generate non deterministic transition system solutions obvious way applying rules order 
fed kinetic information possible endow set reactions structure probabilistic transition system 
equally possible derive classical differential system bulk biological modeling see instance 
believe interesting analyses led purely non deterministic level 
needs verify pretty approximation molecular biology fits formal picture 
representing cell cycle regulation cell cycle central mechanism cell physiology regulates cell division 
control fundamental biological activity exerted family interacting proteins known cyclin dependent kinases 
cell cycle eukaryotes divided phases 
cell divisions cell gap phase called may contain quiescent phase 
cell stay phase long periods time division case phase construed steady state synthesis phase starts replication dna 
second gap phase precedes mitotic phase cell divides 
phase characterized activity major types proteins cyclin dependent kinases cdk 
experiments show correlation phase concentrations specific types 
cdk activity requires binding cyclin controlled specific inhibitors inhibitory kinases turn may produce positive feedback loops 
particular phase cdk cyc complex dominant busy verifying conditions met activate global shift cell phase 
apart arguably important biological process cell cycle extremely documented molecular level 
significant challenge understand higher level functions emerge vast network reactions 
language introduced going provide formal current knowledge mechanism 
facilitate reading ll equivalent notation complexes write convention take examples reaction occurs independently values internal states partners replace boolean variables written cyclin cdk bindings examine formation cdk cyc complexes 
pair cdk cdk cdk compete binding cdk cdk cdk cdk cdk likewise binds cdk competition 
slight twist cdk third phosphorylation site required formation stable complex cdk cdk cdk cdk cyclin cdk inhibition specific cyclin cdk inhibitors step 
inhibits binding cdk competition cdk cdk binds complex cdk prevents activity cdk cdk mean formally saying inhibitors 
mean reactions involve cdk cdk resp 
reacts cdk resp 
cdk cdk resp 
cdk unavailable reaction 
products 
take note formalism doesn allow distinction knowing reaction takes place knowing 
remedy easily adding non reactions cdk cdk 
cdk indistinguishable interactive properties don mention cdk 
introducing cdk complex cdk known charge actual division cell mitosis 
born inactive activated protein phosphate group kinases 
particular cdk activated phosphorylation specific amino acid thr thr carried cdk known 
cdk cdk cdk cdk cdk cdk cdk inhibited phosphorylation amino acids thr tyr performed wee 
phosphorylation possible cdk bound 
wee cdk cdk cdk cdk cdk inhibits inhibitor cdk wee wee positive feedback loop involves cdc cdk 
cdc activated terminal domain follows cdk cdc cdc activated cdc thr tyr cdk activates positive loop closed provided third site set preceding interaction 
cdc cdk cdk cdc cdk cdk cyc cdk vs prb cyc cdk complex active impacts indirectly synthesis proteins 
cdk begins prb site cdk prb prb cdk act semi phosphorylated prb generating fully phosphorylated prb cdk prb prb bind longer dp 
prb dp prb dp prb different behaviour possible states state binds inhibits transcription proteins downstream intermediate state weaker inhibiting effect completely phosphorylated state doesn bind dp faster synthesis different products including course happens 
see formalism provides straightforward representation highly constrained sequences reactions 
talking transcription finish tour protein interactions example involving prb protein regulate protein synthesis 
transcriptional regulation example shows simple typical protein synthesis 
protein jun binds protein fos jun fos jun fos jun stimulates synthesis protein involved dna repair jun jun jun prb binds jun prb jun prb jun enhances binding jun family members fos say absence quantitative dynamics stimulates transcriptional activation jun fos complex 
observe ways leading construction tri complex prb jun fos formation ultimately binding binding site prb jun fos prb jun fos prb jun fos prb jun fos prb jun fos prb jun fos prb jun fos language expresses clear way 
see justice transcription needs quantitative semantics quantitative express different rates synthesis 
temporal logic query language formal languages represent complex molecular networks motivated expected gain descriptive explanatory power promise biologically relevant analyses dynamical behaviour networks quantitative qualitative 
type especially important stage development computational biology reasons regulatory signaling metabolic networks complex mechanisms far understood global scale qualitative analyses hold promise providing logical computational interpretation role biologically relevant subparts networks abstracting away detailed dynamics turn may help reverse engineer modular approach data existence dynamics molecular interactions rare unreliable dynamical models sensitive exact network structure parameter values continuous representations may best suited analyze predict behaviour settings 
part explore automated methods querying qualitative models biomolecular networks 
give brief computation tree logic ctl propose formulate queries dynamic properties system interest 
show set reactions previous sections turned appropriate structure ctl queries concurrent transition systems 
discuss examples biologically relevant queries formalization ctl 
computation tree logic computation tree logic ctl logic describing properties computation trees non deterministic transition systems cgp :10.1.1.111.7245
ctl temporal logic abstracts duration values describes occurrence events dimensions system time non determinism 
ctl basically extends propositional order logic eme path quantifiers non determinism meaning transition paths meaning transition path temporal operators meaning time meaning eventually meaning meaning 
safety property specifying situation described formula happen expressed ctl formula ag paths false 
liveness property specifying eventually happen expressed formula af 
note duality ef ag af formula 
formally ctl formulas divided state formulas path formulas 
ap set atomic propositions describing states 
state formula atomic proposition path formula prefixed path quantifier logical combination formulas 
set path formulas closure set state formula temporal operators logical connectives 
summarized grammar ordinary boolean connectives shown ap arbitrary state path formulas permitted ctl ctl defined syntactic fragment ctl temporal operators immediately prefixed path quantifier instance ctl formula ctl 
known fragment ltl formulas form contains path quantifier allowed 
example ag ef ltl formula 
biological queries interest described section expressed ctl ltl proposal ctl query language biochemical systems shall focus fragment 
semantics ctl transition systems kripke structures 
kripke structure triple set states total relation state exists state ap function associates state set atomic propositions true state 
path state infinite sequence states si si 
denote suffix starting si 
kripke structure inductive definition truth relation stating ctl formula true state written true path written follows clauses ordinary boolean connectives omitted iff iff path iff path iff starting state iff iff exists iff iff exists eme assuming kripke structure convenient identify ctl formula set states satisfy 
particular write init resp 
init express ctl formula holds initial state init resp 
initial states set init 
concurrent transition systems concurrent transition systems introduced sha formal tool reason concurrent programs 
offer simple language reaction rules modeling concurrent programs specifying kripke structures 
formalize kripke semantics core modeling language give precise meaning idea querying ctl biochemical models 
concurrent transition system cts short triple tuple state variables initial state defined initial values state variables set condition action rules 
rules syntax condition action en logical formula state variables denotes condition rule applied primed version variables denotes new values expression ei variables rule applied 
convention variables modified right hand side rule keep value unchanged 
clearly cts defines kripke structure set states set tuples values state variables transition relation union disjunction relations states instances condition action rules 
core modeling language described part turned cts simple transformation order comply state variables format ctss 
state patterns cdk need fully instantiated ground terms cdk order represented state variables 
different internal states protein viewed associated cts different macromolecules associated unique state variable 
state variables cts chosen take values different domains corresponding different levels abstraction 
refined notion state core modeling language values state variables integers representing multiplicity elementary component protein cell 
models choose state variables real numbers representing concentrations boolean values representing simply presence absence compounds cell 
choice worth noticing temporal evolution system modeled setting transition steps different transition paths model non deterministic behaviour system 
example mammalian cell cycle control developed logical aspect affairs return benchmark example mammalian cell cycle control 
written state experimentally derived knowledge dynamics mammalian cell cycle reaction rates shows somewhat premature attempt reasoning quantities proteins mammalian cells 
appropriate interesting example reason qualitatively possible behaviours system 
sets states represented partial information actual numerical values state variables instance intervals constraints variables 
shall choose simpler route boolean abstraction model state variables boolean variables representing presence absence proteins 
case set states finite cardinality number state variables 
example corresponding different forms basic proteins genes involved model 
concurrent transition systems asynchronous sense rule executed time interleaved semantics transition relation union relations associated rules 
hand synchronous programs considered transition relation defined intersection 
hybrid dynamics combining discrete transition time continuous time handled setting turning hybrid system concurrent transition system euler method discretizing differential equations cf 
consider accordingly concurrent transition system boolean state variables defined rule schemas 
modification modified action catalyst transformed phosphorylated form example 
obviously state changes encoded similar manner 

bind form complex 
synthesis synthesized activated transcription factor 
degradation degraded degradation factor rule schema stands propositional variable denoting complex results binding molecules denoted instance schema rule cdk cdk cdk cdk boolean variables representing respectively cdk dimer cdk internal state 
likewise introduce variable named cdk represent phosphorylated form dimer cdk site thr cdk 
phosphorylation dimer modeled modification rule cdk cdk boolean rules denote condition action rules conventions 
left hand side rule just condition 
right hand side formula expresses variables true false action convention variables denote components varying quantities promoters appear left hand side right hand side schema may take arbitrary values 
necessary define correct boolean abstraction set possible behaviours system ignoring numerical quantities reaction rates 
instance rule shorthand condition action rules condition action true true true condition action true false true condition action true true false condition action true false false condition action rules explicit possible disappearance molecules combination guarantees correctness boolean abstraction possible behaviours system 
method implemented system currently development cf 
biological queries biological queries consider boolean model cell cycle control different kinds 
enumerate list biological queries interest discuss expression ctl 
queries relative initial state set initial states described logical formula 
reachability initial state init series reactions produce compound query translates formula init ef boolean variable representing product states set products 
pn produced simultaneously 
query translates formula ef 
pn 
ctl formulas identified set states satisfy model checking tools described section provide facilities showing set states satisfied ctl formula 
pathways initial state init cell reach state passing state 
init ef efs 
state necessary checkpoint reaching state 
init 
express contrapositive query exist path reaching passing 
possible produce creating 
init 
generally ask state reachable certain constraint set initial states init init 
stability properties certain partially described state system stable state 
ag ag set states described logical formula noted abuse notation 
stable state strong sense state system stays indefinitely possibility escaping steady state system stay indefinitely modeled system reach stable state initial state init 
init ef ag 
worth noticing query expressible ltl 
system reach stable state initial state init 
init af ag 
stable states 
set stable states system represented ctl query 
ctl possible check partially described state stable state 
approach computing set stable states checkpoints biochemical network combine model checking methods search methods 
interesting open problem investigated contexts design ctl query languages cha hs gcd 
system exhibit cyclic behaviour presence product init ef ef formula expressible ltl 
expresses exists path time points eventually absent absent eventually 
durations long take molecule activated 
time accumulated 
duration cell cycle phase 
time temporal logic ctl purely qualitative notion single precedence relation 
reasoning durations expressible temporal operators ctl 
state description logic underlying ctl propositional order logic model time intervals adding atomic propositions extra numerical arguments representing starting time duration 
constraint model checking section provides automatic method evaluating queries 
hand symbolic model checking techniques extended incorporate specifically duration data lms 
correctness model see inaccuracies model correct 
intended property verified pathways leading counterexample help user refine model 
similarly unintended property satisfied pathway leading witness helps user refine model enforcing extra conditions rules property known biologically true false witness may suggest biological experiments order validate invalidate property model 
biology natural science opposed computer science standard loop modeling threefold loop modeling querying model doing biological experiments 
worth noticing boolean abstraction model introduces inaccuracies correspond inaccurate quantities inaccurate reaction rates quantitative model 
explored combinatorics underlying quantitative models may correspond non standard situations biologically relevant 
inaccuracies corrected adding boolean conditions rules 
automated query evaluation symbolic model checking model checking algorithm computing kripke structure set states satisfy ctl formula set 
sake simplicity consider ctl fragment ctl fact duality ctl formula expressed terms ex eu 
finite set states model checking algorithm simplest form works explicit representation transition graph labels state set subformulas true state 
states labeled atomic propositions true states 
labeling complex formulas done iteratively syntax subformulas 
formulas form label states labeled 
formulas form added labels states labeled 
formulas ex added labels immediate predecessor states states labeled 
formulas added hereditary predecessor states satisfy 
formulas involve computation strongly connected components subgraph transitions restricted states satisfying 
states labeled states subgraph exists path leading state non trivial strongly connected component 
complexity algorithm size formula number states number transitions cgp :10.1.1.111.7245
symbolic model checking efficient algorithm uses symbolic representation finite kripke structures boolean formulas 
particular transition relation encoded single disjunctive boolean formula sets states encoded boolean formulas ordered binary decision diagrams obdds canonical forms boolean formulas 
symbolic model checking algorithm computes obdd representing set states satisfying ctl formula 
computation involves iterative computation fixed point ef greatest fixed point simple predicate transformers associated temporal connectives cgp :10.1.1.111.7245
experiments reported state art symbolic model checker nusmv ccg 
computational results table presents performance figures concerning evaluation ctl queries boolean abstraction mammalian cell cycle control model section 
boolean model experiments comprises reaction rules proteins genes variables account different compounds system 
queries concern pathways leading mitosis cell described section complex cyclic presence 
initial state corresponds gap phase prior mitosis cell 
columns indicate query type 
third column indicates cpu time taken nusmv answer query 
fourth column indicates cpu time taken explaining answer showing pathway witness negation query asked answers 
cpu times seconds measured processor intel pentium mhz linux 
query query nusmv nusmv type answer time show time number seconds seconds compiling ef sl ef ef ef cdc cdk thr ef ef table evaluation ctl queries mammalian cell cycle control model nusmv 
compared simpler prolog implementation model checking timings obtained nusmv model checker show efficiency symbolic representation states binary decision diagrams bdds cf 
timings somewhat slower usual program verification community model hundreds rules variables 
fundamental reason structure transition graphs modeling biochemical networks 
transition systems highly non deterministic due soup aspect molecular interactions differ significantly respect transition graphs obtained circuits programs 
worth investigating specific optimizations model checking algorithms possible context especially concerning ordering variables internal bdd representation states 
quantitative models constraint model checking mentioned previous sections ctl queries principle applied quantitative models molecular interactions 
particular seen multiset rewriting core modeling cell control part translated concurrent transition system integer variables denoting multiplicity molecules cell 
concurrent transition systems variables ranging unbounded continuous numerical domains define kripke structures infinite set states handled symbolic model checking algorithm 
hand constraint model checking applies infinite state systems 
approach constrained state finite representation constraints finite infinite set states 
scheme podelski dp infinite state kripke structures represented constraint logic programs ctl formulas fragment firstorder logic identified fixed point greatest fixed point constraint logic programs 
constraint model checking integers constraint logic programs finite domains technology evaluate quantitative queries cell cycle control 
done mammalian cell cycle example lack numerical data shown cf simple quantitative model gene expression constraint model checking reals 
designed simple language proven rich describe biomolecular networks level protein interactions 
particular combinatorics activation synthesis degradation easily expressed shown kohn description mammalian cell cycle control expressiveness benchmark 
shown symbolic model checking techniques applied querying validation boolean abstractions networks molecular interactions 
shown temporal logic ctl expressive formalize wide variety biological queries interest molecular network ranging pure reachability queries possibility synthesizing particular protein pathway constraints existence checkpoints analysis steady states cyclic behaviours 
second ctl querying applies highly non deterministic systems investigating possible behaviours system situations simulation ill defined unfeasible 
third symbolic methods possible group large sets states small state expressions provide formal proofs reachability pathway checkpoint stability properties 
reasons believe simulation verification tools model checking indispensable querying validating complex models systems biology 
acknowledgments done cooperative research initiative arc grateful colleagues arc especially roux julien gr gory institut interesting discussions systems biology relevant bits molecular biology sylvain contraintes group inria contraintes inria fr alexander arnaud courtois damien group loria nancy fruitful discussions quantitative models 
acknowledge support alessandro cimatti nusmv team irst trento 
abi alur kumar mintz pappas rubin 
hybrid modeling simulation biomolecular networks 
springer editor hybrid systems computation control lncs pages rome italy 
bc courtois 
hybrid concurrent constraint programming model dynamic biological systems 
springer editor th international conference logic programming pages copenhagen 
car cardelli 
calculi 
appear entcs proceedings bio concur 
ccg cimatti clarke giunchiglia giunchiglia pistore roveri sebastiani 
nusmv opensource tool symbolic model checking 
proceeding international conference computer aided verification cav copenhagen july 
cd danos 
formalization kohn molecular map 
available www pps jussieu fr kohn map html july 
cf fages 
biochemical machine 
christophe editors proceedings european conference computational biology pages paris france 
system available contraintes inria fr september 
cf fages 
symbolic model checking biochemical networks 
priami editor proceedings international workshop computational methods systems biology lecture notes computer science pages italy february 
springer verlag 
cgp clarke grumberg peled :10.1.1.111.7245
model checking 
mit press 
cha chan 
temporal logic queries 
proceedings th international conference computer aided verification cav number lecture notes computer science pages chicago usa 
springer verlag 
dj de jong 
modeling simulation genetic regulatory systems literature review 
journal computational biology 
dk danos krivine 
formal molecular biology done ccs 
proceedings bio concur marseille france electronic notes theoretical computer science 
elsevier 
appear 
dl danos laneve 
core formal molecular biology 
proceedings th european symposium programming esop volume lncs pages 
springer verlag april 
dl danos laneve 
graphs formal molecular biology 
proceedings international workshop computational methods systems biology volume lncs pages 
springer verlag february 
dp podelski 
model checking clp 
proceedings th international conference tools algorithms construction analysis systems tacas volume lncs pages 
springer verlag january 
eker knapp lincoln meseguer 
pathway logic symbolic analysis biological signaling 
proceedings pacific symposium biocomputing pages january 
eme emerson 
temporal modal logic pages 
van leeuwen ed north holland pub 
mit press 
gcd chechik 
temporal logic query checking tool model exploration 
special fse issue ieee transactions software engineering 
gt ghosh tomlin 
lateral inhibition delta notch signaling piecewise affine hybrid model 
springer editor hybrid systems computation control lncs pages rome italy 
hs ph 
schnoebelen 
solving temporal logic queries 
proceedings th international conference algebraic methodology software technology amast number lecture notes computer science pages saint gilles les island france 
springer verlag 
ht dt thelen 
quantitative modeling biochemical networks 
silico biology volume pages 

koh kohn 
molecular interaction map mammalian cell cycle control dna repair systems 
molecular biology cell august 
lms ph 
schnoebelen 
model checking durational kripke structures 
proceedings th international conference foundations software science computation structures fossacs number lecture notes computer science pages grenoble france 
springer verlag 
mb browning 
diagrammatic notation computational structure gene networks 
proceedings nd international conference systems biology 
doi miyano 
hybrid petri net representation gene regulatory network 
pacific symposium biocomputing pages 
mpw milner parrow walker 
calculus mobile processes ii 
information computation 
rps regev silverman cardelli shapiro 
abstraction biological compartments 
theoretical computer science 
appear 
rss regev silverman shapiro 
representation simulation biochemical processes pi calculus process algebra 
proceedings pacific symposium biocomputing pages 
jonsson ed 
gilles ller 
computational modeling dynamics map kinase cascade activated surface internalized egf receptors 
nature biotechnology 
sha shankar 
reasoning concurrent systems 
acm computing surveys 
tt thomas 
qualitative analysis gene networks 
altman hunter klein editors pacific symposium biocomputing volume pages singapore 
world scientific press 
wang clarke zhu 
improve symbolic simulation boolean satisfiability 
proceeding 

