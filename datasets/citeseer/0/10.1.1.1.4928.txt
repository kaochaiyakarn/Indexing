multidimensional data modeling complex data torben bach pedersen christian jensen november tr technical report title multidimensional data modeling complex data copyright torben bach pedersen christian jensen 
rights reserved 
author torben bach pedersen christian jensen publication history march 
proceedings icde november 
technical report 
participants aalborg university denmark christian jensen michael hlen renato curtis dieter kristian university arizona usa richard snodgrass ram individual participants anindya datta georgia institute technology usa nam national university korea mario state university campinas brazil ryu national university korea michael soo university south florida usa andreas steiner switzerland vassilis polytechnic university usa jef vrije universiteit brussel belgium additional information see homepage url www cs auc dk research dbs tdb software available provided express implied warranties including limitation implied warranty fitness particular purpose 
icon cover combines arrows arrows letters called rune alphabet millennium ago successors 
rune alphabet second phase letters angular shapes lack horizontal lines primary storage medium wood 
may jewelry tools weapons perceived having magic hidden powers 
rune arrows icon denote respectively 
systems line analytical processing olap considerably ease process analyzing business data widely industry 
olap systems primarily employ multidimensional data models structure data 
current multidimensional data models fall short ability model complex data real world application domains 
presents requirements multidimensional data models exemplified real world clinical case study 
survey existing models reveals requirements currently met include support relationships facts dimensions built support handling change time support uncertainty different levels granularity data 
defines extended multidimensional data model addresses requirements 
model associated algebra outline implement model relational databases 
continued advances underlying hardware technologies line mass storage focus data warehousing notion line analytical processing olap attracting increasing interest business managers attempt extract useful information large line databases order informed management decisions 
reports indicate traditional data models er model relational model provide support olap applications 
result new data models multidimensional view data emerged 
multidimensional data models typically categorize data measurable business facts measures dimensions textual characterize facts 
example retail business products sold customers certain times certain amounts certain prices 
typical fact purchase amount price measures customer purchasing product product purchased time purchase dimensions 
olap research concentrated performance issues higher level issues conceptual modeling received attention 
researchers pointed lack olap research suggested try combine traditional olap virtues performance advanced data model concepts field scientific statistical databases :10.1.1.39.8267
appears valuable direction necessary put semantics database schema support typical olap style working directly data pre formatted reports 
data model olap applications certain characteristics order support complex data real world systems 
advanced requirements multidimensional data model satisfy illustrate requirements real world case study clinical world 
extended multidimensional data model addresses requirements 
data model supports modeling explicit hierarchies dimensions aid user navigating data 
multiple hierarchies dimension supported allow different aggregation paths nonstrict hierarchies real world dimensions dimension item may parents supported 
model treats dimensions measures symmetrically allow measures dimensions vice versa 
relationships facts dimensions captured directly model important relationships occur real world data patient may diagnoses 
data model supports getting correct results aggregating data data double counted non additive data added 
data change time support handling change time part model 
aspects uncertainty associated data handled model 
model supports handling data different levels granularity need applications 
model equipped algebra closed strong relational algebra aggregation functions 
outline model implemented relational databases 
previously proposed data models representative spectrum multidimensional data models evaluated requirements shown model satisfies requirements 
importantly model supports relationships facts dimensions handling uncertainty different levels granularity model completely supports handling change time non strict hierarchies 
presentation structured follows 
section sets stage presenting real world case study clinical world requirements multidimensional data models describes evaluates previously proposed models requirements 
section proceeds define basic extended multidimensional data model examples case study illustration adds support handling time uncertainty model 
data structures model available section defines algebra model discusses properties 
section evaluates model requirements section summarizes points directions 
appendix outlines implement model relational databases 
motivation section illustrates shortcomings previously proposed multidimensional models 
case study shows limitations 
case taken domain healthcare look patients diagnoses place residence 
second list requirements features data model satisfy order meet needs case study 
third relate requirements existing multidimensional data models 
case study case study concerns patients hospital associated diagnoses place residence 
goal investigate diagnoses occur areas case environmental lifestyle factors contributing disease pattern 
er diagram illustrating underlying data seen 
important entities patients 
patient record name social security number ssn date birth 
date birth current date derive age attribute parenthesized show derived 
patient diagnoses 
attribution diagnoses patients vary time record time interval diagnosis considered valid patient 
record type show diagnosis considered primary secondary 
primary diagnosis considered important reason treatment secondary diagnoses complete view patient condition 
patient may primary diagnosis point time 
registering diagnosis patient physicians different levels granularity 
precise diagnosis insulin dependent diabetes imprecise diagnosis diabetes covers wider range patient conditions corresponding number precise diagnoses 
model relationship patient diagnoses supertype diagnosis diagnosis type subtypes corresponding different levels granularity low level diagnosis diagnosis family diagnosis group 
examples insulin dependent diabetes pregnancy insulin dependent diabetes diabetes respectively 
higher level diagnoses imprecise diagnoses right function groups lower level diagnoses name name name area lives patient name ssn date birth age low level diagnosis diagnosis area county county region grouping grouping valid valid valid valid type part valid valid type diagnosis diagnosis family code text valid valid grouping valid valid type patient diagnosis case study diagnosis group discussed 
diagnoses record alphanumeric code descriptive text 
code text usually determined standard classification diseases world health organization international classification diseases icd allow user defined diagnoses 
time medical knowledge evolves disease classification reflects changing contents 
happens diagnosis superseded new diagnoses better reflect current understanding particular medical condition 
model fact associate diagnosis period validity represented attributes valid valid 
period validity time interval real world diagnosis associated code text 
classifications evolve slowly granularity time quite high days 
diagnoses classification diagnoses grouped diagnosis families turn diagnosis groups creating hierarchy classification 
types hierarchies standard hierarchy determined classification owner user defined hierarchy physicians group diagnoses ad hoc basis ways standard classification allows 
hierarchy groups low level diagnoses diagnosis families consists related diagnoses 
example diagnosis insulin dependent diabetes pregnancy part family diabetes pregnancy standard classification low level diagnosis part exactly diagnosis family 
physicians need group diagnoses ways standard allows allow user defined hierarchy 
type attribute relationship reason having separate pregnancy related diagnosis diabetes monitored controlled particularly intensely pregnancy assure health mother child 
determines relation entities part standard user defined hierarchy 
diagnosis part diagnosis families insulin dependent diabetes pregnancy diagnosis part diabetes pregnancy insulin dependent diabetes family 
participation individual diagnoses family may change time record time interval diagnosis part family 
id name ssn date birth john doe jane doe patient table type primary secondary primary secondary primary table id code text diabetes pregnancy diabetes pregnancy insulin dependent diabetes pregnancy non insulin dependent diabetes pregnancy pregnancy related diseases diabetes insulin dependent diabetes non insulin dependent diabetes diabetes pregnancy related diseases diagnosis table type user defined user defined user defined grouping table table data case study second diagnosis families grouped diagnosis groups consisting families family may part groups 
example family diabetes pregnancy may part diabetes pregnancy related diseases groups 
standard hierarchy family belongs exactly group 
type attribute distinguish standard user defined hierarchy 
grouping families groups change time record time interval family part group 
standard hierarchy lower level item belongs exactly higher level item standard hierarchy strict partitioning hierarchy 
user defined hierarchy lower level item member zero higher level items making non strict non partitioning hierarchy 
properties hierarchies discussed detail section 
record place residence patients 
patient may live place point time 
people move previous address interesting record associated period residence 
record place residence granularity area designates small bounded area square kilometers 
area part exactly county turn part exactly region 
strict partitioning hierarchy 
areas counties regions just record name 
order list example data assume standard mapping er diagram relational tables table entity type relationships handled foreign keys relationships handled separate tables 
relationships change time handled separate tables 
assume surrogate keys named id globally unique values 
dates written format dd mm yy 
valid attribute special value value denotes current time 
subtypes diagnosis type attributes mapped common diagnosis table 
part grouping relationships mapped common grouping table 
data consists patients diagnoses hierarchy 
january new detailed classification new coding scheme introduced 
resulting tables shown table examples 
requirements data analysis section describes features data model possess order fully support sample case advanced uses 
current multidimensional models evaluated features section 

explicit hierarchies dimensions 
hierarchies dimensions captured explicitly schema user available relation different levels hierarchy 
example hierarchies diagnosis family group area county region captured 

symmetric treatment dimensions measures 
data model allow measures treated dimensions vice versa 
example attribute age patients typically treated measure allow computations average age able define age dimension allows group patients age groups 

multiple hierarchies dimension 
dimension path aggregate data 
example assume time dimension date birth attribute 
days roll weeks months weeks roll months 
model multiple hierarchies dimension needed 

support correct aggregation 
data model support getting results correct meaningful user aggregating data 
aspect avoid double counting data 
case study asking numbers patients different diagnosis groups count patient group patient diagnoses group 
user able specify aggregations considered meaningful different kinds data available model provide foundation enforcing specifications 
example may meaningful add inventory levels performing average note value dynamic continues grow 
calculations sense 
field statistical databases closely related concept means aggregate result total sales computed directly combining results lower level aggregations sales store 

non strict hierarchies 
hierarchies dimension strict relationships different levels dimension 
example diagnosis hierarchy strict 
data model able handle just ordinary strict dimensions 

relationships facts dimensions 
relationship fact dimension classical mapping 
case study patient may diagnoses point time 

handling change time 
data change time able get meaningful analysis results changes 
example diagnosis superseded new ones patients old 
possible easily combine data changes 
problem typically referred handling slowly changing dimensions part problem 

handling uncertainty 
case study diagnosis superseded new ones 
know cases old diagnosis new diagnoses 
requesting data grouped diagnosis period spans change want old diagnosis counted new diagnosis 
data model allow expressing support giving kind indications query results indicating converted diagnoses counted result 

handling different levels granularity 
fact data registered different granularities 
example diagnosis diabetes patient may registered differently different physicians 
specific diagnosis insulin dependent diabetes imprecise diabetes covers lower level diagnoses 
possible get correct analysis results data registered different granularities 
related section evaluate data models previously proposed data warehousing requirements previous section 
consider models shoshani agrawal gray kimball li wang gyssens lakshmanan datta thomas lehner :10.1.1.40.8320:10.1.1.40.8320
models divided groups simple cube models structured cube models statistical objects 
simple cube models treat data dimensional cubes 
generally data divided facts age calculations performed dimensions diagnosis characterize facts 
dimension number attributes selection grouping 
example residence dimension having attributes area county region characterize patients 
hierarchy attributes captured explicitly schema simple cubes user able learn schema area rolls county way 
star schema designs considered simple cubes semantically equivalent 
structured cube models capture hierarchies dimensions explicitly providing better guidance user navigating cubes :10.1.1.40.8320
information may useful query optimization 
hierarchies captured grouping relations dimension merging functions explicit tree structured hierarchy part cube :10.1.1.40.8320
group models statistical objects 
group structured classification hierarchy coupled explicit aggregation function single measure produce pre object answer specific set questions 
approach flexible provides protection getting incorrect results queries 
results evaluating data models requirements seen table 
model supports aspects requirement say model provides full support denoted 
model supports aspects requirement say provides partial support denoted 
possible authors determine support requirement accomplished model say model provides support denoted 
shoshani agrawal gray kimball li wang gyssens lakshmanan datta thomas lehner table evaluation data models :10.1.1.40.8320:10.1.1.40.8320
explicit hierarchies dimensions simple cube models capture hierarchies dimensions explicitly 
models provide partial support grouping relation dimension merging function constructs capture complete hierarchy cube :10.1.1.40.8320
done models capturing full cube navigation semantics schema 

symmetric treatment dimensions measures half models distinguish sharply measures dimensions 
attribute designated measure dimensional attribute vice versa 
restricts flexibility cube designs age attribute example measure group patients age groups 
half models impose restriction :10.1.1.40.8320
distinguish measures dimensions allow conversion measures dimensions vice versa 

multiple hierarchies dimension models require dimension hierarchies tree structured 
support multiple hierarchies general lattice structure required 
models allow multiple hierarchies 

support correct aggregation half models support correct aggregation partially implicitly requiring dimension hierarchies strict partitioning lower level item maps exactly item level 
conditions 
models allow non strict hierarchies addressing issue double counting providing support 
remaining models place explicit conditions hierarchy strict partitioning aggregation functions additive data may added providing full support correct aggregation 

non strict hierarchies models implicitly explicitly require hierarchies strict 
models mention briefly non strict hierarchies allowed go deeper issues raised allowing possibility double counting pre computed aggregates 
remaining model investigates possible problems allowing non strict hierarchies advises feature 

relationships facts dimensions models allow relationships facts associated dimensions relationship patients diagnoses example 

handling change time model discusses issue proposed solutions fully support analysis changes dimensions 
models support analysis changes mention important issue 

handling uncertainty models provide built support uncertainty data 

handling different levels granularity models handle different levels granularity data 
conclude models generally provide full partial support requirements 
requirement non strict hierarchies partially supported models requirement handling change time partially supported kimball 
requirements supported models 
objective model proposed support requirements 
extended multidimensional data model section define model 
part model define intension extension give illustrating example 
avoid unnecessary complexity define basic model define extensions handling time uncertainty 
basic model dimensional fact schema tuple fact type ng corresponding dimension types 
example case study section patient fact type diagnosis residence age date birth dob name social security number ssn dimension types 
intuition characterizes fact type considered dimensional attributes considered measures models 
dimension type tuple kg category types partial order cj cand top bottom element ordering respectively 
category types form lattice 
intuition category type greater category type members extension logically contain members extension larger element size 
top element ordering corresponds largest possible element size element extension logically containing elements 
say cj category type written cj 
assume function pred 
gives set immediate predecessors category type cj 
example low level diagnoses contained diagnosis families contained diagnosis groups 
diagnosis dimension type order category types diagnosis low level diagnosis diagnosis diagnosis group diagnosis 
pred lowlevel diagnosis 
examples category types age year age group age dimension type dob year dob dimension type 
discussed detail illustrates dimension types case study 
types data ages sales amounts added produce meaningful results 
data ordering computing average minimum maximum values sense 
types data dates birth inventory levels user may find meaningful context add 
data ordering average computing maximum minimum values sense 
types data diagnoses ordering sense compute average meaningful aggregation count number occurrences 
support correct aggregation data keeping track types aggregate functions applied data 
information prevent users doing illegal calculations data completely warn users result wrong patient counted twice line reasoning previous distinguish types aggregate functions applicable data added applicable data average calculations applicable data constant counted 
considering standard sql aggregation functions count avg min maxg avg min maxg 
aggregation types ordered data higher aggregation type possess characteristics lower aggregation types 
dimension type assume function 
cg gives aggregation type category type 
example case study low level diagnosis age year age group dob dimension type tuple set categories cj type cj cj partial order jcj union dimension values individual categories 
category cj type cj set dimension values type cj 
definition partial order values logically contained 
say cj category written cj dimension value say dimensional value written ife jcj 
category type dimension type contains values smallest value size 
category type largest value size contains exactly value denoted 
values category types 
value similar construct gray 
example diagnosis dimension categories named type 
low level diagnosis diagnosis family diagnosis group diagnosis values sets refer id field diagnosis table table 
partial order columns grouping table table 
additionally top value greater logically contains diagnosis values 
say dimension dimension subset categories restriction categories 
note 
example obtain diagnosis dimension previous example removing low level diagnosis diagnosis family categories retaining diagnosis group diagnosis 
desirable distinguish dimension values real world names 
names change value name making name bad choice identifying value 
common database terms argument object ids surrogates 
support feature require category representations 
representation rep bijective function rep dom value representation uniquely identifies single value category vice versa making representation alternate key notation rep denote mapping dimension values representation values 
example diagnosis value representations code text 
id diagnosis table identify values code text diabetes pregnancy set facts dimension 
fact dimension relation set jcj 
links facts dimension values 
say fact characterized dimension value written 
require jcj allow missing values 
reasons disallowing missing values complicate model unclear meaning 
unknown dimension value fact characterized add pair indicating characterize particular dimension 
example fact dimension relation links patient facts diagnosis dimension values table case study 
leaving temporal aspects get note relate facts values higher level categories fact related diagnosis belongs diagnosis family category 
require belongs diagnosis existing data models 
diagnosis known patient added pair multidimensional object mo tuple fact schema ffg set facts type fdi ng set dimensions type di ti fri ng set fact dimension relations ri cj di cj 
example case study get dimensional mo patient dob residence name ssn 
definition diagnosis dimension corresponding fact dimension relation previous examples 
due space constraints list contents dimensions fact dimension relations just outline structure 
name ssn dimensions simple just category type name respectively ssn category type 
age dimension groups ages years year year groups 
date birth dimension hierarchies days grouped weeks days grouped months levels quarters years decades 
refer mo patient mo graphical illustration schema patient mo seen 
age dimension year group year group age diagnosis dimension diagnosis group diagnosis family low level diagnosis date birth dimension decade year quarter week month day patient residence dimension region county area schema case study 
name dimension name ssn dimension ssn collection multidimensional objects possibly shared called multidimensional object family 
example illustrate usefulness shared multidimensional object families imagine performing steps 
create diagnosis dimension includes diagnosis group diagnosis age dimension includes year group age 
mo dimensions fact type patient patients country 
results mo capturing patients country diagnosis groups year age groups 
putting mo patient mo example obtain multidimensional object family shared 
shared investigate diagnoses versus age groups patient group case study compare national average 
summarize essence model facts objects separate identity 
test facts equality assume ordering facts 
combination dimensions values characterize facts fact set key fact set 
may duplicate values sense facts may characterized combination dimension values 
facts mo set duplicate facts mo handling time investigate build temporal support model 
vast majority research temporal data models assumes discrete time domain example data models collection temporal database papers explicitly assume discrete model time 
temporal data types offered sql standard discrete bounded 
assume time domain discrete bounded isomorphic bounded subset natural numbers 
values time domain called 
correspond finest granularity time domain 
possibly subscripted denote set 
valid time statement time statement true modeled reality 
valid time important capture real world users reside allow attachment valid time data require 
valid time attached data assume data valid 
valid time attached mo call valid time mo general valid time may assigned truth value 
model partial order dimension values mapping values representations fact dimension relations membership values categories 
important able capture aspects 
add valid time dimension partial order adding tv set relation holds real world relation values 
write tv tv 
partial order tv property 
similarly write rep tv denote representation rep value value tv 
fact dimension relation fact dimension value capture set tv related 
write tv tv 
notation tv tv tv add valid time membership dimension values categories writing tv tv 
set attached statement maximal set statement valid data coalesced 
problem value equivalent statements statement appears times different times attached 
implication statements valid subset attached time 
example examples interval notation tv size equal day 
partial order diagnosis dimension 
representation code 
fact dimension relation category membership diagnosis family 
sum extending dimension partial order links dimension values represent thing change foundation handling analysis changes 
allows obtain meaningful results analyze data changes dimension 
example looking data current point time want count patients diagnosed old diabetes diagnosis id diagnoses new diabetes diagnosis id look 
done defining till consider diagnosis logically contained diagnosis 
valid time temporal aspects may interesting model 
interesting capture statements database time statement database corresponds time true real world 
need know data database accountability traceability purposes 
transaction time statement time statement current database may retrieved 
generally transaction time attached valid time attached 
addition transaction time orthogonal addition valid time 
additionally transaction time added data truth value 
model record facts patients database 
think interesting facts interesting participate fact dimension relations 
record 
transaction time attached mo call transaction time mo valid transaction time attached mo call mo time attached mo call snapshot mo notation tt denote set data current database 
tt tv denote sets 
handling uncertainty data available contains uncertainties adequately captured standard techniques default values handle uncertainty explicitly data model 
introduce measures probability 
general sense attach probability statement statement valid time 
model applies dimension partial orders fact dimension relations mappings values representations category memberships values 
attach probabilities 
little probability mapping values representations violate requirement representation alternate key 
giving probabilities membership categories omitted values belong fully category time 
add probability partial order dimension values 
dimension values number write probability second add probability fact dimension relation fact dimension value number write probability write 
note probability assigned ancestor descendent links partial order just direct parent child links 
example case study differentiate insulin dependent non insulin dependent diabetes 
case 
suppose know old diabetes diagnosis insulin dependent diabetes cases 
looking number insulin dependent diabetes patients till want count old diabetes 
extending diagnosis partial order information 
suppose physicians allowed express belief correctness attaching probability 
case study physician certain john doe id insulin dependent diabetes id 
fact dimension relation summarize addition uncertainty model orthogonal features handling time combination extensions valid 
time probabilities added mo assign probability pt set done avoid problems tuples 
interval notation examples 
probability assigned mo call probabilistic mo probability assigned call deterministic mo properties model section important properties model relate pre computed aggregates defined discussed 
important concept intuitively means individual aggregate results combined directly produce new aggregate results 
definition type set kg sj function 
say fg sk sk 
set arguments left side equation multi set bag result value occur multiple times 
important concept condition flexible pre computed aggregates 
lower level results generally directly combined higher level results 
means choose pre compute relevant selection possible aggregates compute higher level aggregates fly 
pre compute total results aggregations need fast answers aggregates computed base data 
space time constraints prohibitive pre computing results computing aggregates scratch results long response times 
case attractive alternative sampling techniques answer queries 
sampling small sample available data read estimate result query 
produce fast response times maintaining relatively high degree accuracy result 
shown equivalent aggregation function distributive paths strict hierarchies partitioning relevant dimensions 
data time attached aggregated data fact counted point time result extends hierarchies snapshot strict snapshot partitioning 
concepts formally defined 
definitions assume dimension 
definition mapping strict 
non strict 
hierarchy dimension strict mappings strict non strict 
category cj di say strict path set facts cj iff cj cj hierarchy dimension snapshot strict time hierarchy strict 
definition pred non top value direct parent say hierarchy dimension partitioning non partitioning 
hierarchy dimension snapshot partitioning time hierarchy partitioning 
example hierarchy residence dimension strict partitioning 
hierarchy diagnosis dimension non strict partitioning non partitioning 
sub hierarchy diagnosis dimension obtained restriction standard classification snapshot strict snapshot partitioning 
algebra section defines algebra multidimensional objects just defined 
line model definition define basic algebra define extensions handling time uncertainty 
complex operators provide examples 
basic algebra define fundamental operators 
close standard relational algebra operators 
unary resp 
binary operators assume multidimensional object multidimensional objects mk sk fk dk rk 
note representations categories resulting mo argument mo specify values representations resulting mo aggregation types changed aggregate formation operator specified operators 
note paths set facts categories strict 
operator definitions need preliminary definitions 
define group groups facts characterized dimension values 
dimensional mo set categories fci ci dig dimensions tuple en ei ci define group group en ff eng 
define union operator dimensions performs union categories partial orders 
dimensions type ck define union operator dimensions fc jg denotes regular set union 
selection predicate dimension types define selection ff en dn en en fr ri restrict set facts characterized values evaluates true 
fact dimension relations restricted accordingly dimensions schema stay 
example selection applied patient mo predicate name john doe resulting mo schema facts fact dimension relations rig dimension projection loss generality assume projection dimensions dk 
define projection dk ft fd fr 
retain dimensions set facts stays 
note remove duplicate values combination dimension values may associated facts 
example projection name diagnosis dimensions applied patient mo resulting mo fact type name diagnosis dimension types set facts name diagnosis dimensions fact dimension relations dimensions 
graphical illustration resulting mo seen left 
diagnosis group diagnosis family low level diagnosis diagnosis dimension name dimension john doe jane doe patient name diagnosis dimension range diagnosis group 
count resulting mo projection aggregate formation result dimension set patient rename multidimensional object fact schema isomorphic define rename 
see rename just return contents new schema structure old schema rename alter names dimensions dimensions name resulting self join distinguished 
union dimensional mo mk sk fk dk rk define union fd ng fr ng 
words mo common schemas take set union facts fact dimension relations 
operator combine dimensions 
difference dimensional mo mk sk fk dk rk define difference fr ng mo common schemas take set difference facts dimensions argument mo retained fact dimension relations restricted new fact set 
note take set difference dimensions sense 
example performing difference operator mo resulting projection example mo resulting applying selection name jane doe projection mo gives result mo schema fact set dimensions argument fact dimension relations john doe identity join mo predicate ff trueg define identity join fr jf words new fact type type pairs old fact types new set dimension types union old sets 
set facts subset cross product old sets facts join predicate holds 
equal true operation equi join non equi join cartesian product respectively 
instance set dimensions set union old sets dimensions fact dimension relations relates pair value member pair related value 
example want know patients registered name 
take copies patient mo perform projection name dimension 
second copy name dimension type renamed name 
perform identity join predicate 
gives mo dimension types name name 
fact type type pairs patients set facts contents dimensions identical 
fact dimension relations identical john doe jane doe john doe jane doe perform selection mo predicate name name find patients name 
aggregate formation aggregate formation operator compute aggregate functions mo notational convenience klug assume existence family aggregation functions take dimensional subset fdi dimensions arguments sum sums th dimension sums th th dimensions 
assume function args fj uses dimension returns argument dimensions dimensional mo dimension dn type tn function 
dn min di args set categories ci di define aggregate formation dn cn ft ng ti ti ti ti type ci ti ti tij ti type ci ti ti en en cn group en fd ng fdn fc ij di type ij ig ijd fr ng fr en cn group en ei en cn group en group en group en aggregation types remaining parts argument dimensions changed 
aggregation types result dimension rule 
distributive paths cn strict hierarchies cn partitioning dn min dj args dn higher categories result dimension min cm dn combination en dimension values grouping categories apply set facts ffg characterized en place result new dimension dn 
facts type sets argument fact type argument dimension types restricted category types greater equal types grouping categories 
dimension type result added set dimension types 
new set facts consists sets facts facts set share combination characterizing dimension values 
argument dimensions restricted remaining category types result dimension added 
fact dimension relations argument dimensions link sets facts directly corresponding combination dimension values fact dimension relation result dimension links sets facts function results sets 
function distributive paths grouping categories strict hierarchy grouping categories partitioning aggregation type bottom category result dimension minimum aggregation types bottom categories dimensions uses arguments aggregation type higher categories minimum aggregation types result dimension bottom category aggregation type 
aggregate results unsafe sense contain overlapping data aggregation 
prevents user getting incorrect results accidentally double counting data 
example want know number patients diagnosis group 
apply aggregate formation operator patient mo diagnosis group category categories dimensions 
aggregate function set count counts number members set 
resulting mo dimensions diagnosis result dimensions non trivial remaining dimensions contain categories 
set facts 
diagnosis dimension cut part diagnosis group kept 
result dimension groups counts ranges 
fact dimension relation diagnosis dimension links sets patients corresponding diagnosis group 
content meaning sets patients characterized diagnosis groups respectively 
fact dimension relation result dimension relate group patient count group 
content meaning results sets respectively 
graphical illustration mo leaving trivial dimensions simplicity seen right side 
note patient counted diagnosis group patient diagnoses group 
function looks required data facts relevant fact dimension relations sumi finds data fact dimension relation ri 
show common olap relational operators defined terms fundamental operators 
value join join mo common dimension values usual way combining cartesian product special case identity join selection projection 
natural join special case value join selection predicate requires values matching dimensions equal followed projecting duplicate dimensions 
performing drill mo just value join mo common dimensions 
duplicate removal remove duplicate values facts characterized combination dimension values performing set count aggregate formation categories followed projecting result dimension 
sql aggregation computation sql aggregate function mo grouped set dimension categories done applying aggregate formation operator mo categories function 
dimensions group clause projected 
star join star join described just selection dimensions usually combined aggregate formation aggregate function set category types 
drill drill mo means giving detail descending dimension hierarchies 
implicit aggregation function count sum assumed 
drill corresponds performing aggregate formation lower category types aggregate function 
get lower category types original mo needed 
order obtain required detail aggregate formation applied original object 
roll roll mo means giving detail ascending dimension hierarchies aggregating implicit aggregation function 
corresponds performing aggregate formation higher category types aggregate function 
need original mo case 
caused possible non mo means necessarily combine aggregate results intermediate levels higher level results need compute result directly lowest level data base data 
theorem algebra closed 
proof examining output operators see results mo theorem algebra powerful relational algebra aggregation functions 
proof relation schema sr mapped dimensional mo ng ti fai tig ti ai ai ai ai ti ti ti vn rg di fai ig ai dom ai ai ri vi vn vi vi vn rg 
ary relation mapped mo flat dimensions containing domain corresponding attribute 
categories group clause categories dimensions 
facts corresponding tuples relation mapped corresponding values respective dimensions fact dimension relations 
relational algebraic operator apply corresponding operator algebra corresponding mo followed removing duplicates method described 
way emulate relational algebraic operations 
handling time algebra turn attention time handled algebra 
requirements able view data appeared point time database real world analysis related time including analysis times change data 
note operators introduce value equivalent tuples data stays coalesced 
consider valid time mo support need view data appeared point time real world introduce valid timeslice operator 
valid timeslice operator mo define operator fd ig fe ci fr ri representation rep category type cj rep rep 
valid timeslice operator returns parts mo valid time valid time attached valid timeslice operator changes temporal type mo valid time snapshot transaction time respectively 
support analysis related time allow predicates functions selections aggregate formations refer time 
go deeper structure temporal predicates functions full treatment see tsql language :10.1.1.1.4928
step define basic algebra operations deals time attached mo selection operator projection operator rename operator change time attached result ing mo union operator time attachments resulting mo computed fol lowing rules 
rep rep rep cj cj cj 
simply take union sets data occur mo just transfer original time 
difference operator rules 
ri ri nt ff ei ei time pair fact dimension relation mo cut time corresponding pair fact dimension relation second mo pairs non empty sets retained 
facts resulting mo participate resulting fact dimension relations non empty set 
non temporal case alter dimensions mo identity join operator change time attached dimensions resulting mo fact dimension relations rule 
fk ek tk ek tk pair inherits time attachment fact dimension relation relevant argument mo gets 
aggregate formation operator change time attached remaining parts argument dimensions result dimension 
time attached fact dimension relations facts argument dimensions rule 
tuple dimension values subscript denote time argument mo second 
en grouping categories group en ei group en tf eig 
time attached fact dimension relation set facts dimension value intersection time attached relations members set value 
fact dimension relation result dimension rule 
tuple dimension values en grouping categories group en group en group en args tf eig 
time attached fact dimension relation set facts result set intersection time attached relations members set dimension values dimensions uses arguments 
transaction time support define transaction timeslice operator way valid timeslice operator 
transaction time mo returns snapshot valid time mo respectively 
operators algebra support transaction time way valid time 
handling uncertainty algebra consider integration uncertain data algebra 
requirements able view data probability associated analysis related probabilities 
support introduce cut operator similar time slice operators previous section 
cut operator mo probability define cut operator fd ig cig ip fr ig ri pg 
cut operator returns parts mo probability probabilities attached cut operator changes probabilistic type mo probabilistic deterministic 
support analysis related probabilities allow predicates functions refer probabilities 
compute results weighted probability go deeper structure probabilistic predicates functions 
define basic algebra operations handles probabilities attached mo selection operator projection operator rename operator change probabilities attached resulting mo union operator 
union operator dimensions attaches maximum probabilities max fact dimension relations maximum assigned max difference operator retains probabilities argument mo facts appear second argument mo identity join operator change probabilities dimensions 
relations probability participation pair inherited relevant category pair rule fk 
aggregate formation operator change probabilities remaining parts argument dimensions result dimension 
fact dimension relations facts argument dimensions rule 
tuple dimension values en grouping categories group en ei avg group en pf eig 
probability assign membership set facts dimension value aver age probabilities membership individual facts dimension value relation facts result rule tuple dimension values en grouping categories group en group en avg group en args pf eig 
probabilities assign result dimension average probabilities arguments computing function giving rough measure quality results addressing requirements section discuss model addresses requirements section 
model captures explicit hierarchies dimensions lattice structure dimension types 
structure case study seen example 
model treats dimensions measures symmetrically treating data dimensional 
computations performed dimension values results placed dimension 
example age attribute case study measure dimensional entry 
multiple hierarchies allowed dimension 
model requires dimension types form lattice unique top bottom type allowing aggregation paths 
time dimension multiple hierarchies 
mechanism ensures aggregation functions user finds meaningful applied data specification aggregate formation operator ensures fact counted result 
model provides foundation correct aggregation 
example example patient counted diagnosis group patient diagnoses diagnosis group 
value dimension may direct parents model diagnosis insulin dependent diabetes pregnancy insulin dependent diabetes diabetes pregnancy direct parents diagnosis dimension 
non strict hierarchies dimensions supported 
fact dimension relations model support relationships facts dimensions relationship patient diagnosis case study 
building valid support model view data appeared point time 
extending partial order dimension possible link values represent thing change old new diabetes diagnosis 
way may obtain meaningful analysis results changes data 
respect model supports handling change time 
model captures uncertainty data assigning probabilities partial order fact dimension relations 
example express john doe diabetes probability 
dimension values part fact dimension relations belong category dimension supporting manner different levels granularity data 
example express patients low level diagnoses diagnosis families 
motivated popularity line analytical processing olap systems analyzing business data multidimensional data models major database research area 
current models handle complex data real world systems 
real world case study clinical world track patients diagnoses names social security numbers dates birth ages places residence 
case study necessarily true mathematical probability membership 
approach fuzzy probabilistic 
average chosen suit purpose giving rough measure inclusion justify requirements multidimensional data model satisfy order support complex data real world applications 
requirements handled current models include relationships facts dimensions handling change time handling uncertainty handling different levels granularity 
previously proposed data models evaluated requirements shown satisfies requirements fully partially 
propose new extended multidimensional data model addresses requirements 
data model improves previously proposed models supporting non strict hierarchies relationships facts dimensions handling change time handling uncertainty handling different levels granularity 
especially time handled adding valid time transaction time basic model uncertainty handled adding probabilities basic model 
propose algebra multidimensional objects model show closed strong relational algebra aggregation functions 
algebra extended handle time probabilities 
show represent multidimensional objects relational tables providing basis implementing model relational technology 
investigated model efficiently implemented specialpurpose algorithms data structures 
interesting investigate lattice structures schema directly user interface olap tool model 
notion completeness multidimensional algebras similar codd relational completeness exciting research topic 
believe important investigate multidimensional models cope hundreds dimensions applications 
jensen editors 
consensus glossary temporal database concepts february version 
pp 


chen 
entity relationship model unified view data 
acm transaction database systems 
gray data cube relational aggregation operator generalizing group cross tab sub totals 
data mining knowledge discovery 
kimball 
data warehouse toolkit 
wiley computer publishing 
codd 
providing olap line analytical processing user analysts mandate 
technical report codd associates 
agrawal gupta sarawagi :10.1.1.40.8320
modeling multidimensional databases 
ibm technical report 
appeared proceedings thirteenth international conference data engineering pp 

shoshani 
storm statistical object representation model 
proceedings th conference statistical scientific database management pp 

lenz shoshani 
olap statistical data bases 
proceedings th conference statistical scientific database management 
shoshani :10.1.1.39.8267
olap statistical databases similarities differences 
proceedings sixteenth acm symposium principles database systems pp 

gyssens lakshmanan 
foundation multi dimensional databases 
proceedings rd conference large databases pp 

li wang 
data model supporting line analytical processing 
proceedings fifth international conference information knowledge management pp 

lehner 
modeling large scale olap scenarios 
proceedings sixth international conference extending database technology pp 

world health organization 
international classification diseases icd 
tenth revision 
datta thomas 
conceptual model algebra line analytical processing decision support databases 
proceedings seventh annual workshop information technologies systems 
lehner ruf 
redundancy optimization approach aggregation multidimensional scientific statistical databases 
proceedings fifth international conference database systems advanced applications pp 

jajodia sripada editors 
temporal databases research practice 
lncs springer verlag 
melton simon 
understanding new sql complete guide 
morgan kaufmann 
klug 
equivalence relational algebra relational calculus query languages having aggregate functions 
journal acm 
ricci 
proposal logical model statistical databases 
proceedings nd international workshop statistical scientific database management 
jensen 
systematic change management dimensional data warehousing 
proceedings third international baltic workshop db pp 

snodgrass tsql temporal query language :10.1.1.1.4928
kluwer academic publishers 
bettini evans snodgrass wang 
glossary time granularity concepts 
pp 

jensen soo snodgrass 
unifying temporal data models conceptual model 
information systems 
olken rotem 
random sampling databases survey 
statistics computing march 
clifford jensen snodgrass 
semantics databases 
acm transactions database systems june 
barbar garc molina porter 
management probabilistic data 
ieee transactions knowledge data engineering october 
representation model appendix outlines implement model relational databases 
primary concern relational representation allows efficient evaluation queries model 
metadata specified model aggregation types stored separate data handled tool accessing data query tool 
go represent metadata relational database 
traditional way map multidimensional data model relational database star schema fact table contains measures foreign keys dimension tables 
star schema design requires relationships fact dimension tables hierarchies dimensions strict 
represent relationships facts dimensions rows fact table necessary fact 
represent non strict hierarchies rows dimension tables necessary dimension key 
violations pure star schema design lead users get incorrect results aggregating data easy accidentally double count data 
alternatively users understand potential problems need employ expensive select distinct clause sql statements get correct results 
avoid problems non standard mapping relational tables 
basic idea representing dimensions encode partial order dimension composed category representation directly table 
representation rep category cj mo get table cj rep encodes composition rep partial order dimension 
rep encoded table rep direct parent child relationships partial order encoded table po cj rep rep po po denotes reflexive transitive closure po 
note cj rep contain duplicates 
means get double counting data computing aggregates term base table hierarchy non strict case star schema representation described 
cj rep updated incrementally insertions po rule po po po po po po example grouping table table encodes direct parent child relationships diagnosis dimension 
perform reflexive transitive closure grouping table getting pairs diagnosis partial order 
joined diagnosis table encodes code representation diagnosis group category 
gives table code seen table 
temporal aspects table discussed 
code table code table example alternatives exist representation fact dimension relations 
fact dimension relationships standard fact table approach foreign keys dimension encoding tables suffice 
relationships alternatives maintain dimension encoding tables joined fact dimension relation duplicates making resulting table point facts new lowest level dimension encoding tables combination dimension values pointed fact fact table point combination encode fact dimension relation directly separate table 
example example alternative maintain join code table 
alternative give combinations bottom values extension code table 
fact table point combinations diagnoses directly 
alternative just keep code tables 
alternative advantages 
alternative provides direct access facts problems double counting tables big rows pair rendering solution impractical 
alternative attractive number combinations small avoid problems double counting number combinations large size problems 
alternative keeps size tables minimum accidental double counting possible select distinct clauses sql statements 
extending representations capture valid transaction time basic dimension encoding mechanism works 
encoding table extended columns capturing time tuple true 
take intersection time periods tables joined capturing time period combined tuples valid 
code table extended time seen table 
alternative extended time columns problems 
alternative need enumerate combinations dimension values associated time periods 
probably lead number combinations close number facts rendering solution impractical 
extending representations capture uncertainty just extend tables columns probabilities 
joining tables product probabilities resulting tuple 
alternatives representing fact dimension relations extended probability columns problems 
alternative need enumerate combinations dimension values associated probabilities yielding considerably larger number combinations 

