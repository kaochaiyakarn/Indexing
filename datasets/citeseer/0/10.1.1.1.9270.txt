hms predictive text entry method bigrams jon erik markus lund institute technology department computer science box lund sweden jh em msv efd lth se due emergence sms messages significance effective text entry limited size keyboards increased 
describe discuss new method enter text efficiently mobile telephone keyboard 
method called hms predicts words sequence keystrokes dictionary function combining bigram frequencies word length 
implemented hms text entry method software simulated mobile telephone keyboard compared widely available commercial system 
trained language model corpus swedish news evaluated method 
training corpus reflect language sms messages results show decrease percent number keystrokes needed enter text 
figures encouraging implementation optimized ways 
hms text entry method easily transferred languages 
entry text computer applications traditionally carried key keyboard 
keyboards allow input characters completely unambiguous way single keys key combinations 
years mobile telephones introduced new demand text entry methods 
mobile telephones usually optimized size weight 
result keyboard reduced minimal button keyboard 
button keyboard nokia 
reduced keyboard hard user enter text efficient way multiple tapping long key combinations display disambiguate characters 
albeit tedious multiple tapping method commonly implemented mobile telephones time ago 
spare user elements frustration new class text entry methods appeared 
uses dictionaries attempt resolve word ambiguity requires cases keystroke character 
proposes method supplements dictionary word bigram probabilities 
method uses written word improve prediction current word decrease number needed keystrokes 
method refer hms rest text uses frequencies common bigrams extracted corpus texts 
current text entry methods section summarize text entry methods currently methods development 
mentioned methods keyboard buttons 
measurement efficiency different text entry methods number keystrokes character kspc mackenzie 
completely unambiguous keyboard enables kspc text prediction methods may reduce number 
multi press methods multi press methods require keystroke enter character 
methods allows typing characters 
fallback systems complex text entry methods 
methods suited type words contained dictionary 
multi tap method common way enter text mobile telephone multi tap method 
share key user presses enter twice enter times enter 
enter word dog user presses sequence keys 
consecutive characters word share key example word assigned timeout needed determine shifting letters display new character 
method results kspc english text entered mackenzie 
remapped keyboard current mobile telephone keyboards characters assigned alphabetically keys 
optimal instance frequent character english displayed taps 
remapped keyboards assign single key frequent characters 
remaining characters grouped sets share key 
method decreases kspc frequent characters entered keystroke 
program uses idea remapped keyboard technique 
results kspc mackenzie 
single press methods single press methods try reduce kspc roughly 
resort dictionary mean resolving ambiguity input 
predictive text entry method predictive text entry method user presses key character program matches key sequence words dictionary 
characters mapped key cases word possible sequence 
method possible reduce kspc roughly 
key sequence corresponds words user browse resulting word list choose word intended write 
user example enters word come pressing 
program propose word matches entered sequence 
user presses program propose words con come 
words bone bond fit sequence 
user access words pressing key 
new mobile telephones method 
widely implementation grover 
implementations zi zi itap motorola division implementations match words length key sequence resulting kspc slightly greater user types words contained dictionary 
implementations propose words longer tapped sequence probability information words 
implementations reach kspc 
developed ergonomics uses auxiliary key 
character key selected explicitly simultaneously pressing key corresponding character auxiliary key indicating position character key 
decreases number matching words key sequence considerably user explicitly disambiguates characters sequence 
drawback keys pressed concurrently 
limited space keyboard prove difficult users 
letterwise letterwise mackenzie ergonomics different approach eliminates need large dictionary 
considers letter digram probabilities 
english letter followed hardly 
program selects probable letter knowing previous 
user browse change characters pressing key 
letterwise method kspc mackenzie 
main advantages small amount memory needed 
advantage fact just easy enter words dictionary 
suitable fallback method multi tap methods produce faster text input 
predictive text entry bigrams prediction may improve performance text entry limited keyboard 
suggested words may longer currently typed input 
propose word bigrams consecutive words give better text prediction see inter alia shannon jelinek manning sch tze 
list bigrams stored memory frequency occurrence accessed simultaneously character input 
previously written word probable subsequent words extracted bigram list 
maximum likelihood probability bigram wn wn word wn computed pmle wn wn wn wn wn previously written word wn known constant sufficient frequency bigrams set aside wn 
practice bigrams combined dictionary 
sparse data development corpus memory constrains impossible store exhaustive list bigrams 
choose words propose variation katz model katz 
katz model takes longest available gram uses correction terms normalize probabilities 
case bigrams probabilities expressed wn wn wn wn wn wn wn wn wn correction term 
implementation bigrams prioritized unigrams 
katz back model suited implementation allows small memory footprint bigrams list ensuring system support entering words dictionary 
addition bigram frequencies word length useful criterion matching words user 
additional parameter justified navigation list words keys available mobile telephones 
bigram probabilities produce list possible words rank regard effort needed select intended word 
browsing list carried scrolling key may take couple keystrokes reach word 
corpus frequencies suggest longer word preferred shorter presentation decreasing frequencies may inadequate 
list navigation fact easier cases character input keys 
single keystroke resolve great deal ambiguity total keys choose compared unique scrolling key cycle list suggested words 
list proposed words short words additional weight 
implementation implemented software prototype hms method described 
chose java programming language extensive packages allow rapid development 
advantage java platform independence theory possible run program modern mobile telephone 
program designed run handheld device client side mobile network 
memory mobile telephone limited disadvantage strategy memory footprint language models 
possible workaround implement hms software application server 
users share language models possible customizations 
modern mobile telephone infrastructures enable real time round trip typed characters interactive suggestion matching words 
program computes list word suggestions time key pressed best suggestion displayed simultaneously screen top white window java program 
user browse list suggestions keys 
program design program divided parts user interaction module lexical database module 
user interaction module currently consists graphical user interface gui layout closely resembles mobile telephone 
simulated keyboard layout possible compare hms prototype software running mobile telephones 
lexical database module contains core program 
responsible generation list suggested words user input far 
modules communicate interface 
parts independent may modify user interaction module particular fit different platforms screenshot hms java prototype 
having modify module concerning word guessing algorithm 
data structures compact encoding structure bigram unigram lists significant impact achieve efficient word proposal 
data structure comparable letter tree trie de la 
nodes new tree structure correspond input key character classical tries 
instance characters associated single node 
tree structure enables represent keystroke ambiguity easier traverse tree 
introduces need store complete list words match keystroke sequence leaves resulting somewhat higher memory overhead 
searching type tree straightforward 
keys pressed far user input tree traversed level key pressed 
traversal completed resulting sub tree includes possible suggested words typed key combination 
bigrams slightly different structure needed 
previously written word chosen list suggested words longer considered ambiguous 
simply build tree bigrams proposed structure tree ambiguous 
collection trees tree preceding word 
performance reasons hash table manage collection 
training language model trained language model unigrams bigrams stockholm ume su corpus 
su corpus pos annotated balanced corpus swedish news reports novels su corpus reflect language sms messages differs greatly classical written swedish 
results non optimal language model 
chose unavailability large public sms corpus 
input single word completed corresponding bigram unigram probabilities updated 
results learning system adapts user style writing 
increase speed adaptation language frequencies derived user input higher priorities learned training corpus 
corpora dictionaries software swedish far 
hms program carry parsing semantic analysis 
method transferred language provided sufficient corpus exists 
evaluation evaluation efficiency implementation initial comparative test hms program nokia uses system 
said previous section train language model optimized sms application 
certainly biased evaluation entry methods 
chose evaluate programs test set consisting sample sms messages short texts newspapers 
total testers entered texts 
possibility get accustomed hms methods 
testers encouraged compose short arbitrary sms message characters containing everyday language 
chose excerpt newspaper article approximately length typed sms message swedish newspaper website 
keystroke count recorded calculate kspc parameter 
entry new words missing dictionary uses technique hms methods 
selected texts words dictionary systems 
table shows results obtained keystrokes character 
method table test results 
type text kspc sms hms bigrams sms news hms bigrams news hms entry method shows kspc smaller system tests news sms texts 
improvement respectively percent 
better result bigram method mainly due reasons 
utilization previously written word predict word results improvement prediction compared methods relying dictionaries 
secondly fact words predicted characters entered improves performance hms 
discussion difference kspc sms news text method large extent due corpus fit casual language typical sms texts 
method hand optimized typing sms texts 
reason difference may news texts general contain longer words 
mean word length test characters sms texts characters news texts 
general longer words predicted earlier relatively words possible sequence keystrokes 
imply smaller kspc longer words 
shows kspc word length falling curve longer words 
kspc versus mean word length hms bigram method 
longer word resolves ambiguities possible words key sequence fewer short sequence 
explains system shows better result news text 
reach kspc doesn predict words longer sequence 
kspc versus mean word length system 
significant differences sms news texts play role final results 
example sms texts show higher frequency certain characters question marks slashes exclamation marks results higher kspc 
fact explain surprisingly high kspc texts 
property affects methods extent 
perspectives implemented new text entry method adapted mobile telephone keyboards compared method widely available commercial devices 
hms method language models trained su corpus 
training corpus great extent collected swedish news wires didn fit application 
heavily related language sms messages tends include abbreviations slang absent su corpus 
results obtained hms method show decrease percent number keystrokes needed enter text 
figures encouraging implementation optimized ways 
interesting evaluate kspc bigram method training system better suited corpus 
expect kspc significantly lower corpus 
worth pointing non optimal corpus results bigram method par superior 
observed language model adapts quicker users individual ways expressing systems 
increases gain time 
time wrote gain access large corpus sms messages 
intend collect texts internet chat rooms message boards language shows strong similarities sms language 
expect better language model improved kspc new corpus 
problem bigram method large memory footprint compared systems 
problem generation mobile tele phones gprs 
language models loaded application server low round trip time network system enable real time interaction server user terminal carry word selection 
zi 


technical report www com 
de la 

file searching variable length keys 
proceedings western joint computer conference volume pages new york 
institute radio engineers 
division 

itap 
technical report motorola www motorola com december 
eva ola magnus astr 
linguistic annotation system stockholm ume project 
technical report university ume department general linguistics 
dale grover martin king clifford 

reduced keyboard disambiguating computer 
patent 
jan 

communication terminal having predictive editor application 
patent 
frederick jelinek 

statistical methods speech recognition 
mit press cambridge massachusetts 
slava katz 

estimation probabilities sparse data language model component speech recognizer 
ieee transaction acoustics speech signal processing march 
scott mackenzie derek smith terry jones eugene 

letterwise prefix disambiguation mobile text input 
technical report www com research lw mt pdf 
scott mackenzie 

kspc keystrokes character characteristic text entry techniques 
proceedings fourth international symposium human computer interaction mobile devices pages heidelberg germany 
springer verlag 
christopher manning hinrich sch tze 

foundations statistical language processing 
mit press cambridge massachusetts 


fast full text entry physical virtual button keypad 
technical report www com whitepaper pdf 
claude shannon 

mathematical theory communication 
bell system technical journal july october 
