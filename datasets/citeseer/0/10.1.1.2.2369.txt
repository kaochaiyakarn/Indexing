resource allocation federated distributed computing infrastructures alvin brent chun alex snoeren amin vahdat uc san diego consider problem allocating combinations heterogeneous distributed resources parties 
particular consider problem context distributed computing infrastructures resources shared users different administrative domains 
examples infrastructures include planetlab computational grids 
users derive utility receiving share resources 
excess demand resources isn possible completely satisfy resource requests 
argue important infrastructures allocate resources way maximizes aggregate user utility 
allocation system known economically efficient 
user utility function resources isn typically known priori determining allocation policy maximize utility difficult presence excess demand 
infrastructures widespread contention resources increase allocating resources economically efficient manner difficult 
shows snapshot resource demand planetlab 
due way resources distributed planetlab rise contention decreases portion resources received individual user reducing amount useful completed system 
argue appropriate mechanisms users cooperate arrive optimal resource allocation spite excess demand 
specifically allowing users express preferences resources received system able spread excess demand time increase efficiency system 
design early implementation bellagio distributed resource discov material supported national science foundation graduate research fellowship 
intel research berkeley average cpu load may date th average th percentile load average planetlab nodes leading may osdi deadline 
ery market allocation system federated distributed computing infrastructures 
system users identify resources interest resource discovery mechanism express preference resources time space form combinatorial auction bids 
resource allocation controlled centralized auctioneer 
addition bellagio uses strategy proof design provides incentive users reveal true valuation resources 
knowledge system supports allocation combinations heterogeneous goods flexible economically efficient manner 
implemented prototype validated performance simulation 
plan deploy complete system planetlab wide area test bed gain experience real users 
related proportional share scheduling common approach provide access local time shared resources 
effective approach insufficient employed mechanism resource sharing 
example users behave manner share resources needed 
behavior allows resources productively 
users self interested consume share available resources lowering amount useful performed system 
market approaches applied motivate efficient resources 
users finite amount virtual currency incentive consume resources sparingly 
primary limitation model difficulty scheduling combination resources simultaneously desired 
scheduling techniques applied address problem clusters approaches ineffective resources differentiated spread wide area 
importantly technique allow user express interest particular combination goods 
market approaches spawn popcorn tycoon provide empirical evidence effectiveness market mechanisms allocating resources economically efficient manner 
systems resources allocated proportion amount currency spent 
resources expensive heavier demand incentive users reduce consumption 
systems rely scheduling single cpu cycles 
interested environment heterogeneous goods exist disk space memory bandwidth users express interest particular sets resources 
fixed price schemes deal heterogeneous goods calculating market clearing price resource historical data demand 
goal schemes clear market different maximizing aggregate user utility 
believe providing endusers benefit priority system maximizing resource utilization 
market approaches computational grid environments nimrod allow users specify types resources needed negotiate system particular set resources particular price 
requires system perform complex tasks price negotiation resource discovery potentially large number resources 
particularly difficult user wishes obtain combination resources 
approaches computational grids gram condor notion economic efficiency allocating resources provide incentive users consume resources sparingly 
deployment bellagio intended serve resource discovery resource allocation system distributed computing infrastructures 
platform intend deploy bellagio planetlab overlay network machines hosted sites world 
sites mainly research institutions countries 
purpose planetlab encourage development new disruptive technologies internet 
serves wide area testbed academic researchers eventually deployment platform distributed services 
value planetlab testbed derives mainly global distribution machines academic researchers able test new network services real world network conditions 
deployment platform allow individual sites global resources support distributed client base 
applications run slice planetlab resources 
slice share resources set planetlab machines chosen application 
currently planetlab machine runs linux operating system supports mechanisms allow centralized administration individual machines 
administration able monitor health status machine manage user accounts distribute cryptographic keys planetlab machines 
planetlab machines support notion proportional share scheduling slice guaranteed nth machine resources 
admission control performed limit shares machine simultaneous slices run machine 
constraint resources application slice bind 
bellagio architecture environment modeled virtual marketplace users spend virtual currency exchange combinations system resources 
expect able extend model economic exchange users act producers consumers resources exchange resources virtual currency goods 
current architecture users receive virtual currency budgets resource contribution system 
challenges designing resource allocation system mirrored economics economics researchers try create mechanisms enforce particular long term market characteristics 
motivates market design bellagio 
economic markets broadly categorized types commodities markets auctions 
auction appealing model market seller resource know buyers valuation 
especially important expect demand fluctuate rapidly times 
requiring users submit bids alleviates system having determine value price combinations goods expensive computational task 
result adopting combinatorial auction model marketplace designed bellagio components resource discovery resource market 
resource discovery distributed resource discovery allows users identify available resources 
particularly important resources heterogeneous 
bellagio uses sword perform resource discovery 
sword distributed resource discovery service currently deployed planetlab allow users locate particular resources matching various criteria 
example users search resources resource specific attributes machines low cpu load large amounts free memory inter resource attributes machines low inter node latency logical machines specific administrative domain physical attributes geographic location 
attributes sword allows users specify utility function specifies extent user allows attributes deviate specified values 
sword returns set resources closely match user specified utility functions 
user perform multiple queries determine different sets resources valuation different sets 
additional queries performed establish interdependent attributes resources 
resources dynamic exhibit changing temporal characteristics useful users bid specific resources results resource discovery mechanism 
intended resource discovery mechanism express resource specifications 
bellagio uses sword translate resource specifications concrete candidate resource sets 
users express preferences resource specifications bidding language 
resource market users express preferences resources bidding language resources allocated running period auction 
bids bellagio expressed units virtual currency 
participating site bank account maintains balance virtual currency available authorized users participating site 
mentioned assume existence authentication infrastructure authenticate bids transfer resource capabilities verify account balances 
bids participating site accepted long balance associated site account large pay bid price 
design bidding languages determines possible bids easily expressed user 
trade different bidding languages expressiveness language types bids expressed versus space complexity representing bids 
previous combinatorial auction bidding languages examined problem certain bidding languages expressive space efficient 
difficulty designing bidding language tradeoff expressiveness bidding language amount performed satisfy complex bids 
initial implementation xor language define bidding language intuitive language understood easily endusers expect cases requiring large amount space bid expression common 
evaluate efficacy resolving bids language evaluation system 
bid consists sets resources bid time period desired amount virtual currency associate bid 
auctions cleared hour 
resources bound longer hours longer week advance 
formally bids constructed follows define variables follows set auctions consider bid duration resource reservation set resources 
bid defined bi bi bid previously constructed 
defines range possible start times 
resource set constructed resource discovery mechanism ri qi minimum total number resource ri required 
value bid defined virtual currency system 
mentioned earlier resource discovery mechanism may find specific set resources may formulate set resources specifying set resource attributes 
bids resolved bellagio uses resource discovery mechanism populate resources bid appropriate resource sets 
especially important resources highly dynamic 
resource allocation performed current set resource attributes 
resource market allows allocation complex combinations goods 
users may motivated resources need 
providing limited budget virtual currency limit behavior provide general strategy proof mechanisms provide desired behavior system 
strategyproof mechanisms economic theory mechanism design provides users incentive behave particular way 
purposes behavior reveal true value resource allowing system maximize economic efficiency allocating resources users value appropriate price 
describe mechanisms allocate resources provide strategy bellagio 
employ share resource allocation mainly supports exchange heterogeneous resources 
share allocates resources clearing combinatorial auction 
problem combinatorial auction known np complete 
exist approximation algorithms winner determination combinatorial auction 
investigating different approximation algorithms clear auctions 
experimental algorithms described detail chun share uses threshold rule determine payments 
threshold rule similar payment rule second price auctions 
auctions payment winning bid set price second highest bid 
key result payment rule forces users reveal true value goods bidding 
bidder dominant strategy bid exact valuation rational bidders bid truthfully allowing share allocate resources way maximizes economic efficiency 
see details 
payment amount winning bid determined threshold rule user bank account charged appropriate amount resource bindings performed returning resource capabilities form tickets winning bidders system sharp 
access resources bellagio guarded resource capabilities 
resource capability represents right application resource application resource capability resource order 
implementation section describes initial implementation bellagio 
addition describing user interface algorithms auction clearing discuss set open issues defining appropriate policies system describe initial approach dealing 
user interface bellagio provides web interface command line interface perform resource discovery queries construct bids 
web interface runs cluster linux machines uses php front database backend 
database contains account balances virtual currency manages user authentication 
command line interface provided support automated agents perform bid placement currency management 
interface uses xml rpc communicate centralized bellagio server 
live deployment authentication infrastructure integrated distributed computing infrastructure 
user bellagio account 
account user view results previous resource discovery queries bids upcoming periods 
specifications resource sets previous resource discovery queries stored user account 
addition web interface bellagio provides hook sword web interface allow direct resource discovery queries 
resource attributes provided sword available bellagio create resource specifications 
resource specifications created construct bids 
resource specifications bids stored 
place bid user specifies resource specification set resource specifications acceptable start times duration bid amount 
bid placed withdrawn auction clearing period begins 
multiple bids placed bids account considered 
example user submits bids amount bid complete account balance bid ignored satisfied 
bids invalid discarded auction clearing algorithm 
illustrate example experiment wishing analyze effectiveness defense distributed denial service ddos attack 
user interested fractional shares large number machines scattered country simulate ddos attackers 
obtain attacker machines satisfied 
set high bandwidth machines serve server web servers victims 
satisfied 
define resource specification attackers uses sword provides attribute machine geographic network coordinates 
provides distinct geographic network coordinates attribute requesting machine distance coordinate 
furthermore require constraint nodes reside planetlab site 
bandwidth attribute sword similarly define resource specification web servers 
experiment run course days starting time weeks 
ok nodes uses bidding language express valuation 
example wishes bid entire virtual currency balance desired resource set willing pay half amount half resources 
illustrated table 
auction users notified outcome bid 
bid satisfied appropriate resource capabilities available download user account form xml document 
addition mail notice sent user mail address required registering bellagio notifying outcome bid 
resource market initial implementation resource market greedy approximation algorithms clear combinatorial auction 
approximation algorithm reduces amount time needed compute set winners potential cost efficient allocation 
calculates value bid diving bid amount product duration number resources performs allocations decreasing order bid values 
ties broken giving preference resource sets specific 
algorithm scales practice requiring minutes resolve auction 
providing approximation algorithm formulated solver mixed integer programming problem mip requires time arrive solutions closer optimal particular sets bids 
currently algorithm scale increasing number bids resources defer development algorithm 
bellagio clears auctions hour possibility reserve resources days 
important parameter control deployment represents tradeoff usability long experiments hope run far advance users plan experiments 
policies benefit auction model bellagio decouple economic policy mechanisms enforce 
resource capabilities means obtain resource shares virtual currency means obtain resource capabilities 
controlling distribution wealth virtual economy bellagio control share resources received individual participants arbitrarily long time scales 
order control distribution wealth users policies bellagio determine earn virtual currency limit wealth 
order obtain resources users obtain virtual currency 
possibility back virtual currency real currency 
alternative allow users earn virtual currency contributing resources shared resource pool 
advantage providing incentive contribute resources infrastructure 
potential limitations method 
difficult measure contribution resource relative 
example donating machines ghz hyper threading processors valuable donating machines 

virtual currency attackers servers attackers servers table example bid ddos defense example 
row represents clause xor bid 
represents entire balance virtual currency 
dual mhz processors 
method valuation contributed resource measure amount demand particular resource 
unfortunately opens opportunities potential collusion user able artificially inflate value contribution consuming idle convincing friendly party consume resources preference equivalent resources 
relieve burden having divide revenue earned resources parties resources initially adopted model bellagio owns shared resources divides revenue predefined allocation policy 
user contribution federated system measured band 
downside requires agreed currency distribution policy participating users assume fair policy eventually discovered practice 
virtual nature currency allows sufficient latitude discovering agreeable distribution policy 
assuming existence currency distribution policy assume participating sites receive periodic deposits virtual currency bank accounts 
dangerous parties decide save currency long periods time order disproportionate amount wealth 
amount strategy proof design prevent user dominating control resources bid little consequence 
address issue bound amount virtual currency accumulated bank account 
potential side effect approaches bound high low 
cap high allow parties particular amounts wealth cap low disproportionately punish users mitigating effects differentiated currency distribution 
real world economic policy level inflation constantly monitored 
observing long term resource distribution patterns users system adapt currency cap appropriately 
hope long term distribution resources users bellagio stable effects different currency policies un clear 
described policies bellagio control order control distribution wealth observed behavior deviate desired behavior 
evaluation main performance requirements bellagio efficient fair usable 
measure efficiency client resource requests mapped resource bindings quickly mappings assigned 
metric thought aggregate user utility maximized utility defined value resource binding particular user 
economic terms known maximizing social welfare 
system needs able compute resource allocation reasonably fast order useful 
fairness describes variation individual user utility provided system 
system allocate resources long term utility individual user follows pre defined value relative utility individual users system 
furthermore long term utility adversely affected behavior participants system 
simple example condor system scheduling policy protected light users starvation heavy users 
usability describes user actions translated resource bindings 
describes flexibility system respect granularity time space users express resource requests 
conducted initial experiments data planetlab workload traces synthetic workloads 
course expect truly gain understanding system behavior experience live deployment real users particularly usability system 
demand 

light heavy table parameters users experiment periods varying demand 
simulate heavy demand doubling resource requests bids 
refers machine refers entire balance virtual currency 
bids heavy demand clauses xor bid 
experiments initial evaluation bellagio set experiments designed test scalability long term behavior system 
scalability main computational bottlenecks bellagio resource discovery algorithm sword auction clearing algorithm share 
bottlenecks scale reasonable number users bids resources 
resource discovery algorithm sword distributed scales large number resources client query rates 
analysis sword indicates performance resource discovery algorithm requires seconds average respond query query rate queries minutes 
performance auction clearing depends auction clearing algorithm 
analysis various heuristic algorithms shows greedy algorithm employed bellagio scales easily bids resources 
efficiency experiment illustrates bellagio handles varying levels demand 
experiment consists auction clearing periods resources 
period intended simulate system light demand second period simulates system heavy demand 
heavy demand simulated doubling quantity resources requested bid 
simplicity assume resources homogeneous users express similar interests 
situation excess resource demand expect users able tailor applications receive smaller resource shares 
define users experiment equal amounts virtual currency preferences bids summarized table 
user user user user user light demand heavy demand utility derived user function resource shares bellagio 
higher utility represented dark shaded box lighter shades represent utility 
user user user user user light demand heavy demand utility derived user function resource shares bellagio 
figures plot utility derived users resources receive 
experiment define application utility bid amount 
higher utility represented dark boxes lower utility represented lighter boxes 
illustrates scenario similar access resources controlled merely form proportional share 
scenario user receives full resources periods light demand 
resource consumption increases user receives approximately machines resources 
table see derive utility resource set 
despite able tolerate fewer resources users incentive slow delay resource consumption guarantee users scale back usage 
user receives utility duration excess demand 
illustrates bellagio handles resource contention 
period light demand bellagio satisfy resource requests 
resource contention increases bellagio spread resource requests order maximize aggregate utility users 
bellagio assigns resources user provides user time share receives full request resources 
illustrates potential benefit allowing resource demand spread time reduce impact resource contention 
fairness measure long term behavior resource distribution conduct experiment set users varying currency distributions bidding portion resources 
experiment consists periods light demand heavy demand 
auction clearing period users submit bid consisting entire balance virtual currency 
period light demand users bid small set resources surpass number resources available system quantity 
period heavy demand bidders double amount resources requested 
addition previously inactive bidders bidding period 
results 
demand user user bidding demand scenario bidder resource request completely satisfied 
timesteps contention resources 
bids entire balance virtual currency duration time period 
initially users able obtain resources users accrue currency eventually able obtain share resources 
see distribution resource winnings periods excess demand proportional distribution virtual currency 
distribution resource winnings pronounced closer currency rates 
see behavior user user similar currency rates 
result bellagio appropriate currency distribution policy protect light users starvation heavy users condor added flexibility determining actual proportion resources distributed user 
bellagio provides incentive users spread resource demand order reduce amount resource contention 
exports intuitive interface familiar economic model hopefully increase utilization distributed resources user utility 
performance system fully understood live deployment 
expect method resource reservation details virtual economy evolve users system 
mentioned earlier plan deploy system planetlab gain experience having real applications workloads system 
particularly interested extent bidding language constrains types allocation performed effectiveness virtual currency policies spreading resource demand time 
furthermore able extend model resource marketplace resource exchange 
environment users act producers consumers goods exchange resources virtual currency users auctioneer simply act facilitator exchanges keep track resource consumption currency balance 
difficulty implementing incentive design 
mentioned earlier payment rule bellagio provides incentive users bid truthfully resources 
economic theory rule applies auctions hold economic exchanges 
alexandrov schauser 
research issues java global computing 
concurrency practice experience june 
arpaci dusseau culler mainwaring 
scheduling implicit information distributed systems 
proceedings acm sigmetrics joint international conference measurement modeling computer systems pages 
acm press 
boutilier 
bidding languages combinatorial auctions 
proceedings th international joint conference artificial intelligence pages 
buyya abramson giddy 
architecture resource management scheduling system global computational grid 
proceedings th international conference high performance computing asia pacific region pages may 
parkes ng seltzer 
strategyproof computing systems infrastructures self interested parties 
percentage bids won running average excess resource demand distribution resource winnings time bid slots user hr user hr user hr user hr user hr percentage resource requests satisfied parties different currency rates 
axis expressed percentage total resources won taken weighted average previous time slots 
point excess demand begins labeled plot 
time steps represent demand system resources 
currency rate party labeled plot 
st workshop economics peer peer systems berkeley ca june 
chun ng albrecht parkes vahdat 
computational resource exchanges distributed resource allocation 
foster kesselman tuecke 
anatomy grid enabling scalable virtual organizations 
international journal supercomputer applications 
fu chase chun schwab vahdat 
sharp architecture secure resource peering 
proceedings nineteenth acm symposium operating systems principles pages 
acm press 
czajkowski foster kesselman karonis martin smith tuecke 
resource management architecture metacomputing systems 
workshop job scheduling strategies parallel processing 
lai huberman fine 
tycoon distributed market resource allocation system 
technical report cs dc hewlett packard 
litzkow livny mutka 
condor hunter idle workstations 
proceedings th international conference distributed computing systems pages june 
nisan 
bidding allocation combinatorial auctions 
proceedings nd acm conference electronic commerce pages 
oppenheimer albrecht patterson vahdat 
scalable wide area resource discovery 
technical report ucb sd uc berkeley uc san diego 
parkes 
achieving budget balance vickrey payment schemes exchanges 
proceedings internation joint conference artificial intelligence pages 
peterson culler anderson roscoe 
blueprint introducing disruptive technology internet 
regev nisan 
popcorn market online market computational resources 
proceedings international conference information computation economies pages 
sandholm suri levine 
cabob fast optimal algorithm combinatorial auctions 
proceedings international joint conference artificial intelligence pages 
sandholm suri levine 
winner determination combinatorial auction generalizations 
proceedings international joint conference autonomous agents multiagent systems aamas pages 
stoica abdel pothen 
microeconomic scheduler parallel computers 
proceedings workshop job scheduling strategies parallel processing pages 
springer verlag 

economic approach adaptive resource management 
workshop hot topics operating systems pages 
waldspurger hogg huberman 
spawn distributed computational economy 
ieee transactions software engineering pages 
waldspurger weihl 
stride scheduling deterministic proportional share resource management 
technical report massachusetts institute technology 
wolski plank bryan 
analyzing market resource allocation strategies computational grid 
nisan 
efficient approximate allocation algorithm combinatorial auctions 
proceedings rd acm conference electronic commerce pages 
acm press 

