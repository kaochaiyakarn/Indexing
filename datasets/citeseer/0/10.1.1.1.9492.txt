kom swiss army knife simulation emulation experiments oliver heckmann krishna pandit jens schmitt ralf steinmetz kom multimedia communications lab department electrical engineering information technology department computer science darmstadt university technology 
darmstadt germany heckmann pandit schmitt steinmetz kom tu darmstadt de multimedia networking involves complex collections protocols particular protocols support inherent quality service qos requirements multimedia applications 
analytical treatment falls short able assess system behaviour performance 
simulation testbed experiments leave results deliver 
combination simulation testbed experiments promises avoid disadvantages isolated usage bears 
discuss kom scenario generator tool supports integration simulation testbed experiments system wide assessment design alternatives particular complex environment distributed multimedia systems 
systematically analyses different steps creating research scenario 
interested combining simulations testbed experiments scenario generator helpful tool systematically integrates supports different steps creating complex network research scenario topology creation traffic generation evaluation 
introduce called kom scenario generator kom developed context project www de 
project compare different qos technologies intserv rsvp diffserv different flavors abe price controlled best effort load control gateways simulations testbed experiments 
conduct different experiments 
qos technology estimate factor best effort network designed match qos technology 
measure utility wide range different application mixes different qos technologies switched 
estimate scaling behavior repeating utility measurement experiments scarce router resources 
support wide range technologies experiments developed scenario generator supports manual automatic creation experimentation scenarios network research topology creation traffic generation evaluation 
believe approach general scenario generator helpful researchers areas multimedia network research 
continue motivating approach 
overview scenario generator definitions terminology related discussed third section 
fourth section discuss different steps scenario generation supported scenario generator detail 
conclude summary pointer video demonstrates kom 
motivation multimedia network research conducted analytical methods simulation testbed real world experiments 
methods advantages disadvantages 
simulations example relatively cheap carry 
realistic simulations depend correct realistic setting simulation parameters models 
analyzing protocol simulator original protocol reimplementing protocol 
costs certain operations routing lookup hard estimate simulation 
harder code basis simulation different code real world router case 
want analyse performance rsvp hardly done solely simulation 
simulation models certain level abstraction necessary hard judge realism results suffers abstractions 
researchers rely correctness simulation models protocol implementations example tcp implementation verification models hard especially typically completely different code basis real world implementations 
realistic setting parameters easier testbed experiments 
costs operations measured far better testbed experiments admit measurements valid hardware software platform testbed 
types routers may behave differently 
testbed real world possible real world applications protocols tcp current web browsers ftp server clients testbed experiments increases realism decreases chances unrealistic misleading results wrong models bad implementations neglected details 
testbed experiments share disadvantages simulations set disadvantages 
testbeds generally relatively expensive 
testbeds typically difficult configure reconfigure 
limited scale 
experiments hundreds nodes usually performed testbed 
realism results experiments nodes typical testbed experiments hard judge 
observations sense combine simulations testbed experiments recommended literature actual research 
main reason tools specialized simulation emulation doing simulation emulation leads nearly twice effort simulation emulation 
motivation kom supports integrated fashion simulation emulation experiments time 
kom testbed experiments conducted establish realistic simulation parameters create data simulation results compared 
costs operations estimated testbed results 
small testbed experiments conducted decreases costs testbeds larger experiments larger topologies higher bandwidth flows conducted simulation 
interested combining simulations testbed experiments kom gen useful 
scientists aware different steps undertaken doing simulation testbed experiment 
analyse discuss different steps creating testing network research scenario topology creation traffic generation evaluation 
kom supports steps mixing 
overview section give overview terminology different steps scenario generation 
steps discussed sec tion detail 
discuss related 
terminology traffic term traffic describe amount bits sent link output node 
traffic described ways increasing level abstraction see section 
term traffic mean internet ip traffic 
network simulation network simulation computer models real network components estimate behavior network input regard typical networking parameters loss delay throughput 
network simulators ns network simulation 
ns simulations 
real world testbed experiment real world testbed experiment behavior network input estimated measurements real physically existing computer network testbed research network production network 
simulation experiment scenario term scenario describe simulation experiment setup execution evaluation 
scenario includes parameters needed simulation experiments topology link node properties traffic mix simulation experiment parameters measurement points traffic simulator traffic simulator delivers traffic input network simulator ns 
traffic emulator traffic emulator emulates traffic sending real packets network interface ethernet card 
traffic simulator emulator contain module generates data structures resemble traffic call traffic generator 
traffic generator traffic gener ator artificially generates traffic 
traffic derived called traffic models 
generated traffic simulation emulation 
traffic model traffic model describes general way traffic kind generated 
different kinds traffic models describe different types traffic voice ip traffic web traffic telnet traffic traffic models discussed section 
generator simulator ns generator emulator ethernet 
traffic generators part network load network load characterize traffic node network topology 
load generator load generator generates network load traffic nodes topology 
generating scenarios different steps generating scenario depicted 
supported kom scenario generator 
step topology created manually automatically 
properties links nodes bandwidth queuing algorithm set manually automatically 
traffic parameters scenario set 
network load traffic nodes created 
step followed plausibility check things critical scenario checked plausibility 
example estimating bandwidth necessary generated traffic comparing available bandwidth 
bandwidth needed offered operator want change scenario parameters 
plausibility check scenario exported ns simulation collection scripts configuration files setup scenario testbed 
step manually adapt ns files scripts configuration files specific needs 
simulation experiment conducted step evaluated 
topology generation link node properties load generation evaluation related scenario generation people small self written usually non published scripts 
believe aware different steps discussed helps writing better scripts 
helps developing tools step easily reused combined tools 
tools kom consists clear interfaces focused specific task reused easily different contexts 
concept kom eases writing scenario creating scripts understanding reusing third party scenario creating scripts 
ns simulator simple scenario generator exists plus modifications qos scenarios 
ns scenario generator lacks features deem important support testbed experiments topology generators apart gt itm 
supports built low level traffic models ns aim different application oriented approach traffic generation see section 
mobility scenarios scenario generators ns exist 
focus mobility models ns aim integrated approach non mobility scenarios 
offer support emulation 
respect combining network emulation simulation efforts ns aim combined experiments part scenario simulated parts emulated focus parallel mutually supporting simulation testbed experiments 
context adhoc routing protocols allows share codebase simulation ns emulation linux freebsd click modular router 
network emulation testbed net project defines detailed network scenario description language xml link emulation 
similar complicated description format scenario generator concentrate support steps scenario generation 
concentrate smaller lab testbeds net focused machine testbed university stuttgart 
opposite offer simulation support 
experiments market managed internet project www org successfully integrated simulation emulation experiments 
lot related individual steps scenario generation 
works relevant step discussed section 
scenario generation simulation ns experiment testbed 
scenario generation plausibility check export kom scenario generator collection integrated tools file format specifica tions supports steps generating networking scenarios simulation testbed experiments 
discuss individual steps supported kom scenario generator 
topology creation setting scenario underlying network topology created 
started collect library real world router pop level topologies publicly available www kom technik tu darmstadt de heckmann topologies 
topology library topology created manually scenario generator gui imported topology generators tiers random network topology generator brite boston university representative internet generator gt itm georgia tech internetwork topology models inet level network topology generator 
converter written import topologies generators independently scenario generator read nlanr topology files 
written java available www kom technik tu darmstadt de heckmann topologies 
investigated choose parameters topology generators order obtain realistic topologies 
results show topology generators produce realistic topologies respect outdegree distribution hop plot metrics details see 
setting node link properties basic topology created properties nodes links specified 
example properties bandwidth propagation delay queue length queuing algorithm red parameters 
depending kind scenario properties important 
qos scenario diffserv intserv rsvp parameters set node 
kom supports automatic 
screenshot manual setting parameters 
manual setting comfortable gui available see 
algorithms automatically identify modify edge core nodes links included library allow automatization step script 
specifying node link parameters node link link node types share parameters 
apart setting node link properties parameters generating traffic output nodes set step application mix layer see section 
specify extended topology file format scenario generator store topology node link properties traffic generation parameters 
load generation general structure load generator depicted 
traffic models generate traffic edge nodes partner nodes traffic selected depending sink model 
traffic model models traffic kind ip telephony traffic single www traffic aggregated www traffic 
viewer visualize traffic test tool test traffic self similarity useful step 
implemented tool estimate hurst parameter packet level traffic variance time plot 
detailed analysis independent package 
plan better integrate version 
generated network load exported simulator testbed traffic emulator 
discuss traffic modeled 
allows systematic clear approach traffic generation 
explain traffic generation module sink models compare approach related 
modeling traffic 
traffic modeled different layers different degrees abstraction 
atm traffic distinguish cell burst flow layer 
ip traffic think layers appropriate 
lowest layer ip traffic modeled series packets 
packet specified generation time size plus source target node port plus protocol number 
traffic modeled higher layers 
traffic aggregated time call intensity layer specifies traffic number bytes transmitted source destination link single period specified length 
information individual packet sizes lost way 
non trivial split intensity individual packets 
traffic matrices example typically traffic intensities 
trace files specify traffic intensities self similar traffic models specify generate traffic intensities 
traffic aggregated time context speak flow layer 
flow generates series packets flow type specific algorithm 
cbr flow transmits traffic model traffic simulator emulator measurement results packets fixed size constant intervals 
greedy tcp reno flow transmits packets fast possible tcp reno flow congestion control algorithm 
advantage flow layer traffic obviously powerful memory efficient lot packets described flow parameters 
flow type cbr greedy tcp 
different set parameters flow algorithm implemented simulator traffic emulator 
flows start time node port pair 
greedy tcp source additional parameters packet size test viewer network load 
load generator structure application layer session layer sink model topology flow intensity layer layer packet layer 
traffic layers amount data transferred tcp algorithm parameters cbr flow example characterized additionally parameters time packet size interval packets highest layer session layer 
session consists number closely related flows intensities 
simple ip telephony session example contain number cbr flows switching directions 
session seen runtime instance application 
highest layer application mix layer models sessions traffic model respective application generated edge node ip telephony peer peer www sessions 
application mix specified node link property step input load generator 
traffic generation 
modular structured approach load generator allows easily develop plug traffic models 
traffic model instance generates sessions type aggregated www traffic consisting flows intensities directly packets 
currently load generator contains traffic models single www model modeling single www user aggregated www model modeling aggregate www user traffic traffic generator kramer 
simple ip telephony model peer peer model model allows trace files played back 
model example generate video conference stored video streaming sessions 
progress add traffic models 
want reinvent wheel traffic modeling tools algorithms exist aim reuse possible 
architecture open allows plug rd party tools algorithms 
sink models 
generating packets 
complex scenarios involve larger number nodes act source sink traffic flows 
session generated node node acts source node session sessions second node participates session multicast sessions 
algorithm necessary determine partner node 
call algorithm sink model currently investigate influence different sink models 
example scenarios point view single isp 
scenarios mark nodes home user access nodes access nodes interconnection nodes core nodes 
core nodes source sink traffic 
peer peer traffic uses sink model chooses sink nodes set nodes modeling fact peer peer traffic exchanged private users 
www model hand uses sink model connects nodes nodes modeling fact www servers connected access nodes home user access nodes 
currently investigating distinction creates realistic results purely random selection partner nodes 
support multicast added easily existing traffic models appropriate multicast sink model 
strength comes explicit separation traffic sink models 
related 
mentioned lot traffic generators simulators emulators mean source node flows belonging session exact decision direction flows belonging single session traffic model 
traffic models exist 
aware tool generates traffic testbed experiments simulations simultaneously tool 
convinced approach distinguishing different abstractions layers traffic separation traffic sink models strong methodological improvement 
terminology combination traffic generator emulator testbed experiments common 
commercial solutions include number traffic models 
java traffic emulator inspired 
models individual user behavior state machines different applications web ftp mpeg voip 
opposite approach traffic generated online feedback network influence traffic generation throughput low session earlier user gives 
scalable url generator surge specializes aggregated www traffic 
project lab focuses generating realistic voip flows control flows testbed experiments 
netperf benchmark tool generate test traffic 
combination fixed traffic models traffic generator export module ns quite common 
ns contains traffic models easily ns scenario generator 
provides detailed support persistent pipelined connections surge load model implementation 
ramp convert measurements tcpdump format file cumulative distribution functions simulation models generate realistic synthetic traffic ns 
pre www tcplib model ns simulations 
fft fgn rmd nn generate self similar traffic intensity layer 
algorithms tools integrated kom load generator 
apart traffic generators mentioned traffic models enormous amount traffic models 
discuss small amount works 
contains telnet ftp smtp nntp model concentrates detailed models www traffic ftp traffic models 
detailed single www user model packet level details useful 
contains excellent literature overview specific information tcp traffic models 
isp level simulations handy contains bgp traffic model describes tool creating realistic routing tables testbeds 
explicit models traffic generated trace files careful trace files environment different recorded 
available played back kom 
plausibility check generating network load plausibility checks started control certain scenario aspects sensible 
example comparing bandwidth links bandwidth needed traffic 
kom estimate bandwidth requirements generated network load 
tcp connections tcp formula predict rate 
estimated bandwidth requirement compared offered bandwidth 
large mismatch want adapt bandwidth links traffic conducting experiment 
export scenario setup passes plausibility check exported 
currently export modules exist ns testbed 
export modules easily adapted support simulators testbeds 
ns 
ns export module automatically create file ns called run tcl sets topology traffic sources starts 
allow user setup process needs directly configure ns run tcl script call setup functions defined second file header tcl 
usually operator adapt header tcl specific scenario needs run tcl file generated automatically changed 
scenario example different header tcl files scenarios intserv rsvp set diffserv defined best effort 
scenario dependent header tcl file implement fixed set functions create node 
details see 
testbed 
export module scenario generator written testbed project 
difficult adapt lab testbeds 
description testbed 
heart lab testbed pcs 
equipped intel pentium mhz processor mb ram gb hard disk network interface cards 
port allied gb switches stacked 
chose freebsd operating system proven reliable operating system testbeds 
testbed tedious operations performed machines 
wrote scripts automate tasks completely install freebsd plus needed applications automatically 
larger experiments connect old machine testbed new leaves test machines 
clocks synchronized gps receiver 
allows way delay measurements 
time stamps necessary kind measurements added kernel module developed martin karsten 
control machine gateway external world internet separate pc runs dns dhcp server testbed 
automatic configuration testbed 
export module scenario generator creates number configuration files scripts 
started sets testbed completely automatic 
second script started experiment started automatically 
ssh host keys machines exchanged 
dns dhcp server control machine configured restarted machines testbed rebooted 
ip addresses interfaces distributed dhcp server dns server allows dress machines names scenario file 
switch configured automatically expect script addressing telnet interface 
alternatively snmp set represent links topology 
unused network interfaces put dummy 
headers added packet modify ethernet network drivers full size ethernet packets sent 
shortest path algorithm calculate routes set static routing nodes 
altq configuration files distributed nodes altq started 
altq traffic management software enables certain qos mechanisms pc routers 
plan incorporate modified version nist net emulate wide variety network conditions dummynet apply bandwidth queue size limitations emulate delays losses 
configuration files traffic emulator tool distributed nodes see section 
scenario dependent configuration script executed 
depending scenario kom rsvp started machine altq configured diffserv scenario dependent script written researcher 
video available showing configuration testbed www kom technik tu darmstadt de 
traffic emulator 
experimenting open source tools emulate traffic ethernet interface decided develop tool 
prob experienced severe problems snmp switch 
lems timing tools 
freebsd netperf example fine grained timer resolution 
netperf send packets second cbr udp flow packet size bytes interarrival time set ms ms ms ms set ms 
traffic emulation tool finegrained resolution really send packets interarrival time ms ms 
tool originally written martin karsten uses efficient timer library kom rsvp engine excellent timer management reasons kom rsvp engine performs 
traffic emulator runs sender receiver side send diverse tcp udp flows 
information received packets current rate recorded written evaluation file experiment file access experiment disturb timing network operations 
clocks synchronized gps receiver traffic emulators machines start sending point time 
possible steps measurements foreseen automated 
explicit goal kom avoid manual intervention possible necessary take manual step simulation experiment researcher checks possibly modifies parts scenario file 
note experiments kom activities necessary 
simulation testbed experiment simulation testbed experiment conducted running ns generated file running start script testbed control machine 
evaluation step analyzing evaluating results simulation 
existing tools step 
gnuplot microsoft excel evaluation purposes 
demonstration purposes network animator nam 
plan support automatic statistical analysis measured data 
implementation kom kom implemented java ns parts written testbed export code python 
traffic emulator software originally written martin karsten part kom rsvp engine 
summary systematic approach simulation testbed experiments kom scenario generator 
discussed different steps generating network research scenario 
supported kom contains helpful tools topology file format converter application oriented topology aware traffic generator scripts automatically configure lab testbed 
apart supports simulating emulating lab testbed created scenario 
combination simulation testbed experiments avoids drawbacks pitfalls methods 
methodological improvement traffic load generation kom uses different abstraction layers traffic separation traffic sink models 
version scenario generator finished qos experiments www de project 
information scenario generator video demonstrating scenario generator available www kom tu darmstadt de 
acknowledgments partly sponsored german research network provider dfn www dfn de 
dfn funding deep insights valu able operational data 
martin karsten helped aspects valuable tools parts kom 
students ian martin jess scenario generator testbed tobias scenario generator ns peter thomas pfeiffer scenario generator 
braden clark shenker 
integrated services internet architecture overview 
informational rfc june 
black blake carlson davies wang weiss 
architecture differentiated services 
informational rfc december 
hurley kara le boudec 
abe providing low delay service best effort 
ieee network magazine may 
kelly 
models self managed internet 
philosophical transactions royal society 
karsten schmitt 
admission control packet marking feedback signalling 
mechanisms implementation experiments 
technical report tr kom darmstadt university technology may 
karsten schmitt steinmetz 
implementation evaluation kom rsvp engine 
proceedings th annual joint conference ieee computer communications societies infocom pages 
ieee april 
floyd paxson 
difficulties simulating internet 
transactions networking pages feb 
breslau estrin fall floyd heidemann helmy huang mccanne varadhan xu yu 
advances network simulation 
ieee computer may 
meer 
quality service verification experiments 
proceedings workshop distributed multimedia applications 
neufeld jain grunwald 
bridging network simulation deployment 
proceedings th acm international workshop modeling analysis simulation wireless mobile systems pages 
acm press 
network simulator ns 
www isi edu nsnam ns 
network simulator 
www org 
network simulator 
www com 
ns scenario generator 
www isi edu nsnam dist gen tar 
ns scenario generator modifications qos experiments 
hut fi ns ns html 
manet scenario generator 
www comp nus edu sg 
java mobility scenario generator analyser 
www cs uni bonn de iv 
kohler morris chen jannotti kaashoek 
click modular router 
acm transactions computer systems 
rothermel 
modeling computer networks emulation 
international conference parallel distributed processing techniques applications pdpta pages june 
tiers 
tiers topology generator 
www isi edu nsnam ns ns html tiers 
brite 
boston university representative internet topology generator 
www cs bu edu brite 
gt itm 
georgia tech internetwork topology models 
www cc gatech edu projects 
inet topology generator 
topology eecs umich edu inet 
heckmann schmitt steinmetz 
realistic network topologies simulation 
proceedings acm sigcomm karlsruhe 
heckmann pandit schmitt hoffmann 
milestone 
www de june 
karagiannis faloutsos 
tool self similarity long range dependence analysis 
proceedings st workshop fractals self similarity data mining 
karagiannis 
short tutorial 
www cs ucr edu html 
roberts 
eds 
broadband network teletraffic final report cost 
springer verlag lncs 
uc davis generator self similar traffic 
cs ucdavis edu kramer code trf gen html 
traffic generator 
www com products chr default asp 
traffic generator 
www com 

generator synthetic internet traffic qos experiments 
proceedings th nordic teletraffic seminar 
barford crovella 
generating representative web workloads network server performance evaluation 
measurement modeling computer systems pages 
kom call generator 
www kom tu darmstadt de 
netperf network benchmark tool 
www netperf org netperf htm 
tool network experimentation measurement 
www edu 
traffic generator 
www net uni sb de jw 
lan heidemann 
rapid model parameterization traffic measurements 
www isi edu ramp pdf 
danzig jamin 
tcp lib library tcp ip traffic characteristics 
usc networking distributed systems laboratory tr cs sys october 
schuler 
fft fgn fractional gaussian noise generator 
ftp ita ee lbl gov software fft fgn tar norros wang 
simulation fractional brownian motion random midpoint displacement 
advances performance analysis 
paxson floyd 
wide area traffic failure poisson modeling 
ieee acm transactions networking 
abdulla 
analysis modelling world wide web traffic 
phd thesis virginia polytechnic institute state university 
ewing hall schwartz 
measurement study internet file transfer traffic 
technical report cu cs january 

tcp connection flow characteristics 
performance evaluation sep 
feldmann 
characteristics tcp connection arrivals 
technical report labs research 
feldmann 
realistic bgp traffic test labs 
proceedings acm sig comm 
rose 
statistical properties mpeg video traffic impact traffic modeling atm systems 
technical report technical report university institute computer science 
internet traffic archive ita 
ita ee lbl gov html traces html 
nlanr traces 
pma nlanr net traces 
waikato internet traffic storage traces 
wand cs waikato ac nz wand wits 
padhye firoiu towsley kurose 
modeling tcp throughput simple model empirical validation 
proceedings acm sigcomm 
cho 
design altq traffic management system 
phd thesis keio university january 
kom rsvp engine 
www kom tu darmstadt de rsvp 
gnuplot 
www gnuplot info 
fall 
network emulation vint ns simulator 
proceedings th ieee symposium computers communications 
