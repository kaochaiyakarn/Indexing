dynamic collision detection virtual reality applications jens eckstein daimler benz ag research technology ulm germany eckstein cs uni sb de sch omer saarland university department computer science saarbr germany cs uni sb de data structures algorithms dynamic collision detection virtual reality vr applications 
methods applicable general polygonal models 
combine advantages collision detection bounding volume bv hierarchies ability compute dynamic collision detection results 
results input simulations contact dynamics simulation 
new methods compute bv hierarchies optimization goals improve known computation methods 
second show integrate bv hierarchies process dynamic collision detection bounding objects surface patches objects tested overlap motions 
performance techniques shown means tting simulation automotive industry 
keywords dynamic collision detection bounding volume hierarchies tting simulation virtual reality virtual reality vr leading edge technology development process technological challenging products seen current automotive industry 
virtual prototyping ective means shorten development times new cars 
interesting parts virtual prototyping car packaging includes tting simulations 
vr ers framework simulate processes real time realistic environment 
key problems vr applications realtime simulation realistic object behaviour complex virtual environments 
environments characteristics model complexity input models consist thousands polygons 
unstructured representation objects collections polygons topological information 
may cracks holes joints non manifold geometry 
objects known polygon 
unspeci ed motions object motions vr applications speci ed advance 
need dynamic collision detection hel distinguishes types collision detection results static collision detection checks interference objects particular con guration 
pseudo dynamic collision detection performs static interference tests short time intervals order collisions 
dynamic collision detection considers swept volumes objects motions able report contact time contacting object features 
information contact geometry necessary implement object simulations contact simulation buc dynamics simulation mir virtual grasping 
fast dynamic collision detection major bottleneck multi body simulation challenging problem 
main contribution ecient algorithms dynamic collision detection vr applications 
base bv hierarchies successfully static pseudo dynamic collision detection far 
algorithms build bv hierarchies di erent types bounding objects sphere axis aligned bounding box aabb oriented bounding box obb extend known techniques simple ective means 
major contributions new algorithms computation bv hierarchies di erent types bounding objects extension known hierarchy computation methods improve collision detection performance 
generalization static collision detection procedures full dynamic collision detection process 
ecient dynamic bounding object tests basic tests object features vertices edges faces 
comparison bv hierarchies best known hierarchies 
implemented collision detection methods basic part multibody simulation module vr software platform daimler benz research technology 
performance methods demonstrated complex virtual scenes taken tting simulation packaging car development process 
rest organized follows 
section provide overview hierarchical collision detection methods 
section describes computation bv hierarchies 
section explain methods integrate bv hierarchies process dynamic collision detection 
section presents performance results methods compares di erent bv hierarchy types 
section concludes mentioning applications pro dynamic collision detection high degree 
previous interference collision detection problems extensively studied literature 
powerful algorithms bv hierarchies various types bounding objects 
include sphere trees qui hub pal aabb trees zac zac obb trees got dop trees klo zac trees kinds bounding objects bar 
advantage bv hierarchies handle general polyhedral models high model complexity currently restricted static pseudo dynamic collision detection 
di erent types collision detection algorithms gjk algorithm cam leu hec gil tracking algorithm lin pon mir 
algorithms mainly restricted convex polyhedral objects 
mir uses closest feature tracking collision detection impulse dynamics simulation 
research performed realize dynamic collision detection bounding objects spheres aabbs obbs 
main ort speed static interference detection bounding object types 
got proposed ecient static collision test obbs 
computation bv hierarchies section describe build bv hierarchies 
bv hierarchies currently fastest known collision detection method unstructured object representations 
computation hierarchies di ers various aspects types bounding objects single type bounding objects 
degree bv hierarchies degree higher degrees rarely hub 
type computation generally di erent kinds computation topdown bottom 
new top methods compute bv hierarchies see section improve known gottschalk method 
top computation methods bv hierarchies consist parts compute bounding object set faces split set faces main di erence methods methods known far splitting step 
bounding objects enclose faces certain quality expressed di erent measures volume surface bounding object directed hausdor distance bounding object enclosed set faces 
splitting set faces means bound set faces bounding object order get tighter bounding 
common top computation methods bv hierarchies split sets faces single xed degree 
new methods able split set faces degree 
exibility enables control splitting process splitting improves quality bounding objects amount 
set faces bounding object splitting sets faces results bounding objects quality splitting quality worst bounding object 
quality max splitting 
splitting ful lls quality requirements 
max prede ned improvement factor 
goal splitting reach quality improvement minimal splitting degree 
start degree compute splitting increase splitting degree improvement requirement ful lled 
splitting set faces stops number faces falls certain threshold 
experiments choice threshold 
improvement reached degree set faces split degree overcome local splitting problems 
remains explain splitting mechanisms 
heuristic optimization center face mean value coordinates vertices center face set mean value centers faces 
distance faces distance faces points computed centers faces 
rst step faces belong center center step select face max maximizes distance current centers center fmax max temporary center faces rearranged face belongs subset current center minimizes distance face 
centers recomputed mean values faces 
step rearranging faces recomputing centers subsets iteratively done changes occur 
process faces subsets set faces bounding object computed 
heuristic splitting step heuristic optimization know quality bounding objects current subsets 
goal heuristic control partitioning face set quality bounding objects 
rst step select faces belong di erent subsets nal partition 
purpose compute smallest enclosing box respect selected quality measure set faces partition box subregions select region face minimizes distance center region 
partitioning box illustrated gure projected dimensions 
degree longest axis halved degree longest axis split twice degree longest second longest axis halved degree additional center put middle degree longest axis split twice second halved 
partitioning obb regions faces compute smallest bounding object sphere aabb obb 
insert random order remaining faces face insert current subset modify bounding object add subset worst quality bounding objects minimal 
modi ed gottschalk method simply algorithm sketched nd rst faces partition assign face subregion center closest center way obtain subsets compute subset bounding object 
dynamic collision detection section described methods compute bv hierarchies 
hierarchies ecient static pseudo dynamic collision detection complex virtual environments 
currently dynamic collision detection 
methods bv hierarchies spheres aabbs obbs dynamic collision detection regardless method compute hierarchies 
look process static collision detection bv hierarchies seen di erent types collision tests bounding object tests basic tests object features vertices edges faces kinds tests exist ecient static collision tests 
ecient dynamic collision tests enable real time collision detection virtual environments moderate size 
bounding object tests ecient static collision tests simple bounding objects known see eck survey 
dynamic collision detection need extension methods enable ecient dynamic collision detection bounding objects 
order keep ectiveness known static collision tests bounding objects approximate swept volume bounding object motions new ecient static collision test 
generally know exact trajectories moving objects positions orientations discrete points time simply construct sphere box encloses bounding objects motion step desired intermediate points time 
smaller single step reliably swept volume bounding objects enclosed sphere box 
smallest enclosing sphere set spheres boxes determined eciently 
want construct small oriented enclosing box set obbs choose orientation arbitrary obb proceed case axis aligned boxes 
motion steps small suces enclose bounding objects motion step 
basic tests suppose objects moving current con guration time intended con guration time 
want just determine intersect time 
want nd collide rst time simultaneous motion con guration time collision free 
objects modelled sets polygons collision detected looking contacts occurring vertex face vice versa edge contact types de ne function ir changes sign neighbourhood point time collision occurs 
way problem calculating potential collision times reduced nding roots function interval 
case vertex face collision simply choose signed distance vertex nite plane fx ir jn face lies 
case edge edge collision consider nite lines de ned edges 
endpoints edges set 
zero endpoints lie common plane lines intersect parallel 
general evaluate function discrete points time roots approximated 
best experience simple interpolation scheme method 
far condition necessary condition occurrence collisions vertex face edges 
reason check root interval corresponds real collision vertex face assume convex face restriction non convex faces triangulated 
vertices enumerated clockwise looking direction face normal 
provided vertex lies plane face time examine lies boundaries way edge edge provided nite lines de ned edges intersect common point time easily decide intersection point lies edges implementation performance implemented algorithms basic part simulation environment vr software platform daimler benz research technology 
simulations interactive structure simulation environment application areas simulation realistic object behaviour challenging part collision detection packaging process construction cars 
example shown gure 
task remove covers light 
full task additionally includes removal light removal covers 
scene contains relevant parts removal circa faces 
parts included scene performance algorithms deteriorate space partitioning system handle objects scene details see eck 
interactively generated motion sequences removal covers 
resulting motions consist colliding collision free parts performance cases seen 
carried extensive experiments di erent types bounding objects pseudo dynamic collision detection 
order compare different hierarchy types measured real running time motion sequences 
experiments performed silicon graphics mips mhz 
rst step examined uence parameters degree improvement running time 
omitted diagrams tests details see eck 
hierarchy type improvement factor best 
improvement factor best computation methods section said generally true 
experiments shown computation methods generating hierarchies exible degrees tend outperform hierarchies xed degree 
computation methods sections compare results simulation 
results illustrated gure 
see methods show performance 
common techniques summarize performance collision detection algorithms motion sequence average collision time 
look illustrations gure learn collision detection time varies fast depending proximity objects scene 
take closer look worst case performance 
msecs needed modi ed gottschalk method slowest time measured time guarantees interactive rates 
second step compare performance pseudo dynamic dynamic collision detection 
obvious dynamic collision detection time consuming pseudo dynamic collision detection 
seen gure dynamic collision detection linear interpolation linear interpolation results computation times msecs linear distance interpolation 
methods dynamic collision detection facilitate direct handling objects complex virtual environments interactive rates 
new methods compute bv hierarchies enable dynamic collision detection bv hierarchies vr applications 
implemented algorithms part vr platform daimler benz research technology demonstrated performance means complex example tting simulation automotive industry 
results concerning interplay dynamic collision detection contact dynamics simulation buc 
bar barequet chazelle guibas mitchell tal 
boxtree hierarchical representation surfaces 
eurographics 
buc buck sch omer 
interactive rigid body manipulation obstacle contacts 
th int 
conf 
central europe computer graphics visualization wscg pages 
cam cameron 
enhancing gjk computing minimum penetration distances convex polyhedra 
ieee int 
conf 
robotics automation 
eck eckstein 
ur virtual reality anwendungen 
ph thesis department computer science saarland university 
gil gilbert johnson keerthi 
fast procedure computing distance complex objects dimensional space 
ieee journal robotics automation 
got gottschalk lin manocha 
obb tree hierarchical structure rapid interference detection 
computer graphics pages august 
proc 
siggraph 
hec heckbert 
graphics gems iv 
academic press 
hel held klosowski mitchell 
evaluation collision detection methods virtual reality 
proc 
th canadian conf 
compt 
geometry pages 
hub hubbard 
collision detection interactive graphics applications 
ieee trans 
visual 
comput 
graph september 
klo klosowski held mitchell 
ef cient collision detection bounding volume hierarchies dops 
ieee trans 
visualization computer graphics january 
leu chung tat leung 
ecient collision detection algorithm polytopes virtual environments 
master thesis university hong kong department computer science 
lin lin 
ecient collision detection animation robotics 
phd thesis university california berkeley ca december 
mir mirtich 
impulse dynamic simulation rigid body systems 
phd thesis university california berkeley 
mir mirtich 
clip fast robust polyhedral collision detection 
technical report tr merl july 
pal palmer 
collision detection animation sphere trees 
proc 
eurographics 
pon ponamgi manocha lin 
incremental algorithms collision detection solid models 
proc 
acm siggraph symp 
solid modelling pages 
qui quinlan 
ecient distance computation non convex objects 
proc 
int 
conf 
robotics automation pages 
sauer 
virtual calibrated grasping data gloves 
japan volume pages 
sauer sch omer 
constraint approach rigid body dynamics virtual reality applications 
proc 
acm symposium virtual reality software technology pages 
sauer sch omer 
real time rigid body simulations classical mechanics toys 
th european simulation symposium exhibition ess pages 
zac zachmann 
boxtree enabling real time exact collision detection arbitrary polyhedra 
st workshop simulation interaction virtual environments pages 
zac zachmann 
real time exact collision detection interactive virtual prototyping 
proc 
asme design engineering technical conferences 
zac zachmann 
rapid collision detection dynamically aligned 
proc 
ieee vrais atlanta march 
removal cover additional motion step cover gottschalk heuristic heuristic optimization motion step cover additional gottschalk heuristic heuristic optimization comparison query times bv hierarchy types motion step heuristic cover static linear interpolation linear interpolation motion step heuristic cover additional static linear interpolation linear interpolation comparison query times static dynamic collision detection 
