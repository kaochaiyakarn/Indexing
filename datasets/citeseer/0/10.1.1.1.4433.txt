combining histograms parametric curve fitting feedback driven query result size estimation arnd christian konig gerhard weikum department computer science university saarland box saarbrucken germany mail cs uni sb de aims improve accuracy query result size estimations query optimizers leveraging dynamic feedback obtained observations executed query workload 
synopsis data value distributions devised combines histograms parametric curve tting leading speci class linear splines 
approach reconciles bene ts histograms simplicity versatility parametric techniques especially adaptivity biased dynamically evolving query workloads 
presents cient algorithms constructing linear spline synopsis data value distributions moving window observations critical query executions 
approach worked full detail capturing frequency density distributions data values shown result size estimations inferred exact match range queries projections grouping 
large extent developed methods generalized multi dimensional distributions bearing ability capture correlations attributes 
experimental studies underline accuracy developed estimation methods outperforming best known classes histograms 
permission copy fee material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference edinburgh scotland 
de ciencies state art ectivity query optimization database systems critically depends system ability costs di erent query execution plans accurately possible 
cases cost plan dependent results produced query execution 
accurate estimation sizes crucial choosing plan properly allocating necessary resources especially working memory 
dealing problem studied literature categorized major classes histogram techniques capture statistical information data value distributions counters speci ed number data value buckets parametric techniques approximate data value distributions tting parameters type function polynomials maximum degree query speci sampling take samples database statistically estimate intermediate result sizes query hand survey material see 
generalized perspective approaches viewed constructing approximate representation synopsis data purpose estimation giving approximative query answers isnot considered 
modern olap tools forms decision support query generators query optimization takes place critical path query execution longer distinction compile time run time query 
rules relatively expensive sampling query basis 
sampling useful fact method choice constructing histograms query independent synopsis database distributions 
histograms traditionally relatively static representation easily adapt dynamically evolving value distributions exceptional methods incremental histograms proposed need maintain backing sample addition histogram exactly light weight :10.1.1.100.9995
furthermore histogram statistically unbiased representation oriented speci mix queries query input parameters actual parameters lter conditions 
practice case current workload bears statistical bias sense queries important queries refer speci ranges data values input parameters 
desirable express bias value distribution representations maintain form dynamically adapted evolving workload patterns acceptable ort 
example representation accurate value ranges frequently referred current queries may tolerate inaccuracies ranges 
regard mentioned forms adaptivity parametric techniques appear intriguing representation data value distributions tting parameterized curve observations data values frequencies 
techniques naturally accommodate biased observations executed queries adapted dynamic shifts query patterns relatively easily recomputing curve tting 
mean parametric techniques adequate representation rst place 
fact suitable data value distributions resemble closed form distribution zipf pareto distributions lead poor estimations highly irregular distributions multiple modes non adjacent frequent data values top selling product numbers table purchases 
unfortunately irregular distributions typical real life applications 
conjunction appropriate data value permutations real life distributions resemble closed form distribution 
capturing information necessary permutation question system viewpoint entail storage lookup costs full edged index 
note passing reason various advanced forms histograms notably family optimal histograms attribute frequency sort parameter practically viable 
approach histograms parametric techniques satisfactory regards novel techniques needed adaptive result size estimation highly dynamic query processing environments olap applications 
develop new approach combines histograms ric tting speci class spline synopses data value distributions 
synopsis constructed steps active domain attribute multidimensional attribute combination divided number buckets represents contiguous range data values multi dimensional rectangle bucket identi ed upper value bounds left lower right upper corner 
contrast simple type called equi width histograms width value ranges vary buckets widths tunable degrees freedom 
contrast advanced type optimal histograms attribute frequency sort parameter restrict buckets represent contiguous values non adjacent values similar frequencies avoid having build full edged index histogram lookups 
second represent value distribution spline function value 
rely uniform distribution capture trends certain value ranges increasing sales gures particular time period corresponds bucket corresponding date attribute 
tractability restrict linear splines bucket 
contrast kind representation referred spline histograms require splines continuous buckets 
way easily capture jumps attribute value frequencies example 
experimental results show generalization crucial high accuracy 
dimensional case need keep additional value bucket compared histograms addition lower value bound frequency average frequency histogram frequency lower value bound approach store slope linear spline function 
ratio memory demand histograms spline synopses taken account experimental comparisons section 
adaptivity basic idea record observations feedbacks moving window queries construct statistically biased representation recordings possibly focus particularly important critical queries exhibit large di erence cost estimation optimizer actual execution cost 
recorded observations say frequency attribute value continuous parametric representation buckets parameters tted bucket leads called knot placement problem intensively studied numerical mathematics known intractable complexity full generality 
restriction linear splines relaxation allow discontinuities bucket bor render problem tractable 
optimal tting algorithms cient suboptimal heuristics allow construct entire synopsis obtain new observations queries 
adaptive representation sketched isthe core approach 
actual estimation procedures intermediate result sizes simple selection queries relatively straightforward 
addition representation suitable capture just frequencies data values density values data ranges buckets 
way represent sparsity price values xed point number domain important estimating result size projections especially grouping operations 
note aspect selectivity estimation vastly neglected literature 
prior including simplistic assumptions data value densities buckets example assuming perfectly equi distant 
note data value density signi cant impact result sizes range queries equi joins sparsely populated domains 
enhance initial tting values additional tting step takes account feedback range queries 
approach spline synopses pursue proves useful fact superior prior methods broad class estimation problems 
rest organized follows 
section brie reviews state art techniques approximate data synopses estimation methods query optimization 
section introduces architectural assumptions notation setting stage section key section construction spline synopses exact match query feedback 
section shows selectivity estimations range queries carried spline synopses 
section introduces additional tting step adjust density values number distinct attribute values kept synopses account additional feedback range queries leading accurate estimations range queries 
section shows presents estimation procedures projections grouping queries 
experimental results section demonstrate practical bene ts developed spline synopses 
conclude brief discussion various extensions including treatment multidimensional distributions equi join result sizes 
related techniques dealing described problems proposed literature categorized major classes histogram techniques parametric techniques sampling surveys see histogram techniques 
histograms approximate value distributions grouping attribute values buckets estimating true attribute values frequencies assuming uniform distribution 
histograms common form data synopsis practice systems db informix ingres oracle microsoft sql server sybase teradata 
histogram accuracy depends type histogram optimal histograms proven optimal equi joins selections require list attribute values bucket impractical real systems 
compromise accuracy practicability histograms optimal sort parameters frequency histograms ciently constructed sampling techniques :10.1.1.100.9995
promising approach wavelet histograms far examined context range queries 
parametric techniques 
parametric techniques known curve tting regression techniques approximate value distributions mathematical distribution function limited number free parameters 
values parameters chosen actual distribution 
model distribution provides accurate compact approximation shape distribution usually known case 
overcome exibility general polynomial function apply squares tting choose coe cients 
additionally uses query feedback approximation able adapt changes value distribution locality inthe actual query parameters geared accurate estimations frequently queried values value ranges 
sampling 
techniques compute estimates collecting processing random samples data 
sampling techniques offer high accuracy probabilistic guarantees quality estimation 
sampling typically carried time approximation resulting overhead prohibits sampling query optimization 
works techniques incremental maintenance random samples developed :10.1.1.100.9995
main concern compact representation data acquisition concentrate properties parametric techniques er di erent advantages 
histograms er accurate approximation wide range data distributions parametric techniques quite limited distributions approximate 
polynomials rational functions approximation distributions exhibit large changes frequencies adjacent attribute values suited approximation means continuous function lead degeneration approximation see example pathological ect falsely estimating negative selectivities 
parametric techniques important advantage adaptive adapt query locality changes data distribution assigning di erent weights query feedbacks importance di erent estimations 
certain adaptivity data distribution achieved histograms techniques incremental sampling forms adaptivity knowledge far restricted parametric techniques :10.1.1.100.9995
architectural assumptions notation feedback driven architecture earlier proposals especially adaptive selectivity estimation dynamic re optimization query execution plans assume database system monitors sizes cardinalities sense bags intermediate results executed queries 
assume observe data values intermediate result frequency density distribution 
rationale limitation insightful observations incur additional run time overhead slow underlying database engine 
example recording size range selection byproduct query execution negligible overhead observing density queried range number distinct values frequencies occurring values may require sorting hash tables additional resource consumption question 
run time observations feedbacks collected captured suitable form line statistics 
principle node query operator tree provide feedback 
interested leaf nodes selections nodes close leaves including joins performed early execution rst join way join pipeline 
ra consideration estimation errors early operators troublesome biggest factors error propagation entire execution plan 
focus feedback exact match selections typically index lookups necessarily table scans range selections 
general notions feedback subject 
approach separates statistical feedback obtained executed queries approximative synopsis value distributions maintain selectivity estimations 
allows enforce certain ltering aggregation steps statistics collection actual estimations desired policies resource allocations 
example relatively large number observations moving window queries statistical con dence synopsis compact 
periodically reconstruct incrementally maintain synopsis observation window 
cases separation observations synopsis serves smooth uctuations 
mentioned pursued kind statistics collection fed executed queries 
may wish incorporate additional bias approximative synopsis focusing expensive queries measured run time costs exceed certain limit queries especially susceptible large estimation errors di erence estimated measured run time costs exceed certain limit simply queries considered particularly important expert expected response time certain tolerated limit say seconds 
forms bias readily taken account enforcing appropriate lter conditions statistical observations rebuilding incrementally updating synopsis 
notation adopt notation 
loss generality consider countable value domains strings xed disregarding real numbers assume domains encoded integers 
de ne domain attribute set possible values value set fv vng set values underlying relation context usually observed feedback executed queries 
value set may subset values relation value ranges touched feedback relevant queries 
spread si vi de ned si vi vi sn 
density attribute value range number unique values frequency fi vi number tuples value vi attribute cumulative frequency ci vi number tuples vi 
data distribution set pairs vn fn cumulative data distribution set pairs vn cn extended cumulative data distribution denoted extended entire domain assigning zero frequency value sake simple uniform notation extend arti cial nal tuple vn vn vn 
linear splines approximative synopsis value frequencies approximate value frequency distribution partition observed value set disjoint intervals henceforth called buckets bi manner lowi highi denote subscripts values actual values form left right bounds left side closed right side open value interval covered bucket highi lowi low 
histograms approximate frequency interval linear function resulting linear spline function buckets 
interest compact representation distributions features advanced forms splines er smoothness di erentiability chosen simple linear spline functions task 
contrast previous approaches spline histograms approximate faced problem forming approximation continuous intervals simplifying problem nding optimal partitioning see subsection 
linear function approximate frequencies values bucket leads improvement accuracy depending linear correlation data bucket 
high de ne low high high low low vl average attribute value vlow vhigh analogously de ne average frequency low high high high low low fl 
linear correlation interval bi de ned lowi highi highi vl lowi highi fl lowi highi lowi highi vl lowi highi lowi highi fl lowi highi lowi interval bi lowi highi 
traditional histograms frequency bucket bi approximated avg lowi highi 
leastsquares error metric results error err lowi highi highi lowi fl lowi highi spline synopsis error spline err lowi highi lowi highi err lowi highi 
obviously spline err lowi highi equal err lowi highi 
increase accuracy paid fact bucket synopsis needs store value bucket traditional histogram 
trade examined means experiments section 
summing error buckets syn error mx ov spline err lowi highi err lowi highi subsections algorithms constructing spline synopsis buckets observed data value frequencies aiming minimize error formula 
goal involves identifying suitable boundaries buckets tting linear approximation bucket 
polynomial necessarily highly cient algorithm optimal solution faster heuristic suboptimal algorithms 
algorithms squares tting bucket basic building block subsection 
optimal suboptimal algorithms global partitioning described subsections 
fitting frequency function bucket derivation basic building block suppose boundaries bucket xed 
bucket bi need calculate linear approximation attribute frequency minimizes squared error spline err lowi highi highi lowi vl fl 
de nition error bucket equivalent de nition evaluate formula coe cients unknowns tting 
property section 
de nition nding problem linear squares tting tting data vl fl lowi highi linear function frq xl optimal determined 
construct design matrix highi lowi components de ned xl vh andh lowi highi 
furthermore de ne vector tting problem de ned nding minimizes spline ja bj problem solved singular value decomposition svd way svd 
lowi lowi singular values eigenvalues 
expressed representing th column computing svd design matrix causes considerable overhead computed times bucket nal partitioning 
formula capable computing optimal partitioning calculating exact 
addition bucket bi stores number attribute values contained bi 
refer value density di highi lowi bucket bi 
optimal partitioning partitioning thatthe error formula minimized 
arbitrary partitionings continuous splines arbitrary degree considered known optimal knot placement problem due complexity generally solved approximatively heuristic search algorithms detailed discussion see 
case linear splines members candidates bucket boundaries 
value highi lowi vn see de nition optimal lower bucket boundaries compute opt err min low mx low low err resulting spline function allowed discontinuous chosen intervals bm tting data bucket addressed separately si bi 
main improvement ciency result fact principle optimality known bellman principle holds partitioning problem theorem optimal partitioning buckets optimal partitioning buckets 
proof optimal minimizes mx spline err lowi highi spline err mx spline err lowi highi 
assume optimal exists partitioning low low spline err low high spline err lowi highi 
optimal partitioning low low results error spline err spline err low hig hi property problem nding optimal partitioning seen dynamic programming problem 
allows formulate recursive rede nition formula de ne opt optimal error tting vlow vn buckets 
err low high approximation error spline bucket bi vlow vhigh 
trivially opt err 
error produced optimal partitioning opt err min ng err opt keeping track partitioning equation compute optimal partitioning time space 
experimental section refer algorithm optimal 
greedy partitioning spline synopsis recomputed occasionally computing optimal partitioning unacceptable large 
greedy method partitioning results partitioning close optimal cient 
key idea start large number trivial buckets interval adjacent observed data values leads bucket gradually merge appropriately chosen adjacent buckets arrive desired number buckets 
refer algorithm greedy merge 
assessing approximation quality buckets stage algorithm exploit fact merging data distribution adjacent buckets va vb vb vc bucket va vc compute resulting spline err formula constant time maintain certain statistics bucket bi 
statistics highi ff lowi highi vv lowi highi lowi highi vf lowi highi lowi highi vl fl lowi highi highi lowi highi fl lowi lowi highi vl lowi highi lowi highi 
lowi merging buckets va vb vb vc recompute values resulting bucket constant time computed analogously summations obtained simply adding values bucket 
values allow compute bucket linear correlation constant time vf vv ff fl vl vl vl fl fl vl fl vl fl corresponding resulting error easily computed spline err ff 
equations compute nearly optimal partitioning greedy heuristics log time 
algorithm partitions trivial buckets merges ones lead smallest increase error partition buckets bi 
compute error resulting merging buckets bl bl insert value queue repeat remove minimal error merge buckets 
remove error error calculate error joining new bucket left right neighbor exist insert resulting error error buckets left 
algorithm greedy merge buckets left see algorithm 
algorithm consists loops loop iterations error merging trivial buckets computed done constant time 
repeat loop executed times repetition reduces number buckets buckets ini tially termination executes different types operations 
removing item priority queue implementation priority queues fibonacci heaps allowing removal item queue size log time 

merging buckets requiring constant time 

calculating error resulting merge requiring constant time 

inserting item requiring log time 
operation carried times computing greedy partitioning complexity log 
initial memory requirement space necessary storing buckets contains values lowest value stored bucket statistics detailed de nition resulting storage overhead values 
due size overhead acceptable reduce constant choosing bigger initial buckets large probably signi cant ect approximation quality partitioning 
choosing initial buckets size leads storage overhead values 
similar approach developed additional greedy partitioning algorithm takes opposite approach initially tuples grouped bucket 
compute split leads greatest reduction error formula execute resulting additional bucket 
repeated splits buckets remain 
due space constraints go detail 
algorithm requires log time space 
refer algorithm greedy split running times order obtain idea algorithms ciency practice measured running times partitioning method di erent sizes vi fi choosen randomly uniform distribution 
resulting running times partitioning methods optimal opt greedy split greedy merge execution single processor sun ultrasparc mhz shown table 
opt table running times seconds result size estimation range queries section demonstrate spline synopsis data value distributions exploited procedure estimating intermediate result sizes queries 
restrict estimation problem simple range queries single attribute 
estimate result sizes range queries necessary estimate number tuples attribute values range condition fall interval va vb query speci actual parameters 
number result tuples range query denoted 
order account skewed frequency distributions bucket need inspect spline functions buckets intersect query range 
leads estimation query range happens correspond boundaries bucket bi lowi highi estimated computing cumulative frequency bucket sum value frequencies bucket assumption attribute values occur data fall bi equidistant bucket spread 
number values bucket bucket density denoted di 
yields expression whichwe write limited single bucket bi lowi highi di lowi highi lowi di lowi highi di lowi highi coe cients linear spline bi denoted respectively dependency bucket bi explicit 
important assume identical spread attribute values bi just histograms approach powerful allows properly capture skew cumulative tuple distribution bucket 
intervals correspond bucket boundaries density di needs multiplied fraction bucket covered query 
query interval completely contained bucket bi lowi highi de ne highi lowi obtain ic dj 
equation transformed form si di constants ciently calculated lowi highi di involve summations di 
ensures calculation range query selectivity estimation requires constant time bucket 
result size range queries intervals spanning bucket easily estimated partitioning va vb va vb summing estimated result sizes obtained formulas xl sj 
improved fitting value densities far density number distinct values fall bucket value interval simply counting distinct exact match queries observed statistics see section 
formed buckets lose information value distribution bucket need resort assumption equidistant values 
assumption lead signi cant distortions result size estimations range queries skew occurring values 
illustrate kind estimation error consider simple example bucket bi ranging observed pairs vl fl lowi highi majority observed values lie rst half bucket values 
spline function results tting subsection zero error particularly assumed frequencies bucket 
density di bucket simply equals highi lowi number observed values 
suppose range queries refer intervals rst half bucket may surprising observed data values 
note general distribution data correlated distribution actual query parameters 
account skew value density bucket lead signi cant estimation error range queries 
example result size range query interval estimated frq frq frq equidistant values assumption fact query range covers bucket interval 
actual result size quite large deviation estimated size 
rectify discussed kind problem adjust density values di kept buckets spline synopsis considering additional feedback range queries 
leads tting problem aims minimize estimation error range queries 
note addressed subsidiary issue leaves previously completed tting frequency values section invariant aims adjust density values reducing estimation error 
driven adapting estimations skew queries obtain accurate estimation frequently queried intervals expense larger error important ones 
task examine set query feedbacks range queries aj bj jaj bj total number tuples counting duplicates interval aj bj 
interested nding optimal di suchthat kx aj bj minimized aj bj estimated result sizes observed range queries 
aj bj rewritten cf 
formula aj bj mx di problem nding optimal di values minimize error problem linear squares 
design matrix holds components 
de ne ajl size tting problem de ned nding minimizes dm ja bj compute svd analogously section 
drawback approach space requirement ofa increase proportion number query feedbacks resulting considerable overhead tting long series query feedbacks 
feedback arrives incrementally iterative tting technique know squares regression 
incremental approach need maintain matrices opposed matrix 
matrices updated feedback detailed description recursive squares regression context database query feedback see 
number buckets small constant resulting overhead tting 
result size estimation projections grouping queries density attribute values number distinct values certain ranges estimating result sizes projections duplicate elimination 
projections critical operators far query optimization concerned implicit projections take place grouping aggregation operators 
de nitely important operators modern decision support applications 
section size projections combination range lter condition estimated approximative synopses 
denote number distinct values fall interval va vb 
query range corresponds boundaries bucket bi lowi highi simply approximated di 
va vb completely contained bi di fraction bucket interval covered query range see section 
spanning multiple buckets result size estimation obtained partitioning similar employed formula xl experimental results low section experimental results synthetic data sets 
order illustrate ectiveness approach compare accuracy estimations problems histograms proposed 
experimental comparison estimation exact match queries experimentally studied accuracy techniques approximating estimating result size exact match queries type ft 
compared spline synopsis developed section studied equi depth equi width optimal histograms 
technique stores values bucket low value bound frequency low value bound slope frequency curve density traditional histograms store low value bound average frequency density technique uses buckets traditional histograms experiments 
error measure squared error norm denoting actual result size query size approximation measure studied variety squared error error exact match queries equi width equi depth max diff optimal spline optimal spline greedy split spline greedy merge number values storage squared error various techniques data distributions including synthetic data sets earlier studies histograms real life data sets nba database completely random data 
produced comparable results far estimation accuracy studied algorithms concerned 
restrict presenting results single synthetic distribution value set size domain size relation size jrj data distribution generated assigning individual frequencies randomly uniform distribution 
note poses form stress test various approximation methods data exhibits highly skewed frequencies high irregularity 
furthermore data distribution exhibits low linear correlation minimizing gain resulting linear spline approximation 
experiment shows squared error various methods comparison function number values method store amount space 
number buckets number stored values spline synopsis number stored values histograms 
gure shows optimal spline synopsis performs better histograms greedy split optimal histograms er comparable accuracy 
data distributions higher linear correlation optimal spline synopsis outperforms methods greedy split greedy merge partitioning surpass accuracy histogram methods 
illustrate enhanced accuracy approach shows examples tting completely random distribution uniformly distributed frequencies di erent attribute values 
histograms spline synopsis adapt smaller bucket widths ranges high uctuations 
addition spline synopsis enables capture trends certain ranges data histograms merely re ect average frequencies ranges 
attribute frequency attribute frequency approximation spline synopsis optimal attribute value approximation max diff histogram attribute value illustration approximation quality experimental comparison estimation range queries synthetic data set described subsection examined accuracy various techniques estimating size range queries techniques section 
considered types fx bj dg fa bj bg fx bj vg fa bj bg fa dg fa vg randomly chosen underlying value sets uniform distribution 
squared error linear error equi width equi depth max diff optimal spline optimal spline greedy split spline greedy merge error range selectivity estimation number values storage error range selectivity estimation equi width equi depth max diff optimal spline optimal spline greedy split spline greedy merge number values storage squared linear error range queries show experimental results query type experiments query types showed qualitative results omitted 
order illustrate algorithm geared squares error metric results estimations respect error metrics show average linear error query addition squared error 
histogram exhibits worst accuracy estimations intricacies data set data contains large jumps frequencies subsequent attribute values producing small buckets 
interestingly optimal partitioning lead optimal error range queries due fact partitioning initially geared minimizing error exact match queries range queries 
chart shows partitioning techniques spline synopses perform equally surpassing histogram techniques 
data higher linear correlation trend clear 
developed novel approach query result size estimation feedback driven approximative representation linear splines allowed discontinuous buckets 
best knowledge rst approach combines adaptivity regard evolving query locality actual parameters queries high accuracy estimations presence highly irregular skewed distributions 
fact experimental studies spline synopses superior histograms terms accuracy 
main issue addressed solved tting free parameters spline synopsis observed query feedbacks 
involved nding appropriate bucket boundaries partitioning problem squares regression 
wehave seen initial feedback exact match queries wehave considered enhanced additional feedback range queries improved tting density value kept bucket 
noted unresolvable tension tting values di erent query types range queries versus projections grouping aggregation queries wanted keep di erent synopses di erent query types expense memory space 
preference range queries driven observation estimation errors earliest operators typically severe impact error propagates operator tree 
extending technique spline synopses multiple dimensions attribute combinations relatively straightforward open issues remain 
tting dimensional data vi vi fi partition data space mesh consisting dimensional intervals determined observed data points 
approximation frequency function straightforward tting svd coe cients process studying partitioning techniques computed acceptable time 
techniques described extended tting feedback generated equi join queries 
computing result size join interval bi decisive factor accurate estimation join size accuracy estimating number joining values ti relations join attribute values fall bi 
number heuristics estimate ti interval density number distinct values put forth literature best knowledge techniques accurate arbitrary distributions occurring values 
approach pursuing exploit feedback equi join queries observing keeping number join tuples observable value intervals pair frequently joined relations resorting simpler heuristics infrequent join relations 
join ti joining values join attribute interval bi join result size estimated synopses relations follows ti frq ti frq approach aim determine tting ti values compact synopsis number buckets smaller observed values result sizes 
unfortunately rewritten function linear ti making squares tting infeasible 
stead ti ti adequate accuracy techniques 
barbara faloutsos haas hellerstein ioannidis jagadish johnson ng poosala ross sevcik 
new jersey data reduction report 
technical report 
chaudhuri 
overview query optimization relational systems 
acm pods pages 
chaudhuri motwani narasayya 
random sampling histogram construction 
proc 
acm sigmod conference pages 
chen 
adaptive selectivity estimation query feedback 
proc 
acm sigmod conference pages may 
de boor 
practical guide splines 
springer verlag 

curve surface fitting splines 
monographs numerical analysis 
oxford science publications 
ganguly gibbons matias silberschatz 
bifocal sampling skew resistant join size estimation 
proc 
acm sigmod conf 
gibbons matias 
new sampling summary statistics improving approximate query answers 
proceedings acm sigmod conference 
gibbons matias 
synopsis data structures massive data sets 
tech 
report bell labs 
gibbons matias poosala 
fast incremental maintenance approximate histograms 
proc 
rd vldb conference 
ti phillip gibbons acharya bartal matias poosala ramaswamy suel 
aqua system techniques approximate query answering 
tech 
report bell labs 
peter haas 
selectivity cost estimation joins random sampling 
journal computer system sciences pages 
ioannidis 
histograms 
proceedings th vldb conference pages december 
ioannidis christodoulakis 
propagation errors size join results 
proc 
acm sigmod conf pages 
ioannidis christodoulakis 
optimal histograms limiting worst case error propagation size join results 
acm tods 
ioannidis poosala 
balancing histogram optimality practicality query result size estimation 
proceedings acm sigmod conference pages may 
jagadish koudas poosala sevcik suel 
optimal histograms quality guarantees 
proc 
th int 
vldb conf pages august 
kabra dewitt 
cient mid query reoptimization sub optimal query execution plans 
proceedings acm sigmod conference 
ling sun 
evaluation sampling size estimation methods selections database systems 
proc 
icde conf 
chu sager 
statistical estimation systems 
acm computing 
matias vitter wang 
wavelet histograms selectivity estimation 
proc 
acm sigmod conf pages 
mehlhorn uhrig 
leda library cient data types algorithms 
available ftp mpi sb mpg de 
nba statistics season 
available ftp cs umd edu 
poosala 
histogram estimation techniques database systems 
phd thesis university wisconsin madison 
poosala ioannidis haas shekita 
improved histograms selectivity estimation range predicates 
proc 
acm sigmod conference management data pages 
acm press 
press teukolsky vetterling flannery 
numerical art scienti computing 
cambridge university press 

dynamic programming 
marcel dekker 
sun ling deng 
instant accurate size estimation method joins selections intensive environment 
proc 
acm sigmod conference pages 
young 
recursive estimation time series analysis 
springer verlag 
