relational markov models application adaptive web navigation corin anderson dept comp 
sci 
eng 
university washington seattle wa usa corin cs washington edu relational markov models rmms generalization markov models states different types type described different set variables 
domain variable hierarchically structured shrinkage carried cross product hierarchies 
rmms effective learning possible domains large heterogeneous state spaces sparse data 
apply modeling behavior web site users improving prediction proteus architecture personalizing web sites 
experiments commerce academic web site showing rmms substantially accurate alternative methods predictions applied previously unvisited parts site 
categories subject descriptors database management database applications data mining artificial intelligence learning induction pattern recognition models statistical keywords markov models relational probabilistic models web mining personalization shrinkage 
markov models widely model sequential processes achieved practical successes areas web log mining computational biology speech recognition natural language processing robotics fault diagnosis 
markov models quite limited representation language notion state lacks structure exists real world domains 
order markov model contains single variable state specifies probability state transiting state 
hidden markov models hmms contain variables hidden state observation 
addition transition probabilities hmms specify permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigkdd edmonton alberta canada copyright acm 
pedro domingos dept comp 
sci 
eng 
university washington seattle wa usa cs washington edu daniel weld dept comp 
sci 
eng 
university washington seattle wa usa weld cs washington edu probability making observation state 
number parameters order markov model quadratic number states higher higher order models learning markov models feasible relatively small state spaces 
requirement unsuitable data mining applications concerned large state spaces 
dynamic bayesian networks dbns generalize markov models allowing states internal structure 
dbn state represented set variables depend variables previous states 
dependency structure sufficiently sparse possible successfully learn reason larger state spaces markov models 
dbns limited assume states described variables dependencies 
applications states naturally fall different classes described different set variables 
example web site viewed state space page state hyperlink possible transition 
classes pages commerce site include product descriptions shopping carts main gateway variables associated product description page product id price quantity hand variables associated shopping cart page include customer name shopping cart id relevant coupons variables help predict user navigational patterns clearly sense associate price site gateway page credit card number product description page 
examples multiple state classes areas include speech language processing 
parts speech verbs tense semantic contexts asking flights versus asking hotels types discourse mobile robotics 
types location indoors outdoors offices laboratories bedrooms 
computational biology 
components metabolic pathways regions dna protein structures process control 
stages manufacturing process machine types intermediate products fault diagnosis 
fault states associated different subsystems different set sensor readings proposes relational markov models rmms generalization markov models allows states different types different set variables associated type 
rmm set similar states represented predicate relation state variables corresponding arguments predicate 
domain argument turn hierarchical structure shrinkage carried :10.1.1.14.5443
rmms compute probability transition function source destination predicates arguments 
rmms example relational probabilistic representation combining elements probability predicate calculus 
representations type include probabilistic relational models probabilistic logic programs stochastic logic programs 
expect rmms particularly useful applications combine low level high level information plan recognition low level actions speech recognition aided natural language processing 
example inferring information seeking goals web site users sequence links follow 
doing inference possible automatically adapt web sites different users result minimize users effort reaching goals 
rmms able predict user behavior web sites parts thereof user visited potentially broadly useful previous approaches web log mining including traditional markov models 
precisely describe relational markov models extend traditional markov models apply rmms predict web navigation patterns empirically compare variety rmms traditional markov models demonstrating rmms predict users actions accurately 
section describes representation inference learning rmms 
sections describe application adaptive web navigation experimental results obtained 
conclude discussion related 

relational markov models consider discrete system evolves randomly moving state time step 
order markov model model system assumes probability distribution state depends current state previous ones 
st system state time step formally order markov model triple 
qn set states transition probability matrix aij st qj st qi probability transiting state qi state qj assumed initial probability vector qi probability initial state qi 
order markov model probability observing sequence states 
st 
st st st st st st 
set observed sequences maximum likelihood estimate initial probability fraction sequences start state qi maximum likelihood estimate transition probability aij fraction visits qi immediately followed transition qj 
nth order markov model probability transiting state depends previous states transition matrix th dimensional 
refer markov models order defined way propositional markov models pmms 
relational markov models rmms obtained propositional variety imposing relational structure set states 
example consider markov model commerce web site page state 
pmm main html backorder html html dimension html 
checkout html propositional markov model commerce site 
box pmm state representing page site 
arrows indicate possible transitions pmm correspond hyperlinks site 
product main html backorder html html dimension html 
checkout html corresponding relational markov model 
shaded box page state states grouped boxes relations 
unique proposition page state main entry page product description page checkout page 
see 
pmm state atomic entity notion types states 
contrast rmm groups pages type relations relation described set variables see 
example relation product description page variable product representing product page describes stock level representing product stock back order 
additionally variables grouped forming hierarchy values shows fragment hierarchy products commerce site 
state instance uniquely described tuple relation instantiated leaf values variable domain hierarchy 
example stock represent page describing computer currently stock site warehouse 
tuple non leaf values possible corresponds abstraction distinguished set states similar sense type arguments belong sub trees domain hierarchies 
rmms leverage state abstractions richer learning inference pmms useful prediction possible large state spaces states observed training data 
focus order rmms treatment readily generalizable rmms order 
subsections describe representation learning inference order rmms 
order literature mean relational predicate level opposition propositional markov sense denote assumption states independent past states state 
product 




stock 

ipaq 
dimension 
backorder abstraction hierarchy products 
leaves tree represent ground values internal nodes denote categories related values 
representation formally rmm tuple set domains domain tree representing abstraction hierarchy values 
leaf represents ground value 
set relations argument relation takes values nodes single domain set states ground instance relations argument instantiated leaf corresponding domain 
transition probability matrix initial probability vector pmm 
continue simplified commerce example suppose contains abstraction hierarchies products shown 
set product product specifies second arguments relation come product domains respectively 
consists states stock 
show relations domain abstraction hierarchies define sets states abstractions abstractions distinguished sets states members similar virtue relations parameter values 
states parameter values common subtrees respective domains appear abstractions states different parameter values belonging different relations appear general abstractions 
define abstraction sets instantiating relation interior nodes just leaf nodes domains arguments 
formally nodes denote nodes domain node domain leaves denote leaves descendants ary relation domains 
dk 

dk nodes corresponding domains 
define state abstraction corresponding 
dk subset 
leaves di example domain trees shown earlier shows abstractions commerce rmm 
note abstraction stock set ground states stock dimension stock 
backorder backorder product stock stock dimension stock 
state abstractions relational markov model 
hierarchy defines abstractions rmm abstractions depicted rounded corner boxes labeled relations arguments surrounding ground states 
product stock product stock product stock product product product product stock product product stock product lattice abstractions 
boxes represent abstractions arrows point direction general abstractions 
particular abstractions form lattice ground state product stock 
particular state especially interesting know abstractions member 
loss generality suppose 
domains arguments 
dk 
define set abstractions written subset power set 
dk di nodes di leaves di unary relations total order specific general 
ary relations partial order forms lattice abstractions 
example abstractions product stock shown arrows point direction increasing generality 
rank abstraction 
dk defined depth dk depth defined depth node tree root depth zero 
rank general abstraction defined zero ranks increase abstractions specific 
case finite domains rmms expressive pmms rmm equivalent pmm obtained simply creating proposition tuple advantage rmms lies additional support learning inference relational structure provides described subsection 
learning inference pmms possible learning consists estimating transition probabilities aij initial probabilities estimates done reliably states occur frequently training data 
cases modeling user large web site states observed training data possible generalize usefully observed behavior unseen states 
rmms provide formal framework doing generalization 
possible state abstraction define corresponding initial probability probability initial state element similarly pair state abstractions define corresponding transition probability probability transiting state state qi qj aij qi probability current state qi current state member 
abstraction transition probabilities estimated directly training data counting 
making suitable simplifying assumptions estimate probabilities transitions absent data 
example assume destination state qd independent source state qs destination abstraction asd qd source abstraction 
qd estimated uniform qd number states abstraction 
maximum available information propose mixture model transition probability asd st qd st qs qd qs qd sum abstractions source destination states non negative mixing coefficients sum 
generative model implicit equation generate transition choose pair abstraction levels probability move destination state qd probability qd 
effectively model performs shrinkage estimates levels abstraction 
shrinkage statistical technique reducing variance estimate averaging estimates larger populations include target 
equation applies shrinkage entire abstraction lattice single abstraction path usual 
example forecast number apple imacs sold store shrunk reliable forecast average quantity stores city store interest 
comparative values effectively trade bias variance probability estimate 
terms corresponding general abstractions lower variance estimated training data larger bias terms specific abstractions 
shrinkage weights desirable properties reduce influence abstractions little data allow increasingly specific abstractions dominate training set size grows rmm reducing pmm infinite data limit 
mixing coefficients estimated number ways corresponding different variations system rmm uniform uniformly equal 
approach advantage extremely fast may lead poor results 
rmm em em algorithm described mc 
preliminary evaluation option performed poorly due insufficient training data evaluate 
rmm rank heuristic scheme rank abstraction 
particular experimented method rank rank number times transition state state occurred data number visits state qi transition state qj possible design parameter proportionality constant derived requirement sum 
heuristic meets desiderata weights variations possible 
choice controls data seen abstraction level level significant weight 
experiments validation data setting works practice 
size abstraction lattices number terms equation increases exponentially arity source destination relations 
arities large abstraction hierarchies deep may practical compute terms equation 
select informative ones set mixture weights rest zero ignoring 
efficient way doing culling learn decision tree destination abstraction class arguments source relation attributes 
node path tree source state follows corresponds pair non zero weight equation 
weights chosen methods suggested earlier approach simply selecting terms non zero weight 
precisely learn probability estimation tree pet goal estimate probability destination abstraction simply predicting destination 
set abstractions form partition destination states principle class 
consider highest level abstraction relation rd destination state 
learn pet source relation separately 
candidate attributes include argument source relation level domain hierarchy ary relation arguments abstraction levels yields kn attributes 
shows example pet 
select informative terms equation source state consider path state goes pet 
node path associated probability distribution destination abstractions shown dashed line boxes nodes corresponds set terms equation destination abstraction 
corresponds decisions root node belongs set abstractions pet predicts 
example highlighted leaf node corresponds source abstraction stock nodes tree includes destination abstractions checkout 
terms gathered nodes path leaf combined equation shrinkage leaf split product depth leaf checkout 
checkout 
stock split product depth leaf leaf split depth checkout 
checkout backorder pet predicting destination relation 
rounded corner boxes represent tree nodes 
path page stock follows highlighted 
node associated distribution destination relations shown highlighted nodes 
node path selects set abstraction pairs combined equation 
abstraction node derived decisions sub path root node abstractions abstractions pet predicting destination relation example 
coefficients computed methods described 
choose weights em predicting destination relation specific abstractions sufficient data perform em reliably 
experiments call variant rmm pet 
generally build multiple pets estimating transitions different partition states source state follow multiple paths pet 
example pet predict destination relation predict destination lower level abstraction instance relation variable ground value terms collected pets combined equation 
practice large state spaces case fraction states directly reachable state 
example web site pages current page links directly reachable 
case qd terms equation replaced terms condition knowledge set states directly reachable qs 
states reachable qs qd 
states reachable qs previous assumption uniform probability qd 
notice principle machine learning method predict destination state function properties source state 
approach proposed implicitly encodes leaf learning bias abstraction hierarchies relation arguments useful generalization states values closer respective hierarchies transition state states far apart 
complexity inference rmms slower pmms quite fast 
computation single asd requires combining qs qd estimates estimates obtained learned model simple lookup 
computation fast abstraction hierarchy large 
case approach rmm pet greatly reduce number abstractions need considered identifying estimates informative 
trade time memory pre computing storing asd case inference fast pmms 
learning rmms conceptually involves estimating transition probability pair abstractions pair states 
transitions abstractions occur data need considered way pmms page transitions occur need considered 
transition probabilities non leaf abstractions computed looking data aggregating counts lower level abstractions 
result dominant term learning time rmm computation leaf level probabilities pmms 

adaptive web navigation rmms motivated desire automatically personalize web sites person browsing pattern 
individuals vary web navigation patterns web sites static organization designed general 
previous proposed proteus architecture automatically personalizing web sites individual visitors 
adaptation proteus follows step approach 
proteus mines web server logs build models users 
second users request pages site proteus considers ways adapt site add link pages rearrange list items page elide content long page selects adaptations yield greatest expected utility model mined step 
proteus employs heuristics strong bias ensure search efficient 
study dozen users wireless web browser proteus reduced time navigational effort required users find information low bandwidth devices 
proteus framework adding shortcut links particularly useful 
shortcut link connects previously distant pages site distance measured number intermediate pages 
example site contains pages links shortcut shorten path link 
concentrating shortcut creation problem developed algorithm composes page transition predictions predict expected savings possible shortcut site offer 
experimented mixtures propositional markov models including second order models mixture order markov models fared best saving visitors navigation effort 
performance limited quality underlying page navigation model mentioned earlier order pmms number weaknesses 
significant pmms offer informed guidance pages training data 
web page exist training period simply visited markov model better predict uniform distribution pages 
phenomenon common large dynamically generated web sites portal site news stories change day customers commerce site typically view product descriptions previously read semester students viewing course pages different set courses 
ideally model take advantage relational structure space pages 
example visitors prefer news stories particular genre products similar types 
student views numerous homework pages particular course department visitor continue preferring homework pages pages course courses major 
demonstrate section rmms effectively address issue sparse training data large sites making relational model web site identifying semantic correspondence pages previously visited unseen 
relational model frequently available form database data model conceptual model human web site designer developed maintains site content 
evaluation measure predictive accuracy rmms page navigation incorporate rmms implementation proteus system 

empirical evaluation section address questions hypothesis correct rmms outperform propositional markov models data sparse 
data rich environments pmms perform rmms disadvantage 
rmms competitive terms cpu time required learning 
rmm variants uniform rank pet performs best 
answer questions selected sets log data taken real web sites www gazelle com commerce site introduced kddcup competition instructional pages home institution www cs washington edu education courses 
sites explicitly modeled users ended browsing trail creating distinguished page linked page site users implicitly visited trail 
represented page site state input models links users followed training period 
experimental task predict probability user follow link user current page 
kdd cup data advantage represents large class sites dynamically generated database queries page templates ideal domain modeling questions answered live site 
home institution site useful operational substantial amounts data available mining 
sites collected clickstream data list links page 
determining hyperlink connectivity easy home institution crawled site parsed linkage data create model 
log data www 
gazelle com site longer operational 
forced generate approximate linkage model composed subset links followed log data 
solution suboptimal link followed presence may influenced behavior visitors alternative attempting randomly add spurious links page questionable 
generating relational structure site straightforward 
home institution example model cludes course term pages main page term offering course assignment course term assignment pages problem set assigned content www gazelle com large web sites generated dynamically combining queries database html templates produce pages 
challenge inferring schemata pages set allowable templates parameters required having access live web site 
fortunately kddcup log data encodes comprehensive set parameters part request parameters obvious intuitive meaning page template product identifiers 
removed records frequently accessed page templates templates arguments clickstream data search results pages set templates initial candidate relation set challenge determining arguments relation 
analyzing frequency non null parameter values clear templates took optional arguments 
framework requires relations constant arity split relation relations non null argument pattern 
process yielded distinct relations hierarchies parameter values trees defined parameters kddcup data 
appendix provides detailed relational models sites 
experiments compared pmms rmm variants rmm uniform rmm rank rmm pet 
employed laplace smoothing pmm rmm pet 
rmm rank set parameter value produced results training data 
compute shrinkage weights rmm pet em 
data set trained models varying numbers examples recorded average negative log likelihood test example 
negative loglikelihood score number bits needed encode average test instance model perfect model score zero 
experiment uses kddcup data www 
gazelle com shows substantial advantage rmms pmms see 
training examples rmms perform significantly better pmms difference significant confidence level 
amount training data increases models improve prediction rmm pet consistently outperform pmm 
models training data relative differences diminish 
result expected suitable volumes training data rmm rank rmm pet converge pmm 
rmm uniform consistent performance suggests levels abstraction site predicting state transitions 
second experiment uses log data november home institution 
trained successively data rmm rank rmm pet showed slight improvement pmms trained examples 
uw cse education pages form small site data rich environment pleased rmms pmms 
third experiment uses data home institution represents traffic pages single course cse computer programming full year 
trained models data instances cse winter spring summer fall tested models data instance winter 
note instructors course webmasters different various instances test average negative log likelihood rmm uniform rmm rank rmm pet pmm number training examples kddcup data www gazelle com 
xaxis shows number training instances scaled logarithmically axis average negative log likelihood test example 
curves test instances 
rmms outperform pmms training examples 
pages existed time training data collected 
result pmm better predict uniform distribution links page 
contrast rmm takes advantage related common relational structure training test data significantly improve prediction see 
computation time required rmm variants substantially pmms 
rmm variants require preprocessing data build abstraction sets done learning time independent test set 
third experiment example preprocessing site containing pages rmm rank rmm uniform took minutes rmm code implemented experiments run mhz pentium iii inference pmm test example requires single ratio counts complex set counts shrunk rmm variants 
average rmm uniform pmm method required amount time milliseconds example inference 
added cost rmm hidden largely test instance may cached applied instances common source state 
rmm pet requires different preprocessing learn pet took seconds completed prediction runs milliseconds 
combined rmms algorithm evaluate adaptive web navigation 
preliminary testing compared models rmm uniform rmm rank pmm 
rmms performed significantly better pmm allowing save users links links pmm particularly training data sparse 
exhaustively compare rmm variants pmms min path 
summary conclude rmms significantly outperform implementation calculates non leaf abstraction transition probabilities directly data lower level abstractions suggested section 
computation improved substantially 
average negative log likelihood number training examples rmm uniform rmm rank rmm pet pmm winter data uw cse course 
pages test set winter exist training period winter fall 
bayes net structure state distribution prm relational dynamic bayes net sequence markov model probabilistic models 
rmm pmms data sparse perform comparably data rich 
computation time rmms competitive pmms particularly training data preprocessed 
rmm pet technique appears best computing mixing coefficients rmm rank performing favorably 

related families related discuss turn techniques learning probabilistic models algorithms web adaptation personalization 
learning probabilistic models considerable performed variety different probabilistic models illustrate space 
lower left corner represents simple model containing number states varying probability 
moving rightward adds sequence information leads markov model 
moving upwards adds structure mean notion defining states terms variables representing joint probability distribution compactly explicit conditional independence assumptions 
moving back wards page adds relational information set predicates domain variables argument 
viewed context connection rmms order probabilistic representations clearer 
friedman extended notion bayesian network propose probabilistic relational models prms 
objects prm divided set classes different probabilistic model built class specifying attributes depend attributes related classes 
dynamic bayesian networks dbns form probabilistic dependency graph uncertain temporal reasoning 
dbn separate bayesian network time step values variables time depend values variables previous time slices 
dbns improve rmms explicit conditional independences set variables contrast rmm state dbn treated way variables dependencies 
knowledge rmms probabilistic order model sequential processes proposed 
interesting note dynamic bayesian networks viewed special form prm class state relation sequential order successive states 
prms extended allow class chosen hierarchy 
rmms allow hierarchies attributes class combining models levels shrinkage 
approach useful prms 
obvious area combine ideas rmms dbns prms define dynamic probabilistic relational models 
hidden markov models extended number ways accommodate richer state observation information 
example factorial hidden markov models decompose model states components described state variables depend observation variable 
factorial hidden markov model viewed form rmm hidden state states belong ary relation conditional independence assumption state variables subsequent states depend corresponding variables previous state 
area exploring conditional independences leveraged relational markov models 
extensions hmms proposed lafferty 
possible subsume framework matter research 
rmms related abstraction reinforcement learning dietterich dzeroski may useful field 
adaptive web navigation perkowitz etzioni challenged research community build adaptive web sites projects addressed components task 
section highlight subset related specifically adaptive web navigation 
system processes server access logs offline order learn model web navigation patterns similar builds visitor clusters visualization 
run time combines probabilistic estimates model distance information compute expected savings shortcuts adding links deems useful 
earlier evaluated variety visitor models including na bayes mixture models mixtures markov models concluding mixture markov models performed best task 
argue rmms perform substantially better task 
perkowitz etzioni address shortcut problem simpler prediction method pair pages site system records viewed chain links page requested statistics computed system adds top requested pages shortcuts :10.1.1.27.2889
method doesn independence assumptions order markov model probably requires user data order predictions 
traditional markov approaches perkowitz etzioni system predict shortcuts pages weren visited training data 
addition shortcut problem perkowitz etzioni developed uses page meta data cluster web pages conceptually similar groups subsequently builds coherent index hub pages links :10.1.1.27.2889
meta data similar spirit values instantiate rmm relations segregate pages relations predict navigation 
fu mines web logs association rules suggesting top pages occur visitor current session learning method form market basket analysis 
lieberman letizia client side agent browses web tandem user 
user actions links followed pages added bookmarks file letizia estimates visitor interest pages 
information retrieval measures page similarity guiding queries quite successful predicting navigation patterns 
webwatcher adaptive web site agents machine learning predict link user follow simplified version shortcut problem 
uses markov model web usage suggest probable links visitor may follow notes need reduce size model clustering urls 
space precludes discussion related sequence prediction web usage mining 
goal webkb project populate relational knowledge base textual content hyperlink connectivity web pages 
goal different rmms rmms presume existence relational model predict transitions model 
interesting apply webkb learning approach populate model describing web site rmms predict navigation model 
commerce sites dynamically generated database queries large sites corporate intranets academic institution web sites exist large collections static web pages 
webkb approach prove fruitful producing relational information rmms need static sites 
research done years classifying web pages pazzani mccallum 
web page classifier yields class probabilities principle place rmms adaptive web navigation 
classifiers viewing web pages bags words unable take advantage relational structure site 
incorporating bag words information rmms may useful direction 

introduces relational markov models rmms generalization markov models represents states relational predicates leverages information better learning inference 
believe rmms applicable wide variety domains web navigation mobile robotics speech processing process control fault diagnosis computational bi ology 
contributions provide precise definition relational markov models describe estimate state transition behavior shrinkage abstractions states 
explain rmms adaptive web navigation experiments demonstrating substantial advantages traditional markov models 
compare variations rmms pets select mixture weights performed best followed rmm rank approach 
experiments shown relational markov models suitable alternative traditional markov models rmms infrequently perform worse perform better 
data states available quantity relations states reflected distribution data rmms offer advantage relative traditional markov models fact perform worse pmms 
data scarce non existent states abundant conceptually similar states relational abstractions states relational markov models significantly outperform traditional markov models 
intuition suggests case holds true vast majority web sites rmms prove widely useful 
research plan extend relational markov models explore additional applications 
immediate area pursue developing rmm pet approach building pets predict finer partitions destination abstractions 
interesting evolution rmms relational hidden markov models states observations described typed relations shrinkage carried respective abstractions 
direction incorporating model cluster identity transition probability identity cluster visitors web site shrinking models learned different sizes scope user cluster single user cluster similar users set users site 
third path research apply rmms domains mobile robot localization speech recognition 
acknowledgments authors cathy anderson anhai doan oren etzioni geoff hulten ives cody kwok insightful comments blue martini providing com data 
funded part nsf iis iis nsf career ibm faculty awards second author gift ford motor 

agrawal imielinski swami 
mining association rules sets items large databases 
proceedings acm sigmod conference management data pages 
anderson domingos weld 
adaptive web navigation wireless devices 
proceedings seventeenth international joint conference artificial intelligence 
anderson domingos weld 
personalizing web sites mobile users 
proceedings tenth international world wide web conference 
cadez heckerman meek smyth white 
visualization navigation patterns web site model clustering 
proceedings sixth international conference knowledge discovery data mining 
craven dipasquo freitag mccallum mitchell nigam slattery 
learning construct knowledge bases world wide web 
artificial intelligence journal 
dean kanazawa 
probabilistic temporal reasoning 
proceedings seventh national conference artificial intelligence 
dean kanazawa 
model reasoning persistence causation 
computational intelligence 
dietterich 
state abstraction maxq hierarchical reinforcement learning 
solla leen 
muller editors advances neural information processing systems pages 
mit press cambridge ma 
dzeroski de raedt 
relational reinforcement learning 
proceedings fifteenth international conference machine learning pages madison wi 
morgan kaufmann 
friedman getoor koller pfeffer 
learning probabilistic relational models 
proceedings sixteenth international joint conference artificial intelligence pages stockholm sweden 
morgan kaufmann 
fu budzik hammond 
mining navigation history recommendation 
proceedings conference intelligent user interfaces 
getoor koller friedman 
instances classes probabilistic relational models 
proceedings icml workshop attribute value relational learning stanford ca 
ghahramani jordan 
factorial hidden markov models 
machine learning 

estimation probabilities essay modern bayesian methods 
mit press cambridge ma 
joachims freitag mitchell 
webwatcher tour guide world wide web 
proceedings fifteenth international joint conference artificial intelligence 
kohavi brodley mason zheng 
kdd cup organizers report peeling onion 
sigkdd explorations 
www ecn purdue edu kddcup 
lafferty mccallum pereira 
conditional random fields probabilistic models segmenting labeling data 
proceedings eighteenth international conference machine learning pages ma 
morgan kaufmann 
lieberman 
letizia agent assists web browsing 
proceedings fourteenth international joint conference artificial intelligence 
mccallum rosenfeld mitchel ng 
improving text classification shrinkage hierarchy classes 
proceedings fifteenth international conference machine learning 
muggleton 
stochastic logic programs 
de raedt editor advances inductive logic programming pages 
ios press amsterdam netherlands 
ngo haddawy 
answering queries context sensitive probabilistic knowledge bases 
theoretical computer science 
pazzani muramatsu billsus 
syskill webert identifying interesting web sites 
proceedings thirteenth national conference artificial intelligence 
pazzani billsus 
adaptive web site agents 
proceedings third international conference autonomous agents 
perkowitz etzioni 
adaptive web sites ai challenge 
proceedings fifteenth international joint conference artificial intelligence 
perkowitz etzioni :10.1.1.27.2889
adaptive web sites conceptual framework case study 
artificial intelligence journal 
provost domingos 
tree induction probability ranking 
machine learning 
appear 
rabiner 
tutorial hidden markov models selected applications speech recognition 
proceedings ieee 

link prediction path analysis markov chains 
proceedings ninth international world wide web conference 
smyth 
clustering sequences hidden markov models 
mozer jordan petsche editors advances neural information processing 
smyth heckerman jordan 
probabilistic independence networks hidden markov probability models 
neural computation 
appendix relational schemata evaluation sites www gazelle com relations gazelle com take parameters assortment product collection 
domain hierarchies parameters described explicitly kddcup data 
home departments vendor vendor assortment assortment product product assortment product collection product assortment product collection assortment www cs washington edu structure www cs washington edu education courses derived reverse engineering structure existing site 
term course domain hierarchies contain root node level interior nodes grouping courses undergraduate graduate grouping terms academic year ground leaf values 
url variables urls relative particular course course term apply 
domain hierarchies url variables flat comprising root node leaf values 
course course url course term course term url course term url course term url course term course term url course term number course term number course term number url course term number course term exam course term url course term course term url lecture course term number course term number url course term course term number section course term section course term section url 
