characteristics internet background radiation pang vinod cs princeton edu vinod cs wisc edu paul barford vern paxson larry peterson pb cs wisc edu vern icir org llp cs princeton edu monitoring portion internet address space reveals activity 
holds monitoring traffic sent unused addresses term background radiation background radiation reflects fundamentally traffic malicious flooding backscatter scans vulnerabilities worms benign misconfigurations 
general presence background radiation known network operator community nature broadly characterized 
develop characterization data collected unused networks internet 
key elements methodology filtering reduce load measurement system ii active responders elicit activity scanners order differentiate different types background radiation 
break components background radiation protocol application specific exploit analyze temporal patterns correlated activity assess variations different networks time 
find activity probes worms heavily dominate 
conclude considerations incorporate characterizations monitoring detection activities 
categories subject descriptors local wide area networks internet general terms measurement keywords internet background radiation network telescope honeypot 
years basic characteristic internet traffic changed 
older traffic studies mention presence appreciable going attack traffic monitoring operating today networks immediately familiar presence traffic dept computer science princeton university dept computer science university wisconsin madison international computer science institute lawrence berkeley laboratory permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
imc october italy 
copyright acm 
broadly characterize traffic destined addresses exist servers running servers want receive traffic 
hostile reconnaissance scan backscatter flooding attack spam exploit attempt 
volume traffic minor 
example traffic logs lawrence berkeley national laboratory lbl arbitrarily chosen day show different remote hosts scanned lbl addresses total connection attempts 
double site entire quantity successfully established incoming connections originated distinct remote hosts 
fine grained study remote scanning activity different day different scanners probing lbl addresses 
traffic trying 
filter order detect new types malicious activity 
new phenomenon traffic seen detailed characterization literature lacked means answer questions 
study aim provide initial characterization traffic 
traffic pervasive nature demonstrate term internet background radiation 
basic issue attempting measure background radiation large determine observed traffic unwanted 
simply include unsuccessful connection attempts conflate truly unwanted traffic traffic representing benign transient failures accesses web servers usually running happen line measurement period 
measuring traffic sent hosts don exist internet addresses unallocated unused eliminate forms benign failures focus traffic highly reflect unwanted activity 
addition analyzing unused addresses yields second major measurement benefit safely respond traffic receive 
gives means passively measure unwanted traffic example ports get probed engage remote sources order elicit particular intentions example specific actions take thinking running server 
newness type internet measurement contributions study set methodologies develop analysis 
include considerations filtering reduce load measurement system construct active responders differentiate different types background radiation ways interpreting facets collected data merit investigation 
ways goals study aim char nature background ubiquity runs risk having boring sameness 
fact measure success achieve complete characterization background radiation facilitate construction classifiers remove known elements background radiation set observations 
classifiers offload various types network analyzers example reducing state network intrusion detection system track provide means return simpler world decade ago allowing recover notion normal attack free traffic 
attack free traffic highly valuable establishing baselines types analysis flag departures normality malicious activity investigation 
proceed study follows 
discuss previous related efforts 
describe sources data study methodology related capturing analyzing data 
analyzes learn monitoring purely passively extends learn respond traffic receive 
evaluate aspects traffic source behavior 
conclude summary themes developed study 

related studies characterized specific types malicious traffic 
moore investigate prevalence denial service attacks internet backscatter analysis observing attack traffic replies sent flooding victim routed internet due attacker spoofed source addresses 
measurement studies code red ii worm outbreaks sapphire slammer worm outbreak provide detail method speed effects worm propagation internet 
additional studies assess speed counter measures deployed inhibit spread similar worms 
empirical components studies largely data collected network telescopes see similar study active response component 
related staniford mathematically models spread code red considers threats posed potential worms 
small scale study internet attack processes fixed honeypot setup provided 
explore statistical characteristics internet attack intrusion activity global perspective 
aggregation analysis firewall intrusion detection logs collected org period months 
coarsegrained nature data precluded assessment attacks attribution specific ports 
provide limited case study demonstrates potential network telescopes provide broad perspective internet attack activity 
extend developing comprehensive analysis attack activity 
unused ip address space important source information intrusion attack activity 
measurement systems deployed unused ip address ranges referred internet sink holes network telescopes 
active projects focused unused address space monitoring include honeyd 
focuses live vmware systems monitor unused addresses 
honeyd uses set stateful virtual responders operate interactive honeypot 
network intrusion detection systems including snort bro variety commercial tools commonly detect scans specific malicious payloads :10.1.1.116.8880
emerging area research automated generation attack signatures 
example extension honeyd uses longest common substring lcs algorithm packet level data recorded honeyd automatically generate signatures 
pursues similar approach including 
study inform developments systems respect type volume ambient background attack activity 

measurement methodology section describes methods tools measure analyze background radiation traffic addressing key issues 
taming large traffic volume listen respond background traffic thousands millions ip addresses 
sheer volume traffic presents major hurdle 
handle approaches devising sound effective filtering scheme significantly reduce traffic volume maintaining variety traffic building scalable responder framework respond traffic high rate 

building application level responders find tcp syn packets dominate background radiation traffic passive measurements means need accept connections sources extend dialog long possible distinguish types activities 
involves building responders various application protocols netbios cifs smb 
taming traffic volume responding entirety background radiation traffic received thousands millions ip addresses entail processing enormous volume traffic 
example see nearly packets second background radiation class network monitor 
taming traffic volume requires effective filtering important investigate scalable approaches building responders 
discuss turn 
filtering devising filtering scheme try balance trade offs traffic reduction amount information lost filtering 
considered strategies source connection filtering strategy keeps connections initiated source discards remainder 
disadvantage strategy provides inconsistent view network source live ip addresses unreachable 
problem effective value service attack dependent 
certain attacks code red suffices multi stage activities multi vector activities agobot require larger values source port filtering strategy similar keep connections source destination port pair 
alleviates problem estimating multi vector activities agobot multi stage activities single destination port remain problem 
strategy exposes inconsistent view network 
effectiveness filter reduction pkts bytes campus pkts campus bytes lbl pkts lbl bytes filter size number live destination ips source effectiveness filter reduction pkts port port port netbios smb port filter size number live destination ips source effectiveness filtering networks left services right source payload filtering strategy keeps instance type activity source 
data richness perspective quite attractive 
hard implement practice know activities similar respond packets especially true multi stage activities chatty protocols netbios 
strategy requires significant state 
source destination filtering strategy chose experiments assumption background radiation sources possess degree affinity monitored ip addresses 
specifically source contacts destination ip address displaying certain activity assume see kind activity ip addresses source tries contact 
find assumption generally holds case certain multi vector worms pick exploit ip address identify attack vectors 
illustrates effectiveness filtering different networks services run hour interval 
plot shows filter reduces inbound traffic orders magnitude networks 
lbl network obtains significant gains larger campus networks campus network intentionally respond stage exploits certain frequently seen variants step send large attack payload kb buffer overflow 
second plot illustrates effectiveness filter various services 
blaster port port scanners tend horizontally sweep ip subnets lead significant gains filtering energetic netbios scanners need bud low benefit 
active sink event driven stateless responder platform part active response framework explores stateless approach generating responses goal devising highly scalable architecture 
active sink active response component measurement system developed scalably monitor background radiation observed large ip address blocks 
active sink simulates virtual machines network level honeyd maximize scalability implemented stateless fashion click kernel module 
achieves form incoming application traffic determine appropriate response including appropriate sequence numbers maintaining transport application level state 
key question approach necessary responders constructed stateless fashion 
exploring issue scope note responders discuss able implement stateless form active sink stateful form honeyd 
facilitate dual development developed interface modules underlying code responders 
application level responders approach building responders data driven determined responders build observed traffic volumes 
general strategy pick common form traffic build responder detailed differentiate traffic specific types activity unknown category type activity sufficiently small repeat process largest type traffic 
process built array responders protocols port netbios port cifs smb port dce rpc port cifs named pipes port 
built responders emulate backdoors installed port beagle port 
application level responders need adhere structure underlying protocol know say 
sources probing particular implementation protocol need emulate behavior target software order keep conversation going 
example webdav demonstrates entails 
see frequent get requests port 
responding mimicking microsoft iis web dav enabled elicit traffic sources 
full sequence plays get ok 
server microsoft iis search length required search aaa 
uri length kb buffer overflow exploit received types activity require quite intricate responders 
microsoft windows services run top cifs port lead develop detailed set responses shown 
requests named pipes tunneled various dce rpc responders 
complicated activities exploit samr pipe involves rounds exchanging messages source reveal specific intent attempting create executable file destination host 
shows example classify source nt create andx responder agobot codered ports responder netbios name requests port port request exe 
command schedule worm process invoked minute 
attack sequence shared viruses including worm agobot variants 
building responders prove difficult due lack detailed documentation services cifs dce rpc 
resort probing actual windows system running virtual machine environment order analyze responses en route infected 
modified existing trace replay tools purpose 
generally new types activities emerge time responders need evolve 
find current pace maintaining responders tractable important question degree automate development process 
exe xi exe exe samr exe port negotiate protocol session setup exe honeyd active sink os responder honey interface port nb responder smb 
smb responder agobot rpc 
responder blaster agobot port ports responder agobot top level umbrella application responders ms rpc buffer overflow microsoft exe locator ms locator buffer overflow example summary port activity class sessions arcs indicate number sessions traffic analysis engage conversations background radiation sources need undertake task understanding ports echo responder beagle agobot traffic 
approach components separate traffic analysis responders second try analyze traffic terms application level semantics 
regarding appear job traffic analysis done responders responders need understand traffic anyway significant benefits performing traffic analysis independently 
capturing storing tcpdump packet traces line analysis 
approach allows preserve complete information traffic evolve analysis algorithms time 
flip side doing poses challenge analysis tool needs tcp stream reassembly application protocol parsing 
address issue built tool top bro intrusion detection system provides convenient platform application level protocol analysis :10.1.1.116.8880
early order filter background radiation traffic normal traffic need understand application semantics traffic 
background radiation traffic distinctive application semantic characteristics compared normal traffic see sections differences far difficult detect network transport level 
analysis important limitation attempt understand binary code contained buffer overrun exploits 
means tell sure worm sent particular exploit due lack publicly available database worm virus packet traces 
new variant existing worm arises exploits vulnerability may able discern difference 
analysis identify new worm exploits different vulnerability case worm 
experimental setup conducted experiments different sites 
ran different systems lbl sink conducted forms application response different underlying mechanisms 
instance monitored background traffic observed class network addresses subnets addresses adjacent uw campus class net smb negotiate protocol request smb negotiate protocol response smb session setup andx request smb session setup andx response smb tree connect andx request path xx ipc smb tree connect andx response smb nt create andx request path samr smb nt create andx response bind call id samr bind ack samr connect request samr connect reply samr request samr reply samr request samr reply samr request samr reply samr request nat filter campus filtered request response intra campus router unfiltered request filtered response setup start session connect pipe issue get remote time day request smb negotiate protocol request smb negotiate protocol response smb session setup andx request smb session setup andx response smb tree connect andx request path xx ipc smb tree connect andx response smb nt create andx request path smb nt create andx response bind call id bind ack call id request reply smb close request smb close response active response sequence samr exe viruses active sink nat filter class filtered request response 
trace collection 
network address translation 
src dest filtering works respectively 
filtered packets routed network address translation active sink 
separate filters class network campus subnets 
collected sets tcpdump traces networks traces packet headers passive measurements periods active responders turned filtered traces complete payloads active traffic analysis 
traces class network sampled packets mitigate storage requirements 
lbl sink lbl sink monitors sets contiguous subnets 
passive analysis merely listen respond filter traffic 
second active analysis 
divide halves subnets apply filtering separately 
filtering system tunnels traffic active responders shown 
tunnel way responses routed directly internal router 
set application protocol responders lbl invoked honeyd honeyd sufficient scale traffic lbl filtering 
trace active response traffic honeyd host stated comes halves subnets 
connect admin share write file smb tree connect andx request path xx admin smb tree connect andx response smb nt create andx request path system exe smb nt create andx response fid ca smb transaction request set file information smb transaction response set file information smb transaction request query fs information smb transaction response query fs information smb write request 
tunnel filter filtered requests 
passive trace collection 
udp ip encapsulation 
src dest filtering architecture lbl external border router lbl setup internal border router honeyd responder active trace collection filtered responses site networks size datasets duration uw active mar may passive mar may uw ii active mar may passive mar may class active mar mar passive mar mar lbl sink lbl active mar may lbl passive apr may table summary data collection note lbl uw campus prefix gives locality class network 
table summarizes datasets study 
network collected passive tcpdump traces filtered traces 
uw networks lbl network collected months worth data 
provisional access class enabled collect weeks data 
sites different mechanisms forward packets active responder tunneling network address translation nat 
lbl site uses tunneling encapsulation ip datagrams inside udp datagrams advantages straightforward implement ii require extensive state management forwarder 
tunneling requires receive traces analysis handle fragmentation full mtu packets allocate dedicated tunnel port 
nat hand issues necessitates maintaining flow state forwarder significant large networks 
stateless responder deployed uw site allows state ephemeral approach feasible 
need maintain consistent flow id outstanding incoming packet corresponding flow record filter evicted soon sees response 
lifetime flow records order milliseconds rtt forwarder active sink seconds 

passive measurement back ground radiation section presents baseline background radiation traffic unused ip addresses actively responding packet 
starts traffic breakdown protocols ports takes close look particular facet traffic backscatter 
traffic composition question background radiation characteristics type volume observed traffic 
start answer question looking snapshots background radiation traffic shown table includes hour trace collected uw campus network may may week trace lbl collected contiguous networks april may week trace class sampling march 
protocol uw lbl class rate rate rate tcp icmp udp table traffic rate breakdown protocols 
rate computed number packets destination ip address day network size sampling rate normalized clearly tcp dominates networks 
relatively lower tcp rate class partly due artifact class trace collected mar may see large worm malware outbreaks include worm 
shown table observed tcp packets tcp syn 
large number icmp packets icmp echo req see lbl form daily high volume spikes result small number sources scanning address observed networks 
hand see lot fewer icmp packets class monitor probably worm probes icmp echo req avoids class network 
surprising low rate udp packets observed uw largely due artifact uw filters udp port slammer worm 
see tcp syn packets seen lbl arrive relatively steady rate case networks contrast daily icmp spikes 
closer look breakdown tcp syn packets destination port numbers lbl table reveals small number ports number packets hour icmp tcp udp time hour number background radiation packets hour seen lbl targets majority tcp syn packets ports listed table account packets 
table shows traces perspective source traffic 
note rows mutually exclusive host may send tcp udp packets 
clear tcp packets dominate population source hosts see 
distribution ports lbl traffic shown table small number ports dominant 
protocol uw lbl percentage percentage tcp icmp udp table traffic breakdown number sources 
tcp port source ip packets table popular tcp ports 
ports visited number source ips week passive trace lbl 
total packets distinct source ip addresses 
tcp syn packets constitute significant portion background radiation traffic observed passive network obvious question intentions connection requests 
explore question section 
analysis backscatter activity term backscatter commonly refer unsolicited traffic result responses attacks spoofed network ip address 
provides time series graph backscatter activity seen networks 
surprisingly tcp syn acks account majority scans seen networks 
common responses spoofed syn flood denial service attack 
figures uw class networks span number packets ip hour rst syn ack comm adm host ttl exceeded wed thu fri sat sun mon tue wed day week backscatter uw number packets ip hour number packets ip hour fri sat sun mon tue wed thu day week rst syn ack comm adm host ttl exceeded wed thu fri sat sun mon tue wed day week rst syn ack backscatter syn acks class backscatter uw ii number packets ip hour number packets ip hour fri sat sun mon tue wed thu day week rst syn ack ttl exceeded wed thu fri sat sun mon tue wed day week ttl transit comm adm prohibited comm adm prohibited host port unreachable host unreachable remaining backscatter class backscatter lbl time series weekly backscatter networks 
note class shown charts second showing components backscatter dominant rst syn ack weeks 
backscatter uw networks looks highly similar terms volume variability 
observed tcp syn acks icmp ttl exceeded shown figures sense spoofed traffic eliciting backscatter uniformly distributed uw addresses 
difference networks uw tends receive communication administratively prohibited icmp messages uw ii 
explanation 
see common spikes syn acks class uw networks significant differences 
notable difference class network attracts backscatter categories shown 
lbl graph shown belongs different week displays quite different pattern uw 
note backscatter uw networks week shown shows similar pattern lbl dominant traffic types tcp syn acks icmp ttl exceeded 
surprising uw networks lbl network belong network 
hand lbl network receive far fewer scans categories 
significant portion icmp host unreach messages see class responses udp packets spoofed source addresses port port 
thought seeing dns poisoning attempts seeing udp packets networks 
examining packets reveals dns packets windows messenger pop discussed section 

activities background ation section divide traffic ports tour dominant activities popular ports 
add temporal element analysis see volume activities vary time 
details port rank activities popularity number source ips packet byte volume reasons 
filtering algorithm biased sources try reach destinations affects packet byte volumes unevenly different activities 
number source ips largely remain unaffected filtering assuming symmetry destinations 
number source ips reflects popularity activity internet activity huge number sources prominent internet 
single source activities merely result host multi source activity intentional 
port abbrev 
activity get get get search get search search aaa 
search xb xb 
byte uri bind rpc bind rpc unknown rpc request bytes bla rpc exploit blaster wel rpc exploit rpc rpc exploit exploit ep tcp empty tcp probe tcp rpc exploit exploit tcp session negotiation locator ip ipc locator rpc exploit exploit samr exe dst ip ipc samr dst ip ipc create file exe samr dst ip ipc samr dst ip ipc dst ip ipc table abbreviations popular activities source host contacts port common sends probes revealing real intention second third connection destination host 
probe empty connection source opens closes connection sending byte short request get 
interested intention sources choose look activities session pair granularity connection granularity 
reach probes dominant elements 
consider connections source destination pair destination port collectively suppress repetitions 
approach usually gives clear picture activity port 
examine activities popular destination ports port dominant activities 
convenience presentation introduce abbreviations activity descriptions shown table 
pick arbitrary day march compare distribution activities seen different networks lbl uw ii class network 
consider uw networks single network eliminate possible bias occur due single filter 
background radiation traffic highly concentrated small number popular ports 
example mar saw distinct source ips lbl source hosts contacted port popular ports discussed 
looking popular ports cover background radiation activity 
note looking ports allow distinguish background radiation traffic popular ports tcp tcp dce rpc tcp smb heavily normal traffic 
hand look background radiation traffic application semantic level distinctive modal distribution 
example activities port predominantly targeted particular interfaces buffer overrun exploits focused interface 
worth noting activity composition may change dramatically time especially ignore effect source ip spoofing responder able establish tcp connections source hosts 
activity lbl uw class get codered nimda table port activities mar note reduce trace size active responders uw class respond search avoid getting large requests 
new vulnerabilities worms appear dominant activity port longer locator rise worm 
believe modal pattern long background radiation traffic remains highly automated 
tcp port proxy ports activities see port table targeted microsoft iis server 
cases imitating response typical iis server enables attract follow connections source 
dominant activity port webdav buffer overrun exploit denoted 
exploit probes get search connection sending search request long uri cases bytes length vary starting aaaa overrun buffer 
exploits see ports exploit shows lot payload diversity uris different hundreds bytes difference due byte shifting 
interestingly uris composed solely lower case letters dozens unicode characters near 
uri appears constructed exploit executable code unicode encoding inserting byte byte 
exploit see webdav exploits popular exploit agobot carries fixed byte uri 
old iis worms nimda codered ii remain visible datasets 
codered ii worm original codered ii shift space change expiration date year 
see options followed request 
requests short look probes 
able elicit requests sources fully comprehend intention probes 
suspect scanners trying obtain listing list files sending translate header request 
interesting component background radiation observed networks proxy ports port source hosts open proxies send probes net 
typical request shown 
requests sources abusing get rich quick money scheme com web site pays users money running surf net 
open proxies sources potentially appear running hundreds nodes 
website 
ports officially assigned traffic received contained requests 
get dc net pxy nc host dc net connection close percentage source ips typical request host lbl uw class data set volume port activities mar ep rpc wel bla rpc bind empty tcp port dce rpc port endpoint mapper port windows systems entry points exploit infamous microsoft windows dcom rpc service buffer overrun vulnerability 
vulnerability exploited blaster worm worm 
shows dominant activities port 
blaster worm seen networks strangely saw worm lbl 
number empty connections follow ups types probes rpc understand 
comparing activity distribution networks difference striking see ports 
may due lack single dominant activity certain scanning exploits targeted localized 
port open normal windows xp host see similar set exploits 
dce rpc exploits seen smb name pipes port 
closer look rpc exploit section 
tcp port cifs port netbios session service port usually windows systems cifs common internet file system netbios 
port cifs tcp known microsoft ds 
cifs sessions ports identical netbios requires extra step session setup 
sources simultaneously connecting ports prefer port abandon port connection 
frequently see empty port connections 
windows services run top cifs great variety exploits see ports 
shows snapshot exploits see port class network 
basically kinds activities buffer overrun rpc exploits named pipes locator pipe pipe connected endpoint mapper service access control bypassing followed attempts upload executable files target host exploit samr exe 
shown table locator pipe exploit dominates port activities networks 
sources go session negotiation step step activity lbl uw class empty locator samr exe samr table port activities cifs session 
see exploits connect samr session account manager pipe connect pipe attempt create executable file names exe microsoft exe 
connecting pipe sources exploiting vulnerability port note activity seen class network 
port source hosts merely initiate empty connections go netbios session setup stage migrate port dominant activity accurately identify attempts create files startup folders connecting pipe xi exe port see hosts attempting exploit buffer overflows locator pipe 
see agobot variants connect samr pipe drop executables 
tcp port port listened remote control administration tool windows systems buffer overrun vulnerability early versions 
exploits see similar published exploit programs exactly payload 
launch exploit source host send byte message probe operating system version ship exploit payload bytes long 
mar source hosts connect port lbl close connections sending byte abandoned connections sending probe message see exploit messages remaining number apr 
reasonable question large number abandoned connections suggest sources responders 
find source hosts connect empty connection came back send exploit 
port associated agobot connects variety ports see section possibilities bots may connect number ports simultaneously decide exploit port receive response 
tcp port virus backdoors port known backdoor ports virus beagle viruses respectively 
port connections see fixed byte header followed windows executable files uploads 
files marked mz bytes contain string program run dos mode near head file 
running captured executable files closed environment reveals programs scan tcp ports 
port dominant payload see lbl uw ftp url comes exchanging due responder problem data uw class network 
short binary messages 
ftp bla bla src ip port bot exe class network see lot port activities 
interestingly see source hosts attempt upload windows executables 
see hosts close connection exchange initial message 
port cases see binary upload echoing header similar happens port cases receive cryptic byte message unable elicit response echoing 
tcp port exploit follow ups worms codered slammer contained completely buffer overrun payload worms blaster infect victim hosts steps 
buffer overrun payload carries piece shell code listen particular port accept commands second source instructs shell code download execute program remote host 
example port follow port blaster worm see tftp src ip get exe start exe exe similarly port see sequences shell commands download execute bot exe 
contrast different kind shell code called reverse shell listen particular port connects back source host phone home 
port source host randomly chosen embedded shell code sent victim 
worm uses reverse shell random port selection flawed 
harder capture contents follow connections understand shell code find port initiating connections honeypots violates policy hosting networks 
empty 
udp port expected see lot dns requests find sources sending non dns malformed packets shown domain domain udp sum ok au type class 
domain ttl id len 
xxxx xxxx xxxx 
fc bi cb ee 
know packets 
requests dominate udp packets observed lbl uw ii networks 
table provides summary dns activity observed class network hour trace showing diverse activity 
uw lbl networks sources sending malformed dns requests dominate 
terms packet counts queries substantial 
suspect possibly due misconfigured dns server ip addresses hosts 
queries sent various destination ip addresses originate various networks 
result stale dns entries 
biggest contributor terms volume standard queries resolve ip address domain names 
soa packets start authority packets register domain authorities 
observed sources total registering different domain authorities net 
queries include ptr queries reverse dns lookups srv records specify locations services aaaa queries ipv name resolution 
type num packets num sources malformed packets standard queries standard query soa standard query ptr dns standard query srv packets dns standard query aaaa packets dns standard unused packets dns standard unknown packets table summary dns activity seen class hours udp port activities dominated netbios standard name queries probes 
udp port windows messenger pop spam appear udp packets source port destination port 
port combination typically connotes dns reply examination packet contents reveal fact dce rpc requests exploit weakness windows messenger api deliver spam messages windows desktops 
shows trace typical packet 
source ip addresses packets spoofed suggested observed icmp host unreach backscatter attacks class choice source port evade firewalls 
domain xxx xxx xxx xxx op class type domain df 



ff 
fb fc ba 

ffff ffff 
real en 

want sex fin www xxxx xxxx xxxx xx biz 
observed windows messenger pop spam packets 
udp port slammer worm alive background radiation see port 
tcp port built detailed responder ms sql 
appears source hosts trying log blank passwords 
tcp port know port 
port reserved universal plug play windows systems requests see valid requests 
requests contain number consecutive nop look buffer overrun exploits 
ports examine exhibit modal distribution application semantic level contain dominant elements 
exception dce rpc ports see diversity sense various exploits dce rpc ports single dominant element higher level target vulnerability 
dominant elements quite different see normal traffic suggests able filter majority background radiation traffic sound classification scheme number source hosts locator rpc exploit bytes time day big exploits apr may observed networks lbl 
source hosts counted hours 
application semantic level 
temporal distribution activities examine cases temporal activity 
look exploits largest source population consider distributional variation time second look exploits targeted particular vulnerability consider exploits evolve diversify time 
focus lbl network analysis 
dominant exploits shows numbers source hosts vary course days exploits largest source population 
source volumes locator exploits relatively stable close time 
surprising exploits coming worm see section 
exploits exploit show wider range source volume dynamics especially true exploit temporarily smaller scale april th 
exploits demonstrate strong diurnal pattern obvious peaks local time noon 
explanations pattern 
locator exploits peak due hosts turned daytime doing local biased search 
exploit steep narrow peaks lead believe caused scanning mechanism 
dce rpc exploits dce rpc exploits target microsoft dcom rpc vulnerability interesting case single known vulnerability reused various worms 
vulnerability particularly attractive exists windows xp system contrast vulnerabilities exist iis sql servers 
seen quite different exploit payloads data 
different payload lengths 
appear result intentional polymorphism reasons single source ip see payload length easy vary length payload simply inserting nop adversary wanted incorporate polymorphism 
infer diversity payloads due deliberate polymorphism due different code bases 
payloads interesting diversity due various shell code carry diversity offers opportunity look rising different exploit programs 
robust way cluster payloads contents payloads length differ tens hundreds bytes differences merely byte shifting choose cluster exploits lengths ports appear including port pipes port 
scheme see different exploit types 
select popular exploits consider number source ip addresses exploit varies time april 
exploits different payload lengths seen port 
observe strong temporal correlation exploits length lengths case lengths 
exploits show correlation terms activity port port due source probing ports 
find multiple sources activity particular port length pairs tends come bursty spikes suggesting synchronized scanning sources 

characteristics sources section examine background radiation activities terms source hosts 
associate various activities coming source ip construct activity vector source ip examine dimensions ports destination networks time 
caveat identifying hosts ip addresses due dhcp hosts assigned different addresses time 
study concluded ip addresses accurate measure spread worm timescales longer hours 
better notion identify hosts ip addresses identify hosts keeping caveat mind 
ports associating activities ports gives significantly better picture source goals 
especially helps analyzing puzzling activities puts behavior individual ports context collective activity 
example simply looking rpc exploit may readily reveal worm sends see follow port tftp exe know earlier exploit comes blaster 
table provides summary top multi port scanning episodes seen networks 
common sources scan 
viruses exploit net bios smb cifs exhibit behavior propagation ports interchangeably 
common source behavior exploits microsoft dce rpc vulnerability port connecting pipe port port episode 
variants 
port connections empty rest small portion look buffer overrun exploits 
find agobot variants occasionally target services 
connect samr pipe cifs obtain registry information sequence described drop file exe startup folders 
common profiles exclusively agobot variants ii iii 
number sources hour mar mar mar mar mar date month day agobot sources uw number sources hour mar mar mar mar mar date month day agobot sources uw ii time series activity agobot ports uw networks adjacent class networks name ports description lbl uw uw ii class num sources rank num sources rank num sources rank num sources rank nb xi exe exe antivirus exe jw nb ep ep exe agobot nb ep ep ep agobot agobot variant agobot agobot variant ii agobot agobot variant iii examine spatial variance multi port profiles comparing data collected network hour period 
order profiles ranks multi port profiles collected uw network showed greatest affinity agobot 
table reveals notable observations 
top exploits extensively observed networks rankings consistent class networks spatial invariant 
second lbl network smaller observes number sources uw networks top exploits 
probably due fact networks belong suggests multi port sources sweep address space 
third uw receives agobot scans networks don know 
explore agobot scans greater detail 
figures show volume unique sources hour agobot ports day period march adjacent uw networks 
graph uw shows visible spikes indicating agobot attack 
uw ii background radiation closely follow uw agobot spikes absent 
graphs provide temporal perspective growth agobot striking daily spike followed pattern presumably new machines cleaned course day 
see little agobot class network 
reflects agobot maturity go 
gone iterative enhancements essentially evolved table hours multi port source activity sites activity lbl uw class lbl uw lbl class loc samr exe witty table traffic sources seen networks intersections vs individual networks programmed avoid telescopes equipped list target networks scanning consciously focused human operator irc control channels 
sources seen networks consider sets source hosts seen multiple networks approximately time 
analyze source ips seen networks arbitrarily chosen day mar gmt characterizing terms source hosts 
send traffic different networks 
activity distribution look 
compare distribution individual networks 
shown table source ips seen lbl uw surprisingly large intersection set half source ips seen lbl seen uw 
contrast intersection lbl class smaller seeing mar mar apr day month loc witty blaster table traffic sources seen time intersections vs individual periods source ips class uw 
contrast may due sources avoiding class networks proximity lbl uw ip address space 
evaluation confirm source sends traffic different networks 
extract activity vector source ip lbl uw networks compare finding case peculiarity locator sources common find nearly locator sources network sources 
turns due interaction source destination filtering scanning mechanism locator sources 
sources choose apparently randomly send locator destination 
activity profile source tell see 
shown table sources exhibiting dominant activity profile locator seen multiple locations network 
hand samr exe witty interesting case 
samr exe sources see intersection lbl uw find lbl 
vs inconsistency caused number source hosts completing exploit contacting lbl identified doing uw 
addition samr exe population seen uw merely see surprisingly large overlap lbl uw 
hand lbl class samr exe sources common seen class suggesting samr exe sources scan local bias 
sources seen time characterize sources seen network time analyze activity seen lbl days march march april 
gives comparisons adjacent days month apart respectively 
table characterizes variation 
see intersection source hosts case day apart smaller intersection networks 
partly uw network larger lbl looking set sources seen lbl network size march find hosts common 
confirms tend see larger intersection source ips networks time 
effect controlled dhcp artifacts host assigned different addresses different days 
note month time greatly reduce intersection size suggesting host dhcp artifact tends stay intersection 
initial steep decaying source ip sets suggest easier track malicious host space time 
see icmp unreachable backscatter class network constitute significant number source ips exclude comparison avoid skewing activity distribution 
number source hosts seen time varies activity 
example witty persist month rare instance worm deliberately damages host blaster grip hosts quite locator sources fall 

summary previous studies internet traffic identified number established properties diurnal cycles volume variability mix sites time bursty arrivals ubiquity heavy tailed distributions 
past years important new dimension internet traffic emerged done systematic observation characterization 
gross features new breed traffic complex structure highly automated frequently malicious potentially adversarial mutates rapid pace 
characteristics motivates need deeper understanding unwanted traffic 
initial study broad characteristics internet background radiation 
evaluation traffic measurements large unused subnets ipv address space 
developed filtering techniques active responders monitoring analyzing characteristics completely unsolicited traffic passive analysis details traffic elicited active responses activities analysis 
passive analysis demonstrates prevalence variability background radiation 
evaluation destination ports reveals vast majority traffic targets services vulnerabilities 
analysis backscatter traffic shows dominance tcp syn ack rst packets find great deal consistency monitored subnets 
activities analysis focused popular services targeted background radiation finding rich 
activities monitored services include new worms released study old worms code red nimda frequent presence scans similar worms self propagation noticeable number connections simply empty opportunity send data 
passive analysis find significant diversity subnets monitored time 
examined background radiation perspective source host behavior 
considering source activities ports reveals consistent behavior measurement sites prevalent multi port scan type scans ports 
furthermore appreciable intersection sources measurement sites 
explained random scanning behavior worms 
smaller set sources common measurement sites considered time 
striking result analysis extreme dynamism aspects background radiation 
benign traffic shows major shifts constituency new applications popular happens fairly lengthy time scales mix background radiation changes nearly daily basis 
dynamism results connection level behavior packet payloads activity sessions seen different regions address space 
efforts implications research operational communities 
ubiquity background radiation presents significant difficulties monitor internet traffic clog stateful analyzers uninteresting activity due variety significantly complicate detection new types activity example new worm port existing worms 
clear highly diverse dynamic activity needed assess evolution background radiation time develop detailed characterizations 
believe framework prefiltering traffic lightweight responders engage sources detail categorize analyzing resulting traffic axes explored important step comprehensively studying new phenomenon 
acknowledgments system network security group network operations staff lawrence berkeley national laboratory hosting lbl monitoring setup 
grateful dave plonka jeff geoff horne bill jensen continuing support project 
niels help setting honeyd monitor lbl anonymous reviewers constructive critiques 
supported aro daad nsf ccr nsf itr ani nsf ani 

agobot ib 
www com analyses html 

creating arbitrary shellcode unicode expanded strings january 
www com papers pdf 
arlitt williamson 
web server workload characterization search invariants 
proceedings sigmetrics philadelphia may 
baldwin 
trace 
www com kb security articles htm 
beagle symantec com data beagle mm html 

snort network intrusion detection system 
www snort org april 
common internet file system 
www org tech activities cifs cifs tr final pdf 
dacier pouget debar 
attack processes internet 
proceedings nato symposium 
danzig jamin ceres mitzel estrin 
empirical workload model driving wide area tcp ip network simulations 
internetworking research experience 
dce remote procedure call 
www org toc htm 
design notes 
www net papers pdf 
greene 
security risk assessment june 
project 
project org 
jung paxson berger balakrishnan 
fast sequential hypothesis testing 
proceedings ieee symposium security privacy oakland ca may 
kim karp 
automated distributed worm signature detection 
usenix security symposium san diego california august 
kohler morris chen jannotti kaashoek 
click modular router 
acm transactions computer systems august 
crowcroft 
creating intrusion detection signatures honeypots 
workshop hot topics networks hotnets ii cambridge massachusetts november 
moore 
network telescopes observing small distant security events 
invited presentation th usenix security symposium 
moore paxson savage shannon staniford weaver 
inside slammer worm 
proceedings ieee security privacy june 
moore paxson savage shannon staniford weaver 
spread sapphire slammer worm 
www caida org outreach papers sapphire sapphire html 
moore shannon brown 
code red case study spread victims internet worm 
proceedings acm sigcomm internet measurement workshop november 
moore shannon voelker savage 
internet quarantine requirements containing self propagating code 
proceedings ieee infocom april 
moore voelker savage 
inferring internet denial service activity 
proceedings usenix security symposium washington august 
mm 
symantec com data mm html 
paxson 
empirically derived analytic models wide area tcp connections 
ieee acm transactions networking 
paxson :10.1.1.116.8880
bro system detecting network intruders real time 
computer networks december 

honeyd virtual honeypot 
www honeyd org 
www com products 

snort lightweight intrusion detection networks 
proceedings usenix lisa 
worm 
symantec com data worm html 
security focus 
microsoft iis translate source disclosure vulnerability 
www securityfocus com bid discussion april 
singh estan varghese savage 
system real time detection unknown worms 
technical report cs university california san diego august 
staniford paxson weaver 
wn internet spare time 
proceedings th usenix security symposium 
thompson miller wilder 
wide area internet traffic patterns characteristics 
ieee network november 
richer 
get money easily 
www lists msg html 
mini remote control server buffer overflow 
www securityfocus com archive 
microsoft windows dcom rpc interface buffer overrun vulnerability ms 
www securityfocus com bid 
microsoft windows locator service buffer overflow vulnerability ms 
www securityfocus com bid 
microsoft windows webdav buffer overflow vulnerability ms 
www securityfocus com bid 
windows messenger popup spam 
www com popup spam html 

www com analyses html 
barford plonka 
design internet sinks network abuse monitoring 
proceedings advances intrusion detection 
barford 
internet intrusions global characteristics prevalence 
proceedings acm sigmetrics june 
