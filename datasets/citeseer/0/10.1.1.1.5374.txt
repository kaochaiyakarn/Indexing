short signatures random oracles dan boneh cs stanford edu xavier boyen xb boyen org extended appears cachin camenisch editors advances cryptology eurocrypt volume lecture notes computer science pages berlin springerverlag 
version available cryptology archive eprint iacr org 
describe short signature scheme existentially unforgeable chosen message attack random oracles 
security scheme depends new complexity assumption call strong di hellman assumption 
assumption similar properties strong rsa assumption name 
strong rsa previously construct signature schemes random oracles 
signatures generated scheme shorter simpler signatures schemes strong rsa 
furthermore scheme provides limited form message recovery 
boneh lynn shacham bls bls proposed short digital signature scheme signatures half size dsa signatures level security 
security computational di hellman cdh assumption certain elliptic curves 
scheme shown existentially unforgeable chosen message attack random oracle model br :10.1.1.41.4144
describe signature scheme signatures short bls signatures security require random oracles 
prove security scheme complexity assumption call strong di hellman assumption sdh short 
roughly speaking sdh assumption group prime order states problem intractable 
input output pair precise definitions section 
assumption construct signature scheme existentially unforgeable chosen message attack random oracles 
currently practical signature schemes secure random oracles ghr cs strong rsa assumption rsa modulus di cult construct non trivial pair 
roughly speaking strong rsa useful constructing secure signature schemes property strong rsa problem instance possible construct new instance known solutions construction solution possible solve original problem instance 
property provides way prove security chosen message attack 
section show sdh problem similar property 
sdh may viewed discrete logarithm analogue strong rsa assumption 
believe properties sdh useful tool constructing cryptographic systems expect see systems 
gain confidence sdh assumption provide section lower bound computational complexity solving sdh problem generic group model 
shows supported nsf packard foundation 
currently voltage security palo alto 
generic attack sdh possible 
sakai previously weaker variant sdh assumption construct traitor tracing scheme 
ideas nice 
application tracing traitors appears insecure 
secure signature scheme section prove security existential forgery chosen message attack 
resulting signatures short dsa signatures provably secure absence random oracles 
signatures support limited message recovery possible reduce total length message signature pair 
section show random oracles sdh assumption gives shorter signatures 
related system random oracles described zhang 
refer bls applications short signatures 
mention short digital signatures needed environments stringent bandwidth constraints bar coded digital signatures stamps ns pv 
note pcg cdf construct short signatures security depends hidden field equation hfe problem 
preliminaries presenting results briefly review notions security signature schemes review definition groups equipped bilinear map precisely state sdh assumption 
secure signature schemes signature scheme algorithms keygen sign verify generating keys signing verifying signatures respectively 
strong existential unforgeability standard notion security signature scheme called existential unforgeability chosen message attack gmr 
consider slightly stronger notion security called strong existential unforgeability adr defined game challenger adversary setup challenger runs algorithm keygen obtain public key pk private key sk 
adversary pk 
queries proceeding adaptively requests signatures messages choice 
qs pk 
challenger responds query signature sign sk 
output eventually outputs pair wins game 
qs qs verify pk valid 
define adv sig probability wins game taken coin tosses challenger 
definition 
forger breaks signature scheme runs time signature queries adv sig 
signature scheme existentially unforgeable adaptive chosen message attack forger breaks 
proving security random oracle model add fourth parameter denoting upper bound number queries adversary random oracle 
note definition captures stronger version existential unforgeability standard require adversary generate new signature previously signed message 
property required applications adr sah chk 
signature schemes satisfy stronger security notion 
weak chosen message attacks weaker notion security call existential unforgeability weak chosen message attack 
require adversary submit signature queries seeing public key 
notion defined game challenger adversary query sends challenger list messages 
qs response challenger runs algorithm keygen generate public key pk private key sk 
challenger generates signatures sign sk 
challenger gives public key pk signatures 
qs output algorithm outputs pair wins game 
qs verify pk valid 
define sig probability wins game taken coin tosses challenger 
definition 
forger weakly breaks signature scheme runs time signature queries sig 
signature scheme existentially unforgeable weak chosen message attack forger weakly breaks 
bilinear groups signature verification scheme requires bilinear map 
briefly review necessary facts bilinear maps bilinear map groups 
follow notation bls 
multiplicative cyclic groups prime order 
generator generator 
isomorphism 
bilinear map simplicity set bls allow general case take advantage certain families elliptic curves obtain short signatures 
specifically elements short representation elements may 
proofs security require ciently computable isomorphism take identity map 
elliptic curves trace map 
groups additional group 
bilinear map map properties 
bilinear ab 
non degenerate 
say bilinear groups exists group isomorphism bilinear map group action computed ciently 
joux nguyen jn showed ciently computable bilinear map provides algorithm solving decision di hellman problem ddh 
results stated generic algorithm ddh 
sake concreteness describe results directly referring bilinear map 
strong di hellman assumption describing new signature schemes state precisely hardness assumption 
cyclic groups prime order possibly generator generator 
strong di hellman problem 
sdh problem defined follows tuple 
input output pair algorithm advantage solving sdh pr 
probability random choice generator random choice random bits consumed definition 
say sdh assumption holds time algorithm advantage solving sdh problem 
occasionally drop refer sdh assumption sdh assumption 
see section sdh assumption similar properties strong rsa problem view sdh discrete logarithm analogue strong rsa assumption 
provide confidence sdh assumption prove section lower bound complexity solving sdh problem generic group 
furthermore note strong di hellman problem simple random self reduction 
weaker version sdh assumption previously sakai construct traitor tracing system see analysis 
notation version assumption requires algorithm output input value assumption allow choose pre specified sdh problem equivalent problem 
output note allowed choose equivalence known 
short signatures random oracles construct fully secure short signature scheme standard model sdh assumption 
consider main result 
bilinear groups prime moment assume messages signed elements mention section domain extended collision resistant hash function key generation pick random generator set 
pick random compute compute public key 
secret key 
signing secret key message pick random compute yr yr computed modulo event yr try di erent random signature 
verification public key message signature verify equality holds result valid result invalid 
public key integrity 
observe components public key computed parts public key redundant 
included public key ciency reasons order dispense verifier performing computations 
certifying authority ca verify relations hold issuing certificate 
alternatively verifier perform checks verifying certificate public key 
time check explicitly include verification algorithm 
signature length 
signature contains elements length approximately log bits total signature length approximately log 
elliptic curves described bls obtain signature length approximately dsa signature security provably existentially unforgeable chosen message attack random oracle model 
performance 
key signature generation times comparable bls signatures 
verification time faster verification requires pairing multi exponentiation 
value needs computed verified certification time 
comparison bls signature verification requires pairing computations 
exponentiation tends significantly faster pairing signature verification faster bls system 
security 
theorem shows scheme existentially unforgeable strong sense chosen message attacks provided sdh assumption holds 
theorem 
suppose sdh assumption holds 
signature scheme secure existential forgery chosen message attack provided maximum time exponentiation proof 
prove theorem lemmas 
lemma describe simplified signature scheme prove existential unforgeability weak chosen message attacks sdh assumption 
lemma show security weak scheme implies security full scheme 
results lemmas theorem follows easily 
proof steps construction prove lemma 
weakly secure short signature scheme show sdh assumption construct existentially unforgeable scheme weak chosen message attack 
construction demonstrates main properties sdh assumption 
section show security weak scheme implies security full scheme 
weakly secure short signature scheme follows 
bilinear groups prime moment assume messages signed elements key generation pick random generator set 
pick random compute public key 
secret key signing secret key message output signature computed modulo convention context define event 
verification public key message signature verify equality holds output valid 
output valid 
output invalid 
show basic signature scheme existentially unforgeable weak chosen message attack 
proof lemma uses similar method proof theorem 
lemma 
suppose sdh assumption holds 
basic signature scheme secure existential forgery weak chosen message attack provided maximum time exponentiation proof 
assume forger breaks signature scheme 
construct algorithm interacting solves sdh problem time advantage 
algorithm random instance 
sdh problem 
unknown convenience set algorithm goal produce pair algorithm interacting forger follows query algorithm outputs list distinct messages 
qs reveal queries front may assume outputs exactly messages signed actual number virtually reduce value 
response respond public key signatures messages polynomial 
expand write 
coe cients polynomial 
compute xf 
public key correct distribution 
note may assume means just obtained secret key 
algorithm generate signature polynomial 
expand write compute observe valid signature public key 
algorithm gives signatures 
output algorithm returns forgery valid signature 
valid signature message 
words 
long division write polynomial polynomial rational fraction exponent right side equation written note 
divide 
algorithm computes returns solution sdh instance 
claimed bounds obvious construction reduction 
weak security full security reduction security basic scheme lemma security full signature scheme described onset section 
complete proof theorem 
lemma 
suppose basic signature scheme lemma weakly secure 
full signature scheme secure existential forgery chosen message attack provided maximum time exponentiation give intuition proof 
suppose forger full scheme chosen message attack 
build forger weak scheme weak chosen message attack 
forger starts requesting signatures random messages 
response public key signatures 
qs weak scheme 
principle create public key full scheme picking random giving public key 
issues chosen message query message forger choose yr maps valid signature full scheme proper response chosen message query 
eventually outputs forgery 
yr valid message signature pair weak scheme 
principle output pair existential forgery weak scheme 
problem yr 
qs case yr invalid existential forgery 
dealing case complicates proof forces consider types adversaries 
full proof 
proof lemma 
assume forger breaks full signature scheme 
construct algorithm weakly breaks basic signature scheme lemma 
describing algorithm distinguish types emulate 
public key forger suppose asks signatures messages 
qs signatures 
messages 
yr forgery produced distinguish types type forger forger signature query message ii outputs forgery yr 
qs 
type forger forger signature query message ii outputs forgery yr 

show forger forge signatures weak signature scheme lemma 
reduction works di erently forger type 
initially choose random bit mode indicates guess type forger emulate 
simulation proceeds di erently mode 
ready describe algorithm produces forgery signature scheme lemma follows setup algorithm picks random bit mode 
sends challenger list random messages 
qs requests signature 
challenger responds valid public key signatures 
qs messages 
know 

mode 
picks random gives public key pk 

mode 
picks random gives public key pk 
case note provides adversary valid public key 
signature queries forger issue signature queries adaptive fashion 
order respond maintains list list tuples query counter initially set 
receiving signature query algorithm increments 

mode 
check just obtained private key public key allows forge signature message choice 
point successfully terminates simulation 
set event algorithm reports failure aborts 
algorithm gives signature 
valid signature pk uniform yr 
mode 
set algorithm reports failure aborts 
give signature 
valid signature pk uniform case abort responds valid signature case algorithm adds tuple list 
output eventually returns forgery valid forgery distinct previously signature message note adding dummy queries necessary may assume exactly signature queries 
algorithm searches list tuple rightmost component equal possibilities type forgery tuple form appears list 
type forgery list contains tuple type produced type forgery signature query message cases set type 
type mode reports failure aborts 
outputs existential forgery basic signature scheme follows 
mode type 
signature query message done 
assume produced type forgery 
forgery valid yr yr follows valid message signature pair basic signature scheme 
furthermore valid existential forgery basic scheme type forgery algorithm request signature message requested signatures messages yr tuple list equal list 
algorithm outputs required existential forgery 
mode type 
tuple list know write know forgery identical previously signature query message follows just recovered private key public key 
algorithm forge signature message choice 
completes description algorithm standard argument shows abort viewpoint simulation provided indistinguishable real attack scenario 
particular view independent value mode ii public keys uniformly distributed iii signatures correct 
produces valid forgery time probability 
remains bound probability abort 
argue follows conditioned event mode type algorithm aborts issued signature query happens probability conditioned event mode type algorithm abort 
mode independent type pr mode type 
follows produces valid forgery probability required 
full scheme single message valid signatures worth repeating full signature scheme existentially unforgeable strong sense adversary forgery messages signed 
relation chameleon hash signatures instructive consider relation full signature scheme signature construction strong rsa assumption due gennaro halevi rabin ghr ghr 
ghr signatures pairs chameleon hash kr random range arithmetic done modulo rsa modulus looking closely see parallels proof security lemma proof security ghr 
interesting points yr component signature scheme provides functionality chameleon hash choose yr maps predefined value choice 
possible handle chosen message attack 
embedding hash yr directly signature scheme results cient construction explicit chameleon hash requires additional exponentiations 
known possible strong rsa signatures 
di culty ghr signatures solution strong rsa problem deduce solution 

ghr signature message possible deduce ghr signature message see ghr cn details 
gennaro solve problem ensuring maps prime di cult compute hash di erent solution cs 
issue come signature scheme 
obtain short signatures strong rsa sdh assumption applies groups short representation 
see strong di hellman leads signatures simpler cient shorter strong rsa counterparts 
limited message recovery describe useful property signature schemes total size signed messages reduced cost increasing verification time 
technique applies equally fully secure signature scheme weakly secure 
standard technique shortening total length message signature pairs encode part message signature 
signatures trapdoor permutations support cient message recovery 
spectrum trivial signature compression mechanism applies signature scheme follows transmit message signature pair sender transmits bits truncated 
words bits shorter verify verifier tries possible values truncated bits accepts signature verifies 
reconstruct original signed message verifier appends bits signature verified 
trivial method shows pair shortened bits cost increasing verification time factor signature scheme obtain better tradeo pair shortened bits cost increasing verification time factor 
refer property limited message recovery 
limited message recovery 
limited message recovery applies full signature scheme weakly secure signature scheme lemma 
simplicity show limited message recovery applies full signature scheme 
assume messages bit strings represented integers public key full scheme application prefer abbreviate public key verifier derive suppose signed message truncation bits integer goal verify signed message reconstruct missing bits time rewrite verification equation substituting obtain say valid exists integer satisfying equation 
finding takes time approximately pollard lambda method computing discrete logarithms 
verify signature recover missing message bits time required 
ultra short weakly secure signatures 
obvious applications limited message recovery situations bandwidth extremely limited signature authenticator typed human 
messages applications typically chosen signed central authority adaptive chosen message attacks typically concern 
safe cases weakly secure signature scheme lemma apply limited message recovery shrink compact signatures produces 
specifically bit truncation obtain total signature overhead bits common security parameters cost requiring arithmetic operations signature verification 
emphasize security system rely random oracles 
arbitrary message signing extend signature schemes sign arbitrary messages opposed merely messages hashing message collision resistant hash function prior signing verifying 
standard argument shows scheme secure existential forgery chosen message attack strong sense scheme hash 
result signature scheme arbitrary messages note need full domain hash collision resistant hash function 
su cient security proof 
transformation applies fully weakly secure signature schemes described 
shorter signatures random oracles completeness show weakly secure signature scheme lemma gives rise cient fully secure short signatures random oracle model 
show general transformation existentially unforgeable signature scheme weak chosen message attack existentially unforgeable signature scheme standard chosen message attack strong sense random oracle model 
gives cient short signature scheme sdh random oracle model 
analyze construction method katz wang kw gives tight reduction security underlying signature 
note closely related system weaker security analysis independently discovered zhang 
keygen sign verify existentially unforgeable signature weak chosen message attack 
assume scheme signs messages finite set private keys set 
need hash functions viewed random oracles security analysis 
hash signature scheme follows key generation keygen 
public key pk secret key sk 
signing secret key sk message compute sk 
output signature sign 
note signatures bit longer underlying signature scheme 
verification public key pk message signature output valid verify pk valid 
theorem proves security scheme 
note security reduction theorem tight attacker hash signature scheme success probability converted attacker underlying signature success probability approximately 
proofs signature schemes random oracle model far tight 
theorem 
suppose keygen sign verify existentially unforgeable weak chosen message attack 
corresponding hash signature scheme secure existential forgery adaptive chosen message attack random oracle model satisfying proof 
assume forger breaks hash signature scheme random oracle model 
construct algorithm interacts breaks underlying signature scheme 
algorithm works follows setup algorithm picks random independent messages 
sends challenger 
challenger responds public key pk signatures 

algorithm gives pk algorithm hash queries time algorithm query hash functions query functions times 
maintain tables ensure repeated queries answered consistently assume loss generality queries input twice 
respond query algorithm checks sk attempting sign random message signature valid outputs message signature pair existential forgery terminates 
picks random bit tells respond query algorithm maintains list tuples called list counter initially set 
list initially empty 
responding query set things know signature know 
precisely respond query algorithm 
left hand side tuple list pick random bit set add list 

entry list corresponding output know valid signature 
pick random message output note value defined 
signature queries issue signature queries 
respond signature query algorithm runs algorithm responding hash query total number queries 
entry list corresponding algorithm responds signature valid signature valid signature note defines sk know sk 
output eventually returns forgery valid signature hash signature scheme previously obtain response signature query follows valid signature underlying signature scheme message 

reports failure aborts 
outputs existential forgery underlying signature scheme algorithm simulates random oracles signature oracle perfectly produces valid forgery hash signature scheme probability 
remains bound probability 

entry list corresponding consider case issued signature query case bit independent view 
pr 
note construction case fail 
construction chosen random case fail probability 
case issue signature query necessarily forgery replay response 
failure rate case 
cases follows succeeds probability pr success required 
note proof replaced pseudo random function prf need modeled random oracle 
modeling random oracles appears unavoidable 
applying theorem weakly secure scheme lemma gives cient short signature existentially unforgeable standard chosen message attack random oracle model assuming qh sdh 
public key hash function signature message defined value concatenated bit 
verify signature check 
see signature length essentially bls signatures verification time approximately half bls 
verification exponentiation base enables speed pre computing certain powers full domain hash 
method converting signature scheme secure weak chosen message attack scheme secure standard chosen message attack simply apply sign verify words hash full domain hash prior signing verifying 
security random oracle model shown similar argument analysis cor full domain hash br 
resulting reduction tight attacker hash sign signature success probability yields attacker underlying signature success probability approximately note proofs set random oracle model clear ciency security reduction relevant actual security real world 
full domain hash signature scheme slightly simpler system theorem preferable system theorem 
apply full domain hash weakly secure scheme lemma obtain secure signature standard chosen message attack assuming sdh 
signature element signature verification twice fast bls signatures 
mentioned similar scheme independently proposed zhang 
note random oracle model security full domain hash scheme proven slightly weaker complexity assumption sdh value sdh assumption pre specified chosen adversary 
resulting security reduction far cient 
generic security sdh assumption provide confidence sdh assumption prove lower bound computational complexity sdh problem generic groups sense shoup sho 
generic group model elements appear encoded unique random strings property equality directly tested adversary 
oracles assumed perform operations group elements computing group action groups isomorphism bilinear pairing opaque encoding elements modeled injective function maps string representation similarly define attacker communicates oracles representations group elements 
theorem 
algorithm solves sdh problem generic group model making total queries oracles computing group action oracle computing isomorphism oracle computing bilinear pairing chosen random probability 
outputs bounded proof 
consider algorithm plays game maintains lists pairs 


step game 
polynomials degree polynomials degree 
strings lists initialized step posing 

corresponding set arbitrary distinct strings may assume oracle queries strings previously obtained form arbitrarily hard guess 
note determine index string resp 
breaking ties multiple matches arbitrarily 
starts game providing strings 
queries go follows 
group action multiply divide selection bit operands compute depending multiplication division requested 
set set string distinct 
add give increment 
group action queries treated similarly 
isomorphism string 
set set string 

add give increment 
pairing operands compute product 
set set string 

add give increment 
terminates returns pair corresponding polynomial list order exhibit correctness answer simulation framework computes polynomial 
notice answer correct necessarily equality corresponds ddh relation denotes element represented observe constant monomial degree degree relation satisfied identically degree 
know degree deduce exists value equation hold 
non trivial polynomial equation degree admits roots point chooses random simulation provided perfect instantiation creates equality relation simulated group elements revealed category relation belongs just shown 
success probability bounded probability holds 




fixed polynomial degree vanishes random probability similarly fixed second case occurs probability third probability degree fourth probability summing valid pairs case find wins game probability required bound follows 
corollary 
adversary solves sdh problem constant probability generic groups order requires generic group operations 
number short signature schemes sdh assumption 
main result short signature fully secure random oracle model 
signature short dsa signatures provably secure standard model 
showed scheme supports limited message recovery greater compactness 
constructions possible properties sdh assumption 
assumption viewed discrete logarithm analogue strong rsa assumption 
believe sdh assumption useful tool constructing cryptographic systems expect see schemes 
example mention new group signature scheme boneh bbs 
acknowledgments mihir bellare nigel smart helpful comments 
adr hea dodis tal rabin 
security joint signature encryption 
proceedings eurocrypt volume lncs 
springer verlag 
bbs dan boneh xavier boyen hovav shacham 
short group signatures 
proceedings crypto 
bls dan boneh ben lynn hovav shacham 
short signatures weil pairing 
proceedings asiacrypt volume lncs pages 
springer verlag 
br mihir bellare phil rogaway :10.1.1.41.4144
random oracle practical paradigm designing cient protocols 
proceedings acm conference computer communications security pages 
br mihir bellare phil rogaway 
exact security digital signatures sign rsa rabin 
maurer editor proceedings eurocrypt volume lncs pages 
springer verlag 
cdf nicolas courtois magnus patrick 
security hfe quartz 
proceedings pkc volume lncs pages 
springerverlag 
chk ran canetti shai halevi jonathan katz 
chosen ciphertext security encryption 
advances cryptology eurocrypt volume lncs pages 
springer verlag 
cn jean david naccache 
security analysis gennaro signature scheme 
proceedings eurocrypt pages 
cor jean 
exact security full domain hash 
proceedings crypto volume lncs pages 
springer verlag 
cs ronald cramer victor shoup 
signature schemes strong rsa assumption 
acm 
extended proc 
th acm ccs 
ghr rosario gennaro shai halevi tal rabin 
secure hash sign signatures random oracle 
proceedings eurocrypt lncs pages 
springerverlag 
gmr shafi goldwasser silvio micali ron rivest 
digital signature scheme secure adaptive chosen message attacks 
siam computing 
jn antoine joux kim nguyen 
separating decision di hellman di hellman cryptographic groups 
cryptology eprint archive report 
eprint iacr org 
kr hugo krawczyk tal rabin 
chameleon signatures 
proceedings ndss 
internet society 
eprint iacr org 
kw jonathan katz nan wang 
ciency improvements signature schemes tight security reductions 
proceedings acm ccs 
sakai 
new traitor tracing 
ieice trans 
fundamentals 
alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press 
ns david naccache jacques stern 
signing 
proceedings financial cryptography 
pcg jacques nicolas courtois louis 
quartz bit long digital signatures 
proceedings rsa volume lncs pages 
springerverlag 
pv leon scott vanstone 
postal revenue collection digital age 
proceedings financial cryptography 
sah amit sahai 
non malleable non interactive zero knowledge adaptive security 
ieee symp 
foundations computer science 
sho victor shoup 
lower bounds discrete logarithms related problems 
proceedings eurocrypt 
springer verlag 
vu dong zhang 
new traitor tracing schemes bilinear map 
proceedings drm workshop 
zhang willy 
cient signature scheme bilinear pairings applications 
proceedings pkc 

