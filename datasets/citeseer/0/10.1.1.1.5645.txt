search engine technology improved years types searches return unsatisfactory results 
situation greatly improved web pages semantic markup language describe content 
developed shoe language purpose describe scenario language search engines 
major challenge system designing query tool exploit power knowledge base simple casual user 
shoe search tool allows user specify context query uses context help user build query example 

world wide web information resource virtually unlimited potential 
potential relatively locating relevant information time consuming fruitless 
search engines constrained limitations string matching link analysis directories yahoo constrained staff hours devote cataloging web 
machines understand content web pages searches high precision recall possible 
course accurate natural language processing possible general domains 
focus extensible markup language xml describing content presentation opens new possibilities 
xml syntax incompatible tag sets evolve describe similar concepts 
xml promotes interoperability organizations agree standards ahead time divergent vocabularies little general searches web 
semantic markup language needed purposes 
defined simple html ontology extensions shoe language application sgml xml allows users define extensible vocabularies associate machine understandable meaning 
vocabularies ontologies consist category relation definitions augmented additional axioms desired 
shoe promotes interoperability having ontologies publicly available web allowing domain searching web shoe jeff heflin james hendler department computer science university maryland college park md heflin hendler cs umd edu specific ontologies created process ontology extension 
shoe addresses evolution web explicitly including versioning features language heflin hendler 
describe shoe language detail point interested reader shoe specification luke heflin 
specifically address shoe perform effective web searches 
describing shoe markup added pages information collected stored 
shoe search general purpose query tool allows users query shoe information minimal understanding structured 

overview shoe process section discuss key steps shoe language 
shoe essentially common language exchange web data number applications architectures possible 
focus architecture currently projects architecture shown 
step shoe add markup web pages process call annotation 
order annotate web page user select appropriate ontology ontology vocabulary describe concepts page 
shoe concept called instance assigned key typically url web page best represents concept 
user express concept member particular category certain relationships 
relationships may involve literal values strings numbers may case relations name height instances case key related instance known 
guarantees accuracy information web category relation declarations referred claims 
html shoe markup added page simple text editor 
html processors shoe processors forgiving errors result large portions annotations ignored 
ease burden author designed knowledge annotator tool easy add shoe knowledge web pages making selections filling forms 
tool interface displays instances ontologies claims 
users add edit remove objects 
creating new object users prompted necessary information 
case claims user choose source ontology list choose categories relations corresponding list 
available relations automatically filter instances entered fill argument positions 
variety methods view knowledge document 
include view source html logical notation view view organizes claims subject describes simple english 
addition prompting user inputs tool performs error checking ensure correctness converts inputs legal shoe syntax 
reasons rudimentary understanding shoe necessary markup web pages 
shoe pages annotated placed web queried indexed 
possible create agents query pages real time believe easier parallel way modern search engines collect knowledge pages store repository 
purpose developed expos web crawler searches web pages shoe mark knowledge 
web crawler essentially performs graph traversal nodes web pages arcs hypertext links 
expos discovers new url assigns cost uses cost determine placed queue urls 
system architecture visited 
way cost function determines order traversal 
assume shoe pages tend localized interconnected 
reason currently cost function increases distance start node paths non shoe pages expensive shoe pages paths stay directory server cheaper 
expos loads web page parses web page ontology expos unfamiliar loads ontology 
order update list pages visit identifies hypertext links category instances relation arguments page evaluates new url 
agent stores shoe category relation claims new ontology information knowledge base kb 
currently store shoe knowledge parka kb taylor hendler tools designed generic kb api alternate knowledge representation kr system minimum effort 
considering size web kr system scalable 
parka provides tradeoff query efficiency common types inferences shoe 
parka shown answer queries kbs millions assertions seconds parallel machines provides better performance 
important point shoe ontologies term mean different things 
necessary ontologies designed way prevent terms multiple ontology authors 
ontology terms stored knowledge base renamed appending ontology specific string 
number query tools access shoe knowledge loaded kb 
average web user want take time learn complex kr languages provide query tools graphical nature 
query tool parka interface queries essentially allowed users draw graph nodes represented constant variable instances arcs represented relations 
answer query system perform subgraph matching user graph 
complicated advanced users drawing queries time consuming 
order support application shoe food safety heflin hendler luke developed tse path analyzer tool allows user trace possible pathways food product contamination 
user needs select values hierarchical lists specify query 
results form graph clicking node graph boolean searches offered advanced features contemporary search engines confusing users 

shoe search open web page provides details node 
note path analyzer relies solely shoe information gathered web pages possible spatially distant communities different levels computational resources contribute information 
problem query tools described general purpose tool complicated average user tool easy specific particular domain 
led try find balance general purpose query tool minimal learning curve 

shoe search idea shoe search tool queries issued context tool prompt user context specific information accurately locate information desired user 
shoe search written java launched web page applet 
screen shot shoe search shown 
user selects context choosing ontology drop list 
list available ontologies known underlying kb 
identifiers version numbers ontology displayed users may choose issue queries earlier versions ontologies 
user chooses ontology system creates list categories defined ontology 
list organized specializations categories indented beneath 
taxonomy possible user quickly determine kinds objects described ontology choose class sufficient granularity needs 
main purposes choosing ontology reduce number choices user subsequently list categories generally include categories defined ontologies extended selected ontology ancestors categories defined locally 
assumed categories interest user select appropriate ontology 
ontologies may rename element extended ontology effectively import 
categories included list displayed local name 
user chooses category presses select button system responds set properties applicable category frame slot system essentially slots selected frame 
applicable properties inheritable properties apply ancestor selected category included set 
list available categories important provide filtering user relations defined aliased selected ontology appear ontologies define relations relevant 
technically shoe define properties defines relations number typed arguments 
property class considered relation argument member class 
determination properties dependent somewhat arbitrary ordering arguments chosen ontology designer 
relation person organization property class person inverse relation organization person property organization 
order prevent shoe search queries restricted kinds representational decisions relation class subclass second argument considered inverse property included set available user 
properties clearly labeled display 
property list allows user issue query example 
type values properties system return instances match specified values 
property values literals strings numbers may instances classes 
case user know keys instances keys typically urls purpose search system locate urls 
arbitrary strings allowed fields query attempt match strings names instances 
increase chance match partial string matching 
users presses query button system constructs conjunctive query issues kb 
atom query specifies instance selected category person 
remaining atoms depend type argument value represents 
case numbers atom simply looking instance specified value relation 
case strings atoms added find values relation perform partial string match string specified user 
type argument category clauses added get values relation get corresponding names instance keys third match name strings string specified user 
note user specified values properties resulting query contain conjuncts 
advantages shoe search useful complex queries constructed automatically 
example query constructed user corresponds parka query form article name simple html ontology extensions name heflin users difficulty constructing queries hand 
kb returns results query displayed tabular format 
kb return duplicate results due redundancies different web pages page visited times different urls 
way duplicate results simply clutter display removed system displays 
generally names keys displayed related instances 
way user distinguish instances happen identical names 
user clicks instance key instance matches query matches properties corresponding web page opened new browser window 
allows user browse web control queries 
users may trouble deciding values property may getting results incorrect values entered 
remedy problem added find button property finds valid values parka predicate return instances category transitivity category membership opposed instanceof predicate returns instances explicitly asserted member category 
property 
button pressed system essentially issue query find instances value selected property return values tabular display 
user may select values press add query button insert query field property 
order system keeps track columns query results correspond properties 
user may wish view values certain property restricting query 
show checkbox allows user specify additional property displayed results 
note properties user specified value box checked default 
current system supports conjunctive queries option unintuitive results 
example user chooses show property instances value answers returned possible answers rest query 
show checkbox add query button help user gradually filter results find desired instances 
user starts checking show boxes issuing query 
results selected added query 
query reissued fewer results returned 
repeating process user continue reduce results returned manageable set 
may case relevant web pages described shoe markup 
cases standard query method shoe search able return answer may return partial answers 
web search feature translate user query similar search engine query allow submit number popular search engines 
shoe search way advantages search engines directly 
prompting user values properties increases chance user provide distinguishing information desired results 
second automatically creating query take advantage helpful features overlooked users quoting phrases plus sign indicate mandatory term 
currently build query string consists quoted short name selected category property value specified user short phrase describing property followed user value quoted preceded plus sign 
example search engine query string generated article research simple html ontology extensions author heflin quality results queries vary depending type query search engine 
search engines advanced query capabilities queries expanded included synonyms terms disjunction positional information relate properties values 
problem shoe search queries annotations users specify relations instances explicitly declaring categories instances 
conjunct shoe search query restricts answers instances members particular class relations ignored 
want remove classification conjunct useful example user specifies query find journal articles author john smith want return instances conference papers john smith 
web page uses instance relation declare category system assumes user implicitly means required type asserts appropriate category declaration 
improves number relevant answers shoe search return may result false classifications user understand defined typing relation 

related numerous efforts create semantic languages web 
ontobroker project fensel uses language describe data embedded html relies centralized broker ontology definitions 
tool support ontobroker includes hyperbolic view exploring ontologies simple interface specifying queries frame logic advanced interface helps user build frame logic queries pull lists 
ontology markup language oml conceptual knowledge markup language kent semantic markup theories formal concept analysis information flow 
developed resource description framework rdf lassila swick uses xml specify semantic networks information web pages weak notion ontologies 
rdf schema proposal brickley guha improves situation somewhat sufficiently handle notions revising integrating ontologies 

described process shoe improve search web tools demonstrate capabilities 
important note system parallels way web works today standard language allows diverse tool set interact indirectly 
markup performed text editor knowledge annotator custom built annotation tools 
number web crawlers agents built extract shoe content web pages content stored queried different ways 
shoe enabled search engines differentiate coverage inferential capability speed user interfaces 
shoe search tool unique allows user specify context search provides user options relevant context 
essentially frame query example interface includes features allow user discover content knowledge base extend search knowledge base translating query format issued standard search engines 
user prompted enter values defining characteristics object question search engine queries created shoe search return relevant results 
biggest barrier shoe solution knowledge acquisition problem 
adding shoe annotations web pages moderately time consuming converting standard xml 
feel users convinced benefits semantic markup willing take time 
automatic semiautomatic solutions necessary achieve critical mass examining approaches extract shoe semi structured web pages translate documents common xml dtds shoe translate semantic web languages rdf shoe 
knowledge representation tools web geared average user time desire learn order logic 
suite shoe tools particularly shoe search step direction room improvement 
tools available line demos encourage interested reader visit website www cs umd edu projects plus shoe provide feedback 
believe languages tools developed shoe crucial locating relevant information expanding changing web 
acknowledgments supported army research laboratory contract number daal 
carolyn contributed development shoe search tool 
professor hendler currently working program manager defense advanced research projects agency darpa 
opinions expressed necessarily reflect opinions darpa department defense government agency 
brickley guha 
resource description framework rdf schema specification world wide web consortium 
www org tr pr rdf schema fensel decker erdmann studer 
ontobroker enable intelligent access www 
ai information integration technical report ws 
menlo park ca aaai press 
heflin hendler 
dynamic ontologies web 
proceedings american association artificial intelligence conference aaai 
menlo park calif aaai press 
heflin hendler luke 
applying ontology web case study 
mira sanchez andres eds international conference artificial natural neural networks 
proceedings volume ii 

berlin springer 
kent 
conceptual knowledge markup language central core 
proceedings twelfth workshop knowledge acquisition modeling management kaw 
banff alberta canada 
lassila swick 
resource description framework rdf model syntax 
world wide web consortium 
www org tr syntax luke heflin 

shoe proposed specification 
www cs umd edu projects plus shoe spec html taylor hendler 
efficient management large ontologies 
proceedings american association artificial intelligence conference aaai 
menlo park calif aaai press 
