proc 
graphics interface conference gi montr qc canada may image virtual camera motion strategies presents original solution camera control problem virtual environment 
objective general framework allows automatic control camera dynamic environment 
proposed method image control visual servoing approach 
consists positioning camera information perceived image 
intuitive approach animation 
able react automatically modifications environment considered constraints control 
approach adapted highly reactive contexts virtual reality video games 
numerous examples dealing classic problems animation considered framework 
key words automatic camera motion automatic cinematography visual servoing animation overview issues 
numerous issues related control camera virtual environment 
typically control camera handled lookat techniques associated definition trajectories 
camera usually position wrt 
environment react appropriate efficient way modifications environment 
regards issue full knowledge scene available computer animation context positioning task trivial problem see 
need precise control degrees freedom camera space 
second issue defined constraints camera trajectory complex 
order able consider unknown dynamic environments achieve real time camera motion control constraints properly modeled added positioning task 
related 
visual servoing proved robotics context efficient solution problems 
visual servoing image camera control consists specifying task mainly positioning target tracking tasks regulation image set visual features 
review visual servoing 
task specification carried space require relationship objects 
eric marchand nicolas irisa inria rennes campus de beaulieu rennes cedex france approach local consider planning issues 
control law computes motion leads camera undesired configurations occlusions obstacles visual servoing fails 
control laws account bad configurations considered 
framework allows consideration constraints example 
combines regulation vision task minimization cost functions reflecting constraints imposed trajectory 
viewpoints computation received attention computer graphics 
main difference wrt 
computer vision robotics problem longer ill posed 
case full knowledge scene available 
interactive context past current behavior objects fully known 
ware osborn consider various metaphors describe camera control including eye hand 
context goal usually determine position eye wrt 
order see object set objects locations screen 
user interfaces mouse joystick considered control virtual device 
obtaining smooth camera motions required skilled operator proved difficult task 
classical lookat parameterization simple way achieve focusing task point 
specifying complex visual task lookat framework quite hopeless 
attempts consider kind problem blinn proposed solutions appear dedicated specific problems hardly scaled complex tasks 
imagebased control described computer graphics context gleicher witkin called lens camera control 
proposed achieve simple tasks positioning camera respect objects defined static virtual points 
technique similar visual servoing framework considers local inversion nonlinear perspective viewing transformation 
constraint optimization compute camera velocity desired motion virtual point image 
formulation problem proposed 
case image jacobian links motion features camera motion proposed point features 
furthermore constraints camera trajectory considered proposed framework 
constraints received great attention robotics computer graphics communities 
resulting solutions similar 
constraint defined mathematically function camera parameters location orientation minimized deterministic gradient approaches stochastic simulated annealing optimization processes 
approaches feature numerous drawbacks 
usually time consuming search space dimension optimization considered iteration animation process new frame 
difficult consider techniques reactive applications video games 
stated visual servoing allows constraints camera trajectory 
constraints modeled cost function minimized 
resulting motion named secondary task projected null space main task effect main visual task 
framework camera trajectory ensures task constraints computed locally handled real time required considered applications 
system contributions 
aim define basic camera trajectories virtual movie directors automatic control camera reactive applications video games 
assume fully know model scene current instant 
context complete framework visual servoing allows definition positioning tasks wrt 
set virtual visual features located environment features points lines spheres cylinders 
specified task constrain camera method allows secondary tasks achieved constraint visual task achieved 
furthermore considered features necessarily motionless 
approach solutions various non trivial problems computer animation 
tasks concerned reactive applications target tracking obstacles occlusion avoidance deal cinema application panning camera traveling lighting conditions optimization 
remainder organized follows section recalls visual servoing framework task function approach 
section presents methods allowing navigation cluttered dynamic environments 
section handles constraints closely related cinema industry 
image camera control image visual servoing consists specifying task regulation image set visual features 
embedding visual servoing task function approach allows general results helpful analysis synthesis efficient closed loop control schemes 
review visual servoing 
camera positioning wrt 
visual targets denote set selected visual features visual servoing task measured image projection computer graphics context iteration control law 
ensure convergence desired value pd need know interaction matrix image jacobian links motion object image camera motion 
defined classic equation tc time variation motion image due camera motion tc 
parameters involved represent depth information considered objects camera frame 
vision task defined pd called combination matrix chosen cl full rank desired trajectory se ife constrains defined lp 
see section define constrained 
pseudo inverse matrix decreases exponentially behaves order decoupled system camera velocity input virtual camera tc proportional coefficient 
framework easily perform positioning tasks wrt 
object scene 
main advantage approach task specified image space control performed 
building new skills difficulties image visual servoing derive image jacobian corresponds selected control features 
systematic method proposed analytically derive interaction matrix set control features defined geometrical primitives 
kind visual information considered visual servoing task coordinates points line orientation surface generally inertial moments distance 
knowing interaction matrices construction elementary visual servoing tasks straightforward 
large library elementary skills proposed 
current version system allows define feature tasks point line sphere cylinder circle 
elementary positioning skills complex tasks considered stacking elementary jacobians 
example want build positioning task wrt 
segment defined points resulting interaction matrix defined lp defined pi depth see derivation xy xy positioning skills simply defined 
introducing constraints vision task constrain robot secondary task usually represents camera trajectory constraint performed 
defined cl obtain task function secondary task 
usually defined gradient cost function hs minimized hs 
cost function minimized constraint realized 
projection operators guarantee camera motion due secondary task compatible regulation pd full rank matrix ker choice matrix belongs ker lp means realization secondary task effect vision task 
note visual task constrains manipulator leads 
impossible case consider secondary task 
control tc tracking mobile target target motion generally induces tracking errors suppressed order achieve tracking task perfectly 
case motion target image rewritten ptc pt ptc pt respectively contribution camera velocity autonomous target motion motion target image 
new camera velocity suppresses tracking errors tc scalar 
tracking errors fully suppressed handled 
reactive viewpoint planning positioning tasks considered framework previous section quite simple 
consider environment target assumed 
method possible achieve far complex tasks dynamic cluttered environments 
difficult context propose purely reactive framework order avoid undesirable configurations animation context 
avoiding obstacles obstacle avoidance example easily proposed framework 
assume camera moving cluttered environment focusing visual target 
goal ensure task avoiding obstacles scene 
fact multiple solutions problem solution trajectory avoids obstacles trajectory planning process 
solution consider secondary task uses redundant camera move away obstacles 
function tend maximize distance camera obstacle 
cost function achieve goal maximum infinite distance camera obstacle null 
simplest cost function hs oc camera location oc xc yc zc coordinates closest obstacle camera expressed camera frame note cost function reflects similar behavior suits problem 
os xs ys zs coordinates obstacle scene frame frame mc rt homogenous matrix describes camera position frame obstacle coordinates camera frame xc xs components secondary task xc yc zc multiple obstacles handled considering cost function hs oc avoiding occlusions goal avoid occlusion target due static moving objects unknown motion 
virtual camera perform adequate motion order avoid risk occlusion account desired constraints camera target 
situations may evolve occlusion 
simple case moving object crosses camera target line see 
similar cases may encountered see target moves object scene second see camera follows undesirable trajectory hidden object 
general image approach possible generate adequate camera motion automatically avoid occlusions 
second time see simple method determine risk occlusion order weight adequately camera response velocity 
occlusion issues occlusion due moving object occlusion due target motion occlusion due camera motion automatic generation adequate motions consider projection image set objects scene may occlude target 
methodology paragraph define function hs reaches maximum value target occluded object scene 
fact occlusion problem fully defined image 
occluding object closer target distance projection target projection occluding object decreases risk occlusion increases 
define hs function distance image hs scalar constants 
sets amplitude control law due secondary task 
components involved computing hs hs hs seldom difficult 
image jacobian consider case single occluding object considered point 
generalization multiple objects straightforward 
want see target location image 
consider coordinates center gravity 
consider occluding object point po xo yo defined closest point wehave hs hs hs lt hs lt hs xo hs yo fact defined approximation hs image jacobian related physical point 
case point defined closest point corresponding physical point change time 
considering locally approximation 
risk occlusion approach compute camera reaction fine occluding object moves camera target depicted 
case occlusion occur action taken 
necessary desirable move camera cases occluding object farther target 
key point detect occlusion may occur 
case compute bounding volume includes camera target time time ndt assuming constant target velocity see 
occlusion occur object located bounding box 
time occlusion may computed smallest bounding box empty 
object scene motion way consider intersection volume bounding volume includes time time ndt 
computing risk occlusion obstacle detection occlusion collision obstacle point interesting issues obstacle avoidance may considered context 
obstacle camera trajectory located created bounding box see 
system forbid camera move direction 
cases difficult handle 
example target moving corridor see 
case solution avoid occlusion target walls avoid contact wall reduce camera target distance 
done axis controlled primary task 
occlusion issues camera corridor note paragraph just proposed method detect quantify risk occlusion 
method proposed paragraph cases generate adequate motion avoid occlusion 
time occlusion computed fact set parameter see equation tunes amplitude response risk 
virtual director automatic cinematography issues considered previous section related reactive applications video games problems considered paragraph concerned camera control movie making applications 
question considered place camera ensure film constraints shot 
goal provide director language describes scenes shots propose elementary skills director 
basic camera placement panning tracking panning tracking certainly common camera motions straightforward consider image framework widely considered previous sections 
fact difficulty choose visual features virtual want servo 
choice important determine virtual camera achieve task 
example panning issues users choose virtual points straight line visual features features pan axes camera controlled 
tracking issues adequate features may depend desired camera motion 
example camera motion parallel target trajectory constrained order achieve rigid link camera target points lines combination visual features full rank matrix suitable purpose 
trajectory tracking regards trajectory tracking issue problem fairly simple 
want camera move curve defined camera frame 
consider secondary task function distance camera point 
solution define secondary task function hs simply defined hs 
basic issues exist see building apex camera placement defined segments points example external internal view consider target virtual line interest 
goal describe tasks 
described image space image camera control suitable issues 
controlling lighting conditions controlling lighting condition photography problem fundamental non trivial issue film director 
main problem define shot wrt 
conditions different functions proposed achieve goal directly intensity image second intensity gradient gives information contrast image 
goal position camera wrt 
lit aspect object 
want maximize quantity light re emitted object ensure lighting conditions 
applying proposed methodology want maximize cost function hs represents intensity point 
points belong object 
secondary task hs ix hs hs iy represents spatial gradient 
goal maximize contrast image possible criterion maximize sum spatial intensity gradient image 
corresponding cost function hs ix need compute gradient hs hs hs hs lt fact rewriting get hs ix iy ix iy results section results illustrate approach 
images generated real time frame simple sun ultra sparc mhz mesa gl images produced process seen example 
animations computed maya alias wavefront 
avoiding occlusions museum walkthrough 
example applied proposed methodology navigation task complex environment 
target followed moving museum environment 
goal keep target view avoid occlusions considering line modifications environment moving objects 
example consider focusing task wrt 
image centered virtual sphere 
task constrains virtual camera achieve focusing task maintain radius constant image 
reader refer complete derivation image jacobian related sphere 
shows camera trajectories various applied strategies 
obstacles appear yellow 
target trajectory represented red dotted line trajectory moving object represented blue dotted line 
red trajectory represents simplest strategy just focus object 
done consider environment occlusions collisions environment occur 
blue trajectory considers avoidance occlusions static objects consequence occlusion moving object occurs 
green trajectory considers avoidance occlusions static moving objects 
bird eye view key frames 
yellow volume associated camera target couple corresponds bounding volumes predict occlusions 
green volume detect occlusions moving object explained section 
shows views acquired avoidance occlusion wall 
view view occlusion moving object avoided 
wall problem wall center room handled shown images 
final position reached 
shows views acquired virtual camera rendered maya 
avoiding occlusion moving object avoiding occlusion wall avoid obstacles occlusions wall wall avoiding occlusion wall target trajectory occluding object trajectory constraints avoid occlusions static objects avoid occlusions static mobile objects museum walkthrough camera trajectories various strategies walking corridor merging multiple constraints experiment considered task target moving narrow corridor turning right see 
experiment possible achieve task distance camera target remains constant 
wants camera keep target view occlusion avoidance process avoided 
problem motion computed avoid occlusion moves camera red wall 
obstacle avoidance process necessary 
secondary tasks related museum walkthrough bird eye views bounding volumes occlusion predictions museum walkthrough bird eye views corresponding camera views camera target distance related obstacle avoidance see paragraph related occlusion avoidance see paragraph 
resulting control law automatically produces motion moves camera away wall reduces camera target distance 
distance initially set decreases reaches ensure task 
trajectory tracking experiment described camera focuses tower want see tower vertically centered image 
note similar task considered 
consider positioning task 
handled various ways chosen visual features 
simplest way define segment consider ex moving corridor bird eye views camera views 
case full rank matrix 
case distance camera middle segment remain constant 
want follow trajectory ensure constraint modify focal length camera ensure main task trajectory tracking 
solution usually suitable issues 
way consider segment choose segment support straight line visual feature 
case image jacobian full rank matrix constrained 
show focusing task 
achieved camera follows trajectory 
results shown 
positioning wrt 
segment trajectory tracking photography problem regards issue perform positioning experiment wrt 
sphere lit positional light source 
results positioning task 
worth noting average intensity increases smoothly see 
plot distance camera object light axis see 
note distance tends zero camera located sphere light predicted theory see 
experiments involve complex objects teapot 
results see show validity approach 
focusing task considered 
explains teapot turned upside 
cost optimizing lighting conditions distance camera location target light positioning wrt 
sphere lighting conditions scene observed camera illumination increases average intensity image distance sphere light axis camera sphere light position time teapot sequence considering lighting conditions problems associated management camera virtual environment 
necessary able carry visual task focusing task generally positioning task efficiently necessary able react appropriate efficient way modifications environment 
chose techniques widely considered robotic vision community 
basic tool considered visual servoing consists positioning camera information perceived image 
image control constitutes novelty approach 
task specified space resulting camera trajectories space 
intuitive approach animation carried wishes observe resulting images sequence 
advantage method 
contrary previous limit positioning tasks wrt 
virtual points static environments 
applications video games necessary able react modifications environment trajectories mobile objects considered constraints camera control 
redundancy formalism secondary tasks reflect constraints system effect visual task 
show validity approach proposed implemented various classic problems simple tracking tasks complex tasks occlusion obstacle avoidance positioning wrt 
lit aspects object order ensure photography 
approach proposed real qualities encouraging results obtained suggest visual control computer animation promising technique 
main drawback direct counterpart principal quality control carried image implying loss control camera trajectory 
trajectory computed automatically ensure visual secondary tasks controlled animator 
reason undoubtedly see wider interest techniques real time reactive applications 
authors wish fran ois chaumette valuable comments mi submitting lighting problem 
animations line 
animations mpeg film vista group www page www irisa fr vista follow demo link 

grammar film language 
communication arts books hastings house new york 
blinn 
am am looking ieee computer graphics application pages july 
christianson anderson 
salesin weld cohen 
declarative camera control automatic cinematography 
proc aaai conference pages portland oregon 
cowan 
automatic sensor placement vision task requirements 
ieee trans 
pattern analysis machine intelligence may 
drucker zeltzer 
intelligent camera control virtual environment 
graphics interface pages banff canada 
chaumette rives 
new approach visual servoing robotics 
ieee trans 
robotics automation june 
gleicher witkin 
lens camera control 
acm computer graphics siggraph pages chicago july 
hashimoto 
visual servoing real time control robot manipulators visual sensory feedback 
world scientific series robotics automated systems vol world scientific press 

cohen salesin 
virtual cinematographer paradigm automatic real time camera control directing 
proc 
acm siggraph computer graphics proceedings pages new orleans august 
hutchinson hager corke 
tutorial visual servo control 
ieee trans 
robotics automation october 

kim hong 
lens camera control simple jacobian matrix 
proc 
graphics interface pages quebec canada may 
marchand 
hager 
dynamic sensor planning visual servoing 
ieee int 
conf 
robotics automation volume pages belgium may 
nelson khosla 
integrating sensor placement visual tracking strategies 
ieee int 
conf 
robotics automation volume pages san diego may 
samson le 
robot control task function approach 
clarendon press oxford united kingdom 
allen tsai 
survey sensor planning computer vision 
ieee trans 
robotics automation february 
ware osborn 
exploration virtual camera control virtual dimensional environments 
proc 
symposium interactive graphics pages march 
weiss sanderson neuman 
dynamic sensor control robots visual feedback 
ieee journal robotics automation october 
