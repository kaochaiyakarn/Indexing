constructing disjoint paths secure communication bagchi amitabh michael goodrich xu dept information computer science university california irvine ca usa bagchi goodrich ics uci edu 
propose bandwidth efficient algorithmic solution perfectly secure communication absence secure infrastructure 
solution involves connecting vertex pairs set edge disjoint paths structure call system parameter determined connectivity network 
structure resilient adversaries bounded eavesdropping capability 
ensure bandwidth efficiently consider connection requests inputs edge disjoint path coloring problem generalization path coloring problem vertex pair connected system system assigned color overlapping systems color 
objective minimize number colors 
give distributed competitive online algorithm 
additionally security applications focus prove malicious adversary attacks algorithm process construction system learn attacked system built 
secure communication public network important issues deploying distributed computing 
various solutions proposed problem solutions typically assume existence trusted third party public key infrastructure 
large scale applications internet wide distributed computing assumption existence trusted third party public key infrastructure lead technical complications 
alternatives facilitate secure communications relying assumptions potentially extremely useful 
explore alternative show network properties provide secure communications 
pioneering dolev showed high connectivity perfectly secure transmission presence bounded adversaries 
authors notion wires disjoint paths connecting sender receiver 
simple expedient breaking data shares ed disc lncs pp 

springer verlag berlin heidelberg bagchi sending disjoint paths difficult adversary bounded eavesdropping capability intercept transmission tamper 
established bounds number wires required kind security wished provide described protocols wires 
attempt construct wires 
main contribution formalizing algorithmic setting construction 
define system set edge disjoint paths joining vertex pair 
realizing wires give algorithm constructing systems requesting pairs 
theoretical abstraction uniform capacity optical network 
edge uniform capacity divided number wavelengths known colors routing terminology 
path source sink routed wavelength edges traverses 
see elaboration setting 
simplicity analysis require paths system wavelength 
ensure connection gets bandwidth ensure total number wavelengths sharing edges capacity minimized 
define generalization minimum path coloring problem called section purpose build systems provide competitive distributed solution problem 
ensure communication complexity constructing low possible 
applications propose systems realm security show disruptive adversary operating running algorithm able learn attacked correctly constructed system 
second contribution show applications systems secure communications 
systems realize wires required perfectly secure communications achieved 
fact wires refer vertex disjoint paths allow processor edge faults 
systems faults limited edges 
application allow computationally secure communications introduce notion construction identity key distribution 
scheme allows pair parties conduct secure communications relying trusted third party public key infrastructure 
organization 
section formally define paths systems adversarial models 
section discuss systems produced algorithm secure key distribution secure transmission 
section provide terminology definitions provide context 
section outline algorithm analyze 
conclude section discussion issues raised open problems remaining 
note finding vertex disjoint paths graphs considered significantly harder problem finding edge disjoint paths 
see details 
constructing disjoint paths secure communication paths systems adversaries connectivity underlying network foundational aspect section defining formally definition 
edge cut graph set connected 
graph connected edge cut edges 
connectivity maximum connected 
path systems systems 
sender receiver apath system set paths underlying communication network 
path system path system paths edge disjoint call edge disjoint path system 
ak edge disjoint path system edge disjoint path system refer edge disjoint path system simply system 
focus algorithms construction systems 
adversaries compromised paths 
passive adversary called listening eavesdropping adversary listens messages fixed set edges communication network 
objective passive adversary learn confidential communication active adversary called malicious adversary listens messages fixed set edges addition disrupts alters generates messages fixed set edges communication network 
active adversary may behave arbitrarily phases establishment system communication 
objective active adversary addition learning confidential communication prevent correctly receiving confidential communication compromised edge edge active passive adversary operating 
assume general edge way communication adversary compromise communication directions 
compromised path path edge compromised 
security applications edge disjoint paths section investigate interesting security applications systems 
general interested protocols secure communication presence active passive adversaries 
applications categories require perfect security see section require just computational security see section 
informally learn means adversary improves ability guess messages 
see formal definition 
bagchi building block perfectly secure message transmission perfectly secure message transmission fundamental problem distributed computing 
known function inputs efficiently securely computed complete network participants presence byzantine faults 
general communication networks researchers striving pursue alternatives perfectly secure message transmission 
classic result simultaneously achieves perfect secrecy perfect resilience worst case time linear diameter network due 
specifically protocol perfectly secure message transmissions completeness theorem naturally extended general networks necessary connectivity 
extended instance accommodate powerful communication capability non threshold adversary capability 
note schemes typically require multiple rounds communications 
assumed set wires vertex disjoint paths paths input algorithms 
consequence system produced algorithms section directly input algorithms 
course security naturally translated context tolerating adversary able corrupt certain number edges 
applications identity key distribution identity cryptography notion introduced shamir 
schemes advantages traditional schemes public key infrastructures secure communications established long sender knows identity receiver perfect analogy realworld mail system 
secure identity signature schemes secure public key cryptosystems 
explicitly stated identity symmetric key cryptography functionality similar shamir intensively investigated see follow ons 
mentioned public key symmetric key schemes assume existence trusted third party certain secrets participants existence set system wide cryptographic parameters 
shall see systems facilitate key distribution relying trusted third party existence system wide cryptographic parameters 
sequence definition suggest practical constructions 
definition 
identity key distribution scheme consists probabilistic polynomial time algorithms init send receive 
denote sender denote receiver 
init 
process may include steps 

chooses security parameter generates fresh secret cryptographic setting algorithm identification 
constructing disjoint paths secure communication 
chooses appropriate secret sharing scheme split set shares kk possibly accompanying information 
sender runs algorithm section produce 
pk 
send 

pk sends ki receiver path pi receive 
receiving ei ki ti executes ei ti reconstruct secret definition 
call scheme secure adversary unable learn information secret unable prevent receiver reconstructing secret concrete constructions 
concreteness outline schemes secure computationally bound adversary adversary confront real world 
instantiation exactly shamir secret sharing 
alice intends conduct secure communication bob simply executes specification 
note original shamir secret sharing scheme best secure secrecy information theoretical sense second instantiation extension shamir secret sharing 
secure scheme 
trick certain checksum receiver differentiate invalid incoming messages valid ones 
simple implementation see appropriate way function 
path coloring bandwidth maximization network setting assume uniform capacity network provisioned optical fibre links optical switches 
link provide bandwidth different wavelengths link accomodate different paths maximum rate bits second path 
assume request entering system serviced number wavelengths required case necessary time division multiplexing share edge systems reducing effective bandwidth available 
general desirable keep number different wavelengths minimum possible 
formally speaking problem wish solve stated follows undirected graph multi set request pairs si ti si ti si ti 
demand pair si ti find edge disjoint paths called perfect secrecy achieved price single round communication 
secret communication secure computational sense 
bagchi system connect si ti 
assign color system systems share edge color 
objective minimize number colors 
call edge disjoint path coloring problem 
note requirement paths system colored color inessential basic project constructing systems 
impose requirement simplify competitive analysis algorithm 
real world setting advisable remove constraint 
generalization known minimum path coloring problem defined 
rich interesting literature 
due space constraints omit discussion referring reader full version 
flow number flow number network measure introduced allows precise bounds 
important property parameter mention outset flow number computed exactly polynomial time gives major advantage routing parameters expansion routing number 
introduce flow number need notation 
concurrent multicommodity flow problem commodities terminal nodes si ti demand di 
solution set flow paths commodities obey capacity constraints need meet specified demands 
important difference problem unsplittable flow problem commodity si ti routed multiple paths 
relative flow value feasible solution maximum di units commodity simultaneously routed max flow concurrent multicommodity flow problem defined maximum flow value feasible solutions 
path solution flow value amount flow routed 
special class concurrent multicommodity flow problems product multicommodity flow problem 
nonnegative weight associated node commodity associated pair nodes demand equal 
suppose network arbitrary non negative edge capacities 
node capacity defined capacity defined 
concurrent multicommodity flow problem feasible solution dilation ofs defined length longest flow path congestion defined inverse flow value congestion tells constructing disjoint paths secure communication times edge capacities increased order fully satisfy original demands paths 
multicommodity flow problem pair nodes commodity demand flow number network minimum max feasible solutions 
risk confusion simply write 
note flow number network invariant scaling capacities 
smaller flow number better communication properties network 
example line mesh hypercube log butterfly log expander log 
algorithm section describe algorithm construct systems secure communication optical networks optimizing bandwidth usage 
framework algorithm designed features requests come online 
request form sender receiver node pair connected system comes satisfied request comes note assume probability model requests 
distributed computation 
central authority accepts requests constructs systems 
request comes corresponding sender node onus construct system connect receiver initially nodes global information network topology know immediate neighbors 
needs send messages neighbors nodes learn topology construct system 
assume protocol constructing systems followed nodes information stored links facilitates protocol 
presence active adversary 
systems construction secure communication 
addition assume adversary construction phase attempts disrupt proper construction systems 
correspondingly describe algorithm steps section describes centralized algorithm bounded competitive ratio online request sequence section details distributed implementation algorithm section tackles question resilience adversary attacking algorithm runs 
online algorithm competitive ratio run bounded greedy algorithm 
high level description standard model online algorithms 
see general 
usage bounded greedy algorithms path routing problems pioneered kleinberg 
bagchi pair find lowest color class system edges established share edge system colored flow number communication network 
algorithm works looking non intersecting system bounded length color class establishing new color class fails 
value specified necessary analysis competitive ratio 
analysis simple extension analysis bounded greedy algorithm solving edge disjoint paths problem edp introduced 
edp admission control version 
formally speaking edp undirected graph set terminal pairs requests problem find maximum subset pairs chosen pair connected disjoint paths systems paths different pairs mutually disjoint 
bounded greedy algorithm edp competitive ratio proved subsequently improved 
iterated version algorithm 
state result omitting proof 
theorem 
run set parameter log competitive algorithm 
note algorithm requires knowledge flow number communication network 
value pre computed stored nodes updated network topology changes significantly 
distributed implementation essential computation constructing minimum sized system colored remove edges system colored rest problem easily formulated min cost flow problem min cost flow algorithm solve see 
algorithm galil yu 
distributed implementation sender node finds system receiver size lowest color class possible 
prevent conflicts edges edge stores list colors colors systems initially know topology similar connection observed independently aumann rabani case path colouring problem edge disjoint paths problem 
refer reader galil yu discussion relationship algorithm previous done similar settings iri edmonds karp 
constructing disjoint paths secure communication network neighbors 
learns topology sending explicit messages nodes knows point time 
take care ensure messages kept minimum consider part network absolutely essential needs 
delving internal workings algorithm need definitions 
definition 
directed network edge capacity function edge cost function 
cost function said skew symmetric ij ji 
flow node function fij gij fij fji fit cost flow cost ij fij 
cost flow minimizes cost 
flow residual capacity function defined rij gij fji fij 
residual network induced consisting edges positive residual capacities capacity function cost function 
unweighted undirected graph transformed directed network edge capacities skew symmetric cost function replacing edge directed subgraph vi ei vi lij ei consists pairs opposite edges lij lij edges directed cycle lij capacity cost edges directed cycle lij capacity cost 
define node potential function help bound time complexity min cost flow algorithm 
definition 
node potential function 
reduced cost function defined ij ij 
described 
communication network represented find min cost flow construct shortest path tree residual network edge length 
finding shortest path requires significant knowledge network 
sender knowledge local augmenting knowledge incurs communication cost compute tree lazy version classic dijkstra algorithm 
described omitted bookkeeping details simpler presentation 
execution knowledge graph may increase 
occasions computing value potential new nodes easy easy prove claim allows update distances previous iteration 
bagchi initialize graph local information available neighbor neighbor 
connected false 
find system colored connected false gc edges part existing system colored 
transform graph form suitable min cost flow algorithm 
gc fij 


finding min cost flow find min cost augmenting path residual network 
construct shortest path tree potentially increase information available 
distance 
restart outer loop 
pass unit flow augmenting path shortest path unit flow 


pk edge disjoint paths formed decomposing flow 
send message color edge requesting adding colors 
coloring request granted connected true 

system request denied restart color 
fig 

algorithm constructs system size sender node receiver node minimum color class possible 
computation performed claim 
potential iteration equal shortest distance residual network iteration edge length 
node visited information stored node useful current iteration color conflicts 
constructing disjoint paths secure communication initialize set contains vertices currently 

find shortest paths nodes possible 
node minimum distance edges 
visited return 
send message list neighbors requesting set colors neighbor 
neighbor visited node neighbor update graph set potential function newly learned vertices 
colors 
shortest distance edge length residual network start previous iteration network flow 
mark visited 

include update shortest distance estimates 
neighbor distance distance distance distance 
fig 

subroutine residual network graph currently known reduced cost function edge length 
shortest path tree constructed vertices possible sending messages network 
include receiver messages sent learn graph necessary include 
iteration index 
color considered 
easy see node visited essential computation shortest path time communication complexity 
galil yu show dial implementation dijkstra algorithm finds flow km time number edges ignore time communication true case 
barring communication time runs time km number colors number edges network examined 
note size network examined bagchi dependent edges taken existing systems characterized easily 
luckily give better bound value introduce simple addition described 
slightly improved algorithm 

pk system obtained decomposing flow 
suppose maintain iterations 
point number edges exceeds know need go color class 
add check nodes distance considered 
denote subgraph nodes ns 
time bound ns 
check gives bound communication complexity defined sum number hops messages sent 
messages sent nodes ns 
node distance complexity bounded ns 
resilience active adversary algorithm described resilient passive listening adversary active disrupting adversary 
disrupting adversary controlling edges may succeed deceiving sender constructing incorrect system prevent constructing system color class possible 
system provide communication edge disjoint paths algorithm specify paths messages list neighbors color edge sends 
messages may pass small number edges may control adversary 
necessary usable path system constructed necessarily consist edge disjoint paths 
particular say theorem 
protocol secure communication system presence active adversary secure communication path system presence active adversary paths edge disjoint adversary limited listening edges paths omit proof due lack space 
detection issue easily done slight modification part algorithm 
message sent nodes color edge specify takes specific path 
ensure replies sent back path 
node reports error discard system unusable 
claim adversary compromise edges paths system edge disjoint compromised 
idea extended ensure algorithm finds usable system color class exists 
idea introduced earlier 
pk system obtained decomposing flow 
modify algorithm maintain current stage 
abandon notion visited node 
node extracted constructing disjoint paths secure communication send list neighbors message 
care taken message goes path part reply comes back path 
lastly stage paths change path different list neighbors message sent confirm information sending message receiving reply new path 
call algorithm 
claim 
path system presence adversary paths edge disjoint adversary limited listening edges paths 
system long system exists 
proof sketch 
system path pis edge disjoint path information obtained edges implies single edge disrupting adversary deceive respect single path edges deceive respect paths 
listen edges remaining paths 
similarly system exists adversary deceive respect paths 
rest paths form system discovered algorithm 
open problems primary concern develop efficient algorithm security problem 
extant network resources purpose propose new kind resource efficiency backward compatibility 
important implications network design 
provide input kind parameters need tuned networks provisioned 
example building network low flow number useful average latency competitive ratio algorithm directly related quantity 
number areas investigation thrown 
interesting see kind algorithmic solutions obtained constructing vertex disjoint path systems 
feel security applications give new lease life research area 
useful investigation see adjust algorithm produce customized systems 
example alice may want bob may need 
capability enable users achieve security proper applications reasonable cost 

authors moti yung helping clarify relationship petr bhargava helpful discussions malik proof reading suggestions 
bagchi 
ahuja magnanti orlin 
network flows 
prentice hall new jersey 

aumann rabani 
improved bounds optical routing 
proc 
th acm siam symposium discrete algorithms pages 

bagchi goodrich xu 
constructing disjoint paths secure communication full version 
available online www ics uci edu bagchi pub html 

bagchi 
short length menger theorem reliable optical routing 
proc 
th annual symp 
parallel algorithms architectures pages 

bagchi scheideler 
algorithms faulttolerant routing circuit switched networks 
proc 
th acm symp 
parallel algorithms architectures pages 

ben goldwasser wigderson 
completeness theorems fault tolerant distributed computing extended 
proc 
th annual symposium theory computing pages 

blom 
optimal class symmetric key generation systems 
proc 
eurocrypt pages 

blundo santis herzberg kutten vaccaro yung 
perfectly secure key distribution dynamic conferences 
crypto pages 

boneh franklin 
identity encryption weil pairing 
proc 
crypto pages 

borodin el yaniv 
online computation competitive analysis 
cambridge university press 


procedure determining minimal cost flows doubling scaling 
technical report technical report operational research office johns hopkins university baltimore md 

chaum damgard 
multiparty unconditionally secure protocols 
proc 
th annual symposium theory computing pages 

dial 
algorithm shortest path forest topological ordering 
comm 
acm pages 

dolev dwork waarts yung 
perfectly secure message transmission 
jacm 

edmonds karp 
theoretical improvements algorithmic efficiency network ow problems 
acm 

fiat shamir 
prove practical solutions identification signature problems 
proc 
crypto pages 

franklin wright 
secure communication minimal connectivity models 
proc 
eurocrypt pages 

galil yu 
short length versions menger theorem 
proc 
th annual acm symposium theory computing pages 

gong 
increasing availability security authentication service 
ieee selected areas communications 

iri 
new method solving transportation network problems 
journal operations research society japan 
constructing disjoint paths secure communication 

optimal flow networks 
technical report interim technical report operation research center mit cambridge ma 

kleinberg 
approximation algorithms disjoint paths problems 
phd thesis department electrical engineering computer science massachusetts institute technology 

stein 
approximating disjoint path problems greedy algorithms packing integer programs 
proc 
th international integer programming combinatorial optimization conference ipco pages 

scheideler 
improved bounds unsplittable flow problem 
proc 
th acm siam symposium discrete algorithms pages 

kumar rangan 
perfectly secure communication arbitrary networks 
proc 
st annual acm symposium principles distributed computing pages 

leighton micali 
secret key agreement public key cryptography extended 
proc 
crypto pages 

mceliece 
sharing secrets reed solomon codes 
comm 
acm 

rabani 
path coloring mesh 
proc 
th annual ieee symposium foundations computer science pages 

raghavan upfal 
efficient routing optical networks 
proc 
th annual symposium theory computing pages 

shamir 
share secret 
comm 
acm 

shamir 
identity cryptosystems signature schemes 
proc 
crypto pages 


techniques useful solution transportation network problems 

