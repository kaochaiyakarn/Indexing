openjava class macro system java shigeru chiba marc olivier doctoral program engineering university tsukuba tsukuba ibaraki japan mt tsukuba ac jp department information science electronics university tsukuba laas cnrs avenue du colonel roche toulouse cedex france presents openjava macro system developed java 
traditional macro systems designed non object oriented languages difficult write number macros typical object oriented programming require ability access logical structure programs 
drawbacks traditional macro systems syntax trees representing source programs 
points problem shows openjava addresses problem 
key idea open java metaobjects originally developed reflective computing representing source programs 
reflection technique changing program behavior program 
software engineering viewpoint reflection tool separation concerns letting programmers write program higher level abstraction modularity 
example number reflective systems provide metaobjects intercepting object behavior method invocations field accesses 
metaobjects weaving programs separately written distinct aspects application algorithm distribution resource allocation user interface single executable program 
previous reflective systems satisfy requirements software engineering 
abstraction provided metaobjects intercepting object behavior easy understand implementing limited kinds separation concerns 
type reflection involves runtime penalties 
reflective systems enable fine grained program weaving perform reflective computation possible compile time avoiding runtime penalties 
hand typical tool manipulating program compile time macro system 
performs textual substitution particular aspect program separated rest program 
example 
eds reflection software engineering lncs pp 

springer verlag berlin heidelberg macro system allows separate definition constant value rest program constant value number distinct lines 
lisp macro system provides programmable macros enables powerful program manipulation 
macro expansion done compile time macros imply runtime penalties 
abstraction provided traditional macro systems sophisticated macros deal textual representation program program manipulation depending semantic contexts program implemented macros 
proposes macro system integrating features reflective approach words compile time reflective system behavioral reflection structural reflection 
key idea macro system called openjava macros meta programs deal class metaobjects representing logical entities program sequence tokens syntax trees asts 
class metaobjects textual semantic aspects program macros openjava implement fine grained program weaving previous reflective systems 
access semantic contexts needed macro expansion 
presents openjava implement macros helping complex design patterns 
rest section presents problem ordinary macro systems section discusses design implementation openjava addresses problem 
compare openjava related section 
section concludes 
problems ordinary macros macro systems typical language extension mechanisms 
define macro system programmers specify symbol function call replaced expression replacement simple substitution 
common lisp programmers write powerful macros 
powerful macros cover requirements oo languages programming 
programmable macros macros common lisp programmable macros 
specify replace original expression common lisp 
macro function receives ast syntax tree substitutes original expression 
macro system powerful object system common lisp clos implemented macro system 
programmable macros developed languages complex syntax ms macro systems macro functions written extended language providing special data structure representing asts 
users ms define new syntax expanded openjava class macro system java regular syntax 
parameter macro function receives ast code processed macro function 
essential issue designing programmable macro system data structure representing original source program 
essential issue specify apply macro source program 
systems employed asts 
mechanisms proposed 
common lisp ms macro applied expressions statements trigger word specified macro 
example trigger word expressions expanded macro 
way macros trigger words 
instance impossible selectively apply macro expressions adding string objects 
macro systems provide fine grained control apply macro 
macro applied expressions statements matching pattern specified bnf 
epp macros applied specified syntax elements statements expressions 
need put trigger word front statements expressions 
representation object oriented programs macro systems asts representing source program asts best representation macros macros typical oo programming require different kind representation 
asts purely textual representation independent logical contextual information program 
example ast represents binary expression ast tells operator operands tells types operands 
writing macro possible asts macro expansion depends logical contextual information binary expression 
great demand macros depending logical contextual information oo programming 
example design patterns require relatively complicated programming 
require programmers repeatedly write similar code 
help programming researchers proposed extend language provide new language constructs specialized particular patterns 
constructs implemented macros implemented far custom preprocessor 
macros implementing constructs depend logical contextual information programs implementable top traditional ast macro systems 
suppose write macro helping programming observer pattern describing dependency objects 
pattern java standard library called event listener model 
example java program displays menu bar define listener object notified menu select events 
listener object instance class implementing interface class implements void 
void return void return class declare methods event handling events menu cancel event simply ignored 
write macro automating declaration methods handling ignored events 
macro definition rewritten class follows implements void 
follows clauses specifies macro applied class definition 
declarations automated 
macro inspects methods declared interface implemented class 
inserts declarations methods class 
writing macro difficult traditional ast macro systems depends logical information definition class 
class definition large ast macro program interpret ast recognize methods declared 
macro program construct asts representing inserted methods modify original large ast include asts 
manipulating large ast difficult task 
reduce difficulties macro systems provide logical contextual information programs macro programs 
macro systems providing logical information 
example xl systems functional language oo language 
openjava openjava advanced macro system java 
openjava macro programs access data structures representing logical structure programs 
call data structure class metaobjects 
section presents design openjava 
macro programming openjava openjava produces object representing logical structure class definition class source code 
object called class metaobject 
class openjava class macro system java metaobject manages macro expansion related class represents 
programmers customize definition class metaobjects describing macro expansion 
call class class metaobject metaclass 
openjava metaprogram macro described metaclass 
macro expansion openjava divided macro expansion class declarations callee side second expressions accessing classes caller side 
applying macros fig 
shows sample macro openjava 
adding clause instantiates just class name class declaration programmer specify class metaobject class instance metaclass sample program class metaobject instance 
metaobject controls macro expansion involved 
declaration described regular java shown fig 

class instantiates extends implements 
fig 

application macro openjava 
class extends ojclass void translatedefinition 
fig 

macro openjava 
metaclass inherit metaclass ojclass built class openjava 
translatedefinition fig 
method inherited ojclass invoked system macro expansion 
instantiates clause class declaration openjava creates instance metaclass indicated instantiates clause assigns instance class metaobject representing declared class 
open java invokes translatedefinition created class metaobject macro expansion class declaration 
translatedefinition declared ojclass perform translation subclass ojclass override method desired macro expansion 
example translatedefinition add new member methods class calling member methods ojclass 
modifications reflected source program final stage macro processing 
describing metaprogram method translatedefinition implementing macro observer pattern section shown fig 

metaprogram obtains member methods including inherited ones defined class invoking class metaobject 
member method declared interfaces implemented class generates new member method doing adds class invoking addmethod class metaobject 
void translatedefinition ojmethod int length modif modif isabstract ojmethod new ojmethod getname return addmethod fig 

translatedefinition 
class represented class metaobjects member method represented method metaobjects 
openjava classes member methods member fields constructors represented instances class ojclass ojmethod respectively 
metaobject represent logical structures class member definitions 
easy handle compared directly handling large asts representing class declarations collecting information scattered asts 
class metaobjects shown section problem ordinary macro systems primary data structure asts syntax trees far logical structures programs oo languages 
oo languages java class definitions play important role logical structure programs 
openjava employs class metaobjects model originally developed reflective computing representing logical structure program 
openjava class macro system java class metaobjects easy meta programs access logical structure program 
hiding syntactical information java programmers various syntax describing logically thing 
syntactical differences absorbed metaobjects 
instance notations declaring string array member field string string string array fields 
awkward write metaprogram syntactical differences member fields considered 
provides member methods gettype settype handling type member field 
gettype metaobjects representing returns class metaobject representing array type class string 
additionally elements grammar represent element logical structure language 
element edited edited 
instance member method ojclass modifying name class changes class name class keyword class declaration changes name constructors 
logically structured class representation simple asts arranged abstracted properly represent logical structure class definition 
data structure carefully designed corresponded grammar language logical constructs language classes member methods 
especially easy handle logical information program including association names types 
instance member method ojclass returns member methods defined class methods immediately declared class inherited methods 
class metaobjects contain type information definition super class accessible 
class metaobjects details root class class metaobjects ojclass 
member methods ojclass obtaining information class shown tab 
tab 

cover attributes class 
openjava types including array types primitive types int corresponding class metaobjects 
member methods shown tab 
metaprograms inspect type ordinary class 
tab 
gives methods modifying definition class 
metaprograms override translatedefinition ojclass calls methods executing desired modifications 
instance example shown fig 
adds newly generated member methods class addmethod 
table 
member methods ojclass 
non class types 
boolean tests represents interface type 
boolean tests represents array type 
boolean tests represents primitive type 
ojclass returns class metaobject type array components 
table 
member methods ojclass introspection 
string returns package name class belongs 
string returns unqualified name class 
returns modifiers class 
ojclass returns superclass declared explicitly implicitly 
ojclass returns declared superinterfaces 
returns static initializer statements 
returns declared fields 
ojmethod returns declared methods 
returns constructors declared explicitly implicitly 
ojclass returns member classes inner classes 
ojclass returns class declaring class outer class 
openjava class macro system java table 
member methods ojclass modifying class 
string string name sets unqualified name class 
sets class modifiers 
ojclass ojclass sets superclass 
ojclass ojclass faces sets superinterfaces declared 
field removes field class declaration 
ojmethod ojmethod method removes method class declaration 
constr removes constructor class declaration 
field adds field class declaration 
ojmethod addmethod ojmethod method adds method class declaration 
constr adds constructor class declaration 
metaobjects obtained class metaobjects method ojclass obtain superclass class returns class metaobject class name string 
result metaprogram returned class metaobject directly obtain information superclass 
openjava automatically generates class metaobjects demand classes declared source file classes available form bytecode classes source code available 
returned value member method isan instance class 
class represents set class modifiers public final 
metaprograms care order class modifiers hides useless information 
class ojmethod return type ojclass represents logical structure method 
similarly class ojclass class member methods examining modifying attributes method 
basic member methods ojmethod shown tab 

type information obtained methods represented class metaobject 
instance returns class metaobject return type method 
feature ojmethod table 
basic methods ojmethod 
string getname returns name method 
returns modifiers method 
ojclass returns return type 
ojclass returns parameter types declaration order 
ojclass returns types exceptions declared thrown 
string returns parameter variable names declaration order 
returns statements method body 
string string name sets name method 
sets method modifiers 
ojclass sets return type 
ojclass sets parameter types declaration order 
ojclass sets types exceptions declared thrown 
string sets parameter variable names declaration order 
sets statements method body 
respectively represent member field constructor 
class return type member method class ojmethod represents statements method body 
instance consists objects representing expressions statements 
objects ast data structures contain type information 
thought logical structure statements expressions java represented asts 
logical structure class tab 
shows member methods ojclass handling logical structure class 
methods metaprograms obtain information considering class inheritance member hiding 
member methods implemented combining member methods openjava class macro system java tab provided convenience 
think providing methods significant viewpoint class metaobjects represent logical structure program 
table 
member methods ojclass introspection 
ojclass returns interfaces implemented class superinterfaces interface 
boolean ojclass determines class interface superclass class interface 
ojmethod ojclass situation returns class available situation including declared inherited superclasses superinterfaces 
ojmethod string name ojclass types ojclass situation returns specified method available situation 
ojmethod string name ojclass types ojclass situation returns method name invoked arguments types available situation 
considering class inheritance mechanism member methods defined class member methods described class declaration inherited ones 
method metaobjects obtained invoking class metaobject include methods explicitly declared class declaration methods inherited superclass superinterfaces 
accessibility class members restricted java member modifiers public protected private 
returns member methods available class specified argument 
instance specified class subclass package returns member methods public modifier 
fig 
metaprogram passes obtains member methods defined class 
type driven translation macro expansion openjava managed metaobjects corresponding class type translation said type driven 
example member method translatedefinition ojclass overridden translate class declarations specified classes callee side translation 
addition callee side translation ojclass provides framework translate code related corresponding class spread program selectively caller side translation 
parts related certain class example instance creation expressions field access expressions 
take example macro enables programming pattern explain mechanism 
design pattern applied objects sharing support large numbers fine grained objects efficiently 
example macro supporting uses pattern need translate instance creation expression class glyph new glyph class method call expression class method returns object glyph correspondent argument generated creates new object return 
way program glyph objects automatically shares object glyph representing font letter generating objects letter 
ordinary programming glyph objects pattern programmers explicitly write program creations glyph objects 
support macro instance creations written regular new syntax pattern automatically 
openjava kind macro expansions implemented defining metaclass applied class glyph 
metaclass overrides member method ojclass fig 
method receives class instance creation expression returns translated expression 
system openjava examines source code apply member method glyph instance creation expression perform macro expansion 
expression expr environment env args expr return new methodcall args fig 

replacement class instance expressions 
member method receives object representing class instance creation expression environment object representing environment expression 
environment object holds name binding information type variable scope expression 
openjava uses type driven translation enable comprehensive macro expansion partial code spread various places program 
macro systems openjava class macro system java oo programming languages needed translate class declaration simply translating expressions class needed 
openjava defining methods selectively apply macro expansion limited expressions related classes controlled metaclass 
kind mechanism seen ordinary macro systems systems 
tab 
shows primary member methods ojclass overridden macro expansion caller side 
table 
member methods place applied macro expansion 
member method place applied macro expansion translatedefinition class declaration class instance allocation expression array allocation expression class name method class expression field read expression field write expression casted expression type casted expression type translation mechanism source program processor openjava 
analyzes source program generate class metaobject class 

invokes member methods class metaobjects perform macro expansion 

generates regular java source program reflecting modification class metaobjects 

executes regular java compiler generate corresponding byte code 
order translations methods ojclass name start expand performs caller side translation affect expressions source program declaring class expressions may translated translatedefinition class metaobject callee side translation 
different class metaobjects affect part source program 
openjava resolve macro expansion system invokes translatedefinition callee side translation apply caller side translation source code class declarations applied callee side translation 
design metaprogram considering specified order translation 
rule translatedefinition changes instance creation expression class defined metaclass performed 
openjava system performs translatedefinition superclasses system performs subclasses superclasses 
class definition strongly depends definition superclass translation class varies depending definition superclass 
settle definition superclasses system translates source program declaring superclasses 
additionally cases definition class affects result translation class java translatedefinition explicitly specify translatedefinition performed 
case dependency relationships translation macro expansions consistent order translation specified address translation results 
dealing separate compilation java classes program exist source code byte code class file 
source code class system specify metaclass instance perform appropriate instance creation expressions openjava automatically preserves metalevel information metaclass name class processes callee side translation class 
preservation implemented translating information string held field special class compiled byte code 
system uses byte code obtain necessary metalevel information process source code class 
additionally request system preserve customized metalevel information class 
metalevel information preserved special attributes byte code 
openjava information compile time runtime 
order save runtime overhead chose preserve information separated byte code loaded jvm runtime 
syntax extension openjava macros metaclass introduce new class member modifiers clauses starting special word limited positions regular java grammar 
newly introduced clauses valid parts related instances metaclass 
class declaration callee side positions allowed introduce new clauses block member declarations block method body method declaration field variable field declaration 
class declarations caller side allowed position name class 
openjava class macro system java limited positions new clauses system parse source programs conflicts extended grammars 
care conflicts clauses 
class instantiates adapts vector stack 
fig 

example syntax extension openjava 
fig 
shows example source program macro metaclass adapter class supporting programming adapter pattern 
metaclass introduces special clause adapts programmers write special description adapter pattern class declaration 
adapts clause fig 
adapter class stack class vector 
information clause class metaobjects representing performs macro expansion 
class metaobjects semantical information added new clause recognized regular java source code 
static string keyword keyword equals adapts return new new new new new new return null fig 

meta program customized suffix 
introduce adapts clause implement member method metaclass shown fig 

member method invoked system needed returns object representing syntax grammar special word 
instance class implements recursive descendant parser ll analyzes token series generate appropriate ast 
system uses objects obtained invoking complete parsing 
objects openjava provides class library subclasses parsers regular java syntax elements synthesizing parser tying repeating selecting objects 
define desired clauses library implementing new subclass 
metaclass model openjava class managed single metaclass openjava 
useful programmers apply metaclasses class implement feature problem conflict translation metaclasses 
metaclass class manage subclass metaclass perform callee side translation specified metaclass source program declaring 
member classes local classes anonymous classes java language instance metaclass openjava 
programmers may apply desired metaclass classes 
related number systems class metaobjects model representing logical structure program krs clos mop smalltalk 
reflection api java language uses model reflection api allow change class metaobjects allows inspect 
furthermore reflection api uses class metaobjects making class definition accessible runtime 
hand openjava uses class metaobjects macro expansion compile time 
uses class metaobject model 
openjava inherits features type driven translation mechanism data structure mainly ast syntax tree 
mpc epp similar respect data structure 
mentioned section ast appropriate abstraction macros frequently oo programming 
describes openjava macro system java providing data structure called class metaobjects 
number research activities done enhancing expressive power macro systems 
research stream 
openjava macro system data structure representing logical structure oo program 
easier describe typical macros oo programming difficult describe ordinary macro systems 
show effectiveness openjava implemented macros openjava supporting programming design patterns 
saw class metaobjects useful describing macros openjava class macro system java limitations openjava 
single design pattern usually contains classes macro system able deal classes single entity 
easy openjava macros applied class 
address problem incorporate openjava techniques aspect oriented programming 

jan bosch 
design patterns language constructs 
journal object oriented programming 

peter brown 
macro processors techniques portable software 
wiley 

shigeru chiba 
metaobject protocol 
sigplan notices 

shigeru chiba 
macro processing object oriented languages 
proceedings tools pacific australia november 
ieee ieee press 

pierre cointe 
metaclasses class model 
sigplan notices december 

erich gamma richard helm ralph johnson john vlissides 
design patterns elements reusable object oriented software 
addison wesley 

joseph gil david lorenz 
design patterns language design 
ieee computer march 

adele goldberg dave robson 
smalltalk language 
addison wesley 

yuji yves 
extensible java preprocessor kit tiny data parallel java 
proceedings california december 

ishikawa atsushi hori sato rg hiroshi 
design implementation metalevel architecture mpc approach 
proceedings reflection pages 

javasoft 
java core reflection api specification 
online publishing january 

gregor kiczales john lamping anurag mendhekar chris maeda cristina lopes jean marc loingtier john irwin 
aspect oriented programming 
lncs pages june 

gregor kiczales jim rivi res daniel bobrow 
art metaobject protocol 
mit press 

david ladd christopher 
language implementing language processors 
ieee transactions software engineering november 

william maddox 
semantically sensitive 
master thesis university california berkeley 
ucb csd 

pattie maes 
concepts experiments computational reflection 
sigplan notices october 

jiri 
implementing patterns 
pattern languages program design chapter pages 
addison wesley 

guy steel jr common lisp language 
digital press nd edition 

daniel weise roger crew 
programmable syntax macros 
sigplan notices 
