public key infrastructure key distribution tinyos elliptic curve cryptography known implementation elliptic curve cryptography sensor networks bit mhz mica mote 
instrumentation uc berkeley tinysec module argue secret key cryptography tractable domain time remained need efficient secure mechanism distribution secret keys nodes 
public key infrastructure thought impractical argue analysis implementation tinyos multiplication points elliptic curves public key infrastructure fact viable tinysec keys distribution mica 
demonstrate public keys generated seconds shared secrets distributed nodes sensor network just kilobyte sram kilobytes rom 
wireless sensor networks proposed applications habitat monitoring structural health monitoring emergency medical care vehicular tracking demand combination authentication integrity privacy security 
unfortunately state art offered weak guarantees needs 
limited resources today sensor networks appear render ill suited straightforward implementations security protocols 
consider mica mote designed researchers university california berkeley fabricated crossbow technology device offers bit mhz atmega processor kilobytes kb primary memory sram kb program space rom 
device resources seemingly unfit computationally expensive energy intensive operations 
reason publickey cryptography ruled sensor networks infrastructure authentication integrity privacy security despite allowance secure rekeying mobile devices 
backed infrequently actual data 
fact knowledge little empirical research published viability public key infrastructure pki mica save cursory analysis david malan matt welsh michael smith division engineering applied sciences harvard university malan smith eecs harvard edu implementation rsa comparison rsa elliptic curve cryptography ecc fp 
fill void 
instrumentation tinyos demonstrate secret key cryptography tractable mica 
way implementation multiplication points elliptic curves argue pki secret keys distribution fact tractable 
public keys generated seconds sec shared secrets distributed just kb sram kb rom 
arguments section ii analysis tinysec tinyos existing secret key infrastructure mica 
section iii address shortcomings infrastructure look implementation diffie hellman mica discrete logarithm problem dlp expose weaknesses design sensor networks 
section iv weaknesses implementation diffie hellman elliptic curve discrete logarithm problem ecdlp 
section discuss optimizations underlying implementation 
section vi propose directions section vii explore related 
conclude section viii 
ii 
mica tinyos currently offers mica access control authentication integrity confidentiality tinysec security mechanism cipher block chaining mode 
bit symmetric cipher classified algorithm chip approved national institute standards technology nist encryption standard 
tinysec supports message authentication integrity message authentication codes confidentiality encryption access control shared group keys 
mechanism allows bit key space benefit known attacks require operations average assuming isn reduced rounds 
packets tinysec include byte message authentication code mac probability blind forgery security comes cost just bytes transmission byte plaintext cyclic redundancy check crc requires packet transmission plaintext ciphertext mac tinysec requires packet mechanism borrows tinyos fields group id tinyos weak default mechanism access control crc mac 
performance 
impact tinysec mica performance reasonable 
glance appear tinysec adds milliseconds ms packet transmission time table ms packet roundtrip time neighbor table ii 
apparent overhead tinysec microseconds sec average suggested transmission times nearly subsumed data root mean square sec 
roundtrip times exhibit variance tighter benchmarks order tinysec accurate analysis 
table iii offers results variance finer instrumentation tinysec encryption byte random payload requires sec average computation payload mac requires sec average tinysec adds sec packet computational requirements 
appears cycles subsumed delays scheduling medium access applications operating full duty 
fig 
results analysis mica throughput tinysec enabled puts mechanism computational overhead applications perspective average tinysec may lower throughput acknowledged packets packets second 
results appear line uc berkeley evaluation tinysec 
memory 
course tinysec encryption authentication come additional cost memory 
table iv tinysec adds application bss segment application data segment application text segment application maximal stack size execution 
applications don require entirety mica kb program memory kb primary memory tinysec viable addition 
security 
cipher shared secrets tinysec course vulnerable various attacks 
mica intended deployment sensor networks 
reasons cost logistics long term physical security devices 
compromise network reduces compromise node instance rekeying possible 
pairwise keys nodes cer tinysec allows bit keys current implementation relies bit keys extended bits padding 
table transmission times required transmit byte random payload averaged trials tinysec enabled 
transmission time defined time elapsed sendmsg send sendmsg 
implied overhead tinysec transmission time difference data means 
root mean square defined sw sw data standard deviations 
tinysec tinysec median sec sec mean sec sec standard deviation sec sec standard error sec sec implied overhead tinysec sec root mean square sec provide defense compromises individual nodes 
bit keys exhaust node sram small 
secret keys order secure dynamic establishment keys particularly networks positions sensors may transient requires chain infrastructure trust 
fact design tinysec requires rekeying 
tinysec byte initialization vector iv allows secure transmission message times bound may insufficient embedded networks lifespans demand longer lasting security 
needless say tinysec reliance single secret key prohibits mechanism securely rekeying 
fortunately problems secret keys distribution public key infrastructure 
sections follow explore options infrastructure design implementation mica 
iii 
dlp mica utility tinysec motivated mechanism costs exposed examine dlp diffie hellman answer mica problems secret keys distribution 
dlp typically involves recovery zp mod prime integer generator zp 
leveraging presumed dlp diffie hellman allows parties agree prior arrangement shared secret midst eavesdroppers perfect forward secrecy depicted fig 

authenticated exchanges allow secure transmission packets necessary modify tinysec longer writes mote address third fourth bytes mote iv 
actual throughput packets second throughput acked tinysec tinysec acked tinysec tinysec desired throughput packets second fig 

actual throughput versus desired throughput acknowledged acked unacknowledged transmissions sender receiver averaged minutes transmission level desired throughput desired throughput rate calls sendmsg send scheduled timer start 
acked actual throughput rate byte random payloads sender received subsequently acknowledged passive recipient 
actual throughput rate sender sent packets acknowledged rate calls sendmsg send processed 
clarity acked throughput begins diverge points labelled values actual throughput 
environments contention medium access higher throughput possible tinysec enabled 
table ii round trip times required transmit byte random payload tinysec enabled neighbor back averaged trials 
precisely round trip time defined time elapsed sendmsg send receive 
implied overhead tinysec round trip time difference data means 
root mean square defined sw sw data standard deviations 
tinysec tinysec median sec sec mean sec sec standard deviation sec sec standard error sec sec implied overhead tinysec sec root mean square sec possible station station protocol sts variant diffie hellman 
form diffie hellman nodes establish shared secret tinysec key 
issue cost establishment mica 
table iii times required encrypt byte random payload compute payload mac averaged trials 
implied overhead tinysec difference data means 
root mean square defined sw sw data standard deviations 
encrypt median sec sec mean sec sec standard deviation sec sec standard error sec sec implied overhead tinysec sec root mean square sec inasmuch goal hand distribution bit tinysec keys mechanism exchange provide security 
nist mica implementation diffie hellman employ modulus bits exponent private key bits table 
unfortunately bit architecture computations bit bit values inexpensive 
table iv memory overhead tinysec determined instrumentation application simply broadcasts counter values mica radio 
bss data segments consume sram text segment consumes rom 
stack defined maximum application stack size execution 
tinysec tinysec difference bss data text stack modular exponentiation intractable mica 
fig 
offers results instrumentation implementation diffie hellman mica computation mod generated bit integer bit prime requires sec average computation bit prime requires sec 
assuming generously nodes sharing key need packets time byte ivs exhausted computation yx mod node public key reasonable costs application longevity 
table vi details operations memory usage 
course measurements assume operation full duty cycle energy requirements may unacceptable mica lifetime decreases just days maximal duty cycle 
table vii reveals mica energy consumption modular exponentiation computation mod appears require roughly speaking mote devote lifetime computations 
course numbers improved hand optimization 
unfortunately computations require time memory 
mere storage public key requires bits modulus 
accordingly bit keys exhaust node sram small 
node need neighbors certificate authorities needs public keys diffie hellman relatively large key sizes unfortunate mica resource constrained environment 
key size fit single tinyos packet 
instance 
aa battery offers average capacity mah follows mah sec ma sec modular exponentiations possible aa batteries mica 
course bound generous mica effectively dies voltage drops volts 
fig 

typical exchange shared secret diffie hellman dlp 
table strength diffie hellman dlp various moduli exponents 
bit key strength equivalent bit key symmetric algorithm said provide bits security provide bits strength 
algorithm provides bits strength average take attack amount time required perform encryption plaintext value comparison result corresponding ciphertext value bits security modulus exponent iv 
ecdlp mica ecc secure distribution bit tinysec keys possible public keys fewer bits bits sufficient 
elliptic curves believed offer security computationally equivalent diffie hellman dlp remarkably smaller key sizes insofar subexponential algorithms exist dlp algorithm known thought exist ecdlp certain fields 
elliptic curves offer alternative foundation exchange shared secrets eavesdroppers perfect forward secrecy depicted fig 

ecdlp ecc typically involves recovery galois finite field ofk point elliptic curve smooth curve long form xy ai interest cryptographers curves fp prime appears vulnerable subexponential attack 
popular computation time seconds modular exponentiation bit modulus bit modulus exponent size bits fig 

time required compute mod prime mica 
table vi memory overhead modular exponentiation determined instrumentation implementation diffie hellman dlp mica computes mod bit integer prime 
bss data segments consume sram text segment consumes rom 
stack defined maximum application stack size execution 
bit modulus bit modulus bss data text stack extension fields composite degree vulnerable reduction weil descent ecdlp dlp curves 
binary extension field remains popular implementations ecc especially hardware allows particularly space algorithms 
light applications coding field received attention literature characteristics 
history mind proceeded implementation ecc smaller public keys mica 
elliptic curves turns equation simplifies xy ax substitution consider curves 
set solutions equation generally equation points provides foundation smaller public keys table vii energy consumption modular exponentiation determined instrumentation implementation diffie hellman dlp mica computes mod bit integer bit prime 
bit modulus bit exponent total time sec total cpu utilization cycles total energy joules fig 

typical exchange shared secret diffie hellman ecdlp 
mica 
remains specification algebraic structure set 
abelian group suffices requires provision binary operator offering closure associativity identity inversion commutativity 
suggested ecdlp definition operator addition 
addition points curve defined group abelian necessary define point infinity doubling point defined running time seconds size key bits fig 

running time tinyos module selected node random polynomial basis curve point private key computing node public key 
points labelled running times 
larger keys bit module failed produce results 
provided 
primitives point multiplication possible 
algebraic structure points elliptic curves defined implementation cryptosystem possible 
ecc implementation ecc requires choice basis points representation insofar written ai ai 
defined represented binary vector ap basis 
common bases polynomial bases normal bases dual triangular bases exist 
represented polynomial basis corresponds binary polynomial degree ap ap ai 
accordingly represented mica sram bit string ap ap 
operations elements performed modulo irreducible reduction polynomial degree fi 
typically irreducible trinomial xp xk exists chosen smallest trinomial exists chosen xp xk minimal minimal minimal 
polynomial basis addition elements defined ci ai bi mod sequence xors 
multiplication defined aixi mod 
selected polynomial basis implementations point multiplication mica tends allow efficient implementations software 
implementation implementation ecc mica tinyos module code michael implementing elliptic curve cryptography popular starting point implementation ecc ultimately reinforced prevailing wisdom failure 
selected random curve form equation 
selected random point curve random node private key 
computed node public key 
code implementation employed number optimizations 
addition points implemented accordance multiplication points followed koblitz conversion integers nonadjacent form accomplished 
generation sram consumption bytes primary memory bss data stack size key bits fig 

primary memory tinyos module polynomial basis selected node random curve point private key computing node public key 
sizes bss data segments fixed execution stack defined maximum application stack size execution 
keys bits exhaust mica kb sram 
pseudorandom numbers achieved 
glance results fig 
encouraging generation bit keys requiring just sec 
unfortunately larger keys bit module failed produce results causing mote reset result stack overflow 
module functions recursive utilized deal memory multi word arithmetic 
fig 
offers results analysis usage sram 
second implementation optimizations failed render generation bit keys possible popular implementation proved necessary realization bit keys 
inspired design technologies limited java similarly implements ecc far greater success 
selects node alice private key ka polynomial basis computing koblitz curve base point alice public key ta 
alice public key broadcasted byte payloads node bob secure communication desired 
provided alice receives bob public key tb bob manner compute shared secret ka kb kb bob private key 
desired secret compliance standard elliptic curve key agreement scheme diffie hellman dh 
multiplication points achieved algorithm iv blake addition points achieved algorithm pez 
multiplication elements implemented algorithm pez inversion implemented algorithm 
rendering bit public keys feasible shortcoming 
inasmuch selects curves random risks albeit exponentially small probability selection supersingular curves vulnerable sub exponential attack mov reduction index calculus methods 
obeys nist recommendation ecc selecting results reduction polynomial xy curve order number points cc ef point gx gy gx fe bbc de eee gy fb ff 
ultimately employ memory table viii running time diffie hellman dlp keys order magnitude smaller size secure 
time required generate private public key pair module averaged trials just sec standard deviation sec 
time required generate shared secret private key public key averaged trials sec standard deviation sec 
short distribution shared secret involves just minute computation node total 
table ix details module energy consumption 
performance prove unacceptable applications pki appears quite reasonable infrequent distribution tinysec keys 
link source code offered appendix 
discussion average running time roughly seconds point multiplication result iterations optimization 
fact module initially clocked minutes computation reasonable bound 
sure spent cycles unnecessarily recomputing terminal condition loop 
waste obvious 
apparent nesc compiler certain loops simply better iterating high low low high expected lengths table viii memory usage versus 
obtain significantly bits security reasonable footprint memory 
bss data segments consume sram text segment consumes rom 
stack defined maximum application stack size execution 
increase rom consumption result additional functionality 
bit key bit key bss data text stack table ix energy consumption tinyos module allows nodes generate public private keys exchange shared secret generation node public private keys 
private key generation public key generation total time sec sec total cpu utilization cycles cycles total energy joules joules various multi precision intermediates 
loops proved better manually unrolled 
handle multi precision bit shifts generalized implementation able shave seconds running time special casing common shifts left shifts bit bits albeit cost larger bss segment 
consider inlining disabled current version module induces hundreds thousands function calls largely result module requirement arithmetic 
slightest improvements function performance effect significant gains 
course optimizations grounded published theoretical results 
substitution algorithm algorithm pez offered seconds improvement implementation algorithm pez 
art hand optimizations infrequently deployed modern systems proved remarkably helpful necessary environment constrained mica 
vi 
ecc performance mica opportunities remain 
reduction module running time source assembly level enhancements course interest 
worthy consideration versions module normal basis advantage implementation ands xors cyclic shifts beneficiaries multiplication squaring 
reason normal bases tend popular implementations ecc hardware 
value hybrid polynomial normal bases thought leverage advantages simultaneously 
course suggests module offer better performance re implemented fp especially expensive inversions avoided projective opposed affine coordinates 
relatively efficient algorithms exist modular reduction barrett selection generalized number allow modular reduction executed efficient sequence additions mod 
performance aside reliance tinyos module troubling cryptographically pseudo random number generator relies solely mote unique id seeding physical source randomness 
implementation superior necessary module security 
truly random bits captured sources local sensor readings interrupt packet arrival times physical sources 
vii 
related studied mathematicians century elliptic curves claim significant coverage literature 
ecc received attention discovery 
particular relevance woodbury recommendation optimal extension field bit processors 
jung propose supplementary hardware avr implementing operations binary fields 
handschuh paillier propose cryptographic coprocessors smart cards woodbury describe ecc smart cards coprocessors 
albeit different target hasegawa provide small fast implementation ecc software fp bit microcomputer 
call ecc bit keys mobile ad hoc networks 
describe implementation ecc bit ti msp family microcontrollers 
offer implementation ecc palm os brown offer research motion rim pager 
zigbee hand shares aim wireless security sensor networks albeit ecc aes shared key protocol 
recommendations ecc parameters abound academics corporations government 
number implementations ecc software freely available particularly suited mica small part memory requirements 
offers implementation ecc polynomial normal bases 
ecc lib pegwit offer implementations polynomial bases 
provides additional option curves fp 
crypt focuses fp 
technologies limited offers implementations ecc polynomial bases java respectively 
implementation polynomial basis available 
viii 
despite claims contrary public key infrastructure appears viable mica certainly infrequent distribution shared secrets 
implementation ecc kb primary memory bit mhz device offers room optimization minute worth computation transmissions day week reasonable re keying 
need pki success mica clear 
tinysec shared secrets allow efficient secure communications nodes 
devices sensor networks physical security require mechanism secret keys distribution 
offers equivalent security lower cost memory bandwidth diffie hellman dlp public key infrastructure key distribution elliptic curves apt viable choice tinyos mica 
material supported national science foundation 
duncan mark michael mitzenmacher victor harvard university assistance 
appendix source code available download www eecs harvard edu malan 
cerpa elson estrin girod hamilton zhao habitat monitoring application driver wireless communications technology 
lynch kenny law lei tiered wireless sensor network architecture structural health monitoring spie th annual international symposium smart structures materials march 
vital dust wireless sensor networks emergency medical care www eecs harvard edu proj 
nest challenge architecture august 
crossbow technology mica wireless measurement system www com products product pdf files wireless pdf mica pdf 
karlof sastry wagner tinysec link layer security tiny devices www cs berkeley edu tinysec 
perrig stankovic wagner security wireless sensor networks communications acm vol 
pp 
june 
perrig szewczyk wen culler tygar spins security protocols sensor networks mobile computing networking pp 

karlof sastry wagner tinysec link layer security architecture wireless sensor networks baltimore maryland second acm conference embedded networked sensor systems november 
lightweight security wireless networks embedded systems www bbn com projects lws nest bbn nest apr 
ppt may 
patel wander comparing elliptic curve cryptography rsa bit cpus boston massachusetts th international workshop cryptographic hardware embedded systems august 
computer security division kea algorithm specifications national institute standards technology may 
national institute standards technology federal information processing standards publication encryption standard ees february 
online 
available www itl nist gov fip htm biham shamir cryptanalysis reduced rounds impossible differentials lecture notes computer science vol 
pp 

online 
available citeseer nj nec com biham cryptanalysis html naveen sastry university california berkeley personal correspondence 
diffie hellman new directions cryptography ieee transactions information theory vol 
pp 

online 
available citeseer nj nec com diffie new html diffie van oorschot wiener authentication authenticated key exchanges designs codes cryptography vol 
pp 

national institute standards technology special publication recommendation key management january 
online 
available csrc nist gov kms guideline jan pdf bbn technologies diffie hellman july 
battery engineering datasheet 
data com library primary alkaline consumer oem pdf 
perlman computer science 
adleman subexponential algorithm discrete logarithm problem applications cryptography proc 
th ieee 
comp 
sci 
symp pp 

gordon discrete logarithms gf number field sieve siam 
math vol 
pp 

lamacchia odlyzko computation discrete logarithms prime fields lecture notes computer science vol 
pp 

online 
available citeseer nj nec com lamacchia computation html rabin signatures public key functions intractable factorization mit tech 
rep mit lcs tr 
remarks security elliptic curve cryptosystem www engg susx ac uk fft crypto pdf july 
hess smart constructive destructive facets weil descent elliptic curves tech reports ps gz department computer science university bristol tech 
rep cstr october 
koblitz elliptic curve cryptosystems mathematics computation vol 
pp 

miller uses elliptic curves cryptography lecture notes computer science advances crypto 
berlin springer verlag pp 

frey disguise elliptic curve weil descent ecc september 
implementation options finite field arithmetic elliptic curve cryptosystems invited presentation rd workshop elliptic curve cryptography ecc november 
gordon survey fast exponentiation methods algorithms vol 
pp 

online 
available citeseer nj nec com gordon survey html pez overview elliptic curve cryptography institute computing university campinas paulo brazil tech 
rep may 
elliptic curve cryptography faq nd www 
com elliptic htm december 
implementing elliptic curve cryptography ed 
manning publications 
malley spatscheck fast key exchange elliptic curve systems lecture notes computer science vol 

online 
available citeseer nj nec 
com fast html koblitz cm curves cryptographic properties advances cryptology crypto pp 

improved algorithm arithmetic family elliptic curves advances cryptology crypto pp 

mother random generators ftp ftp 
com pub mother october 
technologies limited technologies com products html august 
microprocessor committee ieee standard specifications public key cryptography ieee computer society january 
blake smart elliptic curves cryptography lms lecture note series vol 

pez high speed software multiplication institute computing university campinas paulo brazil tech 
rep may 
hernandez menezes software implementation elliptic curve cryptography binary fields lecture notes computer science vol 

online 
available citeseer nj nec com software html menezes vanstone okamoto reducing elliptic curve logarithms logarithms finite field proceedings annual acm symposium theory computing 
acm press pp 

silverman suzuki elliptic curve discrete logarithms index calculus asiacrypt advances cryptology asiacrypt international conference theory application cryptology 
lncs springer verlag 
national institute standards technology recommended elliptic curves federal government csrc nist gov dss ecdsa pdf july 
dl implementation options elliptic curve cryptography www teaching cc pdf april 
montgomery modular multiplication trial division mathematics computation vol 
pp 

barrett implementing rivest shamir adleman public key encryption algorithm standard digital signal processor advances cryptology crypto odlyzko ed vol 

generalized mersenne numbers citeseer nj nec com generalized html university waterloo tech 
rep corr 
woodbury efficient algorithms elliptic curve cryptosystems embedded systems www wpi edu pubs etd available etd unrestricted pdf september 
jung ernst bl mel reconfigurable system chip implementation elliptic curve cryptography gf ece gmu edu crypto ches talks files jung ppt 
handschuh paillier smart card crypto coprocessors public key cryptography lecture notes computer science ser 
smart card research applications 
quisquater schneier eds 
springer verlag pp 

woodbury bailey elliptic curve cryptography smart cards coprocessors bristol uk fourth smart card research advanced applications conference september 
hasegawa nakajima matsui small fast software implementation elliptic curve cryptosystems gf bit microcomputer ieice trans 
fundamentals vol 
pp 
january 
callaway security design general purpose self organizing multihop ad hoc wireless network george mason university fairfax virginia acm workshop security ad hoc sensor networks october 
bl mel krieger efficient implementation elliptic curve cryptosystems ti msp family microcontrollers pkc kim ed korea pp 

elliptic curve cryptography palm os device sydney australia th australasian conference information security privacy july 
brown cheung hernandez menezes pgp constrained wireless devices proceedings th usenix security symposium 
usenix association august 
zigbee alliance www zigbee org 
lenstra selecting cryptographic key sizes october 
standards efficient cryptography group www org 
ecc lib library elliptic curve cryptography www gr faculty software ecc lib 
pegwit groups yahoo com group pegwit files 
integer rational arithmetic library indigo elliptic 
denis org 
net 
