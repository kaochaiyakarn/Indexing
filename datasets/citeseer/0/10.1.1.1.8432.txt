appeared sigact linear logic patrick lincoln lincoln csl sri com sri stanford university linear logic linear logic introduced girard 
results supported girard claims linear logic resource conscious logic 
increasingly computer scientists recognized linear logic expressive powerful logic deep connections concepts computer science 
expressive power linear logic evidenced natural encodings computational models petri nets counter machines turing machines 
note presents intuitive overview linear logic theoretical results interesting applications linear logic computer science 
introductions linear logic may 
linear logic vs classical intuitionistic logics linear logic differs classical intuitionistic logic fundamental ways 
classical logic may viewed deals static propositions world proposition true false 
static nature propositions classical logic may duplicate propositions implies 
implicitly learn 
may discard propositions implies proposition thrown away 
sentences valid classical logic linear logic sentences valid 
linear logician ask second come go 
course questions classical setting propositions assumed static unchanging facts world 
hand rules linear logic imply linear propositions stand dynamic properties finite resources 
example consider propositions conceived resources delta dollar delta pack delta pack consider axiomatization vending machine implies implies classical intuitionistic logic able deduce implies may read dollar may buy pack pack 
deduction valid classical logic nonsense intended interpretation propositions resources buy packs cigarettes dollar vending machine described 
paradox arises confusion classical intuitionistic logic kinds conjunction intuitively meaning written linear logic omega meaning choice written linear logic 
linear logic avoids paradoxes distinguishing kinds conjunction kinds disjunction introducing modal storage operator explicitly marks propositions arbitrarily reused 
linear negation involutive constructive 
fascinating aspects linear logic 
linear logic multiplicative conjunction omega stands proposition time 
linear logic additive conjunction stands choice 
dually disjunctions 
multiplicative disjunction written ab stands proposition 
disjunction easily understood considering linear implication gammaffib defined formula gammaffib thought derived exactly 
additive disjunction phi stands possibility don know 
choice 
connectives unit unit omega gammaffi omega omega 
unit unit unit phi 
exponentials complete logic modal storage operator 
course dual 

formula may thought printing press generate number 
example government thought dollars doesn need balance budget citizens dollars balance budgets 
example illustrate linear connectives modal operators example inspired girard lafont 
suppose fixed price restaurant provide hamburger coke french onion soup salad choice pie ice cream choice 
may encode information linear logic formula menu fixed price menu omega omega omega omega hamburger gammaffi coke omega omega omega omega phi french eat onion soup salad pie ice cream depending availability sequent calculus notation linear logic entire set gentzen style sequent rules linear logic note 
explained rules define conjunctions disjunctions modal constant operators 
add quantifiers form higher order linear logic restrict attention propositional linear logic 
sequent calculus notation due gentzen uses roman letters propositions greek letters sequences formulas 
sequent composed sequences formulas separated turnstile symbol 
may read sequent delta gamma asserting multiplicative conjunction formulas delta imply multiplicative disjunction formulas gamma 
sequent calculus proof rule consists set hypothesis sequents displayed horizontal line single sequent displayed line hypothesis hypothesis connections logics interesting features linear logic arise absence rules contraction weakening 
classical intuitionistic logic rules allowed weakening left delta sigma delta sigma delta gamma delta gamma contraction left direct affine logic share linear logic elimination contraction rule propositions arbitrarily copied 
logics allow weakening 
relevance pertinent logic disallow weakening allow contraction propositions arbitrarily discarded copied 
pertinent logic decidable relevance logic adds distributivity axiom absent linear logic relevance logic undecidable 
linear logic disallows weakening contraction general allowed modal 
formulas 
linear logic arose partly study intuitionistic implication 
girard intuitionistic implication decomposed separate connectives gammaffib 
girard showed translate intuitionistic classical logic linear logic directly simply appending modals certain subformulas making right choice sort conjunction disjunction 
see glimpse substance slogan linear logic logic logics 
connections computer science excitement linear logic logic theoretical computer science community 
excitement stems ability capture difficult resource problems logically 
example linear logic provides natural simple encoding petri net reachability 
linear logic formula omega gammaffi may encode petri net transition tokens place adding token place similarly formula omega omega gammaffi omega may seen transition token tokens adding token transitions graphically delta delta delta delta delta delta delta gamma gamma gamma psi gamma gamma gamma gamma psi upsilon sigma ffl ffl ffl ffl omega gammaffi omega omega gammaffi omega encode petri net transitions reusable linear implications 
tokens represented atomic propositions reachability problem may sequent omega gammaffi omega omega gammaffi omega sequent provable linear logic sequence petri net rule applications transform token set fa dg fc dg 
connection studied extended cover models concurrency 
linear logic applied areas computer science 
key application resource sensitive aspect logic development functional programming language implementation garbage collection replaced explicit duplication operations linear logic 
attempted find linear logical basis optimizations lazy functional programming language implementations concentrating linear logic type system :10.1.1.24.7472:10.1.1.53.3438
applications include analyzing control structure logic programs generalized logic programming natural language processing 
natural characterization polynomial time computations bounded version linear logic obtained limiting reuse specified bounds bounding number datum memory 
turn attention questions theoretical nature 
complexity results linear logic propositional linear logic known expressive time thought decidable 
propositional linear logic shown undecidable :10.1.1.1.8163
complexity results including pspace completeness propositional linear logic :10.1.1.1.8163
key open complexity problem decision problem omega fragment linear logic 
equivalent fragment omega gammaffi suffices encoding petri net reachability questions shown expspace hard 
currently unknown multiplicative exponential fragment linear logic decidable 
undecidability propositional linear logic full proof undecidability sketched 
proof undecidability full linear logic proceeds reduction form alternating counter machine propositional linear logic 
branching counter machine acm nondeterministic machine finite set states 
configuration triple hq bi state natural numbers values counters 
acm finite set instructions kinds increment increment decrement decrement fork 
increment decrement instructions operate standard counter machines 
fork instruction causes machine split independent machines state hq bi machine transition results machines hq bi hq bi 
instantaneous description set machine configurations accepting machine configurations final state counters zero 
acm undecidable halting problem 
may notice acm essentially alternating petri nets 
convenient acm opposed standard counter machines show undecidability zero test natural counterpart linear logic natural counterpart fork additive conjunction 
remaining acm instructions may encoded techniques similar petri net encoding described earlier 
linear logic great control resources elimination weakening contraction explicit addition modal operator 
logic quantifiers combination features yields great deal expressive power 
complexity fragments linear logic pspace completeness linear logic multiplicative additive fragment linear logic mall excludes reusable modals 
formula branch cut free mall proof 
non cut mall rule hypothesis sequent smaller number symbols sequent 
provides immediate linear bound depth cut free mall proofs 
mall enjoys cut elimination property nondeterministic pspace algorithm decide mall sequents 
show mall pspace hard encode classical quantified boolean formulas qbf 
simplicity may assume qbf prenex form 
quantifier free formula may encoded truth tables quantifiers difficulty 
may encode quantifiers additives phi 
encoding incorrect behavior respect quantifier order multiplicative connectives enforce ordering encoding quantifiers achieve soundness completeness 
full proof pspace completeness 
np completeness multiplicative linear logic multiplicative fragment linear logic contains connectives omega gammaffi equivalently omega set propositions constants 
decision problem fragment np entire cut free multiplicative proof may guessed checked polynomial time 
decision problem np hard reduction partition problem requires perfect partitioning groups objects way linear logic requires complete accounting propositions 
somewhat surprisingly alternate encoding partition multiplicative linear logic propositions constants connectives omega gammaffi 
multiplicative constant fragment linear logic np complete 
full proof np completeness 
summary linear logic complexity table summarizes results far achieved study complexity decision problems fragments linear logic 
fragments listed discussed detail full propositional logic propositional fragment modals 
mall 
decidability problem question 
encoding petri net reachability problems fragment studied expspace hard petri net reachability known decidable 
known expressive fragment linear logic 
fourth fragment containing multiplicative connectives np complete 
connectives linear logic fragment complexity omega phi 
undecidable omega phi pspace complete omega :10.1.1.1.8163
unknown omega np complete summary linear logic expressive logic intrinsic accounting resources 
non classical logic linear logic pleasant features cut elimination involutive negation 
practical mileage gained resource sensitivity linear logic encode difficult problems propositional fragment linear logic 
current progressing exploit unique features linear logic type system study computational complexity compiler optimization techniques uses logic programming natural language processing concurrency 
contributions developing linear logic theoretical curiosity tool practical mainstream computer science 
abramsky 
computational interpretations linear logic 
theoretical computer science 
special issue workshop math 

prog 
semantics 
appear 
abramsky vickers 
quantales observational logic process semantics 
preprint january 

andreoli 
logic programming focusing proofs linear logic 
draft 

andreoli pareschi 
linear objects logical processes built inheritance 
proc 
th international conference logic programming jerusalem may 
asperti 
logic concurrency 
technical report dipartimento di informatica universit di pisa 
asperti 
ferrari gorrieri 
formulae proofs computations analogy 
proc 
th acm symp 
principles programming languages san francisco pages january 

linear semantics allowed logic programs 
proc 
th ieee symp 
logic computer science philadelphia june 
chirimar gunter riecke 
linear ml 
lisp functional programming 
appear 
gunter 
normal process representatives 
proc 
th ieee symp 
logic computer science philadelphia june 
gentzen 
collected works 
edited szabo 
north holland amsterdam 

girard 
linear logic 
theoretical computer science 

girard 
la logique lin 
pour la science edition de scientific american april 

girard scedrov scott 
bounded linear logic modular approach polynomial time computability 
buss scott editors feasible mathematics mathematical sciences institute workshop ithaca new york june pages 
birkhauser boston 
appear tcs 
gunter 
nets tensor theories 
de michelis editor proc 
th international conference application theory petri nets bonn pages 
guzman hudak 
single threaded polymorphic lambda calculus 
proc 
th ieee symp 
logic computer science philadelphia june 
hodas miller 
logic programming fragment intuitionistic linear logic 
proc 
th annual ieee symposium logic computer science amsterdam pages 
ieee computer society press los alamitos california july 
full appear information computation 

multiplicative fragment linear logic np complete 
technical report institute language logic information june 

horn programming linear logic np complete 
proc 
th annual ieee symposium logic computer science santa cruz 
ieee computer society press los alamitos california june 
weyhrauch 
decidable fragment predicate calculus 
theoretical computer science 
kosaraju 
decidability reachability vector addition systems 
proc 
th acm symp 
theory computing pages 
lafont 
linear machine 
theoretical computer science 
lafont 
interaction nets 
proc 
th acm symp 
principles programming languages san francisco pages january 
lambek 
mathematics sentence structure 
amer 
math 
monthly 
lambek 
categorial grammar bilinear logic 
draft 
lincoln mitchell 
operational aspects linear lambda calculus 
proc 
th annual ieee symposium logic computer science santa cruz 
ieee computer society press los alamitos california june 
lincoln mitchell scedrov shankar :10.1.1.1.8163
decision problems propositional linear logic 
proc 
st ieee symp 
foundations computer science pages 
lincoln mitchell scedrov shankar 
decision problems propositional linear logic 
technical report sri csl csl sri international 
appear annals pure applied logic 
lincoln winkler 
constant multiplicative linear logic np complete 
draft 
mackie 
functional programming language linear logic 
master thesis imperial college london 
mart oliet meseguer 
petri nets linear logic 
springer lncs ed 
pitt 

mayr meyer 
complexity word problems commutative semigroups polynomial ideals 
advances mathematics 
meyer 
topics modal valued logic 
phd thesis university pittsburgh 
minsky 
recursive unsolvability post problem tag topics theory turing machines 
annals mathematics 
hearn 
linear logic interference control 
th conf 
category cs 
pratt 
event spaces linear logic 
proc 
second international conference algebraic methodology software technology 
springer verlag 
scedrov 
brief guide linear logic 
bulletin european assoc 
theoretical computer science june 
urquhart 
undecidability entailment relevant implication 
journal symbolic logic 

language action 
north holland 
wadler 
linear logic 
appear acm ifip pepm 
wadler 
substitute linear logic 
draft 
wakeling runciman 
linearity laziness 
proc 
th acm conference functional programming languages computer architecture 
springer verlag 
definition linear negation delta delta omega delta ab delta omega phi delta delta phi delta delta delta delta delta delta sequent calculus rules linear logic identity gamma sigma gamma sigma gamma gamma sigma sigma cut exch 
left gamma gamma sigma gamma gamma sigma gamma sigma sigma gamma sigma sigma exch 
right omega left gamma sigma gamma omega sigma gamma sigma gamma sigma gamma gamma omega sigma sigma omega right gammaffi left gamma sigma gamma sigma gamma gamma gammaffib sigma sigma gamma sigma gamma gammaffib sigma gammaffi right left gamma sigma gamma sigma gamma gamma sigma sigma gamma sigma gamma sigma right left gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma right phi left gamma sigma gamma sigma gamma phi sigma gamma sigma gamma sigma gamma phi sigma gamma phi sigma phi right gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma gamma sigma left gamma sigma gamma sigma gamma sigma gamma sigma right left gamma sigma gamma sigma right left gamma sigma gamma sigma right left gamma sigma gamma sigma right 
