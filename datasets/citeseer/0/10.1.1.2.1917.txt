bayesian packet loss detection tcp tcp critical tasks determine packets lost network basis control actions ow control packet retransmission 
modern tcp implementations mechanisms timeout fast retransmit 
detection timeout necessarily timeconsuming operation fast retransmit quicker effective small fraction packet losses 
consider problem packet loss detection tcp generally 
concentrate fact tcp control actions necessarily triggered inference packet loss conclusive knowledge 
suggests analyze tcp packet loss detection standard inferencing framework probability detection probability false alarm 
contributions study example general packet loss inference optimal bayesian packet loss detection round trip time 
show long lived ows frequently possible achieve high detection probability low false alarm probability measured round trip time 
second construct analytic performance model incorporates general packet loss inference tcp 
show realistic detection false alarm probabilities achievable bayesian detector moderate packet loss rates general packet loss inference tcp improve throughput 
index terms queuing theory performance evaluation network measurements detection packet loss core modern tcp implementations 
tcp works cycle increases utilization network resources gradually limit packets dropped point tcp backoff sending rate retransmit lost packets cycle 
tcp detects packet loss mechanisms waits timeout retransmission timer waits arrival dupacks acks sequence number receiver 
rst mechanism necessarily time authors boston university computer science department 
email crovella cs bu edu 
supported nsf ani ccr ani 
performed crovella laboratoire informatique de paris lip support centre national de la recherche scienti que cnrs france sprint labs 
fonseca mark crovella ing retransmission timer set high enable network recover severe congestion events avoid unnecessary timeouts caused transient network conditions 
second mechanism faster assumes packet receives usually dupacks lost reordered packet may cause receiver generate dupacks 
tcp control actions necessarily triggered inference packet loss conclusive knowledge 
retransmission timer mechanism detect packet losses generates false positives fast retransmit mechanism may detect packet losses may generate false positives 
propose leverage tcp inference mechanisms bayesian framework round trip delay measures simply rtt 
inference framework phenomenon illustrated 
remember rtt sum propagation transmission queuing delays 
second tcp sends sequence back back packets put queue bottleneck link 
queue room packets front sequence put queue dropped 
assuming fifo queue 
event packet loss successfully transmitted packet experience high delay wait transmission queue full packets 
case illustrated sequence packets 
hand event packet reordering packet transmitted sequence may experience high delay reason reordering event buffer ow 
cause related network structure multi channel paths load balancing 
case illustrated sequence packets 
phenomenon may captured conditional probability density functions 
interested conditions hypotheses packet lost reordered 
conditional probability density function delay loss reordering 
particular delay value gives likelihood recommended retransmission timer second 
reorder loss fig 

illustration queue build phenomenon sis 
believe loss higher reordering high vice versa 
bayes rule possible invert conditional function order get 
gives way compute odds hypothesis particular value encoded sequence observations 
typical inference problem casted bayesian framework 
task hand need models delay hypothesis loss reordering 
models encoded conditional density functions 
unfortunately shelf models delay tcp factors network topology time day degree multiplexing may change characteristics rtt 
section iv look different techniques estimate distribution rtt conditioned loss reordering 
dupack arrives sender computes odds hypothesis current previous rtt measurements 
loss inferred tcp triggers fast retransmit 
propose substitute current tcp mechanisms packet acknowledged retransmission timer expires tcp trigger slow start dupacks arrive packet tcp trigger fast retransmit 
evaluate framework traces real tcp traf collected front web server university campus routers located different points middle internet 
ltering relevant connections classify packets dupacks received lost reordered unknown 
connection emulate tcp sender uses bayes detector infer packet losses compare output inference mechanism ine classi cation 
nd fraction losses detected inference mechanism range fraction reordered packets misclassi ed lost rage 
ask question bene detector tcp 
section answer extending model tcp developed padhye possible calculate throughput tcp 
nd kind detectors obtained fair conditions loss reordering rates respectively improvement throughput tcp 
rest organized follows 
related section ii 
traces evaluate bayes framework section iii 
section iv bayes framework techniques estimate delay distributions performance bayes detector obtained 
extended tcp model evaluation section conclude vi discussion applicability 
ii 
related packet loss detector proposed resembles idea detector tcp vegas 
vegas includes simple packet loss detector delay 
arrival dupack vegas checks delay transmission rst unacknowledged packet delay larger ne grained timeout value updated ack packet assumed lost retransmitted 
performs test rst normal acks arrive sequence dupacks order recover losses happen close 
bayesian framework detect losses simple threshold test vegas 
bayesian framework similar evaluating tcp hybrid wired wireless networks objective distinguishing wireless losses caused link errors losses caused congestion 
liu observed differences location scale distributions rtt congestion losses wireless losses 
result proposed hidden markov model state characterized gaussian distribution rtt different mean variance 
state associated type loss training phase 
barman introduced explicit loss labeling mechanism tcp newreno 
observation rtt highly variable presence congestion loss 
exponentially weighted moving averages delay 
samples fall small range low variability sample falls range higher variability 
packet loss detected method counts times variable ewma threshold congestion loss inferred wireless loss inferred 
contrast trying distinguish nature packet loss presence packet loss se 
papers looked problem practical perspective 
number papers proposed new techniques improve tcp packet loss detection recover wrong detection 
papers compare versions tcp new technique terms throughput fairness different network conditions simulation experimentation 
contrast evaluating method simulation build analytic model resulting algorithm 
enables analyze impact different detectors tcp performance independently technique 
reasonable wonder round trip delay choice observable feature base bayesian packet loss detector 
fact variance rtt high rst observed paxson floyd con rmed large study conducted :10.1.1.134.20
may distribution delays different hypotheses appear alike loss versus reordering congestion versus wireless loss observation biaz vaidya rtt poorly correlated state single tcp connection going link shared ows presence intense cross traf 
notice case exploring correlation round trip delay network state single tcp connection state 
results performance achieved bayes detector described iv suggest round trip delay feature packet loss detector tcp fact viable 
iii 
datasets conduct study traces tcp connections include packet seen link 
nlanr collection traces part passive measure project simply pma 
call traces pma datasets 
collected tcp traces link directly front web server boston university unix 
call traces bu datasets 
main difference datasets location measurement point 
pma datasets collected machines middle path communicating tcp systems 
contrast bu datasets collected proxy host front web server quite close sender 
compute rtt pma traces technique described 
method estimates congestion dupacks fraction loss dupack bu bu bu pma buf pma mem pma mra pma table prior probability dupacks caused packet loss window tcp sender approximates rtt time difference transmission data packets transmission second triggered reception acknowledge rst 
case bu traces tcp sender close measuring host approximate rtt time difference transmission data packet arrival corresponding ack 
result quality rtt measurements bu traces better pma traces 
symmetric complete long interesting connections study 
connection said symmetric collecting point sees sides connection data packets ack packets 
way handshake tcp identify connections 
complete connection data packets corresponding acks establishment syn packet fin packet 
considered connection long interesting fty packets dupack 
table show number packets received duplicate acks fraction relation total number packets fraction duplicate acks caused packet loss 
rest dupacks caused reordered packets 
connections ltered packets classi ed approach similar described 
collect sides tcp conversation able classify packets classes successfully transmitted transmitted order retransmitted due loss 
fig 
show number connections able classify loss reordered events packets connections 
instance bu traces able nd loss event approximately connections average approximately connections reordering event bit connections simultaneously loss re average connections events bu traces loss reordering average connections events pma traces loss reordering bu traces pma traces average packets events bu traces loss reordering average packets events pma traces loss reordering fig 

breakdown dupack loss reordering events ordering event 
observe connection loss event approximately independent reordering event 
observe datasets connections small number loss reordering events example half connections loss reordering event events 
observe pma dataset proportionally reordering events bu dataset 
attribute difference causes 
order packet loss classi ed needs valid rtt measure immediately 
pma traces obtaining valid rtt measure loss dif cult bu dataset measurement point middle path 
second known causes packet reordering related network physical properties conjecture pma traces collected network causes packet reorderings case bu dataset 
iv 
bayesian inference section evaluate packet loss inference mechanism tcp bayesian framework distribution rtts packets immediately precede loss event need detect 
order gauge existence phenomenon depicted fig 
investigated distribution rtts 
fig 
show histograms rtt distribution tcp connections 
left fig 
plot histograms rtts packets immediately preceded packet frequency frequency rtt lost packets delay ms connection bu dataset rtt lost packets delay ms frequency frequency rtt reordered packets delay ms snoop rtt reordered packets delay ms pma buf connection pma dataset fig 

rtt histograms conditioned loss reordering events normalized distance median median pma dataset snoop dataset fig 

normalized distance distribution rtts loss right plot packets immediately preceded reordering event 
see fair amount mass case packet loss larger rtt values case reordering events 
large values correspond packets put queue just packet ow dropped due buffer ow 
case lost packets small values rtt may correspond packets intermixed burst packets ows turn caused packet drop 
evident fig 
respective distributions rtt event packet loss reordering different 
possible quantify difference normalized distance distributions rtts hypotheses denoted rt loss rt reordering var rt loss var rt reordering higher distinct distributions easier problem detecting 
statistics quantity plotted fig 
connections datasets 
boxes delimit th th percentiles line inside box gives median distribution whiskers outside box mark minimum maximum values small circles outliers 
notice fig 
statistic low datasets expect detection process dif cult 
bayes detector components bayes detector 
process generates events interested 
interested causes dupacks 
possible causes dupack generated packet loss reordering event 
thing need know process probability loss pl hypotheses probability reordering simply pl second measurement process 
chosen rtt measurement distinct distribution hypothesis illustrated fig 

random variable describes rtt packet represent event packet lost event packet reordered 
measurement processes need conditional probability distributions functions pieces bayes detector 
piece bayes detector decision rule 
decision rule simply maps value rtt hypotheses 
bayes detector optimal decision rule minimizes bayes risk 
bayes risk function decision taken detector delay value packet actual event happened packet 
typical cost assignment penalty right decisions high penalty wrong decisions bayes cost tunable tcp aggressive adapt network persistent reordering example 
fore cost assignment bayes cost prob 
causes dupacks network duplicates unnecessary retransmissions 
rare ignored dupacks generated discarded simply looking packet sent 
loss reordering event generate dupack packet sent 
prob denotes probability detector assigns label event actual event happened 
prob function random variables delay actual event rewrite bayes risk conditional densities minimize 
xed value rtt decision rule deterministic function maps value rtt hypotheses 
optimal decision rule minimize bayes risk rtt assigns loss event particular rtt bayes risk prob assigns reordering event bayes risk prob 
applying bayes rule invert conditioning doing algebra manipulation write optimal decision rule pl pl symbol means decision rule sign loss event particular rtt value left side equation larger right side assign reordering event 
inequality known likelihood ratio test 
left side inequality quantities need estimate connection right side inequality seen tunable cost parameter detector 
intuition understand detector uses equation follows 
estimates conditional densities estimate probability loss pl cost parameter 
dupack arrives packet measure rtt evaluate conditional density functions rtt compute likelihood ratio 
likelihood ratio larger cost ratio packet loss detected tcp trigger fast retransmit tcp 
increases likelihood packet loss event need grow larger compared likelihood reordering event order detect packet loss 
hand decrease favor inference packet loss events 
change decision rule changed detector behave differently 
iv show performance detector changes change cost parameter 
probability density function estimation move evaluate performance type detectors obtain need way estimate conditional probability densities events loss reordering 
explore techniques naive approach discrete histograms nonparametric estimation technique parametric estimation technique 
histogram simplest method estimate probability mass function 
total number samples taken distribution bin size de ne function simply yi parzen method parzen method estimates conditional densities summing common kernel function placed sample point evaluated point interest say gaussian kernel set delay measurements parzen smooth parameter known bandwidth 
computation probability density bn exp bayesian method disadvantages previous methods need see delay samples estimate probability density function 
connections datasets loss reordering event events great number connections bene methods 
bayesian method possible encode prior belief events making possible estimate probability event seeing data 
note case bayesian statistics form inferences parameters detector distinct bayes rule detector 
key distinction bayesian method previous methods case parameters estimated assumed random variables 
equipped probability distributions assign probability distribution prior data observed 
bayes rule invoked time new data arrives allowing informed progression initial prior updated distribution re ecting learned data 
bayesian statistical approach assume distribution rtt gaussian unknown parameters mean variance respectively 
express likelihood function real variable round trip delay 
making gaussian assumption delay justi ed number reasons real distribution delay gaussian assumption capture location mass distribution important just seek way distinguish hypotheses 
second gaussian best done simple statistics sample mean variance 
nally gaussian attractive mathematical properties provide computationally ef cient way update estimate new data available tcp connection 
point comes fact gaussian conjugate prior distribution functions true values known priori 
believe hypothesis packet loss mean variance large hypothesis packet reordering mean small 
belief expressed form prior distributions 
way encoding incorporating engineering knowledge typical behavior rtt hypotheses 
chosen conjugate prior distributions follows mean follows normal distribution variance follows inverse chi square distribution inv 
dependence mean variance prior distribution justi ed observations variability rtts noted connections larger delays experience larger delay variance 
strength bayes method provides way samples rtt improve estimation parameters distribution 
express dependence parameters data conditional distribution bayes rule write posterior formally class likelihood functions class prior distributions class conjugate general conjugate function allows treating additional data incrementally just replacing prior function posterior function new data seen 
distribution inv model shown denotes number observations subscript denotes parameter estimate th observation equations show suf cient statistics sample mean sample variance available tcp 
notice easy incorporate new data example simply equal 
far way estimate distribution parameters probability density function 
needed detector way evaluate function particular values delay parameters estimate seeing data 
order evaluate expression 
rst factors integral just normal distribution unknown parameters doesn depend 
result integration form student distribution 
data seen evaluate prior distribution posterior distribution 
form conjugacy property 
need substitute initial parameters equation summarized table ii 
discussion methods available data improve estimates 
advantage bayesian approach able form estimate probability density function seeing samples 
advantage needs keep record sample mean sample variance distribution samples 
hand advantage histogram parzen methods distributions closely matched data estimates precise 
parameter loss event reordering event ms ms table ii initial parameters prior distributions presenting methods ready compare performance respect detection accuracy terms probability detection pd probability false alarm pf 
detector performance section performance detectors obtained techniques described 
clearly performance detector related quality estimation conditional distributions comparing detector performance able compare techniques density estimation 
performance detector evaluated quantities bellow pd pr choose loss loss true pf pr choose loss reordering true clearly detector high probability detection pd low probability false alarm pf 
varying bayes cost parameter obtain range settings detector trade detection probability false alarm probability 
resulting socalled roc curves detectors shown fig 

gure plot weighted average pd pf connections bu pma datasets 
pd value connection weighted number loss events connection pf value weighted number reordering events 
extreme values cost parameter noted gures 
expected small cost parameters lead high pd pf large cost parameters opposite 
gure plots set curves correspond different modes detector 
detector accumulates information nature conditional delay distributions loss reordering events occur reasonable consider detector certain number events observed 
cases denoted train detector trained loss reordering events sampled 
case bayesian method reasonable invoke detector training gures show additional curves train furthermore comparison purposes plot case detector trained events connection 
line denoted train note train case feasible uses data including data event classi cation provides useful upper bound performance detector 
gures show detectors remarkably 
performance better bu datasets pma datasets due poor quality rtt measurements pma datasets discussed iii 
note bu datasets collected immediately front busy server represent realistic set statistics seen tcp sender 
gures show bayesian method parzen method roughly comparable methods able bu datasets reach detection probability false alarm probability 
pma datasets parzen method able reach detection probability false alarm rate 
histogram method performs poorly expected due coarser representation conditional probability distributions 
parzen bayesian methods perform approximately equally important note bayesian method able classify events invoked immediately rst dupack connection 
show breakdown weighted average pd values computed change number samples detector uses estimate distribution rtts 
fig 
break connections number loss events parzen detector invoked 
plot detector parzen density estimation smooth parameter ms cost parameter minimum training set size sample 
plot second vertical axis average performance terms pd detector connections 
plots show majority connections chance invoke detector pd cases 
note number loss events grows performance improves 
effect consistent parzen method suggests may reliable method practice 
number connections number connections pd number loss events connection bu datasets smooth threshold min train set pd number loss events connection parzen method pd number loss events connection bu datasets threshold min train set pd number loss events connection bayesian method fig 

break pd bu traces fig 
plot metrics detector bayesian density estimation initial parameters table ii cost parameter training set 
observe kind improvement performance number loss events grows 
notice detector invoked times especially connections low number loss events train detector parzen method 
show corresponding plots pf type behavior observed detector data performance improves pf decreases 
summary summary nd bayes detector fact perform packet loss detection accuracy 
bayesian method best performance obtained pd pf cost training set 
parzen method performance prob 
detection prob 
detection prob 
detection prob 
detection roc cost bin size bu traces min cost train max cost train train train probability false alarm roc cost bin size pma traces min cost train max cost train train train probability false alarm prob 
detection prob 
detection roc cost bin size bu traces min cost max cost train train train train probability false alarm roc cost bin size pma traces min cost max cost train train train train probability false alarm prob 
detection prob 
detection roc cost bin size bu traces min cost train train train train train max cost probability false alarm roc cost bin size pma traces min cost train train train train train max cost probability false alarm plain histogram parzen method bayesian method fig 

pd pf bu dataset upper pma dataset lower similar cost bandwidth parameter 
observed number events connection helps improve detector performance data improve estimation rtt distribution 
hand connections lots events common connections events 
reason bayesian method may suitable actual deployment tcp 
step analyze improvements possible tcp performance detector section 
performance model section answer second question concerns impact tcp performance possible early packet loss detector similar developed section 
note desirable add computation tcp choose invoke detector packet receives rst dupack 
result rely timeout mechanism detect packet losses dupack generated 
additionally dupacks received tcp trigger fast retransmit just currently 
setting relative signi cance pd pf follows 
detection trigger response congestion earlier occurred unmodi ed tcp 
avoid long retransmission timer expiration 
false alarm trigger halving congestion window taken place unmodi ed tcp connection 
effects opposition increases decreases throughput tcp 
properly evaluate tradeoff requires accurate model tcp throughput 
markov model tcp probabilistic loss detector turn described created markov model performance tcp 
states model represent states tcp size sending window number unacknowledged packets packet loss model incorporates tcp standard congestion avoidance algorithm settings potential delayed acks number dupacks trigger fast retransmit extent exponential backoff 
having chosen tcp characteristics model compute sending rate goodput tcp sender parameterized loss rate pl maximum receiver window average round trip delay rt base timeout value retransmission timer 
extended model integrating detector packet loss described previous sections 
added parameters pd pf give detector performance pr reordering rate gives chance packet reordered 
key differences models 
model tcp receives dupack sequence invokes detector 
dupack sequence caused packet loss probability pd detected tcp trigger fast retransmit 
dupack sequence caused reordering event probability pf detector generate false alarm tcp trigger fast retransmit 
packet loss inference mechanisms tcp 
packet loss generate dupack retransmission timer timeout tcp reduce sending window size retransmit lost packets dupacks generated packet loss tcp trigger fast retransmit 
modi cations consist adding additional transitions original markov chain model 
full speci cation modi cations reported sections 
rst describe simplifying assumptions model give details markov model states transitions 
results 
simplifying assumptions assumptions bellow extracted add assumption list 
sender data send sends back back packets allowed congestion window 
corresponding acks packets lost arrive burst rtt 
rtt tcp received acks packets sent ready send burst data packets back 
assumption supported simulation tcp trace analysis evidences 
rtt xed independent window size 
assumption related works 
packet losses independent rounds correlated round 
speci cally packet lost round remaining packets fall till window lost 
assumption justi ed generally adopted droptail queuing discipline internet routers discussed 
aspects tcp modeled slow start fast recovery subtle differences speci operating systems implementations 
instance fast retransmit linux triggered duplicate acks assume 
receiver uses delayed ack receiver acknowledges packet 
add assumption reorderings 
packet reordering independent packet loss 
justi cation assumption events different causes 
losses caused buffer ows mentioned reorderings caused parallel paths network anomalies discussed 
states markov model need introduce concept rounds 
round starts back back transmission packets current size congestion window round ends reception burst acks rtt 
types rounds normal short 
normal round full window worth packets transmitted short round partial window transmitted 
short round follows round packet lost packets 
round represented state markov model 
associated round random variables describe state 
sequence values taken random variables tcp conversation instance path discrete time stochastic process 
transitions state state correspond actions taken tcp round connection 
de nitions sequences random variables de ned reproduced bellow completeness 
add random variables extended model 
wi wi wi window size round maximum receiver window size 
ci ci 
ci allows model delayed acks 
delayed acks causes increment congestion window rounds packet lost 
ci indicates rst rounds ci indicates second 
li li wi 
li number packets lost st round 
li packets lost previous round previous round short round effects packet loss accounted fast retransmit timeout 
li indicates short round result li packets lost previous round 
short rounds ci equal 
ti ti 
ti denotes connection timeout state round ti transmission packets round result retransmission timer expiration 
hand ti timeout occur previous round retransmission timer backoff multiplier respectively 
ri rt ri 
ri denotes duration round rt denotes average round trip time denotes base timeout value 
timeout sequence ri values explained earlier 
rounds duration equal rt ni ni ni denotes number packets transmitted round mi mi mi denotes number packets successfully received round follows rst variables uniquely de ne markov state 
variables nite values number markov states nite order precisely number states equal 
state transitions need de ne transition probabilities markov chain 
refer reader detailed description padhye give high level description detailed description modi cations extend model packet loss detector 
rounds loss reordering 
case window worth packets transmitted successfully round trip time consecutive round congestion window increased limit maximum receiver window 
formally wi wi min wi ci ci ci ci li li ti ti ri rt ri rt ni ni wi mi mi wi note way ci updated give effect receiver delayed acks 
impose constraint ci ci 
captures fact window size grow probability type transitions pl pr wi pl probability packet lost loss rate pr probability packet reordered 
pr wi packet reordering impossible window size 
rounds loss reordering 
packet lost packets reordered window worth packets transmitted successfully round trip time 
variables ci wi may different tcp trigger fast retransmit detector generated false alarm 
transitions possible 
detector generate false alarm transition probability pl wi pf pr wi second detector generates false alarm transition wi wi wi ci ci li li ti ti ri rt ri rt ni ni wi mi mi wi corresponding transition probability pl wi pf pr wi rounds packet loss reordering 
packets lost packets reordered transition short round 
terms state variables wi wi wi li ci ci li li num lost ti ti ri rt ri rt ni ni wi mi mi wi li random variable de nes number lost packets round corresponding transition probability pl pf pr wi packets lost tcp wait timeout cut window size 
corresponding transition wi wi ci ci li li ti ti ri rt ri ni ni wi mi mi transition probability pl rounds packet loss reordering 
possible lost reordered packets round 
case reordered packet come lost packet model packets rst lost packet congestion window lost loss event 
duration round rt packets congestion window sent receiver 
detector classify reordered packet lost tcp behaves case probability pl pr wi pf pl wi detector classify reordered packet lost tcp trigger fast retransmit reordered packet wi wi min wi li wi ci ci li li num lost ti ti ri rt ri rt ni ni wi mi mi wi li transition probability pl pr wi pf pl wi fast retransmit triggered detector generated false alarm window cut half half packets lost extra losses discounted window size shown transition 
short rounds 
short round packets sent receiver tcp triggers fast retransmit 
sender wait timeout detector detects loss rst dupack 
feature potential avoid waiting timeout improve tcp performance show results 
note reordering events effect short round duplicate acks generated packet lost previous round 
show details cases happen short round 
packets short round lost packets receiver detector fails detect packet loss rst dupack timeout inevitable 
case wi wi ci ci li li ti ti ri rt ri rt ni ni wi mi mi exp rcvd li wi exp rcvd expected number packets arrive receiver short round 
value depends window size probability loss formulas exp rcvd pl wi exp rcvd pl pl pl wi exp rcvd pl pl pl transition probabilities wi pl li wi pd pl wi pd pl pl wi packets arrive receiver acknowledge detector chance detect lost packet correctly 
case tcp fast retransmit cut window half 
wi wi wi li ci ci li li ti ti ri rt ri rt ni ni wi mi mi exp rcvd expected number packets arrive receiver previous case transition probabilities pd pl wi pd pl pl wi packets arrive receiver acknowledge tcp fast retransmit cut congestion window half size 
wi wi wi li ci ci li li ti ti ri rt ri rt ni ni wi mi mi exp rcvd expected number packets arrive receiver computed follows wi pl exp rcvd wi pl wi pl pl pl wi wi transition wi pl pl pl wi wi round exponential backoff 
group transitions captures tcp exponential backoff rounds 
transitions packet transmission attempted 
fails tcp doubles retransmission timer timeout value times base value 
state transitions case wi wi ci ci li li ti ti min ti ri ti ri ti ni ni mi mi transition probability pl packet successfully transmitted wi wi ci ci li li ti ti ri ri rt ni ni mi mi probability pl transitions described associated probability zero infeasible tcp behavior 
results model developed evaluate effects correct detection false alarm tcp throughput 
analysis rt ms markov model settings validation model 
compared scenarios regular tcp tcp reno dupthresh 
means tcp waits dupacks triggering fast retransmit 
tcp tcp reno dupthresh 
equivalent detector pd pf 
pd pf tcp equipped bayes detector performance pd pf 
values achievable practice described iv 
case perfect tcp bayes perfect detector pd pf 
performance different variants depends relative frequency packet loss vs packet reordering 
rst study performance varying loss rates varying reordering rates 
shows performance variants function loss rate reordering probability xed 
plot left gure shows tcp goodput absolute terms plot right shows goodput relative unmodi ed tcp 
see variants lead considerable improvement tcp 
tcp performs nearly perfect detector 
nearly dupacks due packet losses quick response provided setting dupthresh appropriate 
important note setting performance realistic detector perfect detector 
plot shows realistic detector achieve improvement tcp goodput standard tcp 
problem setting dupthresh reason preferring bayes detector clear 
gure keep loss rate vary packet reordering rate 
see performance tcp drops sharply amount packet reordering increases 
tcp decreasing congestion window unnecessarily 
contrast performance practical bayes detector remains close level improvement tcp range packet reordering rates 
vi 
start basic observation tcp packet loss detection mechanism fact solving inferencing problem 
ask effective inferencing procedure possible impact procedure 
develop packet loss detector bayesian framework 
show detector pro round trip time guide inferencing process 
traces taken variety locations show bayes detector achieve probability detection probability false alarm 
evaluate potential realizations detector nd bayesian statistical estimation performs quite appealing property duplicate ack received including rst 
results encourage investigate improvements tcp performance possible detector 
construct analytical model tcp incorporates probabilistic loss detector mechanism top existing tcp loss detection mechanisms 
model show tcp performance improved realistic detection false alarm probabilities 
goodput pkts secs goodput pkts secs probability loss goodput perfect pd pf tcp regular tcp probability loss probability reordering probability reordering goodput perfect pd pf tcp regular tcp probability reordering probability loss fig 

relative goodput versus loss reordering rates results suggest loss detection problem faced tcp fact addressed formal way result doing signi cant improvement tcp performance 
vern paxson mark allman computing tcp retransmission timer rfc www faqs org rfcs rfc html november 
jitendra padhye victor firoiu don towsley stochastic model tcp reno congestion avoidance control tech 
rep massachusetts amherst dept computer science 
lawrence brakmo sean malley larry peterson tcp vegas new techniques congestion detection avoidance proceedings conference communications architectures protocols applications 
pp 
acm press 
jun liu ibrahim matta mark crovella inference loss nature hybrid wired wireless environment proceedings modeling optimization mobile ad hoc wireless networks 
relative goodput effect loss rate relative goodput goodput relation tcp reno perfect pd pf tcp effect reordering rate probability loss probability reordering goodput relation tcp reno pd pf pd pf tcp probability reordering probability loss barman ibrahim matta effectiveness loss labeling improving tcp performance wired wireless networks proceedings th ieee international conference network protocols icnp 
sally floyd tom henderson andrei newreno modi cation tcp fast recovery algorithm rfc www faqs org rfcs rfc html april 
stephan jo ao hespanha lee lim katia obraczka tcp pr tcp persistent packet reordering rd international conference distributed computing systems may pp 

pasi kimmo rto enhanced recovery algorithm tcp retransmission timeouts sigcomm comput 
commun 
rev vol 
pp 

kostas tcp wired cum wireless environments ieee communications surveys vol 
th quarter 
reiner ludwig randy katz eifel algorithm making tcp robust spurious retransmissions sigcomm comput 
commun 
rev vol 
pp 

feng wang zhang improving tcp performance mobile ad hoc networks order detection response proceedings rd acm international symposium mobile ad hoc networking computing 
pp 
acm press 
ethan mark allman making tcp robust packet reordering sigcomm comput 
commun 
rev vol 
pp 

paxson measurements analysis internet dynamics ph thesis university california berkeley april 
vern paxson internet packet dynamics ieee acm transactions networking vol 
pp 

jay smith kevin jeffay variability tcp round trip times proceedings acm sigcomm conference internet measurement 
pp 
acm press 
saad biaz nitin vaidya round trip time correlated number packets ight proceedings acm sigcomm conference internet measurement 
pp 
acm press 
sharad iannaccone christophe diot jim kurose don towsley measurement classi cation sequence packets tier ip backbone proceedings infocom march vol 
pp 

teixeira keith marzullo stefan savage geoffrey voelker search path diversity isp networks proceedings acm sigcomm conference internet measurement 
pp 
acm press 
jon bennett craig partridge nicholas packet reordering pathological network behavior ieee acm trans 
netw vol 
pp 

andrew gelman john carlin hal stern donald rubin bayesian data analysis texts statistical science 
chapman hall crc 
kevin fall sally floyd simulation comparisons tahoe reno sack tcp computer communication review vol 
pp 
july 
jitendra padhye victor firoiu don towsley jim kurose modeling tcp throughput simple model empirical validation proceedings sigcomm 
mathis semke mahdavi ott macroscopic behavior tcp congestion avoidance algorithm computer communication review vol 
july 
jean bolot packet delay loss behavior internet proceedings sigcomm acm sigcomm august vol 
pp 

