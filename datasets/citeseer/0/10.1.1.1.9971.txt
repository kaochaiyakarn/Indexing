constant multiplicative linear logic np complete patrick lincoln timothy winkler computer science department computer science laboratory stanford university sri international stanford ca menlo park ca lincoln cs stanford edu winkler csl sri com august linear logic resource aware logic analysis classical proof rules contraction copying weakening throwing away 
study decision problem multiplicative fragment linear logic quantifiers propositions constant case 
show fragment np complete 
earlier max showed propositional multiplicative linear logic np complete 
natarajan shankar author developed simplified proof propositional case 
structure simplified proof utilized new encoding uses constants 
product somewhat surprising result simply evaluating expressions true false multiplicative linear logic omega np complete 
conservativity results proven np hardness larger fragments linear logic follows 
girard introduced linear logic brought light expressive power gained restricting structural rules contraction supported doctoral scholarship sri 
copying weakening throwing away propositions 
contraction weakening propositions may thought resources carefully accounted 
propositions treated resources linear logic naturally led consider different forms conjunction disjunction 
girard named kinds connectives additive multiplicative focussed attention multiplicative fragment giving proof nets version natural deduction tailored linear logic fragment 
interest linear logic fragment small extensions fragment 
order explain intuitive difference additive multiplicative connectives consider conjunctive goal sigma sequent calculi prove delta prove gamma delta gamma order prove goal 
various sequent calculi place different requirements relationship sigma delta gamma 
example classical logic required subsets delta sigma gamma sigma 
may seen implicitly allowing copying propositions appear contexts throwing away appear sigma hypothesis multiplicative conjunction omega linear logic requires context sigma divided hypotheses delta gamma sigma delta gamma 
additive conjunction hand requires context duplicated hypotheses delta gamma sigma 
critical difference reflected forms disjunction de morgan duals forms conjunction 
girard added exponential unary connectives linear logic increasing expressive power logic greatly 
fact propositional linear logic exponentials undecidable :10.1.1.1.8163
exponentials multiplicative additive linear logic mall decidable pspace complete 
focus smaller fragment multiplicative connectives constants constant multiplicative linear logic 
earlier author showed decision problem multiplicative linear logic propositions mll np giving sketch np algorithm 
np hardness problem left open 
show mll np complete fragment containing np complete 
note fragment contains quantifiers propositions may view decision problem simply evaluating expressions true false multiplicative linear logic omega 
propositional linear logic formal framework sequent calculus 
discuss independent logics ll full propositional linear logic mll ll restricted multiplicative connectives constants constant fragment mll 
definition ll 
linear logic sequent followed multiset linear logic formulas 
note standard presentations sequent calculi sequents built sets formulas multisets 
difference crucial 
assume set propositions associated negations give inference rules linear sequent calculus definition negation implication 
reader note negation defined concept operator 
notational conventions followed positive propositional literal negative propositional literal arbitrary formulas sigma gamma delta arbitrary multisets formulas identity rule restricted atomic formulas fact identity rule arbitrary formulas derivable system 
notational convenience usually assumed gammaffi omega associate right omega higher precedence gammaffi 
notation sigma denote multiset formulas 
english names rules shown right 
note rule constant 
identity cut sigma gamma sigma gamma cut omega sigma gamma sigma omega gamma tensor sigma sigma par phi sigma sigma sigma phi sigma phi plus sigma sigma sigma sigma sigma weakening sigma sigma contraction sigma sigma dereliction sigma sigma storage sigma sigma bottom sigma top linear negation defined follows delta delta omega delta delta omega phi delta delta phi delta delta delta delta delta delta linear implication gammaffi defined follows gammaffib delta multiplicative linear logic multiplicative fragment linear logic mll defined follows 
sequent rules mll ll rules additive connectives additive constants exponentials thrown phi 
leaves rules cut omega 
constant multiplicative linear logic concerned constant multiplicative fragment linear logic 
sequent rules mll formulas containing propositional symbols provable 
multiplicative linear logic np complete section summarize results decision problem propositional multiplicative linear logic known np complete 
argument np hardness fragment sketched max electronic mail 
earlier result multiplicatives np result showed decision problem np complete 
updated argument show horn fragment multiplicatives np complete novel computational interpretation fragment linear logic 
continues trend providing proof evaluating expressions true false multiplicative linear logic np complete 
propositions multiplicative linear logic np complete 
mll np 
informally argument showing membership np simply connective multiplicative linear logic formula analyzed exactly cut free proof 
entire proof exists guessed checked nondeterministic polynomial time 
formally state fundamental theorem originally due girard proven complete gory detail 
theorem cut elimination sequent provable mll provable mll cut rule 
prove theorem full linear logic results fragments question follow immediately 
cut multiplicative proofs quite concise 
theorem small proofs connective analyzed exactly cut free mll proof 
theorem theorem know mll sequent size proof sequent proof exactly total applications inference rules 
application inference rule may represented space linear may simply guess check entire representation proof tree nondeterministic polynomial time 
large family inferences 
propositional classical logic allows possible matters formula break classical proof intuitionistic logic exhibits 
permutability multiplicative disjunction holds linear logic 
lemma permutability proof gamma proof gamma corresponding fact omega hold demonstrated example omega 
np complete time ago girard developed necessary condition provability constant multiplicative linear expressions lemma girard define function constant multiplicative linear expressions integers follows 
omega gamma formula provable multiplicative linear logic contains propositions 
words number tensors number ones provable formula 
avron studied generalizations semantic measure include propositions proposition value value yielding necessary condition mll provability 
may go achieving necessary condition mall provability min max phi plus minus infinity additive constants 
case condition formula provable mall 
may generalize conditions somewhat replacing instances arbitrary constant allowing propositions different fixed values value value gamma 
related 
necessary condition question form simple truth table numerical evaluation function yield necessary sufficient condition provability constant multiplicative expressions 
main result shows multiplicative constant evaluation circuit evaluation problem np complete 
encode partition np complete problem variant partition mll show encoding sound complete 
main idea small proof property mll allows encode resource distribution problems naturally 
linear logic treats propositions resources natively called resource consciousness 
note full linear logic conservative mll encoding remains sound complete larger fragments 
lead new results complexity larger linear logics completely characterized 
partition np completeness partition stated garey johnson page instance set elements bound size mb question partitioned disjoint sets delta delta delta am note contain exactly elements 
garey johnson 
comment np complete strong sense 
note partition np complete strong sense implies input represented unary problem np hard 
property partition essential application represent input problem unary multiplicities linear formulas 
simplify arguments want assume 
loss complexity assumption 
may consider instances partition 
may show cases 
possible problem instances satisfying 
elements equal possible solutions 
elements equal possible solutions case 
allowable problem instances elements equal case solvable polynomial constant time report 
similarly elements size answer trivially 
elements size partitions elements size element size 
obvious counting algorithm solves case polynomial time 
cases equal partition problem solvable polynomial time partition remains np complete constraint 
partition introduce new np complete problem variant partition call partition instance set elements bound size mb question partitioned disjoint sets delta delta delta am ja gamma 
comment np complete strong sense 
write improve readability discussion 
show solutions partition correspond solutions partition problem instance assumption 
strong equivalence problems instances instances solvable case exactly solvable solutions case directly correspond solutions case 
clear solutions partition solutions instance partition 
arbitrary consist xn 
gamma false assumption 
gamma sizes bounded assumption contradiction 
considering cases xi gamma assumptions gamma implies gamma gamma 
leaves cases 
partition element consists elements 
case xi set identifies partition directly satisfies requirement partition sum equal note constraint gamma 
exactly elements mb exactly number groups elements groups elements 
may analyze cases show groups integer groups smallest allowable element size element strictly dominate 
elements size constraint violated 
similarly 
group elements simple algebra elements group elements size elements group elements size 
noting exactly groups groups may rearrange elements group group groups elements group element group form group 
resulting groups total size happily equal result solution partition problem instance 
partition partition equivalent problems 
note partition partition equivalent partition np complete strong sense 
partition np complete unary notation 
important utilize unary representation instances linear encoding 
encoding propositions notation propositions copies omega omega delta delta delta omega omega instance partition equipped set fa delta delta delta integer unary function tuple ha si define encoding function ha si omega delta delta delta omega gammaffi writing improve readability 
show formula provable multiplicative fragment linear logic partition problem solvable 
encoding constants generated replacing 
constant encoding describe partition instances time partition instances encoded 
notation copies omega omega delta delta delta omega omega hy copies delta delta delta note hy hy instance partition equipped set fa delta delta delta integer unary function tuple ha si define encoding function theta theta ha si gammaffi 
omega delta delta delta omega gammaffi 
gammaffi 
gammaffi 
contrapositive gammaffib develop encoding hs gammaffi omega hs gammaffi omega delta delta delta omega hs mi gammaffi gammaffi hbi gammaffi eliminating linear implication favor formulas hs omega 
hs omega delta delta delta hs mi omega form formula contains implicit negations linear implication 
may see formula satisfies girard measure condition lemma elements sum sizes equals mb side conditions statement partition partition 
claim formulas provable multiplicative fragment linear logic partition problem solvable 
soundness lemma soundness partition problem ha si solvable able find proof formula theta ha si 
proof 
proof straightforward 
group elements assumed solution partition problem forms subproof assuming elements group numbered 
omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega omega elided proof guaranteed exist conditions solution partition 
partition sum sx sy sz equal proofs constructed groups elements combines omega proof hs omega delta delta delta hs mi omega proof completed applications completeness lemma completeness satisfying constraints partition proof formula theta ha si partition problem ha si solvable 
proof 
simplify direction proof extra assumption bin size greater 
justification assumption see section 
heavy lemma 
assuming proof hs omega 
hs omega delta delta delta hs mi omega show corresponding partition problem solvable 
proof sequent cut free proof cut elimination theorem theorem 
repeated applications lemma proof sequent proof hs omega hs omega delta delta delta hs mi omega perform complete induction proof sequent omega formulas main connective omega show principal formula rule application 
note formula omega measure sj gamma 
assuming initial conditions partition problem ensure sj sj gamma 
formula 
negative measure 
assume omega formulas principal application omega lemma hypothesis sequent measure 
case supposed proof sigma delta multiset union sigma delta omega equal 
sigma 
delta hs omega hs omega delta delta delta hs mi omega omega occurs hypothesis measure 
formula negative measure 
occur delta 
consider hypothesis contain formulas sigma sequent 
formulas form omega included sigma measure hypothesis greater 
formulas included sequent measure 
case lemma sequent provable 
assumption omega formulas principal error 
principal 
possible proof step omega principal formula 
may focus case 
claim branch proof corresponds partition solution original partition problem 
claim left sequent form hx omega hx omega delta delta delta omega xi subset si 
exactly gamma occurrences omega sequent xi ones sequent 
lemma xi gamma gamma equivalently xi gamma 
gives rise instance partition 
proof theta ha si see may identify branches form hx omega hx omega delta delta delta omega 
branches may identify partitions elements associated partition problem 
words proof sequent may construct solution partition problem 
main result preceding immediately achieve stated result 
theorem np complete decision problem constant multiplicative linear logic np complete 
easy conservativity result find np hardness proof suffices multiplicative linear logic 
theorem conservativity multiplicative linear logic conservative constant multiplicative linear logic 
proof 
induction cut free mll proofs 
partition directly partition partition directly simplifying assumptions 
may consider looser specification partition call generalized partition 
instance set elements bound size question partitioned disjoint sets delta delta delta set contains exactly elements generalized partition priori restrictions sizes elements explicit specification partitions elements allowed 
immediately restrict solution sizes nonnegative 
instance generalized partition may generate instance partition adding size element instance partition asked size element satisfies condition 
adding size element create instances partition elements close desired 
avoid complications involved groups elements arise partition properly restricted partition problem 
occurs close 
type simplification achieved encodings partition problem 
consider earlier encoding partition full multiplicative linear logic omega delta delta delta omega omega gammaffi constant encodings generated replacing bottom hci integer value particularly interesting 
polynomial encodings tend larger advocated result somewhat complicated proofs soundness 
case incorrect encoding may consider bottom encoding proved sound complete generated case 
demonstrated simply evaluating expressions true false multiplicative linear logic omega np complete 
conservativity results np hardness larger fragments linear logic follow results known previously 
results comprise dramatic evidence extreme expressive power linear logic 
results lines previously shown full propositional linear logic undecidable natural fragments pspace complete exptime complete np complete 
complexity results fragments linear logic indicate difficulty constructing efficient decision procedures large fragments linear logic 
may hoped previously semantic measure condition immediately decide constant expressions linear logic 
constructing theorem provers linear logic consider carefully sources exponential blowup identified suites results case splitting contexts applications omega rule 
essentially unknown harness evident power linear logic useful purposes 
interesting attempts including linear logic basis logic programming language basis functional programming language 
results direct impact logic programming approach infancy 
abramsky 
computational interpretations linear logic 
theoretical computer science 
special issue workshop math 

prog 
semantics 
appear 

andreoli pareschi 
linear objects logical processes built inheritance 
proc 
th international conference logic programming jerusalem may 
avron 
properties linear logic proved semantic methods 
technical report institute computer science university 
barr 
autonomous categories 
lecture notes mathematics springer 

mechanizing proof theory resource aware logics proof transformations extract implicit information 
phd thesis stanford university 
garey johnson 
computers intractability guide theory np completeness 
freeman 

girard 
linear logic 
theoretical computer science 
jean yves girard 
personal communication 
april 
hodas miller 
logic programming fragment intuitionistic linear logic 
proc 
th annual ieee symposium logic computer science amsterdam pages 
ieee computer society press los alamitos california july 
full appear information computation 

multiplicative fragment linear logic np complete 
email message 

multiplicative fragment linear logic np complete 
technical report institute language logic information june 

horn programming linear logic np complete 
proc 
th annual ieee symposium logic computer science santa cruz pages 
ieee computer society press los alamitos california june 
kleene 
permutability inferences gentzen calculi lk lj 
memoirs ams 
lincoln mitchell 
operational aspects linear lambda calculus 
proc 
th ieee symp 
logic computer science 
lincoln mitchell scedrov shankar 
decision problems propositional linear logic 
annals pure appl 
logic 
special volume dedicated memory john myhill appeared proc 
st ieee symp 
foundations computer science 
lincoln 
computational aspects linear logic 
phd thesis stanford university 
seely 
linear logic autonomous categories cofree coalgebras 
categories computer science logic june 
