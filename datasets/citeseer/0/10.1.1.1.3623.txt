developing uml profile modelling knowledge systems abdullah andy evans ian chris kimble department computer science university york yo dd united kingdom kimble idb cs york ac uk 
knowledge engineers favoured diagrammatic approach developing knowledge systems adopting software engineering 
modelling techniques tend ad hoc way highly dependent modelling experience engineers involved 
focuses unified modeling language uml profiles knowledge modelling 
identifies short current approaches adopting uml discusses need extension uml profile mechanism 
progress creating profile 
management knowledge enterprises commercial necessity enterprises order manage corporate intellectual assets gain competitive advantage 
knowledge resides human memories managing seen human oriented process technology solution 
technology utilised knowledge management enabler automated tools including internet groupware systems 
prominent tools managing knowledge knowledge systems kbs 
knowledge systems deployed technological means capturing managing explicit tacit knowledge part organisation knowledge management initiative 
built knowledge pervades organisation identified modelled appropriate acquisition representation modelling techniques 
organised follows section ii describes kbs field knowledge engineering 
section iii gives overview le knowledge modelling techniques currently 
section iv explains need extension uml modelling knowledge section describes uml profile 
section vi presents initial knowledge modelling profile constructed identified modelling concepts section vii concludes indicates direction 
abdullah andy evans ian chris kimble knowledge engineering knowledge engineering kbs software application explicit declarative description knowledge certain application 
single dividing line differentiates kbs information software system contain knowledge elements 
information system set interrelated components collects processes stores analyses disseminates data information organization 
contrast kbs knowledge represented explicit form increased importance knowledge modelling compared required information system 
development process kbs similar general system development stages requirements gathering system analysis system design system development implementation common activities 
stages kbs development business modelling conceptual modelling knowledge acquisition knowledge system design kbs implementation 
kbs developed knowledge engineering ke techniques 
similar software engineering se techniques emphasis knowledge data information processing inherently advocate engineering approach process developing kbs 
central theme approach conceptual modelling system analysis design stages development process 
knowledge engineering ke methodologies developed emphasis models example mike prot karl 
traditional ke techniques widely construct expert systems systems built knowledge experts essentially process knowledge transfer 
development process generation expert systems knowledge expert directly transferred knowledge base form rules 
disadvantage approach knowledge expert captured form hard codes system little understanding linked connected 
creates new problem knowledge base updated changes require substantial effort coded rules order implement needed changes 
ke longer simply means mining knowledge expert head 
encompasses methods techniques knowledge acquisition modelling representation knowledge 
shift modelling approach enabled knowledge re different areas domain 
past knowledge systems developed scratch time new system needed interact systems organization 
paradigm shift modelling strategy resulted reducing development costs 
developing uml profile modelling knowledge systems knowledge modelling model simplification reality 
real systems large entities consisting interrelated components working complex manner 
models build descriptions problem domain software define systems development process 
models help people appreciate understand complexity enabling look particular area system turn 
value model context systems development dependent effects systems produced 
models capture essential features real systems partitioning components easy understand manipulate 
difficult human mind able capture features system mental model convey written oral form 
mind works better visual representation 
models associated domain represent 
domain define practicing communities modelling languages associated tools 
domain techniques representing concepts associated domain 
model system need language express description system 
modelling languages process modelling knowledge developing knowledge systems 
knowledge modelling knowledge acquisition activities way structuring projects acquiring validating knowledge storing knowledge 
knowledge models structured representations knowledge 
symbols represent pieces knowledge relationships 
knowledge models follows symbolic character languages logic diagrammatic representations networks ladders tabular representations matrices frames structured text hypertext 
models constructed knowledge objects concepts instances processes tasks activities attributes values rules relations 
knowledge representation fundamental topics area artificial intelligence investigates representation techniques tools languages 
knowledge domain implementation independent reasoning process kbs usually addressed ontologies problemsolving methods 
prominent representation techniques widely developing attribute value pairs object attribute value triplets semantic networks frames logic 
analysing knowledge objects representation techniques described earlier section noticed similar concepts adopted object oriented modelling 
examples concepts objects attributes class subclass relationship instances 
concepts different meanings different techniques cases refer similar thing 
paves way consider object oriented techniques standard means representing 
abdullah andy evans ian chris kimble ontology problem solving methods ontologies problem solving methods psms enable construction reusable components domains tasks 
systems developers ke community currently trying adopt component development incorporating ontologies psms order deploy faster 
ontologies represent domain knowledge knowledge programs 
achieved formal declarative representations domain knowledge sets objects describable relationships 
context knowledge modelling ontology defines content specific knowledge representation elements domain dependent classes relations functions object constants 
researchers area conceptual modelling knowledge modelling started realise importance ontology developing domain models underlying principle modelling achieve agreed representations unified manner domains investigating 
works demonstrate efforts usage ontologies 
psms describe reasoning process generic inference patterns level independent representation formalism rules frames 
psms influenced leading knowledge engineering frameworks task structures le limiting methods commonkads prot mike components expertise gdm vital 
frameworks suggest psm decomposes reasoning task elementary inferences easy understand defines types knowledge inference steps completed defines control mechanisms flow knowledge inferences 
knowledge modelling techniques importance knowledge modelling developing discussed 
argue models important understanding working mechanisms kbs mechanisms tasks methods knowledge inferred domain knowledge schemas 
modelling contributes understanding source knowledge inputs outputs flow knowledge identification variables impact management action organizational knowledge 
conceptual modelling systems development faster efficient re existing models different areas domain 
understanding selecting modelling technique appropriate different domains knowledge ensure success kbs designed 
techniques model knowledge common commonkads prot unified modeling language uml modelling 
developing uml profile modelling knowledge systems commonkads de facto standard knowledge modelling extensively european research projects 
supports structured ke techniques provides tools corporate knowledge management includes methods perform detailed analysis knowledge intensive tasks processes 
suite models core commonkads methodology 
suite supports modelling organization tasks performed agents responsible carrying tasks knowledge means knowledge communicated design knowledge management system 
commonkads incorporates object oriented development process uses uml notations class diagrams case diagrams activity diagrams state diagrams 
commonkads graphical notations task decomposition inference structures domain schema generation 
trend system developers researchers ke adopt object oriented modelling developing conceptual models knowledge systems 
careful analysis literature shows influenced commonkads approach highly favoured encourages object oriented development notations uml 
prot developed domain specific applications stanford medical informatics 
prot defined extensible platform independent environment creating editing ontologies knowledge bases 
prot knowledge modelling environment frame ontology editing tool knowledge acquisition tools widely domain modelling 
unified modeling language uml object constraint language ocl de facto standard object modelling software engineering defined object management group omg 
uml general purpose modelling language covers wide spectrum different application domains 
uml incorporated mainstream techniques commonkads multi perspective modelling knowledge modelling purposes 
multi perspective modelling enables number techniques technique appropriate modelling particular aspect knowledge 
roots software engineering multiple view technique 
current trends developed knowledge engineering techniques modelling aspects largely dependent software engineering modelling languages 
modelling techniques adopted mix notations derived different modelling languages 
object oriented paradigm influenced systems development activities software engineering trend reflected knowledge engineering methodologies commonkads methodology tools oriented knowledge engineering applications projects kbs developments general shown works 
main adopters uml knowledge modelling commonkads abdullah andy evans ian chris kimble 
modelling language mml extension uml represents engineering product design knowledge user level deployment knowledge engineering applications 
provides default metamodels product design process manage engineering knowledge 
informal extension uml fulfill omg requirements extension mechanism section 
object oriented methods gaining popularity expressiveness flexibility ease 
uml important features extensible language brought application profiles 
uml favoured techniques knowledge modelling methodological aspect kbs development standardisation 
extensions uml formally introduced uml profiles knowledge modelling 
need uml extension major problem knowledge modelling standard technique available model knowledge developing knowledge system 
techniques researchers field knowledge engineering adapted software engineering community 
techniques knowledge modelling project mix notations uml idef sadt omt multi perspective modelling 
examples mentioned earlier commonkads methodology multi perspective modelling 
important factor consider system analysis design courses days teaching object oriented modelling techniques tool systems modelling development 
main influence growing importance objectoriented programming languages java systems development 
due formal training received adoption object oriented programming generation system analyst knowledge uml modelling purposes 
addition enterprise systems days integration various systems built different platforms ability communicate 
systems especially new ones built platforms support objectoriented languages model driven architectures object modelling knowledge systems longer stand systems part enterprise group systems 
standard way modelling knowledge systems knowledge engineering techniques need extend standardised software engineering 
promotes common modelling language vision integration reusability interoperability enterprise system achieved 
proposed model knowledge extension uml 
developing uml profile modelling knowledge systems uml widely adopted object oriented way systems development deployed domains real time systems hypermedia design embedded systems ontology modelling 
arguments uml semantics defined compared formal methods addressed omg developing uml version enhanced metamodel concepts unambiguous semantics 
developing uml profiles knowledge modelling enable developers uml formal systematic manner 
achieved means developing uml profiles precisely defined notations semantics syntax enables extension formally integrated existing profiles uml adheres profiles requirements proposed omg 
uml general purpose modelling language covers wide range different application domains 
feature adequate modelling broader area domain specific concepts techniques need specialised refinement existing construct language 
achievable usage extension mechanism provided uml known profiles 
profile extension mechanism omg defined extension mechanisms extending uml profiles metamodel extensions 
profiles referred lightweight extension mechanism uml 
contains predefined set stereotypes constraints notation icons collectively specialize tailor uml specific domain process 
main construct profile stereotype purely extension mechanism 
model marked stereotypes structure attributes associations operations defined metamodel describes 
usage stereotypes restricted changes semantic structure new elements metamodel permitted 
heavyweight extensions mechanism uml known metamodel extension defined meta object facility mof specification involves process defining new metamodel 
extension new metaclasses added uml metamodel 
extension flexible approach new concepts may represented metamodel level 
difference profile metamodel extensions comes restrictions profiles extending uml metamodel 
restrictions impose profile extensions comply standard semantics uml metamodel 
restrictions applicable mof extensions define new metamodel 
extensions called profile 
uml profile enterprise application integration eai uml profiles corba uml profile enterprise distributed object computing edoc uml testing profile uml profile schedulability performance time formal profiles developed omg 
abdullah andy evans ian chris kimble uml knowledge modelling profile scope profile described adapted 
aim uml knowledge modelling profile define language designing visualizing specifying analyzing constructing documenting artifacts knowledge systems 
knowledge modelling language major object technologies applied knowledge systems various application domains task types 
uml profile uml specifications defined metamodelling extension approach uml 
designed principles mind uml integration real uml profile knowledge modelling defined metamodel provided uml superstructure follows principles uml profiles defined uml reuse minimalist possible knowledge modelling profile direct uml concepts extends adding new concepts needed 
discussion section mainly refers commonkads methodology kbs development related discussion 
tasks main categorisation action need performed kbs typically refers want system 
task type terminology task methods inputs outputs inference mechanism type knowledge 
current studies extending uml model knowledge concentrates certain task types product design uml product configuration design 
specific studies conducted creating generic profile different task types research underway york focusing 
suggestions construct modelling language 
involves creation syntax model identifies models concepts specifies formed rules operations validates tests model 
step creating meta model knowledge modelling profile build syntax model 
syntax model describe concepts profile relationships concepts 
concepts provide vocabulary grammar constructing models profile 
important knowledge modelling concepts identified literature table 
table 
main knowledge modelling concepts modelling concept description concept class class represents category things inference describes lowest level functional decomposition carrying primitive reasoning steps inference method method implementing inference transfer function transfers information reasoning agent external entities system user developing uml profile modelling knowledge systems task defines reasoning function task method describes realization task subfunction decomposition static knowledge role specifies collection domain knowledge inference dynamic knowledge role run time inputs outputs inferences rule type categorization specification knowledge rule expressions attribute value concept knowledge base collection data stores contains instances domain knowledge types syntax knowledge modelling language built modelling concepts commonkads language adopted specifying knowledge models defined bnf notation 
bnf notation translated uml model 
current form model syntax knowledge modelling language complete model language metamodel 
viewed extension uml profile just plain metamodel 
efforts currently focused developing metamodel defining formedness rules syntax semantics language mapping core uml 
initial knowledge modelling profile composed main packages le relationship modelling 
consists knowledge model package task knowledge package inference knowledge package knowledge package 
packages forms knowledge modelling language core model shown knowledge modelling profile 
fig 

knowledge modelling profile core package knowledge modelling profile knowledge model task knowledge domain knowledge concepts relations uses access knowledge rule type knowledge base mathematical model inference knowledge domain knowledge package knowledge model package describes main constructs profile 
package shown 
abdullah andy evans ian chris kimble fig 

domain knowledge package le domain knowledge domain schema construct fe re ce knowledge knowledge odel dom ain knowledge com ponent ontology task knowledge knowledge base domain construct psm knowledge nam binary relation concept odel relation rule type value type concept package knowledge model package describes concept profile 
concept represents class 
package shown 
fig 

concept package supertype concept attr boolean isc le te le type range rim itive yp ordered axiom part attr num ber integer natural real im age string boolean universal date text parts rd concept equation role rd ordered default value rim itive number range user defined type nam te te range subtype part viewpoint ttr isd le isc le te le type viewpoints differentiation value type type nom inal ordinal value list lu tio value developing uml profile modelling knowledge systems relations package knowledge model package describes relations profile 
package shown 
fig 

relation package la tio te io om ain ilt binary ent ent ent ent la tio je le la tio binary relation odel value subtype set dom ain construct type ent ordered tra irreflexive reflexive ent type type ro le list dom ain tru ty ser type le rd nam rule type structure binary odel task knowledge package profile describes task task method detail 
package shown 
fig 

task knowledge package realizes task knowledge ttr task knowledge inference knowledge task elem ent attr nam th ordered le rip tio task le ordered tp ordered specification task decomposition le control structures fe re task proc input ro le te rm ia te function call function le proc output pseudo code ent control loop ry ro le ole ta ro le ent le ra tio role expression ry le task role abdullah andy evans ian chris kimble inference knowledge package profile describes inference knowledge role transfer function detail 
package shown 
fig 

inference knowledge package operation type attr nam inference knowledge dynamic knowledge role inference roles set domain construct type role static knowledge role inference knowledge construct type transfer function provide receive obtain role dom ain domain dynamic domain mapping om ain list domain construct type knowledge role type static dynam ic domain construct type roles dynamic knowledge role knowledge base knowledge package profile grouped packages rule type package knowledge base package mathematical model package 
rule type package knowledge package describes modelling rules 
package shown 
fig 

rule type package rule type constraint rd user defined type rule type rule type body constraint rule type antecedent user defined type rd consequent user defined type rd implication rule type connection symbol nam string knowledge base package knowledge package describes modelling knowledge base represents instances knowledge 
package shown 
fig 

knowledge base package domain schema rule type instance developing uml profile modelling knowledge systems knowledge base knowledge base instance name string user defined type concept role ordered role relation knowledge base variable expression annotation attribute variable declaration variable type attribute instance name string value value ordered user defined type argument instances ent arguments knowledge base expression instance rule type expression equation tuple rule type instance part type operator type name string ordered value part operator dimension role attribute instance mathematical package knowledge package describes modelling mathematical elements representing knowledge 
package shown 
fig 

mathematical model package odel parameter param eter ordered type range odel ordered equation function ents equations equation list value ordered odel abdullah andy evans ian chris kimble managing knowledge knowledge systems important part enterprise knowledge management initiatives 
systems evolved stand machines part enterprise group systems 
process constructing similar software systems conceptual modelling playing important le development process 
software engineering adopted uml standard modelling field knowledge engineering searching right technique 
uml adopted knowledge modelling 
uml current state limitations extensible language support knowledge modelling activity profiles mechanism 
developing profile easy task involves steps 
step research specify formed rules operations ocl validate profile uml compliant modelling tool test real life kbs requirements case studies number knowledge intensive domains 

schreiber th van conceptual models knowledge systems encyclopedia computer science technology 
marcel dekker new york 

schreiber akkermans de shadbolt de velde wielinga knowledge engineering management commonkads methodology 
massachusetts mit press 

studer benjamins fensel knowledge engineering principles methods 
data knowledge engineering 


angele fensel studer developing knowledge systems mike 
journal automated software engineering 


grosso eriksson fergerson gennari tu musen knowledge modelling millennium design evolution protege 
stanford medical institute 

booch rumbaugh jacobson unified modelling language user guide 
reading massachusetts addison wesley 

fowler model distributed computing magazine 


accessed com articles html 

fowler thing object oriented analysis 
distributed computing magazine 


accessed com articles html 

milton types knowledge models 

accessed www uk notes htm developing uml profile modelling knowledge systems gomez perez benjamins overview knowledge sharing reuse components ontologies problem solving methods 
ijcai workshop ontologies problem solving methods krr 

stockholm sweden 
gruber principles design ontologies knowledge sharing 
report ksl stanford university 
knowledge modelling support knowledge management 
lecture notes intelligence 

friedrich generating product configuration knowledge bases precise domain extended uml models 
th international conference software engineering knowledge engineering 

chicago usa 
mira knowledge model reuse therapy decision specialisation generic decision model 
expert systems applications 

stokes managing engineering knowledge methodology knowledge engineering applications 
london uk professional engineering publishing limited 
protege protege frequently asked question 

accessed prot stanford edu faq html kingston macintosh knowledge management multi perspective modelling representing distributing organizational memory 
knowledge systems 

chung subramaniam adaptable architecture generation embedded systems 
journal systems software 

carson knowledge systems clinical practice development integrated clinical information knowledge management support system 
computer methods programs biomedicine 

standardization odyssey 
communications acm 

radical reduction uml core semantics 
lecture notes computer science 

omg requirements uml profile 

omg unified modeling language specification version 

perez martinez heavyweight extensions uml metamodel describe architectural style 
acm sigsoft software engineering notes 

omg mof specification version 

omg uml testing profile specification 

abdullah extending uml profile knowledge systems modelling 
thesis proposal department computer science university york york 
clark evans sammut metamodelling model driven development draft published 

