scaling teamwork large teams paul scerri elizabeth liao katia sycara carnegie mellon university university pittsburgh cs cmu edu pitt edu andrew cmu edu andrew cmu edu katia cs cmu edu paradigm coordinating cooperative agents dynamic environments teamwork shown capable leading flexible robust behavior 
apply teamwork problem building teams hundreds members fundamental limitations apparent 
developed model teamwork addresses limitations existing models apply large teams 
central idea model organize team members dynamically evolving subteams 
additionally novel approach sharing information leveraging properties small worlds networks 
algorithm provides targeted efficient information delivery 
developed domain independant software proxies demonstrate teams order magnitude bigger previously published 
proxies proved effective teamwork distinct domains illustrating generality approach 

group agents coordinates teamwork flexibly robustly achieve joint goals distributed dynamic potentially hostile environment 
basic teamwork ideas systems successfully implemented including teams supporting human collaboration teams disaster response manufacturing training games 
teams successful size severely limited 
address larger complex problems need teams substantially bigger retain desirable properties teamwork 
key success previous teamwork approaches explicit detailed model agent joint activity members team 
team members models reason actions aid achievement joint goals 
size team scaled infeasible maintain date detailed models teammates team activities 
specifically communication required permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm keep models date scale number agents 
models key elements theory operationalization teamwork break 
example accurate models team activities steam communication reasoning applied joint intention reasoning 
model teamwork rely accurate models team previous approaches teamwork 
requiring accurate models limit required communication approach applicable large teams 
giving accurate models means cohesion guarantees provided approaches joint intentions longer provided 
algorithms designed lead cohesive flexible robust teamwork high probability 
basic idea organize team dynamically evolving overlapping subteams subgoals team goal 
members subteam maintain accurate models specific subgoal working 
ensure cohesion minimize inefficiency team connect agents team network 
requiring agents keep neighbors network informed subgoals subteams members high probability inefficiencies detected subsequently addressed 
model able develop teams effective responsive cohesive despite having members 
identify ideas model keys success 
working subgoals team goal 
members subteam change dynamically team rearranges resources best meet current challenges respond failures opportunities 
subteams agents accurate models joint activity way team steam model 
techniques developed small teams subteam flexible robust 
identify distinct groups subteam team members performing roles plan team members agents involved role allocation 
fidelity model maintained role performing agents higher non role performing agents turn higher agents wider team 
models limited subteams communication overhead limited 
avoid potential inefficiencies due subteams working cross purposes second idea introduce associates network 
network connects agents team independent relationships due subteams 
specifically network small worlds network see team members separated small number neighbors 
agents share information current activities direct neighbors network 
communication required keep neighbors associates network informed low due small worlds properties network high probability possible pair plans agent know identify inefficiencies due conflicts plans 
example may detected subteams attempting achieve goal subteam plans interfere plans subteam 
detected agent subteams involved notified inefficiency rectified 
side effect limiting models joint activities members subteam team loses ability leverage sensing abilities members 
specifically agent may locally detect piece information unknown rest team know members find information relevant 
example disaster response team fire fighter may detect road know fire fighters intend road 
communication teams extensively studied problem current algorithms sharing information teams require accurate models team activities steam decision theoretic communication require centralized information brokers kept date leading potential communication bottlenecks 
developed novel information sharing algorithm leverages small worlds properties associates network allow agents deliver information efficiently despite knowing needs 
key idea team member builds model neighbors associates network ei permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm ther want particular piece information know 
models inferred coordination messages role allocation require additional communication 
agents simply information model 
evaluate method building large teams implemented approach software proxies called 
proxy encapsulating coordination algorithms works closely domain level agent coordinates proxies 
proxies build successful proxies build small teams able scale large teams fundamentally new algorithms concepts described 
report results coordinating teams proxies exhibited effective cohesive team behavior 
teams order magnitude bigger previously published proxy teams represent significant step forward building big teams 
ensure approach leveraging peculiarities specific domain improved performance tested approach distinct domains identical proxies 

building large teams section provide detailed model organization coordination team 
high level team behavior understood follows 
team members detect events environment result plans achieve team top level goal 
team finds sub teams plans subteams agents communicate maintain accurate models ensure cohesive behavior 
subteams agents communicate goals subteams interactions subteams detected conflicts resolved 
agents share locally sensed information associates network allow team leverage local sensing abilities team member 

organizing large teams team consists large number agents 
network arranges team small worlds network defined agent network 
minimum number agents message pass get agent associates network distance agents 
example shown agents neighbors share neighbor distance 
require small amount code changed interface different domain agents 

relationship subteams associates network network small worlds network imposes constraints 
small integer typically 
second ai aj distance ai aj small integer typically 
plans subteams team top level goal team commits semantics steam 
achieving requires achieving sub goals gi known advance function environment 
example sub goals high level goal respond disaster extinguish fire provide medical attention injured civilians 
sub goal addressed gi di 
team plans plans plan individual team members necessarily know plans 
maximize responsiveness team changes environment allow team member commit team executing plan detects gi relevant 
description way sub goal achieved rr individual activities performed order execute 
di domain specific information plan 
convenience write perform signify agent working role la role allocation results dynamically changing subset team involved role allocation 
capture identities agents involved role allocation allocate 
mutual beliefs subteams agents working plan neighbors associates network subteam plan write subteam 
allocation team members roles may change due failures changing circumstances members permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm subteam change 
subteam members kept informed state plan informed plan irrelevant 
maximizes cohesion minimizes wasted effort 
typically may vary plan complexity 
typically 
subteams basis coordination framework leads scalability teams 
distinguish sets agents subteam assigned roles plan 
subteam members assigned roles plan called role executing agents rea pi perform non role executing agents called weakly goal related agents pi allocate pi associate allocate pi associate rea 
key scaling teamwork efficient sharing information pertaining activities team members 
definitions subteams provide relaxed requirements mutual beliefs making feasible build larger teams 
specifically agents maintain mutual beliefs pieces information agents maintain mutual beliefs gi 
maintaining mutual beliefs subteam requires relatively little communication scales subteams added 
conflict detection detecting conflicts synergies known plans challenging task context large team critical additional problem ensuring team member knows recipes 
focus additional challenge 
allow individual agent commit team goal possibility team may executing conflicting plans plans combined single efficient plan 
conflict detected plan termination merging possible due fact agents form subteam maintain mutual belief 
infeasible require team member know plans distributed approach leveraging associates network 
approach leads high probability detecting conflicts synergies low overheads 
plans conflict potential synergy require detect 
simple probability calculation reveals probability overlap subteams pr overlap cm number agents size subteam size subteam acb denotes combination 
example overlap despite subteam involving team 
constituents subteam change time lower bound probability conflict detected time agents involved 
section experimentally show technique leads high probability detecting conflicts 

sharing information large teams previous section showed requiring mutual beliefs subteams acting specific goals dramatically reduce communication required big team 
individual team members get domain level information local sensors relevant members subteam 
due fact team members know subteam doing locally sensed information know requires 
section approach sharing information leveraging small worlds properties associates network 
associates network need information neighbor 
agents send information team messages 
message consists parts sender count 
elements sender denote agent sent message piece information communicated 
algorithm interested delivering domain level information opposed coordination information 
defines information sent defined di section 
elements message count team information flow see determine forwarding message respectively 
purposes information sharing internal state team member represented sa ha ka pa 
ha possibly truncated history messages received ka local knowledge agent 
ka knows 
typically individual team members know small fraction team knows ka 
algorithms primarily aimed routing information ka information needs shared 
agents permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm 
probability model example reasoning advance route information 
example fire fighter build model interested particular street 
reason sharing information teammates improve performance team quantifying importance piece information agent time needed 
specifically function importance information calculated determining expected increase utility agent information versus 
eu ka eu ka eu ka expected utility agent knowledge ka 
knowledge useful larger value formally reward team reward knows knows notice calculation knowing piece information agent agents compute locally 
simply metric measure algorithm performance 
heart algorithm model relative probabilities sending piece information neighbor lead increase reward defined objective function 
pa agent state 
pa matrix pa represents probability neighbor best neighbor send information 
example pa usually forward agent best neighbors send 
situation illustrated 
obey rules probability require 
algorithm function choose selects neighbor send message probabilities notice function algorithm information share sa true sa sa count max steps count choose sender send choose neighbor likelihood proportional probability best send sending agent highest probability leads additional robustness inferences wrong 
function agent uses update state receives message defined 
piece information gets propagated associates network counter incremented 
counter reaches max steps information propagation stopped 
simple stopping condition agent information optimal calculation 

building network model accurate model pa information sharing agent send information agents need quickly 
pa inferred incoming messages key algorithm agents build best possible model pa specifically message arrives agent state sa updated transition function message ap parts history ha ha second information contained message added ka ka ka details update pa described 
intuitively agent tells agent fire smith st agent information traffic condition smith st sending information agent reasonable thing needs information knows 
basic idea received information interpreted evidence neighbor send information 
underlying algorithm exploits relationships pieces information model relationships 
write function rel indicates agent interested interested rel indicates agent interested interested rel inferred 
rel relates pieces domain level information permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm sume easily inferred domain 
applying basic idea bayes rules define message received way pa pa rel pa normalized ensure 
case equation important 
updates probability agent just sent information best send information relationships pieces information just sent 
second case simply changes probability sending information agents sender way ensures normalization works 
third case encodes idea want send piece information agent sent 
consider example row matrix shows gets information send agent 
assume agents wanting information probably want information wanting definitely want thatis rel message information arrives agent 
applying pa get result effects intuitive sent back pa ii probability sending increased agents wanting probably want iii probability sending decreased agents wanting probably want 
sharing models improve efficiency adding small amount information message sender count agents share models improve performance 
notice ways achieve technique gives results low computational overhead 
intuitively idea follows 
agent sending message share part model information effectively routed network 
specifically decides placed route information add additional information message letting know send receives 
conversely knew placed route add information told send received 
key efficiency technique sending key parts accumulated model messages team quickly get accurate models pi route information effectively 
specifically determine agent send message way 
sum evidence agent received neighbors send piece information 
specifically calculate kb rel 
result interpreted value routing information choose send information provide maximum value 
specifically send model information argmax kb agent receives extra model information form accordingly 
define rel eb qi qi local relationship eb 
rel value routing information perspective 
rel 
write update function agent uses update follows pa ec pa rel eb pa weighting factor captures strongly lets influenced incoming information 
best value determined empirically 
previous section normalized 
continue example permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm 
coordinating agents disaster response simulation average axis fires extinguished conflicts messages agent axis targets hit axis 
message qi qi receives extra information increases value sending information agent shown row array 
extra information relationship second third rows changed 

experimental results section empirical evidence approach combination high low fidelity experiments 
figures show results experiment proxies running coordination algorithms described section 
experiments represent high fidelity tests coordination algorithms illustrate effectiveness approach 
experiment proxies control fire trucks responding urban disaster 
trucks travel environment locate fires spread extinguished extinguish 
top level goal team put fires 
single plan requires individual fire put 
experiment plan role put fire 
varied sensing range fire trucks far close measured key parameters 
critical thing note approach successful coordinating large team 
column compares number fires started 
close sensing team required searching find fires result unsurprisingly fires spread 
able extinguish slightly faster 
small worlds network vs random network distribution number steps required far sensing team partly far sensing team wasted resources situations plans fire see column conflicts 
conflicts resolved took nontrivial amount time slightly lowered team ability fight fires 
resolving conflicts increased number messages required see column differences number messages attributed fire fighters sensing fires spreading information 
experiment showed number messages required effectively coordinate team extremely low partially due fact low level coordination agents required fire truck plan 
shows high level results second domain exactly proxy code 
graph shows rate simulated uavs coordinated proxies searched battle space destroyed targets 
taken experiments domains show approach effective coordinating large teams suggests reasonably general 
experiments large teams show approach extremely difficult isolate specific factors affecting performance 
better understand key algorithms matlab experiment problems 
tested information sharing algorithms large teams different types network small worlds network network random links 
arranged agents network randomly picked agent source piece information sink sink agent large 
sink agent sent messages information related strongly related max steps 
source agent sent measured long takes get sink agent 
mi indicates model inferring algorithm ms indicate model sharing algorithm 
re permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm steps number messages 
association number relative messages delivery time sult shown 
anticipated algorithms perform best performance best small worlds network 
similar setup measured variation length time takes get piece information sink 
show frequency distribution time taken network agents max step 
big percentage messages arrive efficiently sink small percentage get lost network illustrating problem probabilistic approach 
despite messages long time arrive eventually faster moved random 
looked detail exactly messages network routing efficient 
agents varied number messages sink agent send source agent sent network 
notice messages required dramatically affect average message delivery time 
understand functionality associates network simulations run see effect having associates dynamically changing subteam 
wanted demonstrate subteams common members associates conflicts subteams detected easily 
subteams composed members formed group 
subteam size members chosen random checked subteam common team members 
shows calculated percentage team member overlap subteam initially formed simulation 
graph matches closely calculated probability pr overlap cm subteams dynamic case teams mutually exclusive team member chosen random replace current subteam member 
shows average number times team members needed replaced common team member 
size subteam size subteam size subteam 
probability having common agents vs subteam size average number times agents need replaced order common agents size subteam 
summary approach building large teams allowed build teams order magnitude bigger previously published 
achieve fundamentally new ideas developed new scalable algorithms implemented 
specifically approach organizing team dynamically evolving subteams 
potentially inefficient interactions subteams detected sharing information network independant subteam relationships 
leveraged small worlds properties networks efficiently share domain knowledge team 
remains done fully understand able build large teams represents significant step forward 
acknowledgments research supported afrl mnk 
burstein 
framework dynamic information flow mixed initiative human agent organizations 
applied intelligence agents process management 
forthcoming 
chalupsky gil knoblock lerman oh pynadath russ tambe 
electric agent technology supporting human organizations 
ai magazine 
clement durfee 
scheduling high level tasks cooperative agents 
proc pages 
ephrati pollack ur 
deriving multi agent communication filtering strategies 
proceedings ijcai 
scerri tambe 
building largescale robot systems distributed role assignment dy permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm namic uncertain domains 
proc 
workshop representations approaches time critical decentralized resource role task allocation 
sycara 
conversational case planning agent team coordination 
proc ofthe fourth int 
conf 
case reasoning 
goldman zilberstein 
optimizing information exchange cooperative multi agent systems 
proc 
aamas 
jennings 
specification implementation belief desire joint intention architecture collaborative problem solving 
intl 
journal intelligent cooperative information systems 
jennings 
controlling cooperative problem solving industrial multi agent systems joint intentions 
artificial intelligence 
jim giles 
communication improve performance multi agent systems 
proceedings fifth international conference autonomous agents 
kitano asada kuniyoshi noda osawa matsubara 
robocup challenge problem ai 
ai magazine spring 
nair ito tambe marsella 
task allocation robocup rescue simulation domain 
proc 
international symposium robocup 
paolucci shehory sycara 
interleaving planning execution multiagent team planning environment 
journal electronic transactions artificial intelligence may 
pynadath tambe 
multiagent teamwork analyzing optimality complexity key theories models 
proc 
aamas 
pynadath tambe 
automated teamwork infrastructure heterogeneous software agents humans 
special issue infrastructure requirements building research grade multi agent systems 
scerri pynadath johnson rosenbloom schurr si tambe 
prototype infrastructure distributed robot agent person teams 
proc 
aamas 
sycara lewis 
team cognition chapter integrating agents human teams 
erlbaum publishers 
sycara williamson decker 
distributed intelligent agents 
ieee expert intelligent systems applications 
tambe 
flexible teamwork 
jair 
watts strogatz 
collective dynamics small world networks 
nature 
xuan lesser zilberstein 
communication decisions multi agent cooperation model experiments 
proc 
agents 
yen yin miller xu volz 
cast collaborative agents simulating teamwork 
proc 
ijcai pages 
