ieee journal selected areas communications vol 
february tcp veno tcp enhancement transmission wireless access networks cheng peng fu associate member ieee senior member ieee wireless access networks form wireless local area networks home networks cellular networks integral part internet 
wired networks random packet loss due bit errors negligible wireless networks causes significant performance degradation transmission control protocol tcp 
propose study novel congestion control mechanism called tcp veno simple effective dealing random packet loss 
key ingredient veno monitors network congestion level uses information decide packet losses due congestion random bit errors 
specifically refines multiplicative decrease algorithm tcp reno widely deployed tcp version practice adjusting slow start threshold perceived network congestion level fixed drop factor refines linear increase algorithm connection stay longer operating region network bandwidth fully utilized 
extensive network testbed experiments live internet measurements show veno achieve significant throughput improvements adversely affecting concurrent tcp connections including concurrent reno connections 
typical wireless access networks random packet loss rate throughput improvement demonstrated 
salient feature veno modifies sender side protocol reno changing receiver side protocol stack 
index terms congestion control congestion loss random loss transmission control protocol tcp reno tcp vegas tcp veno wireless access networks 
wireless communication technology making significant progress past playing important role access networks evidenced widespread adoption wireless local area networks wlans wireless home networks cellular networks 
wireless access networks usually interconnected wired backbone networks applications networks run top transmission control protocol internet protocol tcp ip 
manuscript received may revised september 
supported part area excellence information technology hong kong aoe part hong kong research council competitive cuhk 
fu done information engineering department chinese university hong kong hong kong 
fu chinese university hong kong hong kong 
nanyang technological university singapore mail franklin fu ieee org 
chinese university hong kong hong kong mail cuhk edu hk 
digital object identifier jsac ieee tcp reliable connection oriented protocol implements flow control means sliding window algorithm 
tcp tahoe reno slow start ss congestion avoidance ca algorithms adjust window size enjoyed success date 
particular reno currently widely deployed tcp stack enabling sorts internet applications 
reno algorithm increasingly stretched emergence heterogeneity internet different segments network may widely different characteristics 
optical fiber links highly reliable wireless links subject high bit error rates asymmetric digital subscriber line adsl access lines asymmetric different capacities directions satellite networks higher propagation delay terrestrial networks wireless access networks may suffer high packet loss rates 
reno treats occurrence packet loss manifestation network congestion 
assumption may apply networks wireless channels packet loss induced noise link error reasons network congestion 
defined refer packet loss random packet loss 
misinterpretation random loss indication network congestion causes reno back sending data rate unnecessarily resulting significant performance degradation 
tackle problem break parts distinguish random loss congestion loss information refine congestion window adjustment process reno 
tcp vegas employs proactive congestion detection proposed claim able achieve throughput improvement ranging compared reno 
reproduced claims showed reducing packet loss subsequent retransmissions vegas offer higher throughput reno 
showed performance vegas connections degrades significantly coexist concurrent reno connections 
bias vegas particularly severe asymmetric networks 
despite limitations innovative idea vegas uses simple mechanism gauge network condition 
vegas estimate network condition prevent packet loss proactively determine packet losses due network congestion random phenomena 
specifically packet loss detected estimate indicates network congested declare loss random 
fu tcp veno reno modified reduces sending rate aggressively random loss detected preventing unnecessary throughput degradation 
refer algorithm combines ideas vegas reno veno 
past decades tcp extensively studied 
numerous proposals improve tcp performance :10.1.1.133.3305
practical deployment issues evaluation heterogeneous networks considered proposals compare reno 
reno remains dominant version practice 
attempt demonstrate veno viable enhancement reno 
extensive network testbed experiments live internet measurements show veno achieve significant throughput improvements adversely affecting concurrent tcp connections network including concurrent connections legacy reno implementation 
evidence showing veno derives improvement efficiency tapping unused bandwidth network bandwidth expense tcp connections 
wireless networks random loss throughput improvement demonstrated 
veno involves modification reno sender side requiring changes receiver protocol stack intervention intermediate network nodes 
deployed immediately server applications current internet coexisting compatibly large installed base reno 
rest organized follows 
section ii describes veno mechanism 
presents observations led refined multiplicative decrease additive increase algorithms 
section iii experimental results firstly show ineffectiveness refined algorithms comprehensive evaluation veno performance real network live internet demonstrated 
section iv contains suggestions 
ii 
tcp veno distinguishing congestion loss random loss providing different measures deal fundamental problem remains unsolved tcp 
veno mechanism similar vegas estimate state connection scheme deduce kind packet loss congestion loss random loss occurred pursue preventing packet loss vega 
packet loss detected connection congestive state veno assumes loss due congestion assumes loss random 
veno mechanism similar vegas estimate state connection scheme deduce kind packet loss congestion loss tcp veno implemented netbsd freebsd linux 
enhanced version selective sack option implemented source codes available email request detailed please see documented july noticed time modified tcp called westwood proposed alternative approach deal tcp suffering wireless networks 
random loss occurred pursue preventing packet loss vegas 
distinguishing congestive states vegas sender measures called expected actual rates cwnd current tcp window size basertt minimum measured round trip times rtt smoothed round trip time measured 
difference rate bottleneck link packets connection accumulate 
backlog queue denoted wehave attribute extra delay bottleneck link second term right side 
rearranging vegas attempts keep small range adjusting tcp window size proactively avoiding packet loss due buffer overflow altogether 
unfortunately proactive window adjustment puts vegas disadvantage coexisting reno connections path aggressive reno policy continues increase window size packet loss occurs 
second problem vegas backlog measures necessary data backlog 
asymmetric networks bottleneck link reverse path backlog indicated equation may due backlog tcp acknowledgment bottleneck link 
backlog vegas continue increase window size allow higher data sending rate forward path forward path congestion free 
reno contrast probes additional forward bandwidth increasing window size continually 
main idea algorithm veno measurement way adjust window size proactively indication connection congestive state 
essential idea reno window size increased progressively packet loss remains intact veno 
specifically packet loss detected veno assume loss random congestive different window adjustment scheme reno veno assume loss congestive reno window adjustment scheme adopted 
experiments indicate setting 
worth pointing original vegas algorithm basertt continually updated live time tcp connection minimum round trip time collected far 
basertt reset packet ieee journal selected areas communications vol 
february loss detected due time duplicate acks 
basertt updated original vegas algorithm fast recovery slow start triggered 
done take account changing traffic connections bandwidth acquired single connection connections may change time time causing basertt change 
congestion control connection state reno employs fundamental algorithms 
sections review algorithms describe veno modifies 
slow start algorithm start phase connection reno sets window size cwnd sends packet 
time packet acknowledged window size increases 
cwnd increases round trip time second round trip time reception acks 
results exponential increase sending rate time packet loss experienced 
veno employs initial slow start algorithm reno modifications 
additive increase algorithm addition cwnd window threshold parameter ssthresh slow start threshold reno 
cwnd ssthresh slow start algorithm adjust cwnd 
window increase rate reduced avoid congestion 
specifically cwnd increased round trip time reception ack 
essentially cwnd set ack achieve linear increase effect 
reno initial value ssthresh kb 
value ssthresh changed dynamically duration connection detailed 
veno additive increase algorithm reno modified follows available bandwidth fully utilized set new ack received available bandwidth fully utilized set new ack received part algorithm reno 
second part backlog packets buffer exceeds increase window size round trip times connection stay operating region longer 
illustration fig 
shows difference window evolutions veno reno connection experiment campus network 
seen figures veno experiences fewer oscillations reno 
addition veno stays region longer increase window size quickly reno critical region reached 
aspect veno drastically different algorithm vegas window decreasing scheme adopted critical region reached 
fig 

tcp veno evolution 
tcp reno evolution random loss 
generally tcp throughput backlog increasing cwnd increase rtt throughput goes accordingly 
backlog increasing window size increase tcp throughput anymore corresponding increase rtt due increasing backlog bottleneck link 
tcp throughput flattens increasing cwnd backlog 
veno increasing window slowly compared reno critical region backlog cause throughput reduction effect deferring onset self induced congestion loss forcing tcp stay longer optimal transmission rate region 
fig 
experimental trace see veno experiences congestion loss excluding packet losses resulted initial slow start reno 
additionally practical standpoint reno widely deployed current internet modified tcp version conform specifications defined rfc fu tcp veno rfc rfc 
veno continues increase window imminent congestion detected slower speed reno 
veno complies rule set rfcs 
multiplicative decrease algorithm reno ways detect packet loss 
packet declared lost acknowledged receiver timer expires 
case slow start algorithm initiated ssthresh set cwnd reset 
drastic effect suddenly reducing sending rate large amount 
expiration timer interpreted indication severe congestion 
veno modify part algorithm 
reno employs algorithm fast retransmit detect packet loss 
time receiver reno connection receives order packet retransmits ack sender 
example receiver received packet packet packet arrives send ack ack number tells sender receiver expecting packet 
sender duplicate ack receiver previously issued ack receives packet 
packet arrives packet missing receiver issue ack 
reno sender receives duplicate acks declares corresponding packet lost timer expired 
complementary algorithm fast retransmit called fast recovery employed alleviate congestion follows 
retransmit missing packet set set time dup ack arrives increment cwnd packet 
ack acknowledging new data arrives set cwnd ssthresh value step 
veno modifies part step ssthresh set 
specifically random loss due bit errors occurred congestive loss occurred words connection congestive state veno assumes loss random 
accordingly reduces ssthresh cwnd smaller amount 
example experimental results factor 
general factor larger smaller window size drastic case loss due congestion 
experimentation shows factor larger desirable 
illustration fig 
shows typical window evolutions veno reno obtained experimentally 
detailed results shown section 
example round trip time traced traceroute ms random loss rate 
veno packets losses artificially induced network 
compared reno blindly reducing fig 

veno window evolution 
reno window evolution 
window veno decreases window factor losses 
losses veno reduces window half due false alarms veno random loss congestion loss 
see cases veno behavior degenerates reno consequence worse experienced reno 
sense addressed section iii severe penalty corresponding kinds random loss may right action connection trapped congestive state thought buffer overflowing happened 
intuitively seeing fig 
veno window evolution robust sort immune capability random loss 
summary veno refines additive increase multiplicative decrease aimd mechanism reno 
parts reno including initial slow start fast retransmit fast recovery computation retransmission timeout backoff algorithm remain intact 
sender stack modified 
ieee journal selected areas communications vol 
february fig 

experimental networks 
random loss artificially induced router 
random loss occurs wireless link random loss artificially induced router 
final point noted clock resolution conventional tcp ms coarse grained measurement rtt calculation actual expected rates 
veno millisecond resolution timestamp recorded transmitted segment connection leaves initial slow start stage 
detailed implementation discussed 
iii 
performance evaluation tcp veno describe experimental set ups section iii study effectiveness packet loss distinguishing scheme veno 
sections iii iii compare performance results reno veno tcp lossy experimental networks networks random loss random loss 
demonstrated veno achieves significant throughput improvements reno coexist reno degrade performance reno 
live internet measurements section iii back observations 
verification packet loss distinguishing scheme veno experimental network setup performed experiments 
packet loss artificially induced real wireless network random packet loss occurs 
fig 
shows experimental set 
tcp senders run tcp reno veno netbsd 
tcp receivers red hat linux installed 
links labeled bandwidth capacities 
drop tail router fifo queues set freebsd 
embedded commands configure forward buffer size backward buffer size forward bandwidth reverse bandwidth forward propagation delay reverse propagation delay different random packet loss rates artificially induced embedded system command freebsd 
fig 
wireless client wc connected router wireless access point ap tcp connection set veno source src wireless client wc 
addition udp connection set src des provide background traffic 
logging packets veno source src router router wireless client wc developed infer packets lost due buffer overflow router packets wireless link 
congestion loss random loss successfully separated 
section iii setup verify effectiveness veno packet loss distinguishing scheme 
verification packet loss distinguishing scheme section report test effectiveness proposed packet loss distinguishing scheme veno 
purpose consider single tcp veno connection sharing bottleneck link background traffic study case background traffic provided udp connection 
configuration experimented features mb bottleneck link fcfs discipline buffer size tcp udp packets assigned priority 
round trip time traced ms wc src 
table shows results runs experiment day 
mb file transferred wc src veno test 
run experiment veno experienced fast retransmits udp sending rate kb fast retransmits triggered veno estimated connection state triggered veno estimated connection congestive state 
fast retransmits wrong estimation packet loss due buffer overflow router loss wireless link 
accuracy estimation close data zero mb udp background traffic runs experiment show consistently high estimation accuracy 
fast retransmits triggered veno assuming connection congestive state accuracy low 
fast retransmit due correct state estimations 
random loss congestion loss cause adverse effects congestion window reduced half reno 
bring throughput improvement veno 
matter fact random losses occur period connection trapped congestive states imply extra packets accumulated buffer bottleneck router tcp connection path buffer overflowing occurred 
sense window halved drop tail router drops newly arriving packets buffer full 
fu tcp veno table effectiveness veno packet loss distinguishing scheme different udp sending rates ff ff fast retransmit triggered veno estimated connection non congestive congestive states respectively 
refer reduction factor congestion window reductions corresponding kinds random loss may right actions available bandwidth fully utilized situations 
kinds random loss regarded congestive drops system congested extent 
may examine congestive losses columns congestion table see caused wrong window reduction veno 
example udp background traffic kb round congestive losses 
looking results rate congestive losses random losses twelve run udp traffic mb usually lower zero background traffic veno connection traffic background traffic kb 
single connection experiments section single tcp connection results source destination pairs fig 
turned 
fig 
shows evolution average sending rate loss probabilities ranging buffer size router set link speed mb round trip propagation delay ms maximum segment size fig 
axis sending rate tcp connection axis time axis segment loss probability 
data point sending rate corresponds amount data sent interval ms divided ms durations experiments 
packet loss rate relatively smaller evolutions veno reno similar 
loss rate close packets corresponds bit error rate segment size segment size veno shows large improvements reno 
better observe throughput difference reno veno different packet loss rates throughput versus loss rate plotted fig 

mb file transferred run 
parameters experiment setting 
throughput derived dividing mb time taken transfer file 
shown throughput tcp veno consistently higher tcp reno range random loss probabilities 
particular loss rate packets throughput tcp veno kb fig 

average sending rate loss probability ranging higher tcp reno kb 
desirable results mainly attributed veno refined multiplicative decrease algorithm performs intelligent window adjustment estimated connection state 
low loss environments random loss rate equal packets veno reno roughly throughput 
low rates random loss significant factor 
likelihood having packet loss congestion window cwnd fundamental parameter determining tcp behavior small case 
ieee journal selected areas communications vol 
february fig 

throughput versus packet loss rate reno veno 
heavy random loss situation close reno veno maintain tcp self clocking mechanism experience frequent timeouts 
timeouts occur veno reno operate similarly falling back slow start algorithm 
fig 
tcps degrade significantly loss rate heavy packet loss rate seldom occurs real wireless networks 
random packet loss rate typical 
rfc example shows wireless channel cdma data service error rate little correlation losses 
experiments involving multiple existing connections experiments section network depicted fig 

maximum segment size bytes 
verify compatibility veno reno set connections consisting mixture veno reno share common bottleneck link mb round trip propagation time ms connection transferred mb file 
fig 
shows sequence number evolution reno connections fig 
shows sequence number evolution reno connections solid curve veno connections dashed curve random loss introduced 
shown graphs veno competes reno fair manner throughputs connections roughly 
fig 
shows results experiments random loss rate introduced 
indicated fig 
veno connections exhibit substantially higher throughput coexisting reno connections 
note evolution reno connections fig 
close fig 
veno absent 
infer veno achieve superior throughput aggressively grabbing bandwidth away reno better able available bandwidth left unused 
veno adversely affect coexisting reno conclude veno compatible reno 
interesting observe slopes veno connections fig 
roughly fig 

means veno connections adversely affected random loss rate 
comparison veno connections fig 
shows veno connections share bandwidth fair manner 
fairness veno connections compatibility reno connections verified additional experiments results depicted fig 

measured throughput total connections consisting mixture reno veno connections 
fig 
shows average throughput connection reno veno 
horizontal axis number veno connections 
example experiment corresponding point marked axis consisted reno veno connections 
average throughput connection standard deviations shown 
graphs important observations 
observation fairness 
data points exhibit small standard deviations 
fairness observed group reno veno connections 
second observation curves nearly horizontal regardless combination reno veno connections 
significance observation coexisting veno starve bandwidth reno connections vice versa 
coexist 
third observation veno somewhat higher throughput reno environments lossy networks significant improvements reno obtained 
obviously improvements attributed efficient utilization available bandwidth 
live internet measurements preceding section lossy network model artificially introduced router order simulate behaviors tcp different situations 
results live internet measurements section 
performance wlan wide area network wan studied 
measurement tcp veno tcp reno wlan wireless lan shown fig 
set single connection experiments 
wireless base station wireless network adapter laptop 
base station located room laptop room 
distance laptop client download mb file data server connected ethernet switch 
round trip time laptop server ms traced traceroute 
fig 
shows throughput measurements day duration 
total conducted tests period days 
results similar 
generally throughput veno connection kb improvement reno connection kb 
latest experiments veno gets throughput improvement 
throughput measurement straightforward metric gauge performance tcp capture detailed behavior tcp connections 
practice aggressiveness evaluated measuring number retransmitted packets depends timeouts experienced fast retransmits triggered 
section section metrics evaluate behavior veno reno tcp aggressive 
average number retransmitted packets veno connection packets reduction compared retransmitted packets reno connection 
average number timeouts experienced fu tcp veno fig 

reno connections random loss 
reno veno connections random loss 
reno random loss rate 
reno veno random loss rate veno reduction respect timeouts reno 
tool developed average number fast retransmits triggered veno versus reno reduction 
gathered data suggest veno improvement reno attributed efficient utilization available bandwidth 
matter fact respect frequencies retransmits timeouts veno connection refined aimd employed conservative reno connection particular lower loss situations modified additive increase modified multiplicative decrease comes effect 
confirmed experiments metropolitan cross country wan part 
measurement veno reno wan conducted live measurement wide area internet 
shown fig 
set server chinese university hong kong cuhk veno reno installed 
clients separately located hua university tsu china university hong kong hku 
cuhk hku connected metropolitan wans cuhk tsu connected cross country wans 
additionally client university california berkeley planned 
presents results related cuhk tsu hku 
conducted experiment introducing wireless links tested path 
random packet loss probability small expect improvement veno reno small similar behavior seen fig 

purpose experiment verify veno works live network environment 
implementation lets users choose different tcp versions socket function ieee journal selected areas communications vol 
february fig 

average throughput versus number veno connections sum veno reno connections fixed 
network 
lossy network 
measured results different time slots day shown table ii 
time slots day 
time slot conducted tests minute breaks consecutive tests 
test tcp connections veno reno set simultaneously transfer mb data file cuhk hku 
data shown column averaged values runs 
round trip time traced traceroute hku cuhk ms ms variation different time slots 
totally conducted tests time slots days monday friday 
general trends results days similar show results day table ii 
table ii veno obtains slightly higher throughput reno 
reduced amount timeouts fast retransmits retransmitted packets veno shown aggressive reno 
veno steal bandwidth reno coexist reno connection 
slight higher performance achievement attributed better utilization available bandwidth 
set experiments set wlan access networks hku 
seen fig 
mobile client fig 
wireless lan topology 
wireless lan measurement 
fig 

wan measurement topology 
laptop connected outside internet wireless access network 
models adopted section iii 
base station client located separated rooms 
mb file transferred server mobile client test 
table iii shows results tests cuhk hku different periods day fu tcp veno table ii measurements multiple connections reno veno cuhk hku timeout ff fast retransmit triggered 
pks retransmitted packets table iii measurements single connection metropolitan wans cuhk hku timeout ff fast retransmit triggered 
pks retransmitted packets table iv measurements single connection cross country wans cuhk tsu timeout ff fast retransmit triggered 
pks retransmitted packets reno veno 
time slots day 
time slot conducted tests reno veno sequence reno connection tested completed test veno started minute 
minute break reno veno tested minute tests 
repeated tests completed 
values table iii time slot average values tests 
round trip time traced traceroute hku cuhk ms ms variation different time slots 
conducted tests time slots days monday friday 
general trends results days similar show results day table iii 
table iii veno obtains throughput improvement reno different time slots 
numbers timeouts fast retransmits triggered retransmitted packets lower veno 
measurements obtained metropolitan wans 
look test results cross country wans tsu host cuhk table iv 
set wireless lan model access network hua university 
round trip time measured traceroute tsu cuhk ms ms variation different tests 
general trends results days similar 
table iv shows measurement results day 
tables see generally veno achieves higher throughput reno particularly metropolitan wan 
improvement consistent day due variability factors live internet interfering traffic cross country path experiments conducted 
veno aggressive reno terms numbers timeouts fast retransmits triggered retransmitted packets 
iv 
concluding remarks random packet loss wireless access networks cause performance degradation tcp connec ieee journal selected areas communications vol 
february tion 
proposed demonstrated novel tcp version called tcp veno deal random packet loss effectively basis 
numerous experiments conducted experimental networks live internet different areas hong kong china 
detailed investigations clearly indicate tcp veno achieve significant improvement adversely affecting concurrent tcp connections network 
veno desirable 
deployability improved tcp worthwhile easy deploy existing internet 
modifying legacy tcp design ask question modification design amenable easy deployment real networks realize goal ideally little preferably changes required intermediate routers 
ends communicating terminals preferred side requires changes party interested enhanced performance incorporate new algorithm requiring forcing peers adopt changes 
generally preferred sender sends large volumes data receivers modify algorithm web server receivers 
simple modification tcp sender stack veno easily deployable real networks 
party interested enhanced performance single installing veno stack 
compatibility compatibility refers newly introduced tcp compatible legacy tcp sense cause detrimental effects legacy tcp vice versa running concurrently network 
veno reno stealing bandwidth reno 
improvement attributed efficient utilization available bandwidth 
flexibility flexibility refers tcp deal range different environments effectively 
difficult categorically declare tcp version flexible flexible 
say veno flexible reno deal random loss wireless networks better alleviate suffering asymmetric networks comparable performance wired networks 
idea veno straightforward hindsight obvious started 
combines elements opposing tcp camps reno uses reactive congestion control vegas uses proactive congestion control 
veno regarded reactive algorithm certainly aim eliminate packet loss entirely idea state estimation vegas formulate better strategies deal packet loss stay optimal operating region longer 
addressed issue bursty packet loss wireless networks 
sack option proposed shown effective dealing multiple packet losses congestion window 
veno solve problem multiple packet losses 
veno sack combined easily yield enhanced tcp implementation sack veno 
investigated performance sack veno different network conditions 
results show sack veno increase throughput pure sack packet loss rate 
comparison veno reno experiments show improvement sack veno attributed better efficiency aggressiveness grabbing bandwidth connections 
tcp protocol stacks providing sack option 
sack available receiver side sack veno requires modification sender stack 
generally speaking see tcp veno borrows idea congestion detection scheme vegas intelligently integrates reno additive increase phase 
state estimation supplementary information decide refine additive increase step window reduced fast retransmit triggered 
course principally predictive congestion detections pbm packet pair better predictive congestion detection schemes combinations schemes refine reno evolution 
tcp veno proposes refine reno aimd evolution heterogeneous networks complete judgment network state estimation congestive state non congestive state merely depending packet loss occurrence 
date explored center accurately making packet losses due congestion due bit errors reasons limited uncertain factors background traffic changing connection path real networks progress kind judging looks slow 
may meaningful practical tcp connection differentiate congestive drops occurring congestive state drops occurring state 
veno adopts differentiation circumvent packet loss type distinguishing 
study issue conducted 
acknowledgment train thoughts leading veno started reading floyd rfc list tcp compatible congestion control procedures limited aimd increase decrease parameters tcp 
tcp compatible congestion control procedures include rate variants aimd aimd different sets increase decrease parameters give steady state behavior authors dr paxson invaluable constructive suggestions original tool provided 
guidance impossible finish 
authors prof li dr wang tsinghua university beijing china prof li dr yeung university hong kong prof chinese university hong kong great help acknowledging chung lui nam wang experimental dr law university toronto constructive discussion anonymous reviewers ieee jsac valuable comments suggestions 
authors fu tcp veno grateful dr xie founding member sctp motorola encouragement bing research faculty georgia institute technology comments dr chiu research lab sun microsystem careful guidance particular deeply influenced design veno algorithm 
fu tcp veno congestion control heterogeneous networks ph dissertation chinese univ hong kong hong kong 

chung sack tcp enhanced version sack tcp phil thesis chinese univ hong kong hong kong 
fu 
chung performance degradation tcp vegas asymmetric networks remedies proc 
icc vol 
helsinki finland pp 

ahn danzig liu yan evaluation tcp vegas emulation experiment acm comput 
commun 
rev vol 
pp 
aug 
allman dawkins glover ongoing tcp research related satellites internet engineering task force ietf ser 
rfc 
allman falk effective evaluation tcp acm comput 
commun 
rev vol 
oct 
allman paxson estimating network path properties proc 
sigcomm cambridge aug pp 

allman paxson stevens tcp congestion control internet engineering task force ietf ser 
rfc apr 
lee kumar tcp hack tcp header checksum option improve performance lossy links proc 
infocom anchorage ak pp 

brakmo malley peterson tcp vegas new techniques congestion detection avoidance proc 
sigcomm london oct pp 

balakrishnan padmanabhan katz comparison mechanisms improving tcp performance wireless links proc 
sigcomm vol 
stanford ca 
hari balakrishnan challenges reliable data transport heterogeneous wireless networks ph dissertation univ california berkeley ca 
zorzi wireless tcp performance link layer fec arq proc 
icc pp 

fall floyd simulation comparisons tahoe reno sack tcp comput 
commun 
rev vol 
pp 
july 
floyd mahdavi mathis podolsky romanow 
nov 
extension selective acknowledgment sack option tcp 
online 
available www ietf org internet drafts sack txt floyd congestion control principle internet engineering task force ietf ser 
rfc sept 
tcp explicit congestion notification acm comput 
commun 
rev vol 
pp 
oct 
floyd fall promoting congestion control internet ieee acm trans 
networking vol 
pp 
aug 
freebsd handbook 
online 
available freebsd org handbook index html gross tcp vegas revisited proc 
infocom pp 

hoe improving start behavior congestion control scheme tcp proc 
sigcomm alto ca pp 

jacobson congestion avoidance control proc 
sig comm stanford ca pp 

jain delayed approach congestion avoidance interconnected heterogeneous computer networks acm comput 
commun 
rev vol 
pp 
oct 
jacobson modified tcp congestion avoidance algorithm apr 
interest mailing list 
keshav control theoretic approach flow control proc 
sigcomm zurich switzerland sept pp 

lakshman madhow performance tcp ip networks high bandwidth delay products random loss ieee acm trans 
networking vol 
pp 
june 
lakshman madhow window error recovery flow control slow acknowledgment channel study tcp ip performance proc 
infocom pp 

la anantharam 
july issues tcp vegas online 
available www path berkeley edu mitzel overview iab wireless internet working workshop internet engineering task force ietf ser 
rep rfc 
mo la anantharam jean analysis comparison tcp reno vegas proc 
infocom vol 
pp 

garcia luna aceves improving tcp performance wireless networks link layer acm mobile networks applications vol 
pp 

paxson measurements analysis internet dynamics ph 
dissertation univ california ca 
garcia luna aceves improving tcp congestion control internets heterogeneous transmission media 
berkeley ca comput 
eng 
dept univ california 
rizzo 
dummynet simple approach evaluation network protocols 
acm comput 
commun 
rev online pp 
raman mccanne model analysis protocol framework soft state communication proc 
sigcomm cambridge ma pp 

ming wang improving tcp performance asymmetric networks acm comput 
commun 
rev vol 
pp 

wang crowcroft new congestion control scheme slow start search tri acm comput 
commun 
rev pp 
jan 
wang kung tcp decoupling improving tcp performance wireless networks wireless network vol 
pp 


chiu jain analysis increase decrease algorithms congestion avoidance computer networks comput 
networks isdn vol 
pp 
june 
gerla mascolo wang tcp westwood bandwidth estimation enhanced transport wireless links proc 
acm mobicom rome italy july pp 

chung fu improvements achieved sack employing tcp veno equilibrium oriented mechanism lossy networks proc 
int 
conf 
trends communications bratislava slovakia july pp 

cheng peng fu received eng 
phil 
degrees electromagnetic theory microwave technology ph degree information engineering shanghai university science technology shanghai china chinese university hong kong hong kong respectively 
founding members china education research network launched network universities china tcp ip technology served shanghai tong university faculty member networking center 
designed deployed shanghai tong campus atm network shanghai education research network shanghai telemedicine center 
joined sun microsystem shanghai china senior member technical staff 
currently assistant professor nanyang technological university singapore 
worked tv news reporter years graduation 
conducted research published actively areas network protocol architecture design distributed object design ee microwave analysis measurement 
ieee journal selected areas communications vol 
february sm received ph degrees massachusetts institute technology mit cambridge 
mit laboratory information decision systems investigated fiber optic communications networks 
march july bellcore telcordia nj engaged broadband network research 
currently professor chinese university hong kong hong kong 
currently director area excellence information technology aoe hong kong joint project chinese university university science technology university hong kong 
academic activities active industry 
technology start ups internet software currently consultant hong kong applied science technology research institute 
holder patents 
research interests include internet protocols multimedia communications optical networks broadband packet switch design initiated coordinated inter university atm network testbed hong kong 
dr member research council engineering panel hong kong fellow iee 
listed marquis science engineering 
