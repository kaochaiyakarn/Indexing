vivaldi decentralized network coordinate system frank dabek russ cox frans kaashoek robert morris mit csail cambridge ma rsc kaashoek rtm mit edu large scale internet applications benefit ability predict round trip times hosts having contact 
explicit measurements unattractive cost measurement outweigh benefits exploiting proximity information 
vivaldi simple light weight algorithm assigns synthetic coordinates hosts distance coordinates hosts accurately predicts communication latency hosts 
vivaldi fully distributed requiring fixed network infrastructure distinguished hosts 
efficient new host compute coordinates collecting latency information hosts 
requires little communication vivaldi piggy back communication patterns application scale large number hosts 
evaluation vivaldi simulated network latencies measurements internet hosts shows dimensional euclidean model height vectors embeds hosts low error median relative error round trip time prediction percent 
categories subject descriptors computer communication networks network architecture design network topology computer communication networks local wide area networks internet general terms algorithms measurement performance design experimentation keywords vivaldi network coordinates internet topology 
synthetic coordinate systems allow internet host predict round trip latencies hosts :10.1.1.10.4466:10.1.1.16.1445
hosts compute permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm aug sept portland oregon usa 
copyright acm 
synthetic coordinates coordinate space distance hosts synthetic coordinates predicts rtt internet 
host learns coordinates host doesn perform explicit measurement determine rtt distance coordinate space accurate predictor rtt 
internet properties determine synthetic coordinates 
example internet latency dominated speed light delay links internet connected roughly direct physical path pair hosts internet routing system finds direct paths synthetic coordinates mimic latitude longitude predict latency 
unfortunately properties approximate 
packets deviate great circle routes site pairs directly connected different isps peer limited number locations transmission time router electronics delay packets 
resulting distorted latencies impossible choose dimensional host coordinates predict latency perfectly synthetic coordinate system strategy choosing coordinates minimize prediction errors 
addition coordinates need limited dimensions vivaldi able eliminate certain errors augmenting coordinates height 
ability predict rtt prior communication allows systems proximity information better performance measurement overhead probing 
coordinate system select number replicated servers fetch data item coordinates particularly helpful number potential servers large amount data small 
case practical probe servers find closest cost probes outweigh benefit intelligent choice 
content distribution file sharing systems kazaa bittorrent examples systems offer large number replica servers 
cfs dns examples systems offer modest numbers replicas piece data small 
applications benefit network coordinates 
designing synthetic coordinate system large scale distributed internet applications involves challenges finding metric space embeds internet little error 
suitable space cope difficulties introduced internet routing transmission time queuing 
scaling large number hosts 
synthetic coordinate systems value large scale applications hosts involved direct measurement rtt practical 
decentralizing implementation 
emerging applications peer peer applications distributed symmetric nature inherently special reliable hosts candidates landmarks 
minimizing probe traffic 
ideal synthetic coordinate system introduce additional network traffic able gather information needed application existing communication 
adapting changing network conditions 
relative location host network may change due congestion reconfiguration network 
system able adjust coordinates hosts periodically respond changes 
number existing synthetic coordinate systems address challenges addresses section discusses 
primary contribution decentralized adaptive synthetic coordinate system vivaldi computes coordinates predict internet latencies low error 
vivaldi developed chord peer peer lookup system uses coordinates avoid contacting distant hosts performing lookup 
extends earlier descriptions vivaldi considers new variations particularly coordinate space includes notion height improves prediction accuracy system data sets derived measurements internet 
height included capture transmission delays access links single homed hosts 
detailed evaluation simulator driven actual internet latencies internet hosts shows vivaldi achieves errors low gnp landmark coordinate system vivaldi notion landmarks :10.1.1.16.1445
contribution coordinates drawn dimensional euclidean model height accurately predict latency internet hosts 
simulations show model better dimensional euclidean models spherical model 
findings suggest properties hold data set inter host rtt dominated geographic distance internet core wrap earth significant extent time required traverse access link significant fraction total rtt 
rest organized follows 
section presents vivaldi algorithm 
section describes methodology evaluating vivaldi 
section presents results evaluating vivaldi 
section investigates different models embed internet 
section discusses related led vivaldi 
section summarizes 

algorithm vivaldi assigns host synthetic coordinates coordinate space attempting assign coordinates distance coordinate space hosts accurately predicts packet transmission rtt hosts 
low dimensional coordinate space allow vivaldi predict rtts internet hosts exactly example internet latencies violate triangle inequality 
algorithm attempts find coordinates minimize error predictions 
describe prediction error detail briefly discuss possible coordinate systems 
show simple centralized algorithm finds coordinates minimize squared error function complete knowledge rtts network 
simple distributed algorithm computes coordinates measurements node nodes 
refine distributed algorithm converge quickly accurate coordinates 
prediction error li actual rtt nodes xi coordinates assigned node characterize errors coordinates squared error function li xi xi distance coordinates nodes chosen coordinate space 
systems choose minimize different quantity pic instance minimizes squared relative error :10.1.1.10.4466
chose squared error function analogue displacement physical mass spring system minimizing energy spring network equivalent minimizing squared error function 
synthetic coordinate structure algorithms choose structure coordinates distance function determines predicted latency coordinates 
coordinates compact easy compute rtt prediction coordinates 
simplest choice dimensional coordinates standard euclidean distance function 
spherical toroidal hyperbolic coordinate structures proposed 
coordinate systems alternative distance functions hope predict latency better 
section coordinates propose 
remainder section algorithms coordinate system supports magnitude addition subtraction operations 
centralized algorithm describe simple centralized algorithm minimize equation 
vivaldi distributed version algorithm 
choice simulating network physical springs produces coordinates minimize conceptually minimization places spring pair nodes rest length set known rtt li 
current length spring considered distance nodes coordinate space 
potential energy spring proportional square displacement rest length sum energies springs exactly error function want minimize 
squared error function equivalent spring energy minimize simulating movements nodes spring forces 
minimum energy configuration spring system corresponds minimum error coordinate assignment guaranteed simulation find global minimum system may come rest local minimum 
approach minimization mirrors model reconstruction similar coordinate approach force fields :10.1.1.153.4735
describe centralized algorithm precisely 
define fi force vector spring nodes exerts node hooke law show fi li xi xi 
scalar quantity li xi displacement spring rest 
quantity gives magnitude force ex input latency matrix initial coordinates output accurate coordinates compute coordinates error tolerance foreach foreach compute error force spring 
li xi add force vector spring total force 
xi move small step direction force 
xi xi centralized algorithm 
spring ignore spring constant 
unit vector xi gives direction force scaling vector force magnitude calculated gives force vector spring exerts node net force fi sum forces nodes fi fi simulate spring network evolution algorithm considers small intervals time 
interval algorithm moves node xi small distance coordinate space direction fi recomputes forces 
coordinates time interval xi xi fi length time interval 
size determines far node moves time interval 
finding appropriate important design vivaldi 
presents pseudocode centralized algorithm 
node system compute coordinates computes force spring connected line adds force total force line 
forces added moves small distance direction force line 
process repeated system converges coordinates predict error 
centralized algorithm algorithms build finds coordinates minimize squared error force function chose hooke law defines force proportional displacement 
chose different force function different error function minimized 
instance spring force constant regardless displacement algorithm minimize sum errors 
simple vivaldi algorithm centralized algorithm described section computes coordinates nodes rtts 
extend algorithm node computes continuously adjusts coordinates measured rtts node handful nodes current coordinates nodes 
node participating vivaldi simulates movement spring system 
node maintains current coordinates starting coordinates origin 
node communicates node measures rtt node learns node current coordinates 
input distributed vivaldi algorithm sequence node measured node rtt ms away node says coordinates simple vivaldi rtt compute error sample 
rtt xi find direction force error causing 
dir xi force vector proportional error dir move small step direction force 
xi xi dir simple vivaldi algorithm constant timestamp 
samples 
response sample node allows pushed short time step corresponding spring movements reduce node error respect node system 
nodes continually communicate nodes converge coordinates predict rtt 
node coordinates xi learns node coordinates measured rtt rtt updates coordinates update rule xi xi rtt xi xi 
rule identical individual forces calculated inner loop centralized algorithm 
nodes start location vivaldi separate 
vivaldi defining unit length vector randomly chosen direction 
nodes occupying location spring pushing away arbitrary direction 
shows pseudocode distributed algorithm 
simple vivaldi procedure called new rtt measurement available 
simple vivaldi passed rtt measurement remote node remote node coordinates 
procedure calculates error current prediction target node line 
node move away target node magnitude error lines find direction force vector created algorithm imagined spring node move 
node moves fraction distance target node line constant timestamp 
algorithm effectively implements weighted moving average biased samples 
avoid bias node maintain list sample received nodes system constantly updating coordinates old samples eventually outdated 
maintaining list scale systems large numbers nodes 
adaptive timestep main difficulty implementing vivaldi ensuring converges coordinates predict rtt 
rate convergence governed timestep large values cause vivaldi adjust coordinates large steps 
vivaldi nodes large values result typically oscillation failure converge useful coordinates 
intuitively large causes nodes jump back forth low energy valleys smaller delta explore 
additional challenge handling nodes high error coordinates 
node communicates node coordinates predict rtts badly update coordinates increase prediction error decrease 
obtain fast convergence avoidance oscillation 
vivaldi varying depending certain node coordinates discuss node maintains estimate accuracy coordinates section 
node learning rough place network happens example node joins larger values help move quickly approximately correct position 
smaller values help refine position 
simple adaptive constant fraction cc node estimated error cc local error viewed fraction way node allowed move perfect position current sample 
node predicts error won move corrected position 
hand error large say eagerly move way corrected position 
problem setting prediction error doesn take account accuracy remote node coordinates 
remote node accuracy credence remote node accuracy 
vivaldi implements timestep local error cc local error remote error accurate node sampling inaccurate node move inaccurate node sampling accurate node move lot nodes similar accuracy split difference 
computing timestep way provides properties desire quick convergence low oscillation resilience high error nodes 
estimating accuracy adaptive timestep described requires nodes running estimate accurate coordinates 
node compares new measured rtt sample predicted rtt maintains moving average relative errors absolute error divided actual latency 
computation weight sample determined ratio predicted relative error local node node sampled 
experiments estimate small constant factor actual error 
finding accurate elegant error predictors rough prediction sufficient support parts algorithm timestep depend 
vivaldi algorithm shows pseudocode vivaldi 
vivaldi procedure computes weight sample local remote error line 
algorithm track local relative error 
weighted moving average lines 
remainder vivaldi algorithm identical simple version 
vivaldi fully distributed identical vivaldi procedure runs node 
efficient sample provides information allows node update coordinates 
vivaldi constantly updating coordinates reactive underlying incorporate new information node measured rtt ms away coordinates error estimate coordinates error estimate xi ei 
constants ce cc tuning parameters 
vivaldi rtt sample weight balances local remote error 
ei ei compute relative error sample 
es xi rtt rtt update weighted moving average local error 
ei es ce ei ce update local coordinates 
cc xi xi rtt xi xi vivaldi algorithm adaptive timestamp 
topology changes nodes naturally update coordinates accordingly 
handles high error nodes 
sections evaluate vivaldi achieves properties experimentally investigate coordinate space best fits internet 

evaluation methodology experiments conducted packet level network simulator running rtt data collected internet 
section presents details framework experiments 
latency data vivaldi simulations driven matrix inter host internet rtts vivaldi computes coordinates subset rtts full matrix needed evaluate quality predictions coordinates 
different data sets derived measurements real network 
smaller data set involves hosts planetlab network test bed 
measurements taken public planetlab pairs pings trace 
second data set involves internet dns servers 
built tool king method collect full matrix rtts 
determine distance dns server server measure round trip time server ask server recursively resolve domain served difference times operations yields estimate round trip time see 
query involves unique target name suppress dns caching 
harvested addresses recursive dns servers extracting ns records ip addresses hosts participating gnutella network 
domain served multiple geographically diverse name servers queries targeted domain intended name server forwarded different name server serves avoid error filtered list target domains name servers include domains authoritative name servers subnet ip addresses name servers identical low octet 
verified target nameservers responsible associated names performing non recursive possible measure distance nameservers timing dns queries 
query name domain nameserver returns latency nameserver 
second query name domain nameserver sent initially recursive nameserver difference latency latency nameserver query name checking aa bit response header indicates authoritative answer 
measured pairwise rtts continuously random intervals course week 
measurements total 
compute final rtt pair median trials 
median rtt filters effects transient congestion packet loss 
measurement studies minimum measured rtt eliminate congestion effects approach appropriate king technique congestion cause measured rtt higher lower true value :10.1.1.16.1445
king report rtt lower true value congestion path nameserver 
nameservers obvious outliers data set latency servers equal small hosts 
inaccuracy result high load nameservers heavy queuing near servers 
load queuing name server adds delay significantly larger network latency initial query recursive query require roughly amount time estimated latency server server near zero 
identified servers disproportionate number triangle inequality violations participated 
servers removed data set 
percent original nodes removed way 
planetlab nodes span globe located north american universities fast internet connections 
king nodes name servers connected internet servers geographically diverse planetlab nodes 
median rtt planet lab data set ms king data set ms 
synthetic data sets 
grid data set constructed provide perfect dimensional fit data set created assigning dimensional coordinates node euclidean distances nodes generate matrix 
fitting data set vivaldi recovers coordinates rotation translation 
itm topology generation tool generate topologies 
latency nodes data set finding shortest path weighted graph itm generates 
data set allows explore topology changes affect vivaldi 
error ms error ms time time effect rate convergence 
set range constants 
calculated equation cc values ranging 
adaptive causes errors decrease faster 
data rtt matrices inputs packet level network simulator 
simulator delays packet transmission half time specified rtt matrix 
node runs instance vivaldi sends rpcs nodes measures rtts uses rtts run decentralized vivaldi algorithm 
define error link absolute difference predicted rtt link coordinates nodes ends link actual rtt 
define error node median link errors links involving node 
define error system median node errors nodes system 
main limitation simulator rtts vary time simulator model queuing delay changes routing 
doing typically requires modeling underlying structure network 
research involves evaluating models structure network safest stick real unchanging data model model 
experiments simulator node measures rtt node second 

evaluation section examines effectiveness adaptive timestep vivaldi handles high error nodes vivaldi sensitivity communication patterns order characterize types network applications vivaldi additional probe traffic vivaldi responsiveness network changes vivaldi accuracy compared gnp 
noted experiments dimensional coordinates section investigates coordinate systems 
time step choice section claimed large time step result oscillating coordinates poor ability predict latency small time steps result slow convergence time 
evaluate intuition simulated vivaldi king data set 
plots progress vivaldi king data set various constant values 
plot shows median prediction error function time 
small values cause slow convergence increasing causes faster convergence increasing prevents vivaldi finding low error coordinates 
reason high average error local error local error remote error median link error ms adaptive constant time join second set evolution stable node network new nodes join 
constant new nodes confuse old nodes scatter system re converged 
contrast adaptive equation allows new nodes find places quickly disturbing established order 
graph plots link errors constant dotted adaptive solid 
lower line pair median error initial nodes 
higher line pair median error pairs 
constant system converges slowly adaptive system disrupting old nodes significantly process 
high causes coordinates oscillate large steps best values 
repeat experiment computed equation 
data show effectiveness large node error high converge quickly small node error low minimize node oscillation coordinates 
empirically cc value yields quick error reduction low oscillation 
robustness high error nodes ideally vivaldi cope large numbers nodes inconsistent coordinates 
vivaldi adaptive address problem node joins knows relative error quite large communicates nodes nodes approach appropriate skepticism 
shows results simulation test hypothesis 
simulation uses dimensional grid data set easy visualize evolution system 
simulation started nodes knew coordinates predicted latency 
added new nodes system system evolve case equation cc 
shows evolution systems error time 
iterations constant metric initial structure system destroyed result wise old nodes placing faith young high error nodes 
initial structure destroyed existing nodes longer current coordinates existing nodes predict latency system re converges 
contrast adaptive preserves established order helping new nodes find places faster 
structure original nodes preserved new nodes join nodes continue current coordinates accurate predictions original nodes 
convergence time new nodes significantly faster converge relative time step versus constant 
communication patterns vivaldi relies samples obtained course traffic generated application 
understand range systems approach appropriate characterize sampling necessary accurate computation coordinates 
pathological case showing possible effect communication patterns chosen coordinates 
case nodes contact nearest neighbors allowing resulting coordinates twist long distances 
second case nodes contact distant nodes improving accuracy coordinates larger scale 
kinds sampling badly 
example priyantha show sampling nearby low latency nodes lead coordinates preserve local relationships far correct global scale 
shows coordinates chosen nodes laid grid node communicates neighbors 
case clearly pathological characterize boundary normal behavior pathology 
pathological case fixed adding long distance communications giving nodes global sense place network 
long distance communication necessary order keep coordinates distorting 
answer question ran experiment grid nodes 
node assigned neighbors immediately adjacent chosen random average random neighbors far away 
step node decides communicate adjacent neighbor faraway neighbor 
specifically node chooses faraway neighbor set probability specific node sample chosen set random 
shows effect final accuracy coordinates 
half communication distant nodes coordinates converge quickly 
convergence slows proportion distant nodes increases similarly accurate coordinates median error ms samples effect long distance communication accuracy coordinates 
line graph plots prediction error time experiment nodes contact distant nodes opposed nearby nodes probability time step 
eventually chosen small proportions distant nodes suggesting samples involve distant nodes skewed coordinate placements avoided 
adapting network changes vivaldi constantly recomputes coordinates naturally adapts changes network 
test vivaldi responds changes created synthetic transit stub topology hosts itm tool 
vivaldi find coordinates hosts vivaldi dimensional fit randomly chosen neighbors 
changed network topology increasing length stub connection core factor 
shows median absolute error predictions node time 
prior time seconds nodes stabilized median prediction error ms 
time topology changed include longer transit stub link 
shortly change median error rises ms network quickly re converges time ms new stable configuration 
error higher time period ms new configuration difficult model 
show restore original configuration time 
nodes quickly positions give median error ms 
vivaldi scales large networks 
algorithm uses constant amount storage node shown previous section measurements traffic sent anyway 
algorithm requirements scale logarithmically number nodes linearly 
exception startup cost initial network 
network millions nodes coordinate scratch constant amount time 
networks millions nodes tend spring 
start smaller networks grow incrementally 
critical mass placed nodes vivaldi network new node joining system needs measurements order find place 
nodes system joining cost new node small constant number network samples regardless size network 
demonstrate claim initialized node network king data set 
network converged accurate coordinates added new nodes time measuring actual estimated prediction error newly placed node function number samples obtained 
new node prediction error low samples 
new nodes able converge quickly large initial time step error newly joined node set 
median error ms time sec vivaldi able adapt changes network 
experiment constructed node topology allowed vivaldi determine coordinates nodes 
median error plotted time 
time transit stub links time larger seconds system new coordinates 
error new system larger original configuration 
time link goes back normal size system quickly original error 
cumulative fraction pairs cumulative fraction pairs vivaldi gnp best relative error vivaldi gnp best relative error cumulative distribution prediction error dimensional euclidean coordinates chosen vivaldi gnp planetlab data set top king data set bottom 
accuracy evaluate vivaldi accuracy compared gnp centralized algorithm planetlab king data sets 
compares cumulative distribution prediction error dimensional euclidean coordinates chosen vivaldi gnp planetlab king data sets neighbors vivaldi landmarks gnp 
vivaldi error competitive gnp 
section discussed vivaldi avoid folding coordinate space communicating distant nodes 
find neighbor selection affects accuracy way collecting rtt samples nodes nearby network improves prediction accuracy 
demonstrated pic 
experiments vivaldi node took measurements nearby neighbors simulator global knowledge network random neighbors 
gnp performance depends choice landmarks network performed gnp experiments random cumulative fraction node pairs relative error cumulative distribution prediction error height vector coordinates chose vivaldi different numbers neighbors 
landmark sets chose set gave lowest median error 
number neighbors affects accuracy vivaldi 
shows distribution rtt prediction errors varying numbers neighbors height vector coordinates 
neighbors chosen half nearby neighbors described 
vivaldi performance increases rapidly neighbors time improve 
gnp requires fewer neighbors vivaldi works vivaldi sensitive neighbor placement node system neighbor 

model selection vivaldi inspired analogy real world threedimensional euclidean mass spring system 
discussed section algorithm coordinate spaces redefining coordinate subtraction vector norm scalar multiplication operations 
section consider possible coordinate spaces better capture internet underlying structure king planetlab data sets 
triangle inequalities considering specific coordinate spaces consider expect 
coordinate space consider satisfies triangle inequality states distance directly nodes equal distance path expect able find coordinate space consistent set inter node latencies latencies satisfy triangle inequality 
presents evaluation extent violations 
pair nodes lowest rtt path intermediate node calculated ratio rtts indirect direct paths 
plots cumulative distribution ratios planetlab king data sets 
vast majority node pairs king data set part triangle violation small violations due mainly measurement inaccuracy 
smaller number severe violations datasets analysis tang crovella 
percent node pairs significantly shorter path expect data sets embeddable euclidean space 
count number triples violate constraint xi xk xi 
include constant term avoid counting marginal violations error cumulative fraction pairs king planetlab best indirect rtt direct rtt cumulative distribution ratios rtts best hop path direct path pair king planetlab nodes 
best indirect path usually lower rtt direct path 
ing links order milliseconds 
ms find triples king data set violate triangle inequality 
course data set triangle inequalities poorly coordinate spaces consider data set triangle inequalities fit arbitrary coordinate spaces 
small number triangle inequalities data suggests doomed start 
euclidean spaces explore euclidean coordinate spaces 
familiar equations xn yn xn yn xn xn xn choose euclidean coordinate space question dimensions 
principal components analysis cox dabek tang crovella characterize dimensionality internet coordinates 
analysis suggests coordinates primarily dimensions little variation 
insofar data euclidean dimensional 
finding somewhat surprising result complexity internet 
examining data reveals latencies data dominated geographic distance 
geographic distance factor latency dimensional model sufficient 
fit perfect probably due aspects network access link delays fact nodes take inefficient routes move backbone happens example hot potato routing 
add dimensions accuracy fit improves slightly probably extra dimensions allow vivaldi wiggle room placing hard fit points 
plots cdf relative errors dimensional euclidean coordinates planetlab king data sets 
adding extra dimensions past significant improvement fit 
spherical coordinates know distances attempting model drawn paths surface sphere cumulative fraction pairs cumulative fraction pairs relative error relative error cumulative distribution vivaldi prediction error various numbers euclidean dimensions planetlab top king bottom data sets 
earth expect spherical distance function provide accurate model 
adapted vivaldi spherical coordinates expressing force vector euclidean space node moves fraction angular distance away node 
plots cdf relative errors vivaldi choice dimensional euclidean coordinates spherical coordinates varying radii planetlab king data sets synthetic data set generated spherical model 
error large ms sphere surface small nodes spread 
spherical model error similar euclidean model error degrade radius increased 
finding suggests points cluster side sphere sphere provides approximately surface area approximating euclidean plane 
test hypothesis tried vivaldi synthetic network nodes chosen fit sphere radius ms error spherical fit zero radius modeled sphere ms 
degrades radius increases optimal value 
fit dimensional euclidean space produced larger error near perfect spherical model data set 
suspect underlying reason spherical coordinates model internet paths internet wrap earth appreciably 
inspection internet paths originating east asia suggests links connect asia europe directly 
instance packets sent korea israel travel east oceans west land 
paths connect asia europe directly course prevalent data 
spherical model assumes links path shorter 
case usual fact spherical model correctly predicts paths asia negated fact incorrectly predicts paths go long way avoiding asia 
anecdotal evidence gathered traceroute planetlab nodes supports observation 
height vectors height vector consists euclidean coordinate augmented height 
euclidean portion models high speed internet core latencies proportional geographic distance height models time takes packets travel access link cumulative fraction pairs cumulative fraction pairs height relative error height relative error cumulative distribution prediction error dimensional euclidean coordinates height vectors chosen vivaldi planetlab top king bottom data sets 
node core 
cause access link latency may queuing delay case cable line low bandwidth case dsl cable modems telephone modems sheer length link case long distance fiber optic cables 
packet sent node travel source node height travel euclidean space travel destination node height 
nodes height distance euclidean distance plus heights 
fundamental difference height vectors adding dimension euclidean space 
intuitively packet transmission done core 
height vector model implemented redefining usual vector operations note right hand side subtraction equation xh yh xh yh xh xh xh xh node positive height element coordinates height scaled 
effect equations 
normal euclidean space node finds close node move away node 
node finds close nodes sides go spring forces cancel remains height vector system forces cancel euclidean plane height forces reinforce pushing node away euclidean plane 
similarly node finds far away nodes sides move closer plane 
shows height vectors perform better euclidean coordinates 
examination coordinates height vector model assigns hosts planetlab data set shows model captures effect hoped 
connected nodes ones new york university assigned minimum height 
brazilian nodes assigned coordinates approximately ms united states 
traceroute nodes see ms approximately distance nodes connection backbone internet network inside united states 
brazilian nodes send traffic united states cumulative fraction node pairs sphere ms sphere ms sphere ms sphere ms sphere ms relative error cumulative fraction node pairs sphere ms sphere ms sphere ms sphere ms sphere ms relative error cumulative distribution prediction error spherical coordinates various radii chosen vivaldi planetlab king data sets 
node placement chosen vivaldi king data set dimensions dimensions height vectors projected xy plane height vectors rotated show heights 
fringe nodes prevalent 
nodes small data set best represented ms continental larger variety brazilian nodes links data set nodes region euclidean plane 
graphical comparison plots show final placement nodes dimensional euclidean space height vectors 
euclidean plots cloud nodes far away don know go 
nodes bulk ones large errors 
height plots place nodes high rest network 
results smaller maximum node error height plots smaller median error 
smaller errors suggest height vectors accurate reflection structure internet nodes data sets 

related number systems proposed computing synthetic coordinates 
addition mass spring minimization vivaldi previously 
related systems vivaldi fully decentralized targets internet adapts changes network 
vivaldi uses height vectors improve latency predictions previous systems euclidean coordinates 
centralized coordinate systems existing synthetic coordinate systems involve centralized component set landmark nodes require global knowledge node measurements 
vivaldi main contribution relative systems decentralized require fixed infrastructure 
vivaldi inspired gnp demonstrated possibility calculating synthetic coordinates predict internet latencies :10.1.1.16.1445
gnp relies small number landmark nodes nodes choose coordinates rtt measurements landmarks 
choice landmarks significantly affects accuracy gnp rtt predictions 
requiring certain nodes designated landmarks may burden symmetric systems peer peer systems 
addition landmark systems vivaldi take advantage communication nodes measurements landmarks helpful updating coordinates 
nps version gnp addresses system level issues involved deploying coordinate system 
nps includes hierarchical system reducing load landmark nodes strategy mitigating effects malicious nodes congestion control mechanism nats 
nps demonstrates landmark coordinate system adapt changing network conditions periodically communicating landmark nodes recomputing coordinates 
lighthouse extension gnp intended scalable 
lighthouse gnp special set landmark nodes 
node joins lighthouse query global landmarks 
new node query existing set nodes find coordinates relative set transform coordinates coordinates relative global landmarks 
tang crovella propose coordinate system virtual landmarks scheme computationally efficient gnp dependent positions landmarks 
authors analysis dimensionality measured latencies suggests low dimensional coordinates effectively model internet latencies 
result agrees results section decentralized internet coordinate systems pic vivaldi node knows coordinates landmark nodes pic require explicitly designated landmarks 
pic node knows doesn know coordinates 
vivaldi incorporates continuous measure certain node coordinates approach helps adapt changing network conditions network partitions 
pic suited dynamic conditions runs simplex minimization procedure completely node measures latencies landmarks 
pic react quickly new measurements 
building vivaldi reacting quickly measurements large time step caused coordinates oscillate 
pic defends security coordinate system malicious participants test triangle inequality 
vivaldi defends high error nodes malicious nodes 
pic uses active node discovery protocol find set nearby nodes computing coordinates 
contrast vivaldi piggybacks application level traffic assuming applications care coordinate accuracy nearby nodes contact anyway 
nps uses decentralized algorithm 
sending measurements central node runs simplex algorithm determine landmark coordinates gnp nps landmark re runs minimization time measures latency new node 
vivaldi operates manner uses mass spring system simplex algorithm perform minimization 
coordinate systems wireless nets distributed systems described section target wireless networks network connectivity reflects geographic proximity fairly closely 
vivaldi intended internet topology network obvious priori 
afl distributed node localization system cricket sensors uses spring relaxation 
cricket sensors ultrasound propagation times measure inter sensor distances cooperate derive coordinates consistent distances 
complexity afl dedicated solving problem doesn affect vivaldi preventing coordinate system folding 
sensors cricket project assume vivaldi hosts measure latency distant nodes eliminates folding problem 
systems abc operate propagating known coordinates fixed set anchor nodes core solving locations techniques triangulation 
rao describe algorithm computing virtual coordinates enable geographic forwarding wireless ad hoc network 
algorithm attempt predict latencies purpose sure directional routing works 
spring relaxation systems spring relaxation find minimal energy configurations 
vivaldi spring relaxation inspired algorithm recover dimensional model surface set unorganized points described hugues hoppe :10.1.1.153.4735
hoppe introduces spring forces guide optimization re constructed surface 
mogul describes spring relaxation algorithm aid visualization traffic patterns local area networks 
spring relaxation produce dimensional representation graph traffic patterns results relaxation predict latencies traffic patterns 
overlay network uses spring relaxation technique assign location aware ids nodes 
shavitt big bang system simulates potential field similar vivaldi mass spring system 
simulation models particle momentum explicitly introduces friction order cause simulation converge stable state 
vivaldi accomplishes effect ignoring kinetic energy springs 
big bang system complicated vivaldi require global knowledge system clear decentralize 
internet models vivaldi improves latency predictions new coordinate space places nodes distance euclidean space 
previous synthetic coordinate systems concentrated pure euclidean spaces simple geometric spaces surfaces spheres tori 
shavitt proposed hyperbolic coordinate space model internet 
conceptually height vectors thought rough approximation hyperbolic spaces 
hyperbolic model may address shortcoming height model height model implicitly assumes node access link 
nodes high latency access link height model incorrectly predict large latency nodes distance plane back 
comparing height vectors hyperbolic model directly determine better model internet 
location techniques idmaps infrastructure help hosts predict internet rtt hosts 
infrastructure consists tracer nodes 
tracer measures internet rtt tracer 
tracers measure rtt cidr address prefix jointly determine tracer closest prefix 
rtt host host estimated rtt prefix prefix tracer plus rtt prefix prefix tracer plus rtt tracers 
advantage idmaps vivaldi idmaps reasons ip address prefixes predictions hosts aware idmaps system 
ip geo system estimates physical location remote server information content dns names whois queries pings fixed locations bgp information 
ip geo differs vivaldi mainly attempts predict physical location network latency 

vivaldi simple adaptive decentralized algorithm computing synthetic coordinates internet hosts 
vivaldi requires fixed infrastructure supports wide range communication patterns able piggy back network sampling application traffic 
vivaldi includes refinements adaptively tune time step parameter cause system converge accurate solutions quickly maintain accuracy large numbers new hosts join network 
evaluating performance vivaldi large data set generated measurements internet hosts investigated extent internet represented simple geometric spaces 
propose new model height vectors coordinate algorithms 
attempting understand characteristics internet studying way modeled various geometric spaces promising line research 
vivaldi requires infrastructure simple implement easy deploy existing applications 
modified dhash distributed hash table take advantage vivaldi reduced time required fetch block dhash global test bed 
hope vivaldi simplicity allow distributed systems adopt 
acknowledgments research conducted part iris project project iris net supported national science foundation cooperative agreement 
ani 
russ cox supported fellowship fannie john hertz foundation 
bittorrent 
org bittorrent protocol html 
calvert doar zegura 
modeling internet topology 
ieee communications june 
costa castro rowstron key 
pic practical internet coordinates distance estimation 
international conference distributed systems tokyo japan march 
cox dabek 
learning euclidean coordinates internet hosts 
pdos lcs mit edu rsc pdf december 
cox dabek kaashoek li morris 
practical distributed network coordinates 
proceedings second workshop hot topics networks hotnets ii cambridge massachusetts november 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proc 
th acm symposium operating systems principles sosp pages oct 
dabek li sit robertson kaashoek morris 
designing dht low latency high throughput 
proceedings st usenix symposium networked systems design implementation nsdi san francisco california march 
francis jamin jin jin raz shavitt zhang 
idmaps global internet host distance estimation service 
ieee acm transactions networking oct 
gil li kaashoek morris 
peer peer simulator 
pdos lcs mit edu psim 
gummadi saroiu gribble 
king estimating latency arbitrary internet hosts 
proc 
sigcomm pages november 
hoppe :10.1.1.153.4735
surface reconstruction unorganized points 
phd thesis department computer science engineering university washington 
kazaa media 
www kazaa com 
mockapetris dunlap 
development domain name system 
proc 
acm sigcomm pages stanford ca 
mogul 
efficient workstations passive monitoring local area networks 
research report digital western research laboratory july 
ng 
gnp software 
www cs cmu edu research gnp software html 
ng zhang 
network positioning system internet 
proc 
usenix conference june 
ng zhang :10.1.1.16.1445
predicting internet network distance coordinates approaches 
proceedings ieee infocom pages 
padmanabhan subramanian 
investigation geographic mapping techniques internet hosts 
proc 
acm sigcomm pages san diego aug 
crowcroft wilbur harris bhatti 
scalable distributed location 
iptps 
planetlab 
www planet lab org 
priyantha balakrishnan demaine teller 
anchor free distributed localization sensor networks 
technical report tr mit lcs apr 
priyantha chakraborty balakrishnan 
cricket location support system 
proc 
th acm mobicom conf boston ma aug 
rao ratnasamy papadimitriou shenker stoica 
geographic routing location information 
acm mobicom conference pages sept 
rinaldi waldvogel 
routing data location overlay peer peer networks 
research report rz ibm july 
savarese rabaey 
distributed ad hoc wireless sensor networks 
icassp pages may 
shavitt 
big bang simulation embedding network distances euclidean space 
proc 
ieee infocom april 
shavitt 
curvature internet usage overlay construction distance estimation 
proc 
ieee infocom april 
stribling 
pairs ping trace planetlab 
pdos lcs mit edu 
tang crovella 
virtual landmarks internet 
internet measurement conference pages miami beach fl october 
waldvogel rinaldi 
efficient topology aware overlay network 
hotnets 
wang pai peterson 
effectiveness request cdn robustness 
proceedings fifth symposium operating systems design implementation boston ma usa december 
