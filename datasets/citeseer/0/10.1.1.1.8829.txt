collision free object movement vector fields scott winkler computer science department brigham young university provo ut cs byu edu scott winkler email sps mot com topics computer animation object collision detection resolution increasingly desirable wide range applications including autonomous vehicle navigation robotics movie industry 
techniques currently available typically difficult restricted particular domain 
presents technique providing automatic animation collision avoidance arbitrary objects computer graphics system 
underlying construct process surrounding volume octree vector field 
system automatically generates structures objects scene 
judicious creation vector fields objects scene move interact collide 
manner vector fields created 
applications cloud movement terrain autonomous aircraft navigation show typical usage technique 
keywords computer graphics animation collision avoidance vector fields 

computer animation widespread usage broad range applications 
extensive research devoted animation systems techniques 
task animating objects scene remains fairly low level tedious exercise 
addition general animation capabilities applications desire automatic collision detection coupled collision avoidance collision resolution 
research areas produced systems capabilities exist typically difficult extendible domains 
presents technique automatically providing animation collision avoidance general computer graphics system 
technique allows users easily set animate objects prevents objects colliding animation proceeds 
done expanded notion vector fields 
vector fields established scene objects comprising scene 
vector fields affect object motion animation provide automatic collision avoidance 
applications collision avoidance animation system include scene object movement objects 
examples plane flying low ground cloud movement land movement flocks birds schools fish 

overview collision avoidance collision free movement objects 
collision avoidance techniques classified categories 
category includes continuous motion path planning techniques 
second category group static collision detection algorithms 
methods solve series static non moving states check imminent collisions take steps avoid 
continuous motion path planning problems characterized requirement object position velocity known priori 
collisions prevented choosing paths collisions occur 
done analytically calculating paths various methods 
example path planning techniques generate test paradigm 
method object priority 
object paths generated time priority 
path generated system tests intersections existing object paths 
intersection object path altered process repeated 
intersections exist system moves object performs process object priority 
variation technique configuration space approach 
technique moving object reduced size point obstacles grown increased size proportional amount moving object reduced 
collision avoidance problem remains moving object treated point 
configuration space collision free path obtained connecting straight lines vertices grown obstacles start goal positions 
technique difficult extend undesirable effect generating paths hug obstacle contours 
cameron proposed path planning technique termed dimensional intersection testing 
method time added dimension objects 
objects extruded time dimension new dimensional objects formed 
intersections new dimensional objects 
intersections detected paths objects collision free 
main limitation approach terms shapes motions consider 
simple shapes linear motion perform scenario complicated objects paths handled 
variation technique proposed cameron takes dimensional object generates new dimensional object contains volume swept object time 
objects collide sweeps intersect 
approach intuitive limitations 
problem difficulty explicitly representing swept volumes 
lack temporal information intersection test 
strength path planning techniques high degree accuracy 
potential collisions missed chosen paths optimal 
weaknesses path planning techniques 
important requirement priori knowledge object position velocity 
weakness computational complexity 
serious limitation path planning techniques deal moving object objects remain stationary 
second general category collision avoidance algorithms static collision detection schemes 
schemes freeze objects particular instances time check intersections times 
objects frozen intersection tests performed detect overlap objects 
objects overlap positions altered simulate collision process repeated 
collision detection technique uses approach described cameron method considers positions objects number time steps time span interest checking time step determine objects intersect 
collision detected object returned prior collision free state saved expressly purpose path altered avoid collision 
static test technique type proposed khatib uses artificial potential field prevent collisions 
system objects goal location started motion location 
obstacles surrounded repulsive forces goal attracts moving object 
moving object approaches obstacle force imparted combination goal attracting force obstacle repulsive force 
repulsive force increases moving object approaches obstacle surface 
resultant force keeps moving object colliding obstacles moves goal location 
problem approach potential field function requires obstacles described composition primitives 
complex objects descriptions may large unwieldy 
addition forces determined proximity obstacles algorithm may fail 
krogh extended khatib including position velocity computation potential field 
approach proposed khatib assumes known prescribed world model objects 
restrictive environment desire 
borenstein koren similar idea mobile robot having repulsive forces determined strengths sensor data robot 
analytical function increase repulsive force obstacle object approaches borenstein koren certainty obstacle existence determined robot sensors 
closer robot approaches wall stronger sensor readings wall stronger repulsive force exerted algorithm 
approach limited dimensional space mobile robot 
addition repulsive force calculated feedback sensory instruments mounted robot 
method computer simulated environment 
strengths static collision detection approaches require priori knowledge object position velocity multiple moving objects handled natural manner 
major weakness static collision techniques due discrete nature collisions may missed 
happen objects collide move quickly time step move non intersecting state completely non intersecting state 

collision avoidance presents new method performing collision avoidance suitable applications animation 
main goals provide automatic collision avoidance multiple moving objects real time performance maintained techniques easily usable naive users 
order achieve goals modified static collision technique chosen 
continuous collision avoidance techniques discarded due limitations number moving objects allowed time requirements typical techniques 
approach taken automatically surround objects scene repulsive vector fields 
animation begun objects move environment influenced vector fields vicinity 
objects approach repulsive vector fields interact cause objects move away 
vector fields automatically generated objects 
user simply set environment 
system generate vector fields provide object animation perform collision avoidance computations 
vector field defined follows subset vector field function assigns point dimensional vector 
research done date vector fields directed developing techniques visualize vector field 
expands role vector fields active entities animation system 
vector fields placed environment objects enter vector field motion objects altered vector field forces intersecting locations 
specific thrust manner vector fields enclose objects provide repulsive forces objects 
repulsive fields established objects set motion move combined forces vector fields current location 
correctly constructing enclosing vector fields objects scene move collision free fashion 
main issues involved building repulsive vector fields 
determining specify bounds influence vector field object 
second manner repulsive vector directions computed 
third determining strengths vectors 
desire objects move collision free environment strength vector field vary distance approaching objects 
resolved issue determining bounds influence vector field enclosing object surrounding volume prior repulsive vector field generation 
surrounding volume tightly enclose object provides user specified area dead space exterior object edges surrounding volume 
ensures objects approach object potential colliding enter area influence object repulsive force collision occurs 
force object vector field act approaching object alter motion avoid collision 
second issue involves computing vector directions repulsive vector field 
forces need approaching objects fall influence object repulsive force motions altered appropriately collisions avoided object movement look natural 
vector direction vary shape object 
repulsive vector directions need determined characteristics object nearest point approach potentially colliding objects 
approach selected octree subdivision method 
surrounding volume object recursively subdivided 
octree sub divided object falls octant 
octree subdivision complete repulsive vector assigned node octant 
octree vector field provides repulsive force object 
method chosen octree ability form object speed locations octree ease construction 
object initially introduced system defining object system inputting existing external object 
object converted triangular mesh system uniform object type 
third optional step preparation object triangle mesh finer mesh approximately uniform size 
step necessary provided system additional method assuring uniform distribution octree 
provides accurate field 
object preparation complete triangle mesh octree generation 
octree generation algorithm begun enclosing object suitable surrounding volume 
surrounding volume subdivided 
octree constructed octree meaning surrounding volume recursively subdivided smaller cubes pieces object triangular mesh lie octant 
example subdivision objects quadtree dimensional equivalent octree shown 
example line defined smaller line segments imitating equivalent subdivided triangular mesh 
quadtree object quadtree depth 
octree created object forces assigned octant octree 
forces repulsive forces surrounding object desire directions push approaching objects away object 
direction function normals objects contained octant 
due objects criteria subdivision completion subdivision leaf octant fewer triangles triangular mesh 
contain triangles normal vector triangle octant calculated 
normals averaged normalized determine repulsive direction octant 
object quadtree resultant force vectors computed pictured 

quadtree dimensional object 

example quadtree representation vector field 
technique works contain part object contain part object repulsive forces computed differently 
forces calculated octree constructed interior leaf nodes final representation point octree construction forces determined 
useful determining force octant polygons object triangular mesh lie 
repulsive direction determined function object pieces contained octant parent node interior node subdivision level octant question 
example shown quadtree example 
seen corner quadrant highlighted dashed lines contain portion object 
force quadrant determined force assigned parent quadrant highlighted bold lines parent leaf node 
repulsive direction computed average normal object pieces fall parent octant 
octree forces calculated values interior nodes discarded octree leaf nodes ensuing computations 

calculation force empty leaf quadrant 
empty leaf quadrant parent interior quadrant direction repulsive force determined step constructing octree vector field determine strength forces 
goal ensure objects collide strength forces repelling objects increase objects draw nearer tending infinity surfaces come contact 
octree vector field algorithm provides natural mechanism base heuristic increases repulsive force surface object approached 
heuristic increasing force linearly depth octree 
enclosing portions surface area repulsive force increased order magnitude simulate forces infinity 
high force near object surface ensure possible objects collide 
collision avoidance absolutely guaranteed technique works practice 
collision avoidance facilitated providing sufficiently large surrounding volume object question 
provides approaching objects gradual increments magnitude repulsive force experience 
force magnitudes place octree vector field construction complete 
building construct objects scene allows objects move environment manner 
octree vector field objects place object intersection testing performed 
intersection test accomplished means octree hit test 
simple fast intersection test 
prevent objects colliding component triangles object tested octree second object 
triangle treated point coordinates center triangle 
point tested top level internal octree node second object 
triangle lie top level discarded triangle triangle mesh checked 
triangle lie top level octree proceed perform intersection check sub highest level octant 
process repeated leaf octant reached 
determined triangle intersects leaf octant node normalized force direction leaf octant depth leaf node recorded 
process repeated triangle mesh time resultant force applied object determined 
direction final force computed average direction forces successful intersection tests 
magnitude force computed function greatest leaf octant depth octree successful intersection test 
application force causes objects move apart avoid collision 

sample applications section presents slides animation sequences generated techniques developed 
demonstration generated animation system 
functionality built allows user include vector field areas environment 
animation sequence cubic vector fields simulate gravity wind 
gravity simulated creating uni directional vector field vectors inside field directions pointing directly downward 
vector field encompasses entire environment 
wind vector field created uni directional vector field case vectors point horizontally right left 
addition vector fields repulsive vector field generated terrain techniques described previously 
forces place object introduced environment flow terrain right left collision free fashion 
simulation shown cloud object comprised spherical shaped particles introduced environment 
shows initial setup 
objects vector fields place animation begun 
shows scene shortly animation sequence begun 
wind force commenced pushing cloud terrain 
time repulsive force terrain begun deform cloud 
gravitational force acts equalizing force keep cloud accelerating upwards environment 
animation proceeds figures cloud moves surface terrain deforms roughly follow contour terrain computed vector forces 
figures show cloud compressed flows valley terrain 
figures show cloud expand clears mountain ridge 
cloud begins exit scene 
movement cloud landscape performed automatically system 
user simply sets environment begins animation 
details particle movement force determination done completely system 
second application shows automatic navigation airplane mountainous region 
simulation terrain object generated repulsive octree vector field 
gravitational vector field placed environment encompasses entire scene 
airplane object placed scene near left terrain driving force vector field included push airplane terrain 
overhead view animation shown 
shows airplane canyon mountains top right bottom left airplane 
shows position orientation airplane shortly animation commenced forces environment begun exert influence airplane 
shows airplane begins navigate bend canyon 
figures show airplane position orientation corner successfully navigated 
user set environment 
actual flight airplane computed entirely system 
images shown represent snapshots longer animation airplane successfully navigated way turns terrain 
animation airplane treated single entity 
orientation airplane determined collision avoidance scheme handled outside subsystem 

animation cloud movement landscape 
continued 
animation cloud movement landscape 

summary 
animation airplane canyon 
develops new technique performing collision avoidance 
application technique animation emphasized potential applications numerous areas including robot robot arm motion planning autonomous navigation 
main goal create system animation collision avoidance number objects provided automatically system 
means user merely sets scene begins animation having explicitly specify object paths 
system responsibility ensuring collisions objects avoided 
manner system accomplishes goal octree vector field surrounding volumes 
objects scene placed individual surrounding volumes 
volume completely encloses object additional empty space specified user 
surrounding volumes subdivided octree fashion 
octant octree assigned force vector direction determined function normals object vicinity octant magnitude computed function level octree octant resides 
approaching object enters octant field force intersected octant applied approaching object repel object 
technique allowed perform collision free animations objects scene 
repulsive octree vector fields forces applied objects computed automatically system user need set scene place vector field forces gravity wind desired locations animation 
areas possible improvement algorithm elaborated explored 
area possible improvement method octree repulsive field calculated 
presents method calculate octree vector field normal vectors object 
techniques explored give better approximation 
area potential improvement determination strength forces octree vector field 
uses heuristic approximates forces octree 
study area facilitate calculating rigorously defined strength force value improve current algorithm 

acknowledgments travis hilton provided framework project 
addition dan olsen provided interesting insights suggestions 
funded part subsidiary novell 

erdmann lozano perez multiple moving objects proceedings ieee international conference robotics automation vol pp 
april 

computational geometry motion planning computational geometry toussaint ed amsterdam north holland pp 


cameron collision detection dimensional intersection testing ieee transactions robotics automation vol 
pp 


cameron study clash detection problem robotics proceedings ieee international conference robotics automation pp 
march 

khatib real time obstacle avoidance manipulators mobile robots proceedings ieee international conference robotics automation pp 
march 

krogh integrated path planning dynamic steering control autonomous vehicles proceedings ieee international conference robotics automation pp 
april 

borenstein koren real time obstacle avoidance fast mobile robots ieee transactions systems man cybernetics vol 
pp 


schroeder lorensen stream polygon technique vector field visualization visualization ieee computer society press san diego california pp 
october 

martin vector field animation texture maps ieee computer graphics applications vol 
pp 


hilton vector fields interactive tool animation modeling simulation physically particle systems soft objects proceedings eurographics computer graphics forum vol 
pp 


