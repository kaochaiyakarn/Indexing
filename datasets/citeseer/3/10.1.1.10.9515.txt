coca secure distributed online certification authority zhou microsoft research fred schneider robbert van renesse cornell university coca fault tolerant secure online certification authority built deployed local area network internet 
extremely weak assumptions characterize environments coca protocols execute correctly assumption execution speed message delivery delays channels expected exhibit intermittent reliability coca servers may faulty compromised 
coca system integrate byzantine quorum system achieve availability proactive recovery defend mobile adversaries attack compromise control replica limited period time moving 
addition tackling problems associated combining fault tolerance security new proactive recovery protocols developed 
experimental results give quantitative evaluation cost effectiveness protocols 
categories subject descriptors computer communication networks general security protection computer communication networks distributed systems client server operating systems reliability fault tolerance operating systems security protection authentication cryptographic controls data data encryption public key cryptosystems general terms security reliability design performance measurement additional key words phrases certification authority public key infrastructure byzantine quorum systems threshold cryptography proactive secret sharing denial service supported part arpa radc afosr defense advanced research projects agency darpa air force research laboratory air force material command usaf agreement number national science foundation intel 
views contained authors interpreted necessarily representing official policies endorsements expressed implied organizations government 
authors addresses zhou microsoft research silicon valley la mountain view ca email microsoft com schneider van renesse department computer science cornell university ithaca ny email fbs cs cornell edu cs cornell edu 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
acm acm transactions computer systems vol 
november pages 
zhou 
public key infrastructure certificate specifies binding name public key attributes 
time public keys attributes change private key compromised leading selection new public key example 
old binding certificate specifies binding invalid 
authority ca attests validity bindings issuing digitally signed certificates specify bindings providing means clients check validity certificates 
online ca principals check validity certificates just 
coca cornell online certification authority subject article online ca 
coca employs replication achieve availability employs proactive recovery threshold cryptography digitally signing certificates way defends mobile adversaries ostrovsky yung attack compromise control replica limited period time moving 
system novel 
distinguishes coca qualitatively weaker assumptions communication links execution timing 
denial service attacks succeed invalidating stronger communication execution timing assumptions making weaker assumptions coca vulnerable attacks 
new proactive recovery protocols developed execution relatively unconstrained realistic environment 
implementing agreement problematic absence execution timing assumptions fischer coca employs byzantine quorum system malkhi reiter state machine approach lamport managing replicated state 
doing coca tackle problems associated integrating threshold cryptography byzantine quorum systems 
intrinsic utility public key infrastructures coca pedagogical value vehicle understanding combine mechanisms supporting fault tolerance security properties 
weak assumptions variety traditional means combating denial service attacks coca processing requests satisfy authorization checks ii grouping requests classes multiplexing resources demands class impact processing requests impact iii caching results expensive cryptographic operations 
resource denial service attacks certainly remain possible experiments demonstrate launching successful attack coca harder mechanisms place 
fact simulated denial service attacks allowed measure effectiveness various means coca employs resist denial service attacks reported contributes experimental data performance traditional denial service defenses 
article organized follows 
section discusses assumptions environment coca operates describes services coca acm transactions computer systems vol 
november 
coca secure online certification authority provides 
protocols coordinate coca servers subject section 
section elaborates mechanisms coca incorporates defend denial service attacks 
performance data coca deployments local area network internet summarized section followed discussion related section 
section contains concluding remarks 

system model services supported coca implemented set servers running separate processor network 
intend coca environment internet 
coca tolerates failures defends malicious attacks subject assumptions 
servers 
servers correct compromised compromised server executing deviate arbitrarily specified protocols byzantine failure disclose information stored locally 
system execution viewed terms protocol defined periods called windows vulnerability terms correct compromised relative periods 
specifically server deemed correct window vulnerability server compromised period 
assume coca servers compromised window vulnerability holds clients servers digitally sign messages scheme existentially unforgeable adaptively chosen message attacks various cryptographic algorithms public key cryptography threshold cryptography coca employs secure 
fair links 
link communication channel necessarily deliver messages sent process sends infinitely messages single destination infinitely messages correctly delivered 
addition messages transit may disclosed altered adversaries 
communications network assumed provide fair links 
comparable assumption network adversary prevent servers communicating clients 
asynchrony 
bound message delivery delay server execution speed 
assumptions endow adversaries considerable power 
adversaries attack servers provided fewer servers compromised window vulnerability launch eavesdropping message insertion corruption deletion reordering replay attacks provided fair links violated conduct denial service attacks delay messages slow servers arbitrary finite amounts 
acm transactions computer systems vol 
november 
zhou operations implemented coca coca supports operation update create update invalidate certificates specify bindings second operation query retrieves certificates specifying bindings 
client invokes operation issuing request awaiting response 
coca expects request contain nonce 
responses coca digitally signed coca service key include client request nonce enabling client check response produced coca client request 
request considered accepted coca correct coca server receives request participates processing request request considered completed correct server constructed response 
natural deem request completed client receives response 
definition client action receipt response necessary request considered completed 
absence assumptions clients problematic coca implement 
request completion 
request accepted eventually completed 
clear correct client making request eventually receive response coca 
coca certificate digitally signed attestation specifies binding name cid public key attributes pubk 
addition certificate contains unique serial number assigned coca 
semantics coca update query give meaning natural ordering serial numbers certificate cid invalidates certificates cid having lower serial numbers 
update 
certificate name cid new binding pubk cid request returns acknowledgment coca created certificate cid binds pubk cid holds 
query 
name cid request returns certificate cid created update request accepted completed ii certificate name cid created update request completed accepted holds 
assuming initial default binding possible name operation create binding name implemented query retrieve certificate default binding followed update 
operation revoke certificate cid easily built update specifying new binding cid 
update creates invalidates certificates invocation probably restricted certain clients 
consequently coca allows authorization current implementation requests contain sequence numbers client name form unique numbers 
text request serve nonce 
acm transactions computer systems vol 
november 
coca secure online certification authority policy defined update 
principle ca process query query affect binding 
practice policy create vulnerability denial service attacks coca adopts conservative approach discussed section 
semantics update associates larger serial numbers newer certificates absence concurrent execution query cid returns certificate serial number largest certificates cid 
certificate serial numbers consistent service centric causality relation transitive closure relation holds created update having input 
update requests submitted example client serially input certificate ordered relation 
semantics update allows create certificate create certificate hold 
consistent service centric causality relation opposite required serial numbers consistent lamport useful potential causality relation execution potentially causal execution 
coca forced employ service centric causality relation coca way obtain information trust causality involving operations implement 
clients provide coca information compromised clients provide bogus information 
update query indivisible shown section easily coca update involves separate actions invalidation creation certificates 
implementing update contemplated possible ordering actions execute invalidation period certificate valid execute invalidation period multiple certificates valid 
wanted query return certificate avoiding periods valid certificate name meant synchronizing query concurrent update requests 
rejected synchronization creates execution time cost introduces vulnerability denial service attacks repeated requests attacker operation block requests operation 
solution update create new certificate invalidating old unpleasant consequences 
hold 

certificate cid valid certificate cid largest serial number 

query returns valid certificate 
coca clients accommodate complicated semantics query program synchronization 
bounding window vulnerability duration coca window vulnerability characterized terms real time due asynchrony assumption duration defined acm transactions computer systems vol 
november 
zhou terms events marking completion proactive recovery protocols executed periodically reload code eliminating trojan horses state coca server corrupted previous window vulnerability obsolete confidential information attacker obtained compromising servers 
window vulnerability coca server begins server starts executing proactive recovery protocols terminates server started finished protocols 
execution proactive recovery protocols part successive windows vulnerability 
coca agnostic proactive recovery protocols start 
currently coca server attempts run protocols specified interval elapsed local clock avoid denial service attacks server refuse participate protocols time passed clock executed 
theory protocol events delimit window vulnerability affords attackers leverage 
denial service attacks slow servers increase message delivery delays expand real time duration window vulnerability creating longer period attackers try compromise servers 
practice expect assumptions timing portions system compromised 
information correct server execution speeds message delivery delays real time bounds window vulnerability computed 
limiting utility compromised keys server keys 
coca server maintains private public key pair public key known coca servers 
public keys allow servers authenticate senders messages exchange servers 
absence tamper proof coprocessors server keys refreshed part proactive recovery 
simple approach trusted administrators server invent propagate new public keys secure channels implemented having administrative public private key pair 
administrative public key known administrators servers administrative private key kept offline time defense online attacks sign notification messages new public server public key 
rekeying schemes discussed canetti herzberg 
public keys coca servers coca clients clients need informed changed server keys attractive system large number clients server keys periodically refreshed 
service key 
service private public key pair 
signing responses certificates 
clients servers know service public key 
server violates stronger execution timing assumptions considered compromised example 
acm transactions computer systems vol 
november 
coca secure online certification authority service private key held coca server 
different shares key stored servers threshold cryptography desmedt frankel desmedt frankel yung construct signatures responses certificates 
sign message 
coca server generates partial signature message server share service private key 
coca server combines partial signatures obtains signed message 
threshold cryptography partial signatures needed order generate signature 
adversary compromise servers order forge coca signatures 
proactive secret sharing 
mobile adversary compromise servers period time doing collect shares service private key 
consequently coca employs proactive secret sharing protocol refresh shares periodically generating new set shares service private key deleting old set 
new shares combined old shares construct signatures 
periodic execution proactive secret sharing protocol ensures mobile adversary forge coca signatures compromising servers interval protocol executions 
proactive secret sharing protocol coca employs synchrony assumptions incompatible asynchrony assumption section prior jarecki herzberg frankel details discussed zhou zhou 
discussion article suffices regard protocols simply services coca invokes 
server code state recovery 
part proactive recovery include refreshing states reloading code coca servers 
state coca server involves set certificates 
theory state refreshed performing query request name appear certificate cost enumeration prohibitive 
proactive recovery list name serial number valid certificate stored coca server sent server 
receiving list server retrieves certificates appear missing 
certificates stored coca servers signed coca certificate checked sure bogus 
certificate serial numbers enable servers determine certificates invalidated certificate name higher serial number exists 
having client combine partial signatures having coca introduces vulnerability denial service attacks 
clients lacking coca server public keys way authenticate origins messages conveying partial signatures 
client bogus partial signatures trying combine fragments expensive enterprise bona fide partial signatures identified 
acm transactions computer systems vol 
november 
zhou server code reloaded read medium trusted source proactive recovery order eliminate trojan horses installed attackers previous window vulnerability 
functionality currently implemented prototype defending attacks focus research see castro depth discussion issues 
non obvious point interaction proactive recovery request processing 
satisfy request completion accepted request completed window vulnerability ends accepted request window vulnerability 
request propagated servers part proactive recovery 
correct server executing proactive recovery protocol servers request progress awaits acknowledgments servers 
server correct window vulnerability necessarily receives request means accepted request previous window vulnerability accepted request new window vulnerability 
avoid new requests delaying termination proactive recovery potential denial service attack coca servers ignore new requests 
rare cases restarted request finished new proactive recovery started coca delay proactive recovery processing restarted requests completed 
practice windows vulnerability tend long viz 
days relative time seconds required processing query update request 
extremely request restarted subsequent window vulnerability completed proactive recovery commenced 

protocols coca client request processed multiple servers certificate replicated multiple servers 
replication managed dissemination byzantine quorum system malkhi reiter feasible assumed holds 
servers organized coca sets called quorums satisfying 
quorum intersection 
intersection quorums contains correct server 
quorum availability 
quorum comprising correct servers exists 
client request processed correct servers quorum 
time execute proactive recovery tends short ignoring finite number messages permitted fair links assumption 
provided servers servers may compromised quorum system constitutes dissemination byzantine quorum system 
simplicity assume holds protocols easily extended cases holds 
acm transactions computer systems vol 
november 
coca secure online certification authority fig 

overview client request processing 
detailed protocols query update appear appendix section explain main ideas design protocols 
technical challenges protocols address include 
requests processed quorum servers necessarily correct coca servers different correct servers process different update requests 
consequently different certificates name cid stored correct servers 
certificate serial numbers provide solution problem determining certificates 
clients know coca server public keys client making request authenticate messages coca server determine quorum servers processed request 
solution coca servers delegates request 
delegate processing client request coca server authenticate server messages assemble needed partial signatures coca servers 
client request handled delegates ensure delegates correct 
communication done fair links retransmission messages may necessary 
gives high level view coca operates depicting delegates quorum servers working delegate handle client request 
shows client making request sending signed message coca servers 
server receives message assumes role delegate request 
delegate engages quorum servers handle request sending request coca servers constructs response request responses received quorum 
delegate causes response signed service acm transactions computer systems vol 
november 
zhou involves running threshold signature protocol cooperation servers 
signed response sent delegate client 
receipt client checks response correctly signed service contains client original request isn response received specified period time client simply sends original request servers 
protocol details certificate serial numbers 
serial number coca certificate implemented pair number collision resistant hash update request led creation 
version numbers encode service centric causality relation follows 
certificate created specify binding name cid assigned version number 
certificate produced update certificate assigned version number 
different requests different collision resistant hashes certificates created different requests different serial numbers 
usual lexicographic ordering serial numbers yields total ordering serial numbers seek ordering consistent transitive closure relation 
note serial numbers certificates new certificate created coca update request resubmitted update requests idempotent 
serial number certificate entirely determined arguments request creates certificate 
determining response query 
suffices consider description coca update query protocols order characterize responses satisfying parts ii specification query 
actual protocols refine description 
coca update requests processed correct servers quorum necessarily correct coca servers 
consequently correct coca server ignorant certificates having larger serial numbers stores name cid 
part ii specification query implies completed update requests certificates taken account determining response query request quorum servers engaged processing responses quorum servers guaranteed coca servers contacted 
provided server responds certificate signed coca stores having largest serial number certificates cid known server certificate having largest serial number correctly signed certificates received responses serve response satisfy parts ii specification query show 
show certificate obtained refining protocol outlined satisfies part 
part stipulates certificate returned query created accepted update satisfied certificate signed acm transactions computer systems vol 
november 
coca secure online certification authority coca update request creating certificate accepted 
threshold cryptography employed digital signatures requires cooperation collusion servers order sign certificate 
assumption compromised servers conclude compromised servers create bogus signed certificates 
certificate signed correct server participated processing request created certificate request creating certificate accepted 
part ii specification query requires update request naming cid completed accepted hold certificate created holds implementations refine description due quorum intersection correct server quorum processed certificate response server chooses certificate cid largest serial number holds 
certificate largest serial number servers holds 
holds 
role delegates 
request processed correct servers quorum client notified occurred 
direct notification servers quorum possible clients know public keys coca servers way authenticate messages servers 
coca server employed detect completion request processing notify client follows 
delegate request coca server causes processed correct coca servers quorum sends response signed coca back initiating client 
processing needed construct response depends type request processed 
process query request name cid delegate obtains certificates quorum servers picks certificate having largest serial number uses threshold signature protocol produce signed response containing 
delegate forwards coca servers 

delegate awaits certificates cid quorum coca servers 

delegate picks certificate having largest serial number received step 
delegate invokes coca threshold signature protocol sign response containing response sent client 
process update request name cid delegate constructs certificate new binding threshold signature protocol coca digitally sign sends coca servers 
server replaces certificate cid cid stores serial number larger serial number cid 
delegate constructs new certificate cid threshold signature protocol sign certificate 
acm transactions computer systems vol 
november 
zhou 
delegate sends coca server 

server receipt replaces certificate cid storing serial number larger 
server sends acknowledgment delegate 

delegate awaits acknowledgments quorum coca servers 

delegate invokes coca threshold signature protocol sign response response sent client 
quorum availability ensures quorum servers available step query step update guaranteed terminate 
servers correct compromised servers prevent delegate threshold cryptography constructing coca signature certificate response 
step query steps update involve contacting coca servers disrupted compromised servers 
compromised delegate follow protocol just outlined processing query update requests 
coca ensures behavior disrupt service delegates just request 
delegates correct delegate expected follow query update protocols 
stipulate correct client making request coca submits request coca servers server serves delegate processing request 
delegates client receive multiple responses request request processed repeatedly coca servers 
duplicate responses difficult clients deal response discarded received client waiting request processed 
request processed repeatedly coca servers problem coca query update implementations idempotent 
compromised client follow protocol submit request delegates 
problem occurs delegates receiving request execute step query update processing halt 
correct coca servers participated processing definition accepted 
correct delegate responsible request completed request completion violated 
defense straightforward 
messages related processing client request contain coca server receives message related processing client request server delegate serving 
existence correct delegate guaranteed request accepted 
optimization discussed section possible clients normal circumstances submit requests single delegate 
acm transactions computer systems vol 
november 
coca secure online certification authority self verifying messages 
compromised delegates attempt produce incorrect correctly signed response client sending erroneous messages coca servers 
example processing query request compromised delegate construct response containing bogus invalidated certificate try get servers sign processing update request compromised delegate create fictitious binding try get servers sign processing update request compromised delegate disseminate updated certificate quorum causing response query contain invalidated certificate 
coca defense erroneous messages compromised servers form monitoring detection call self verifying messages 
message comprises information sender intends convey evidence enabling receiver verify trusting sender information conveyed message consistent protocol replay 
coca message delegate sends behalf request contains transcript relevant messages previously sent received processing request including original client request 
messages contained transcript signed senders compromised delegate forge transcript 
members quorum participating protocol known receiver self verifying message independently establish messages sent delegate consistent protocol messages received 
communicating fair links 
fair links assumption means messages sent delivered 
implement reliable communication environment suffices sender resend message signed acknowledgment received intended recipient 
turn recipient returns signed acknowledgment message receives including duplicates previous acknowledgments lost 
sender receiver correct due fair links protocol ensures receiver eventually receives message sender eventually receives acknowledgment receiver sender exits protocol 
protocol coca structured series multicasts information piggybacked acknowledgments 
client starts doing multicast delegates signed response single delegate considered acknowledgment part multicast 
delegate interacts coca servers performing multicasts awaiting responses similar schemes castro liskov baldoni 
gong syverson introduce notion fail protocol protocol halts response certain attacks 
class attacks transformed benign class 
self verifying messages seen instance approach transforming certain byzantine failures benign failures 
acm transactions computer systems vol 
november 
zhou servers 
threshold signature protocol correct responses suffice retrieving updating certificates responses quorum servers needed 
correct servers coca multicasts terminate due quorum availability delegate guaranteed receive acknowledgments step eventually delegate retransmitting messages 

defense denial service attacks large number successful denial service attacks exploiting imbalance resources attacker expend submit request resources service expend satisfy request noted example juels meadows 
making request cheap processing attackers cost effective way disrupt service submit bogus requests saturate server resources 
service coca request processing involves expensive cryptographic operations multiple rounds communication especially susceptible resource attacks 
coca implements classic defenses blunt resource service attacks 

authorization mechanism identifies requests resources expended 

requests grouped classes resources scheduled manner prevents demands class affecting requests class 

results expensive cryptographic operations cached attackers destroy locality cache effective 
details coca realizations defenses constitute bulk section 
note fair links asynchrony assumptions important defense denial service attacks 
attacker stealing network bandwidth cycles processors run coca servers violating assumptions needed coca algorithms 
weak assumptions defense price 
implementing real time service guarantees request processing requires system model stronger assumptions making 
consequently coca guarantee requests receives processed eventually 
equate availability real time guarantees gligor yu gligor millen satisfied eventuality guarantee 
system correctness depends weak assumptions precluded satisfying real time guarantees environment satisfies stronger assumptions coca just 
coca employs connectionless protocols communication clients servers coca susceptible connection depletion attacks known tcp syn flooding attack 
proactive secret sharing protocol current coca implementation ssl secure socket layer freier subject acm transactions computer systems vol 
november 
coca secure online certification authority certain denial service attacks 
vulnerability eliminated restricting rate ssl connection requests reprogramming proactive secret sharing protocol adopting mechanisms described juels 
request processing authorization message received coca server signed sender 
server rejects messages pass certain sanity checks correctly signed sent clients servers messages received past deemed server compromised 
invalid self verifying message example causes receiver judge sender compromised request processing authorization mechanism reject messages signed instructed repaired 
verifying signature considerably cheaper executing update query request involve threshold cryptography multiple rounds message exchange 
verifying signature free attacker attempt flood coca requests correctly signed 
vulnerability concern add cheaper authorization check requests pass signature verification attempted 
cookies karn simpson hash chains kent puzzles juels examples checks 
course server mechanism authorization consume server resources target resource attack albeit attack expensive launch virtue additional authorization mechanism 
ultimate solution authorization mechanisms establish origin request checked fear discovery effective deterrent 
resource management requests signed coca servers able identify client server associated message received 
enables coca server limit impact compromised client server 
particular coca server stores messages receives set input queues employs scheduler service queues 
queues scheduler limit fraction server cycles opted source requests 
advocated similar approaches gligor yu gligor millen 
clearly offers defense distributed denial service attacks robinson attacker masquerading different clients launches attacks different locations 
clients involved attack detected requests isolated coca queues scheduler solving difficult problem determining clients involved attack helped coca mechanism 
acm transactions computer systems vol 
november 
zhou coca prototype configurable number input queues server 
round robin scheduler services queues 
client requests stored queues messages coca server stored separate queue associated server 
duplicates element queue added queue 
server queue sufficient capacity replays messages associated request currently processed cause queue overflow constitute denial service vulnerability 
production setting expect employ sophisticated scheduler rich method partitioning client requests multiple queues 
clients grouped classes requests clients administrative domain stored single queue 
caching replays legitimate requests rejected coca authorization mechanism 
fair links forces clients resend request acknowledgments received 
attackers inexpensive way generate requests pass coca authorization mechanism coca defend replay denial ofservice attacks 
ways imbalance cost making requests cost satisfying 
increase cost making request signature checking coca authorization mechanism 
second decrease cost processing request 
coca embraces alternative 
coca server caches responses client requests caches results expensive cryptographic operations requests progress suggested castro 
servers cached responses recalculating processing replays 
cache client responses managed differently cache cryptographic results 
discuss client response cache 
finite capacity caches responses clients cached indefinitely 
server cache effective replays submitted clients minimize chance replays causing cache misses concomitant costly computation server 
solution ensure client replays forced exhibit temporal locality consistent information cached 
particular caching coca response client host defense combat attack saturates incoming links 
coca enable forms termed distributed defense 
distributed denial ofservice attacks directed region network targeting coca service se tolerated coca servers deployed widely significant number reside outside region attack 
second proactive recovery protocols coca enable service migrate set hosts allow service distributed denial service attack provided sufficient bandwidth remains available execute proactive recovery 
acm transactions computer systems vol 
november 
coca secure online certification authority request restricting clients making request time having clients associate ascending sequence numbers requests older requests stored cache rejected bogus coca authorization mechanism 
requests processed quorum coca servers server cache client responses current 
replay request signed client server sequence number larger sequence number response cached larger request rejected satisfied cache request processed 
quorums comprising coca servers replays lead computation coca servers 
coca implementation limits susceptibility attacks 
coca server sends response client response sent coca servers 
server quite cached response client request 
attacker replay client requests denial service attacks replay messages servers exchange 
coca defense cache 
servers cache results expensive operations computing way hashes shares proactive secret sharing computing partial signatures progress requests 
cache server sufficiently large handle maximum number requests coca servers progress time 
total bytes suffices cache support client request coca certificates exceed bytes reasonable observed usage 
coca limits number requests progress time having delegate limit number requests initiates 
course compromised delegate respect bound 
recall coca servers notified responses sent server estimate number concurrent requests server delegate progress 
coca servers ignore messages servers initiate concurrent requests 

performance coca coca prototype approximately lines new source employs threshold proactive threshold rsa schemes bit rsa keys constructed protocol described zhou building blocks rabin 
implemented protocols openssl openssl project 
coca certificates syntax ccitt system clients client cache roughly gigabytes approximately bytes needed store client request coca response 
way hash function involves expensive modular exponentiation needed implement verifiable secret sharing feldman 
protocols zhou employ replication shares subshares achieving fault tolerance backup scheme rabin 
acm transactions computer systems vol 
november 
zhou certificates coca certificate serial number embedded serial number 
cost complexity coca protocols concerned tolerating failures defending attacks failures attacks infrequent today 
normally expect 
servers satisfy stronger assumptions execution speed 
messages sent delivered timely way 
coca prototype optimized normal circumstances 
possible redundant processing delayed evidence assumptions longer hold 
particular prototype delays coca servers start serving additional delegates client requests progress 
reduces number delegates hold reduces cost request processing normal circumstances 
refinements protocols section follows 
client sends request single delegate 
delegate respond timeout period client sends request delegates required protocols section 
server receives message connection processing client request serving delegate delegate timeout period elapsed 
delegate sends response coca servers addition sending response client initiating request request processed 
receiving response server delegate request server serving delegate aborts activity 
cached response forwarded server instructs participate processing request processed 
receiving forwarded response immediately terminates serving delegate request 
threshold signature protocol coca uses designed give better performance hold 
local area network deployment experiments reported subsection involved coca prototype comprising servers communicating mbps ethernet 
servers sun sparc systems running solaris syntactically compatible certificates coca certificates interchangeable certificates public key infrastructures today 
coca imposes interpretation serial numbers embedded certificates coca certificate higher serial number invalidates lower serial number client 
second coca supports query need provide certification revocation lists usually associated public key infrastructures support certificates 
acm transactions computer systems vol 
november 
coca secure online certification authority table execution time lan hold coca operation mean msec std dev 
msec query update pss table ii 
cost breakdown query update proactive secret sharing pss lan deployment query update pss partial signature message signing way function ssl idle mhz processors 
round trip delay udp packet servers ethernet usually microseconds 
table gives times coca operations executing isolation assumptions hold 
report delay query update round proactive secret sharing 
reported sample means sample standard deviations executions 
samples mean 
better understand origin delays report table ii percentage contribution attributed certain cpu intensive cryptographic operations 
query update measured time spent generating partial signatures signing messages 
proactive secret sharing measured delay associated way function message signing computation involved establishing ssl connection transmit confidential information servers 
notice improved hardware performing cryptographic operations considerable impact 
idle time servers wait listed table ii 
total execution time unaccounted 
time signature verification message marshaling unmarshaling task management 
evaluate effectiveness optimizations outlined assumptions hold compares performance optimizations 
results summarize executions small sample standard deviations observed 
optimizations seen effective 
internet deployment communication delays internet higher local area network variance delays higher 
understand extent time spent checking certificates performing state recovery server included delays 
acm transactions computer systems vol 
november 
zhou fig 

effectiveness optimization query update proactive secret sharing assumptions hold 
affects performance deployed coca servers follows 
university uit norway mhz pentium ii 
university california san diego ucsd san diego ca mhz pentium ii 
cornell university ithaca ny mhz pentium iii 
dartmouth college hanover nh mhz pentium ii 
ran linux 
depicts average message delivery delay measured ping servers 
delivery delays internet vary considerably labovitz values observed experiments report differ significantly 
table iii gives measurements cornell host site internet deployment 
comparing tables iii see impact internet longer communication delays lead longer server idle times 
sample standard deviation higher internet deployment due higher load variations servers due higher variance delivery delays internet samples located mean 
see table iv breakdown delays analogous table ii internet deployment coca 

making measurements preferred having hardware site reason believe affected modest differences processor speeds 
production coca deployment recommend having different hardware different operating systems site vulnerabilities reduced 
acm transactions computer systems vol 
november 
coca secure online certification authority fig 

deployment coca internet message delays servers 
table iii 
performance coca coca operation mean msec std dev 
msec query update pss averages sample standard deviations repeated executions day period 
table iv 
breakdown costs query update proactive secret sharing pss internet deployment query update pss partial signature message signing way function ssl idle coca performance denial service attacks denial service attack ultimately involve attackers combination compromised clients servers sending new messages ii replaying old messages iii delaying message delivery processing 
evaluate effective coca defenses simulated attacks measured impact 
results experiments local area network deployment coca discussed subsection 
message creation defense 
new messages sent servers nearly potent denial service attacks coca new messages sent clients 
messages servers rejected 
messages contain correctly signed client request correctly signed messages servers involved previous protocol steps collusion compromise coca servers required get past coca request processing authorization mechanism 
message server coca server invalid acm transactions computer systems vol 
november 
zhou subsequent messages server ignored considerably effectiveness denial service attack saturate contrast requests compromised clients correctly signed rejected coca request processing authorization mechanism identities compromised clients known receiver 
impact mitigated coca resource management mechanism ensures messages small set senders server resources 
effective mechanism defense depends exact configuration coca resource management mechanism number input queues various clients grouped scheduler servicing input queues 
measure effectiveness suffices investigate simple case clients 
compromised client sends new requests service rates control correct client sends request awaits response timeout 
interest correct client requests delayed due requests compromised client sends information predicting coca behavior clients 
client request appended input queue correct coca server factors contribute delay processing source delay arises multiplexing server concurrently processes number requests 
number requests referred level concurrency 
assuming modest load correct clients delay due sharing processor concurrent requests affected actions attacker take interest experiments assume servers process requests completion serially viz 
level concurrency 
second source delay affected compromised client new messages requests input queues processing precede mechanism defend client requests control source delay delay measure 
experiment adjusted rate requests compromised client measuring performance requests correct client 
start server configured store client requests single input queue 
capacity queue requests 
correct client get service compromised client sent requests rate excess requests second 
requests second requests compromised client fill fixed capacity input queue virtually time query request correct client chance discarded arrives room input queue update request half due seconds timeout respectively 
denial service attack success 
experiment server configured separate queues correct client compromised client 
round robin scheduler compromised client await responses sending additional requests experimental results apply directly case group compromised clients share input queue server 
timeout second query seconds update 
acm transactions computer systems vol 
november 
coca secure online certification authority fig 

performance query correct client compromised client requests varying rates 
serviced queues 
figures show performance query update requests correct client various rates requests compromised client 
reported datapoint average processing time experiments error bars depict range samples 
curves query update figures comprise segments 
segment increases rate requests compromised client sends cause increased delays requests correct client 
rate requests compromised client increases probability coca round robin servicing input queues process requests processing request correct client 
processing increases processing time request correct client 
see segment identical wide ranges samples rate measured 
worst case occurs request correct server arrives just request compromised client starts get processed best case occurs request correct server arrives request compromised client processed 
see worst best case means samples increases rate requests compromised client increases reflecting increasing probability request correct client wait processing request compromised client 
second segment curves begins compromised client sending requests approximately rate normal client approximately request second query requests second update 
second segment increases request rate compromised client degrade processing requests acm transactions computer systems vol 
november 
zhou fig 

performance update correct client compromised client requests varying rates 
correct client 
requests clients processed alternation delay requests correct client remains double measured compromised client 
note rate requests compromised client increases requests discarded servers fixed capacity input queue compromised client full requests arrive 
coca request processing authorization mechanism starts saturating requests second due time required server perform signature verification incoming message 
requests second server diminished processing capacity execute protocols query update 
little point exploring higher request rates performance experiments didn actual deployment clients partitioned set input queues 
worst case performance case easy bound light experiments clients 
suppose queues serving compromised clients queues serving correct clients queues serving kinds clients 
requests compromised clients starve requests correct clients share input queue experiment established rate requests single input queue compromised clients exceeds requests second requests correct clients input queue succeed 
second experiment established coca resource management mechanisms guarantee server processing time resources devoted processing requests queues serve correct clients 
acm transactions computer systems vol 
november 
coca secure online certification authority fig 

performance query processing simulated denial service attack compromised server cache versus cache 
message replay defense 
coca employs caching defend service attacks involving message replays 
need consider replays client requests experiments impact considerably smaller impact processing new requests compromised client 
specifically new requests coca expend resources executing protocol operation requested replays client requests processing design involves considerably fewer resources request rejected sequence number small satisfied server cache ignored processed 
assuming requests replayed compromised client launches denial service attacks experiments figures curves give bounds seek worst case performance coca client request replays form basis denial service attack 
replays messages servers coca relatively expensive cryptographic computations cached 
validate simulated attacker replaying server messages varying rates coca servers 
message replayed designed cause defenses disabled coca server compute partial signatures takes approximately milliseconds mhz sun sparc server relatively expensive operation particularly effective denial service attack 
measured average delay query update proactive function rate message replay sent compromised server 
compared performance case caching enabled case caching disabled 
information appears figures 
acm transactions computer systems vol 
november 
zhou fig 

performance update processing simulated denial service attack compromised server cache versus cache 
fig 

performance proactive secret sharing simulated denial service attack compromised server cache versus cache 
acm transactions computer systems vol 
november 
coca secure online certification authority case caching enabled average delay operation largely unaffected rate message replay increases caches satisfy computational needs handling messages 
witnessed slight increase average delay rate message replay reached messages second 
point authorization mechanism saturated incoming messages 
case caching disabled curve consists segments 
segment ends approximately replays second query update replays second pss resembles segment curves figures reflects increased processing resources replays recompute values cached replay rate increases 
second segment gradually increases 
range additional computation required additional delay incurred resource management mechanism bounds number attacker messages processed 
compromised server launching attack rate replay messages average delay operation case caching enabled lower case caching disabled 
server participating repeated executions certain expensive operations necessary assumption longer holds correct servers unable finish processing optimized execution 
switch back fault tolerant version causes repeated executions certain expensive cryptographic operations avoided caching enabled 
delivery delay defense 
measure impact message transmission processing delays performance coca set server messages delivered client server delayed specified amount time available receipt 
investigated case messages sent specific server delayed case messages sent servers delayed 
gives average time interval containing samples coca process operations interest query update round proactive secret sharing messages single server delayed 
case server unavailable noted inf abscissa 
delay increases processing time seen move phases 
phase server say increases delay processing messages delay operation interest 
occurs coca protocols initially assume hold optimized protocols require participation delay messages slows protocols 
second phase entered delay causes servers suspect assumptions hold 
servers initiate redundant processing creating additional delegates process operations example 
participation longer required operation terminate increasing delay delay completion operation 
continue send messages requiring servers compute replies 
time servers acm transactions computer systems vol 
november 
zhou fig 

performance coca versus message delay server 
message delay inf indicates case server unavailable 
devote generating replies decreases delay increases simply sends fewer messages delay greater 
servers cycles devote generating replies servers replies needed order protocols terminate 
increasing delay frees server resources speed termination protocol average processing time decreases second phase 
third phase plateau response time reached delay sufficiently high imposes little load servers 
gives average measured delay interval containing samples message delay increases servers 
observe execution time increases linearly increase message delay 
curves consistent protocols operate processing query involves message delays processing update involves message delays round proactive secret sharing involves message delays 

related systems 
fault tolerant authentication substrate reiter supporting secure groups horus system appears threshold cryptography replication implementing ca 
led see decrease processing time significant case proactive cases query update 
case proactive secret sharing processing messages server involves new cached expensive cryptographic operations cases expensive cryptographic operations avoided due caching 
acm transactions computer systems vol 
november 
coca secure online certification authority fig 

performance coca versus message delay servers 
design implementation reiter standalone generalpurpose ca having ambitious functionality performance robustness goals 
coca early intended resist denial ofservice attacks mobile adversaries 
provide clients key escrow operations coca currently support 
built middleware called rampart reiter implements process groups asynchronous distributed system compromised processors exhibit arbitrary behavior 
rampart manages groups replicas removes members process groups ensure system stall due compromised replicas 
impossible distinguish slow halted processors asynchronous system rampart uses timeouts identifying processors compromised 
correct slow server removed process group constitutes denial service vulnerability 
addition making group membership changes involves expensive protocols adversary launch denial service attacks rampart membership changes 
furthermore rampart employs proactive recovery systems vulnerable mobile adversaries 
approach related rampart embodied byzantine fault tolerance bft discussed castro liskov 
bft employs ordering mechanism defines total ordering requests enables server know request received processing processing delayed request ordering precedes exists 
threshold decryption blinding chaum uses supporting additional functionality allow coca support features 
acm transactions computer systems vol 
november 
zhou coca bft unable guarantee requests processed order consistent lamport causality relation require trusting clients 
bft stronger ordering mechanism needed implementing coca query update needed specification update changed copy certificate updated longer passed argument 
bft extremely fast possible uses macs message authentication codes public key cryptography 
employing macs boost coca performance public key cryptographic operations needed coca signing certificates responses clients 
coca bft employs proactive recovery castro liskov 
bft replicas store shares service private key replicas refresh shared secret keys combat mobile adversaries 
bft takes denial service attacks account employs defenses similar mechanisms discussed coca section castro 
approach implementing secure fault tolerant services replication asynchronous systems potentially malicious adversaries proposed cachin basis hydra asynchronous group communication primitives cachin 
state machine replication lamport intended randomized byzantine agreement circumvent impossibility result concerning agreement asynchronous systems fischer 
hydra address mobile adversary denial service attacks coca solutions apply 
pasis perpetually available secure information systems architecture wylie intended support variety approaches decentralized storage system technologies data redundancy encoding dynamic self maintenance constructing survivable information storage systems 
pasis implemented possible program coca query update number ways 
clear pasis support coca optimizations defense denial service attacks doing depend pa sis selecting weak model computation supporting access low level details pasis building block protocols 
replication secret sharing basis fault tolerant secure key distribution center kdc described gong 
design client kdc server pair shares separate secret key 
kdc allows clients establish shared secret key protocols single kdc server knows shared secret key 
fact attack compromise significant fraction kdc servers keys kdc establishes link clients revealed 
related coca various distributed systems implement data repositories operations analogous query update 
phalanx malkhi reiter particularly relevant intended setting quite similar coca viz 
asynchronous systems compromised servers exhibit arbitrary behavior implement shared variables having similar semantics coca certificates 
coca certificates regarded shared variables queried updated 
acm transactions computer systems vol 
november 
coca secure online certification authority phalanx supports different implementations read query write update shared variables 
implementation optimized honest writers clients follow specified protocols exhibit benign failures crash omission timing failures second implementation tolerates dishonest writers clients exhibit arbitrary behavior faulty 
phalanx employs masking byzantine quorum system malkhi reiter dishonest writers employs dissemination quorum system honest writers 
phalanx honest writer protocol writers trusted sign objects stored 
honest writer protocol coca uses dissemination quorum system coca protocols require clients trusted coca servers store objects certificates signed coca service key prevents compromised coca servers corrupting objects store 
point difference coca phalanx manner clients verify responses service 
phalanx client know public key server coca client need know single public key service 
vault data repository iyengar garay ibm watson research center implements rabin information dispersal algorithm storing retrieving files 
information stored vault optimal space efficiency 
vault protocols assume synchronous model computation involve stronger assumptions execution timing delivery delays coca 
attacker able overload processors clog network invalidate assumptions cause vault protocols fail 
coca clients vault communicate system single server called gateway 
cryptographic building blocks public key infrastructure 
coca employs threshold cryptography desmedt frankel desmedt frankel yung proactive secret sharing jarecki herzberg frankel building blocks 
existing protocols intended systems fair links asynchrony assumptions hold necessary design new protocols coca zhou zhou 
implementations threshold cryptography proactive secret sharing schemes stronger system models reported barak wu previous public key infrastructure gasser lampson kaufman advocates offline cas issue certificates certificate revocation lists 
tradeoffs associated certificate revocation lists related mechanisms discussed rivest myers kocher fox lamacchia mcdaniel rubin 
stubblebine compares different masking byzantine quorum system quorum intersection strengthened stipulate intersection quorums contains correct replicas compromised replicas 
masking byzantine quorum system tolerate compromise quarter servers 
recall dissemination quorum system tolerates third compromised servers 
acm transactions computer systems vol 
november 
zhou mechanisms deal revoked certificates argues single online service impractical performance security reasons advocating solution offline identification authority online revocation authority 
coca implement online part solution 
byrd security infrastructure consisting distributed ca certificate revocation notification service discussed implementation appear complete 
coca distributed ca employs threshold cryptography 
proposed ca support query update promptly notifying clients invalidated certificates 
alternatives offline ca include online certificate status checking ocsp myers myers kocher demand revocation lists mcdaniel rubin 
data validation certification server adams extends ocsp checking arbitrary digitally signed documents 
services rely sort trusted online service responder validation authority experience implementing deploying coca directly applicable 
believe scalability global public key infrastructure dictate deploying hierarchy certification authorities 
previous maurer reiter stubblebine burmester applied notion web trust adopted pgp zimmerman exploited independent hosts paths establish trust infrastructure 
services provided coca desired infrastructure allow clients verify demand certificate validity 

concluding remarks offline operation ca air gap clearly effective defense network borne attacks 
reason traditional wisdom keep ca offline possible 
approach trades set vulnerabilities 
ca offline attacked network update validate certificates demand 
vulnerability network borne attacks decreased expense increased client vulnerability attacks exploit invalidated certificates 
staying online coca trade vulnerabilities differently 
coca vulnerability network borne attacks greater clients vulnerability attacks invalidated certificates reduced 
coca offline ca exhibit advantages lampson stubblebine myers 
offline ca issues certificates clients coca validates demand certificates 
revocation certificate achieved notifying coca issuance new certificate requires interacting offline ca 
trading performance security 
particular harder adversary create new valid certificate requires compromising offline ca takes longer client new certificate issued requires interacting offline ca 
acm transactions computer systems vol 
november 
coca secure online certification authority looking development coca led prototype online ca specific protocols denial service defenses set experimental data documenting performance system certain attacks 
composing mechanisms fault tolerance security coca implements secure multiparty computation yao goldreich ben chaum 
just agreement protocols kin part vocabulary system builders concerned faulttolerance protocols secure multiparty computation aspire build trustworthy systems 
query update relatively simple semantics 
building richer services fault tolerant secure facile implementing richer forms secure multiparty computation protocols enable mutually distrusted parties compute publicly known function secret input share disclosing input input shares held parties 
lesson coca call investigate practical secure multiparty computation second value weak assumptions specific mechanisms principled approach defending attacks 
defenses weak assumptions construction accompanied characterization vulnerabilities assumptions 
nature weak assumptions difficult violate 
example careful attention paid assumptions characterize coca environment led system inherent defenses denial service attacks 
new assumptions invariably require development new protocols involve new kinds guarantees learn build 

acknowledgments grateful dag johansen david kotz keith marzullo hardware enabled deploy coca internet 
mike reiter provided extremely helpful comments related 
feedback andrew myers miguel castro stuart stubblebine christian cachin yacobi enabled sharpen clarify ideas 
li gong steve kent cathy meadows provided helpful feedback draft article 
yaron minsky desmedt zygmunt haas influential early stages investigations 
acm tocs reviewers remarks extremely constructive 
appendix detailed description protocols appendix gives details protocols described section 
describe protocol initiated delegate practice delegate initiate protocol request server starts acting delegate receives request receives see zhou description proactive secret sharing protocol coca 
acm transactions computer systems vol 
november 
zhou message related processing request 
optimizations outlined sections included presentation 
notational conventions appendix 
coca servers coca client message signed coca service private key message signed server private key message signed client private key ps sp partial signature message generated server share sp message sent host server client host mq message mq sent server server coca server message includes type identifier indicate purpose message 
type identifiers sans serif font 
client protocol client request form type seq parm cred type indicates type request client issuing request seq unique sequence number request parm contains parameters related request cred credentials authorize request 
clients protocol communicate coca 

invoke query certificate associated name cid client composes request query seq cid cred invoke update establish new binding key name cid certificate cid client composes request update seq cid key cred 
client sends servers 
periodically re sends receives response request 
query response form certificate cid 
update response form done 
threshold signature protocol describes threshold signature protocol threshold sign message signed evidence self verifying protocol appropriate schemes threshold rsa protocol applicable threshold signature schemes discrete logarithms 
schemes may require agreed random number generating partial signatures 
schemes implemented adding new acm transactions computer systems vol 
november 
coca secure online certification authority messages convince receivers generate partial signatures detailed appendices different evidence protocols query update 

server sends server sign request message message signed evidence sign request 
server receiving sign request message verifies evidence respect valid generates partial signature share sq sends partial signature back sign response ps sq 
server periodically repeats step receives partial signatures quorum servers includes partial signature 
server selects partial signatures construct signature 
ifthe resulting signature invalid happen compromised servers submit erroneous partial signatures tries combination signatures 
process continues correct signature obtained 
query processing protocol 
receiving request query seq cid cred client server checks valid credentials cred provided 
valid sends query request message servers 
query request 
server receiving query request message checks validity request 
request valid fetches current signed local certificate associated name cid cid 
server sends back message 
query response 
server repeats step receives query response messages quorum servers including 
verifies certificates messages correctly signed coca 
cid key certificate largest serial number query response messages 
server invokes threshold sign query response messages collected quorum servers obtaining 
step delegate decides random number suggestions servers ensure randomness notifies random number servers generate partial signatures 
fact try construct signature soon received partial signatures 
wait partial signatures partial signatures received incorrect 
worst case try combinations 
cost insignificant small 
robust threshold cryptography schemes gennaro reduce cost error correction codes 
acm transactions computer systems vol 
november 
zhou 
server sends response client 
update processing protocol 
receiving request update seq cid key cred client server checks valid credentials cred provided 
valid computes serial number new certificate version number public collision free hash function 
invokes threshold sign cid key obtaining cid key 

server sends update request message server update request 
server receiving update request message updates certificate cid certificate cid stored server 
server sends back message 
update response done 
server repeats step receives update response messages quorum servers 
invokes threshold sign done update response messages collected quorum servers obtaining done 

server sends response client done adams sylvester 
data validation certification server protocols 
request comments 
baldoni raynal 
crash fault tolerance arbitrary fault tolerance modular approach 
proceedings international conference dependable systems networks ieee computer society technical committee fault tolerant computing ifip working group dependable computing fault tolerance ieee computer society new york 
barak herzberg naor shai 
proactive security toolkit applications 
proceedings sixth acm conference computer communications security ccs acm acm kent ridge digital labs singapore 
ben goldwasser wigderson 
completeness theorems fault tolerant distributed computation 
proceedings twentieth annual acm symposium theory computing stoc acm chicago 
burmester desmedt 
trust security new look byzantine generals problem 
network threats dimacs series discrete mathematics theoretical computer science vol 
wright neumann eds american mathematical society providence 
implement optimization described section forwards response servers 
henceforth servers need act delegate request 
true step update request processing 
acm transactions computer systems vol 
november 
coca secure online certification authority byrd gong smith 
secure collaborative space dynamic coalitions 
proceedings ieee workshop information assurance security ieee united states military academy west point 
cachin 
distributing trust internet 
proceedings international conference dependable systems networks dsn ieee computer society technical committee fault tolerant computing ifip working group dependable computing fault tolerance ieee computer society teborg sweden 
cachin 
hydra secure replication internet 
techn 
rep rz ibm research 
december 
canetti herzberg 
maintaining security presence transient faults 
advances cryptology crypto fourteenth annual international cryptology conference proceedings lecture notes computer science vol 
desmedt ed springer verlag berlin 
castro 
practical byzantine fault tolerance 
phd 
thesis department electrical engineering computer science massachusetts institute technology cambridge mass castro liskov 
practical byzantine fault tolerance 
proceedings third usenix symposium operating system design implementation osdi usenix association ieee acm sigops new orleans 
castro liskov 
proactive recovery byzantine fault tolerant system 
proceedings fourth usenix symposium operating system design implementation osdi usenix association ieee acm sigops san diego 
ccitt 

recommendation directory authentication framework 
matsumoto imai 
efficient secure multiparty generation digital signatures discrete logarithms 
ieice trans 
fund 
electro 
inf 
commun 
eng 
april 
available www com 
chaum 
blind signatures untraceable payments 
advances cryptology crypto workshop theory application cryptography proceedings chaum rivest sherman eds plenum new york 
chaum 
security identification transaction systems big brother obsolete 
commun 
acm october 
chaum 
blinding unanticipated signatures 
advances cryptology eurocrypt workshop theory application cryptographic techniques proceedings lecture notes computer science vol 
chaum price eds springer verlag berlin 
chaum cr damg ard 
multiparty unconditionally secure protocols 
proceedings twentieth annual acm symposium theory computing stoc acm chicago 
desmedt 
threshold cryptography 
european trans 

july august 
desmedt 
research aspects threshold cryptography 
information security international workshop proceedings lecture notes computer science vol 
okamoto eds springer verlag berlin 
desmedt frankel 
threshold cryptosystems 
advances cryptology crypto ninth annual international cryptology conference proceedings lecture notes computer science vol 
brassard ed springer verlag berlin 
desmedt frankel 
shared generation authenticators signatures extended 
advances cryptology crypto eleventh annual international cryptology conference proceedings lecture notes computer science vol 
feigenbaum ed springer verlag berlin 
guerraoui 
modular abstractions devising state machine replication 
proceedings nineteenth ieee symposium reliable distributed systems ieee computer society germany 
hamilton 
proactive dsa application implementation 
tech 
rep sand conf sandia national laboratories albuquerque may 
acm transactions computer systems vol 
november 
zhou feldman 
practical scheme non interactive verifiable secret sharing 
proceedings th annual symposium foundations computer science ieee new york 
fischer lynch peterson 
impossibility distributed consensus faulty processor 
acm april 
fox lamacchia 
certificate revocation mechanics meaning 
financial cryptography second international conference fc proceedings lecture notes computer science vol 
ed springer verlag berlin 
frankel mackenzie yung 
optimal resilience proactive publickey cryptosystems 
proceedings th symposium foundations computer science ieee miami beach 
frankel gemmell mackenzie yung 
proactive rsa 
advances cryptology crypto proceedings lecture notes computer science vol 
kaliski jr ed springer verlag berlin 
frankel yung 
distributed public key cryptosystem 
public key cryptography international workshop practice theory public key cryptography pkc proceedings lecture notes computer science vol 
imai zheng eds springer verlag berlin 
freier kocher 
ssl protocol version 
internet draft 
garay gennaro jutla rabin 
secure distributed storage retrieval 
theor 
comput 
sci 
july 
gasser goldstein kaufman lampson 
digital distributed systems security architecture 
proceedings twelfth national computer security conference national institute standards technology nist national computer security center ncsc national institute standards technology nist baltimore 
gennaro jarecki krawczyk rabin 
robust threshold dss signatures 
advances cryptology eurocrypt international conference theory application cryptographic techniques proceedings lecture notes computer science vol 
maurer ed springer verlag berlin 
gennaro jarecki krawczyk rabin 
robust efficient sharing rsa functions 
advances cryptology crypto sixteenth annual international cryptology conference proceedings lecture notes computer science vol 
koblitz ed springer verlag berlin 
gligor 
note denial service operating systems 
ieee trans 
softw 
eng 
may 
goldreich micali wigderson 
play mental game 
proceedings nineteenth annual conference theory computing stoc acm new york 
gong 
increasing availability security authentication service 
ieee select 
areas commun 
june 
gong syverson 
fail protocols approach designing secure protocols 
dependable computing critical applications iyer fuchs gligor eds ieee computer society press new york 

group oriented digital signature scheme 
iee proc 
comput 
digit 
techn 
september 
herzberg jakobsson jarecki krawczyk yung 
proactive public key signature schemes 
proceedings fourth annual conference computer communications security acm acm rich 
herzberg jarecki krawczyk yung 
proactive secret sharing cope perpetual leakage 
advances cryptology crypto fifteenth annual international cryptology conference proceedings lecture notes computer science vol 
coppersmith ed springer verlag berlin 
iyengar cahn jutla garay 
design implementation secure distributed data repository 
proceedings fourteenth ifip international information security conference sec international federation information processing tc security protection information processing systems elsevier science vienna 
acm transactions computer systems vol 
november 
coca secure online certification authority jarecki 
proactive secret sharing public key cryptosystems 
thesis department electrical engineering computer science massachusetts institute technology cambridge mass juels 
client puzzles cryptographic countermeasure connection depletion attacks 
proceedings network distributed system security symposium internet society san diego 
karn simpson 
session key management protocol 
internet draft draft simpson txt 
kaufman 
dass distributed authentication security service 
request comments 
kent ellis yuan 
internet infrastructure security countermeasures 
tech 
rep bbn january 
moser melliar smith 
solving consensus byzantine environment unreliable fault detector 
proceedings international conference principles distributed systems hermes france 
kocher 
certificate revocation validation 
financial cryptography second international conference fc proceedings lecture notes computer science vol 
ed springer verlag berlin 

practical public key cryptosystem 
bachelor thesis department electrical engineering massachusetts institute technology cambridge mass labovitz malan jahanian 
internet routing instability 
proceedings annual conference applications technologies architectures protocols computer communication sigcomm acm cannes 
lamport 
time clocks ordering events distributed system 
commun 
acm july 
lampson abadi burrows wobber 
authentication distributed systems theory practice 
acm trans 
comput 
syst 

malkhi reiter 
byzantine quorum systems 
distrib 
comput 

malkhi reiter 
secure scalable replication phalanx 
proceedings seventeenth symposium reliable distributed systems ieee computer society west lafayette ind 
maurer 
modeling public key infrastructure 
proceedings fourth european symposium research computer security esorics lecture notes computer science vol 
bertino eds springer verlag berlin 
mcdaniel rubin 
response eliminate revocation lists financial cryptography fourth international conference fc proceedings lecture notes computer science vol 
frankel ed springer verlag berlin 
meadows 
formal framework evaluation method network denial service 
proceedings twelfth ieee computer security foundations workshop ieee computer society press italy 
meadows 
cost framework analysis denial service networks 
comput 
sec 

millen 
resource allocation model denial service 
proceedings ieee symposium security privacy ieee computer society press oakland calif 
millen 
denial service perspective 
dependable computing critical applications cristian lunt eds springer verlag berlin 
myers 
revocation options challenges 
financial cryptography second international conference fc proceedings lecture notes computer science vol 
ed springer verlag berlin 
myers adams 
internet public key infrastructure online certificate status protocol ocsp 
request comments 
openssl project 
available www openssl org 

protecting key exchange management protocols resource attacks 
proceedings ifip tc tc joint working conference communications acm transactions computer systems vol 
november 
zhou multimedia security cms preneel ed international federation information processing kluwer academic leuven belgium 
ostrovsky yung 
withstand mobile virus attacks 
proceedings tenth annual symposium principles distributed computing podc acm montreal 
rabin 
efficient dispersal information security load balancing fault tolerance 
acm april 
rabin 
simplified approach threshold proactive rsa 
advances cryptology crypto eighteenth annual international cryptology conference proceedings lecture notes computer science vol 
krawczyk ed springer verlag berlin 
reiter 
rampart toolkit building high integrity services 
theory practice distributed systems international workshop selected papers lecture notes computer science vol 
birman mattern schiper eds springer verlag berlin 
reiter 
distributing trust rampart toolkit 
commun 
acm april 
reiter stubblebine 
path independence authentication large scale systems 
proceedings fourth acm conference computer communications security acm acm rich 
reiter birman van renesse 
security architecture fault tolerant systems 
acm trans 
comput 
syst 
nov 
reiter franklin lacy wright 
key management service 
comput 
sec 

robinson 
web sites attacked yahoo 
new york times 
february 
rivest 
eliminate revocation lists 
financial cryptography second international conference fc proceedings lecture notes computer science vol 
ed springer verlag berlin 
kuhn spafford sundaram zamboni 
analysis denial service attack tcp 
proceedings ieee symposium security privacy ieee computer society press oakland calif 
stubblebine 
secure authentication enforcing revocation distributed systems 
proceedings ieee symposium research security privacy ieee computer society press oakland calif 

spx global authentication public key certificates 
proceedings ieee symposium security privacy ieee computer society press oakland calif 
wu malkin boneh 
building intrusion tolerant applications 
proceedings eighth usenix security symposium usenix association washington dc 
wylie strunk ganger te khosla 
survivable information storage system 
ieee computer august 
yao 
protocols secure computation 
proceedings rd symposium foundations computer science focs ieee chicago 
yu 
gligor 
specification verification method preventing denial service 
ieee trans 
softw 
eng 
june 
zhou 
building secure fault tolerant line services 
phd thesis computer science department cornell university ithaca ny 
zhou schneider van renesse 
proactive secret sharing asynchronous systems preparation 
zimmerman 
official pgp user guide 
mit press cambridge mass received december revised march accepted may acm transactions computer systems vol 
november 
