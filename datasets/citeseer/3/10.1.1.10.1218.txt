build gnutella structured overlay 
interest unstructured structured overlays 
unstructured overlays gnutella build random graph flooding random walks graph discover data stored overlay nodes 
structured overlays assign keys data items build graph maps key specific node 
structure graph enables efficient discovery data items keys support complex queries 
build gnutella structured overlay 
believe answer 
replaced random graph gnutella structured overlay retaining content placement discovery mechanisms unstructured overlays support complex queries 
preliminary results indicate structure improve performance floods random walks 
indicate structure reduce maintenance overhead surprising commonly believed unstructured overlays lower maintenance overhead structured overlays 
years interest peer topeer overlays provide substrate building large scale data sharing content distribution applications 
types overlays unstructured structured 
unstructured overlays gnutella widely large amount improving gnutella example :10.1.1.10.5444
unstructured overlays organize nodes random graph flooding random walks graph query content stored overlay nodes 
visited node evaluates query locally content 
supports arbitrarily complex queries inefficient queries content widely replicated sent large fraction nodes 
structured overlays developed overcome performance inefficiencies unstructured overlays :10.1.1.28.5987
assign keys data items organize miguel castro manuel costa antony rowstron microsoft research cambridge cb fb uk lay nodes graph maps key responsible node 
graph structured enable efficient discovery data items keys support complex queries 
additionally necessary store copy pointer data item node responsible item key 
argues build gnutella structured overlay 
replace random graph gnutella structured overlay retaining content placement discovery mechanisms unstructured overlays support complex queries 
call new system structella 
gnutella structella structure organize content overlay 
node stores content store copies pointers nodes 
structella uses form flooding random walks discover content takes advantage structure ensure nodes visited query control number nodes visited accurately 
provide preliminary results comparing query overheads structella optimized version gnutella 
results indicate significant performance improvement system 
commonly believed unstructured overlays lower maintenance overhead structured overlays especially high churn rate 
negate performance benefit observed queries structella 
show structure reduce maintenance overhead structured overlays 
compare maintenance overheads structella optimized version gnutella real world trace node arrivals departures gnutella overlay 
results show structella incurs lower overhead 
see reason build gnutella top unstructured overlay 
section describe structured overlay build structella unstructured overlay comparison 
section compares maintenance algorithms overheads systems section discusses implement complex queries structella evaluates performance 
conclude describe section 
background overlays pastry implement structella structured overlays 
chose pastry low maintenance overhead 
section provides brief description pastry optimized version gnutella evaluate structella 
pastry pastry uses circular bit id space 
assigns overlay node nodeid chosen randomly uniform probability id space 
keys chosen space 
nodeids keys interpreted sequence digits base experiments 
message destination key pastry routes message node nodeid numerically closest key 
node maintains routing table leaf set route messages 
routing table matrix rows columns 
entry row column routing table contains nodeid shares digits local node nodeid th digit equal nodeid entry left empty 
uniform random distribution nodeids ensures rows non empty entries average 
additionally column row corresponding value th digit local node nodeid remains empty 
implemented structella version pastry proximity aware routing 
routing table entries filled random node required prefix match 
leaf set contains closest nodeids clockwise local nodeid closest nodeids counter clockwise 
leaf set ensures reliable message delivery 
experiments 
routing step local node normally forwards message node nodeid shares prefix key digit longer prefix key shares local node nodeid 
node known message forwarded node nodeid numerically closer key shares prefix key long 
leaf set determine destination node hop 
full description pastry 
gnutella order evaluate performance overhead structella implemented gnutella unstructured overlay 
implementation gnutella protocol optimised improve query performance reduce maintenance overhead 
gnutella random graph 
node overlay maintains neighbour table network addresses neighbours graph 
neighbour tables symmetric node node neighbour table node node neighbour table 
neighbour tables designed symmetric order reduce maintenance load 
upper lower bound number entries node neighbour table 
lower bound upper bound 
bounds chosen values unstructured overlays 
overlay maintenance necessary maintain overlay ensure remains working nodes join leave 
section compares mechanisms gnutella system pastry structella maintain overlay 
join overlay joining node contacts bootstrap node randomly chosen current members overlay 
gnutella system bootstrap node initiates search overlay nodes neighbour table entries upper bound 
original gnutella uses flooding discover nodes 
evaluated different versions flooding random walk 
flooding version bootstrap node floods message time live ttl nodes neighbour table 
node receives message decrements ttl 
result greater zero message received node sends message entries neighbour table sender 
nodes receive message check number entries neighbour table upper bound send reply message back joining node 
joining node inserts nodes reply neighbour table number entries reaches upper bound 
receive replies nodes insert neighbour table 
nodes stored cache replace failed neighbours 
ttl experiments described 
random walk version bootstrap node chooses entries neighbour table random sends message node 
message includes counter initialized number neighbours sought joining node 
node receives message checks number entries neighbour table upper bound 
node sends reply message back joining node decrements message counter 
message counter drops zero message forwarded forwarded randomly selected node neighbour table 
flooding joining node adds nodes receives replies neighbour table 
approaches side effect neighbour table entries point nodes close bootstrap node 
increase probability partitioning overlay node failures affect content discovery 
avoided refining joining approaches expense increased overhead 
evaluate resilience overlay opted expensive approaches described 
node joining pastry exploits overlay structure 
joining node picks random nodeid asks bootstrap node route special join message destination key 
message routed node nodeid numerically closest obtains th row routing table th node encountered route obtains leaf set addition node joining overlays need detect failures repair faulty neighbours 
simplest approach detect failures periodically send probe request neighbour wait reply 
exploit symmetry neighbour tables gnutella overlay reduce failure detection overhead 
periodically node sends alive message node neighbour table 
neighbours node receive message neighbour period 
receive message probes node node reply marks faulty 
experiments set period seconds 
faults repaired cached nodes available flood random walk known node depending version 
pastry uses different strategies detect failures routing table leaf set 
routing table symmetrical node explicitly probes member seconds detect failures 
exploit structure overlay detect failures leaf set members 
node sends single alive message seconds left neighbour id space 
node receive message right neighbour probes neighbour marks faulty reply 
marks neighbour faulty discovers new member leaf set informs members new leaf set failed node 
experiments seconds set dynamically node node failure rate overlay observed node 
configured pastry achieve loss rate 
gnutella implementation pastry messages sent nodes replace explicit fault detection messages 
maintenance overhead preliminary results ran experiment evaluate maintenance overhead gnutella overlay structella pastry 
packet level discrete event simulator network topology model 
model routers arranged hierarchically 
transit domains top level average routers 
transit router average stub domains attached stub average routers 
routing performed routing policy weights topology generator 
simulator models propagation delay physical links 
average delay core links ms 
experiments system node attached randomly selected stub router link delay ms 
obtained trace node arrivals failures measurement study gnutella 
study monitored unique nodes gnutella overlay period hours 
probed node minutes check part overlay 
average session time trace approximately hours number active nodes overlay varied 
failure rate arrival rates similar large daily variations factor 
trace control node arrivals failures experiment systems 
query traffic experiment 
shows average number messages second node structella gnutella unstructured overlay flooding random walks build neighbour table 
axis represents simulation time 
systems overhead due fault detection messages 
results demonstrate benefit exploiting overlay structure reduce maintenance overhead 
average messages second node time hours gnutella flood gnutella random walk structella maintenance overhead messages second node time 
content discovery structella implemented top pastry inherits low maintenance overhead 
uses pastry overlay routing maintenance algorithms structure organize content overlay 
node stores content store copies pointers nodes joins 
reduces maintenance overhead ensures content distributed nodes overlay independently nodeids 
implement support structured queries exactly flooding random walk techniques gnutella exploit structure overlay better 
flooding random graphs inefficient node visited 
graph average degree flood visits nodes send average messages size overlay 
additionally difficult control number nodes visited constrained flood time live field provides coarse control 
better replacing flooding broadcast mechanisms proposed structured overlays 
structella uses pastry broadcast mechanism broadcast queries overlay nodes 
nodes receive query evaluate local content send matching content back sender 
broadcast efficient exploits overlay structure sends approximately messages hops require state routing state maintained pastry 
broadcast works follows 
node broadcasts message sending message nodes routing table 
message tagged routing table row node node receives message tagged forwards message nodes routing table rows greater continues node receives message tagged entries rows greater usually node receives message technique deal empty routing table slots may result small number duplicate messages 
technique searching unstructured overlays gnutella random walk 
implement random walks structella walking ring formed neighbouring nodes id space 
effective random walk content nodeids independent content stored nodes 
node receives query random walk uses leaf set forward query left neighbour id space 
evaluates query local content sends matching con tent back query originator 
terminate random walk find matching content 
approach ensures node visited trivially extended multiple concurrent random walks improve query times ensuring random walk explores disjoint set nodes 
concurrent long random walks unstructured overlays non negligible probability visiting node 
advantages random walks flooding unstructured overlays random walks provide precise control number overlay nodes visited satisfy query 
possible constrain floods ttl mechanism provides coarse grained control 
exploiting structure implement flooding algorithm provides accurate control number visited nodes 
example broadcast mechanism described upper bound row number entries query forwarded 
enables query originator choose number nodes visited set powers extended provide arbitrarily fine grained control number nodes visited 
refer constrained flood 
query performance preliminary results ran experiments compare query performance structella gnutella overlay 
started creating nodes ran query experiments stable overlay joins leaves 
experimental setup similar described 
average number links node gnutella overlay 
performance queries depends number nodes store content matching query 
ran queries nodes content matching query nodes overlay 
results average queries 
queries originated node selected randomly overlay nodes matching content 
evaluate flooding random walks gnutella overlay evaluate flooding constrained flooding random walks structella 
bound number nodes visit random walk constrained flooding 
gnutella overlay uses query id caching suppress duplicates node received query message ignores copies receives 
overlays node stops forwarding query matching content 
shows average number messages required flooding query varying fraction nodes matching content 
cases queries suc number messages gnutella structella percentage nodes matching content number messages query flooding 
time gnutella structella percentage nodes matching content query delay flooding 
finding matching content 
nodes matching content number messages gnutella overlay 
expected node forwards query message nodes neighbour table node received query discards duplicates receives 
nodes average neighbours expected number messages structella number messages extra messages due missing entries routing tables 
results show query overheads remain high nodes content matching query 
nodes matching content number messages gnutella overlay 
expected nodes matching content forward query message 
nodes average neighbours expected number messages nodes match content structella flooding uses order magnitude messages times messages nodes match content 
conclude exploiting structure flooding provides large reduction query overhead 
shows delay time query issued time node matching content receives query 
delays similar expected 
shows average number messages required query random walk constrained flooding 
success probability queries similar techniques 
expected number messages random walks similar structella gnutella overlay 
message overhead higher constrained flooding query forwarding node matching content 
benefit constrained flooding seen shows delay time query issued time node matching content receives query 
random walks structella gnutella overlay perform similarly 
constrained flooding structella performs significantly better especially nodes matching content 
improvement due parallelism search 
number messages gnutella structella random walk structella constrained flood percentage nodes matching content number messages query random walk constrained flooding 
time gnutella structella random walk structella constrained flood percentage nodes matching content query delay random walk constrained flooding 
whilst results preliminary suggest exploiting structure improves query performance reduces maintenance overhead 
argued build gnutella structured overlay 
perceived obstacles doing high maintenance overhead structured overlays ii lack support complex queries structured overlays 
structella addresses issues 
replaces random graph gnutella structured overlay structure organize content 
structella supports complex queries variants flooding random walks gnutella takes advantage structure ensure nodes visited query control number nodes visited accurately 
structella leverages structured overlay reduce maintenance overheads 
results significant performance improvements complex queries lower maintenance overhead gnutella 
results ideas preliminary 
number issues require investigation 
important study behavior structella search mechanisms frequent node arrivals departures 
plan improve gnutella overlay adopting techniques proposed version gnutella protocol 
particular gnutella introduces concept ultra peers high capacity nodes act proxies lower capacity nodes 
ways extend structella support ultra peers simplest form structured overlay containing ultra peers attach peers ultra peers done gnutella 
exploit efficient anycast implementations structured overlays help balance load ultra peers 
interesting issue explore structure help protect malicious nodes overlay 
proposals secure structured overlays presence malicious nodes potentially exploit 
current version structella uses variant pastry exploit network locality 
examine benefit cost trade offs exploiting locality structella 
build gnutella structured overlay 
far see reason build gnutella top unstructured overlay 
gnutella protocol specification 
dss clip com pdf 
castro druschel ganesh rowstron wallach 
security structured peer peer overlay networks 
th symposium operating systems design osdi 
castro druschel hu rowstron 
ex network proximity peer peer overlay networks 
technical report msr tr microsoft research may 
castro druschel 
kermarrec rowstron 
scalable application level anycast highly dynamic groups 
ngc 
castro jones 
kermarrec rowstron theimer wang wolman 
evaluation scalable application level multicast built peer peer overlays 
infocom apr 
chawathe ratnasamy breslau lanham shenker 
making gnutella systems scalable 
proc 
acm sigcomm aug 
el brand haridi 
efficient broadcast structured networks 
iptps feb 
ganesan sun garcia molina 
peer peer lookup service arbitrary topology 
infocom apr 
lv ratnasamy shenker 
heterogeneity gnutella scalable 
proc 
iptps cambridge ma usa feb 
mahajan castro rowstron 
controlling cost reliability peer peer overlays 
iptps feb 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proc 
acm sigcomm san diego ca aug 
ratnasamy handley karp shenker 
application level multicast content addressable networks 
ngc nov 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
proc 
ifip acm middleware heidelberg germany nov 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
mmcn jan 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm san diego ca aug 
zegura calvert bhattacharjee 
model internetwork 
infocom 
zhao kubiatowicz joseph 
tapestry infrastructure fault resilient wide area location routing 
technical report ucb csd berkeley april 
