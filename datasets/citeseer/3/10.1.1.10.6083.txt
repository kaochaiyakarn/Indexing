simulation validation direct execution wireless ad hoc routing protocols jason liu yuan david nicol robert gray calvin newport david kotz luiz felipe perrone coordinated science laboratory university illinois urbana champaign west main street urbana il nicol crhc uiuc edu department computer science dartmouth college sudikoff laboratory hanover nh robert gray calvin newport dartmouth edu cs dartmouth edu department computer science university pa perrone edu computer simulation common approach studying wireless ad hoc routing algorithms 
results models simulation uses 
underestimate importance validation inaccurate models lead wrong 
direct execution simulation validate radio models ad hoc routing protocols real world experiments 
documents common testbed supports direct execution set ad hoc routing protocol implementations wireless network simulator 
testbed reads traces generated real experiments uses drive direct execution implementations routing protocols 
doing reproduce network conditions real experiments 
comparing routing behavior measured real experiments behavior computed simulation able validate models radio behavior protocol behavior depends 
conclude possible fairly accurate results simple radio model supported part dartmouth center mobile computing darpa contract department justice contract cx department defense muri afosr contract 
points view document authors necessarily represent official position darpa united states government 
government retains non exclusive royalty free license publish reproduce published form allow government purposes 
routing behavior quite sensitive model parameters 
implication complex radio model explicitly models point point path loss ii measurements environment typical interest iii study behavior range environments identify sensitivities 

simulation take precaution model may reflect reality 
validation wireless network simulation particularly difficult implementation simulated protocol validated design specifications model able capture lower level characteristics wireless environment proper level abstraction :10.1.1.25.2380
validation problem amplified routing protocol deployed real system implemented maintained separate code base simulation 
direct execution simulation alleviates problem maintaining separate code bases routing protocol executing code designed real systems directly inside wireless network simulator 
compile routing protocol source code simulator source code moderate changes necessary 
protocol logic executed inside simulator driven simulator time advancing mechanism 
simulation routing protocol code invoked result simulator processing events stored event queue 
protocol instance communicates simulated mobile stations sending receiving packets defined system calls substitute system calls calls simulator 
packets redirected go simulated wireless network transparent protocol implementation 
direct execution simulation desirable prototyping protocol implementation initial simulation evaluation deployed directly real network 
interest direct execution simulation help validate wireless network simulator results real experiments 
run routing protocol application traffic generator code simulation real experiment 
difference real experiment packets transmitted wireless channel subject delays losses due signal fading collisions transmission 
simulation packets translated simulation events scheduled delays calculated radio channel model 
depending modeling details simulation result may may reflect happen reality 
direct execution simulation provides valuable opportunity investigate effect details wireless network model fidelity simulation study 
documents effort supporting direct execution set wireless ad hoc routing protocol implementations direct execution simulation validate underlying wireless network models comparing results real world experiments 
ported routing protocol implementations direct execution aprl aodv gpsr odmrp stara 
versions protocols implemented part project goal provide information access wireless network soldiers field 
contribution research provide common testbed direct execution protocols simulation 
importantly instrumented testbed enable validation various wireless network models 
embedded routing protocol code various logging functions 
laptop computer running routing protocols real experiment global positioning system gps device periodically records location information average receiving signal quality laptops 
transformed logs traces node mobility radio connectivity 
adapted simulator read traces combined different stochastic radio propagation models reproduce test scenario inside simulation 
compared results running routing protocols simulation collected real thayer dartmouth edu 
experiment 
comparison helps understand effect different wireless network models behavior ad hoc routing algorithms 
set experiments 
compares implementations aodv routing protocol running simulation 
aodv implementation specifically designed simulator protocol sends receives packets schedules timeouts special functions provided simulator 
aodv implementation developed project designed real network directly executed simulator 
goal experiment validate protocol implementations identify overhead introduced direct execution simulation terms memory usage execution time 
second set experiments compares results real field test simulation 
real experiment ran routing protocols laptop computers equipped wireless device gps unit 
laptops carried people walking randomly large field 
simulation applied different radio propagation models traces derived real experiment 
directly executed routing protocol implementations simulation compared behavior protocols environments 
goal study highlight importance modeling decisions validity wireless simulation study 
organized follows 
section provides overview implementations routing protocols outlines architecture wireless network simulator directly execute protocol implementations 
section briefly describe issues related direct execution simulation 
section presents augmented simulation testbed designed validation purposes 
focus experiments results section 
section concludes 

background 
routing protocols ported protocols direct execution 
path routing loops aprl proactive routing protocol 
sequence numbers aprl uses ping messages establishing new routes guarantee loop free operation 
adhoc demand vector aodv demand routing algorithm routes created needed connection establishment maintained deal link breakage 
greedy perimeter stateless routing gpsr uses gps positions mobile stations forward packets greedily path target physical location :10.1.1.112.2772:10.1.1.112.2772
gpsr uses perimeter algorithm ward packets boundaries empty regions contain laptops cause greedy forwarding fail 
demand multicast routing protocol odmrp maintains mesh tree alternate redundant routes multicast group :10.1.1.26.1920
depend unicast routing protocol fact unicast routing 
system traffic dependent adaptive routing algorithm stara uses shortest path routing :10.1.1.39.337
distance measure calculated mean transmission delay hop count 
implemented protocols project linux 
implementations perform routing user space ip tunneling udp sockets 
ip tunnel virtual network device endpoints regular network interface unix file 
packets sent network interface standard udp socket example read file authorized user process packets written file delivered kernel arrived network interface 
mobile station virtual ip address associated network interface tunnel physical ip address associated network interface physical wireless device 
application communicates virtual ip addresses 
kernel ip routing table mobile station configured forward packets virtual destination addresses ip tunnel device 
source transmission packet sent application forwarded ip tunnel routing protocol reading device file 
routing protocol converts virtual addresses physical addresses selects hop forward packet routing table 
packets forwarded neighbors udp sockets physical wireless network device 
packet reaches destination physical addresses translated back virtual addresses routing protocol writes packets device file represents ip tunnel deliver packet application virtual network interface 

wireless network simulator developed high performance simulator called swan integrated flexible configurable environment evaluating different wireless ad hoc routing protocols especially large network scenarios 
swan built parallel discrete event simulator called proved successful simulating large scale wired networks 
ported implemented protocol models frequently wireless ad hoc network 
protocol models readily assembled protocol stack simulated mobile station 
www cs dartmouth edu research 
swan dynamically configure protocol underlying wireless network specially designed configuration language 
study effect various radio signal propagation models behavior routing algorithms simulation 
particular examine simple frequently stochastic radio propagation models free space model ray ground reflection model generic propagation model 
model assumes ideal radio propagation condition signals travel vacuum space obstacles 
power loss proportional square distance transmitter receiver 
ray ground reflection model adds ground reflection path transmitter receiver 
model accurate free space model distance large significant difference elevation mobile stations 
generic propagation model describes radio signal attenuation combination effects small scale fading large scale fading 
small scale fading captures characteristic rapid fluctuation signal power short period time small change node position result primarily due existence multiple paths signals travel 
classic models predict small scale fading effect include rayleigh distributions 
large scale fading caused environmental scattering signals divided components distance path loss average signal power loss function distance proportional distance raised specified exponent shadow fading effect describes variations signal receiving power measured decibels modeled log normal distribution 
readers refer textbook wireless communications rappaport book detailed discussion radio propagation models 

direct execution simulation multiple instances routing protocol run simultaneously driven event queue 
conceivably routing protocol run separate process interact simulation kernel inter process communication mechanisms 
need substitute system calls related communications sending receiving packets time querying current wall clock time potentially blocking user process causing noticeable delays calls simulator 
replacement done link time compilation 
major attraction approach source code modification necessary 
drawback lies complexity potential overhead introduced inter process communication 
chose easier faster approach allows multiple instances routing protocol execute address space 
method involved moderate modifications source code 
similar approaches literature 
ported routing protocols related programs application traffic generator real experiment 
number lines changed accounts changes related creating configuring routing protocols individually simulated mobile station separated protocol control flow 

encapsulations modified protocol code slightly allow multiple instances routing protocol run simultaneously inside simulator 
instances executed address space need provide wrappers instances identified separated execution environment 
created protocol session object represent routing protocol instance simulator 
protocol interaction operating system system calls sending receiving packets replaced method invocations protocol session 
methods redirect calls simulator 
replaced global variables data objects specific routing protocol instance member data protocol session 
replaced original main function routing protocol implementations method protocol session configures initializes instance 

communications routing protocol implementations system calls communications sending messages udp sockets 
mentioned earlier replaced system routines supplied simulator 
replacing manually places source code provided base class contains methods names system routines parameters 
way classes protocol implementations default call methods base class 
base class contains protocol session represents routing protocol instance 
methods base class forward control protocol session passes messages simulated protocol stack 
added support simulator udp sockets 
udp protocol session manages udp sockets top ip layer primary function multiplex demultiplex udp datagrams 
replaced system calls related udp sockets socket bind sendto recvfrom methods interact udp protocol session 
implemented ip tunnel device simulator 
device treated network interface ip layer protocol stack 
packets sent application virtual destination addresses udp sockets diverted tunnel device ip layer 
routing algorithm accesses ip tunnel regular file descriptor 
replaced file access functions specifically open read write close distinguish file descriptor tunnel device regular files 
replace operations regular files directly executed code logging purposes 

timings routing protocols executed inside simulator driven simulation time real time means deal time sensitive system calls carefully 
returns wall clock time mobile station call simulator querying current simulation time 
causes running process blocked specified set file descriptors ready reading writing timeout interval elapsed 
protocol implementations center event loop contains call select function 
control returns function timeouts incoming messages algorithm invokes corresponding event handlers process event 
bypassed event loop directly invoked event handlers timeout occurred message arrived protocol session 
aware ramifications lack cpu model wireless simulator 
simulator uses function invocations packets travel protocol stack advancing simulation time 
bears side effect carefully designed protocol model packet processing time simulated proper random delays may create problems directly executed protocol implementation pays special attention packet processing time 
simulation assume zero packet processing time behavior instances routing protocol synchronized simulation time 
time synchrony lead high probability packet loss due collisions radio channel 
deal problem introduced packet interface simulator directly executed code 
time message goes udp socket added random delay model time needed operating system processing packet 

support simulation validation section discuss support validate wireless simulation comparing results real experiment direct execution simulation 
validation simulations general wireless ad hoc network simulations particular focal point surrounding applicability simulation studies 
johnson suggested logging information running ad hoc routing algorithms real experiment simulate identical node movement communication scenarios 
takai studied effect wireless physical layer radio channel modeling performance evaluation ad hoc routing algorithms 
research uses real experiments base comparison 
particular ran routing protocol implementations applications traffic generator directly simulator 
derived mobility radio connectivity traces real experiment combined stochastic propagation model attempt recreate real network conditions simulation 
compared results real experiment assess validity radio propagation model 
routing protocol implementations embedded sophisticated logging mechanism shown 
routing protocol runs generates event log includes types events related routing algorithm sending receiving control message 
event log analyzing performance routing algorithm debugging 
instrumented traffic generator logging functions record packet sent received 
application log calculate application level statistics packet delivery rate delay 
traffic generator executed directly simulator read log recreate exact traffic behavior 
real experiment ran third program called service module routing protocol application traffic generator 
program periodically queried attached gps device mobile station log current position 
program periodically record link quality information 
allows user set list network addresses 
wireless device driver gathers link quality information signal ratio snr packet received addresses laptop 
service module collected link quality information averaged sampling interval 
periodically broadcasted beacon messages contain position information known mobile stations 
original applications keep soldier field updated positions soldiers 
recorded routing traffic protocol generator routing application event log log routing traffic protocol generator mobile node position log beacon log mobility trace service module service module mobile node real experiment signal quality log connectivity trace simulation 
logs generated compared validating simulation results 
beacon messages refresh link quality information 
simulation routing protocols running directly inside simulator application traffic generator service module 
chose directly execute service model need reproduce beacon messages effect mac phy states wireless network 
processed position log real experiment produce mobility trace shows mobile station moved experiment 
addition generated node connectivity trace beacon logs recorded mobile stations real experiment 
mobility trace states mobile stations receive packet mobile station wireless channel time 
beacon log contains times beacon messages mobile stations received 
receiving beacon successfully indicates link sender receiver missing consecutive beacons indicates receiver may transmission range sender 
signal quality log recorded series averaged signal noise ratios packets received mobile station stations network 
include signal quality log study 
currently investigating log reconstruct connectivity network may provide better alternative beacon log 
radio connectivity trace baseline determine mobile stations directly communicate 
connectivity information capture state interference collisions happen due presence hidden terminals example node hear node node situated side node talk vice versa distance possible node faithfully receive packet node transmitting packet node mac layer protocol packet transmissions radio medium allocates radio channel transmission totally prevent collisions 
case simulator interference model simulate happen packets arrive receiver packets accepted receiving power significantly higher packets lost due interference 
interference model relies receiving signal power determine packet receptions need radio propagation model simulate signal power attenuation 

performance validation studies conducted experiments validation comparing direct execution simulation aodv protocol implementation aodv protocol model implemented natively simulator comparing real experiment simulated wireless network 

aodv vs aodv experiment compared direct execution aodv protocol implementation aodv protocol model implemented natively swan 
ran protocol implementations simulation simulated network conditions application traffic pattern radio propagation model 
goal validate protocol implementations determine overhead direct execution simulation requires 
simulation experiment tested network mobile stations chose mobile stations traffic sources 
deployed mobile stations square area sized mobile station neighbors average meters dimension respectively 
random way point node mobility model node moves randomly selected point area speed chosen uniformly meters reaching point pauses seconds selecting point move 
chose ieee protocol mac phy layer standard parameters ieee specification mb bandwidth generic radio propagation model exponent shadow fading log normal standard deviation db compute radio signal power attenuation 
simple application traffic generator source periodically sends packet kb size randomly selected peer exponentially distributed inter arrival time 
behaviors implementations differed slightly owing variations treatment aodv specifications 
addition aodv protocol ran user space ip tunneling udp sockets swan aodv ran directly top ip 
messages application traffic generator delivered aodv protocol ip tunnel wrapped udp ip headers 
data control messages aodv augmented udp headers udp sockets 
varying traffic load packet ratio total number packets received application layer divided total number packets sent differed slightly implementation 
similarity behavior implementations ensures implementations assess cost direct execution meaningful 
figures show difference total execution time peak memory usage implementations aodv protocol 
clearly aodv direct execution implementation requires computational resources marginally 
greatest increase execution time larger network size heavier traffic load 
increased execution time caused overhead copying serialization real packets 
memory overhead aodv significant 
attribute additional data structures direct execution protocol session ip tunnel device udp socket layer proportional number simulated mobile stations 
simulation directly executed routing protocol application send receive real packets real message headers real payloads 
overhead grows increasing traffic intensity packets stay longer wireless network due contentions 
direct execution simulation requires computational resources especially memory usage 
benefit directly executing routing protocol implementation simulation assurance protocol implementation exhibits behavior real network 
routing protocol model implemented natively simulator may benefit computational optimizations actual message headers payloads 
protocol model validated situations resource requirement critical simulation large scale wireless network 
hand extra costs direct execution onerous technique means execution time seconds nodes aodv nodes swan aodv nodes aodv nodes swan aodv nodes aodv nodes swan traffic intensity packets second 
simulation time aodv implementations varying traffic load log scale 
peak memory usage mb nodes aodv nodes swan aodv nodes aodv nodes swan aodv nodes aodv nodes swan traffic intensity packets second 
peak memory usage aodv implementations varying traffic load log scale 
tation 
obvious advantages maintaining common code base protocol actual implementation study behavior simulator 

simulation vs reality second step validation compared results outdoor routing experiment simulation results 
particular compared results real experiment simulation results different radio propagation models 
purpose study reveal sensitivity performance routing protocols underlying wireless models 
real experiment outdoor routing experiment took place rectangular athletic field measuring approximately feet meters 
laptop computers experiment lucent orinoco wireless card operating peer peer mode mb laptop gps unit attached serial port 
gps units differential gps capabilities accurate meters experiment 
particular outdoor experiment included aprl aodv odmrp stara gpsr development 
laptops clocks set time reported gps unit automatically ran routing algorithm minutes minutes network quiescence algorithm handle cleanup setup chores 
routing algorithm running minute providing time reach initial stable routing configuration laptops automatically started traffic generator generated streams udp packets 
number packets stream gaussian distributed mean standard deviation time streams exponentially distributed mean seconds time packets inside stream exponentially distributed mean seconds packet contained approximately data bytes target laptop stream uniformly randomly selected laptops 
chose numerical parameters approximate moderate traffic volume observed earlier demonstration military application 
routing algorithm parameters beacon interval aprl forwarding group lifetime odmrp set standard values taken literature experience 
course experiment laptops continuously moving 
athletic field divided equal sized quadrants approximately feet lower elevation rest field 
hills higher lower elevation steep short obstruct wireless signal increasing frequency routing algorithms needed find multi hop route 
start experiment participants divided equal sized groups instructed randomly quadrants 
participants walked continuously picking quadrant different currently located picking random position quadrant walking position straight line repeating 
approach chosen simple provide continuous movement routing algorithms react similar laptop distributions routing algorithms 
laptop recorded extensive logs described section 
experiment discovered laptops failed generate data routing traffic due misconfiguration hardware problems 
experiment practice reduced laptop experiment logs laptops starting point comparing real world simulated results 
simulation processed logs real experiments derive mobility radio connectivity traces laptop duration running routing algorithm 
ran simulation algorithm designated period 
directly ran routing protocol service module simulated mobile station 
modified application traffic generator read application log generate packets real experiment 
focused laptops transmitted received forwarded packets real experiments 
reproduce traffic pattern simulation application traffic generator nodes included crashed nodes potential packet destinations 
mobile stations simulation followed mobility trace generated real experiment 
examined radio propagation models free space model ray ground reflection model generic propagation model 
simulator delivered transmitted packet neighbor stations receive packet average signal power minimum threshold 
propagation models determine power loss packet transmission calculate signal noise ratio quantify state interference receiver packet arrived mobile station received successfully dropped due significant power loss collisions 
combined models connectivity trace derived beacon logs leading different radio propagation models simulation connectivity traces 
cases connectivity trace determine packet mobile station reach mobile station radio propagation models determine receiving power interference calculation 
comparison models measured connectivity give means determining model contains accurate predictive power connectivity 
results examine packet delivery ratio 
shows packet delivery ratio real experiment simulation runs radio propagation models packet delivery ratios real experiment simulation lower expected packets unknown destinations delivered 
packet delivery ratio real experiment generic model connectivity free space connectivity ray connectivity generic model connectivity free space connectivity ray connectivity aodv aprl odmrp stara 
comparing data delivery ratio real experiment various radio propagation models 
connectivity means connectivity trace 
connectivity trace derived real experiment determine reachability signals 
simulation result average runs variance insignificant shown 
generic propagation model experiment typical parameters describe outdoor environment real experiment path loss exponent db standard deviation shadow fading 
simple generic propagation model offered acceptable prediction performance routing algorithms different propagation models predicted vastly different protocol behaviors 
difference significant cases result misleading example comparing performance aodv odmrp 
inaccuracy model prediction introduced propagation model non uniform undermine performance comparison study different protocols 
aodv aprl stara shows large exaggeration packet delivery ratio model ray ground reflection model 
models overestimated transmission range radio signals causing shorter routes better packet delivery ratio 
connectivity trace models overestimated signal quality failing capture lossy characteristic radio propagation environment 
performance odmrp underestimated simulation 
odmrp multicast routing algorithm delivers packets multiple paths destinations 
higher demand network bandwidth 
overestimated transmission range signal quality ray models caused contentions created negative effect simulated throughput 
packet delivery ratio reflect entire ex fraction total data packets transit real experiment generic model connectivity free space connectivity ray connectivity generic model connectivity free space connectivity ray connectivity hop count 
hop count histogram aodv real experiment simulation 
ecution environment routing algorithm 
shows histogram number hops data packet traversed aodv reached destination dropped path 
example hop count zero means packet dropped source node hop count means packet went hop destination source neighbor packet failed reach hop 
shows fraction data packets traveled number hops 
see clearly free space ray models resulted fewer hops transmission range 
see connectivity trace helpful predicting route lengths confirms problem free space ray models connectivity trace consider packet losses due variations receiving signal power 
generic propagation model typical parameters represent outdoor test environment offered relatively prediction performance routing algorithms 
carefully choose correct parameters reflect wireless environment 
exponent distance path loss standard deviation log normal distribution shadow fading heavily dependent environment investigation 
experiment ran simulation number mobile stations traffic load real experiment 
shows aodv performance packet delivery ratio network setting varying path loss exponent shadow log normal standard deviation 
aodv behavior sensitive path loss exponent shadow standard deviation 
signal propagation distance stronger effect algorithm performance 
shorter transmission range means packets travel hops longer routes reaching destination higher packet delivery ratio shadow stdev path loss exponent 
sensitivity aodv performance parameters large scale fading model 
probability dropped 
larger shadow standard deviation caused links unstable effect varied 
hand path loss exponent small signals long transmission range small variation receiving signal strength significant effect routing causing infrequent link breakage 
hand exponent large nodes disconnected 
variation receiving signal power helped establish routes impossible signal power fluctuation 
extremes larger variation link quality generally caused transmission failures resulted slightly lower packet delivery ratio 
critical implication sensitivity study just grab set large scale fading parameters expect meaningful results specific environment interest 
hand pre simulation empirical estimate path loss characteristics called point experiment quantify behavior environment 
alternatively may require complex radio models ray tracing include complex explicit representations domain interest 
hand objective compare protocols knowledge generic propagation model lets compare protocols range path loss values 
quantify behavior may allow qualitative protocols range environments 
summarize simple stochastic radio propagation models traces generated carefully designed real experiment 
direct execution simulation provided common baseline comparing behavior routing protocols real experiment simulation 
critical choose proper wireless model reflects real world scenario studying performance ad hoc routing algorithms 
contrast earlier studies simple stochastic radio propagation model parameters typical outdoor environment produce acceptable results 
recognize results sensitive parameters 
reason caution drawn simulation studies simple propagation models apply environment represent 
free space model ray model exaggerate radio transmission range ignore variations receiving signal power largely network conditions 

reports effort support direct execution simulation set wireless ad hoc routing protocols facilitate validation wireless network models 
experiment compared implementations aodv protocol direct execution implemented natively simulator 
direct execution simulation requires computational resources especially memory usage making modeled protocol attractive resource constrained situation studying protocol behaviors large network environment 
cpu overhead direct execution moderate case keep simulation valuable means experimentation obvious advantage maintaining consistency protocol actual implementation simulation 
conducted real experiment running protocols laptop computers outdoor environment 
embedded sophisticated logging mechanism protocol implementations 
activities related routing algorithms applications recorded files 
post processing files results traces simulation reproduce network condition 
simple stochastic radio propagation model predict behavior routing protocols fairly accuracy results quite sensitive model parameters 
argue choosing proper wireless model represents wireless environment interest critical performance evaluation routing algorithms 
includes analysis validate different wireless models different real experimental conditions 
currently investigating link quality information collected wireless device driver improve accuracy connectivity trace 
want translate terrain information real experiment radio propagation gain matrix realistic representation wireless environment study effect modeling details performance evaluation wireless ad hoc routing protocols 

acknowledgments aaron chris michael implementing routing algorithms outdoor experiment infrastructure 
gupta brad karp helped source code stara aprl 
dennis mcgrath helped initial class structure routing algorithms 
chip elliott bbn valuable insights suggestions 
lisa susan mcgrath designing application scenario dartmouth students staff members participated outdoor experiments 
riley 
creating realistic bgp models 
mascots october 
gupta kumar :10.1.1.39.337
system traffic dependent adaptive routing algorithm ad hoc networks 
th ieee conference decision control pages december 
heidemann bulusu elson intanagonwiwat lan xu ye estrin govindan :10.1.1.25.2380
effects details wireless network simulation 
scs multiconference distributed simulation pages january 
johnson 
validation wireless mobile network models simulation 
darpa nist network simulation validation workshop may 
karp kung 
dynamic neighbor discovery multi hop routing wireless mobile networks 
university may 
karp kung :10.1.1.112.2772
greedy perimeter stateless routing wireless networks 
mobicom pages august 
lee gerla chiang :10.1.1.26.1920
demand multicast routing protocol multihop wireless mobile networks 
mobile networks applications december 
liu perrone nicol elliott pearson 
simulation modeling large scale adhoc sensor networks 
european simulation interoperability workshop euro june 
neufeld jain grunwald 
bridging network simulation deployment 
pages september 
perkins royer 
ad hoc demand distance vector routing 
nd ieee workshop mobile computing systems applications pages february 
rappaport 
wireless communications principles practice 
prentice hall 
takai bagrodia tang gerla 
efficient wireless network simulations detailed propagation models 
wireless networks may 
takai martin bagrodia 
effects wireless physical layer modeling mobile ad hoc networks 
mobi hoc pages october 
