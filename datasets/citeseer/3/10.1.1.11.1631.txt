minds agent oriented information system applications education leen liu zhang hong jiang vemuri department computer science engineering university nebraska lincoln ne usa describe intelligent multiagent infrastructure distributed systems education minds framework applies agent oriented information system education purposes 
design employs distributed computing principles java object passing interface distributed shared object model facilitate cooperation agents data gathering information dissemination making infrastructure portable expandable secure 
motivations help teachers teach better students learn better 
teacher help teacher agent able address important questions survey profile student automatically maintained teacher agent 
student help student agent able collaborate students having form buddies group 
agents collaborative multiagent system minds framework able manage process share information intelligently 
keywords multiagent systems computer aided education distributed shared object 
information technology rapidly changing educational process enhancing way information knowledge represented delivered students 
advent internet multimedia technology meant potentially drastic change teaching learning process traditional classroom setting geographically distributed virtual interactive 
describe develop agent oriented information infrastructure supports different high performance distributed applications heterogeneous systems computer aided jiang cse unl edu collaborative learning teaching environment 
infrastructure called intelligent multiagent infrastructure distributed systems education minds seamlessly combines intelligent multiagent model application level software agent distributed computing model hardware level provide functionalities essential educational process real time offline data information gathering analysis dissemination embedded feedback assessment collaboration 
low level distributed computing paradigms build infrastructure supports fast asynchronous concurrent information processing 
high level employ methodologies intelligent agents multiagent systems develop software decision makers monitors 
framework unified approach support teaching learning low level enabling technology high level cognitive activities 
long term goals fold developing agent distributed computing infrastructure specifically education addressing interaction issues real time classroom scenarios distance learning developing intelligent multiagent information system built atop infrastructure developed able monitor activities recognize patterns interact students instructors alike improve quality teaching learning 
objectives include real time data gathering information dissemination decision making classroom setting utilizing advancements hardware software 
intelligent agents autonomous operate robustly rapidly changing unpredictable open environments 
intelligent agents serving catering students unique needs behaviors students able participate virtual classroom actively listening lectures passively traditional virtual classroom 
agent education systems software agents fully utilizing power intelligence agent oriented information systems reactivity pro activeness social ability 
agent education systems simply group non collaborative individual agents 
goal exploit multiagent system intelligence help transfer information helping teachers teach better students learn better 
secure distributed information sdi laboratory university nebraska focused research areas distributed computation 
minds incorporated research products sdi 
employ java object passing interface transfer messages agents 
interface allows objects encapsulated transferred efficiently 
second adhere distributed shared object dso model 
model allows maintain coherence consistency shared objects distributed collaborative environment 
supported technologies able enhance application agent oriented system collecting managing sharing analyzing data information real time dynamic environment 
addition coupled multimedia technology able design infrastructure deals video audio images text variety information sources 
proposed framework unique innovative approach computer aided education intend build enabling infrastructure human factors incorporated conveniently framework lessen eliminate weaknesses current tutoring systems multiagent systems education 
furthermore low level agent distributed processing system employs dso facilitate cooperation agents data gathering information dissemination making infrastructure portable expandable secure 
dso provide efficient seamless interface high level cognitive activities low level enabling technology 
addition utilizing java provides machine independent system seamlessly multiple heterogeneous platforms 
motivations learning immediate responsive teaching immediate adaptive knowledge transfer teachers students students teachers effective distributed collaborative real time classroom environment 
outline rest follows 
section provide related areas computer aided education systems 
describe methodology minds agent oriented information system 
subsequently design minds detail implementation section 
conclude 

related general approaches applying agentbased technology education individual intelligent agents tutors group agents multiagent system environment 
objective approach act assistive software teacher helper students tutor 
example intelligent tutoring systems algebra geometry computer languages pact physics andes electronics sherlock achieved level success classrooms 
criticisms current state tutoring systems stem lack sufficient intelligence tutoring system necessary monitor detect student pedagogical behavior 
students may simply keep guessing find action gets positive feedback learn right thing wrong reasons tutoring system detect shallow learning 
objective second approach provide com puting environment multiple agents interact exchange information students instructors may collaborate best transfer knowledge 
position www workshop teaching learning www learning past santa clara ca april schneider discussed main areas related approach education virtual campuses dynamic worlds learning teaching advanced learning environments internet 
issues areas include multi user worlds simulation accessibility web teaching data analysis 
agent approach create virtual libraries students share different resources 
key component missing today multiagent systems education enable system utilize analyze observed behavior collected individual agents subsequently adapt behavior 
multiagent education systems handle deal data information agents 
addition synchronous virtual classrooms developed 
iri designed function heterogeneous network environment offers audio video tool sharing services 
support class participants limited multicast capabilities limited connectivity bandwidth providing scalable infrastructure 
commercial products symposium features structured live interaction asynchronous learning rich content support low bandwidth requirement enterprise class management scalability easy deployed 
learning solution offers mentoring sessions delivers live classes holds collaborative learning sessions able populate knowledge repository demand learning objects 
classroom allows students share notes instructor real time students able add individual comments notes saved reviewed offline 
minds design possesses features 
framework uses agent oriented mechanisms better exploit features utilize information 

methodology shows logical overview minds framework 
hardware level participating machines cluster servers provide computing power multiagent system computing devices laptops desktops pdas instructors students 
agent layer provides seamless interface participating machines 
distributed shared object model interface api developing applications visible user 
applications utilize interface provide user virtual unified environment educational system 
software agents reside participating machines potentially different platforms connected network providing necessary functionality support multiagent applications 
allows object oriented treatment messages agent behavior adding flexibility scalability system 
distributed computing infrastructure agent infrastructure backbone pro teacher agent student agent distant student agent student agent 
agent centric facilities real time component line assessment component evaluation component instruction learning component pedagogical component data fusion component distributed shared object agent infrastructure network student agent group agent server pc 
distant teacher agent student agent logical overview minds framework posed framework 
infrastructure pure java system distributed memory model 
number components collectively provide services high performance educational applications clusters heterogeneous systems 
level infrastructure provide applications seamless access different resources available distributed environment 
infrastructure provide automatic application deployment support information exchange form objects 
allow multiple users students instructors easily access exchange information 
distributed shared object model available infrastructure simplify communication information exchange 
maintain portability pure java implementation agents decided mechanisms provided standard java communication system components 
identified set components distributed computing infrastructure real time line distributed assessment evaluation instruction learning pedagogical data fusion components 
components require agent perform associated tasks require multiple agents provide application support 
briefly real time component deals immediate responsive requirements agents 
line component allows teacher agent review quality previous lecture trends series previous lectures 
assessment component assesses students performance evaluation component evaluates teachers performance 
instruction learning components lend support domain specific advice suggestions individualized performance lecture supplements 
pedagogical component looks behavior agents associates patterns known pedagogical behaviors 
essence components form toolkit agents access obtain information 
multiagent system multiagent system variety agents student agents teacher agents remote counterparts group agents 
student agent input student monitors student activity updates teacher instructions student notebook reports student information teacher demand 
teacher agent collects input student agents monitors teacher activity corresponding students behavior performs wide range data analyses students input sorting filtering pattern recognition provides decision making support teacher 
decision making activities include data collection analysis information dissemination strategic planning adapts observed classroom behavior patterns 
agents distributed different participants students instructors location scattered metropolitan wide area network 
remote agent needs take account network bandwidth information volume communication delay ensure seamless participation classroom system 
addition remote agents may classroom additional features video audio streaming useful 
general remote agents tighter time constraints require richer set features 
group agent special student agent allows group students register individual student agents 
group agent set group specific heuristics guide activity monitoring data collection analysis information dissemination behavior group 
briefly agent set functionalities communication data processing user interface user registration real time monitoring housekeeping 
communication allows agent access remote services achieved standard java socket programming 
data processing function includes text parsing object modeling audio video parsing 
user interface allows student teacher access agent software 
user registration mechanism required register student agents teacher agent help monitoring housekeeping tasks 
high throughput agent designed multi threaded able carry multiple concurrent tasks 
increases autonomy responsiveness agents 
distributed shared object dso choose underlying language platform provides portability security flexibility resource management 
provides default security manager provide level protection system resources 
security manager set application infrastructure component operations checked defined security policy executed 
proposed prototype different security modes mapped policies required particular application 
case possible different access control levels different participating groups instructors students 
important reason adding security measures provide safe utilization hardware software resources provide protection privacy participants system 
dso model currently built provides consistent platform data coherence address integrity system related parameters maintained specifically multiagent environments 
capability allows concentrate entirely development multiagent system having worry low level computing infrastructure supports community agents 
distributed shared object model allow information procedures passed objects agents 
brings forth benefits areas design implementation system extension monitoring system 
words distributed shared object model enabling technologies rapid prototyping development multiagent systems 
agent computing addition high level conveniences autonomy learning reasoning capabilities utilization agent computing enhances distributed computing environment 
agents provides needed functionality system fully portable due communicative ability degree autonomy 
agents provide system flexibility expand hardware easily 
activating agent machine part system user jobs execute 
process transparent user require changes application uses system 
user able access utilize resources agents access regardless location hardware architecture operating environment 
leads ability easily increase number participants system 
agent monitors states predicate instances applications infrastructure making design process system eventual usage applications flexible 

design logical infrastructure represents logical infrastructure minds 
network underlying fundamental communication environment serves level 
system level protocols encapsulations equip second level provide convenient communication deployment functions upper levels 
facilitate communication programming dso provided third level 
agents located levels 
agent interacting modules content independent 
content independent module provides definitions processes education related general services content dependent module handles specific course related knowledge base heuristics data 
design allows system highly flexible 
minds developed java high portability able heterogeneous environments 
topological structure considering remote students respective student agents may access internet dial slow access speed multi cast may prohibited network configurations design topological structure minds shown 
shows topological structure minds 
top manager system information system courses provided currently ongoing classes static dynamic content dependent module content independent module dso system level agent centric facilities network logical infrastructure minds agent student student manager instructor instructor instructor 
remote proxy server student remote proxy server student student student student student 
topological infrastructure minds multiagent system example 
instructor student associated agent formation 
instructors located second level give lectures 
students remote proxy servers third level serve bridges teachers students low speed access multicast prohibited network 
function remote proxy server similar gateways 
students accessing virtual classroom nearest remote proxy servers indirectly student denoted dotted lines 
implementation section implementation manager teacher agent student agent remote proxy server separately includes hardware environment minds functionalities agents functions provided minds 
improve stability minds mature fundamental technology possible 
example jmf package provided sun microsystems implement broadcast video audio dso handle communication agents 
manager module agent centric facilities manages course registration students student agents login logout teachers ip addresses listening ports teacher agents ip addresses proxy servers system 
teacher site teaching environment teacher site devices 
implementation minds mouse create convenient teaching environment teachers 
input device consists capture bar stylus scratched teacher whiteboard captured digitized automatically fed computer connected mouse 
projector overlay lecture slides whiteboard 
teacher able write whiteboard stylus 
software superimposed lecture slides writing synchronizing physical coordinates whiteboard digital form stored computer 
fact handwritten text whiteboard overlaid projected whiteboard computer allowing minds handle offline real time data 
teacher site microphone capture audio video images teacher session 
teacher agent transmits data student agents 
lower bandwidth requirement teacher agent stream data continuously 
teacher agent captures movement stylus sends changes frames 
teacher agents shows structure teacher agent 
content dependent module exercises answers students questions asked students rules inference dynamic profiles students 
initial database rules exercises provided teachers educators 
teaching materials modified learning mechanism 
example rules evaluate quality questions changed utility 
evaluation mechanism evaluates students responses exercises monitored questions actions student agents 
profile teacher agent able cater student agent customized set exercises 
teacher agent maintains profile student 
profiles factor self learning activity 
repository mechanism included cache sizable teaching materials large storage devices efficient transmission 
aim support caching strategy profiled models student agents 
currently fully implemented teaching environment 
addition implemented interface modules part evaluation module 
implemented prototype student profiling module definition student profile 
response student respective student agent evaluated 
teacher agent presents ranked list questions content questions students teacher choose address 
questions picked teacher address lead higher quality students asked questions 
way teacher agent learns complement quality question quality student asked question 
addition content criteria teacher interface teacher site content dependent module exercises questions rules heuristics student profiles interface student agents content independence module self learning evaluation repository structure teacher agent agent uses heuristics student asked question rank current question high hand teacher agent profiles student agent frequency responses received agent average length type quality responses 
profile gives quality indicator student utilized formation buddies groups described subsection 
design utilizes principles agent oriented information systems 
agent student teacher information system collecting transferring processing data information 
teacher agent ranks student agents information receives 
realtime situation teacher able answer questions example asked lecture teacher agent ranks questions profile student agents content dependent heuristics essentially performing dynamic intelligent information filtering 
manner teacher agent able recommend questions important teacher answer class 
teacher selects question teaches teacher agent question important 
learning instruction translated modification quality indicator student agent submitted question leads information refinement 
student site learning environment interface teacher agent content dependent module interface students learning collaboration tracking content independence module interface student agents structure student agent student site application features student site application reception information multiple video shows actions teacher realtime content images whiteboard projection handwritten text audio carries teacher voice 
application transmit voice teacher agent 
application supports multiagent forum 
student choose join different forums communicate students lecture 
application manages stores notes student 
student notes directly lecture images save 
student agents depicts structure student agent 
receiving messages information streams teacher agent student agent display directly student 
similarly student agent forward responses student teacher agent directly 
tracking mechanism tracks activities study progress student 
example class student touch keyboard move mouse minutes student agent may play sound alert student concentrate class 
student missed class tracking mechanism may go corresponding teacher agent find archived materials class teacher provides remind student missed lectures 
agent collaboration mechanism activated student 
student asks question student agent sends teacher agent 
addition student agent chooses student agents known buddies student agent profiling buddies send question 
buddies may answer questions teacher respond class 
notes student agent forms buddies group automatically dynamically 
buddies responsive dropped buddies group buddies helpful approached frequently 
currently implemented interfaces collaboration module parts content dependent module learning module 
student agents able form buddies groups dynamically information shared student agents 
note information sharing activities student agents scene student users access shared information 
similar agent oriented design teacher site student agents individual information systems monitor respective students student agents interact teacher agent 
processes actions student receives teaching materials teacher agent 
profiles student agents learn quality indicators 
poorly ranked student agent matched highly ranked student agent example heuristics collaboration mechanism 
presents questions student student chooses ignore result receives responses automatically drops buddies group 
design employs agent intelligence observation realtime environment built heuristics form refine collaborative information teams 
remote proxy servers remote proxy servers responsible forwarding data information teacher agents targeted student agents limited internet connection speed multicast capability 
proxy server receives connection request agent spawns dedicated thread serve connection 
proxy server buffers processes data information relaying destination agents 
example may remove frames video transmission better adapt user connection speed 

minds framework applications education due real time capabilities agent approach real time class instructions instant data gathering information dissemination embedded feedback unified agent distributed computing virtual campus distance learning group learning real time student response monitoring performance evaluation assessment 
proposed infrastructure facilitate enhance educational process distributed environment 
example possible support virtual classroom students attend class interact real time instructors students pc home 
plan perform types impact analyses system level agent level 
system level want test real time overload server see system responds various student response behaviors classroom setting 
measure responsiveness suitability system 
want investigate time delay factor data volume factor example exchange video messages may slow system 
plan study distance learning synchronized incorporated seamlessly class teaching learning 
want analyze participation remote students class responding lecture participation distant students class students part group 
want test scalability reactiveness system 
example remote teacher multiple students send information data remote node 
distributed computing infrastructure handle scenario 
basically system level objective find distributed computing paradigm improves real time computer aided teaching learning dynamic classroom setting 
agent level want see various agents able carry tasks 
want investigate teacher able exploit responsiveness teacher agent data collection analysis information dissemination 
similarly interested activities student agents 
plan outline key monitoring statistics data volume response time student collaborative activities number objects exchanged consensus achieved students instructions importantly information managed filtered exchanged analyzed 
agent keeps record behavior including interactions user wide range flexibility experiments determine impact intelligent agents multiagent system system non helpful agents autonomous ones non communicative agents peer peer ones 
basically agent level objective determine agentbased methodologies facilitate accurate effective efficient data information knowledge transfer classroom setting 
built minds prototype successfully demonstrated system realtime teacher agent delivering lecture power point slides online web pages student agents audio video image text exchanged 
built manager teacher site teaching environment modules teacher agent student site learning environment application modules student agent 
mentioned addressed issues bandwidth resolution implemented synchronized transmission video audio data 
currently building remote proxy server embedding executable objects teaching materials 
conclude described minds framework applies agent oriented information system education 
system enables teachers teach better students learn better 
teacher help teacher agent able address important questions survey profile student automatically maintained teacher agent 
student help student agent able collaborate students having form buddies group 
student agent able find compatible buddies profiling student agents able refine buddies group realtime observation student agents group 
agents collaborative multiagent system minds able manage process share information intelligently compared conventional information systems 

acknowledgments partially supported seed national center information technology education national science foundation eps 

symposium 
www com products symposium info asp 
learning solution 
www com solutions elearning asp 
jmf homepage 
java sun com products java media jmf 
classroom 
www com meet classroom 
mouse 
www com software index shtml 
abdel hamid abdel 
software architecture interactive remote instruction system heterogeneous network environments 
proceedings 
sixth ieee symposium computers communications pages 
mohamed jiang swanson 
agent parallel computing java proof concept 
technical report tr unl cse 
mohamed jiang swanson 
comparative study parallel distributed java projects heterogeneous systems 
workshop java parallel distributed computing ipdps 
koedinger cross 
tutoring answer explanation fosters learning understanding 
artificial intelligence education pages 

andes coached problem solving environment physics 
intelligent tutoring systems th int 
conf pages 
graesser vanlehn ros jordan harter 
intelligent tutoring systems conversational dialogue 
ai magazine 

virtual laboratory agent resource sharing system 
th international conference exhibition tools pages 
koedinger anderson hadley mark 
intelligent tutoring goes school big city 
international journal artificial intelligence education 
lesgold 
sherlock coached practice environment electronics troubleshooting job 
computer assisted instruction intelligent tutoring systems pages 
vanlehn 
conceptual metalearning coached problem solving 
proc 
rd intelligent tutoring systems conf pages 
wooldridge jennings 
intelligent agents theory practice 
knowledge engineering review 
ye churchill 
agent supported 
kluwer academic publishers 
