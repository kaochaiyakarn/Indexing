journal network systems management vol 
september adaptive policy framework network services management leonidas emil lupu morris sloman presents framework specifying policies management network services 
policy management subject considerable research proposed solutions restricted condition action rules conditions matched incoming traffic flows 
results static policy configurations manual intervention required cater configuration changes enable policy deployment 
framework supports automated policy deployment flexible event triggers permit dynamic policy configuration 
current research focuses rules low level device configuration significant challenges remain addressed order provide policy specification adaptation different abstraction layers provide tools services engineering policy driven systems 
particular focuses solutions dynamic adaptation policies response changes managed environment 
policy adaptation includes dynamically changing policy parameters reconfiguring policy objects 
access control network services discussed 
key words policy management management differentiated services service management adaptive management policy adaptation 

network services developing best effort packet forwarding services services provide quality service qos guarantees user 
approaches proposed providing qos services ip networks 
integrated services intserv uses resource reservation protocol rsvp provide flow qos support dynamically reserving resources routers 
differentiated services diffserv simpler alternative intserv rsvp 
qos information encoded type service tos byte ip header identify different classes service 
department computing imperial college london london united kingdom 
correspondence addressed queen gate sw bz london united kingdom 
mail doc ic ac uk plenum publishing lupu sloman service level agreements slas established service provider customers formally define expectations obligations exist business relationship 
slas defined multiple peer service providers cooperate provide service spans multiple administrative domains 
current approaches specifying service level agreements particularly network services concentrate specifying quality service parameters delay throughput error rates availability 
specification service essentially static assumes single type service provided times clients require services vary date time 
addition fallback classes services provided failure conditions main class service provided service adaptation may take place result failures network accommodate changes client application requirements 
example collaborative design application may switch audio phase phase needing video services client application able trigger changes underlying communication service 
service provider may provide sophisticated set services offered client organization consisting different users 
users client organization may need access offered services 
authorization part sla management system specify users permitted access particular services functions services 
information change lifetime sla new services service functions offered set client users changes 
ponder language developed imperial college provides framework specifying authorization policies conditions users perform actions resources obligation policies event triggered condition action rules 
declarative object oriented language support policy structuring cater policy specification complex systems 
discuss issues arise ponder service management focus policy management framework provide dynamic management services differentiated services diffserv networks 
fundamental objective policy management allow flexible adaptive management policies define adaptation choices strategy modified recoding shutting system 
describe policies adaptation service layer select modify policies network layer 
rest organized follows section outline requirements policy system service management 
section briefly presents ponder language section analyzes policy adaptation gives enforcement architecture adaptive policy system 
section presents adaptive policy framework apply differentiated services adaptive policy management framework environment followed description implemented network simulator section results simulation 
section compare approach related final section discusses directions 

service management issues consider typical network large enterprise consists local area networks lans interconnected wide area network wan access routers 
department enterprise responsible operating network satisfy sla established enterprise 
policy management approach administrator deploy network policy rules management system automatically distribute rules network devices 
enforcement policy rules provide network service qos guarantees applications service 
example established sla enterprise states video application clients site video server site receive gold service differentiated services architecture deployed network administrator deploy policy rule instructs network forward packets belong video application expedited hop behavior 
sophisticated approach automatic deployment slas management system automatically derive network policy information service specific information 
approach technical part sla specified set service level specifications 
sls set parameters throughput delay jitter values define service offered traffic stream qos enabled network 
includes specific values bounds traffic stream qos metrics round trip delay throughput packet loss probability 
management system perform mapping function sla order derive network policy information shown fig 

general refining high level service specification implementable policies extremely difficult automated sls considered comparatively simple set parameters query database order automate mapping 
interesting variation deployment mapping function responsible deriving parameters network policy sls parameters selecting network policy application described sls 
example gold network service defined specific low values upper bounds round trip delay packet loss network policy guarantee specific bounds chosen video application 
lupu sloman fig 

sls network level policy mapping 
addition mapping sls network policy information management system support dynamic service management order react changes require modification existing network configuration 
outlines typical cases management system change existing network configuration include new user application request changes provided qos 
video application example clients site may request network fig 

service management policy management system 
adaptive policy management framework resources running session order receive better video quality video server located site adaptive applications tailor behavior available network resources change qos requirements run time 
implies network policy attributes changed run time support new user application requirements 
performance measurements monitoring service may indicate performance degradation requiring changes service network configuration selection new service cater client application 
turn may require attribute changes deployed network policy rules selection different network policy cater application 
example deployed network policy handles video application packets longer guarantee low packet loss due high congestion different network policy rule guarantee low packet loss chosen video application 
events indicating network failures time events may trigger changes 
example network policy deployed specific path routers managed network may suitable video application routing path inside managed domain changes 
case new network policy applied new path automatically configured distributed order handle video application packets 
addition necessary specify authorized access specific services management functions 
certain group users able access specific services functions provided service 
example administrator may want gold service accessible users sites users site enterprise 
hand users administrative privileges sites ability change parameters service bandwidth allocated service 
information change dynamically new services offered set client users changes 
propose adaptive policy framework cover wide range requirements identified earlier management services 
policy specified ponder declarative object oriented language specifying security management policies distributed systems 
policy adaptation specified enforced policies specified ponder policy notation 

ponder policy language ponder object oriented declarative language specifying management security policies 
focuses obligation policies lupu sloman fig 

obligation policy syntax 
specify actions managers perform certain events occur provide ability respond changing circumstances 
obligations event triggered condition action rules explicitly identify subjects managers configuration agents responsible performing management actions target objects 
subject target objects specified terms domains means grouping objects policies apply 
events internal timer event external events collected distributed monitoring service 
composite events specified event composition operators language supports 
syntax obligation policies shown fig 

actions operations defined management interface target object internal operation management agent 
case target element policy optional 
concurrency operators separate policy actions obligation action list respectively specify actions executed sequentially parallel 
optional catch clause specifies exception executed execution policy actions fails reason 
syntax declaring policy instance 
language provides reuse supporting definition policy types instantiated specific environment 
shows syntax declaring obligation policy types instantiations 
policies automatically deployed relevant policy management agents pma specified subject policy 
pma interprets enforces obligation policies domain target devices 
current ponder prototype implementation obligation policy enforcement object implemented java program downloaded pma 
pma registers fig 

obligation types instantiations 
adaptive policy management framework event service receive relevant events trigger policies holds 
events may pass parameters pma 
brief overview ponder 
details authorization policies event composition composite policies constraints see damianou discussion conflict detection resolution see lupu sloman 

policy adaptation ponder framework applying policies network elements policy actions provided management interface managed element 
level abstraction policies determined available implementation 
discussed section service management may require adaptation existing network policies cater changes managed network 
policies need managed adapted 
identify different adaptation requirements show policy adaptation specified enforced policies specified ponder policy notation 
term policy adaptation describe ability management system modify network behavior ways adaptation dynamically changing parameters qos policy specify new attribute values run time configuration managed objects 
adaptation selecting enabling disabling policy set predefined qos policies run time 
parameters selected network qos policy set run time 
adaptation learning suitable policy configuration strategies system behavior 
select policies generate new ones needed 
focus categories policy adaptation adaptation learning requires considerable 

run time modification policy parameters general case specification network level qos policy dynamically adapting managed devices configuration follows format shown fig 

fig 
event triggers execution policy subjects network level policy management agents 
pma calculates required policy lupu sloman fig 

generic format network qos policy 
calling internal method invokes relevant policy actions target objects new policy parameters 
policies provide flexible means providing type adaptation components written procedural language 
new adaptation strategies incorporated management system adding new policies react different events existing policy actions replacing existing policies new versions implement new actions managed objects new actions policy management agents 
programmable networks new actions may added management interface network elements policies updated access new functionality 
code implements new actions new calculation methods policy management agent engine loaded run time administration console new policies 
functionality pma implemented traditional programming language necessary recompile code replace agent require stopping system done 

adaptation dynamically selecting enabling policies set policies approach higher level control policies triggered reconfiguration events determine lower level network policy enabled disabled adapt configuration managed system 
discussed previous section advantage policies procedural language selecting enabling appropriate network level policies modifying adding new management strategy level achieved replacing control policy adding new ones 
furthermore ponder deployment framework distribute high level control policies network qos policies 
focus service management policies adaptive policy management framework fig 

specification generic service management policy 
example higher level policies 
general case service management policy specified template obligation rule fig 

policy shown fig 
event triggers selection policies configuring network elements routers 
selects appropriate network level policy implement configuration method policy enabled parameters related specific policy calculated event sent event service pass parameters trigger network level policy 
network level policy interpreted network level configure network devices 
note advantage triggering network level policy event service may multiple agents managing subsets network devices 
agents receive event configure respective devices 

enforcement architecture general case management functionality generic policy management agent specified obligation rule fig 

enforcement architecture fig 

receives event event service 
discussed section adaptation event new application requiring changes qos performance measurements coming monitoring service require changes service network configuration events indicating network failures time events 
requests current policy database policy service 
lupu sloman fig 

enforcement architecture policy adaptation 

policy database received invokes selection algorithm choose suitable network policy set implemented network policies 

enable method called selected network policy object turn calls enable method relevant network level 
enabling policy means policy enforcement objects register obligation event event service described dulay 
point selected policy activated network level needs triggered obligation event perform policy actions 
furthermore old policy unloaded disabled corresponding 

obligation event generated network policy calculated parameters trigger policy 

event service disseminates obligation event network level registered receive specific event 

service management differentiated services networks approach adaptation enforced higher level policies 
section presents usage scenario network policy provides domain behavior differentiated services environment adapted service management policies 
service management policies enforced policy management agents service level 
responsible management services run managed diffserv network 
section presents adaptive policy management framework authorization policy specified ponder notation control access services provided diffserv network 

network level domain behavior policies ietf diffserv working group nichols proposed term domain behavior pdb describe behavior experienced particular set packets cross diffserv domain 
pdb characterized specific metrics quantify treatment set packets particular set receive crosses diffserv domain 
pdb specifies forwarding path treatment specific aggregate 
pdb implemented hop behaviors 
phb describes forwarding behavior diffserv node applied particular diffserv behavior aggregate 
implemented nodes means buffer management packet scheduling mechanisms 
pdb measurable attributes describe happens packets enter cross diffserv domain 
framework pdb implemented network level policy rule 
rule guarantees pdb attributes corresponding traffic aggregate 
table presents examples qos guarantees pdb policies offer associated traffic aggregates 
framework pdb policies specified ponder obligation rules 
actual implementation pdb policy implementation phb set guarantee qos characteristics corresponding traffic aggregate hidden customer 
customer human automated agent offered externally observable pdb qos attributes 
example pdb ponder policy rule 
example 
policy rule providing specific pdb policies subject target routers pdb ds max input rate min output rate ds diffserv codepoint ef pdb implemented ef phb ds max input rate min output rate max input rate min output rate property ef traffic satisfy example assume core routers diffserv domain implement ef phb pdb policy configure accordingly 
possible implementation described jacobson action weighted round robin scheduling algorithm schedule packets egress interface core router 
weight ef traffic lupu sloman table pdb policies qos characteristics pdb enforcement assured enforcement time identifier network policy bandwidth mbps delay ms jitter ms loss routers path valid pdb policies policy rl rn day pdb policies policy rl rm working hours 
adaptive policy management framework class calculated parameter min output rate weight min output rate total output rate total output rate egress interface bandwidth 
note policy rule example configure core routers diffserv domain implement ef phb corresponding traffic aggregate 
additional policy needed provide necessary configuration edge routers diffserv domain 
network level pma receives event pdb invokes action routers target domain 
way core routers target domain guarantee minimum output rate throughput ef marked packets packets exceed configured maximum input rate ingress router interface 
alternative implementation ef priority scheduling egress interface target core routers 
details specification diffserv policies see describes generic enforcement architecture ponder deployment model 
current implementation extends ponder toolkit functionality enforce diffserv policies 
policies ponder toolkit java rmi objects 
diffserv specific policy actions methods policy object network level policy management agents invoke triggered configuration request event 
policy actions constructed diffserv element classes diffserv implementation provides 

service management policies hop domain behavior pdb policies introduced previous section enforced diffserv enabled network level fig 

configure qos mechanisms managed devices diff serv network 
discussed section network service management requires additional functionality 
required functionality enables dynamic service management provided framework service level policy management agents service level 
provide examples service management policies dynamic service management 

sls pdb mapping policy sls pdb mapping performed administrator triggers policy rule means sls request 
lupu sloman example 
sls pdb mapping policy subject sls request sls parameters pdb policy select sls parameters pdb policy enable pdb policy parameters calculate pbd policy sls parameters pdb pdb policy parameters example new sls request application specific parameters trigger 
uses sls parameters select suitable pdb policy policy database 
pdb policy enabled triggered configure network devices 
note project sls approach diffserv sls parameter specification 
parser component ponder management toolkit translate external sls specification pairs parameter value pairs stored structure sls parameters conveyed agent obligation event sls request 
receipt sls request select appropriate pdb policy specific request 
example selection algorithm outlined pdb selected triple delay loss 
policy handle service performance degradation number different adaptation strategies handling service run time performance degradation notified monitoring service indicated fig 

may need dynamically change strategies replacing policy new version enabling disabling different versions policy 
policies provide flexible means implementing type service level adaptation scripts special purpose code 
events indicating high delay high packet loss trigger policies 
examples indicate adaptation strategies implemented ponder policies management network service video client application described section define actual policies 
examples assume video application receives ef network service ef phb implemented example 
monitoring system detects ef service delay exceeds threshold generates event received 
corrective actions may performed include increase minimum departure rate ef traffic egress core router guarantee service packets especially large ones remain output adaptive policy management framework queue time transmitted hop notify client application choose different state requires bandwith decreases incoming traffic rate ingress interface 
way ef aggregate experience delay 
action event increase maximum arrival rate incoming ef traffic ingress interfaces edge core routers ef traffic traverses 
reduce number packets dropped ingress interface 
alternatively packet loss proportional aggregation degree number ef reduced order reduce packet loss remaining ef traffic 

policy support changes routing link failures pdb usually associated path routers diffserv diffserv mpls 
link fails routing changes specific class traffic corresponding pdb may guaranteed routers new path 
new pdb selected class traffic satisfies network service qos requirements served new path 
pdb selected decision formulated service management policy 
example provides policy implements functionality 
example 
policy configuring diffserv link failures routing changes subject pdb select sls params pdb enable pdb params calculate sls params pdb params policy instructs find suitable pdb service sls parameters sls parameters path routers serves service packets changed 
information new path conveyed event 
event triggered component responsible detecting reporting routing changes 
new pdb selected selection algorithm example selection pdb adapted replacing existing policy different selection algorithm 

policy reflect changes application user requirements user application may request different qos guarantees run time updating sls parameters 
consequence network policy attributes lupu sloman changed support new user application requirements 
policy example enables provide type service adaptation 
example 
policy re configuring diffserv sls parameters change run time subject sls request new sls parameters service id pdb policy lookup service id new pdb policy parameters calculate pbd policy new sls parameters pdb new pdb policy parameter policy example event sls request carries new sls parameters application user requires unique identifier client application requires sls renegotiation identifier flow description parameter sls 
pdb policy responsible specific service obtained lookup operation policy service assuming table containing service identifiers updated initial request sls pdb mapping successful 
alternatively pdb guarantee new service requirements selected run time set implemented example 

service authorization policies discussed section authorization part service management system specify users able access particular services functions services 
consider scenario users request network services applications service access points saps 
access control agents implemented sap interpret authorization policies control requests related service 
example policy rule allows users sites perform action allocating gold service client applications 
gold service allocated client application requested bandwidth mbps 
adaptive policy management framework example 
policy controlling users access particular network service subject users users users users target agent action client application bandwidth bandwidth possible permit selected customer administrators access sap set service parameters changing bandwidth allocated gold service 
implemented policy example 
policy controlling access management function network service subject users users users users target agent action bandwidth 
implementation prototype adaptive management system evaluation enforcement architecture implemented ponder toolkit 
service policy management agent implements selection algorithms query simple policy database choose suitable policy 
graphical tool administrator selects network qos policies included policy database edits qos attributes see table selected policy 
new policies included policy description database run time existing policies removed 
administrator load new selection algorithms service pma 
allows new adaptation strategies implemented management system run time adding new service management policies new selection algorithms 
applicability approach adaptive management differentiated services networks tested simulated diffserv networks network simulator offers diffserv functionality 
extended simulator new components allow communication simulator policy management agents implemented ponder toolkit 
components interaction ponder policy management agents fig 

monitoring components measure performance characteristics throughput packet loss delay diffserv traffic classes simulation 
measurements display performance graphs event components generate performance degradation events traffic lupu sloman fig 

prototype implementation adaptive policy management system 
measurements exceed specific thresholds 
example event indicating packet loss created packet loss specific class traffic exceeds configured threshold 
addition event components generate events indicating network failures new user application qos requirements 
example host inside simulated network requests certain qos new traffic flow qos request event generated 
events dispatched service pma trigger policies elvin event service publish subscribing messaging system currently ponder toolkit 
policies select lower level network policies enable enforce corrective actions managed devices 
implementation corrective actions invoked target devices directly service pma actions initiated network level service pma request 
policy management agents simulator run different hosts 
policy actions communicated simulated nodes protocol adaptive policy management framework fig 

simulated diffserv network 
adapter component acts interface simulator 
policy management agents send tcp messages proprietary text protocol protocol adapter component translates messages commands sent management interface target simulation nodes 
note policy management system abstracts protocols communication manager agent managed device 
protocol adapter component easily implemented translate management actions standard policy protocols cops snmp supported real network elements 
results experiment simulated typical diffserv network topology indicated fig 

implemented pdb policies network pdb ef phb pdb af phb pdb phb 
priority scheduling egress interface core router 
graphical tool administrator selects network policies included qos policy database edits qos attributes pdb 
tool interfaces domain browser select policies directory server policy objects stored 
values assigned qos attributes represent attributes upper thresholds indicates upper threshold 
experiment show adaptive management system automatically performs sls pdb mapping new sls requests implemented policy example 
event parameters address node issuing sls request requested values lupu sloman fig 

throughput individual traffic flows 
delay packet loss jitter selection algorithm choosing closest pdb triple delay jitter indicates throughput individual flow traverses diffserv network displays throughput diffserv aggregates 
host sends kbps ef traffic host sends kbps af traffic host sends kbps traffic 
point figs host issues sls request kbps service guarantees delay ms packet loss jitter ms 
sls request handled management system adapt configuration fig 

throughput diffserv aggregates 
adaptive policy management framework diffserv network 
observe chooses sls request triggers 
result enforcement diffserv network adapts configuration guarantee ef phb traffic originating host 
point host issues sls request service kbps delay ms packet loss jitter ms time chooses host receives af phb 
observe point class suffers starvation total throughput ef af traffic kbps maximum capacity core network 
point host request service kbps delay ms packet loss jitter ms reacts request choosing af service user application 
conducted experiments simulated diffserv networks 
demonstrate service management policies cater dynamic management network services 
due space limitations provide results experiments 

related various frameworks proposed providing service management qos enabled networks 
propose service level specification configuration mapping function architecture 
research groups working policy specification enforcement 
aims bringing areas showing flexibility policy management framework dynamic service management 
ietf policy working group defining framework managing qos networks 
language specifying policies directory schema 
ietf policies form set conditions set actions directories storing policies grouping subjects targets 
concepts subject target determine components policy applies mapping policies components done means interface roles 
furthermore support policy rules dynamically triggered events reconfigure managed system changing circumstances 
policy ietf focused network layer considered interaction application network policy 
number vendors marketing policy toolkits defining policies diffserv enabled networks 
similar ietf ideas 
supports language graphical editors allow administrator define individual policies explicitly identify enforcement components policies loaded 
tools lupu sloman appear considered automation policy lifecycle adapt configuration network elements conditions change 
new configuration need imposed manually administrator management console 
policy management system proposed verma managing service level agreements diffserv networks 
tabular specification policy table contains entries map traffic aggregates classes service 
list different devices support obtained resource discovery mechanism 
providing policy management system managing characteristics diffserv devices proposed system maps application flows predefined implemented 
system communicate policies enforcement devices initial configuration process initiated administrator adapt run time changes managed environment 
addition scope approach specifically aimed management system diffserv network applicable wide range management areas 
sls diffserv configuration mapping framework proposed prieto brunner 
management system consists parts 
performs sls pdb mapping process admission control process 
mapping module uses dimensional space delay packet loss throughput classify input sls available intradomain service offered implemented pdb diffserv network 
second policy control part controls sls mapping admission control processes 
network policy device configuration mechanism concrete proposals policy part framework 
furthermore sls pdb mapping process initiated user actions undertaken management system dynamically select new pdb network conditions change 
keller proposes contract architecture application level service management 
contracts defining deploying monitoring enforcing slas dynamic business environment 
generic object oriented model describes various sections contract client service provider 
contracts managed contract management system main functional components measurement violation detection management component 
measurement component responsible collecting data relevant service qos parameters 
violation detection component retrieves data measurement component evaluates guarantees defined contract met 
case qos violation notification sent management component initiates corrective measures 
advantage proposed framework network level service management flexibility implement dynamically new management strategies service management system 
adaptive policy management framework customer service management csm architecture allows delegation service management task service provider customer 
customers adjust sls parameters parameter setting function block csm module implements sls mapping function derive device configuration sls information 
framework provide functionality allowing users trigger execution management actions service management agent 
framework proposed adapts policy parameters monitoring network 
management script includes policies expressed ietf representation specifies policy life cycle managed 
script notifies management system qos threshold violations 
prototype implementation provided differentiated services policy parameters peak rate traffic profile peak burst size associated changed dynamically adapt system behavior 
framework propose adaptive management diffserv specify uniform way necessary information required enforcement adaptation policies obligation rules 
addition providing adaptation changing policy parameters select new policies enabled events just qos violation events 
architecture management network offering active services marshall 
bacterial algorithm forms basis adaptation performed autonomous controllers programmed bacterium autonomously replicate policies improve performance de activate policies degrade performance 
way useful policies spread poor policies die 
policy evaluated fitness revenue cost function 
policy related active service policies control deployment services active services environment 
marshall presents example type adaptation providing qos differentiation active services queue length network servers adapted provide short delay low loss service depending users qos requirements 
example requirements policies service genes accept request service dps busy accept request service queue length 
framework policies generic sense describing actions management agents undertake receiving different types requests 
provide adaptation systematic way adapting policy management system changing attributes policies removing adding new policies 
qos architecture transport system multicast multimedia networking environment offers qos configurable api transport layer enables applications control qos 
qos specified api terms flow specification includes parameters delay throughput jitter qos policy 
qos policy enables users advise infrastructure lupu sloman deal flow resource availability changes 
distributed qos adapter interprets policy responsible informing applications resources available 
qos adaptation protocol implemented communication qos adapters 
framework provide functionality may apply adaptive behavior circumstances examples section 
lot qos adaptation carried distributed systems area due space limitations 
provides adaptation hard coded qos management monitoring middleware systems supporting multimedia applications 

adaptive policy framework network services management 
approach provides administrator flexibility define network service management service authorization policy ponder high level language 
network policy rules configure qos mechanisms devices target domain 
network rules specified framework dynamically triggered events order change configuration managed objects certain circumstances 
dynamic configuration policy forms basis adaptive management framework provide 
policy adaptation framework enforced higherlevel ponder policies 
adaptation provided ways dynamically changing parameters qos policy specify new attribute values run time configuration managed objects selecting enabling disabling policy set pre defined qos policies run time 
parameters selected network qos policy calculated set run time 
service management policies specific case higher level management policies adapt underlying network policy 
examples demonstrate service management policies cater dynamic management services differentiated services network 
issue needs addressed problems may arise adaptive management system manual intervention adapt network configuration 
possible problems management system may oscillate fail deliver feasible network configuration 
problem give network administrator ability configure event components adaptive management system filter frequent events type thresholds ensure small changes performance generate events trigger configuration changes 
badly programmed policies possibly introduce instability case incorrect program 
order deliver feasible network configuration currently working design adaptive policy management framework implementation validation process inside adaptive management framework 
process ensure policy consistent functional resource constraints target environment 
order protect network services unauthorized usage provide administrator ability specify service authorization policies users able access particular services functions services 
important issue needs addressed enhance functionality service management system initiate corrective actions pre defined 
currently task adapt set underlying network policies pre defined conditions 
corrective measures undertaken remedy causes violations delivery service client application 
require management system carry problem determination tasks perform root cause analysis order initiate corrective actions violations detected 
intend experiment linux routers commercial routers switches evaluate performance implications executing policies routers 
includes application approach management mpls networks 

acknowledgments gratefully acknowledge support epsrc research gr cisco systems support project 

braden clark shenker integrated services internet architecture overview rfc june 

braden zhang berson herzog jamin reservation protocol rsvp version functional specification rfc september 

carlson weiss blake wang black davies architecture differentiated services rfc december 

jacobson nichols expedited forwarding phb rfc september 

damianou dulay lupu sloman ponder policy specification language proc 
policy international workshop policies distributed systems networks bristol united kingdom january 

sloman domains framework structuring management policy chap 
networks distributed systems management sloman pp 


dulay lupu sloman damianou policy deployment model ponder language ieee ifip international symposium network management seattle may pp 


lupu sloman conflicts policy distributed systems management ieee transactions software engineering special issue inconsistency management vol 
pp 
december 
lupu sloman 
nichols carpenter definition differentiated services domain behaviors rules specification rfc april 

lupu sloman adaptive policy management framework differentiated services networks 
ieee third international workshop policies distributed systems networks monterey california june 

damianou dulay lupu sloman tools domain policy management distributed systems 
eighth network operations management symposium florence italy april 

martinez brunner sch nw lder script mib policy configuration management eighth network operations management symposium florence italy april 

egan griffin georgiadis service level specification semantics parameters negotiation requirements draft sls txt june 

prieto brunner sls diffserv configuration mappings th ifip ieee international workshop distributed systems operations management nancy france october 

www org 
elvin content messaging elvin dstc edu au 
snir cohen policy framework qos information model internet draft draft ietf policy qos info model txt april 

cisco cops qos policy manager product documentation www cisco com cc td doc product qos index htm 
communications policy management system product documentation www com html products 
verma jennings policy sla management enterprise networks 
international workshop policies distributed systems networks bristol united kingdom january 
springer verlag lncs pp 

keller kar ludwig dan hellerstein managing dynamic services approach conceptual architecture 
eighth network operations management symposium florence italy april 

de customer service management architecture internet 
th ifip ieee international workshop distributed systems operations management texas december 

distributed policy management enabling policy adaptation monitoring active network technology 
th ifip ieee international workshop distributed systems operations management nancy france october 

marshall novel architecture active service management 
ieee ifip international symposium network management seattle pp 
may 

marshall provision quality service active services computer networks vol 
june 

campbell quality service architecture ph thesis lancaster university united kingdom january 
leonidas graduated july department electrical engineering computer science national technical university athens 
september adaptive policy management framework research associate dse group department computing imperial college london 
research interests area policy networking 
emil lupu lecturer department computing imperial college london 
years experience policy driven network systems management serves program committee ifip ieee integrated management network operations management symposia steering committee policy networks distributed systems conference 
morris sloman leads dse group department computing imperial college london 
member editorial board journal network systems management steering committee ifip ieee integrated management symposium policy networks distributed systems conferences 
