input language modelling design high performance text input techniques william scott mackenzie department computer science unit computer human interaction york university dept computer information sciences toronto ontario canada fin university tampere acm org tampere finland critique language modelling text input research propose alternative approach 
current language statistical models derived large samples text corpora 
text reflects output final result text input task 
argue weakens utility model users language typically quite different corpus punctuation symbols acronyms slang frequently 
corpus reflect editing process creation 
existing corpus captures input modalities text input devices 
actions associated keys shift alt ctrl missing 
study validate arguments 
keystroke data subjects collected month period 
results support need input language modelling text input 
key words text input input language modelling explores difficulty constructing statistical language models text input research 
timely tremendous interest particularly developing mobile text input techniques optimised enhanced exploiting statistical properties language 
view efforts misguided limited accounting way text input 
argue language model developing optimised text input techniques input output current practice 
importance input text modelling demonstrated small study keystrokes gathered text entry desktop systems 
terms implications explained detail 
intent demonstrate methodology observing text input process 
hope stimulate building input models text entry 
observation natural languages highly redundant 
language redundancy 
spaces letter words missing sentence leaving sixteen characters 
sentence remains understandable 
true phrase difficult read uncertainty remains missing words 
understand message information content remains unchanged 
arguably original sentence unnecessary characters removed 
phenomenon due high redundancy english language 
redundancy natural language english important quality speakers take granted 
built checksum automatically included english phrase 
checksum couldn understand speech noisy telephone line proof read writing short hand speed read play word game 
activities require fill missing parts words sentences recognise mistakes surrounding context 
language redundancy allows speakers identify mistakes omissions usually correct redundancy omitting part sentence catastrophic 
redundancy result spelling grammatical properties language 
rules follows colloquial phrases hand digraphs th sh non homogeneous frequencies letters letter occurs give rise high redundancy language 
letter syllable word phrase sentence statistically dependant context close proximity context extended great numbers characters 
consider text taken shannon speaking language possesses implicitly enormous knowledge statistics language 
familiarity words idioms clich grammar enables fill missing incorrect letters proof reading complete unfinished phrase conversation page shannon wrote enormous enormous identical meaning grammatically incorrect 
additional doesn provide information word begins vowel 
depends context choice depends letter word characters away 
shannon wrote people speaking language possess 
replacing singular plural people requires word possesses possess 
case terminal es possesses dependant word characters away 
word sentence doesn agree number people change affected word people characters away different sentence 
clearly interdependence english text limited local context extend distant parts sentences characters away 
demonstrated natural languages english highly redundant redundancy result statistical properties language 
english example language redundancy property natural languages intend arguments apply languages 
consider redundancy english exploited research text input techniques 
applications language redundancy areas research language redundancy applied 
reports early th century frequencies letters tabulated aid decryption secret messages 
redundancy plays role cryptography important role data compression goal remove redundancy reversible process concern database retrieval 
interest text input 
general designers text input techniques construct statistical models language ways 
movement minimizing techniques exploit language statistical properties construct input techniques device hand movement efficient possible 
predictive input techniques exploit properties predictive engine increases text throughput guessing suggesting user enter 
examples approaches hybrid approaches discussed sections 
movement minimising input techniques qwerty supreme desktop consumer interest small hand held personal digital assistants pdas text messaging pagers mobile phones driven search efficient portable text input methods 
interest produced new keyboard designs require smaller efficient physical layouts optimised stylus single finger typing handed typing 
mackenzie model predicts maximum expert minimum novice typing speeds keyboard layout stylus typing 
calculated character frequencies alphabetic characters space character corresponding digram frequencies character pairs coupled statistical data fitts law construct model stylus typing 
zhang mackenzie model propose new keyboard layout space keys called opti 
inventors keyboard www com ad hoc optimisation approach minimise distance common 
resulting keyboard contains space bars letters arranged common pairs letters physically close 
evaluation keyboards mackenzie zhang 
hunter zhai smith took physics approach find optimised keyboard arrangement 
adopted model mackenzie attempted optimise model mechanical simulation monte carlo approach known metropolis method 
metropolis keyboard hexagonal keys centred space key 
compare metropolis keyboard common layouts user evaluation 
detailed review text input technologies see 
clearly statistical language data useful researchers trying optimise movement text entry 
predictive input techniques language prediction interest shannon prediction entropy printed english seminal language prediction research 
jonathan swift travels published letter cousin forward matter describes machine controlling printing press automatically construct academic writing field proportion data parts speech 
save researchers lot machine available today 
interesting real technology utilising prediction aid text input 
allows users enter part word search similar words spelling pronunciation shape languages 
uses static database searching functionality 
predictive input technology reactive keyboard 
reactive keyboard monitors user enters presents text predictions user choose 
predictions generated finding longest matching sub strings previously entered text 
reactive keyboard predictive adapts user input limited static set words phrases 
final predictive text input technology deserves mention technology licensed widely currently available pdas cellular telephones 
input technology www com uses conventional telephone keypad significant telephone keypad ubiquitous letter arrangement defined international standard 
user types text completely deterministic map single letter letters key 
overcome ambiguity word possibilities user enters text 
disambiguating algorithm proprietary uses character word frequencies 
evaluations exist 
predictive text input technologies rely heavily statistical language models ultimate performance limited quality model 
hybrid input techniques text input techniques developed movement minimizing predictive features 
predictive text input technique pointing device select predicted options 
options user boxes sized relative probabilities optimise movement time 
boxes expand pointing device hovers near video game animation fast text entry 
technique movement minimizing predictive 
technique difficult visualise demonstration 
conveniently demo available online www inference phy cam ac uk 
uses fixed set character probabilities calculated prediction partial match ppm algorithm 
fluctuating optimal character layout focl hybrid text input technique designed text entry small devices limited display rows text buttons 
cursor keys enter button scroll approximate grid containing characters entered 
characters rearranged keystroke minimise number cursor movements select character 
rearrangement guided digram probabilities knowledge previous character 
text input techniques reviewed vary widely exception rely fixed tables language statistics culled language models 
inaccuracy models results reduced performance interface 
techniques including focused rapid inputting text provided editing functionality desktop users take granted backspace delete shift caps lock caveats language modelling respect input process statistical language models constructed attempt capture relative likelihood letters words phrases relate possible contexts user types 
text input researchers put lot effort building statistical models overlooking importance selecting right collection symbols calculate statistics model 
input technologies differ significantly approach similar limited quality language model 
quality language model turn limited body raw text symbols model 
typically researchers needing statistical language data construct adopt corpus text build statistical models 
corpus constructed obtaining large quantities text language interest 
project net pg line repository electronic documents english common source texts 
alternatively researchers published tables statistical language data 
project texts statistical language tables suited research database retrieval text compression areas applied linguistic research 
areas research finished documents 
mean text remains text input task 
text input research different effective focus dialog occurs user input device text entry task 
elaborate point section 
input language modelling constructing language models text input research statistical data typically derived output final static product text entry 
suggest data obtained input creation process goal exploit redundancy language optimising text input 
text input research corpus constructed input text editing actions captured creation process technology similar possible text input method investigation 
reasons making recommendation corpus text representative user language corpus text reflect editing process corpus text capture input modalities 
detailed explanation points follows 
corpus text representative user language idea corpus representative language naive domain users interacting computing technology 
users typically richer set characters appear corpus statistical properties set distinctly different typical corpora 
simple example space key common character english text 
space character typically missing tables letter digraph probabilities build language models 
typically alphabetic characters included 
punctuation symbols rarely included letter digraph tables 
zhai observe punctuation occurs frequently frequent letters 
inclusion space character simple punctuation symbols step feel important fully open character set 
characteristics text users enter dependent application create text 
example expect formal prose entered word processor mail application 
additionally type application depends input device available people patience enter volumes text hand held pda device 
kind text entered context short notes phone numbers urls acronyms slang statistical properties differ formal english texts 
highly cryptic messages common text entry cell phones pagers 
corpus text ignores editing process corpus contains information editing process feel unfortunate omission 
users fallible creation text message interaction system larger scale involves perfect linear input alphanumeric symbols 
input process really linguistic data provided include space character indirectly provide data spaces 
frequency data alphabetic characters appearing words 
possible obtain estimate frequency space character data 
analysis suggests frequency space characters 
editing process 
users produce text produce series editing commands interpreted text box widget command line interface resulting text 
define input actions set physical acts user perform editing process hitting key mouse writing stylus depending system 
input actions result tokens 
token instruction application 
example word processor typing letter keyboard input action token instruction insert letter current cursor position 
example input action produces token effect final document 
consider happens user microsoft word windows operating system presses alt letter 
input actions 
press alt key 
press release key 
release alt key 
press release key keystrokes result tokens 
actions cause file menu displayed word processor enter mode interprets keystroke selection menu 
action creates second token instruction application save current open document return normal editing mode 
example keystrokes changes document text document contain record keystrokes 
happens say result unrepresented keystrokes 
observation example includes unrepresented keystrokes common task 
currently proportion unrepresented keystrokes total keystrokes occurs text input unknown believe proportion probably high 
consider unrepresented keys typical key pc qwerty keyboard backspace shift control caps lock escape alt cursor keys including page home function keys num lock insert delete system keys print screen 
unrepresented keys alt word edit describe different processes 
mean correct minor typing mistakes describe larger task newspaper editor performs improving text document rewriting sections 
mean 
users need able correct minor mistakes perform larger editing tasks 
control usually conjunction keys unrepresented 
final observation application operating system determines tokens input actions unrepresented 
corpus text capture input modalities text documents account created 
example corpus includes uppercase lowercase characters 
simple language models distinction ignored considered 
expansive model easily accommodate distinction simply treating uppercase lowercase characters distinct symbols 
input perspective approaches wrong 
uppercase lowercase characters entered separate keys keyboard seemingly accurate treatment uppercase lowercase characters distinct symbols just wrong input perspective 
user interaction shift keys accommodated model text input activity related keys captured creation text 
terminology previous section say mode shift keys partially unrepresented keystrokes shift key recorded text mode change capital letters evident final body text 
capital letters text document indicate shift mode activated 
capital letters indicate mode shift activated caps lock left shift right shift keys keyboard shift state partially unrepresented 
partial shift keys natural consequence input modalities technology words multiple ways enabling shift mode qwerty keyboard 
currently text input corpus hope arguments convinced reader necessity considering input stream opposed static text documents modelling text input 
just pointless try build language model english language corpus containing french text building model text entry completed text documents similarly misguided 
corpus text input exists 
results study conducted 
purpose experiment produce new corpus text input stream data justify arguments earlier obtain data 
study preliminary production text input stream corpus worthwhile endeavour taken 
study typical text input stream constructed software records users type go regular activities computers 
software collect keystroke data subjects approximately month 
materials method software capture raw input text data wrote software visual windows operating system 
software takes advantage hooks windows log user interaction low level 
hooks enable receive keystroke data key presses releases mouse movement mouse button clicks active application receives data 
monitors window focus record active application typing 
user keyboard mouse activity recorded log file entry time stamped millisecond resolution 
software designed operating recording user actions essentially invisible open windows entry task bar user aware disturbed 
anticipate software interest software source code available com academic 
reader may surprised find desktop computers gather text input data identifying handheld computers focus contemporary text input research 
difficult find subjects willing keystrokes logged 
mundane text communications software captured passwords personal mails confidential letters 
difficulty finding willing subjects similar pdas entered sufficient text pdas exploratory study led decision 
participants volunteer participants solicited coincidentally stopped computer just began study considered data insufficient 
remaining subjects male female ages ranged years 
participants computer literate computers regular basis 
subjects frequent users standard desktop applications email word processing web browsing 
subject spent time visual basic split time word processing mail 
small number users feel data collected sufficient preliminary study text input language modelling 
results discussion total approximately megabytes log files collected course month corresponding approximately individual keystrokes mouse events movements button clicks 
applications analysing data study calculated percentage keystrokes users typed applications 
table presents frequently applications proportion keystrokes received applications 
notes column indicates applications word processing mail received large percentage subjects keystrokes 
data table suggest word processing mail consumed large number total keystrokes entered subjects 
keystroke frequency data keystroke data files generated study calculate keystroke frequency data 
table presents top keystrokes entered subject total 
notice second probable character accounting characters typed subjects backspace key 
important result 
earlier reported keyboard designs statistical language modelling optimised second probable key backspace key 
interesting subject backspace second frequent keystroke 
investigated subjects heavy users backspace key preferred cursor keys control key shift key select errant text correction 
accounts higher typical prevalence cursor keys 
general suggests second frequent key editing subject key backspace cursor key depending editing style user 
demonstrates strength input analysis identified quite different editing strategies 
observation gone unnoticed output text analysis performed 
importance distinguishing upper lower case alphabetic characters illustrated high frequency shift key 
sixth frequent key accounting slightly keystrokes 
data show punctuation marks frequent letters agrees observations zhai 
probable punctuation character period frequency making comma tab hyphen semicolon listed order decreasing frequency 
unrepresented keystrokes table supports contention typical corpus account editing process misses great deal input activity 
subjects keystrokes keys classified unrepresented 
implies corpora data captured input process missing keystroke input 
additionally unrepresented keys control alt delete backspace cause regular alphabetic keystrokes unrepresented statistic table lowerbound proportion unrepresented keystrokes 
measure relative occurrence space keystroke lower common english cited earlier 
result corpora accounting unrepresented characters possibly subjects words longer average length fewer spaces character 
table application usage percent received keystrokes total keystrokes word processor mail coding visual basic netscape average subject computer mail word processing software installed 
table frequencies fifteen common keystrokes space space space space back space back back back shift right return shift control shift shift left delete shift right back return delete right remaining represented keystrokes remaining unrepresented keystrokes table numbers represent proportion keystroke indicated percentage 
example number space means keystrokes entered spaces 
keystrokes ordered frequency occurrences 
percentages subjects sum table shows frequent characters 
table frequency unrepresented characters frequency unrepresented key back shift return right delete left control rest total revealing calculation perform normalisation space keystroke frequency 
table apparent say delete backspace alt control keystrokes cause keystrokes unrepresented 
percentage represented keystrokes lower 
keystrokes represented 
spaces 
final text measure frequency space character find frequency space character 
assume backspace delete control character cause represented keystroke unrepresented keystrokes remain represented spaces 
result factors corpora omitting unrepresented keystrokes subjects entering longer words 
novel statistical model english new comprehensive corpus text input data suggest output models lacking ability represent text input task 
output approach models weak unsuitable research text input problems reasons typical text files language modelling representative user language texts contain data editing process text corpus account input modalities technology create text 
utility input text language models improved corpus collected input task similar users ultimately face terms physical device type text entered 
corpus text input data created available research community 
difficult hard find subjects willing personal communications public 
corpus invaluable text input community 
corpus available capturing text input data tools software possible 

mackenzie 

theoretical upper lower bounds typing speeds stylus soft keyboard 
behaviour information technology 

zhang 

high performance soft keyboard mobile systems sc 
thesis 
university 

mackenzie zhang 

design evaluation high performance soft keyboard 
proceedings acm conference human factors computing systems chi 
new york acm 

mackenzie zhang 

text entry soft keyboards 
behaviour information technology 

hunter zhai smith 

physics graphical keyboard design 
extended abstracts acm conference human factors computing systems chi 
new york acm 

zhai hunter smith 

metropolis keyboard exploration quantitative techniques virtual keyboard design 
proceedings acm conference user interface software technology uist 
new york acm 

zhai hunter smith 

performance optimization virtual keyboards 
journal human computer interaction 

mackenzie 

text entry mobile computing models methods theory practice 
human computer interaction 



efficient text input method pen computers 
proceedings acm conference human factors computing systems chi 
new york acm 



efficient text input method handheld ubiquitous computers 
proceedings international symposium handheld ubiquitous computing huc 

witten james 

reactive keyboard predictive typing aid 
computer 

witten 

adaptive predictive text generation reactive keyboard 
interacting computers 

mackenzie korhonen 

predicting text entry speed mobile phones 
proceedings acm conference human factors computing systems chi 
new york acm 



psychophysical comparison stylus driven soft keyboards 
proceedings graphics interface 
toronto ontario canadian information processing society 

james 

text input mobile devices comparing model prediction actual performance 
proceedings acm conference human factors computing systems chi 
new york acm 

ward blackwell mackay 

data entry interface continuous gestures language models 
proceedings acm conference user interface software technology uist 
new york acm 

ward blackwell mackay 

gesture driven data entry interface mobile computing 
journal human computer interaction 

bellman mackenzie 

probabilistic character layout strategy mobile text entry 
proceedings graphics interface 
toronto ontario canadian information processing society 



minimal device independent text input method sc 
thesis 
university tampere tampere finland 

shannon 

prediction entropy printed english 
bell system technical journal 



years shannon theory 
ieee transactions information theory 

underwood schulz 

meaningfulness verbal learning philadelphia 



table single letter digram frequency counts various word length letter position combinations 
psychonomic monograph supplements 
