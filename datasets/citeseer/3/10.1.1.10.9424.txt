typeful tagless representation xml documents zhu hongwei xi computer science department boston university cs bu edu 
constructing programs process xml documents immediately face question xml documents represented internally programming language 
currently representations xml documents typeless sense type information xml document reflected type representation document representation assumed typed 
convenient construct typeless representation xml documents large number representation tags require significant amount space store may incur numerous run time tag checks represented documents processed 
typeless representation xml documents di cult impossible statically capture program invariants related type information xml documents 
building guarded recursive datatypes approach representing xml documents allows type information xml document reflected type representation document significantly reduces need representation tags required typeless representations 
approach able process xml documents typeful manner various known software engineering benefits presence types 
xml extensible markup language simple flexible text format derived sgml 
originally designed support large scale electronic publishing xml playing increasingly important role exchange wide variety data web 
markup language xml adds structural information data document 
instance xml document text format left part 
name start tag tag denoted syntax xml 
name data loosely contents tags 
tagged element element short consists start tag partially supported nsf 
ccr 
ccr zhu cs bu edu hongwei xi fig 

xml document dtd tag may enclose data sequence elements 
formed xml document consists single root element contains properly nested elements 
instance xml document start tag tag zhu piece data start tags root element respectively 
currently proposed type systems xml xml schema relax ng type systems extend refine notion dtd document type definition simple type system designed describing structure xml documents 
example dtd right part xml document left part conforms 
essentially dtd defines document type containing root element addrbook elements person name email addrbook element contains possibly empty sequence person elements person element contains name element followed email element name element contains character data email element contains character data 
datatype element string content list content ce element ct string generic representation xml document addrbook ce person ce name ct zhu ce email ct cs bu edu ce person ce name ct hongwei xi fig 

generic representation xml datatype addrbook addrbook person list person person name email option name name string email email string specific representation xml document addrbook person name zhu email cs bu edu person name hongwei xi fig 

specific representation xml order construct programs processing xml documents need form data structure represent documents internally programming language 
declare datatype element standard ml sml purpose 
evidently xml document readily represented value type element 
approach type information xml document completely lost type representation 
presentation refer representation generic representation xml documents 
essentially approaches various generic combinators implemented facilitate construction programs processing xml documents 
viable approach impossible verify static type checking representation xml document valid formed conforms specified dtd 
great number constructors ce ct needed represent xml documents potentially resulting cient processing xml documents 
declare datatype addrbook represent particular xml document 
representation refer representation specific representation xml documents 
essentially second approaches translation dtds types haskell 
approach allow types di erentiate xml documents conforming distinct dtds troubling problem occurs di cult impossible construct programs processing xml documents polymorphic dtds 
clearly serious contention second approaches 
proposed specific representation second approach represent xml documents generic programming supported generic haskell adopted implement generic combinators facilitate construction programs processing xml documents 
particular shown function constructed generic haskell compress xml documents conforming distinct dtds 
take alternative 
representation ignore attribute lists xml documents moment 
xml documents allows type information xml document reflected type representation significantly completely document conforms cyclic dtd reduces need numerous representation tags 
representation invented notion guarded recursive datatypes 
general speaking introduce type constructor xml takes type index form type xml xml documents conforming dtd denoted value type xml consists type part data part represents structure xml document represents data document 
skip generation representation readily done validator 
organize rest follows 
section introduce type index language dtd type index expressions formed represent dtds 
typeful tagless representation xml documents section examples show representation ectively support xml document processing 
section report measurements gathered processing xml document give brief explanation measurements 
mention related section conclude 
type index language dtd dependent ml language schema extending ml restricted form dependent types type index expressions required drawn constraint domain type index language call :10.1.1.41.548
dml extension denotes type index language 
section type index language dtd dtds 
ease presentation treat feature attribute lists dtds 
emphasize obstacle theory prevents handling attribute lists 
language dtd typed name sort type dtd avoid potential confusion 
syntax dtd follows 
sorts tag doc index exp index var 
ctx index subst 
tag xml assume exists corresponding type index constant dtd referred tag index name 
assume base sort tag tag indexes 
assume base sort doc name representation tag tag representation xml document distinguished start tag document 
name document type index simply doctype index term sort doc 
intuitively doctype index describe type content xml document 
sort tag doc variable ranging index expressions 
base doctype indexes empty content string content 
index expression tag index denoted doctype index denoted assume existence signature associates tag index doctype index doctype index contents placed tags name facilitate presentation may write 
respectively 
say content xml document doctype index structure content described intuitively doctype indexes doctype index element encloses content doctype index tags name tag index doctype index content doctype index doctype index content consisting content doctype index followed content doctype index doctype index possibly empty sequence contents doctype index doctype index nonempty sequence contents doctype index 
doctype index content empty doctype index instance dtd introduces tag indexes name email person addrbook associated doctype indexes name email person name email 
addrbook person note recursion may involved declaration dtd 
instance dtd recursion content folder element may contain folder elements 
soon clear recursion dtd poses serious di culties forming typeful representation xml documents 
dtd introduces tag indexes folder record associated doctype indexes folder record record folder record fig 

rules forming ind var 
contexts doc tag tag doc doc doc doc doc doc doc doc doc doc doc doc doc fig 

sorting rules general straightforward turn dtd list tags associate tags properly chosen doctype index omit ort formalize process 
index variable contexts 
addition assigning sorts index variables assume equalities index expressions index variable context 
index substitutions stands empty substitution extends extra link result applying defined standard manner 
judgment form mean formed 
addition judgment form doc mean assigned sort doc 
rules deriving judgments 
index expressions write mean syntactically 
please notice di erence rules deriving judgments form roughly means matches 
type index constraint constraint satisfied derivable 
expected proposition 
proposition 
derivable holds 
holds holds 
const const const 
const 
contains free occurrence contains free occurrence contains free occurrences contains free occurrences 
const 
const 
fig 

rules solving constraints hold holds 
rules solving type index constraints const const range tag indexes 
proposition justifies soundness completeness rules 
proposition 
type index constraint satisfied rules derive proof 
assume index variable 
proof follows induction lexicographic ordering number free index variables size type index language dtd defined language dml dtd defined dml language schema 
particular type checking dml dtd involves generating solving constraints form representing xml documents section typeful tagless representation xml documents allows type information xml document reflected type representation document possible significantly eliminate need representation tags representation document 
xml document represented pair rep dat rep represents structure document dat represents data datatype elem tag tag doc 
elem tag type rep doc unit string tag doc 
elem tag doc 
tag doc doc 
rep rep doc doc 
rep rep doc 
list rep doc 
list rep doc 
option rep datatype xml doc doc 
xml rep fig 

datatypes representing xml documents document 
representation guarded recursive datatypes syntactically dependent datatypes types may type indexes 
please find details datatypes 
presentation allow type variables equalities types declared index variable context 
string elem list list option fig 

functions tag type constructor takes type tag index doctype index form type tag 
introduce language construct 
expressions concrete syntax expression follows pe pe pe pe elem elem elem zhu elem cs bu edu elem elem hongwei xi fig 

example xml representation elem elem inr elem elem fig 

example xml representation assume pe representation concrete syntax 
intuitively order evaluate expression evaluate tag constant evaluate tag constant equals evaluate evaluate rule typing construct follows tag tag note typing judgment context assigning types free expression variables essential point typing rules simple types tag tag respectively assume typing evaluate tag constant order evaluated 
usual value constructors inl inr form values sum types assigned types inl inr employ pattern matching decompose values sum types 
declare datatype constructors elem rep xml 
instance syntax indicates value constructor elem associated type constructor elem assigned type tag doc tag elem value constructor associated type constructor rep assigned type doc doc rep rep rep intuitively type tag index doctype index elem type representing content doctype index rep type call proof term shows content doctype index represented value type xml type value representing content doctype index assume existence function type tag rep 
instance function readily constructed approach 
define functions doctype type value type rep 
note unit type 
tag index assign type elem tag tag constant corresponding define 
example values function tag constants xml document represented pair 
clearly fewer representation tags time 
example representation xml document conforms dtd defined page 
note shorthand values function tag constants follows show representation tags removed 
tag index say holds occurs 
instance addrbook person person name hold folder folder holds 
transitive closure complement instance addrbook name person person 
say tag index recursive holds 
define functions stands tag constant corresponding tag index example addrbook string string option list addrbook tag index assign type tag stands tag constant corresponding define 
instance string elem list list option fig 

functions xml documents represented represented follows example zhu cs bu edu hongwei xi second example elem inr elem far fewer representation tags involved 
approach xml document represented pair rep dat need representation tags dat xml document conforming dtd involves recursion recursive tag indexes doctype corresponding dtd 
processing xml documents encounter situations need select certain parts xml content criterion 
implement function select dml dtd selecting xml content element satisfying chosen criterion 
note type assigned select formally written follows doc tag doc 
xml tag elem bool elem option fun select xml tag pred fun aux fn dat val elem tag dat dat tag tag pred dat dat aux tag dat aux tag dat aux tag val aux tag fn dat tag tag pred elem tag dat elem tag dat dat dat aux pf pf val aux pf aux pf fn inl dat dat inr dat dat aux pf pf val aux pf aux pf fn dat dat case dat dat res res aux pf pf aux pf val pf fn dat dat aux pf val aux pf fn dat dat withtype doc 
rep elem option pf val aux pf fun flist flist dat case dat flist res res withtype list elem option flist withtype doc 
rep list elem option val xml pf dat xml aux pf dat withtype tag doc doc 
xml tag elem bool elem option fig 

selection function xml elements clearly implies select applied pair xml document tag constant 
note auxiliary function aux implementation select takes value type rep produce specialized function applied value type representing content doctype index means opportunity stage function aux generate cient specialized code run time search xml contents 
measurements report measurements gathered experiment processing xml document containing entries bibtex style 
main purpose experiment provide proof concept proposed typeful tagless representation xml documents implement functions processing xml documents 
software engineering benefits typeful representation xml documents implementing functions di cult measure directly 
generic representation section represent notice space spent storing representation tags 
hand typeful tagless representation section space spent representing structure document need representation tags required generic representation conforms dtd involving recursion processing xml document want collect elements enclosed tags 
instance may want collect titles books articles technical reports 
purpose need function similar function select defined previously 
selecting elements satisfying chosen criterion function selects 
implemented versions 

select function generic representation implementation similar select 

second select function typeful tagless representation section implementation similar select 

third staged version second run time code generation 
table lists various measurements times spent collecting title elements 
time unit second 
sys 
time gc time real time measured times spent collecting elements measurements similar nature 
note second third implementations approximately times faster respectively 
surprising implementations tell element potentially occur content inspecting structure content implementation needs inspect entire content 
intuition verified structure searched xml document available function generic representation represent 
time measurements similar gathered second implementation 
sys 
time gc time real time clearly measurements imply significant factor structure xml content available search function content 
regardless representation xml typeful typeless think information structure xml document available representation document facilitate cient search document 
measurements indicate run time code generation employed significantly speed search xml documents 
related various attempts construct functional programs processing xml documents 
approaches processing xml documents haskell 
approach uses generic representation xml documents type information documents making impossible types di erentiate xml documents conforming distinct dtds 
approach generic combinators implemented facilitate construction programs processing xml documents 
second approach represents xml document value special datatype automatically generated dtd xml document conforms 
approach xml documents conforming distinct dtds di erentiated type di cult impossible implement programs processing xml documents polymorphic dtds 
approach addressing issue generic programming proposed generic haskell xml compressor implemented generic haskell detailed description 
xduce functional language proposed types regular expressions formed represent dtds 
development type index dtd section bears resemblance regular expression types 
currently unclear type system xduce extended ectively handle polymorphism subtyping able achieve 
typed functional language xm facilitate xml document processing 
xm dtds encoded types row polymorphism support generic xml processing functions 
currently working di erent research line designing new language process xml documents primarily interested typeful embedding xml general purpose language dml extended guarded recursive datatypes case 
typeful representation xml documents proposed 
xml document represented program family domain specific languages guaranteeing generated documents formed valid certain extent language family languages implemented combinator library 
approach currently inherently incapable handling destruction xml documents typeful manner concern transformation xml documents needs implemented 
number proposed typechecking algorithms various xml processing languages database community 
instance pebble tree transducer general framework xml transformers type system tree automaton 
works largely di erent nature usually concerned actual implementation xml processing functions programming language 
approach representing xml documents allows type information xml document reflected type representation document obviates need representation tags required typeless representation 
approach able process xml documents typeful manner various known software engineering benefits presence types 
yields evidence support dependent types practical programming 
seek extend approach capture type information xml schema xml documents 
plan typeful tagless xml representation implement languages xquery xslt 
acknowledgments chen sa cui allyn joe kfoury rui shi jin ye providing valuable comments 

clarke jeuring 
scripting xml generic haskell 
proceedings de de brazil may 

clarke hinze jeuring loh meertens swierstra 
generic haskell 
available www generic haskell org 

hosoya pierce 
xduce typed xml processing language 
int workshop web databases webdb dallas tx 

jeuring 
generic programming xml tools 
technical report uu cs utrecht university 

meijer shields 
functional language constructing manipulating xml documents 

milner tofte harper macqueen 
definition standard ml revised 
mit press cambridge massachusetts 

milo suciu vianu 
typechecking xml transformers 
proceedings nineteenth acm sigmod sigact sigart symposium principles database systems pages 
acm 

oasis technical committee 
relax ng specification december 
available www oasis open org committees relax ng spec html 

peyton jones haskell non strict purely functional language 
available www haskell org feb 

simeon wadler 
essence xml 
proceedings th acm sigplan symposium principles programming languages pages new orleans january 

thiemann 
typed representation html xml documents haskell 
journal functional programming 

wallace runciman 
haskell xml generic combinators translation 
proceedings fourth acm sigplan international conference functional programming icfp volume pages 
acm press 

world wide web consortium 
extensible markup language xml 
version second edition 
recommendation october 
www org tr rec xml 

world wide web consortium 
xml schema part structures 
recommendation may 
available www org tr xmlschema 

world wide web consortium 
xml schema part datatypes 
recommendation may 
available www org tr xmlschema 

xi 
dependent types practical programming 
phd thesis carnegie mellon university 
pp 
viii 
available www cs cmu edu dml thesis ps 

xi chen chen 
guarded recursive datatype constructors 
proceedings th acm sigplan symposium principles programming languages pages new orleans january 

xi pfenning 
dependent types practical programming 
proceedings acm sigplan symposium principles programming languages pages san antonio texas january 
