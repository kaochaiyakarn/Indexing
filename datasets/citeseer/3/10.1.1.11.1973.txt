application level multicast content addressable networks sylvia ratnasamy mark handley richard karp scott shenker university california berkeley ca usa center internet research icsi 
currently proposed solutions application level multicast organize group members application level mesh routing protocol similar algorithm construct source rooted distribution trees 
global routing protocol limits scalability systems 
proposed solutions scale larger numbers receivers restricting multicast service model single sourced 
propose application level multicast scheme capable scaling large group sizes restricting service model single source 
scheme builds content addressable networks cans 
extending framework support multicast comes trivial additional cost structured nature topologies obviates need multicast routing algorithm 
deployment distributed infrastructure believe multicast scheme offers dual advantages simplicity scalability 
research projects propose designs application level networks nodes structured defined manner :10.1.1.111.1818:10.1.1.105.3673
content addressable networks cans system :10.1.1.140.3129
briefly content addressable network application level network constituent nodes thought forming virtual dimensional cartesian coordinate space 
node owns portion total space 
example shows dimensional occupied nodes 
described scalable fault tolerant completely distributed :10.1.1.140.3129
cans useful range distributed applications services 
example focus provide hash table functionality internet scales function useful indexing peer peer applications large scale storage management systems construction wide area name resolution services forth :10.1.1.140.3129
looks question deployment distributed infrastructures utilized support multicast services applications 
outline design application level multicast scheme built 
design shows extending framework support multicast comes trivial additional cost terms complexity added protocol mechanism 
key feature section describes design detail scheme exploit defined structured nature topologies virtual coordinate space eliminate need multicast routing algorithm construct distribution trees 
allows multicast scheme scale large group sizes 
design context cans particular believe technique exploiting structure systems applicable chord pastry tapestry designs :10.1.1.111.1818:10.1.1.105.3673
previous research proposals argued application level multicast tractable alternative network level multicast service described designs service applications :10.1.1.35.1680
majority proposed solutions example typically involve having members multicast group self organize essentially random application level mesh topology traditional multicast routing algorithm dvmrp construct distribution trees rooted possible traffic source 
routing algorithms require node maintain state node topology 
proposed solutions suited targeted applications global routing algorithm limits ability scale large thousands nodes group sizes operate conditions dynamic group membership 
bayeux application level multicast scheme scales large group sizes restricts service model single source :10.1.1.140.3129
contrast schemes multicast scale large group sizes restricting service model single source 
summary believe multicast scheme offers key advantages multicast scale large thousands nodes higher group sizes restricting service model single source 
best knowledge currently proposed application level multicast scheme operate regime 
assuming deployment infrastructure multicast trivially simple achieve 
suggest multicast simpler complex proposed solutions application level multicast 
point cans serve building block range internet applications services easily achievable service application level multicast 
remainder organized follows section reviews design operation 
describe design multicast service section evaluate design simulation section 
discuss related section conclude 
content addressable networks section design content addressable network 
gives brief overview design presents details evaluation :10.1.1.140.3129
authors state system multicast appropriate small sparse groups audio video conferencing virtual classrooms authors apply algorithm gossamer self organization infrastructure proxies node virtual coordinate zone fig :10.1.1.35.1680

example coordinate overlay nodes coordinate neighbor set sample routing path node point coordinate neighbor set fig 

example space node joins coordinate neighbor set coordinate neighbor set fig 

example space node joins design overview design centers virtual dimensional cartesian coordinate space torus 
coordinate space completely logical bears relation physical coordinate system 
point time entire coordinate space dynamically partitioned nodes system node owns individual distinct zone space 
example shows dimensional coordinate space partitioned nodes 
coordinate space provides level indirection talk storing content point space routing points space point refers node owns zone enclosing point 
example virtual coordinate space store key value pairs follows store pair key deterministically mapped point say coordinate space uniform hash function 
corresponding keyvalue pair stored node owns zone point lies 
retrieve entry corresponding key node apply deterministic hash function map point retrieve corresponding value point 
point owned requesting node immediate neighbors request routed infrastructure reaches node zone lies 
efficient routing critical aspect 
nodes self organize overlay network represents virtual coordinate space 
node learns maintains set neighbors ip addresses nodes hold coordinate zones adjoining zone 
set immediate neighbors serves coordinate routing table enables routing arbitrary points coordinate space 
describe basic pieces design routing construction coordinate overlay maintenance overlay briefly discuss simulated performance design 
simplicity illustrations show torus 
routing intuitively routing content addressable network works straight line path cartesian space source destination coordinates 
node maintains coordinate routing table holds ip address virtual coordinate zone neighbors coordinate space 
dimensional coordinate space nodes neighbors coordinate spans overlap dimensions abut dimension 
example node neighbor node coordinate zone overlaps axis axis 
hand node neighbor coordinate zones abut axes 
purely local neighbor state sufficient route arbitrary points space message includes destination coordinates 
neighbor coordinate set node routes message destination simple greedy forwarding neighbor coordinates closest destination coordinates 
shows sample routing path 
dimensional space partitioned equal zones average routing path length individual nodes maintain neighbors 
scaling results mean dimensional space grow number nodes zones increasing node state path length grows 
note different paths exist points space node neighbors crash node automatically route best available path 
node loses neighbors certain direction repair mechanisms described section rebuilt void coordinate space greedy forwarding may temporarily fail 
case node may expanding ring search locate node closer destination 
message forwarded closer node greedy forwarding resumed 
construction described entire space divided nodes currently system 
allow grow incrementally new node joins system allocated portion coordinate space 
done existing node splitting allocated zone half retaining half handing half new node 
process takes steps 
new node find node 

routing mechanisms find node zone split 

neighbors split zone notified routing include new node 
bootstrap new node discovers ip address node currently system 
functioning depend details done bootstrap mechanism yoid 
assume associated dns domain name resolves ip address bootstrap nodes 
bootstrap node maintains partial list nodes believes currently system 
simple techniques keep list reasonably current described 
join new node looks domain name dns retrieve bootstrap node ip address 
bootstrap node supplies ip addresses randomly chosen nodes currently system 
finding zone new node randomly chooses point space sends join request destined point 
message sent existing node 
node uses routing mechanism forward message reaches node zone lies 
current occupant node splits zone half assigns half new node 
split done assuming certain ordering dimensions deciding dimension zone split zones re merged nodes leave 
space zone split dimension 
key value pairs half zone handed transfered new node 
joining routing having obtained zone new node learns ip addresses coordinate neighbor set previous occupant 
set subset previous occupant neighbors plus occupant 
similarly previous occupant updates neighbor set eliminate nodes longer neighbors 
new old nodes neighbors informed reallocation space 
node system sends immediate update message followed periodic refreshes currently assigned zone neighbors 
soft state style updates ensure neighbors quickly learn change update neighbor sets accordingly 
figures show example new node node joining dimensional 
inferred addition new node affects small number existing nodes small locality coordinate space 
number neighbors node maintains depends dimensionality coordinate space independent total number nodes system 
node insertion affects number dimensions existing nodes important cans huge numbers nodes 
node departure recovery maintenance nodes leave need ensure zones occupied taken remaining nodes 
normal procedure doing node explicitly hand zone associated key value database neighbors 
zone neighbors merged departing node zone produce valid single zone done 
zone handed neighbor current zone smallest node temporarily handle zones 
needs robust node network failures nodes simply unreachable 
handled recovery algorithm described ensures failed node neighbors takes zone :10.1.1.140.3129
design improvements performance basic algorithm described previous section provides balance low node state dimensional space short path lengths dn hops dimensions nodes 
bound applies number hops path 
application level hops ip level hops latency hop substantial recall nodes adjacent miles ip hops away 
describe number design techniques primary goal reduce latency routing :10.1.1.140.3129:10.1.1.140.3129
particular relevance distributed binning scheme located nodes internet placed close coordinate space 
scheme node independently measures distance latency set known landmark machines joins particular portion coordinate space measurements 
simulation results indicate added mechanisms effective reducing path latency :10.1.1.140.3129
example show system nodes range link delay distributions route latency factor underlying ip network latency 
number neighbors node maintain achieve approximately details test section :10.1.1.140.3129
multicast section describe solution cans offer applicationlevel multicast service 
nodes members multicast group multicasting message requires flooding message entire 
shall describe section exploit existence defined coordinate space provide simple efficient flooding algorithms arbitrary sources having compute distribution trees potential source 
subset nodes members particular group multicasting involves pieces members group form group specific mini multicasting achieved flooding mini follows describe key components scheme group formation multicast flooding 
multicast group formation assist explanation assume existence subset nodes wish form multicast group achieve forming fig 

directed flooding number duplicates dimensions dimensions dimensions dimensions dimensions fig 

duplicate messages multicast additional mini call members underlying bootstrap formation follows wellknown hash function group address deterministically mapped point say node owns point serves bootstrap node construction joining group reduces joining done repeating usual construction process bootstrap node 
light weight nature bootstrap mechanisms expect bootstrap node overloaded join requests 
possibility multiple bootstrap nodes share load multiple hash functions deterministically map group name multiple points nodes corresponding points serve bootstrap node group bootstrap process failure bootstrap node affect operation multicast group prevents new nodes joining group period failure 
group corresponding group members 
note group formation process node maintains state groups member serves bootstrap node 
dimensional member node maintains state additional nodes neighbors independent number traffic sources multicast group 
multicast forwarding members group node belong associated multicasting achieved flooding different flooding algorithms conceivable example consider naive flooding algorithm node caches sequence numbers messages received 
receiving new message node forwards message neighbors course neighbor received message message cache 
type algorithm source reach group member requiring routing algorithm discover network ogy 
algorithm special structure fact run application level topology including random mesh topology generated :10.1.1.35.1680
problem type naive flooding algorithm result large amount duplication messages worst case node receive single message neighbors 
efficient flooding solution exploit coordinate space structure follows assume dimensional dimensions individual nodes neighbors dimension move forward move reverse dimension 
dimension node neighbor zone forward direction neighbor zone reverse direction example consider node node reverse direction dimension nodes abut forward direction dimension 
messages forwarded follows 
source node node generates new message forwards message neighbors 
node receives message neighbor dimension forwards message neighbors dimension neighbors dimension opposite side received message 
depicts directed flooding algorithm dimensional 

node forward message particular dimension message traversed half way space source coordinates dimension 
rule prevents flooding looping round back space 

node caches sequence numbers messages received forward message previously received perfectly partitioned nodes equal sized zones coordinate space algorithm ensures node receives message exactly 
imperfectly partitioned spaces node receive message neighbor 
example node receive message neighbors certain duplicates easily avoided normal operation node knows zone coordinates neighbors 
example consider nodes know node zone coordinates deterministic rule forwards messages rule eliminates duplicates arise flooding dimension 
rule works dimension nodes forward dimension 
node applying deterministic rule forward message neighbor dimension know node satisfy deterministic rule 
need case forwarding higher dimensions 
consider dimensional node application deterministic rule decides forward neighbor second dimension guarantee node eventually forward second dimension node satisfy deterministic rule receive packet dimension forward message second dimension 
example assume node decides deterministic rule forward node node receives message dimension forward message second dimension node nodes axis coordinates range receive message 
strategy eliminate duplicates eliminate large fraction flooding occurs dimension 
augment flooding algorithm deterministic rule eliminate duplicates arise forwarding dimension assume node received message dimension node dimension opposite direction received message 
consider corner zone dimension lowest coordinates dimensions forwards message contact corner example respect nodes corner consideration node lower leftmost corner zone 
forward messages forward direction dimension 
flooding algorithm measured simulation percentage nodes experienced different degrees message duplication caused imperfectly partitioned spaces 
plots number nodes received particular number duplicate messages system nodes cans dimensions ranging 
cases nodes receive duplicate messages nodes virtually receive single duplicate message 
considerable improvement naive flooding algorithm node receive number duplicates degree number neighbors node 
worth noting naive flooding algorithm robust message loss node receive message neighbors 
efficient flooding algorithm robust loss single message results breakdown message delivery subsequent nodes requiring additional loss recovery techniques 
problem different case traditional ip multicast application level schemes loss packet single link results packet lost downstream nodes distribution tree 
flooding algorithms duplication messages arises solutions multicast delivery construct single spanning tree rooted source traffic 
believe simplicity scalability gained having run routing algorithms construct maintain delivery trees worth slight inefficiencies may arise duplication messages 
flooding algorithm group member multicast message entire group 
nodes group members multicast en second rule flooding algorithm 
tire group discovering random group member relaying transmission random group member 
random member node discovered contacting bootstrap node associated group name 
performance evaluation rdp dimensions fig 

cumulative distribution rdp rdp physical delay ms nodes dimensions fig 

rdp versus physical delay group member physical delay ms nodes dimensions fig 

delay overhead versus physical network delay cumulative percentage nodes rdp dimensions fig 

cumulative distribution rdp averaged traffic sources section evaluate simulation performance multicast scheme 
adopt performance metrics evaluation strategy note relaying case different relayed transmissions done source specific multicast transmissions non member nodes relayed relayed member node :10.1.1.140.3129

previous studies application level schemes compare performance multicast native ip multicast naive unicast multicast source simply unicasts message receiver succession :10.1.1.35.1680
evaluation metrics relative delay penalty rdp ratio delay nodes case source node receiver multicast unicast delay underlying physical network link stress number identical copies packet carried physical link simulations performed transit stub ts topologies gt itm topology generator :10.1.1.22.6538
ts topologies model networks level hierarchy routing domains transit domains interconnect lower level stub domains 
relative delay penalty results multicast transmission single source represents performance typically seen different receiver nodes transmission single source 
simulations performed dimensions group size nodes 
source node selected random 
transit stub topologies link latencies ms intra transit domain links ms stub transit links ms intra stub domain links 
ip multicast unicast multicast achieve rdp value group members messages transmitted direct physical ip level path source receivers 
routing overlay network fundamentally results higher delays 
plots cumulative distribution rdp group members 
majority receivers see rdp group members high rdp 
explained scatter plot 
plots relation rdp observed receiver distance source underlying ip level physical network 
point indicates existence receiver corresponding rdp ip level delay 
seen nodes high values rdp low physical delay source low delay receivers source inflates rdp 
absolute value delay source overlay really high 
seen plots receiver delay source multicast versus physical network delay 
plot shows maximum physical delay ms maximum delay multicast ms receivers left hand side graph high rdp experience delays ms 
results single multicast transmission single source plots cumulative distribution rdp delays averaged multicast transmissions sources selected random 
node close terms physical delay sources averaging results transmissions sources helps reduce appearance inflated authors observation explanation group size th percentile th percentile fig 

rdp versus increasing group size number nodes stress multicast unicast fig 

number physical links stress occurs receiver close source 
see average node sees rdp 
plots percentile rdp values group sizes ranging single source 
scale group size follows take node transit stub topology topology add host source receiver nodes stub leaf nodes topology 
delay link host node stub node set ms 
scaling group size nodes re scaling density graph scaling backbone transit domain 
example group size nodes implies approximately stub nodes associated group member group size implies stub node approximately attached host nodes 
method scaling graph causes flat trend growth rdp group size source relative number close distant nodes stays pretty constant 
high density node increasingly close nodes binning technique cluster located nodes yields higher gains 
different methods scaling topologies yield different scaling trends 
significant differences system multicast multicast hard draw direct comparison systems indicates performance multicast small group sizes competitive system multicast 
link stress ideally stress different physical links somewhat evenly distributed 
native ip multicast link network stress exactly 
case unicasting source directly receivers links close source node high stress equal group size hop link source 
plots number nodes experienced particular stress value group size dimensional 
naive unicast small number links see extremely high stress multicast distributes stress evenly links 
plots worst case stress group sizes ranging nodes 
high stress case large group sizes described earlier scale group size scaling size backbone topology 
simulation transit stub topology nodes 
group size nodes nodes interconnected backbone topology nodes putting high stress backbone links 
repeated simulation transit stub topology nodes decreasing density graph factor 
plots worst case stress group sizes nodes cases multicast transit stub topologies nodes naive unicast multicast 
seen lower density worst case stress drops sharply 
example nodes worst case stress drops ts ts 
practice expect high densities group member nodes relative internet topology worst case stress multicast reasonable level 
intend looking techniques lower stress value 
group size multicast unicast fig 

stress versus increasing group size stress group size multicast ts unicast multicast ts fig 

effect topology density stress related case application level multicast tractable alternative multicast service put forth 
system multicast proposes architecture multicast small sparse groups 
system multicast builds mesh structure participating hosts constructs source rooted trees running routing protocol mesh 
authors study fundamental performance penalty associated application level model 
authors argue infrastructure support tackle problem content distribution internet :10.1.1.35.1680
scattercast architecture relies proxies deployed network infrastructure 
proxies self organize application level mesh global routing algorithm construct distribution trees 
terms solution application level multicast key difference system multicast scattercast potential multicast scale large group sizes 
yoid proposes solution application level multicast spanning tree directly constructed participating nodes constructing mesh structure 
resultant protocols complex tree approach results expensive loop detection avoidance techniques resilient partitions 
tapestry wide area overlay routing location infrastructure cans embeds nodes defined virtual address space :10.1.1.111.1818
bayeux application level multicast scheme leverages tapestry routing infrastructure :10.1.1.140.3129
join multicast session bayeux nodes send join messages source node 
source replies join request routing tree message tapestry overlay requesting node 
tree message set state intermediate nodes path source node new member 
similarly leave message existing member triggers prune message root removes appropriate forwarding state distribution tree 
bayeux multicast similar achieve scalability leveraging scalable routing infrastructure provided systems tapestry 
terms service model bayeux fundamentally supports source specific multicast multicast allows group member act traffic source 
terms design bayeux uses explicit protocol set tear distribution tree source node current set receiver nodes 
multicast contrast fully exploits structure messages forwarded requiring routing protocol explicitly construct distribution trees 
overcast scheme source specific reliable multicast overlay network :10.1.1.12.7544
overcast constructs efficient dissemination trees rooted single source traffic 
overlay network overcast composed nodes reside network infrastructure 
assumption existence permanent storage network distinguishes overcast cans systems described 
overcast cans composed entirely user machines form central authority 
content addressable networks potential serve infrastructure useful range applications 
evaluate scheme extends basic framework support application level multicast delivery 
believe key benefits multicast potential scale large groups restricting service model simplicity scheme assumption deployment distributed infrastructure content addressable network 
multicast scheme optimal terms distance terms path length flooding messages overlay structure 
intend looking simple clustering techniques reduce link stress caused flooding algorithm understanding fundamental limitations 
number important questions security loss recovery congestion control remain addressed context multicast 
acknowledgments ion stoica valuable input yan chen morley mao sharing data 

chawathe mccanne brewer architecture internet content distribution infrastructure service 
available www cs berkeley edu papers 

deering multicast routing datagram internetwork 
phd thesis stanford university dec 

francis yoid extending internet multicast architecture 
unpublished available www aciri org yoid docs index html apr 

hua chu rao zhang case system multicast 
proceedings sigmetrics santa clara ca june 

jannotti gifford johnson kaashoek toole overcast reliable multicasting overlay network 
proceedings fourth symposium operating systems design implementation san diego ca oct 

ratnasamy francis handley karp shenker scalable content addressable network 
proceedings sigcomm aug 

rowstron druschel pastry scalable distributed object location routing large scale peer peer systems 
available research microsoft com past 

stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications 
proceedings sigcomm aug 

zegura calvert bhattacharjee model internetwork 
proceedings ieee infocom san francisco ca may 

zhao kubiatowicz joseph tapestry infrastructure faulttolerant wide area location routing 
available www cs berkeley edu tapestry 

zhuang zhao joseph katz kubiatowicz bayeux architecture scalable fault tolerant wide area data dissemination 
proceedings eleventh international workshop network os support digital audio video new york july acm 
