oiled reason able ontology editor semantic web sean bechhofer ian horrocks carole goble robert stevens department computer science university manchester uk cs man ac uk img cs man ac uk ontologies play pivotal role semantic web provide source precisely defined terms communicated people applications 
oiled ontology editor easy frame interface time allows users exploit full power expressive web ontology language oil 
oiled uses reasoning support ontology design facilitating development ontologies detailed accurate 
ontologies increasingly important research topic 
result usefulness range application domains pivotal role set play development semantic web :10.1.1.111.5903
semantic web vision articulated tim berners lee web resources accessible humans automated processes automated agents roaming web performing useful tasks improved search terms precision resource discovery information brokering information filtering 
automation tasks depends elevating status web machine readable call machine understandable 
key idea data web defined linked way meaning explicitly interpretable software processes just implicitly interpretable humans 
oil language developed representation ontologies semantic web 
extends rdf schema rdfs proposed ontology knowledge representation language richer set modelling primitives 
similar rdfs web ontology language called daml developed part darpa daml project 
languages merged name daml oil differences approaches languages 
oil frame syntax facilitates tool building mapped expressive description logic dl facilitates provision reasoning services 
oiled ontology editing tool oil daml oil exploits features order provide familiar intuitive style user interface added benefit reasoning support 
main novelty lies extension frame editor paradigm deal expressive language highly optimised dl reasoning engine provide sound complete empirically tractable reasoning services 
reasoning terms deployed ontologies important semantic web reasoning support extremely valuable ontology design phase detect logically inconsistent classes discover implicit subclass relations 
encourages descriptive approach ontology design reasoner infer part subsumption lattice resulting ontologies contain fewer errors provide detailed descriptions exploited automated processes semantic web 
reasoning particular benefit ontologies large multiply authored facilitates ontology sharing merging integration considerations particularly important distributed web environment 
oil daml oil development oil resulted efforts combine best features frame dl knowledge representation systems time maximising compatibility emerging web standards 
intention design language intuitive human users provided adequate expressive power realistic applications early dls failed second count see 
resulting language combines familiar frame syntax derived part okbc lite knowledge model power flexibility dl boolean connectives unlimited nesting class elements transitive inverse slots general axioms 
language defined extension rdfs making oil ontologies partially accessible application 
frame syntax daunting domain experts dl style syntax facilitates modelling style ontologies start simple terms descriptive content gradually extended design refined users familiar language advanced features 
frame paradigm facilitates construction slot def part class def defined herbivore structural relation subclass animal inverse part slot constraint eats properties transitive value type plant slot constraint part value plant oil language example adaption tools ontoedit prot editors chimaera integration tool adapted oil daml oil :10.1.1.42.3423:10.1.1.42.3423
hand basing language underlying mapping expressive dl shiq provides defined semantics clear understanding formal properties 
particular class subsumption satisfiability problem decidable worst case exptime complexity 
mapping provides mechanism provision practical reasoning services exploiting implemented dl systems fact system 
oil extends standard frame languages number directions 
key ideas anonymous class description boolean combinations class descriptions occur class name ordinarily slot constraints list superclasses 
example herbivore described animal eats plants part plants 
points note universally quantified value type existentially quantified value slot constraints clearly differentiated constraint eats slot disjunction components anonymous class description case just single slot constraint 
addition asserted part slot transitive inverse slot part 
complete specification language 
oiled oiled simple ontology editor supports construction oil ontologies 
basic design heavily influenced similar tools prot ontoedit oiled extends approaches number ways notably extension expressive power reasoner :10.1.1.42.3423
oiled intended replacement tools current implementation oiled intended primarily prototype test demonstrate novel ideas compromises design implementation 
example tool provide key functionality oiled class panel collaborative ontology development versioning integration merging ontologies 
similarly powerful knowledge acquisition aspects tools prot ignored completely 
design concentrated demonstrating frame paradigm extended deal expressive modelling language reasoning support design maintenance ontologies 
central component oiled notion frame description 
consists collection superclasses list slot constraints 
similar frame systems 
oiled differs class name appear anonymous frame description arbitrary complexity 
addition boolean combinations frames classes appear 
contrast conventional frame systems general slot constraints superclasses class names 
able assert individuals slot fillers types constraints slot fillers asserted kinds constraint called facets 
include value type universal restrictions value existential restrictions explicit cardinality restrictions fillers class 
constraint clearly defined meaning removing confusion frame systems example clear semantics slot constraint interpreted universal existential quantification 
class definition specifies class name optional frame description see specification class defined primitive 
defined class taken equivalent description necessary sufficient conditions 
primitive class taken explicit subclass description necessary conditions 
specifi cation oil language classes multiple definitions 
oiled allowed classes single definition effect achieved equivalence axioms discussed 
slot definition gives name slot allows additional properties slot asserted names inverses 
domain range restrictions slot specified 
example constrain relationship parent domain range person asserting persons parents 
class descriptions domain range restrictions arbitrary class expressions anonymous frames boolean combinations classes frames extending expressivity traditional frame editors 
note context domain range restrictions global apply occurrence slot explicit implicit 
slot asserted transitive functional symmetric 
standard class definitions really restricted form subsumption equivalence axiom oiled axioms assert disjointness equivalence classes expected semantics coverings 
covering asserts instance covered class instance covering classes 
addition coverings said disjoint case instance covered class instance exactly covering classes 
axioms restricted class names involve arbitrary class expressions anonymous frames boolean combinations 
powerful feature exceeding expressivity traditional frame languages editors main reasons high complexity underlying decision problem 
limited functionality provided support description individuals intention oiled individuals class descriptions supporting production large existential knowledge bases supposed rdf rdfs directly purpose 
example may wish define class persons born italy italy class individual 
fact system support reasoning individuals treated reasoning purposes disjoint primitive classes 
ideal solution lead inferences lost particular resulting interaction individuals cardinality constraints 
possible infer persons citizens italy country citizens country 
currently underway extend fact reasoner deal explicitly individuals complete inference provided 
concrete datatypes string integers expressions concerning concrete datatypes min max ranges class descriptions 
fact reasoner support reasoning concrete datatypes oiled simply ignores concrete datatype restrictions reasoning ontologies 
theory concrete datatypes understood progress extend fact reasoner support concrete datatypes 
reasoning addition extended expressivity discussed oiled principal novelty reasoning check class consistency infer subsumption relationships 
reasoning services currently provided fact system dl classifier offers sound complete reasoning satisfiability subsumption classification dls shiq 
fact interesting features expressive logic particular shiq reasoner optimised tableaux implementation standard dl systems corba client server architecture 
principal reasoner appropriate functionality connectivity 
shiq language completely capture oil ontologies exception added features concrete datatypes strings numbers named individuals class descriptions 
mentioned individuals dealt treating pairwise disjoint atomic classes loss inferential power extending fact deal oil concrete datatypes relatively straightforward 
current version oiled reasoning performed single shot basis suitable point user connects reasoner requests verification ontology 
connection fact corba client server interface advantage fact servers running locally remotely provide service oiled users 
fact system reasoning engines shiq knowledge bases services available user choose connect faster reasoner verify ontology include inverse slots cardinality constraints 
current implementation simply informs user appropriate enhancements include automatic selection appropriate reasoning service 
verification requested ontology translated equivalent shiq knowledge base sent reasoner classification 
oiled queries classified knowledge base checking inconsistent classes implicit subsumption relationships 
results reported user highlighting inconsistent classes rearranging class hierarchy display reflect changes discovered 
fact oiled provide explanation inferences clearly useful ontology design 
shows effects classification part hierarchy derived tambis ontology 
verifying ontology number new hierarchy pre post classification tion relationships discovered due class definitions model 
particular see verification enzyme metal ion small molecule subclasses cofactor 
subsequent editing changes ontology communicated reasoner instantaneously explicitly requested user 
versions oiled may incorporate real time reasoning support simple interaction model described considered appropriate initial prototype 
oiled ontology editor easy frame interface time allows users exploit full power expressive web ontology language oil daml oil 
shown oiled uses reasoning support ontology design maintenance 
oiled prototype designed test demonstrate novel ideas lacks features required fully fledged ontology development environment provides support versioning working multiple ontologies 
reasoning support provided fact system incomplete oil extended concrete datatypes individuals include additional services explanation 
spite shortcomings oiled sufficiently developed useful tool demonstrate utility oil integration features frame dl web languages 
van heijst schreiber wielinga 
explicit ontologies kbs development 
int 
human computer studies 
mcguinness 
ontological issues knowledge enhanced search 
proc 
fois 
uschold gruninger 
ontologies principles methods applications 
eng 
review 
berners lee 
weaving web 
orion business books 
fensel oil nutshell 
proc 
ekaw lnai 
decker semantic web respective roles xml rdf 
ieee internet computing 
hendler mcguinness 
darpa agent markup language 
ieee intelligent systems jan 
bechhofer goble horrocks 
daml oil 
appear swws semantic web working symposium stanford ca august 
mcguinness fikes rice wilder 
environment merging testing large ontologies 
proc 
kr 
doyle patil 
theses knowledge representation 
artificial intelligence 
chaudhri okbc programmatic foundation knowledge base interoperability 
proc 
aaai 
staab maedche :10.1.1.42.3423
ontology engineering modeling concepts relations 
proc 
ecai workshop application ontologies problem solving methods 
grosso knowledge modeling millennium design evolution prot 
proc 
kaw 
horrocks sattler tobies 
practical reasoning expressive description logics 
proc 
lpar pages 
horrocks 
benchmark analysis fact 
proc 
tableaux pages 
baader hanschke 
scheme integrating concrete domains concept languages 
proc 
ijcai pages 
bechhofer horrocks patel schneider tessaris 
proposal description logic interface 
lambrix borgida lenzerini moller patel schneider editors proceedings international workshop description logics dl pages 
mcguinness borgida 
explaining subsumption description logics 
proc 
ijcai pages 

