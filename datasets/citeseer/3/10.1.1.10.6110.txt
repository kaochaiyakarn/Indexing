defining open source software project success kevin crowston james school information studies syracuse university syracuse ny usa crowston syr edu syr edu syr edu information systems success widely dependent variables information systems research 
identify range measures assess success open source software oss projects 
identify measures review literature consideration oss development process analysis opinions oss developers 
measure provide examples study oss development 
keywords open source software software development system success information systems success widely dependent variables information systems research 
surprisingly attention best measure mclean rai 
identify measures applied assess success open source software oss projects brief review literature consideration oss development process analysis opinions oss developers 
project success multidimensional construct especially oss goal range measures researchers consider 
says diversity effectiveness measures encouraged remainder organized follows 
ground investigations research context oss development 
briefly review literature success see measures adopted identify problems applying 
reconsider underlying vision system development identify additional success measures appropriate oss 
measure provide examples context study oss 
compare selection measures opinions oss developers expressed slashdot popular web discussion board slashdot org 
comparison suggests additional measures incorporated develop fuller understanding oss project success 
conclude making suggestions research 
research context oss broad term embrace software developed released sort open source license 
licenses range different features allow inspection software source code 
thousands oss projects spanning wide range applications 
due size success influence gnu linux operating system apache web server probably known hundreds projects fourth international conference information systems crowston defining open source software project success widespread including projects internet infrastructure sendmail bind user applications programming languages perl python gcc games paradise 
open source software free software senses free speech meaning code may freely redistributed reused oss projects free beer meaning software available download charge 
means oss developers contribute projects volunteers working common organization paid 
see characteristics implications applicability certain measures success 
important develop measures success oss projects reasons 
having measures useful oss project managers assessing projects 
cases oss projects sponsored third parties measures useful sponsors understand return investment 
second oss increasingly visible copied mode systems development 
millions users depend oss systems linux internet heavily dependent oss tools scacchi notes little known people communities coordinate software development different settings software processes practices organizational contexts necessary success eu nsf workshop priorities oss research identified need learning open source modes organization production applied areas concerted effort open source ghosh 
able learn teams working need definition working literature review oss form system development hunt success measures information systems literature 
note attempting exhaustive review extensive literature literature identify success measures relevant oss 
commonly cited model success developed mclean shown 
model suggests interrelated measures success system quality information quality user satisfaction individual impact organizational impact 
proposed related model includes system quality information quality perceived usefulness user satisfaction 
taken models suggest number possible measures applied oss 
system quality information quality user satisfaction fourth international conference information systems individual impact organizational impact 
mclean model success posted permission mclean information systems success quest dependent variable information systems research 
copyright institute management sciences institute operations research management sciences informs landing road suite md usa 
system information quality code quality studied extensively software engineering 
literature provides possible measures quality software including understandability completeness conciseness portability consistency maintainability testability usability reliability structuredness efficiency boehm liu 
list added quality system documentation 
code quality measures particularly applicable studies oss code publicly available 
studies examined dimension 
example 
suggested crowston defining open source software project success oss code generally quality 
mishra 
offer analytic model suggests factors contributing oss code quality number developers mix talent level dimension information quality applicable oss systems include data se 
user satisfaction user satisfaction measure system success 
example common ask stakeholders felt project success 
data available regarding user satisfaction oss projects 
example web system tracks releases oss net collects user ratings projects 
unfortunately ratings non random sample users take time volunteer rating making representativeness suspect 
furthermore observed scores low variance sample projects scores ranged 
users piece software simply bother enter ratings 
easily obtainable data related measures perceived ease usefulness davis 
opinions expressed project mailing lists potential source qualitative data facets questions representativeness data 
principle possible survey users collect satisfaction perceptions software 
properly poses serious methodological problem 
oss projects freely distributed multiple channels population users unknown making impossible create true random sample users 
respect oss differs greatly information systems developed organizational setting clearly defined user population 
situation different web non traditional systems environment web site users definition ones visit site making population effectively self identifying 
achieve effect oss may annoy users best solution build survey software 
example versions mozilla web browser include program offers report crashes collect feedback 
debate appropriateness mclean studies employ system indication information systems success 
software voluntary case oss potentially relevant indicator project success 
interesting data available 
avery debian popularity contest people debian org collects statistics usage software linux machines running debian distribution 
users install program collects reports usage information daily resulting statistics show packages installed 
unfortunately data collected nonrandom sample machines running particular linux distribution results representative broader population 
measuring actual may sufficient count actual potential number users software label popularity stewart 
rare projects numbers directly measured 
example conducts survey web server deployment news com archives webserver survey html estimates market share apache web server 
projects require kind network connection potentially measured way instant messaging peer peer file sharing clients approach widely applicable 
simple measure popularity number downloads project 
numbers readily available various sites 
course downloads result variance conversion ratio downloads unreliable indicator 
furthermore oss distributed multiple outlets line offline cds count single source quite unreliable measure total users 
particularly important channel distributions redhat debian 
distributions provide preselected bundles software packaged easy installation sold cd rom obviate need download 
popular software downloaded rarely installed users machines stable require download regular updates 
inclusion software distribution confound usefulness counts downloads selection processes undertaken distributions reflect expert judgment worth packages 
inclusion distributions independently important success measure 
fourth international conference information systems crowston defining open source software project success sources data reflecting users available 
provides popularity measure packages tracks better name interest step removed actual 
measure calculated geometric mean subscriptions counts page project information precise details see net faq view 
similarly sourceforge provides information number page views information pages projects supports 
may informative measure perspectives user 
particular openness oss means projects build top 
measure project success may projects 
package dependency information projects obtained package descriptions available various distributions package management systems 
analysis source code reveal reuse code project project identifying true origin difficult sco claim ownership parts linux kernel demonstrates 
individual organizational impacts final measures mclean model individual organizational impacts users 
considerable interest economic implications oss measures hard define regular projects doubly hard oss projects problems defining intended user base expected outcomes 
measures unusable studies individual oss projects 
summary summarize existing models information systems success suggest range potential success measures oss projects shown table 
number measures inapplicable difficult apply oss environment 
note measures vision system development organization take account unique characteristics oss development environment 
section examine process oss development detail identify additional potential measures success 
table 
success measures suggested literature review measure success indicators audience system information quality code quality understandability completeness conciseness portability consistency maintainability testability usability reliability structuredness efficiency documentation quality users developers user satisfaction user ratings opinions mailing lists user surveys users developers debian popularity contest number users downloads inclusion distributions popularity views information page package dependencies reuse code developers individual organizational impacts economic implications users developers fourth international conference information systems process oss development organizational setting system creation system crowston defining open source software project success section reexamine vision systems development underlying mclean success model identify additional measures oss project success 
mclean state model built considering process model just components creation system system consequences system shown graphically 
note measures included model focus consequences system right side open box process 
focus may appropriate traditional concern information systems research organizational implication unduly restrict range measures considered 
consequences 
process model underlying mclean model success choice measures influenced relative ease access environment compared development environment especially true packaged commercial software 
context oss researchers frequently faced opposite situation development process publicly visible environment difficult study identify 
reasons believe useful complement existing success measures ones take advantage availability data development process 
discussion examines measures success previously discussed information systems literature 
measures output systems development measures mclean model concern product systems development process systems quality information quality 
consider possible additional measures process step 
large number abandoned projects simply completing project may sign success 
oss projects continually development making difficult say completed 
faced problem crowston measured success progress project alpha beta stable status self reported sourceforge 
second commonly measure success project achieved goals 
assessment typically comparison project outcomes formal requirements specifications 
oss projects specifications 
scacchi examined process requirements engineering open source projects provided comparison traditional processes davis jackson 
argues formal process oss requirements developed terms software informalisms result agreed requirements documentation analyzed see project met goals 
scacchi ethnography suggests oss goals come process centered developers 
key measure oss may simply developer satisfaction project measured surveying developers 
developer community clearly delineated users making survey feasible 
oss developer surveys ghosh topic specifically 
projects great disparity contribution developers developers contribute bulk code mockus may desirable weight developers opinions forming assessment project 
measures process systems development mclean process model systems development implicitly treated event 
oss projects types projects development ongoing activity project continues release fourth international conference information systems crowston defining open source software project success early raymond 
words oss project characterized continuing process developers fixing bugs adding features releasing software 
characteristic oss development process suggests number possible indicators success 
number developers oss projects dependent volunteer developers able attract developers project going basis important success 
number developers involved project indicator success 
number developers measured ways 
oss development systems sourceforge list developers formally associated project 
examination mailing lists fora associated projects reveal number individuals actively participate 
level activity important sheer number developers contribution project 
level activity developers submitting code bug reports may useful indicator project success 
example sourceforge computes reports measure project activity activities developers 
researchers examine development logs evidence software written released 
cycle time measure related group activity time releases 
oss development strong community norm release early release implies active release cycle sign healthy development process project 
example provides vitality score stewart assesses project announcement progress site net faq view 
addition detailed examination bug fixing feature request fulfillment activities yield useful process data indicative project status 
processes involve interaction user community involve applying patches contributed code supplied non core developers 
bug reports feature requests typically managed system records developer community discussion permits labeling priority items includes informal voting mechanisms allow community express level interest bug new feature 
currently exploring analysis time close bugs implement requested features measure project success 
collect data bugs bug report data sourceforge extracted length time taken fix bugs characteristics bug priority issue area explicit developer assignment 
preliminary analysis bug project level data suggests measure shows interesting variance projects may useful measure dimension success 
project effects projects projects going important consider impact project abilities project team ability continue improve development process 
put current project help prepare organization challenges 
employment opportunities literature motivation oss developers suggests developers participate improve employment opportunities lerner tirole 
consider salary jobs acquired involvement particular project possible measures success 
example 
higher status apache project associated significantly higher wages 
measure indicators surveying developers 
single developer measure confounded innate talent training luck aggregating developers time may provide useful project level measure success 
fourth international conference information systems individual reputation crowston defining open source software project success similarly literature suggests developers participating oss projects rewarded reputation community reputation sufficient reward interaction 
suggests reputation measured analysis credits located source code terms 
alternative measures oss reputation include oss communities implementation web trust community site advogato www advogato org trust metric html developer status conferred peer review 
analyses kind measure face difficulty tying earning reputation success particular project 
knowledge creation projects lead creation new knowledge individuals group level 
participation project individual developers may acquire new procedural programming skills benefit projects 
effect measured surveying developers perceived learning 
addition knowledge view firm view firm case project structure integrate members knowledge products 
view project rules procedures norms existing products reflection knowledge created project activities 
knowledge creation measured observing qualitatively analyzing changes written rules procedures time may reflected transferred development systems oss project support sourceforge 
analysis development interactions support systems closely linked project give insight aspect project success 
summary summary consideration process developing oss suggests number additional measures indicative success projects 
measures summarized table 
note measures move back process model increasingly removed user 
may concern validity measures success success project attracts developers users 
develops high quality processes high quality code 
replies concern 
apparent disconnect may accurate representation reality oss projects developers frequently users 
second measures developed section viewed complements replacements conventional measures success 
variety measures provide richer picture status project 
measures measurement problems adopting portfolio measures prudent 
table 
measures suggested reexamination oss process measure success indicators audience project output movement alpha beta stable achieved identified goals developer satisfaction developers process number developers level activity developer user contributions number releases time releases time close bugs implement features outcomes project members individual job opportunities salary individual reputation knowledge creation developers users developers fourth international conference information systems crowston defining open source software project success open source developer opinions previous sections developed list possible success measures oss projects review literature consideration simple model oss development 
determine measures content validity indicators oss project success identify additional possible measures sought input oss developers 
goal study assess completeness validity list factors relative importance relations 
chose method generate range ideas support statistical inference 
section discuss data elicitation analysis techniques results analysis 
methods data submitted question moderators slashdot slashdot org web discussion forum 
slashdot attracts interest participation oss developers users 
question judged interest audience posted front page site 
data elicitation technique line focus group initial stage delphi study survey respondents nonrandom sample see respond earlier postings 
approach chosen match goal generating ideas success measures testing theory making inferences generalizable data 
elicit comments question posted slashdot april slashdot org article pl sid number discussions slashdot projects talk successful free software project leader tell things going place 
may obvious traditional definitions software project success inapplicable profit nearly impossible measure projects market share user satisfaction organizational impact 
organizational setting developers get feedback customers marketplace managers re apache look survey server usage rest 
re happy code 
suspect release early philosophy plays important role 
asking pick winners losers ranking projects understand developers look know things going re 
question received responses days 
participants individuals posting answers question identified developers contributors oss projects 
check qualifications searched sourceforge popular oss development site information posters 
sourceforge slashdot separate sites developers strong attachments user ids possible providing possible link systems 
example reasonable expect user id abcd identifies individual systems 
identified slashdot ids posters provided useful responses responses anonymous 
ids matched sourceforge id exactly matched bit research matching real name individual real names available slashdot posters sourceforge developers 
matched ids respectively listed members sourceforge projects half 
posters pointers non sourceforge oss projects slashdot information page information employment generally software developers 
data conclusive suggest number contributors study sufficient background oss developers able comment 
analysis transcript responses downloaded april content analyzed coders 
content analysis process carried atlas ti qualitative data analysis software package 
messages coded thematic unit unit analysis 
measure identified message coder selected text containing measure coded text categories coding scheme 
total thematic units identified coded responses postings contained multiple units remaining responses contain text addressing question posting containing advertisement 
content analysis process employed mixture deductive inductive procedures 
initial content analytic scheme literature review described 
process content analysis additional fourth international conference information systems crowston defining open source software project success themes emerged data 
saturation reached content scheme appendix raters agreed codes percent units 
felt level agreement sufficient purposes analysis identification measures compare literature review go refine definitions codes retrain coders increase agreement 
results outcome content analysis summarized table 
codes organized level hierarchy presentation detailed codes level table clustered meta categories level 
percent units included elements developers meta category indicating respondents felt project successful developers involved satisfied enjoyed process variety 
users meta category large number responses percent units indicated poster felt project successful satisfies users developers users involved discussions bug reports 
involvement users developers frequently mentioned accounting percent units 
project recognition codes percent units exceeding number responses indicating measure success accounted percent instances 
product quality percent process percent suggested measures success respondents 
note percentages reported completeness 
nonrandom sample contributors open data elicitation technique frequency response interpreted importance 
relative importance factors remains tested research 
table 
results content analysis slashdot responses level level frequency percentage user satisfaction involvement product meets requirements code quality portability availability process activity adherence process bug fixing time age developers involvement varied developers satisfaction enjoyment competition number users downloads recognition referral attention recognition spin offs influence total fourth international conference information systems crowston defining open source software project success discussion responses developers posting slashdot general agreement list success measures developed literature reexamination process 
analysis indicates developers personal involvement satisfaction enjoyment measures success project consistent view oss software scratches interestingly new themes emerge coding 
number respondents suggested recognition mention sites measure project success 
similarly suggested measure influence product project process oss groups commercial settings 
responses consistent literature oss developers motivations suggest recognition primary motivation involvement 
second category emerged level involvement users indicated involvement users submitting bug reports participating project mailing lists 
considered contributions developers responses reflect fact oss projects dependent help users identify problems post suggestions 
final category emerged data issue porting 
developers consider porting product different systems especially windows requests ports measure success product 
theme considered special case popularity 
surprising respondents say respondents mention measures success identified 
example authors suggested developers motivated chance learn get better job respondents mentioned factors 
possible explanation strong community norm altruism expressions self interest may restricted discussion non anonymous community moderated slashdot forum 
contribution developing body empirical research oss identifying collection success measures applied oss 
identified range possible measures applying popular model success detailed consideration vision software development underlying model 
furthermore identified data available particular measures 
checked list factors comparing opinions community members suggested additional measures identified raised questions 
emphasize view single measure final word success 
measures focus different aspects process expect offer different perspectives process 
suggest portfolio measures developing synthetic measures draw different perspectives 
multiple measures particularly interesting examining projects change emphasis measure different points evolution heo han 
authors gratefully acknowledge contribution content analysis process 
software process improvement organizational knowledge creation multiple case analysis proceedings rd hawaii international conference system sciences ieee computer society press los alamitos ca 
fourth international conference information systems crowston defining open source software project success boehm brown quantitative evaluation software quality proceedings nd international conference software engineering ieee computer society october pp 

crowston open source software projects virtual organizations competency software development iee proceedings software pp 

davis software requirements analysis specification prentice hall englewood cliffs nj 
davis perceived usefulness perceived ease user acceptance information technology mis quarterly pp 

mclean mclean model information systems success year update journal management information systems pp 

mclean information systems success quest dependent variable information systems research pp 

mclean information systems success revisited proceedings th hawaii international conference system sciences ieee computer society press los alamitos ca 
critical issues abandoned information systems development projects communication acm pp 

lawrie open source unpublished manuscript centre software reliability department computing science university newcastle newcastle tyne united kingdom date 
ghosh free libre open source software survey study report floss workshop advancing research agenda free open source software european commission brussels october available online www nl floss report htm 
liu software component quality assessment practice successes practical impediments proceedings th international conference software engineering ieee computer society pp 

knowledge theory firm strategic management journal winter pp 

enabling software development team performance requirements definition behavioral versus technical approach information systems research pp 

roberts slaughter fielding economic incentives participating open source software projects proceedings third international conference information systems applegate galliers eds barcelona december pp 

heo han performance measure information systems evolving computing environments empirical investigation information management pp 

herrmann motivation software developers open source projects internet survey contributors linux kernel unpublished manuscript university kiel kiel germany date 
jackson software requirements specifications practice principles prejudices addison wesley boston 
free software free science monday 
lerner tirole simple economics open source nber working national bureau economic research cambridge ma 
mishra prasad raghunathan quality profits open source versus closed source proceedings third international conference information systems applegate galliers eds barcelona december pp 

mockus fielding case study open source software development apache server proceedings international conference software engineering ieee computer society 
rai lang assessing validity success models empirical test theoretical analysis information systems research pp 

raymond cathedral bazaar monday 
scacchi software development practices open software development communities comparative case study position making sense bazaar workshop open source software engineering rd international conference software engineering toronto ontario available online opensource 
ucc icse scacchi pdf accessed september 
scacchi understanding requirements developing open source software systems iee proceedings software pp 

extension mclean model success information systems research pp 

staples dimensions information systems success communications association information systems 
levy maltz project success multidimensional strategic concept long range planning pp 

fourth international conference information systems crowston defining open source software project success code quality analysis open source software development information systems journal pp 

stewart exploratory study factors influencing level vitality popularity open source projects proceedings third international conference information systems applegate galliers eds barcelona pp 

appendix content analytic scheme level level description examples responses user satisfaction users product satisfied code serves need involvement users product involved interested submitting mailing lists bug reports forms contribution product meets product meets requirements requirement design code quality code structure documentation organized clear maintainable portability software portable compatible systems programs availability product available number avenues fourth international conference information systems piece software intended client user audience 
users happy 
useful 
second dozens email asking support asking contribute 
traffic developer user 
relatively continuous level input interest project 
developers don want develop users don want probably going best thing 
activity mailing list usually indicates size success project 
small error makefile causes sic people come back help compiling 
gives pretty estimate people package 
fit need designed 
supposed cleanly efficiently definition successful 
documented maintained 
code maintainable 
take look product 
supposed bugs 
stable relation time invested 
successful open source software tends greater scope sic original conception 
programs find programs interact modular fashion sic piped command simply support generic file formats xml csv 
win port win port project 
availability internet program say distributions 
crowston defining open source software project success level level description examples responses process activity project active fixing bugs writing updates documentation releases adherence process project goals objectives established process members adhere bug fixing bug reports attended fixed reasonable time time established software release new features age long group active developers contribution number developers contributing project varied developers developers different projects having different expertise contribute satisfaction developers satisfy need innovate develop code enjoyment developers enjoy working code group relation replaced competitive competition products number users users product addition developers downloads downloads product hasn update years chances perfect time fail 
process 
goals met 
testing coverage testing done 
milestones establish concrete goals start project timeline 
goals projects evolve issues addressed timely manner 
time measure progress 
things determine milestones develop feature lists project standard compare 
second dozens email asking support asking contribute traffic developer user 
relatively continuous level input interest project 
developers don want develop users don want probably going best thing 
software developers 
open source scratching right 
scratched 
sic success 
enjoy working 
successful 
clearly overwhelmingly superior predecessors 
people project developers 
successful 
project user base doomed fail 
project going succeed user base 
usually judge success project counting downloads site 
hundreds downloads run project cable modem connection isp hasn unhappy fourth international conference information systems crowston defining open source software project success level level description examples responses recognition referral sites projects organizations recognize refer project attention project attracted negative positive attention institutions spin offs new projects spins original project influence projects adopt code process project fourth international conference information systems links site third think indicator websites link site 
oh fourth optional measure success rights site result querying google java google see name project comes 
discussion google groups sign 
huge mega team lawyers patent infringement eff comes rescue 
stallman demands people call gnu adoption developers development group shows interested doing right 
