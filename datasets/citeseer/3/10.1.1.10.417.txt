tools privacy preserving distributed data mining chris clifton vaidya purdue university department computer sciences university st west lafayette usa clifton cs purdue edu privacy preserving mining distributed data numerous applications 
application poses different constraints meant privacy desired results data distributed constraints collaboration cooperative computing suggest solution toolkit components combined specific privacy preserving data mining applications 
presents components toolkit shows solve privacy preserving data mining problems 
keywords privacy security 
data mining operated data warehousing model gathering data central site running algorithm data 
privacy considerations may prevent approach 
example centers disease control may want data mining identify trends patterns disease outbreaks understanding predicting progression flu epidemic 
insurance companies considerable data useful unwilling disclose due patient privacy concerns 
alternative insurance companies provide sort statistics data traced individual patients identify trends patterns interest cdc 
privacy preserving data mining emerged address issue papers past years articles popular press 
approach alter data delivering data miner discussed issue 
second approach assumes data distributed sites sites cooperate learn global data mining results revealing data individual sites 
approach introduced data mining community lindell pinkas method enabled parties build decision tree party learning party data lin michael zhu purdue university department statistics university st west lafayette usa stat purdue edu revealed final decision tree 
developed techniques association rules clustering nearest neighbor classification working 
research subject come observations feel guide 
data mining approach interesting privacy preserving distributed data mining problems 
example na bayes classic approach classification 
way data partitioned parties varied privacy constraints communication computation considerations lead privacy preserving solutions na bayes 

may different data mining techniques perform similar computations various stages counting number items subset data shows association rule mining learning decision trees 
observation feel current approach developing publishing solutions individual privacy preserving data mining problems generate papers realworld solutions 
research necessary understand problem myriad solutions difficult transfer industry 
observation suggests answer build toolkit privacy preserving distributed computation techniques assembled solve specific real world problems 
component assembly simplified point qualifies development research practical privacy preserving distributed data mining widely feasible 
presents early steps building toolkit 
section describe privacy preserving computations 
section shows instances solve privacy preserving distributed data mining problems 
promising directions tools needed problems solved take research development 
discuss formalism enables capture analyze meant privacy preserving distributed data mining 
secure multiparty computation concept secure multiparty computation introduced 
basic idea secure multiparty com sigkdd explorations 
volume issue page putation computation secure computation party knows input results 
way view imagine trusted third party gives input trusted party performs computation sends results participants 
imagine achieve result having trusted party 
obviously communication parties required interesting computation ensure communication doesn disclose 
answer allow non determinism exact values sent intermediate communication encrypt randomly chosen key demonstrate party just input result generate predicted intermediate computation actual values 
shown possible general method scale data mining sized problems 
detailed discussion secure multiparty computation issue encourage readers want deep understanding material start article 
give examples privacy preserving computations show subtleties involved ensuring computation truly secure 

techniques efficient methods privacy preserving computations support data mining 
truly secure multiparty computations information results revealed provable bounds information released 
addition efficient communication computation cost significantly increased addition privacy preserving component 
means exhaustive list efficient secure multiparty computations 
examples 
sufficient allow privacy preserving solutions data mining problems section 
secure sum secure sum simple example secure multiparty computation 
include applicability data mining see sections demonstrates difficulty subtlety involved making proving protocol secure 
distributed data mining algorithms frequently calculate sum values individual sites 
assuming parties collusion method securely computes sum 
assume value vl computed known lie range 
site designated master site numbered 
remaining sites numbered site generates random number uniformly chosen 
site adds local value sends sum mod site 
value chosen uniformly number mod distributed uniformly region site learns actual value 
remaining sites algorithm site site site 
secure computation sum 
follows 
site receives vj mod value uniformly distributed learns 
site computes vj mod vj mod passes site 
site performs step sends result site 
site knowing subtract get actual result 
note site determine vl subtracting 
possible global result regardless computed site learned computation 
depicts method operates 
method faces obvious problem sites collude 
sites compare values send receive determine exact value vl 
method extended honest majority 
site divides vl shares 
sum share computed individually 
path permuted share site neighbor twice 
compute vl neighbors iteration collude 
varying number shares varies number dishonest colluding parties required violate security 
secure set union secure union methods useful data mining party needs give rules frequent itemsets revealing owner 
union items evaluated smc methods domain items small 
party creates binary vector th entry represents party th item 
point simple circuit corresponding vectors built securely evaluated general secure multi party circuit evaluation protocols 
data mining domain items usually large 
overcome problem simple approach commutative encryption 
encryption algorithm commutative encryption keys 
kn sigkdd explorations 
volume issue page determining union set items 
main permutation equations hold ek 
ek 
ek 
ek jn 
ek 
ek 
ek 
ek jn 
shared hellman encryption scheme satisfies equations commutative encryption scheme 
main idea site encrypts items 
site encrypts items sites 
equation holds duplicates original items duplicates encrypted items deleted 
due equation duplicates deleted 
addition decryption occur order permuting encrypted items prevent sites tracking source item 
algorithm evaluating union items algorithm example shown 
clearly algorithm finds union revealing item belongs site 
secure definitions secure multi party computation 
reveals number items exist commonly sites sites item common encrypted item duplicated times 
reveal items truly secure computation site giving input trusted party reveal count 
allowing innocuous information leakage number items owned sites allows algorithm sufficiently secure lower cost fully secure approach 
prove size intersections final result revealed 
assuming count duplicated items part final result secure multiparty computation proof possible 
secure size set intersection consider parties having sets items common domain 
problem securely compute cardinality size intersection local sets 
formally parties 
pk having local sets 
sk wish securely compute sk 
parametric commutative way hash function 
way getting hash function commutative public key encryption hellman algorithm finding secure union items require number sites union set initially encryption rules sites site si newarray xp encrypt ei union set xp site encrypts items adds global set 
site encrypts items encrypted site tuple union set rp encrypt ei mp union set union set rp mp union set rp mp union set check duplicates rp union set union set eliminate duplicate items decrypting site site decrypts item get union items union set rd decrypt di union set union set rd permute elements union set return union set sigkdd explorations 
volume issue page throw away decryption keys 
commutative encryption described detail section 
parties locally generate public key pair ei di commutative encryption scheme 
throw away decryption keys 
party encrypts items key passes parties 
receiving set encrypted items party encrypts item permutes order sending party 
repeated item encrypted party 
encryption commutative resulting values different sets equal original values item sets 
need count number values encrypted itemsets 
done party 
parties able know items intersection set encryption 
complete protocol shown algorithm 
algorithm securely computing size intersection set require sites require site local set si generate commutative encryption key pair ei di throw away decryption keys needed 
si steps newarray encrypt ei permute array random order send array site mod receive array site mod newarray encrypt ei permute array random order send site mod prevents site seeing encrypted items sites produce array containing encrypted items arrays received 
site sends site site broadcasts result scalar product scalar product powerful component technique 
data mining problems essentially reduced computing scalar product 
example reducing association rule mining scalar product computation discussed section 
problem formally defined follows assume parties vector cardinality 
xn 
yn 
problem securely com pute scalar product vectors xi yi 
lot research problem rise different solutions varying degrees accuracy communication cost security 
note techniques limited party version problem easily extended general case 
problem modeled secure multiparty computation solution cryptographic techniques oblivious transfer 
efficient 
key insight linear combinations random numbers disguise vector elements computations remove effect result 
solution briefly explained algorithm 
method reveal information just input result efficient suited large data sizes useful data mining 
algorithm computing scalar product require number sites site site require site vector cardinality require 
xn require 
yn decide random matrix site generates random vector cardinality 
rn generates addition matrix multiplying generates sends message site generates scalar product yi generates matrix sends message site generates subtraction factor ri generates required scalar product reports scalar product second message general party case scalar product easily stated problem solutions suggested far easily extended solve general problem 

applications demonstrate protocols standard data mining algorithms distributed data mining algorithms 
association rules horizontally partitioned data address association rule mining defined :10.1.1.40.6757:10.1.1.40.6757
set items db set transactions transaction db itemset itemset transaction contains association rule implication form 
rule support transaction database db transactions db contain rule confidence transactions db sigkdd explorations 
volume issue page contain contains itemset items called itemset 
problem mining association rules find rules support confidence higher specified minimum support confidence 
horizontally partitioned database transactions distributed sites 
global support count item set sum local support counts 
itemset globally supported global support count bigger total transaction database size 
global confidence rule sup sup 
itemset called globally large itemset globally supported 
aim distributed association rule mining find rules global support global confidence higher user specified minimum support confidence 
fdm algorithm fast method distributed mining association rules 
summarize 
candidate set generation intersect globally large itemsets size locally large itemsets get candidates 
classic apriori candidate generation algorithm get candidate itemsets 

local pruning local candidate set scan local database compute local support locally large included locally large itemset list 

itemset exchange broadcast locally large itemsets sites union locally large itemsets superset possible global frequent itemsets 
clear supported globally supported site 
site computes apriori support items union locally large itemsets 

support count exchange broadcast computed supports 
site computes globally large itemsets 
algorithm avoids disclosing individual transactions expose significant information rules supported site 
goal approximate efficiency algorithm requiring site disclose locally large itemsets support counts transaction sizes 
algorithm basically modifies outlined method 
itemset exchange step secure union algorithm section get secure union 
step globally supported itemsets easily secure sum 
goal determine support exceeds threshold learn exact support alter algorithm slightly 
sending vi site site performs secure comparison site see vi support threshold met 
confidence large itemsets method 
emphasize goal totally secure method union step eliminated 
secure union method gives higher efficiency provably controlled disclosure minor information number duplicate items candidate sets 
validity disclosed information reduced noise addition 
basically site add fake large itemsets actual locally large itemsets 
pruning phase fake items eliminated 
gives brief oversimplified idea method works 
full discussion 
association rules vertically partitioned data mining private association rules vertically partitioned data items partitioned itemset split sites done extending existing apriori algorithm 
steps apriori algorithm done locally sites 
crucial step involves finding support count itemset 
securely compute support count itemset check support greater threshold decide itemset frequent 
easily mine association rules securely 
consider entire transaction database boolean matrix represents presence item column transaction row correspondingly represents absence 
key insight follows support count itemset exactly scalar product vectors representing sub itemsets parties 
compute scalar product securely compute support count 
full details 
way finding support count follows party represent sub itemset set si contains transactions support sub itemset :10.1.1.40.6757
size intersection set local sets si gives support count itemset 
done protocol section 
protocols assume semi honest model parties involved honestly follow protocol try infer additional information data receive protocol 
result parties allowed give spurious input protocol 
party allowed give spurious input probe determine value specific item parties 
example party gives input 

result scalar product tells malicious party party transaction corresponding 
attacks type termed probing attacks 
protocols currently suggested literature susceptible probing attacks 
better techniques malicious model needed guard 
em clustering privacy preserving em algorithm secure clustering 
dimensional case shown extension multiple dimensions straight forward 
convention notations table indexes mixture component data points distributed sites respectively 
denotes iteration step 
conventional em mixture models clustering assume data yj partitioned sites 
site nl data items summation sites gives obtain global estimation step requires global sigkdd explorations 
volume issue page table convention symbols 
total number mixture components clusters 
total number distributed sites 
total number data points 
nl total number data points site yj observed data points dimensional case 
mean cluster dimensional case 
variance cluster dimensional case 
estimate proportion items cluster zij cluster membership 
yj cluster zij zij 
values ij yj ij ij yj ijl yj ijl ijl yj observe second summation equations local ail bil cil ijl yj ijl ijl yj easy see sharing values sites reveal yj 
furthermore necessary share nl ail bil cil compute global sums 
section shows compute summations securely 
estimation step giving partitioned computed locally global ijl fi yj fi yj yj data point site step step iterate 
ij algorithm summarizes method 
log ifi 

concluding remarks believe feasible construct toolkit privacy preserving computations build data mining techniques 
seen subtleties involved simply performing secure computation results perform reveals intermediate algorithm secure em algorithm 
site nl randomly initialize 
secure sum section compute nl threshold criterion log likelihood met site calculate il tions 
secure sum calculate site uses compute il equa broadcasts sites 
site calculates il equation 
secure sum calculate site calculates broadcasts sites 
site nl update ijl equation 
calculate log likelihood difference equation 
information part final results 
resulting data mining technique longer meets definition secure multiparty computation state privacy preserving 
solution define intermediate information part results enabling secure multiparty computation proof revealed 
evaluate real results extra intermediate information violate privacy constraints resulting technique sufficient 
gives ability guarantee controlled disclosure 
difficult iterative techniques 
intermediate results iterations may reveal lot information showing violate privacy may difficult impossible 
general approach may provide solution split intermediate results randomly determined shares combining shares computation 
open determine data mining techniques partitioned independently computed shares result converge results combined give desired global result 
working framework generalized uses distortion protect data privacy estimate original distribution 
assume calculating function site containing data site containing data contaminated respectively 
classical optimization problem find minimized ar ar maximized 
generalizing framework allow better assess level privacy security protocol build analytical results interest 
continuing area develop new tools building privacy preserving data mining techniques demonstrate new applications technology 
challenges area defining sigkdd explorations 
volume issue page privacy constraints 
example potential difficulties imagine scenario data mining results violate privacy 
secure multiparty computation definitions solve problem 
look forward seeing expanded research field 

agrawal srikant :10.1.1.40.6757
fast algorithms mining association rules 
proceedings th international conference large data bases santiago chile sept 
vldb 
agrawal srikant 
privacy preserving data mining 
proceedings acm sigmod conference management data pages dallas tx may 
acm 
atallah du 
secure multi party computational geometry 
seventh international workshop algorithms data structures wads providence rhode island usa aug 

cheung han ng 
fu fu 
fast distributed algorithm mining association rules 
proceedings international conference parallel distributed information systems pdis miami beach florida usa dec 
clifton vaidya 
defining privacy data mining 
kargupta joshi sivakumar editors national science foundation workshop generation data mining pages baltimore md nov 
du atallah 
privacy preserving cooperative scientific computations 
th ieee computer security foundations workshop pages nova canada june 
eisenberg 
false numbers data try mine truth 
new york times july 

randomization techniques association rule mining 
sigkdd explorations dec 
goldreich micali wigderson 
play mental game completeness theorem protocols honest majority 
th acm symposium theory computing pages 

privacy algorithms technology protections personal data impersonal 
oct 
ioannidis atallah 
secure protocol computing dot products clustered distributed environments 
international conference parallel processing vancouver british columbia aug 
clifton 
privacy preserving distributed mining association rules horizontally partitioned data 
acm sigmod workshop research issues data mining knowledge discovery dmkd pages june 
lindell pinkas 
privacy preserving data mining 
advances cryptology crypto pages 
springer verlag aug 
pinkas 
cryptographic techniques data mining 
sigkdd explorations dec 
hellman 
improved algorithm computing logarithms gf cryptographic significance 
ieee transactions information theory 
schneier 
applied cryptography 
john wiley sons nd edition 
vaidya clifton 
privacy preserving association rule mining vertically partitioned data 
eighth acm sigkdd international conference knowledge discovery data mining pages july 
yao 
generate exchange secrets 
proceedings th ieee symposium foundations computer science pages 
ieee 
sigkdd explorations 
volume issue page 
