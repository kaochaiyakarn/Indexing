peer peer authentication distributed single sign service william josephson emin gun sirer fred schneider department computer science cornell university ithaca new york 
distributed service authentication networks 
allows application servers delegate client identity checking combinations authentication servers reside separate administrative domains 
authentication policies enable system tolerate expected classes attacks failures 
novel partitioning associated authentication principals means system scales increases numbers users services 
central tenet peer peer paradigm relocation servers clients 
limit distinction clients servers completely attenuated resulting system peers communicating peers 
cornell single sign subject explores peerto peer tenet design network wide authentication service 
particular authentication functionality removed application servers relocated clients new authentication servers 
partitioning functionality clients authentication servers designed support scalability distribute trust enabling resulting service tolerate attacks failures 
application servers outsource authentication possible support single persistent user identity 
users authenticate supported part arpa radc afosr defense advanced research projects agency darpa air force research laboratory air force material command usaf agreement number national science foundation intel microsoft 
views contained authors interpreted necessarily representing cial policies endorsements expressed implied organizations government 
william josephson supported national science foundation graduate research fellowship 
pronounced italian corso past participle verb run broadly italian convey sense forward motion 
word corso variously refer course university means forward motion learning avenue means making forward motion city 
access participating service 
called single sign service benefits users longer need keep track multiple identities associated secrets 
administrative burden required running application server reduced expensive tasks validating users ensuring confidentiality user secrets recovering lost passwords delegated authentication servers 
single user identity link actions performed user di erent applications 
microsoft passport com example single sign service 
universally embraced partly users developers application servers wary having single administrative entity charge 
comparison delegates authentication set servers potentially managed separate administrative entity 
application server authentication policy specifies subsets authentication servers checking user identity order trust result 
user establishes identity visiting subset authentication servers selects satisfy authentication policies application servers visit 
authentication policy application server specifies subsets authentication servers su cient demands variously checking user knows establish identity user ii embodies assumptions independence respect failures attacks authentication servers subsets 
authentication servers exhibit independence managed separate entities physically separated communicate narrow bandwidth channels execute diverse software 
authentication problem concerned authenticating users programs services henceforth refer principals 
public key kx corresponding private key kx associated principal public key kx said speak kx allows principal check validity signatures produced message signed kx denoted kx message encrypted key denoted introduce distinct notations symmetric versus encryption rely type encryption key disambiguate 
employ common locution says sending kx problem solved manner application server trusts establish binding public key kx principal asserts kx speaks kinds name spaces involved 
application server local name space 
access control list associates privileges names clients may refer clients names 
authentication server local name space 
implements means check principal previously registered name 
single global name space server authentication server application server implements correspondence names local name space 
global name space defined hold holds 
application server stores mapping names names authentication server translates request principal authenticated global name task checking satisfies identify requirements name holds single unstructured global name space theory su ced 
richer structure measure naming autonomy authentication servers application servers prove useful integrating legacy systems 
structure allows short human readable names interacting authentication servers applications servers time enables principals di erent application servers linked global name space 
specifying authentication policies authentication policy disjunction satisfied principal provided sub policy satisfied 
sub policy specifies set authentication servers 
threshold constraint satisfied principal provided authentication servers certify identity requirements language authentication policies equivalent positive boolean formulas authentication server outcomes threshold constraint equivalent conjunction authentication server outcomes 
consequently authentication policies range surprisingly rich sets requirements 
conjunction implicit meaning sub policy allows application server stipulate various di erent means employed certifying principal identity 
example implement known factor authentication sub policy specify threshold constraint include servers di erent identity check 
conjunction implicit meaning sub policy allows application server defend compromised authentication servers specify independence assumptions 
sub policy involving threshold parameter set authentication servers come control adversary adversary cause satisfied 
disjunction form authentication policy sub policies threshold parameter sub policies supports fault tolerance failure authentication servers won necessarily render unsatisfiable 
disjunction sub policy threshold constraints implement distribution trust constructs allow authentication policy specify trust placed ensemble members 
absence negation authentication policies worth noting 
negation inability principal certified authentication server lead successful authentication negation 
omitting negation policy language crashes denial service attacks create bogus 
protocols authentication protocols involved authenticating principal application server setup protocol application server client authentication protocol protocol client access application server 
authorization policy application server sub policy threshold constraint application server setup protocol 
protocol application server enlist authentication servers support authentication policy 
sub policy exist protocol creates step fresh private key speaks collections servers implemented storing authentication server distinct share sharing authentication servers create partial signatures combined threshold cryptography yield statement signed signature checked application server corresponding public key sent step 
client authentication protocol 
protocol principal name acquire authentication token subsequent accessing application servers 
authentication token corresponds authentication token asserts says kc speaks sharing secret comprises set shares shares allow recovery fewer reveal information 
enlist 
authentication servers create sharing 
fresh private key exist 

public key fig 

application server setup protocol 

request authentication policy 

select sub policy private key kc 
request partial certificate principal public key kc sub policy starting time st time satisfies identity checks kc st 
compute authentication token kc st responses received step servers fig 

client authentication protocol 
application server sub policy definition trust says matters client authentication speaks subsets containing servers validity authentication token checked application server authentication token signed sent corresponding public key step application server setup protocol 
authentication token derived step threshold cryptography partial certificates obtained step authentication servers authentication token valid satisfies identity tests authentication servers impose 
client access application server 
preceding protocols establish authentication token corresponding public key authenticate client application server need mutual authentication presence trusted third parties trust placed integrity network access patterns clients impact design client 
initiate authentication 

ns ks ca nonce ns 
check signature ks ca 
ii compute hash nc ns random nonce nc 
nc ns kc st 
extract nc ns ks reconstruct nc ns names ii check validity public key kc authentication token kc st iii check validity authentication token current time day 
fig 

client access application server 
access application server protocol 
deliberately leaves protocol unspecified applications choose protocol suits assumptions needs 
outlines simple client access application server protocol 
protocol initiates connection step replies step nonce ns certificate ks signed certification authority ca containing public key ks server trusts step provide raw material symmetric session key mutually authenticated secure channel done picking random nonce nc step computing hash nc ns step sending nc ns kc encrypted ks step 
notice signature kc associates client presence ns rules replay names rule man inthe middle attacks nc serves source randomness symmetric key 
establishes identity sending step authentication token asserts says kc speaks valid token containing kc matching signature kc allows henceforth conclude messages kc says come 
session key mutually authenticated secure channel derived 
actual deployment today internet build ssl predominantly authenticate application servers clients 
authenticate clients application servers su ces keys installed ssl layer application servers authentication tokens ssl session setup client authentication 
protocol architecture notes associated authentication divided application servers authentication servers clients way supports scalability dimensions number clients number application servers 
application server setup protocol amount application server function sub policies comprise authentication policy function application servers clients client authentication protocol amount client determined authentication policies satisfy unrelated number applications servers client visits anticipate application servers share authentication policies 
cost application server running client access application server protocol independent number authentication servers complexity authentication policy 
notice size authentication token una ected number application servers policy satisfy number authentication servers involved constructing token 
contrast naive implementation single sign client obtain separate certificate authentication server certificates application server checking 
implementation status date built core cryptographic components 
implemented digital signatures threshold rsa verifiable secret sharing rab preliminary measurements indicate performance favorable distribution computational burden 
particular benchmarked performance critical path consisting client authentication client access application server protocols ghz pentium 
rsa signatures threshold sharing bit rsa key client authentication protocol took msec client access application server protocol took sec 
burden computation falls client decreasing chance authentication server bottleneck 
time spent client access application server protocol evenly divided partial signature generation authentication servers full signature construction client 
performing communication authentication servers parallel latency authentication msec typically delays identity tests authentication servers 
related prior decomposing network wide authentication services focused delegation distribution trust 
kerberos sns performs user authentication wide area networks ties user identity centralized authentication server 
oasis org liberty alliance project lib industry orts aimed supporting federated network identity 
oasis provides standard framework exchange authentication authorization information liberty uses framework delegate authentication decisions enable linking accounts di erent authentication servers 
authentication policy systems corresponds disjunction sub policies specifying single authentication server 
policymaker bfl flexible system securely expressing statements principals networked setting 
supports far broader class authentication policies 
authentication policymaker implements rich class authorization schemes 
policymaker application server check certificate involved authentication authorization decisions 
contrast check application server constant time factored relocated set protocols authentication servers clients 
borrows gong threshold implementation kerberos gon coca insights proactive secret sharing threshold cryptography help defend distributed services attacks called mobile adversaries oy attack compromise control server limited period moving :10.1.1.51.8577
ultimately expect deploy protocols proactive recovery sharing discussion broadly deployed enable market authentication servers specialize various forms identity checks compete price functionality performance security 
authentication servers comprising deployment receive payment application server principal authentication basis 
markets provided participants rewarded orts discouraged disruptive actions 
protocols described allow participants subvert market various forms free riding 
instance application server policy certificates issued application server paying authentication policy supported 
problem avoided restricting dissemination public keys sub policies issuing application servers pay 
keys leaked third parties simply revoked reissued 
acknowledgments 
lorenzo alvisi provided prompt informative answers questions relating cultural aspects 
martin abadi provided helpful comments client access application server protocol 
bfl matt blaze joan feigenbaum jack lacy 
decentralized trust management 
proceedings ieee symposium security privacy pages may 
frankel gemmell mackenzie yung 
proactive rsa 
lecture notes computer science 
gon gong :10.1.1.51.8577
increasing availability security authentication service 
ieee select 
areas commun june 
lib liberty alliance project 
liberty alliance identity architecture march 
org organization advancement structured information standards 
www oasis open org february 
oy ostrovsky yung 
withstand mobile virus attacks 
proceedings th acm symposium principles distributed computing pages 
rab rabin 
simplified approach threshold proactive rsa 
lecture notes computer science 
sns steiner neuman schiller 
kerberos authentication service open network systems 
proceedings winter usenix conference february 
zhou schneider van renesse 
coca secure distributed line certification authority 
acm transactions computing systems november 
