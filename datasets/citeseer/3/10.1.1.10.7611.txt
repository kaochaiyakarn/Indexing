generating non redundant association rules mohammed zaki computer science department rensselaer polytechnic institute troy ny phone fax email zaki cs rpi edu traditional association rule mining framework produces redundant rules 
extent redundancy lot larger previously suspected 
new framework associations novel concept closed frequent itemsets 
number non redundant rules produced new approach exponentially length longest frequent itemset smaller rule set traditional approach 
experiments hard real synthetic databases confirm utility framework terms reduction number rules user terms time 
association rule discovery successful important mining task aims uncovering frequent patterns transactions composed data attributes items 
results form rules different sets items metrics joint conditional probabilities antecedent consequent judge rule importance 
widely recognized set association rules rapidly grow unwieldy especially lower frequency requirements 
larger set frequent itemsets number rules user redundant 
true sparse datasets dense datasets simply feasible mine possible frequent itemsets generate rules itemsets 
datasets typically finds exponential number frequent itemsets 
example finding long itemsets length uncommon 
prior research mentioned traditional association rule mining framework produces rules extent redundancy lot larger previously suspected 
new framework association rule mining novel concept closed frequent itemsets 
set closed frequent itemsets orders magnitude smaller set frequent itemsets especially real dense datasets 
time don loose information maximal frequent itemsets closed itemsets uniquely determine set frequent itemsets 
show new framework produces exponentially length longest frequent itemset fewer rules traditional approach loss information 
framework allows mine dense datasets possible find frequent itemsets 
experiments hard dense databases confirm utility framework terms reduction number rules user terms time 
rest organized follows 
section describes association mining task 
section introduces new notion closed itemsets 
section looks problem eliminating redundant rules 
discuss related section 
experimentally validate theoretical results section conclude section appendix contains proofs theorems read discretion reviewer 
association rules association mining task stated follows set items set transaction identifiers tids 
input database binary relation 
item occurs transaction write alternately 
typically database arranged set transactions transaction contains set items 
example consider database shown running example 

second transaction represented pairs transactions taken form binary relation 
set called itemset set called tidset 
convenience write itemset tidset 
itemset denoted number transactions occurs subset 
itemset frequent support equal user specified minimum support minsup value minsup 
association rule expression itemsets 
rule joint probability transaction containing confidence conditional probability transaction contains contains 
rule frequent itemset frequent 
rule confident confidence greater equal user specified minimum confidence minconf value 
jane austen database items distinct database items christie sir arthur doyle frequent itemsets minimum support support mark twain generating frequent itemsets itemsets cw ac aw cd ct acw dw tw act cdw ctw association rule mining consists steps find frequent itemsets generate high confidence rules 
finding frequent itemsets step computationally intensive 
running example consider shows bookstore database customers buy books different authors 
shows frequent itemsets transactions 
maximal inclusion frequent itemsets subset frequent itemset 
number items 
search space enumeration frequent itemsets exponential 
prove problem finding frequent set certain size np complete reducing balanced bipartite clique problem known np complete 
assume bound transaction length task finding frequent itemsets essentially linear database size complexity case number transactions length longest frequent itemset number maximal frequent itemsets 
frequent itemset acw support item sets cw ac aw acw possible rules acw cw ac aw aw ac cw cw association rules conf ac tw cw tw ac aw act dw tw ctw association rules conf generating confident rules ac cw generating confident rules step relatively straightforward rules form generated frequent itemsets forall provided 
example frequent itemset generate possible rules support 
process shown pictorially 
notice need access support subsets generate rules 
obtain possible rules need examine frequent itemset repeat rule generation process shown shows set association rules confidence equal minconf 
itemset size potentially confident rules generated 
follows fact consider subset itemset antecedent empty full itemset 
complexity rule generation step number frequent itemsets longest frequent itemset 
closed frequent itemsets section develop concept closed frequent itemsets show set necessary sufficient capture information frequent itemsets smaller cardinality set frequent itemsets 
partial order lattices introduce lattice theory concepts see 
set 
partial order binary relation relation reflexive 
anti symmetric implies 
transitive implies 
set relation called ordered set denoted pair 
write 
ordered set subset upper bound 
lower bound 
upper bound called join denoted greatest lower bound called meet denoted write join meet 
ordered set lattice elements join meet exist 
complete lattice exist 
finite lattice complete 
called join semilattice join exists 
called meet semilattice meet exists 
denote power set set subsets 
ordered set isa complete lattice meet set intersection join set union 
example partial orders set possible itemsets set possible complete lattices 
set frequent itemsets hand meet semilattice 
example consider shows semilattice frequent itemsets example database 
itemsets meet guaranteed frequent join may may frequent 
follows known principle association mining itemset frequent subsets frequent 
example frequent 
join frequent frequent 
closed itemsets binary relation input database association mining 

mappings define galois connection partial orders power sets respectively 
denote pair anda pair illustrates mappings 
mapping set transactions tidset contain itemset similarly itemset contained transactions example 
terms individual elements example 
galois connection satisfies properties act acw cdw ctw act acw cdw ac aw cd ct cw dw tw ac aw cd ct cw dw tw meet semi lattice frequent itemsets example wehave example set 
function closure operator satisfies properties extension monotonicity idempotency subset called closed 
theorem denote composition mappings dually closure operators itemsets respectively 
define closed itemset itemset closure example itemset closed 
closed tidset tidset example tidset closed 
mappings closure operators satisfy properties extension monotonicity idempotency 
call application round trip 
illustrates round trip starting itemset 
example extension property say subset closure conclude closed 
hand idempotency property say map itemset tidset contains map tidset back set items common tids tidset obtain closed itemset 
matter round trips extend closed itemset 
example round trip obtain closed itemset perform round trip weget closed itemset exists closed tidset property conversely closed tidset exists closed itemset 
see closed items transactions items transactions galois connection mappings items transactions closed itemset round trip fact plugging weget closed 
dually closed 
example seen closed itemset associated closed tidset 
closed itemset closed tidset pair called concept 
acw cw cdw ct cdt galois lattice concepts cd acw cw cdw ct frequent concepts cd concept subconcept denoted iff iff 
denote set possible concepts database 
ordered set complete lattice called galois lattice 
example shows galois lattice example database total concepts 
element concept greatest element concept 
notice mappings closed pairs itemsets anti isomorphic concepts large cardinality itemsets small vice versa 
concept generated single item called item concept similarly concept generated single transaction called tid concept example item concept 
tid concept 
relabel concept item concept tid concept equivalent obtain lattice minimal labelling item tid labels shown bold letters 
relabelling reduces clutter lattice diagram provides excellent way visualizing structure patterns relationships exist items 
shall see benefit section talk high confidence rules extraction 
easy reconstruct concepts minimal labeling 
example consider tid concept obtain closed itemset append item labels reachable 
conversely obtain closed tidset append labels reachable see labels reachable path 
forms closed itemset 
see labels reachable concept shown 
giving concept matches frequent closed itemsets vs frequent itemsets section defining join meet operation concept lattice see formal proof set concepts database relation complete lattice join meet join meet join meet multiple concepts simply take unions joins 
example consider join concepts 
hand meet 
similarly perform multiple concept joins meets example 
define support closed itemset concept cardinality closed tidset 
closed itemset concept frequent support minsup 
shows frequent concepts minsup tidset cardinality 
frequent concepts form meet semilattice meet guaranteed exist join may 
frequent itemsets determined join operation frequent item concepts 
example join item concepts doesn exist frequent 
hand frequent 
furthermore support cardinality resulting concept tidset theorem itemset support equal support closure theorem states frequent itemsets uniquely determined frequent closed itemsets frequent concepts 
furthermore set frequent closed itemsets bounded set frequent itemsets typically smaller especially dense datasets 
sparse datasets worst case sets may equal 
illustrate benefits closed itemset mining contrast showing set frequent itemsets showing set closed frequent itemsets concepts 
see closed frequent itemsets contrast frequent itemsets 
example clearly illustrates benefits mining closed frequent itemsets 
rule generation recall association rule form 
support equals confidence 
interested finding high support minsup high confidence rules minconf 
widely recognized set association rules rapidly grow unwieldy 
section show closed frequent itemsets help form generating set rules association rules inferred 
small easily understandable set rules user selectively derive rules interest 
section showed support itemset equals support closure suffices consider rules frequent concepts 
words rule exactly rule observation follows concept lattice sufficient consider rules adjacent concepts rules inferred transitivity theorem transitivity frequent closed itemsets discussion consider cases association rules confidence tw tw ctw ac cw ac acw cw rules confidence cdw ct rules confidence cd theorem association rule confidence theorem says confidence rules directed super concept sub concept arcs precisely cases 
example consider item concepts 
rule confidence rule 
note take itemset closure sides rule obtain rule closed itemsets antecedent consequent disjoint case prefer write rule rules exactly 
shows rules adjacent concepts confidence 
notice arcs labeled rule 
cases rules box equivalent prefer rule general 
example consider rules 
prefer rule obtained adding items antecedent consequent 
words general rules 
fact say addition antecedent consequent effect support confidence rule 
case call rules redundant 
theorem stand confidence rule set rules rules 
rules equivalent confidence rule redundant 
apply theorem rules considered 
find rule similarly rules see rules get closed itemset process obtain rules correspond arc tid concept item concept general rule redundant 
set general rules constitutes generating set rule set confidence rules inferred 
note address question eliminating generating set may exist rules generating set derived rules set 
words claim minimality generating set topic forthcoming 
shows generating set bold arcs includes general rules arcs left produce rules written disjoint antecedent consequent 
example general rule 
antecedent consequent disjoint required definition discard rules 
confidence rules derived generating set application simple inference rules 
example obtain rule transitivity rules 
rule obtained augmentation rules easily verify confidence rules produced frequent itemsets shown generated set rules produced closed frequent itemsets 
rules confidence turn problem finding generating set association rules confidence 
need consider rules adjacent concepts 
time rules correspond arcs arcs confidence rules rules go sub concepts super concepts 
ct tw ctw aw aw ct ac ac tw acw ac cw acw cw rules confidence cdw ct cd consider 
edge item concepts corresponds rules non adjacent concepts derived transitivity 
example obtain value rules 
wehave 
theorem stand confidence rule set rules rules 
rules equivalent rule redundant 
theorem differs confidence rules account arcs 
consider rules produced arc item concepts find rules support rule confidence 
general rule redundant 
similarly arc get general rule rules box redundant 
set general rules forms generating set rules rules inferred 
bold arrows constitute generating set rules due transitivity property consider arcs confidence minconf confident level 

rules combining generating set rules shown generating set rules shown obtain generating set association rules minsup minconf 
easily verified association rules shown example database derived set 
closed itemset approach produce rules versus rules produced traditional association mining 
see contrast consider set possible association rules mine 
minsup value confidence maximum support itemset frequent subset support confidence value 
possible association rules versus generating set rules rules complexity rule generation traditional vs closed itemset framework complexity rule generation traditional framework exponential length longest frequent itemset total number frequent itemsets 
hand closed itemset framework number non redundant rules linear number closed itemsets 
see savings possible closed frequent itemsets lets consider case longest frequent itemset length subsets frequent 
traditional association rule framework consider frequent itemset subsets rule antecedents 
total number rules generated approach hand number non redundant rules produced closed itemsets follows 
consider extreme cases best case closed itemset subsets support longest frequent itemset 
rules itemsets confidence 
closed itemset approach doesn produce rule just lists closed itemset frequency implicit assumption possible rules itemset confidence 
corresponds reduction number rules factor hand worst case frequent itemsets closed 
case confidence rules confidence rules point upwards subsets immediate supersets 
subset length rules length subsets set 
total number rules generated get reduction number rules factor asymptotically exponential length longest frequent itemset 
related lot research developing efficient algorithms mining frequent itemsets 
algorithms enumerate frequent itemsets 
rule generation produces redundant rules 
methods generate maximal frequent itemsets 
maximal itemsets rule generation support subsets required confidence computation 
easy data scan gather supports subsets problem redundant rules 
methods simply possible find rules dense datasets may easily frequent itemsets length 
contrast set closed frequent itemsets orders magnitude smaller set frequent itemsets generate rules dense domains 
proposed charm algorithm mining closed frequent itemsets fraction time takes mine frequent itemsets apriori method 
pruning discovered association rules forming rule covers 
problem constructing generating set studied previously 
addresses problem mining interesting rules 
address issue rule redundancy complimentary 
number algorithms proposed generating galois lattice concepts 
algorithms adapted enumerate frequent concepts 
studied small datasets 
framework builds adapts 
characterization generating set different experimental verification 
early version appeared experiments shown 
experimental evaluation experiments described performed mhz pentium pc mb memory running redhat linux 
algorithms coded 
database items avg 
record length records chess connect mushroom pumsb pumsb table database characteristics table shows characteristics real synthetic datasets evaluation 
real datasets obtained ibm almaden www almaden ibm com cs quest demos html 
datasets pumsb pumsb sets taken uc irvine machine learning database repository 
datasets contain census data 
pumsb pumsb items support 
mushroom database contains characteristics various species mushrooms 
connect chess datasets derived respective game steps 
typically real datasets dense produce long frequent itemsets high values support 
chose synthetic datasets available ibm almaden benchmarks testing previous association mining algorithms 
datasets mimic transactions environment 
usually synthetic datasets sparse compared real sets modified generator produce longer frequent itemsets 
traditional vs closed itemset framework consider tables compares traditional rule generation framework new closed itemset approach proposed 
tables shows experimental results number dimensions total number frequent itemsets vs closed frequent itemsets total number rules number rules number rules number rules chess traditional closed traditional closed minimum confidence minimum confidence pumsb star mushroom traditional closed traditional closed traditional closed traditional closed minimum confidence number rules number rules number rules connect traditional closed traditional closed minimum confidence pumsb traditional closed traditional closed minimum confidence synthetic traditional closed traditional closed minimum confidence number rules traditional vs closed itemset framework number itemsets database sup len freq closed ratio chess chess connect connect mushroom mushroom pumsb pumsb pumsb pumsb table number itemset sup minsup len longest frequent itemset traditional vs new approach total time taken mining frequent itemsets apriori closed frequent itemsets charm 
table shows number closed frequent itemsets smaller set frequent itemsets 
support values look got reductions shown ratio column cardinality factor 
lower support values gap widens rapidly 
noteworthy charm finds closed sets fraction time takes apriori mine frequent itemsets shown table 
reduction running time ranges factor times gap widens lower support 
table shows reduction number rules possible consequent lengths generated drastic ranging factor times 
incidentally ratios agreement complexity formula section 
example consider mushroom dataset 
support longest frequent itemset length 
complexity predicts reduction number rules factor close ratio got empirically 
similarly support expect reduction empirically 
table shows restrict traditional rule generation single item consequent reduction closed itemset approach substantial ranging factor factor reduction reduction lower supports 
results possible rules obtained setting minconf equal minsup 
shows effect minconf number rules generated 
shows majority rules high confidence particularly result traditional rule generation framework 
new approach produces rule set orders magnitude smaller 
general possible mine closed sets charm low values support infeasible find frequent itemsets 
dense datasets generate rules may possible traditional approach 
demonstrated formal way supported experiments datasets known fact traditional association rule framework produces rules running time database sup len apriori charm ratio chess chess connect connect mushroom mushroom pumsb pumsb pumsb pumsb table running time sup minsup len longest frequent itemset redundant 
proposed new framework closed itemsets drastically reduce rule set user succinct manner 
opens lot interesting directions 
example plan concept lattice interactive visualization exploration large set mined associations 
keep mind frequent concept lattice concise representation frequent itemsets rules generated 
generating possible rules plan generate rules demand user interests 
issue developing theory extracting base minimal generating set rules 
agrawal mannila srikant toivonen verkamo 
fast discovery association rules 
fayyad editors advances knowledge discovery data mining pages 
aaai press menlo park ca 
bayardo 
efficiently mining long patterns databases 
acm sigmod conf 
management data june 
bayardo agrawal 
mining interesting rules 
th acm sigkdd intl 
conf 
knowledge discovery data mining august 
brin motwani ullman tsur 
dynamic itemset counting implication rules market basket data 
acm sigmod conf 
management data may 
davey priestley 
lattices order 
cambridge university press 
ganter wille 
formal concept analysis mathematical foundations 
springer verlag 
gunopulos mannila 
discovering specific sentences randomized algorithms 
intl 
conf 
database theory january 
possible rules rules consequent database sup len traditional closed ratio traditional ratio chess chess connect connect mushroom mushroom pumsb pumsb pumsb pumsb table number rules vs rules consequent length sup minsup len longest frequent itemset 
lin kedem 
pincer search new algorithm discovering maximum frequent set 
th intl 
conf 
extending database technology march 

implications dans un 
math 
inf 
sci 
hum 
savasere omiecinski navathe 
efficient algorithm mining association rules large databases 
st vldb conf 
toivonen klemettinen ronkainen nen mannila 
pruning grouping discovered association rules 
wkshp 
statistics machine learning discovery databases april 
zaki 
hsiao 
charm efficient algorithm closed association rule mining 
technical report computer science dept rensselaer polytechnic institute october 
zaki ogihara 
theoretical foundations association rules 
rd acm sigmod workshop research issues data mining knowledge discovery june 
zaki parthasarathy ogihara li 
new algorithms fast discovery association rules 
rd intl 
conf 
knowledge discovery data mining august 
appendix theorem proofs theorem denote composition mappings dually closure operators itemsets respectively 
proof established result see 
theorem itemset support equal support closure proof support itemset number transactions appears exactly cardinality tidset 
prove theorem show closure operator satisfies extension property hand closure operator turn implies due property galois connections 
theorem transitivity frequent closed itemsets proof rules 
wehave 
similarly subset relationships get 
consider product confidences matches confidence third rule 
theorem association rule confidence proof means occurs transaction occurs transaction 
put way tidset occurs subset tidset occurs 
precisely confidence rule 
theorem stand confidence rule set rules rules 
rules equivalent confidence rule ones redundant 
rules general proof consider rule support rule confidence 
theorem property galois connections consider rule support 
step follows fact support itemset equals support closure 
need show denominator confidence formula equals 
denominator 
step follows fact theorem stand confidence rule set rules rules 
rules equivalent rule rules general ones redundant 
proof consider rule support rule confidence 
show confidence 
consider denominator 

consider numerator 

property closure operator 

