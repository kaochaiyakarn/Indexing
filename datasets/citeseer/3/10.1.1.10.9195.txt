measurement study available bandwidth estimation tools jacob strauss mit edu dina dk mit edu mit computer science artificial intelligence laboratory available bandwidth estimation useful route selection overlay networks qos verification traffic engineering 
years seen surge interest available bandwidth estimation 
tools proposed evaluated simulation limited number internet paths great uncertainty performance tools internet large 
introduces spruce simple light weight tool measuring available bandwidth compares existing tools igi pathload different internet paths 
comparison focuses accuracy failure patterns probe overhead implementation issues 
verifies measured available bandwidth comparing multi router traffic grapher mrtg data measuring tool responds induced changes available bandwidth 
measurements show spruce accurate pathload igi 
pathload tends overestimate available bandwidth igi insensitive bottleneck utilization large 
categories subject descriptors network operations network monitoring general terms measurement experimentation performance keywords available bandwidth research conducted part iris project project iris net supported national science foundation cooperative agreement 
ani support defense advanced research projects agency darpa space naval warfare systems center san diego contract 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
imc october miami beach florida usa 
copyright acm 
frans kaashoek kaashoek mit edu 
years seen strong interest techniques estimating available bandwidth internet path 
path diversity overlay networks creates need estimating available bandwidth paths method choosing best route 
overlay assume cooperation sender receiver necessary probing techniques 
available bandwidth estimation tools emerged pathload topp ptr igi delphi pathchirp :10.1.1.137.121
introduces spruce simple tool estimating available bandwidth compares existing tools pathload igi 
comparison previous provides wide scale internet experiments evaluate current tools measuring available bandwidth 
reported experiments igi pathload topp limited internet wide paths :10.1.1.137.121
contrast measurements involve different internet wide paths 
collected measurements planetlab nodes ron testbed targeting paths variety capacity hop count latency load link technology 
available bandwidth abw link unused capacity 
see definitions 
time link idle transmitting packets maximum speed definition available bandwidth ought look average unused bandwidth time interval ai ci dt ai available bandwidth link time ci link capacity traffic 
available bandwidth path minimum available bandwidth traversed links 
spruce spread pair unused capacity estimate tool hosts measure available bandwidth 
samples arrival rate bottleneck sending pairs packets spaced second probe packet arrives bottleneck queue packet departs queue 
spruce calculates number bytes arrived queue probes inter probe spacing receiver 
spruce computes available bandwidth difference path capacity arrival rate bottleneck 
similarly igi delphi spruce designed probe gap model see assumes sin term definition capacity maximum rate packets transmitted link narrow link link smallest capacity path available bandwidth link unused capacity tight link link minimum available bandwidth path definitions terms capacity available bandwidth narrow link tight link 
tight link may different narrow link path 
example consider link path traverses link mb mb ethernet 
narrow link path 
quite possible ethernet congested unused bandwidth case tight link mb ethernet 
gle bottleneck 
experiments show spruce works realistic environments robust deviations assumption 
results measurements planetlab ron summarized follows spruce measurements relative error smaller 
pathload igi experienced larger errors 
pathload consistently estimated available bandwidth igi respond properly injected cross traffic overestimated available bandwidth paths 
pathload generated mb probe traffic measurement 
contrast average probe traffic generated igi kb generated spruce kb 

design space related keshav packet pair earliest attempt estimate available bandwidth measurements conducted hosts 
packet pair assumes fair queuing routers result estimate available bandwidth current internet 
cprobe pioneering tool estimating available bandwidth measurements 
cprobe doesn assume fair queueing 
pair packets cprobe sends short train icmp packets computes available bandwidth probe traffic divided interval arrival icmp echo icmp echo train 
similar approach 
dovrolis show techniques measure metric called asymptotic dispersion rate adr related available bandwidth 
set tools distinguished main approaches underlying estimation techniques 
probe gap model pgm exploits information time gap arrivals successive probes receiver 
probe pair sent time gap reaches receiver time gap 
assuming single bottleneck queue empty departure probe pair arrival second probe time taken bottleneck transmit second probe pair cross traffic arrived shown probe gap model pgm estimating available bandwidth 

time transmit cross traffic rate cross traffic capacity bottle neck 
available bandwidth spruce igi delphi example tools gap model 
probe rate model prm concept self induced congestion informally sends probe traffic rate lower available bandwidth path arrival rate probe traffic receiver match rate sender 
contrast probe traffic sent rate higher available bandwidth queues build inside network probe traffic delayed 
result probes rate receiver sending rate 
measure available bandwidth searching turning point probe sending receiving rates start matching 
tools pathload pathchirp ptr topp probe rate model :10.1.1.137.121
cope burstiness cross traffic pgm prm tools train probe packets generate single measurement 
pgm prm approaches assume fifo queuing routers path cross traffic follows fluid model non probe packets infinitely small packet size average rates cross traffic change slowly constant duration single measurement 
probe gap model assumes single bottleneck narrow tight link path 
assumptions necessary model analysis tools assumptions hold 
literature rich related directly estimate available bandwidth 
paxson defines relative available bandwidth metric indicates degree congestion path directly provide estimate available bandwidth 
pathchar bprobe pchar nettimer clink pathrate tools estimating capacity 
treno cap estimate tcp fair rate path 
zhang examined stationarity tcp throughput measurements internet paths 
cases tcp rates varied factor course hour 
paxson routes internet hosts stable scales ranging hours days 
results important indicate repeat experiments back back expect similar results 

spruce spruce probe gap model pgm described 
pgm tools spruce assumes single bottleneck narrow tight link path see definitions 
results internet measurements reported show spruce fairly accurate realistic internet settings assumption hold 
design spruce computes available bandwidth equation see requires parameters 
spruce assumes known sets sender measures receiver 
sender spruce sets intra pair time gap transmission time data packet bottleneck link 
choice ensures queue empty departures probe packets pair requirement equation 
receiver spruce measures transmission time cross traffic probe 
information known capacity bottleneck link spruce calculates number bytes arrived queue probes pair inter probe spacing capacity bottle neck 
plugging numbers eq 
gives spruce sample measurement available bandwidth 
improve accuracy estimate spruce performs sequence probe pair measurements reports average 
spruce sets inter gap time probe pairs output exponentially distributed function average larger resulting poisson sampling process 
decision appealing reasons 
simple model assumes single bottleneck non fluid cross traffic cross traffic close capacity cross traffic sequence measurements poisson sampling process sees average cross traffic rate 
second poisson sampling ensures spruce non intrusive 
particular sending sequence packet pairs packet train allows control inter pair gap independently intra pair gap 
large gap spruce non intrusive 
tools send packet trains high peak rates may disturb concur rent tcp flows train short duration 
spruce computes available bandwidth time average sample measurements 
default value 
implementation spruce consists separate user level sender receiver programs 
sender takes arguments dns name receiver known capacity path 
tested spruce linux freebsd systems 
spruce sender sends series pairs udp packets 
spruce sets intra pair gap transmission time packet path narrow link 
sender adjusts average inter pair gap ensure probe rate minimum kb path capacity 
example mb path average inter pair gap set ms resulting probe rate kb gaps packets pair small sender program reads system clock polling loop releasing processor voluntarily pair transmitted 
operating system sender program packets pair program receives processor gives sending second packet restarts 
receiving kernel timestamps received packet timestamp socket option 
spruce receiver calculates timestamps computes estimate available bandwidth path eq 

receiver averages individual samples sliding window packets 
spruce characteristics properties distinguish spruce available bandwidth tools 

spruce uses poisson process packet pairs packet trains chirps 
form sampling allows spruce non intrusive robust explained 
carefully choosing value spruce ensures bottleneck queue empty probes pair requirement correctness gap model 

spruce separates capacity measurement measurement 
assumes capacity measured easily capacity measurement tools capacity stays stable measuring available bandwidth 
environments spruce designed selecting paths overlay networks assumption holds 

spruce doesn overwhelm narrow link path probe rate traffic minimum kb capacity narrow link 

apart number pairs average measurements spruce tunable parameters 

absolute accuracy evaluate ability pathload igi spruce compute available bandwidth real network settings 
focus tools cover spectrum underlying models area pathload pure prm tool spruce pure pgm tool igi borrows models 
igi finds turning point probes sending rate starts matching receiving rate 
sends train packets rate computes available bandwidth probe gap information 
methodology mrtg test multi router traffic grapher mrtg reports amount traffic forwarded router interface 
collects measurements router management information base mib snmp generating reading minutes 
capacity link mrtg data allows compute average available bandwidth minutes 
despite low resolution mrtg data accurate way verify output available bandwidth estimation tools 
method requires access mrtg logs links path knowledge capacity traversed links 
difficulties apply mrtg test pair paths data 
path traverses mit campus network consists hops rtt ms tight narrow link mb ethernet connecting lab computer science lcs rest mit network 
path uc berkeley mit abilene network hops rtt ms path tight narrow link mb remainder path gb faster 
claim paths representative internet paths may typical university networks 
monitor paths period week total monitoring time hours 
repeatedly run pathload followed igi spruce 
tools sender receiver machines 
mrtg data provides average period minutes smooth measurements average output tool similar minute periods 
occasionally actively increase cross traffic traversing monitored path 
objective induced load discover responsiveness measurement tools changing network conditions 
sender cross traffic different machine running tools 
cross traffic uses udp similar results obtained tcp cross traffic 
generate cross traffic nlanr traces playing adjustable rate maintaining packet size 
choice ensures packet size distribution cross traffic follows size distribution internet 
mrtg test results figures illustrate typical segments results 
plot available bandwidth period day measured mrtg pathload igi spruce 
interval hour inject cross traffic rate mb hour increase generated cross traffic rate mb rest time monitored path various tools 
inject cross traffic mb hour 
main observation figures pathload consistently inaccurate estimating available bandwidth igi respond prop available bandwidth mbps available bandwidth mbps available bandwidth mbps pathload high pathload low mrtg time hours pathload igi mrtg time hours igi spruce mrtg time hours spruce mrtg available bandwidth estimate vs pathload igi spruce 
data mb path connecting lcs mit network 
available bandwidth mbps available bandwidth mbps available bandwidth mbps pathload high pathload low mrtg time hours pathload igi mrtg time hours igi spruce mrtg time hours spruce mrtg available bandwidth estimate vs pathload igi spruce 
data mb path connecting uc berkeley mit lcs 
injected cross traffic overestimated available bandwidth paths 
contrast spruce tracked available bandwidth reasonably cases 
behavior repeatedly observed mrtg tests 
shows pathload upper lower bounds available bandwidth high 
lower bound mb higher actual available bandwidth measured mrtg 
despite overestimation available bandwidth pathload reacts properly cross traffic injected interval 
ensure inaccurate bounds available bandwidth caused bug new pathload release version ran experiment older version pathload behavior persisted 
close examination logs show shorter path pathload repeatedly overestimates turning point probe train stream starts showing increasing delay trend indicating probe rate exceeded available bandwidth 
preliminary investigation shows default values pathload parameters sp ct sp dt high path 
reason results different reported pathload :10.1.1.137.121
observed opposite error pathload detecting turning point true available bandwidth 
shows igi successfully estimates available bandwidth link utilization low 
igi reacts little cross traffic injected interval 
igi consistently overestimates available bandwidth 
hypothesize igi performs poorly utilization high consistent data reported igi 
extent inaccuracy explained igi algorithm 
igi starts initial phase determine turning point 
unfortunately utilization high turning point immersed measurement noise 
figures show spruce closely tracks average available bandwidth correctly responds injected cross traffic 
believe spruce performance due simplicity lack tunable parameters 
paths contain distinct tight narrow links consist multiple bottlenecks equal capacity 
expect spruce perform conditions 
explanations observed behavior pathload igi preliminary 
experiments needed better understand behavior tools 

relative accuracy evaluate pathload igi spruce variety internet paths planetlab nodes ron testbed 
explore different paths variety capacity hop count latency load link technology 
absence mrtg data way discover true available bandwidth path experiment 
overcome limitation differential test test measures changes available bandwidth absolute values 
methodology test test phases 
run tool read estimate available bandwidth 
second cdf pathload igi spruce relative error cumulative distribution relative error measured pathload igi spruce tested paths ron planetlab testbeds 
ject stream cross traffic rate run tool 
induced cross traffic generated described 
assuming traffic users change phases correct change available bandwidth expect tool estimate second phase 
admittedly test relies assumption apart generated cross traffic network conditions change phases 
believe limitation intrinsic evaluation technique direct access routers 
mitigate impact changing network conditions results conduct phases close finish minute 
repeat experiment multiple times path check consistency ignore outliers 
single experiment consists tests path pathload second igi third spruce 
tests run complete minutes 
measure accuracy relative error defined relative error induced change cross traffic available bandwidth measured tool second phases test 
test results shows cumulative distribution function cdf relative error pathload igi spruce 
pathload available bandwidth estimate computed aver age high low estimates rmax rmin ideally cdf step function means experiments resulted zero errors 
practice tools show errors cdfs far ideal 
negative relative error means tool underestimated available bandwidth positive relative error means tool overestimated available bandwidth 
region refers experiments tool correctly detected decrease available bandwidth phase phase 
test potentially underestimated overestimated change abw 
results agree results mrtg test illustrated figures 
spruce cdf closer shape step cdfs tools indicating spruce accurate igi pathload 
particular spruce measurements relative error smaller region relative error 
second pathload accurate compared spruce cdf away step function 
comparison igi pathload responsive cdf ramps lower relative error rates 
third igi cdf step function means igi reacted little charges available bandwidth phase phase test 
behavior agrees results mrtg test show igi insensitive induced cross traffic 
paths study multiple narrow links equal capacity 
spruce pgm approach assumes single bottleneck perform reasonably environment 
computed average measurement probe traffic generated various tools 
pathload generates mb probe traffic measurement 
contrast average measurement probe traffic generated igi kb generated spruce kb 

implementation issues studied tools igi pathload spruce require careful scheduling probe traffic 
precisely input gap pair probes accurate small microseconds 
processes sleep intervals shorter kernel tick ms ms common values tool uses delay loop holds processor preempted done sending train packets 
delay loop effectively blocks programs sending traffic duration entire train tools properly measure cross traffic sent machine runs 
low bandwidth paths dsl exception rule input gap case large tool release cpu packets 
application uses measurement tools mechanism account effect traffic sent machine available bandwidth estimates 
applications account traffic explicitly operating systems provide scheduling methods send packets precise intervals holding processor duration packet train 

introduced spruce tool estimating available bandwidth compared performance existing tools igi pathload 
spruce simple generates relatively low amount probe traffic 
experiments large number internet paths indicate spruce estimates available bandwidth accurately pathload igi 
investigate sources observed errors order improve accuracy available bandwidth estimation 
source code spruce available project iris net 

national laboratory applied network research nlanr 
www nlanr net 
planetlab 
www planet lab org 
allman 
measuring bulk transfer capacity 
acm sigcomm internet measurement workshop san francisco ca nov 
andersen balakrishnan kaashoek morris 
resilient overlay networks 
proceedings th acm symposium operating systems principles sosp chateau lake louise banff canada oct 
mah 
pchar tool measuring internet path characteristics 
feb 
carter crovella 
dynamic server selection bandwidth probing wide area networks 
technical report tr boston university computer science department 
dovrolis moore 
packet dispersion techniques measure 
ieee infocom 
downey 
pathchar estimate internet link characteristics 
measurement modeling computer systems pages 
hu steenkiste 
evaluation characterization available bandwidth techniques 
ieee jsac special issue internet www measurement mapping modeling 
jacobson 
pathchar 
ftp ftp ee lbl gov pathchar 
jain dovrolis 
available bandwidth measurement methodology dynamics relation tcp throughput 
acm sigcomm pittsburg pa 
jain dovrolis :10.1.1.137.121
pathload measurement tool available bandwidth 
passive active measurements fort collins march 
jin yang crowley agarwal 
network characterization service ncs 
th ieee symposium high performance distributed computing aug 
keshav 
control theoretic approach flow control 
acm sigcomm pages september 
lai baker 
measuring link bandwidths deterministic model packet delay 
acm sigcomm pages 
lai baker 
nettimer tool measuring bottleneck link bandwidth 
usenix symposium internet technologies systems march 
mathis 
treno bulk transfer capacity 
draft ietf treno btc txt internet draft progress 

new probing analysis method estimating bandwidth bottlenecks 
global internet symposium 
rand 
multi router traffic grapher 
people ee ethz ch mrtg 
paxson 
routing behavior internet 
ieee acm transactions networking october 
ribeiro coates riedi baraniuk 
multifractal cross traffic estimation 
proc 
itc specialist seminar ip traffic measurement september 
ribeiro riedi baraniuk cottrell 
pathchirp efficient available bandwidth estimation network paths 
passive active measurement workshop 
zhang duffield paxson shenker 
constancy internet path properties 
acm sigcomm internet measurement workshop nov 
