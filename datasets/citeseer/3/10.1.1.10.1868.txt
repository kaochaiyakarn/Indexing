online oblivious routing nikhil bansal avrim blum chawla adam meyerson consider online version oblivious routing problem 
oblivious routing problem picking routing pair nodes set ows knowledge tra demand pair goal minimizing maximum congestion edge graph 
online version problem consider repeated game setting algorithm allowed choose new routing night oblivious demands occur day 
cost algorithm time step competitive ratio ratio congestion minimum possible congestion demands time step 
algorithm competitive respect best algorithm uses single routing entire sequence days known optimal static routing 
result strengthening result azar gave polynomial time algorithm nd oblivious routing best possible competitive ratio algorithm achieves competitive ratio arbitrarily close azar time performing nearly optimal static routing sequence demands categories subject descriptors analysis algorithms general keywords online algorithms networks competitive analysis oblivious routing congestion gradient descent research supported part nsf ccr nsf itr ccr nsf itr iis ibm graduate fellowship 
done independently subsequent azar 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
spaa june san diego california usa 
copyright acm 
carnegie mellon university pittsburgh pa usa 
avrim cs cmu edu 
routing virtual circuits undirected networks widely studied problem 
graph instance problem sequence requests request consists source sink pair bandwidth requirement 
request algorithm required specify ow path routing tra goal minimize edge congestion total bandwidth consumed link 
considering fractional version problem routing collection ows 
algorithms designed problem broadly classi ed kinds oblivious adaptive 
oblivious algorithm determines collection ows source sink pair knowledge demands 
adaptive algorithm hand receiving demand picks ow demands seen previously 
expected adaptive algorithms obtain better quality routing comparison oblivious algorithms 
oblivious algorithms attractive computed advance low implementation overhead implemented fully distributed manner 
competitive analysis judge performance algorithm 
sequence demands letr routing maximum edge congestion minimized 
algorithm routing called competitive respect maximum congestion times showed undirected graph exists oblivious routing log competitive set demands 
azar gave polynomial time algorithm graph computes routing best possible competitive ratio graph ellipsoid method 
call routing minimax optimal routing competitive ratio minimax optimal cost 
terminology problem naturally thought matrix game rows correspond routings columns correspond sets demands matrix entries contain competitive ratio algorithm input 
consider strengthening azar way 
suppose faced oblivious routing problem graph wewant competitive optimal routing irrespective set demands 
turns demands particular structure come non adversarial distribution wewould algorithm get best possible competitive ratio types demands 
formulate problem online game network requests routed 
routing changed day today 
morning day network administrator chooses oblivious routing day routing day requests arrive vector demands routed day administrator incurs cost competitive ratio routing respect optimal routing demand vector goal administrator minimize average competitive ratio days 
clear choosing minimax optimal routing day guarantees cost competitive ratio minimax optimal cost 
holds possible demand sequence fd case typical demand sequence fd routing rd day incurs signi cantly lower total cost administrator minimax optimal routing wish rd call rd static optimal routing demand sequence example demands optimal routing simply minimizes congestion orr give online algorithm runs polynomial time produces sequence routings sequence demands total cost incurred algorithm times cost static optimum routing rd long sequence su ciently polynomially long notice static optimal cost exceeds cost implies total cost routing produced algorithm times total cost cost static optimum routing signi cantly better cost set demands cost routing produced algorithm signi cantly better 
interesting compare technique azar ellipsoid algorithm space feasible routings 
step routing corresponding center ellipsoid considered 
algorithm constructs polynomial time worst case demand routing step 
separation oracle ellipsoid algorithm simulated optimal adversary matrix game 
congestion routing exceed minimax optimal algorithm terminates 
worst case demand acts violating constraint reduces space routings geometrically 
algorithm hand uses variant gradient descent algorithm receives set demands necessarily worst case time step 
gradient descent algorithm converges minimax solution worst case demands time step slower rate compared ellipsoid steps approximation opposed log steps taken ellipsoid 
consider objectives sum squares competitive ratios minimizing average subject maintaining worst case guarantee exceeding twice minimax optimal 
gradient descent algorithm additional property converges best solution sequence demands ellipsoid 
giving factor able achieve additional guarantee respect algorithm outperforms ellipsoid algorithm 
note goals follow classic line research theory machine learning minimizing regret repeated games 
freund schapire point weighted majority wm algorithm littlestone warmuth repeated play player zero sum game perform nearly best xed strategy hindsight 
wm algorithm involves placing weights strategies player dynamically adjusted time case exponentially strategies 
draw kalai vempala give algorithms able achieve types guarantees applied polynomial time routing problem 
related routing problem widely studied adaptive oblivious models 
best known adaptive algorithm general graphs due aspnes give competitive centralized algorithm 
awerbuch achieve competitive ratio distributed setting 
oblivious model known deterministic approaches select single path demand perform poorly worst case 
motivates randomization 
randomized oblivious routing algorithm speci es probability distribution paths pair 
view selecting multi commodity ow graph routing packet probabilistically ow densities 
oblivious routing algorithms worstcase guarantees known speci types networks 
obtained surprising result implies existence randomized oblivious routing undirected graph 
azar extend give algorithm ellipsoid method nds minimax optimal routing polynomial time 
online oblivious variant problem closely related online convex programming problem de ned studied kalai vempala 
online convex programming problem de ned follows time step algorithm required pick set 
adversary presents algorithm convex function cost incurred algorithm objective algorithm minimize sum costs time steps 
setting closely related problem prediction regression linear loss functions see previously mentioned problem designing nearly optimal strategies repeated games 
review algorithm detail section adapt setting 
programming general allows consider interesting ex tensions problem 
example minimizing total cost case competitive ratio days consider minimizing convex function costs penalizes high costs heavily 
alternatively consider minimizing sum costs subject constraint cost incurred algorithm twice minimax optimal cost 
discuss extensions section 
rest organized follows description problem notation section 
section describes algorithm online convex programming problem due 
section main result competitive algorithm online oblivious routing problem 
section extend basic algorithm cost functions optimization objectives 
conclude section 
framework notation directed graph vertices 
vertex denotes set incoming edges denotes set outgoing edges denote set commodities jg 
route commodity unit ow vertex vertex words function satisfying linear inequalities routing collection unit routes commodity ri 
denote vector values ri letf denote set valid routings graph note convex set convex combination valid routings valid routing 
demand vector vector non negative terms 
index pairs 
demand vector routing ow edge fd ri denotes dot product vectors 
congestion routing demand vector maximum ow cd fd 
cost incurred routing demand vector ratio routing congestion mini mal possible congestion demand vector note cost routing 
cd minr cd oblivious routing problem nd routing achieves minimum possible cost demand vectors 
maxd 
call minimax optimal routing 
widely studied notion optimality routing problem azar developed polynomial time algorithm nd routing general networks 
consider online version problem 
online oblivious routing problem stated follows 
time step algorithm xes routing route demand time step 
algorithm receives demand vector cost algorithm rt cost time step competitive analysis study performance algorithms oblivious routing 
sequence demands fd routing minimizes cost 
call optimal routing demand sequence call algorithm competitive respect static optimal routing satis es cost cost rd constant independent ofd 
main result follows theorem 
steps greedy projection algorithm competitive respect optimal static routing 
note de nition cost rd 
algorithm competitive respect static optimal routing competitive respect minimax optimal routing 
online convex programming section review online convex programming useful algorithms analysis 
de nitions 
set ir convex convex set function ir convex 
online convex programming problem consists feasible set ir sequence cost functions fg ir function 
step online algorithm required pick element function algorithm incurs cost time step goal online algorithm minimize cost 
sequence cost functions static optimal solution element minimizing gt 
regret algorithm di erence costs algorithm static optimal solution cost functions regret alg xg give deterministic algorithm online convex programming problem achieves low regret constant depending describing algorithm need notation 
jjxjj denote length vector jjx yjj denote distance vectors jjf jj maxx diameter set denote learning rate algorithm speci ed 
denote rg gradient function greedy projection algorithm 
algorithm starts arbitrary vector algorithm rst performs gradient descent moves direction previously seen cost function 
case point lies outside feasible region algorithm projects back set picking point closest point 
equations describe algorithm trg arg min yt theorem theorem 
online convex programming problem fg greedy projection algorithm time steps jjf jj max jj note performance algorithm stated terms regret convert competitive ratio lower bound cost static optimal solution 
result published provide self contained proof case linear cost functions need main result inside proof lemma 
online oblivious routing section show online oblivious routing problem converted online convex programming problem 
recall cost online algorithm step min cd dt minr 
consider demand vector dt dt notice optimal congestion demand vector exactly 
consequently ow reduced factor cost remains cost 
henceforth assume algorithm receives demand vector time step cost incurred algorithm step maximum jej convex functions representing ow edge describe convert function linear function 
maximum congested edge time argmax ef 
de ne jej dimensional vector lemma characterizes cost algorithm terms lemma 
cost algorithm step cost proof de nition 
equal cost de nition consider static optimal routing rd cost incurred respect max fd get lemma drop subscript obvious context 
lemma 
cost static optimal routing step bounded lemmas give result 
theorem 
algorithm competitive online convex programming problem de ned competitive static optimal routing demand vectors algorithm application greedy projection algorithm problem 
note 
algorithm follows 
pick arbitrarily 
step compute equation 
tc 
pick approximation argmin jjx jj projection algorithm de ned complete description algorithm giving projection algorithm step 
projection algorithm 
vector real number algorithm nds vector squared distance vector minimum squared distance vector quadratic program min subject rewritten semi de nite program min subject program solved small error desired polynomial time ellipsoid method semi de nite programming theorem theorem 
body ir ball radius origin 
assume separation oracle ir 
nd ellipsoid algorithm number calls oracle computation time bounded log log andn 
completes description algorithm 
start analysis technical lemma projection procedure proven appendix 
lemma 
vector lution returned algorithm 
jjx yjj main result follows 
lemma 
rt proof get steps jj jjr jj jjy jj jj jjr jj jjr jj jj max second step follows fact fourth inequality follows lemma 
fth step follows de nition weget rt max jjc jj 
bound terms max jjc jj consider maxr term vector value de nition 
sum terms total ow routing commodity contributes total ow graph maxi ri ri wehave similarly non zero terms corresponding scaled demands ow edge due scaled demands scaled demand total demand get max jjc jj jjc weget rt 
fact competitive ratio optimal routing step get algorithm converges polynomial number steps proof theorem theorem lemma cost alg cost 
fact cost step algorithm converges steps get cost alg cost 

extensions observe algorithm described previous section achieves competitive ratio respect routed single path commodity contributes path ow simply convex combination paths 
static optimal solution long term may perform poorly short term 
motivated section extend result cost functions penalize solutions expensive inthe short term 
rst consider penalizing high congestion aggressively charging algorithm th power max imum congestion time step 
words cost time cost rt need de ne appropriate cost vector high level idea follows 
property cost algorithm equal cost routing ensure lines lemmas algorithm competitive respect competitive respect static optimal solution 
cost algorithm written cost constant 
words simply polynomial degree appropriate choice gradient polynomial simply apply greedy projection algorithm de ned previous section problem obtain competitive solution 
rate convergence slower case jjc jj case large 
picking parameters optimally get greedy projection algorithm approximation static optimal routing steps 
consider strict restriction algorithm incur cost twice minimax optimal cost 
words cost maxd possible cost minimax optimal strategy algorithm incur cost cost 
note case routing guaranteed competitive respect best static routing incur cost cost vector demands 
order achieve algorithm rst computes minimax optimal cost algorithm azar 
log 
run greedy projection algorithm modi cation picking routing smaller set set system inequalities addition ones de ne equation 
fd cost note set set de ned possibly nitely linear inequalities 
ellipsoid method just section projection step algorithm 
get competitive ratio theorem 
applied ideas repeated games online machine learning oblivious routing problem 
developed algorithm extends result azar performs nearly best static routing demands turn best static routing better minimax optimal 
interesting improve rate convergence algorithm see performs practice 

aspnes azar fiat plotkin waarts 
line routing virtual circuits applications load balancing machine scheduling 
journal acm 
auer cesa bianchi freund schapire 
non stochastic multi armed bandit problem 
siam journal computing 
awerbuch azar 
local optimization global objectives competitive distributed deadlock resolution resource allocation 
foundations computer science pages 
azar cohen fiat kaplan 
optimal oblivious routing polynomial time 
proc 
acm symposium theory computation appear 
blackwell 
analog minimax theorem vector payo paci journal mathematics 
borodin hopcroft 
routing merging sorting parallel models computation 
journal computer system sciences 
bowling veloso 
multiagent learning avariable learning rate 
arti cial intelligence 
cesa bianchi 
analysis gradient algorithms line regression 
journal computer system sciences 
freund schapire 
adaptive game playing multiplicative weights 
games economic behavior 
hannan 
approximation bayes risk repeated play 
inm tucker wolfe editors contributions theory games volume iii pages 
princeton university press 

tight bounds oblivious routing hypercube 
proc 
acm symposium parallel algorithms architectures pages 
kalai vempala 
geometric algorithms online optimization 
technical report mit lcs tr mit laboratory computer science 
leighton 
parallel algorithms architectures arrays trees hypercubes 
morgan kaufmann 
littlestone warmuth 
weighted majority algorithm 
information computation 
lovasz 
semide nite programs combinatorial optimization lecture notes 
research microsoft com users lovasz ps 

minimizing congestion general networks 
foundations computer science pages 
singh kearns mansour 
nash convergence gradient dynamics general sum games 
th conference arti cial intelligence 
valiant 
universal schemes parallel communication 
proc 
acm symposium theory computation pages 
warmuth gentile 
proving relative loss bounds line learning algorithms bregman divergences 
tutorial computational learning theory colt 
warmuth kivinen 
additive versus exponentiated gradient updates linear prediction 
journal information computation 

online convex programming 
manuscript submission 
appendix proof lemma consider perpendicular line joining letb point perpendicular line 
note lies jjx jjx yjj done 
convex set 
approximation guarantee projection algorithm jjy jjy 
jjb jjy jjy xjj jjy jjy xjj de nition 
de nition jjx jjy xjj 
jjx jjx jb jjy xjj get result 
