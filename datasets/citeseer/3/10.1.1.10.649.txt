scott cs rpi edu intrusion detection bioinformatics approach joel branch cs rpi edu rensselaer polytechnic institute eighth street troy ny addresses problem detecting masquerading security attack intruder assumes identity legitimate user 
approaches hidden markov models various forms finite state automata proposed solve problem 
novelty approach results application techniques bioinformatics pair wise sequence alignment compare monitored session past user behavior 
algorithm uses semi global alignment unique scoring system measure similarity sequence commands produced potential intruder user signature sequence commands collected legitimate user 
tested algorithm standard intrusion data collection set 
discussed results test showed described algorithm yields promising combination intrusion detection rate false positive rate compared published intrusion detection algorithms 
keywords intrusion detection sequence alignment bioinformatics masquerade detection pattern matching 
field computer security damaging attacks masquerading attacker assumes identity legitimate user computer system 
masquerade attacks typically occur intruder obtains legitimate user password user leaves workstation unattended sort locking mechanism place 
difficult detect type security breach initiation szymanski cs rpi edu siena college road ny eric siena edu attacker appears normal user valid authority privileges 
difficulty underlines importance equipping computer systems ability distinguish masquerading attacker actions legitimate user activities 
detection masquerader relies user signature sequence commands collected legitimate user 
signature compared current user session 
underlying assumption user signature captures detectable patterns user sequence commands 
sequence commands produced legitimate user match patterns user signature sequence commands entered masquerader match poorly user signature 
designing algorithms distinguish legitimate users masqueraders user signatures extensively studied :10.1.1.23.1362
propose new algorithm uses pair wise sequence alignment characterize similarity sequences commands 
sequence alignment extensively applied field bioinformatics tool comparing genetic material 
algorithm unique variation classic smith waterman algorithm uses novel scoring scheme construct semi global alignment 
algorithm produces effective metric distinguishing legitimate user masquerader 
provide self contained describe details intrusion detection problem introduce fundamental concepts sequence alignment 
subsequent sections describe alignment algorithm scoring scheme experimental results 
conclude discussion improvements 

background intrusion detection standard security deployments firewalls patched operating systems password protection limited effectiveness evolving sophistication intrusion methods increasing ability break entry points guarded infrastructure 
intrusion detection system ids addresses layer security failure prior devices 
layer usually monitors number data sources audit logs keystrokes network traffic signs inappropriate anomalous behavior 
attacks occurring level sophisticated bypass entry point protection advanced algorithms frameworks detection required prevent total subversion critical resources 
computer network entirely secure intrusion detection essential computer infrastructure value assets draws attention potential attackers 
traditionally main classes idss host network systems 
host ids monitors detailed activity particular host 
depending specific ids implementation number data sources search malicious activity 
solaris basic security module bsm provides system call traces typically datasets host idss 
instance analysis bsm data shows signs intrusion ids alerts system administrator attack 
implementations host systems identifying information user keystrokes command execution patterns 
network idss monitor networks computers devices routers gateways normally subject attacks 
subsequently machine process oriented data bsm network idss primarily data network traffic detecting intrusions 
popular program capture network traffic tcpdump display store field belonging tcp packet 
different implementations network idss may serve different functions 
instance network systems may monitor traffic activity single host distributed tools may analyze aggregate traffic information range devices network 
prevent confusion data centric definitions distinguishing host network idss 
network host idss classified methods detection anomaly detection penetration identification 
method attempts differentiate anomalous activity established normal operating behavior computer system application user 
general ids train data representing normal behavior deployed operative detection mode 
principle advantage anomaly detection system detect previously unknown attacks 
considering anomaly systems strongly applicable masquerade detection problem focus 
penetration identification referred misuse detection second major detection technique 
signature defined identifies manifestation attack attack discovered monitored network traffic audit trails 
penetration identification systems typically yield fewer false alarms require continuous updates signature databases may outdated fairly quickly 
types host network intrusion attacks 
intrusion classifications intent 
instance denial service attack aims completely shut degrade performance network computer process 
remote local attacks attempt illegally gain access machine account 
attacks target specific resource 
hand surveillance scan attacks distributed software find vulnerabilities hundreds machines 
seminal study performed darpa evaluate performance various idss detecting attacks 
specific details attacks ids evaluation available 
focus masquerade attacks attempts impersonate legitimate user gaining access legitimate user account 
masquerade attacks arise successful local attack masquerading result far simpler means 
example temporarily unattended workstation legitimate user logon session active unlocked 
access workstation resources accessible logon account 
broad range damage performed masquerade attacks stolen documents data email serious threats computer network infrastructure 
matching potentially devastating costs masquerade attacks difficulty successfully detecting 
stated previously masquerade detection falls cover anomaly detection poses challenge implementation 
masquerade detection adds layer complexity problem 
masquerader may happen similar behavioral patterns legitimate user account currently logged escaping detection successfully causing damage cover seemingly normal behavior 
problem caused computer users tendency concept drift change activity captured strongly original user signature 
result legitimate user command sequences may differ signature appear intrusion 
refer missed attacks false negatives false alarms false positives 
numerous attempts successfully detecting masquerade attacks minimizing false negatives degrading quality user session minimizing false positives 
seminal schonlau analyzes performance various masquerade detection methods 
results showed method yielding lowest number false alarms uniqueness false positive rate 
false negative rate 
performer bayes step markov false positive rate false negative rate 
maxion townsend analyzed sources error detection mechanisms covered schonlau proposed improved methods na bayes updates yielded excellent false positive rate respectable false negative rate 
choose depart schonlau maxion approach trying detect masquerade attacks greater accuracy unconventional methods 
masquerade detection attempts analysis user command sequences logical step 
type data represents user feature termed biometric 
behavioral features biometrics general include characteristics handwriting speech patterns inapplicable computer masquerading 
physiological features include fingerprints eye color things change time available remote computer sessions 
user command sequences computer system course change time adequate record normal behavior capture sequence variations 
classification data detection led appropriate class algorithms mechanisms effective detection bioinformatics 
sequence alignment sequence alignment studied tool quantify visualize similarity sequences 
sequence alignment prominently applied comparison genetic material dna rna protein sequences 
applications sequence alignment include searching sequence databases specific genes patterns discovering phylogenetic relationships multiple alignments 
sequence alignment generalization classic longest common subsequence problem lcs 
strings am bn alphabet size lcs problem find sequence greatest possible length obtained deleting zero necessarily adjacent characters 
alternatively described problem aligning strings order maximize number matching characters inserting gaps string order shift characters matching alignment 
length longest common subsequence intuitive measure similarity strings 
improve capabilities tool comparison scoring function rank different alignments biologically plausible alignments score higher 
scoring function assigns positive scores aligned characters match known similar 
negative scores assigned aligned characters dissimilar characters aligned gaps 
typically score alignment sum scores aligned pair symbols 
task optimal sequence alignment find highest scoring alignment scoring function pair strings 
efficient dynamic programming algorithm optimal sequence alignment needleman wunsch 
similar length longest common subsequence alignment score serves metric quantifying similarity input strings 
alignments useful metric measuring similarity alignments serve important visual tool assessing similarity 
shows example typical alignment dash indicates gap vertical bar indicates character match 
key gap match example sequence alignment computing optimal alignment strings proven useful tool comparison entire strings important identify subtle types similarity 
strings may possess homogeneity entire length may contain smaller substrings highly similar 
accommodate possibility smith waterman designed modification needleman wunsch alignment algorithm compute local alignment 
align strings entire length local alignment algorithm aligns substring input string 
scoring function strings am bn local alignment problem find substrings respectively alignment score maximum possible pairs substrings previously alignment implied character string aligned character string gap 
character input strings contributed score optimal alignment 
type alignment referred global alignment 
local alignment characters aligned substrings contribute score optimal alignment 
string suffix prefix ignored scoring system 
shows difference global local alignment 
allowing suffix prefix ignored local alignment discover subtle regions similarity may go undetected global alignment algorithm 
problem appears difficult terms complexity smith waterman local alignment algorithm slight modification needleman wunsch global alignment algorithm 
global alignment local alignment ag global alignment vs local alignment global alignment tool choice comparing strings believed possess similarity 
typically strings approximately equal length 
local alignment tool choice comparing strings lengths significantly different 
local alignment allows substring larger input string matched smaller string 
typically global alignment algorithm fail identify similarity characters longer string aligned gaps resulting negative score 
applications local global alignment appropriate characterizing types similarity may arise 
types alignments referred semi global 
local alignment prefix suffix input strings ignored 
alignment involves substring input strings 
semi global alignment choose align prefixes suffixes original input strings 
alignment allows prefixes ignored second alignment allows suffixes ignored 
examples semi global alignments 
detection algorithm overview field bioinformatics sequence alignment determine similarity dna protein sequences global semi global local context aligning nucleotides amino acids sequence producing score indicates sequences align consequently similar 
concept align sequences commands nucleotides amino acids produce score indicates similar command sequences 
aligning small segment commands user signature score alignment indicator presence intrusion segment testing 
number factors sequence alignment algorithms masquerade detection abilities find high level patterns alignment data sheer number parameters changed suit different types data 
parameters changed allow different alignments data bring new high level pattern matching 
particular properties match commands match generalized patterns user prone course number computing sessions 
way able readily judge indicative sequence commands user just commands highlevel patterns embedded commands 
alignment algorithm sequence alignment detection masquerading user modification smith waterman local alignment algorithm compute alignment 
problem purely local alignment characterize similarity command sequences prefix suffix ignored sequences 
intrusion detection critical align majority tested block commands user signature 
allow large prefix large suffix tested block commands ignored intrusion ignored 
problem purely global alignment may large portions signature necessarily align segment user commands 
want design scoring system rewards alignment commands user segment necessarily penalize misalignment large portions signature 
remainder section signature sequence represents user typical command behavior referred 
monitored command sequence may contain possible subsequence masquerader commands referred tested block 
algorithm shown starts initializing matrix floats store score alignment process 
position matrix corresponds optimal score alignment 
optimal score computed starting upper left corner matrix point recursively making step yielding maximum options option diagonal step score position plus penalty reward aligning th command th command 
option top step score position plus penalty introducing gap 
semi global alignment algorithm option left right step score position plus penalty introducing gap 
option yields largest value optimal alignment matches 
option option yields largest score optimal alignment associates gap 
essential parameters scoring system 
function returns negative value commands match positive value 
negative gap penalties associated inserting gaps respectively 
option option results negative value alignment score reset zero 
zeroing score allows prefix arbitrary number un penalized gaps 
assumption portion ignored penalty 
significantly longer expected commands participate alignment 
small portion ignored 
difference ignoring portions high alignment score achievable large portion ignored 
alignment ignores large prefix relatively low score 
similarly algorithm reaches rightmost column bottom row matrix gap penalty applied 
suffix suffix ignored 
true alignment score relatively low 
input string length string length 
initialize matrix type integer 






top 
left 

top 
left 
top top 
left left 
diagonal 
maximum top left diagonal 
return gap inserted corresponds command ignored 
similarly gap inserted corresponds ignored command 
minimize number ignored commands penalty set higher penalty 
scoring scheme designed reward entirely aligned minimal number gaps mismatches 
order understand algorithm viability real time environment consider time complexity determine quickly able run 
algorithm original smith waterman algorithm time space complexity mn size size 
general quick algorithm case masquerade problem set data relatively small doesn hamper real time discovery intruders 
specific size size test iterations modern computer perform second 
additionally consider commands user occur fast rate cause time complexity algorithm factor detection intruders 
scoring scheme determination goal alignment algorithm match characteristic groups commands tested block similar groups user signature 
requires heavily penalize gaps may inserted user signature want commands tested block aligned gaps user signature 
similarly able insert gaps tested block simulate insertion commands characteristic groups commands user signature 
requires provide slightly lesser penalty gaps tested block 
matches positively influence score alignment chosen matches preferred gaps 
mismatches kept constant score blanket reward penalty mismatch unfairly favour certain alignments disallow concept drift 
criteria chose scores match aligned commands gap placed tested block gap placed user signature course mismatch aligned commands 
scoring scheme appears provide reasonable detection false positive rates intuitively suited requirements problem 

experiment overview sea data facilitate comparison masquerade detection algorithms chosen masquerade data provided schonlau abbreviated sea basis experimentation 
sea data created unix acct auditing utility records user commands augmented metrics interest 
concern command entries produced utility 
sea data provides blocks commands total commands user assumed intrusion free training data system 
addition provided blocks commands total commands user determine masquerade attack occurred 
create data commands taken individual users separated groups 
group users test subjects group remaining users commands interspersed data user test group 
data users masquerade data detected 
sea data de facto standard masquerade detection algorithm testing wide spread difficulty obtaining alternative data due privacy concerns 
result sea data obvious choice tests 
experiment metrics parameters experimentation focuses effects changing various parameters alignment algorithm false positive false negative rates 
benefits particular approach sheer number tunable parameters 
parameters include reward matches penalties gaps inserted user signature tested blocks rewards penalties mismatches threshold score detection intrusions user signature length tested block length 
best facilitate comparison masquerade detection algorithms false positive rate false negative rate hit rate metrics determine alignment algorithm performed 
false positive non intrusion block algorithm labeled containing intrusion 
false negative intrusion block algorithm labeled non intrusion 
hit intrusion block algorithm properly labeled containing intrusion 
false positives false negatives hits computed user transformed corresponding rates summed averaged users 
summarizes metric calculations algorithm 
number false positives number non intrusion command sequence blocks number users case false users fi ni fn number false negatives number intrusion command sequence blocks number users intrusion block false users fni ni 
results hit false metric calculations threshold determination facilitate proper detection threshold score determined define point score indicative attack 
choosing arbitrary static threshold score decided determine initial threshold score user cross validating user signature 
randomly chosen command sections user signature aligning randomly chosen command section user signature 
allows create initial average score similar score user testing data produce 
additionally update average new testing blocks checked averaging current testing block score tested block scores previous initial average produced training data 
take percentage average threshold score 
allows customize threshold user particular user consistently high scoring alignments user signature user testing blocks unduly flagged intrusions 
particular allows algorithm somewhat forgiving concept drift 
able choose threshold percentage appropriate amount sensitivity express detection process 
instance concerned keeping secure environment mind additional amount false positive alarms exchange increased masquerade detection higher percentage threshold required alignment score need closer user average score considered non intrusion 
conversely choose lower threshold percentage allow lax security environment intrusive alerts allowing score significantly lower average user 
percentage threshold percentage false negative false positive false negative false positive vs threshold percentage comparison local alignment previously discussed semi global alignment algorithm modification smith waterman local alignment algorithm 
comparing semi global alignment algorithm original smith waterman algorithm able identify unique ability modified algorithm detect masquerade attacks sea data 
comparison gives indication appropriate length user signature 
results local alignment algorithm achieved indicate tested block better aligned subsequence full command user signature sequence full user signature 
local alignment algorithm performs comparably modified semi global algorithm areas low sensitivity low false positive rates low hit rates high sensitivity high false positive rates high hit rates falls significantly performance algorithm median sensitivity arguably significant area detection provides best trade detection hit rates false positive rates 
indicates subsequences user signature provides benefit detection process 
additionally breaking command user signature subsequences introduces additional logistical problems patterns may cross subsequence boundaries 
intuitive keep command user signature sequence change parameters alignment algorithm discourage gaps user signature mentioned provide accurate alignment tested block user signature 
similarly intuitive tested block size commands sea data marks command block intrusion non intrusion provides information specific commands intrusion 
limits tested block size commands larger smaller block sizes checked correctness 
hit false positive semi global alignment local alignment hit rate function false positive rate semi global local alignment methods sea data command mismatch scoring semi global alignment algorithm works fairly rewarding punishing mismatches mismatches better determine tested block aligns user signature better tailor algorithm problem masquerade detection 
customized mismatch scoring system allow possibility legitimate user may interchanged command particular alignment 
allows punish commands interchanged rewarding commands likelihood interchanged 
summarizes mismatch score calculation 
mismatch score occurrences intrusion block command user signature distinct commands user signature mismatch score calculation ratio number times particular command tested block occurs user signature expected number occurrences command user signature 
subtract ratio limit maximum score 
essentially puts mismatch score real number scale tested block command occurs occurs fewer times average command penalize mismatch tested block command occurs times expected average number occurrences command reward mismatch 
particular command number occurrences expected average number occurrences command reward penalize mismatch definitively indicate command entered legitimate user masquerader 
implementing mismatch scoring scheme results drastically improved previous semi global algorithm mismatches rewarded penalized 
selective reward penalty mismatched command alignments command frequency allows differentiate user masquerader account concept drift tested block sequences allowing small variations user activity past activity 
hit false positive semi global alignment mismatch semi global alignment mismatch hit rate function false positive rate semi global mismatch scoring semi global mismatch scoring results tuning algorithm described produced hit rate false positive rate extremely competitive top masquerade detection algorithms 
algorithms perform comparably current results na bayes algorithms 
algorithms perform somewhat worst current best results may fall near receiver operator characteristic roc curve detection abilities clearly far hit rate 
table comparisons algorithms false algorithms hit rate positive semi global alignment bayes step markov na bayes updating na bayes updating hybrid markov ipam uniqueness sequence matching compression hit bayes step markov false positive na bayes update na bayes update uniqueness hybrid markov ipam sequence matching compression semi global alignment mismatch roc curve comparison points 
discussion bioinformatics area study suited create algorithms applied myriad fields 
sequence alignment algorithms discussed specialized pattern matching algorithms tuning applied different fields pattern matching applicable intrusion detection case 
particular system equally applicable graphic user interface gui interactions interactions broken various system calls produce set system calls 
set system calls just easily analyzed algorithm determine intrusions gui interactions 
noticed peculiar novel bioinformatics algorithms teiresias pattern matching algorithm flag abnormal unix system calls indicate attack unix process 
alignment algorithm teiresias algorithm originated domain bioinformatics approaches detection vary considerably 
particular sequence alignment score similarity command sequences wespi dominant patterns classify abnormality unix processes 
novel implementation modified sequence alignment algorithm detection masqueraders shown appropriate customization tuning performs competitively compared top masquerade detection algorithms 
significant amount customization done generic smith waterman local alignment algorithm produce masquerade detection algorithm number additional metrics improvements algorithm performance 
great advantage alignments characterize similarity command sequences alignment produce different statistics 
statistics include density alignment alignment score divided alignment length maximum minimum average gap length total number matching mismatched commands total number gaps aligned subsequences 
statistics measure different aspects similarity distinguish user subsequences intruder subsequences 
algorithm initial false positive rate somewhat consider new method intrusion detection initial testing needed determine viability 
alignment score effective identifying intruders user subsequences intruder 
may result user behavior identified ignored 
fortunately may subtle differences user behavior intruder behavior detected looking alignment statistics multidimensional space 
multidimensional approach different alignment statistics powerful robust mechanism decreasing false positive rate algorithm 
additionally parameters scoring algorithm gap penalties mismatch scoring match scoring tuned allow dynamic scoring system similar done mismatch scoring better separate legitimate user activity malicious attack 
furthermore method significantly different intrusion detection technologies particularly suited coupling existing intrusion detection technologies hybrid system provide impressive results 

biometrics advanced identity identification complete guide 
springer verlag london 
lipman multiple sequence alignment problem biology 
siam journal applied math 
gelfand 
mironov pevzner gene recognition splices sequence alignment 
proc 
natl 
acad 
sci 
usa 
pattern recognition nucleic acid sequences general method finding local homologies symmetries 
nucleic acids research 
algorithms longest common subsequence problem 
journal acm 
hubbard brenner chothia scop structural classification proteins database 
nucleic acids research 
jacobson leres mccanne tcpdump june 
available anonymous ftp ftp ee lbl gov kemmerer vigna intrusion detection brief history overview 
ieee security privacy 
url computer org computer sp articles kem lippmann cunningham fried graf kendall webster results darpa offline intrusion detection evaluation 
advances intrusion detection second international workshop raid 
intrusion detection 
computer world april 
url www com hard ware story html 
computer intrusion detection network monitoring 
springer verlag new york new york ny 
maxion townsend masquerade detection truncated command lines 
proceeedings international conference dependable systems networks dsn washington june 
ieee computer society press los alamitos california 
needleman general method applicable search similarities acid sequences proteins 
journal molecular biology 
schonlau dumouchel ju karr vardi computer intrusion detecting 
statistical science february 
basic security module guide solaris 
sun part october 
smith waterman identification common molecular subsequences 
journal molecular biology 
wagner fisher string string correction problem 
journal acm 
dacier debar 
intrusion detection system teiresias pattern discovery algorithm best proceedings 
