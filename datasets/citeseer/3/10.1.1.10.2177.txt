probabilistic rewrite theories kumar sen jose meseguer gul agha department computer science university illinois urbana champaign 
meseguer agha cs uiuc edu propose probabilistic rewrite theories general semantic framework supporting highlevel specification probabilistic systems massively concurrent 
give definition semantics probabilistic rewrite theories discuss mappings di erent classes theories models 
define semantics probabilistic temporal formulae probabilistic rewrite theory 
explain real time probabilistic systems time discrete expressed probabilistic rewrite theories extension 
give design ideas implementation probabilistic rewrite theories top maude 
shall report running prototype final version 
propose natural extension rewrite theories called probabilistic rewrite theories general high level formalism specify probabilistic systems kind performance reliability modelling distributed randomized algorithms 
particularly interested specifying generation large networks embedded hybrid systems 
systems distributed highly asynchronous essential real time features unreliable communication media faults 
behavior systems modelled probabilistically replacing nondeterminism due unreliability faults probabilities 
considerable research models logics model checking probabilistic systems 
area includes probabilistic process algebra approaches probabilistic petri nets hybrid automata lynch probabilistic automata segala lynch probabilistic nondeterministic systems de alfaro 
theories related timed automata developed alur dill alur dill presents survey real time logics including rtl mtl 
marta kwiatkowska combined works develop theory probabilistic timed automata tools related verification systems 
logics underlying tools include computational stochastic logic csl probabilistic computational tree logic pctl probabilistic timed computation tree logic 
prism tool developed model check systems models mentioned logics 
implements cient symbolic model checking techniques proposed 
situation models build existing model concurrency variant ccs petri nets automata low level automaton models markov chains probabilistic nondeterministic systems 
context proposed probabilistic rewrite theories serve flexible semantic framework express models supports high level specification approach explicitly support wide range concurrency models including asynchronous object models allows definition parameterized probabilistic transitions probability may depend actual parameters supports execution symbolic simulation specifications languages language proposed naturally integrated probabilistic temporal logics express high level properties model check finite state systems explained supports algebraic definition general data types rich language state predicates underlying equational logic rewrite theory 
rest organized follows 
section summarizes background concepts probabilistic temporal logics 
section defines probabilistic rewrite theories semantics presents randomized distributed algorithm example discusses mappings different classes theories models explains semantics probabilistic temporal formulae defined probabilistic rewrite theory 
section explains real time probabilistic systems time discrete expressed framework need extensions illustrate systems example 
finish directions section 
background probabilistic nondeterministic systems pns probabilistic nondeterministic systems known probabilistic automata described widely model systems probabilistic nondeterministic behavior 
motivation existence probabilities may known estimable types transitions 
approach slight variant ignoring initial state give formal definition pns 
introduce definition state probability distribution 
definition state probability distribution state space system nextstate probability distribution function 
represents probability making direct transition current state 
pns defined definition pns pns triple denumerable finite state space system ap labelling function associates set ap atomic propositions true function associates finite set 
ks state probability distributions state computation chosen steps 
state probability distribution chosen nondeterministically set 
successor state chosen probability 
temporal logics probabilistic systems various logics specification temporal probabilistic properties 
logics general adequate extensions temporal logic probability operator specifies probability values formulas 
semantics formulas extended logics express properties bad event happening probability safety liveness condition satisfied su ciently large probability 
linear time framework uses standard linear time temporal logic interpretation states probabilistic system 
truth value formula state value interval viewed probability formula holds system starts state branching time logics various logics pctl pctl probabilistic ctl ctl concurrent markov chains pctl pctl probabilistic ctl ctl sequential markov chains timed probabilistic ctl probabilistic branching time logic 
shall syntax pctl pctl briefly go semantics 
detailed information reader encouraged follow 
pctl pctl logics express properties sequential concurrent markov chains 
express properties process enter critical section steps probability 
state formulas path formulas 
path formulas statements execution paths state formulas statements express branching time nature various possibilities state 
syntax syntax pctl formulas specified production rules 
follows denotes state formula denotes path formula 
true formulas usual meanings operators respectively represents atomic proposition drawn set ap atomic propositions probabilistic operator express quantity paths satisfying formula stands 
syntax pctl formulas specified production rules 
true usual meanings operators paths exists path eventually respectively 
semantics semantics formulas defines satisfaction relation stating state formula holds state definition uses probability space set infinite execution paths starting algebra generated sets 

definition subscript denotes ith state path 
case pns adversary decides state path nondeterministic probability distributions choose 
note sequential markov chain special case pns 
sequential systems just trivial adversary chooses nondeterministic choice probability step path 
case pctl formula means unique measure set paths satisfying greater complete semantics pctl pctl formulas user encouraged follow 
general notion probabilistic rewrite theories definition canonical ground substitution canonical ground substitution substitution definition equivalent substitution canonical ground substitution called equivalent equivalence classes 
canonical ground substitution definition general probabilistic rewrite theory general probabilistic rewrite theory quintuple rewrite theory rule form probability 
label rule 
set variables set variables 

um 
form condition conjunction equations memberships 

set probability distribution functions 
denote class general probabilistic rewrite theories 
semantics general probabilistic rewrite theory assume 
confluent terminating sort decreasing modulo 
rules coherent modulo definition context context term single occurrence single variable called hole 
contexts called equivalent modulo equivalence classes 
definition matches matches tuples rule probability probabilistic rewrite happens follows consider set matches pick say nondeterministically 
rule probability pick particular distribution get step probabilistic rewriting form subset probabilistic rewrite theory express generalized probabilistic theory say way 
encode group rule label form rate rate single rewrite rule projection 

true probability probabilistic rewrite theories definition probabilistic rewrite theory probabilistic rewrite theory quintuple rewrite theory function associating rewrite rule term sort sort corresponding positive fragment computable subfield real numbers 
term represents rate associated rule rule maps rule term 
notation rate rule 
furthermore require label rules labelled lefthand side form rate rate 
set free variables 
fvars fvars 
form condition conjunction equations memberships 
denote class probabilistic rewrite theories 
semantics probabilistic rewrite theory definition match decompositions equational theory equivalence class term initial algebra match decomposition mean triple term called context single occurrence single variable called hole term called pattern ground substitution fvars equivalence relation match decompositions defined follows 

syntactically identical 
dom dom dom 
represent equivalence class modulo equivalence relation defined 
term set match decompositions modulo form lefthand side step rewrite takes place stages 
element nondeterministically chosen set label lefthand side enabled rule see picked nondeterministically 
rate rate rate nonempty set rewrite rules enabled condition true 
general 
set multiset 
group repetitions multiset families form 
step transition probability defined sum rates family divided sum rates multiset nq qv example randomized byzantine agreement protocol illustrate probabilistic rewrite theories specifying randomized algorithm byzantine agreement problem introduced ben theory 
byzantine agreement requires set parties distributed environment agree value parties corrupted 
fundamental impossibility result shows deterministic algorithm achieving agreement asynchronous setting benign failures 
overcomes problem randomization 
protocol uses random assignments outcome probabilistic 
protocol works completely asynchronous setting presence adversary scheduler knows system 
result shows number faulty processes satisfies total number processes complete asynchronous agreement possible randomized algorithm 
basic assumptions follows 
set asynchronous processes wish agree binary value 
process starts binary input decide common value 
process decides sending single message decide observer 
processes communicate means messages 
system represented configuration consisting processes messages sent delivered 
assume totally asynchronous system message sent eventually delivered 
discuss specification randomized algorithm probabilistic rewrite theory maude syntax enriched rate information 
rate information provided metadata associated rewrite rule 
entire specification appendix 
protocol process performs rounds exchange information 
current round process stored attribute round machineint 
round process goes steps current step represented attribute step 
value stored attribute val binary process 
auxiliary attributes process keep track number messages received number messages having value list acquaintances process class process val binary step steps round machineint machineint cnt machineint cnt machineint machineint machineint flag flag acq step round process broadcasts value processes attribute acq contains list processes 
rl send step bcast metadata rate second step waits till receives number processes messages type 
crl receive step round cnt cnt fi metadata rate messages value broadcasts message md processes 
crl step cnt cnt acq cnt bcast md metadata rate crl step cnt cnt acq bcast md metadata rate broadcasts message 
crl send step cnt cnt step acq bcast metadata rate third step waits till receives messages type md 
messages type md value sets md messages sends decide message observer 
crl decide step flag true decide metadata rate sets probability rl choose step metadata rate rl choose step metadata rate step increments round goes back step 
mappings theory classes probabilistic rewrite theory obvious underlying ordinary rewrite theory rwth obtained forgetting 
conversely rwth class rewrite theories di erent rewrite rules di erent labels rules equational conditions conjunctions equations memberships 
define function rwth embedding rewrite theories probabilistic rewrite theories way rwth mapping rewrite rule 
likewise view special low level case probabilistic rewrite theories defining map pns defined follows 
pns define unsorted signature consisting states constants 

set states 
contains label contains set rewrite rules rate rate maps rule 
conversely probabilistic rewrite theory sort state state probabilistic step transitions defined state associate state underlying pns state vr 
sr state 
vr state sp red state sp red state set order formulas called state predicates order language equality fol single free variable sort state fvars 
function vr maps state state set state predicates hold vr sp red state fol 

associates state state set consisting probability distributions form matching decomposition set enabled rules label rate rate nonempty 
probability distribution function associating state defined zero state 
class pairs state state sort state step probabilistic transition state mapping function pns 
obvious projection function note mapping gives way associating temporal logic semantics probabilistic rewrite theory probabilistic rewrite theory sort state state state state formula temporal logic language atomic propositions sp red state satisfaction relation state states pns associated probabilistic rewrite theory initial state satisfy state property 
sort state left implicit simpler notation abbreviation state 
summarize mappings defined section class discrete time probabilistic rewrite theories defined section 
discrete time probabilistic rewrite theories discrete time probabilistic rewrite theory assume discrete real time acts global state 
time incremented special rewrite rule tick 
ensure system performed necessary computations ticks require tick rule enabled state rewrite rules enabled 
definition discrete time probabilistic rewrite theory discrete time probabilistic rewrite theory just probabilistic rewrite theory sort called state rwth pns rwth relations theory classes 
note represent state system sort called associating state global time wall clock having constructor op state nat 
operator constructs terms kind 
assume nat natural numbers sort represent discrete time protecting extension theory nat natural numbers 
tick label contains single rule tick tick rate function tick state state defines action time instant state suitable equations 
ground substitution require predicate true rewrite rules tick enabled term 
denote subclass discrete time probabilistic rewrite theories defined 
consider example system having digital clocks 
clocks running break probabilistically depending charge left battery length time clock running 
clock reset external source 
behavior system easily specified theory follows sort clock flag status ops current flag ops running broken status clock battery charge local time status enabled clock op clock float nat status flag clock ctor clocks form global state op state clock clock state ctor op state nat op enabled bool op tick state state tick enabled true rate internal clock running current clock delta running rate internal clock running current clock broken current rate reset clock running current clock running rate eq init state clock running current clock running current rules internal state clock continue run incrementing local time rate running low battery charge running long time rate 
note rates dependent battery charge left time clock running defined equationally 
rule reset nondeterministic possibility happen somebody manually resets time clock 
sort status constants running broken represent clock running broken 
sort flag constants current represent rewrite rule applied clock 
predicate enabled rule tick computed flags follows eq enabled true eq enabled true operator tick equationally defined reset flag clock current enable rules internal reset 
probabilistic discrete time model sensor networks actors meta actors specified theory 
rewrite specification actors rewriting logic submodule 
model sensor networks nondeterminism message delay due transmission failure collision message loss replaced probabilities 
elements network follow global clock probabilistic manner 
theories model real time probabilistic systems communication protocols embedded systems control systems 
properties interest kinds systems properties clocks run stopping days probability chance packet delivered ms 
properties easily expressed pctl treating global time normal state variable time bounds normal state predicates 
considering global time state variable results system infinite number reachable states general model checked 
interested system properties mentioned bounded finite global time associate theory involves finite number time instants 
identical tick rule replaced rule tick tick cond rate finite bound global real time 
practice properties interest bounded finite global time 
point time bounded property bound initial state equivalence 
set states reachable finite model check property model checking underlying pns state appropriate decision procedure 
prototype interpreter prototype interpreter currently development 
plan report running prototype final version 
interpreter provide realistic simulation environment probabilistic rewrite theory making reflective features maude 
probabilistic rewrite theory specified ordinary system module metadata associated rewrite rules 
facility specifying metadata rewrite rules supported release maude 
probability information rewrite rule module look crl label cond metadata cond terms definable module 
interpreter loop mode module mentioned capability associating metadata information rewrite rules provide input output environment user enter module followed rewrite command 
interpreter reads rewrite command initial term rewrite 
stage interpreter compute nondeterministic choices possible choosing rewrite described semantics probabilistic rewrite theory section 
interpreter decision nondeterministic choice proceed rewriting 
current design choice limited interpreter chooses nondeterministic choice fairly equal probability choices various nondeterministic choices 
choose user defined 
particular nondeterministic choice fixes rewrite label matching context substitution 
number rewrite rules get enabled moment 
interpreter computes probabilities associated various rewrites chosen nondeterministic choice say particular substitution selected probability expressions general variables 
moment interpreter calls random number generator decide probabilities calculated decide rewrite rule apply 
mentioned sub step choosing probabilistic choice thought simulating sided biased dice probability coming particular side equal probability choices 
side comes throw determine rule apply 
choice selected rewrite applied 
rewrites term start interpreter completed maximum number rewrites specified command final term just output output bu er 
proposed probabilistic rewrite theories general semantic framework supporting highlevel specification probabilistic systems massively concurrent real time features 
shown systems symbolically simulated analyzed model checked existing algorithms finite state 
remains ahead including show detail existing models ccs probabilistic petri nets automata models naturally expressed framework develop deductive aspects probabilistic rewrite theories suitable probabilistic temporal logics develop tools supporting formalism including system model checking tools generalize existing approach model concurrent probabilistic systems continuous real time features combining ideas developed real time rewrite theories gain greater experience case studies applying specification formalism wide range areas 
acknowledgment supported part defense advanced research projects agency contract numbers onr muri project logical framework adaptive system interoperability 
narciso mart oliet reviewing previous versions giving feedback 
agha mason smith talcott 
foundation actor computation 
journal functional programming 
gul agha 
actors model concurrent computation 
mit press 
rajeev alur david dill 
theory timed automata 
theoretical computer science 
mark gul agha 
customization composition distributed objects middleware abstractions policy management 
proceedings sixth international symposium foundations software engineering fse sigsoft pages 
christel baier edmund clarke marta kwiatkowska mark ryan 
symbolic model checking probabilistic processes 
automata languages programming icalp pages 
christel baier marta kwiatkowska 
model checking probabilistic branching time logic fairness 
distributed computing 
michael ben 
advantage free choice completely asynchronous agreement protocols 
proceedings nd acm symposium principles distributed computing podc 
andrea luca de alfaro 
model checking probabilistic nondeterministic systems 
foundations software technology theoretical computer science 
manuel clavel jose meseguer 
reflection rewriting logic applications maude language 
imsa pages 
information technology promotion agency japan 
hansson time probability formal design distributed systems 
volume amsterdam 
elsevier 

compositional approach performance modelling 
cambridge university press 

stochastic process algebras new approach performance modeling 
bagchi editors modeling simulation advanced computer systems 
gordon breach 
marta kwiatkowska norman david parker 
prism probabilistic symbolic model checker 
marta kwiatkowska norman roberto segala jeremy 
verifying quantitative properties continuous probabilistic timed automata 
international conference concurrency theory 
nancy lynch roberto segala vaandrager 
hybrid automata 
page 
centrum voor wiskunde en informatica cwi issn 
eker lincoln mart oliet meseguer clavel duran quesada 
maude 
rd international workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
paterson fischer lynch 
impossibility distributed consensus faulty process 
jacm volume pages 
ajmone marsan 
stochastic petri nets elementary 
lecture notes computer science advances petri nets 

ajmone marsan 
petri nets performance analysis 
lecture notes computer science lectures petri nets basic models 
jose meseguer 
rewriting unified model concurrency 
technical report sri csl sri international computer science laboratory february 
revised june 
jose meseguer 
conditional rewriting logic unified model concurrency 
theoretical computer science 
peter jose meseguer 
specification real time hybrid systems rewriting logic 
appear theoretical computer science maude csl sri com 
pnueli zuck 
probabilistic verification tableaux 
proceedings symposium logic computer science cambridge pages 
pnueli zuck 
probabilistic verification 
inf comput volume pages 
priami 
stochastic calculus general distributions 
proceedings 
rajeev alur thomas henzinger 
logics models real time survey 
real time theory practice volume lecture notes computer science pages 
springer verlag 
roberto segala nancy lynch 
probabilistic simulations probabilistic processes 
international conference concurrency theory pages 
talcott 
actor rewriting theory 
meseguer editor proc 
st intl 
workshop rewriting logic applications number electronic notes theoretical computer science 
elsevier 
appendix pmod byzantine protecting machine int sorts steps flag binary contents subsort binary subsort bool subsort oid op null flag ops binary ops steps op nil number processors maximum number faulty processors op machineint op nat binary contents op md nat binary contents op 
nat contents msg msg msg decide binary msg op comm assoc id nil op bcast contents configuration var contents var var flag var oid vars machineint var binary class process val binary step steps round machineint machineint cnt machineint cnt machineint machineint machineint flag flag acq eq bcast nil eq bcast rl step metadata rate rl send step bcast metadata rate crl receive step fi metadata rate crl step cnt cnt acq bcast md metadata rate crl step cnt cnt acq bcast md metadata rate crl send step cnt cnt step acq bcast metadata rate crl received step fi metadata rate crl receive step metadata rate crl set step flag null metadata rate crl set step flag null metadata rate crl set step flag null metadata rate crl decide step flag true decide metadata rate rl choose step metadata rate rl choose step metadata rate rl step cnt cnt cnt cnt metadata rate 
