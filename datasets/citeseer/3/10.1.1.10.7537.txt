interactive deformation modal analysis constraints kris hauser chen shen james brien modal analysis provides powerful tool efficiently simulating behavior deformable objects 
shows manipulation collision constraints may implemented easily modal framework 
results example simulations 
results demonstrate applications errors introduced linearization acceptable resulting simulations fast stable complex objects stiff materials 
key words animation techniques physically modeling simulation dynamics deformation modal analysis modal synthesis finite element method video games interactive simulation real time simulation constraints precomputed dynamics 
interactive modeling deformable objects wide range applications surgical training video games 
applications require realistic real time simulation complex objects 
unfortunately straightforward simulation methods turn prohibitively expensive modeling objects modest complexity 
high cost simulation couples reality cpu cycles shared tasks need faster sophisticated simulation methods clear 
ingenious techniques modeling deformable objects proposed 
examples include multi resolution representations avoid wasting time irrelevant details reformulating dynamics stable extensive precomputation minimize runtime costs robust integration schemes afford large time steps approaches list due space constraints :10.1.1.10.2603:10.1.1.19.860:10.1.1.40.3173
provides perfect solution satisfies requirements interactive applications 
technique known modal analysis originally introduced graphics community decade ago largely neglected couple notable eecs computer science division university california berkeley example demonstrates complex model deformed modal simulation method 
object furthest viewer shows undeformed configuration 
nearer objects deformed force indicated blue arrows 
tions 
techniques mentioned modal analysis provide perfect solution interactive application provide solution suits applications quite 
results show modal analysis effectively model situations deformable object directly manipulated constraints interacts environment contact forces 
demonstrate linear modal analysis incur errors inherent linearization dynamics errors acceptable contexts particularly exaggerated deformations desired 
precomputing modal decomposition complex object may take hours precomputation applications fixed content computational cost occurs content development worth dramatic increase runtime performance 
concepts required manipulate modal equations certain extent conceptually difficult implementation surprisingly simple 
results shown gener ated implementation ported platforms sgi irix windows linux sony 
platforms able obtain interactive simulation times relatively complex models 
background modal analysis established mathematical technique extensively mechanical aerospace civil engineering disciplines decades 
large extent follows direct application methods developed fields task interactively simulating deformable solids 
issues unique interactive simulation imposing manipulation constraints computing fast collision responses 
focuses issues 
discussion modal analysis finite element method text cook detailed discussion modal analysis mathematical theory applications may text silva 
modal analysis introduced graphics community pentland williams fast method approximating deformation 
hybrid framework previously described terzopoulos fleischer separated motion deformable solid rigid component deformation component 
deformable component existed non inertial frame moved rigid component 
avoid cost computing modes particular object pentland williams linear quadratic deformation fields defined rectilinear volume object actual modes embedded object region fashion similar free form deformation 
approximated modes computationally inexpensive generates reasonable results compact objects approximated rectilinear solid 
pentland colleagues integrated modal deformation techniques interactive modeling system 
stam developed modal method modeling trees blowing wind 
starting deformable object computed low frequency modes articulated structure described tree 
closed form solutions mode computed response tree stochastic wind field computed efficiently 
james pai implemented system computing real time modal deformations commodity graphics hardware 
focused modeling deformable skin soft tissues attached moving charac ters background elements surgical simulation 
shen colleagues demonstrated interactive system simulate models vertices laptop pc special hardware acceleration 
related includes sound generation techniques modal synthesis deformation techniques global shape functions general similarities object mode shapes 
van den doel colleagues analytically computed modes simple geometric shapes sampled modes real objects compute realistic sounds simulated environments 
brien colleagues developed similar techniques numerically computed modes finite element description object 
examples deformation techniques global shape functions include free form deformations dynamics extensions deformable superquadrics boundary element method :10.1.1.10.2603
modal bases proven efficient way compactly encode shapes deformations 
focuses primarily integrating manipulation contact constraints modal framework prior applying types constraints flexible body simulations 
methods mechanical properties object generally captured function maps state object distribution internal forces 
nearly non trivial system function nonlinear representation state require variables 
consequently modeling object behavior time involve integrating large nonlinear system differential equations 
systems typically far complex solved analytically type numerical solution method employed 
modal analysis process nonlinear description system finding linear approximation finding coordinate system linear approximation 
process transforms complicated system nonlinear equations simple set decoupled linear equations may individually solved analytically 
main benefit modal approach behavior system computed efficiently 
decoupled equations solved analytically stability limitations plague numerical integration methods eliminated 
may examine decoupled components discard irrelevant problem hand 
linear formulation model bending bar produces acceptable results small moderate amounts deformation 
larger deformations significant amounts distortion appear 
example shows deformation corresponding bar second transverse mode 
drawbacks modal approach 
linearizing original nonlinear equations means solution order approximation true solution 
objectionable linearization error depends application extent objects deform initial configurations 
illustrated small moderate deformations exhibit little noticeable error casually observed 
errors grow noticeable cartoon exaggerated appearance may desirable applications 
second drawback arises decoupling linear system requires computing eigendecomposition 
believe drawback particularly significant 
content interactive applications constant precomputed content development stored objects 
furthermore linear systems sparse fast robust publicly available codes may efficiently compute decompositions 
remainder section describes computes modal decomposition object decomposition efficiently model object behavior 
material graphics community include completeness 
discussion focus particular including manipulation collision constraints modal framework 
overview entire process shown 
modal decomposition modal decomposition physical system begins linear set equations describe system behavior 
general equations describing system preprocessing interactive user interaction generate tetrahedral mesh build system matrices compute eigen decomposition modal synthesis object geometry material properties contact inertial forces collision geometry constraints deformable object motion compute rigid body parameters build collision structures rigid body simulation diagram illustrates preprocessing steps construct deformable modal model object processes subsequently generate interactive motion description 
may nonlinear obtains linear equations linearizing point typically rest configuration system 
linearized equations general form kd respectively known system stiffness damping mass matrices respectively vector generalized displacements forces indicates differentiation respect time 
physical meaning generalized force displacement vectors method computing system matrices depend type method modeling system 
general finite element methods refer reader excellent text cook 
implementation piecewise linear tetrahedral finite element method described brien hodgins 
details computing system matrices appear 
modal decomposition refers process diagonalizing equation 
general form modal decomposition nearly arbitrary systems systems arising finite element method structure amenable simpler manipulation provided assume damping matrix linear combination restriction known rayleigh damping restriction produces results superior simple mass damping commonly graphics applications 
conditions diagonalizing equation equivalent solving generalized symmetric eigenproblem symmetric matrices 
cook describe process detail repeat result 
restriction rayleigh damping equation may rewritten rayleigh coefficients 
columns solution generalized symmetric eigenproblem kx mx diagonal matrix eigenvalues equation may transformed vector modal coordinates external force vector modal coordinate system 
row equation corresponds single scalar second order differential equation zi zi gi 
analytical solutions equation zi arbitrary complex constants complex frequency 
absolute value imaginary part frequency radians second hertz mode real part mode decay rate 
special case term radical equation zero gives critically damped solution zi te 
columns vibrational modes object modeled 
see 
mode property displacement velocity object scalar multiple mode produce acceleration scalar multiple mode 
property means modes interact decoupling system set independent oscillators possible 
eigenvalue mode ratio mode elastic stiffness mode mass square mode natural frequency radians second 
general eigenvalues positive free body system zero eigenvalues correspond equivalently ll cholesky decomposition kl symmetric eigendecomposition 
rows show side top view bowl bowl vibrational modes 
modes selected illustration non rigid modes distinct eigenvalues excited transverse impulse bowl rim 
body rigid body modes 
rigid body eigenvalues zero rigid body displacement generate elastic forces 
decoupled system equations approximation original linear system generate exactly results original linear system 
course linear system may approximation initial nonlinear problem solved equation solved equation 
furthermore simulation required numerical time integration equation solved integration analytical solutions equations 
discarding modes decoupling equation solving resulting components analytically provides significant benefits derive additional benefit considering components needed 
particular discard modes significant effect phenomena wish model 
eigenvalue associated particular mode large force required cause discernible displacement mode large 
expect environment upper bound magnitude forces encountered lower limit amplitude observable movement 
example modeling indoor environment expect encounter forces excess braking force large truck able observe displacements mm 
wi min res max frc mode mode behavior unobservable 
imaginary part determines frequency mode 
modes half display frame rate cause temporal aliasing 
removing modes stiff high frequency observed change appearance resulting simulation removing greatly reduce simulation cost 
objects worked nearly modes unobservable 
typical result object vertices fewer modes need retained 
furthermore number modes retained nearly independent resolution model 
convenience matrix columns corresponding discarded modes removed matrix rows corresponding discarded modes removed 
note square oscillator coefficients time steps analytical solution mode equation describes mode behave external forces acting 
solutions requires way modeling responses external forces setting initial conditions 
set initial conditions described node positions velocities setting oscillators match conditions requires finding appropriate values coefficients 
initial conditions transformed modal coordinates 
mode 
critically damped case 
note real real 
complex complex conjugate pairs 
case equation evaluate real value 
compute response mode impulse delivered transform impulse modal coordinates tg compute shown set zero replaced tg 
modes behave linearly response system forces applied arbitrary time may computed time shifting impulse response adding existing values 
ce ce state oscillator stored simply pair complex numbers reflect current values time system advanced forward time values get multiplied constant step multiplier mode may cached avoid cost evaluating exponential 
impulses applied system simply require adding appropriate values oscillator state 
modes complex conjugate pairs modes reduced single oscillator 
constraints compute behavior decomposed system extremely efficiently method particularly useful accommodates manipulation constraints collision response 
working original system constraints node positions nearly trivial implement 
collision response requires sophistication conceptually straightforward 
unfortunately applying constraints modal basis requires moving node positions modal coordinates unintuitive 
matters complicated discarded modes transformations noninvertible 
interactive manipulation wish include continual constraints part system optimal way remove degrees freedom prior performing modal decomposition 
examples demonstrating approach seen james pai modal method modeling tissue deformation deformable sheet example 
see accompanying animations 
approach dynamic constraints require recomputing eigendecomposition time constraint added removed system 
james pai accomplished similar boundary element method sherman morrison woodbury updates know corresponding incremental update scheme eigensystem :10.1.1.10.2603
apply manipulation constraints decomposed system 
set degrees freedom original system wish constrain places willing apply forces order enforce constraints 
manipulation task point object dragged typically require 
denote displacement force vectors elements corresponding removed 
similarly rows removed columns removed 
desired accelerations constraint locations 
combining bit manipulation obtain solving yields denotes pseudoinverse 
velocity constraints differ gets replaced impulse tf 
position constraints enforced similar fashion long adjust mode evolve interval force applied diagonal matrix components sii compensates motion mode interval 
dynamics simulation implementing deformable dynamics simulator free bodies modal analysis accomplished combining modal simulation standard dynamics simulator 
modal system embedded rigid body frame systems evolve time 
systems interact inertial effects 
modal system experience forces moves inertial moments rigid body change modal system deforms 
object rotating rapidly effect significant omit 
included additional computational cost 
inertial effects due translational rotational acceleration rigid body frame need modeled explicitly long forces generating accelerations applied modal system 
modeling deformable objects collision detection method optimized rigid body simulations requires modification precomputed data structures invalid object deforms 
method employs hierarchy axis aligned bounding boxes aligned world axes efficiently find potential collisions 
tree initially constructed undeformed shape object 
leaf node tree corresponds primitives object bounding box node encloses primitive 
bounding boxes interior nodes encompass union children 
tree topology chosen minimize overlap interior nodes 
object deforms tree invalid recomputing tree topology time step prohibitively expensive 
update scheme similar described van den bergen 
time step bounding boxes updated tree topology change 
expected arbitrary deformation result poorly structured tree extent deformation limited approach quite 
trees collision system efficiently determine contact points normal contact 
collisions object ground plane collision normal simply plane normal 
collisions objects look involved tetrahedra determine normal overlap 
physical contact site may produce pairs colliding primitives 
reduce computation constraint collisions cluster nearby collision points treat cluster single collision point 
implemented collision response penalty method constraints 
expect penalty methods require time step achieving real time performance stiff penalty coefficients lead instability 
constraint method requires timestep stable 
modal system allow arbitrarily large time steps absence external influences prefer stable constraint methods 
implement penalty methods point surface violates penalty constraints force proportional magnitude violation applied point 
transforming forces modal coordinates applying force modal system done described previously 
penalty force applied modal rigid body systems 
constraint collisions require complex implementation find produce better results 
collision occurs simulation backed point time step objects came contact 
contact forces calculated minimal outward normal force ensure objects continue penetrate 
determined solving linear programming problem normal forces contact points 
baraff details efficient method solving required forces 
constraint methods traditional simulations solve resting contact impulses calculate elastic response 
elastic components response handled differently modal simulation elastic behavior modal system models directly 
enforce velocity constraint solves impulse ensure contact velocities negative secondly enforces acceleration constraint solves force ensure contact accelerations negative 
derivation methods requires equations relating change velocity acceleration respect applied impulse acceleration respectively 
location contact point object expressed local coordinate frame rigid body 
location linear function modal coordinates uw matrix averages appropriate node locations barycentric location surface triangles 
location world coordinates rp translation rotation matrices rigid body frame 
differentiating respect time obtain world velocity acceleration yields rigid body angular velocity acceleration notation denotes matrix differentiating equation respect applied impulse allows obtain change velocity gener ated constraint force time interval pl object inertia matrix torque generated differentiating equation respect applied force produces similar result change acceleration contact point 
equations linear similarly solve position joint collision constraints 
position constraints require point velocity acceleration zero 
joint constraints require relative velocities accelerations zero merely requiring subtraction proper terms 
collision constraints require normal components relative velocities accelerations nonnegative solve nonnegative normal order adhere common convention reusing previously modal frequencies rayleigh damping coefficients 
intended meaning clear context presence absence bold notation 
example fig 
nodes 
modes time brain sec sec bunny min sphere video sec sheet video sec bat video sec table table list number vertices rendered models number nodes elements finite element models number modes retained time required compute decomposition demonstration objects 
force magnitude 
constraints solved simultaneously linear program 
solving done real time large number contact points system response remain interactive 
model friction contacts simplified coulomb friction model 
system computes force opposite tangential velocity contact points 
magnitude force equals magnitude normal force multiplied friction coefficient 
friction force causes predicted tangential velocity reversed limited force cause slipping 
interactivity sacrificed precise method add additional slip constraint re solved constraints 
find heuristic reasonable producing plausible friction effects 
results implemented system models deformable objects hybrid formulation combines motion deformation computed modal analysis 
objects may interactively manipulated user penalty forces displacement constraints 
modal objects may collide environment 
collisions treated penalty forces constraints objects may attached joint constraints 
table lists models demonstrate results shows geometric kinematic complexity models precomputation time required perform modal decomposition model 
brain model demonstrates pulling pushing force application 
force vectors projected modal basis modifying modal state projected resulting realistic deformation 
images show pulling pushing manipulation constraints 
typically image sequence shows frames animation pair objects colliding 
object hybrid simulation incorporates rigid deformable modal component 
images shows constraints deform objects 
object left image shows object prior deformation right object shows results red constraint points moved 
images screen shots application running natively sony 
yellow circle highlights cursor user poke pull elastic 
points model constrained realtime moderate speed computer mhz pentium ii sony 
limit reached solutions equation equation require relatively expensive computation singular value decompositions calculated real time matrices large 
created animations see supplemental materials demonstrating system simulated interactively moderately complex objects 
results appear plausible resemble animations simulated straightforward computationally expensive methods 
bottlenecks hybrid modal rigid body simulation collision detection solving linear program constraints 
reduce computation solving linear program extent contact point clustering may tweaked sacrifice accuracy speed 
figures show objects involved collisions ground plane 
sequence images showing stanford bunny model bouncing ground plane 
methods tetrahedral finite elements embed high resolution non manifold surfaces inside tetrahedral volume model 
benefits technique surface shading texturing specified independently dynamics poorly constructed polygon soup models may 
brain model extremely complex object model object modeled way 
model demonstrates non uniform material properties legs beak material rest body 
modal analysis shown useful tool interactively producing realistic simulations elastic deformation 
analytic calculation modal amplitudes complex oscillators removal highfrequency modes stabilizing effect simulations allowing large time steps taken 
despite approximation linearity modal analysis simulation results quite plausible objects 
exceptions long thin highly deformable objects nonlinear behavior dominates expected behavior 
despite specific drawbacks objects manipulated quite efficiently realistically modal models 
small costs modal analysis reduced leveraging graphics hardware shown james pai implementation sony 
hardware cpu costs reduced modifying mode amplitudes evolution time steps projection forces application manipulation constraints 
recognize implementation details fit released source code linux implementation gnu license 
hope making code available encourage modal simulation methods 
code may accessed www cs berkeley edu job projects 
acknowledgments authors christine help models example members berkeley graphics group support reviewers insightful comments 
supported contributions sony computer entertainment america intel animation studios nfs ccr state california micro 
david baraff 
fast contact force computation rigid bodies 
proceedings siggraph pages july 
david baraff andrew witkin 
dynamics simulation non penetrating flexible bodies 
proceedings siggraph pages july 
david baraff andrew witkin :10.1.1.40.3173
large steps cloth simulation 
proceedings siggraph pages july 
steve seth green brian curless tom duchamp zoran popovi 
interactive skeleton driven dynamic deformations 
proceedings siggraph july 
robert cook david michael 
concepts applications finite element analysis 
john wiley sons new york third edition 
gilles mathieu desbrun marie cani alan barr 
dynamic real time deformations space time adaptive sampling 
proceedings siggraph pages july 
petros faloutsos michiel van de panne demetri terzopoulos 
dynamic free form deformations animation synthesis 
ieee transactions visualization computer graphics july 
eitan petr peter schr der 
simple framework adaptive simulation 
proceedings siggraph pages july 
doug james dinesh pai :10.1.1.10.2603
accurate real time deformable objects 
proceedings acm sig graph pages august 
doug james dinesh pai 
dynamic response textures real time deformation simulation graphics hardware 
proceedings siggraph pages july 
craig gotsman 
mesh compression fixed spectral bases 
graphics interface pages june 
paul doug james dinesh pai 
real time large deformation character hardware 
proceedings acm siggraph symposium computer animation pages july 
nuno julio silva editors 
theoretical experimental modal analysis 
research studies press hertfordshire england 
dimitri metaxas demetri terzopoulos 
dynamic deformation solid primitives constraints 
proceedings acm siggraph pages july 
matthias ller julie dorsey leonard mcmillan robert barbara cutler 
stable real time deformations 
proceedings acm siggraph symposium computer animation pages july 
james brien jessica hodgins 
graphical modeling animation brittle fracture 
proceedings siggraph pages august 
james brien chen shen christine 
synthesizing sounds rigid body simulations 
proceedings acm siggraph symposium computer animation pages july 
alex pentland essa martin bradley horowitz stan sclaroff 
modeling system virtual sculpting modal forces 
symposium interactive graphics pages march 
alex pentland john williams 
vibrations modal dynamics graphics animation 
proceedings siggraph pages july 
xavier provot 
deformation constraints mass spring model describe rigid cloth behavior 
graphics interface pages may 
thomas sederberg scott parry 
free form deformation solid geometric models 
proceedings acm siggraph pages august 
chen shen kris hauser christine james brien 
modal analysis real time deformation 
proceedings siggraph 
jos stam 
stochastic dynamics simulating effects turbulence flexible structures 
computer graphics forum august 
demetri terzopoulos kurt fleischer 
deformable models 
visual computer 
van den bergen 
efficient collision detection complex deformable models aabb trees 
journal graphics tools 
kees van den doel paul dinesh pai 
foley automatic physically sound effects interactive simulation animation 
proceedings siggraph pages august 
kees van den doel dinesh pai 
synthesis shape dependent sounds physical modeling 
proceedings international conference auditory display icad 
kees van den doel dinesh pai 
sounds physical shapes 
presence 
wu horst simon 
user guide 
technical report lbnl lawrence berkeley national laboratory 
