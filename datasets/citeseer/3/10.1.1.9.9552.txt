message medium unifying modern messaging paradigms semantic web bakshi mit csail technology square cambridge ma usa ai mit edu inception internet successful communications channels starting mail internet relay chat usenet newsgroups adding weblogs instant messaging news feeds 
systems developed quite independently past half century continue extended new functionality addresses broadening needs users supports full range semantic expression 
stepping back observe having variety messaging frameworks creates significant problems users attempting manage collate messages single topic context may discussed multiple media 
posit message constrained way medium 
messaging applications slowly converging functionalities 
show unified approach messaging achieved single step appropriate rdf semantic web technology data model 
exploit data model develop appropriate user interface elements allow aggregation messages protocols discuss benefits arise scenario 
categories subject descriptors information systems applications communications applications electronic mail information browsers bulletin boards computer conferencing 
general terms management design human factors standardization keywords mail instant messaging irc newsgroups annotation web logs blogs news feeds rss wiki user interface messaging rdf semantic web information management 
greatest accomplishments internet enable communication various forms 
mail instant messaging im internet relay chat irc usenet newsgroups weblogs rss feeds provide channels individual group convey information 
arguably plethora protocols developed variations people messaging 
copyright held author owner 
www may new york ny usa 
acm xxx 
david karger mit csail technology square cambridge ma usa karger theory lcs mit edu dennis quan ibm watson research center rogers street cambridge ma usa ibm com systems developed quite independently past half century continue extended new functionality addresses broadening needs users supports full range semantic expression 
stepping back observe having variety messaging frameworks creates significant problems user maintaining context messaging media 
result efforts address problem begun cosmetic best microsoft apple deal subset 
attempt unifying messaging general solution certainly possible feel semantic web presents opportunity right forum address problem 
core themes semantic web integrating enabling interoperation disparate systems 
research shown benefits rdf enable integration areas ranging semantic web services bioinformatics 
furthermore semantic web true name benefited original web tying related web pages means ontologically classified metadata efforts large scale mining demonstrated 
feel critical application internet benefit revolution communication 
motivation existence multiple independent messaging systems presents users various problems 
example choosing messaging medium sender restricting recipient particular subset messaging functionalities chooses im discuss related project participants file away appropriate im folder 
best user save file relocate file aptly named directory file system 
course problems disparate functionality overcome great extent feature creep gradual addition enhanced functionality appropriate messaging application unanticipated eventually deemed useful 
example im clients early clients limited functionality text messaging ones support sharing images sharing documents videoconferencing digital whiteboard interactive collaboration 
similarly mail clients instant messengers irc clients widgets displaying lists people means notifying senders recipient absence 
furthermore newsgroup readers mail clients threaded message views different mechanisms filtering messages specific people 
soon expect sophisticated anti spam capabilities im problem worsens domain similar mail 
problems having multiple messaging media supplying parity functionality 
significant messages exchanged form conversational thread 
user may initiate conversation im expecting short 
discussion extensive bringing participants generating lengthy mails chat sessions convenient way cutting pasting bind early im portion discussion mail chat portions message sent im file mail folder 
possible reconstruct threaded view initial instant messages mail responses 
fact media email related communication supported isaacs report contrary popular belief major im workplace complex discussions coordination simple question answering 
similarly handel report chat workplace primarily related discussions 
practically speaking single conversation smeared different media channels functional disparity segmented storage exacerbate problem user context maintenance 
messages exchanged different messaging media need semantically related combination differences stores formats data models set supported operations medium get way effectively 
example quick im conversation pertaining particular design element software captured project log purposes traceability provenance 
alternatively knowledge gleaned newsgroup rss feed subsequent discussion author information captured project historical log 
users discipline messaging medium semantically related information problem persist semantics known priori 
information may related information retrospect 
related accessed uniformly simultaneously working topic 
application permit user flexibility assigning semantics context 
situation complex common considering problem multiple messaging media 
user perspective selection medium situational convenience decision structure message exchange mechanics 
medium content orthogonal medium selection 
duplication features order increase parity content capabilities various media symptom problem needing able different media communication situation warrants sacrificing 
feature duplication completely successful resolving problem meeting request ms outlook sent mail im 
symptom decoupled nature message content semantics medium messaging channel encourages practices exacerbate problem context maintenance media 
problem expected multiple systems simultaneously providing different styles solutions fundamental problem interpersonal group communication 
different communication channels pieces functionality specific key activities associated infrastructure addressing authentication enhanced additional features users grown reliant systems interchangeably bumping limitations abstractions activities longer necessarily respect medium boundaries 
approach posit message constrained way medium 
user able look message way natural apply message natural message handling action regardless particular message medium effect unify messaging treat message types equivalent semantic entities unified data model 
result opportunity exists take bigger picture look situation recast problem terms broader messaging abstraction decouples messaging media determine messaging mechanics techniques messaging content semantics aspect greater import user 
people different media take advantage differences mechanics communications timing communications 
decoupled semantics communication far user concerned 
apply rdf key semantic web technology unifying data model various messaging paradigms 
unifying messaging paradigms realize number immediate benefits various parties allowing messaging remain open developments 
existing systems unified common model enhance forms messaging incorporating features currently specific messaging paradigms 
unified approach enable allow user better control context maintenance types messages class entities arbitrarily collected create context 
user able retrospectively create contexts currently impossible 
addition ease application user interface development aid ui researchers seeking allow user better manage information 
current messaging paradigms captured data model rdf data model robust allow integrating new messaging paradigms 
furthermore unified data model rdf semantic web messaging supplies incredible corpus information interoperable semantic web open processing semantic web agents 
expressing unified model messaging rdf render messaging amenable exciting possibility semantic messaging message bodies semantically marked known ontologies 
result open automated processing yielding new avenues enhancing personal productivity sophisticated cscw leveraging promise semantic web 
show unified approach messaging achieved appropriate rdf semantic web technology data model appropriately designed user interface elements 
section sketch unified ontology representing different message types discussed 
details ontology important goal highlight fact messaging frameworks share substantial conceptual structure reflecting ideas sender recipient subject reply 
properties specific messaging protocol really determine role message 
section describe single running exam ple illustrates unified tool handling messages arriving protocols listed 
tool built haystack system unified information management environment 
exploits common messaging ontology incoming information user convenient ways 
section discuss benefits arise aggregating messaging protocols 

related section discuss related identifies attempts ameliorate problems similar resulting multiple messaging media context mail supporting motivational assertions 
address previous attempts attacking problem multiple messaging paradigms 
conclude short survey common messaging paradigms basis informing messaging unification 
task management mail maintaining semantic boundaries information user perspective fundamental problem require complexities multiple messaging media manifest 
user perspective mail supports important abstractions encapsulated semantic boundary tasks archives 
users opted flexible application email critical task management resource significant amount research interest focused improving mail task management application 
field study designed inform design bellotti uncovered primary problem users experienced mail task management resided able get task oriented overview glance scrolling inspecting folders collating related items extended thread responses survey associated files links 
general problem occurred information required context easily available scrolled view due unrelated messages filling inbox available separate list ms outlook contacts calendar items furthermore observed threads activity email correspond straightforward message threads important allow users fine tune contents users need cut application boundaries include items desktop useful links sent email task related collection 
result study bellotti developed system takes purely ui approach improving mail task management 
related commercial effort software seeks improve task management developing project contexts locate relevant items contacts messages documents ms outlook lotus notes mail clients 
come appreciate importance context semantic boundary user perspective 
furthermore difficult see boundary may needed abstractions tasks means exchanging information incorporating variety types media similarly support task management 
media capture additional knowledge artifacts content context management problems messaging paradigms outlined earlier increasingly emerge 
previous unifying messaging recognizing importance messaging media workplace attempts begun attempt combine 
example microsoft outlook mail client supports awareness tracking appropriately coloring contact sender receiver icon im initiation 
initiated im session goes msn messenger application persistence possible allowed 
im session persisted context mail messages 
apple similarly superficially integrated mail application address book 
definite improvement state affairs system developed collaborative user experience project ibm 
allows just awareness tracking colleagues mail starting instant message conversation simply clicking person initiate chat session persisting context ongoing thread possibly mail conversation 
user may change im mail urgency situation warrants eventually need capture conversation particular manner 
interestingly allows user annotate mail self secretary 
identified problem implemented reasonably complete robust solution done im mail 
unclear enhanced functionality accompanied change data model im mail integrated disjoint infrastructures 
promotion comprehensive solution messaging general data model integration disparate messaging systems supports extensibility taken incremental organic approach similar feature creep add additional functionality messaging systems need clear 

current communication sys tems having demonstrated notion semantic boundaries context messaging important user point view current attempts provide integrated support im mail turn attention considering big picture unifying various messaging paradigms order support notion universally 
survey popular existing digital communications mechanisms particular properties usage niche existing problems order understand nature communications facilitate captured succinctly 
mail 
mail serving generalized asynchronous communication mechanism social interaction related collaboration widely mode digital communication 
whittaker report mail evolved asynchronous communication mode focal point task management information organization simply serves mechanism assigning tracking receptacle various kinds information 
primarily due mail inbox capable maintaining context related messages simplifying information availability locating serving constant reminder items needing attention 
furthermore available single convenient accessible long term archiving mechanism allowing easy filing items inbox letting inbox archive 
instant messaging 
nardi describe instant messaging synchronous communication mode people facilitates instantaneous exchange short messages resulting casual conversation atmosphere 
individual messages may short immediate rarely persisted instant messaging allows maintenance longer term sessions allow awareness presence parties facilitating longer term context maintenance allowing continuation conversation 
mail users consider im session heavyweight activity requiring formal addressing process greeting common ground determination prior information exchange 
newsgroups 
newsgroups comprise largest online communities resulted proliferation internet 
whittaker findings group discussion equally applicable newsgroups general 
similar email persistent means asynchronous messaging newsgroups differ fundamental way 
mail im invitation paradigms newsgroups allow public access participation ongoing conversations 
interesting aspect mode communication general interest participants known easily inferable establishment common ground dialogue fairly easy 
remarkably minority newsgroup users contribute majority discussion majority users content passive observers 
whittaker group discussions function active dialogue exchange information repositories immediate knowledge embedded archives past discussions searched newcomers 
discussions newsgroups provide means members interactive question answer debate means broadcasting information general interest 
useful able capture relevant portions news contexts 
irc group chat 
group chat systems communication technologies come support social interaction collaboration discussion decision making group memory 
newsgroups chat systems tend publicly accessible conversations tend ephemeral conversation stored archive 
lack persistence generally product near synchronous nature communication mode 
conversations proceed fast responses statement topic interleaved new topics completely different threads yielding unintelligible sequence messages utility knowledge repository limited 
shared annotations 
annotation normally considered form communication shared context peer revision annotations gain characteristics newsgroup postings 
observe primary distinguishing characteristic annotation specification document serves annotation topic 
furthermore collaborative annotation systems permit replies posted annotations giving systems notion threading similar mail newsgroups 
web annotation products microsoft office allow users post documents online websites enable users participate threaded online discussions 
interest developed annotation systems permit metadata textual messages specified 
news feeds web logs 
interesting arena messaging exists distribution channels provided online news feeds web logs known blogs 
developed framework broadcasting difficult view ones messaging general 
forms messaging news feeds web logs usually unidirectional streaming messages news articles large audience 
case physical world news style distribution preclude bidirectional dialog occurring 
analog letters editor provided news feeds return mail address included 
nascent forms communication discussed news feed clients lacking basic functionality possessed client software protocols 
wikis 
wikis phenomenon collaboration web allow users just passive recipients information world wide web actively able edit website 
conflates traditional notions webmaster audience website 
consider inherent collaborative systems notion messaging 
may consider wikis means messaging 
annotations newsgroups messages unknown audience 
newsgroups annotations sender editor generally anonymous 
axes messaging space survey messaging paradigms realize despite differences communication systems placed context compared considering handful useful partitioning criteria 
communication paradigms respect major partitioning criteria table 
axes partitioning messaging space discussed 
result clear cut segmentation space application restricted particular place axis closely correlated values axes 
discuss common axes realizing 
findings starting point integration 
public versus private communication paradigms may grouped support public access dissemination information recipients unknown priori control subscription status intended private communication participants known selected authoring message 
usual notion public may restricted means employees particular 
synchronous versus asynchronous synchronicity captures essence conversation timing serves fundamental divider different communication modes 
asynchronous communication sender wait response conversations generally carried longer periods time party having luxury formulating thought response 
hand users exchange information relatively rapidly synchronous communication reply generally expected reasonable time period facilitate active dialog 
synchronous communication closer face face communication tends informal places greater importance social interaction cues response times awareness presence 
persistent versus ephemeral inherent idea asynchronicity notion automatic persistence boon bane 
asynchronous messages mails tend longer persist automatically 
long term persistence supports capturing knowledge allows extraneous information add noise information environment making difficult obtain attend important information 
hand short point messages characterize synchronous communication persistence usually explicitly specified option due way systems evolved 
unidirectional versus bidirectional messaging systems loosely categorized unidirectional bidirectional 
simply put bidirectional messaging generally requires participation multiple parties sender recipient clearly recognizable addressable mail im 
unidirectional messaging content just put audience required able respond 
examples include newsgroups rss feeds wikis 
uncommon directed messages soliciting reply particular users newsgroups 
traditional bidirectional messaging systems mail unidirectional messaging periodic newsletters specify reply address 

approach developing unified framework messaging approach aims preserve existing communication capabilities supported internet 
allowing messages located step right direction strictly necessary 
importantly multiple message formats understandable transparent messaging application 
leave messaging application ms outlook understood multiple information entities message types difficult position flexible easily assimilate new message types 
believe data model unified allow treating message types just messages class entities respect 
user perspective unified data model users want see just messages units communication pertaining single topic uis treat underlying information having uniform data model 
furthermore survey various communications mechanisms shows messages share modeled share notions sender receiver body synchronicity persistence privacy ui enhancements measurably improving user experience heavily rely require expressive extensible supporting data model hinted primarily ui approach enhancing mail 
enhancements merely cosmetic 
way effectively support greater uniform ui functionality witnessed feature creep messaging applications supporting data model 
writing separate user interfaces message type simplify user developer experience developing consistent user interfaces single data model 
begins unifying data model allow support multiple messaging paradigms capturing inherent advantages 
sample interface developed data model 
chosen base approach unification messaging paradigms specifying data model declaratively defined ontology messaging resource description framework rdf semantic web technology integrating disparate systems data 
ontology understood complemented related driver code translates sending receiving different message types appropriate underlying protocol 
rdf easily expressible portable format describing semantic networks labeled directed graphs 
table existing messaging systems synchronous generally persistent private instant messaging mail asynchronous generally persistent public irc newsgroups annotation news feeds decision serves goal fronts 
rdf supports semi structured modeling scheme allows flexibility capture core aspects messaging unique characteristics different messaging paradigms notion presence awareness exist asynchronous messaging synchronous asynchronous messages senders receivers 
model variety concepts annotations news feeds 
rdf allows capture entities simultaneously multiple types message meeting request mail instant message 
rdf data model restrict modeling strict message type hierarchy supporting extensibility integrating new communication paradigms 
rdf model enables exciting possibilities semantic messaging discuss 
objective developing data model sample user interface show perfect approach unifying messaging case doing rdf possible just significant advantages status quo provides tangible application source critical information mass needed realizing vision semantic web 
fulfill rdf data model building support unified messaging haystack information management project computer science artificial intelligence laboratory mit 
goal haystack project develop tool allows users easily manage documents mail messages appointments tasks information 
haystack uses rdf describe connections different documents user corpus metadata concerning document 
haystack user interface exposes general tools viewing navigating various kinds information user corpus 
unifying data model section discuss various elements messaging ontology 
depicts different elements ontology interrelate means example 
order apply rdf problem hand give ontological specifications represent people messages higher level semantic groupings messages discussions threads member tps report discussion message member message reply body messages modeled ontology defining set classes properties called predicates 
representations generalize notions sender recipient reply threads form basis messaging data model 
model allows aggregate arbitrary types messages supporting types medium interchanges people switching public post private mail discussion time capturing entire conversation maintain message context crucial activities task management 
avoid detailed discussion individual message type enhancements data model simplicity similarly modeled property associated person track online status instant messaging 
realize ontology related driver code abstracts away complexities various underlying protocol implementations allows model interface address messaging user centric manner deficiencies existing systems addressed root simultaneously facilitating uniform functionality 
identity addressing messaging protocol currently maintains address scheme 
example smtp servers programmed route email messages recipients mail addresses 
message specifically directed routed means particular address system needs able resolve address driver capable interpreting 
current messaging systems single identifier identification addressing unified messaging ontology necessarily distinguishes concepts person may different address message delivery multiple mail identifiers im accounts people may sharing address 
necessary sending messages concern specific address message sent 
people represented directly means person class 
recipients senders specified instances message body text john doe person left complete tps report 
john mailto john org address address specification class 
address specifications specify specific address person resource 
people associated addresses predicate 
clarifications identity addressing warranted 
mentioned identity context person simplicity important realize times person role target message sending message webmaster expand notion identity include person role identities 
draw distinction notion audience address 
message eventually directed address audience necessarily defined 
example message may directed newsgroup wiki audience depends dynamic subscriber list newsgroup frequent possibly unknown visitors wiki web 
address generally implies known audience may case 
attempt model notion address current 
messages order incorporate various forms messaging available define class message general manner 
system message unit expressive communication transported senders recipients 
definition allows unify concepts instant messages mails newsgroup postings annotations chat articles delivered news feeds 
messages come various forms 
bulk messages textual context semantic web useful provide messages conform established schema meeting requests money orders bank statements 
important note objects text documents financial statements currency exist outside messaging environments 
notion message independent extent orthogonal notions text documents financial statements 
define message resource sender set recipients specified 
message contains body type known system 
conversations built messages higher level aggregations model patterns communication define user specified contexts 
highlight conversations user defined contexts subsection 
message threads conversations consist collection messages connection messages conversation defined user tends loosely defined generalized topic context thread necessarily connections 
threads starting point conversation user add threads conversation relevant remove unrelated messages sends message locating message received person clicking reply 
example conversation messaging drivers ontology designed specifically existing messaging systems 
result base messaging infrastructure consists series drivers capable sending receiving messages protocols pop smtp 
message sent system able determine available messaging drivers best suited delivering message circumstances 
messaging drivers responsible emulating functionality normally available underlying protocol 
example mail uses mime headers describe metadata concerning messages irc messages typically metadata 
techniques encoding messages soap envelopes employed cases 
messaging drivers responsible incorporating messages haystack rdf repository messages accessible user interface 
results messages persistent 
messaging drivers protocols support particular properties awareness presence responsible keeping properties date rdf store 
user interface unified messaging ontology gives means integrating currently available modes communication extensible fashion 
user realize benefits ontology user interface carefully constructed capture expressiveness underlying data model preserving benefits specific systems highlighted earlier 
illustrate user interface takes advantage data model refer example conversation 
scenario pose features dialog stock analysts working brokerage uses web logs internally keep fund managers personnel informed 
john real estate market analysis mary general analyst attempting resolve differences outlook particular stock watching 
list steps taken mary conversation 
mary checks inbox notices john updated blog real estate industry outlook 
notices downgraded acme feels real estate market going cyclical trend 
research indicated acme just opened office real estate 
feels fund managers ill advised follow john recommendation 
refers message posts correction blog 

john notices reply mary posts update blog indicating true acme opened office fully operational year 
recommendation stands 

mary concerned data inaccurate asks report colleague jim research department 

mary receives data capturing key measures extracts forward looking 
realizes missed fact office operational year 
replies john blog update issues correction 

mary creates new conversation secondary review sends meeting request instant message jim context order hold meeting review companies 

jim mary meeting manager agents negotiate free time book appropriate room facilities agent meeting 
mary agent notifies meeting am thursday 

mary adds previous thread conversation john earlier messages jim conversation order maintain proper context new conversation 
example illustrates interesting capabilities presently possible existing messaging systems 
example starts mary receiving message encapsulates incremental change john blog 
current changes supported blogs overwrite previous results certainly nice get incremental updates messages closely followed case 
mary capable responding blog message blog message 
literally reply property placed blog rdf rss file server 
intuitive user point view cases 
sends reply blog john 
john responds similarly 
mary issues request research wing firm receives requested data semantically marked appropriately query 
mary replies john blog entry different kind message interleaved thread mail treated message 
mary create new context secondary review send meeting request im 
able instant modality communication sacrificing semantic expressibility create context priori 
furthermore message semantically encoded automatically responded jim agent 
hidden negotiation agents logged thread final message mary jim confirming appointment 
accessed needed mary 
mary retrospectively add discussion john current conversation drag drop provide better context 
users add messages conversations treating conversation category 
note options interface extremes general spectrum imagine sender specifying particular read date time 
note way messages different types textual machine processable structured messages meeting requests invitations combined conversation 

discussion discussed presents solution real problem employing rdf central semantic web technology better model communication systems messaging paradigms 
result solution exhibits number desirable characteristics various parties possible 
problem solved explicitly resorting rdf semantic web feel electronic communication comprises significant portion just web traffic internet traffic 
solution problem stay close interoperable direction world wide web internet 
applying rdf problem may allow bootstrap semantic web building engine continuously generates semantically marked information 
rdf solution brings allows forwards compatible step closer realizing potential semantic web 
developers benefit unified data model messaging allows quickly easily support multiple messaging paradigms rapidly incorporate new ones 
furthermore expressive power facilitated single flexible data model rdf allows provide users functionality possible heretofore capturing locating content regardless transmission protocol step relieving information overload 
artifact generalized treatment messages provides common user interface functionality messaging paradigms 
example bodies messages mail clients im clients worse mail clients support spell checking body subject message 
uniform data model body subject message regardless message type text fields 
fi nally developers provide users uniform functionality regardless message type ability file send picture rss feed im 
hci researchers constrained understand user behaviors task management particular messaging paradigm mail understand issues artificial restrictions 
furthermore similar developers unified approach messaging unified data model gives hci researchers expressive capability need capture user level behavior metaphors support appropriate ui interactions 
users gain approach messaging 
prototype built haystack represents evolutionary step terms providing single unified interface supporting interpersonal group communication 
unification produces desirable effect maintaining context making information conveniently accessible locating semantically related information crucial usability perspective 
capability heretofore impossible due segregated nature existing messaging paradigms respective clients 
supporting heterogeneous set message types preserved tied existing communication capabilities supported popular systems mail im resulting sum greater parts 
argue plethora messaging protocols advantage abandoned existence im implies user mailbox get filled hand comments common im existence news reader means user decide checking news period time getting related mail 
unified approach sacrifices benefits 
physical partition information created multiple protocols simulated logical virtual partition information unified environment 
messages delivered im semantically marked view defined shows messages delivered im 
specific folder defined contains arriving news 
time unified approach lets user break partitions sense 
example instant message triggered lengthy mail discussion moved conversation mail certain mailing lists want interleave news rss feeds occupying inbox discuss topic 
leverage data model reduce usability problems current messaging systems 
whittaker points mail similarly messaging systems subjects user information overload resulting important messages attended 
drawback primarily due combination high rate information arrival users lacking time unwilling file items away lack features mitigate effects overload flexible message status tracking capabilities reminder scheduling semantic clustering loosely related items powerful ir support 
casting messages conversations rdf gain persistent description add additional metadata improve searches information retrieval techniques 
example message annotated user associate keywords searches keywords bring message 
users better able reduce noise manage information overload willing file information worrying able find 
creating higher level organizational concepts conversations categories users able consolidate different types messages similar topics reducing clutter users having intuitive ways navigate message corpora 
furthermore organization needed fact 
discussed various advantages system message receiver perspective 
possible drawbacks sender receiver 
current systems sender decide messaging system send message 
decision implicit application chosen send message 
system user explicitly need specify message sent 
feel greater burden currently just different kind decision 
receivers far relied different application contexts implicitly file messages may learn file new system 
easily overcome providing pre packaged virtual folders correspond current application boundaries mail messages news rdf approach unified messaging semantic web fact helps facilitate 
discuss section 

remains done order produce intuitive system employed users daily basis 
asserted unified messaging model useful user studies required understand users prefer unified user interface status quo 
hope exploit rdf capability encode arbitrary metadata order realize usability benefits 
employing richer forms semantic markup order better describe nature messages sent cscw applications workflow management automated filtering tools integrated users messaging clients 
example piece information sent characterized sender recipients systems may able automatically file information proper categories process requests embedded information negotiate meeting time place 
imagine user system serving gatekeeper user managing user inbox prioritizing received information user consumption 
senders realize benefits sending semantic messages voting survey message responses automatically tallied open message separately get results 

acknowledgments supported mit ntt collaboration mit oxygen project 

quan huynh karger haystack platform authoring user semantic web applications proceedings twelfth world wide web conference www 
resource description framework rdf model syntax specification 
www org tr rec rdf syntax 
berners lee hendler lassila semantic web scientific american may 
whittaker sidner mail overload exploring personal information management mail proceedings chi human factors computing systems 
nardi whittaker interaction instant messaging action cscw 
whittaker terveen hill dynamics mass interaction cscw 
mynatt conversations collide tensions instant messaging attributed chi 
whittaker talking strangers evaluation factors affecting electronic collaboration cscw 
gupta grudin web annotations asynchronous collaboration documents cscw 
kahan annotea open rdf infrastructure shared web annotations www 
quan lin katz karger sticky notes semantic web iui 
box soap simple object access protocol 
msdn microsoft com library html asp 
huynh quan karger user interaction experience semantic web information proceedings twelfth world wide web conference www 
bellotti howard smith email task design evaluation task management centered email tool chi 
www com isaacs whittaker kamm character functions styles instant messaging workplace cscw 
gruen reinvented email prototype ibm technical report tr 
handel chat doing cscw 
www microsoft com office outlook view werner gilman bacon urn namespace life science identifiers 
www org workgroups technical architecture resources docs htm bartolini priest semantic web support business business commerce lifecycle 
proceedings www 
dill eiron gibson gruhl guha semtag seeker bootstrapping semantic web automated semantic annotation 
proceedings www 
