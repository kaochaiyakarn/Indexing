impact multihop wireless channel tcp performance fu luo petros lu lixia zhang mario gerla ucla computer science department los angeles ca lixia gerla cs ucla edu studies tcp performance stationary multihop wireless network ieee channel access control 
show specific network topology flow patterns exists optimal window size tcp achieves highest throughput maximum spatial reuse shared wireless channel 
tcp grows window size larger leading throughput reduction 
explain tcp throughput decrease observations analysis packet loss overloaded multihop wireless network 
find network overload typically signified packet drops due wireless link layer contention buffer overflow induced losses observed wired internet 
offered load increases probability packet drops due link contention increases eventually saturates 
unfortunately link layer drop probability insufficient keep tcp window size model analyze link contention behavior propose link red fine tunes link layer packet dropping probability stabilize tcp window size devise adaptive pacing better coordinate channel access packet forwarding path 
simulations demonstrate improvement tcp throughput proposed techniques 
keywords tcp performance multi hop networks congestion contention control tcp popular internet transport protocol provides reliable data delivery 
adjusts congestion window size response detected packet loss mainly due buffer overflow bottleneck link wired internet 
ieee wireless networking technology gains popularity tcp continue dominant transport protocol order reuse numerous network applications developed far 
multihop wireless network underlying mac coordinates access shared wireless channel provides link abstraction upper layers tcp 
seek gain understanding tcp operates multihop wireless network 
unique characteristics ieee multihop wireless networks may greatly affect tcp performance 
contention access shared wireless channel location dependent 
packets may dropped due consistent link layer contention resulted hidden exposed terminals 
second improving channel utilization spatial reuse simultaneous scheduling transmissions interfere highly desirable 
window adaptation mechanism tcp impacts degree spatial reuse 
summary location dependent contention spatial channel reuse highly dependent offered load managed tcp protocol 
study impact location dependent link layer contention spatial channel reuse tcp performance 
start simple network topologies flow patterns illustrate effect multihop wireless channel tcp congestion control throughput got interesting results simulations experiments 
specific network topology flow patterns exists tcp window size say throughput maximized maximum spatial channel reuse 
function number hops tcp flow traverses remains independent bandwidth delay bottleneck link 
second current tcp protocol operate typically grows average window larger resulting throughput decrease due degraded spatial reuse increased packet loss 
observe throughput reduction highest throughput simulated scenarios 
analysis packet loss reveals reason tcp throughput decrease 
multihop wireless network link layer contention typically happens buffer overflow 
packet due link layer contention offer sign network overload congestion 
probability packet dropping due link contention increases offered load tcp window size increases saturates intermediate node forwarding path non empty packet queue 
long node multihop wireless network allocates reasonably large buffer packets buffer overflow observed pathological cases 
unfortunately gradually increasing packet dropping probability due link layer contention insufficient stabilize tcp window size modeling hidden exposed terminal effects shows offered load reaches optimal operating point dropping probability nearly zero 
load exceeds point packet dropping probability grows accordingly non negligible 
probability flattens saturates load increases 
discovery sheds light improve tcp performance multihop wireless networks 
propose link layer techniques improve tcp throughput link red algorithm fine tune wireless link dropping probability stabilize tcp window size adaptive pacing scheme better coordinate spatial channel reuse 
simple techniques lead throughput increase compared standard tcp 
rest organized follows 
section compares related 
section reviews contention spatial channel reuse ieee multihop wireless network 
section presents thorough study relationship tcp window size throughput simple topologies traffic patterns 
section explains tcp throughput decrease perspective packet loss multihop wireless networks 
section describes evaluates link red adaptive pacing 
discuss related issues section 
section concludes 
related tcp wireless cellular networks active research topic 
balakrishnan summarized tcp optimization techniques :10.1.1.113.2393
focus tcp designs single hop wireless link random wireless channel errors transparent tcp 
ieee protocol wireless cellular networks channel error induced losses severe issue link layer retransmissions hide channel errors 
study tcp performance different wireless network setting multihop wireless channel 
holland investigate effect mobility induced link breakage wireless ad hoc networks tcp performance :10.1.1.19.3122
focus study interaction dsr routing dynamics tcp window adaptation 
packet losses due node mobility congestion control mechanisms tcp applied loss events 
studies mainly address issue congestion detection improving tcp mobile ad hoc networks 
particular measurements detect packet losses due congestion non congestion conditions 
network conditions detected icmp destination unreachable ecn messages feedback intermediate nodes 
sundaresan uses intermediate node feedback decide sending rate retransmissions 
study interaction tcp link layer static ad hoc network 
show mobility induced packet losses tcp performance sub optimal 
tcp detect optimal operating point underlying ad hoc network current congestion control schemes 
gerla study impact tcp ack tcp performance effect unfairness capture effect backoff mechanisms csma fama :10.1.1.131.2057
tcp observed small throughput traverses multiple wireless hops window size larger packet 
authors call link layer acks help reduce packet drops 
study shows link layer acks implemented ieee tcp performance suffers performance degradation due link layer contentions 
papers study fairness issue multiple tcp flows pure hybrid ad hoc networks 
xu propose red dropping local network neighborhood ideal busy time slot measurements 
different aspects 
focus fairness improve bandwidth efficiency tcp letting tcp detect operating point enables maximum spatial reuse underlying ad hoc network 
second measures neighborhood contention level monitoring idle busy time slots 
local observation idle slots may accurate depends ongoing traffic statistics 
contention drops link layer gauge neighborhood congestion level 
due hidden terminal effects contention drops local node reflect traffic load neighborhood areas 
design incur message exchange overhead 
pacing method congestion control packet radio networks proposed 
pacing resembles backoff mechanism adopted ieee protocol 
pacing different standard backoff mechanism proposed specifically reduce hidden terminal problem 
link layer contention spatial channel reuse consider stationary multihop wireless network ieee distributed coordination function dcf 
single wireless channel shared nodes network 
receivers transmission range sender receive packets 
ieee dcf packet transmission preceded control handshake rts cts messages 
overhearing handshake nodes data ack location dependent contention spatial channel reuse 
hop chain topology 
hidden terminal exposed terminal transmission optimal spatial channel reuse maximum throughput sets nodes ae bf cg dh transmit alternatively 
neighborhood sender receiver defer transmissions yield channel subsequent data ack transmissions 
study stationary network consider packet loss due routing breakage 
assume multi hop contention due hidden exposed terminal problem main source packet losses 
note packets get dropped due band channel errors 
ieee networks retransmission mechanism hides uncorrelated channel noises non broadcast traffic 
reported hop unicast packets losses seen higher layers low link level retransmission mechanism 
hidden terminal sender neighborhood receiver going transmission transmission range sender 
may receive receiver cts due various reasons collisions hidden terminal may disrupt going transmission initiating transmission 
hand exposed terminal potential receiver neighborhood sender going transmission 
receive respond sender rts 
ieee protocol sender drops packet retransmitting data times receiving ack typically caused hidden terminals 
sender drops packet sending rts message times receiving cts typically caused exposed terminals 
illustrate hidden exposed terminal problem 
adjacent nodes apart 
tcp performance hop chain tcp maximum window packets packet size bytes packet size bytes packet size bytes tcp size packets measured throughput kbps ns simulated results real testbed measurement chain length hops optimal window chain length tcp achieves highest throughput window size hop chain 
left throughput single tcp different packet sizes 
middle comparisons ns simulations testbed experiments different maximum tcp window sizes 
single tcp packet size 
right tcp optimal window size chain topologies different lengths 
transmission range node set carrier sensing range interference range 
example node hidden terminal going transmission node decode cts transmission range 
sense data transmission carrier sensing range 
node may transmit node say node time disrupting going transmission data transmission corrupted times row node drop packet 
hand node exposed terminal carrier sensing range transmitting node node respond rts message node say unsuccessful rts retries node drop packet 
location dependence contention allows spatial channel reuse multihop wireless network 
specifically transmissions interfering scheduled simultaneously 
transmit concurrently reusing shared wireless channel 
spatial channel reuse greatly improve network throughput especially large network spreads wide area 
tcp window size throughput section examine relationship tcp window size throughput multihop wireless networks various configurations including chain grid cross random network topologies 
analysis simulations show excessive packets flight equivalently large tcp congestion window size degrade spatial channel reuse decrease tcp throughput 
fact throughput decrease simulated scenarios 
derive optimal tcp window sizes tcp achieves maximal throughput simple scenarios 
simulation results hop chain topology verified real experiments 
chain topology start chain topology packets originate node forwarded node 
general chain topology represents packet forwarding path generated minimum hop routing protocol dsr aodv 
chain topology successive transmissions single tcp flow interfere move downstream destination resulting link layer contention packet drops 
consider chain settings described section 
easy see nodes spaced hop away transmit simultaneously 
hop chain maximum number simultaneous transmissions upper bounded maximum spatial channel reuse achieved 
ieee mac rts cts data ack sequence enforces wait packet pipe size hop packet regardless link bandwidth delay 
total pipe size entire packet forwarding path consequently tcp achieves highest throughput window size hop chain assuming ideal scheduling identical packet size 
tcp window size value tends utilize channel larger increase channel utilization 
fact show reduces tcp throughput 
chain length hops queue size deviation table deviation queue lengths 
chain topologies different lengths 
packet avg 
tcp wnd size table average tcp window size different hop chain 
analysis matches simulations experiments perfect scheduler available 
obtain maximum tcp throughput chain specific length vary maximum tcp window size sender packets 
setting run tcp flow seconds measure achieved throughput 
settings tcp achieves maximum throughputs plotted right chain topologies different lengths 
shows match reasonably particularly longer chains 
short chains simulation value packets larger reason tcp packets flight distribute evenly nodes 
chain longer uneven packet distribution equivalently deviation queue sizes intermediate nodes tends smaller shown table 
result independent packet sizes long sizes successive packets tcp flow identical 
left shows identical different packet sizes kb 
throughput achieved tcp different due different ieee mac overhead 
leave tcp window size unbounded observe throughput decreases compared maximum achievable value 
left middle shows throughput decrease equivalent enforcing flow control tcp advertised receiver window size 
tcp flow tcp flow nodes nodes complex topologies 
distance neighboring nodes meters 
left cross topology nodes tcp flows 
right grid topology tcp flows 
hop chain 
chain grows longer observed throughput decrease high 
table shows unbounded bounded average tcp sender window size stabilizes packets hop chain times 
show section throughput decrease tcp flows excessive window sizes significant complex topologies 
random grid topologies throughput decreases 
rough check simulations middle shows results measured testbed 
experiments configured mimic simulation parameters left 
lucent orinoco wireless cards operating ad hoc mode mbps 
notebooks form hop chain network neighboring nodes transmission range 
manual routing 
average difference measured tcp throughput simulated results 
importantly simulations experiments match perfectly 
shows simulations accurate model reality 
complex topologies flow patterns extend study scenarios multiple tcp flows complex topologies including cross grid random topologies 
keep simulation parameters section explicitly topology flow maximum measured optimal avg 
measured throughput kbps throughput kbps win size win size hop chain hop chain node cross node grid node grid node grid node random table tcp throughput window size 
data tcp throughput window sizes aggregation flows topology 
specified 
cases observation shows exists window size tcp achieve highest throughput tcp general experiences decrease maximum achievable throughput 
cross topology cross network topology shown run tcp flows node node node node 
table shows flow measured aggregate tcp window packets steady state 
throughput decrease observed 
grid topology shows grid topology 
run tcp flows respectively 
case half tcp flows go horizontally half go vertically spaced evenly 
results summarized table 
cases measure tcp window sizes significantly larger throughput decreases flow case 
random topology run extensive simulations random network topologies generated tool ns distribution 
place nodes uniform randomly rectangular area 
tcp flows sources destinations randomly chosen 
simulations observe existence tcp window size maximum aggregate throughput achieved 
tcp throughput suffers reduction maximum achievable throughput shown table 
summary simulations analysis confirm topology traffic pattern exists window size tcp achieves highest throughput maximum spatial channel reuse 
function number hops tcp flow traverses remains independent bandwidth delay intermediate node 
tcp window grow unbounded normal case common observation examined topologies flow patterns tcp throughput decreases 
packet loss tcp flows multihop wireless networks section studies tcp throughput decreases window sizes larger tcp grows window size start examination causes packet loss multihop wireless networks 
simulations show link layer contention induced packet drop dominates buffer overflow experienced tcp flows typical multihop wireless networks 
number contending nodes shared channel increases number flight packets increases large tcp window size leads higher degree link layer contention packet drops 
tcp throughput decreases window size goes model probability contention induced packet drop show insufficient stabilize tcp window size desired value analysis forms foundation potential improvement section 
packet loss multihop wireless networks wired internet packet losses mainly due buffer overflows bottleneck router 
stationary ieee multihop wireless networks packet loss mainly caused buffer overflows link layer contentions due hidden exposed terminals section detailed analysis simulations shows packet loss due link layer contentions 
packet loss due buffer overflow rare reasonable buffer size node packets 
example chain topology maximum queue size packets node shown table 
average queue sizes packets 
fact second simulation run tcp packet drops total transmissions due link layer contention 
caused buffer overflows 
conducted extensive simulations different flow layouts complex network topologies including grid cross random topologies 
simulation results show buffer overflows rare packet drops experienced tcp flows due link layer contentions 
packet loss multihop wireless networks clearly different wired internet 
result implies tcp congestion control designed adapt packet loss due buffer overflow wired internet may multihop wireless networks different type packet loss dominates 
packet loss due channel errors detected ieee link layer acknowledgment recovered retransmissions 
node id max 
size avg 
size table queue sizes packets 
packet drop due buffer overflow 
tcp packet dropping probability seen tcp aggregate window size tcp flows network packets offered load bit sec udp cbr performance packet drop probability probability link layer contention packet drops tcp udp flows 
left single tcp flow hop chain 
contention drops experienced tcp flow window sizes 
right single udp flow hop chain 
contention drops experienced udp cbr flow offered load 
tcp window size link layer contention level level link layer contention increases number nodes contend shared wireless channel increases possible scenarios hidden exposed terminals happen see section 
queue length node small link layer contention consequent packet drop probability large long large number nodes backlogged queues 
hand larger tcp window size packets flight nodes backlogged leading higher level link layer contention packet loss 
shows simulations single tcp udp flow hop chain 
left plots link drop probability function tcp window size 
shows contention drop probability gradually increases upto packets injected chain 
better understand general case simulated cbr udp flows various offered load 
see right knee points curve offered load versus dropping probability 
knee point probability packet drop due link layer contention nearly zero second knee point probability saturates 
probability monotonically increases knee points 
simulation results complex topologies including cross grid random topology confirm measure contention packet drop probability respect aggregate traffic load level curve matches right small difference absolute probability values 
knee points right clear physical meanings 
corresponds tcp window size maximum throughput achieved maximum spatial channel reuse second corresponds maximum contention level nodes backlogged 
tcp window size stay knee point packet dropping probability zero 
probability link layer contention induced packet drops model hidden terminal effect consider generic ad hoc network setting 
node backoff state process rts cts handshake data transmission 
note rts cts handshake guarantee eventual successful data transfer 
steady state time slot define probability node initiates rts flow cs probability subsequent successful data transfer flow note expected value provide description average behavior flow steady state 
successful data transfer flow requires sender initiate flow 
sender sense idle channel rts initiation 
addition order rts cts handshake successful receiver hidden signals terminals side sender range 
example node hidden terminal flow steady state probability flow hidden terminals cs steady state cs loss generality define term cs carrier sensing efficiency sender flow just conditional probability eventual successful data transfer flow initiated 
intuitively hidden terminal events caused inefficiency carrier sensing sender side 
successful data transfer requires idle channel areas sender receiver neighborhood rts initiation requires idle channel sender side 
steady state contention drop probability order relate link layer packet drop hidden terminal effect note fact protocol packet dropped unsuccessful rts diagram markov chain calculating packet drop probability hidden probability 
parameter 
consider discrete markov model retrying process steady state long term failure hidden probability rts initiation 
states represent number failed sender attempted flow transition triggered rts initiation 
initiation packet goes probability fails interested dropping probability probability state considering state state holds 
unity condition probability measure number rts convert time slots note expected time slots initiation cs average packet loss probability time slot steady state cs cs loss load properties random topology derived flow packet drop probability 
relate network load random topology multiple flows randomly distributed 
previous observation channel capacity number hop packets link drop probability drop probability max min th max th link load buffer load packets comparison link drop red loss load curves define traffic load number competing nodes backlogged nodes network time instant 
represent cs terms network capacity load perspective global spatial reuse 
apply derive steady state contention drop probability respect network capacity load 
assumptions 
assume traffic distributed network purely random fashion 
specifically backlogged senders network node equal backlog probability denotes total number nodes network 
second assume nodes randomly distributed network network covering area expected space node occupies 
network level carrier sensing capacity defined maximum number concurrent rts network collisions data forwarding capacity maximum number concurrent successful data transmissions 
easy see consider system steady state 
global backlog average number backlogged sender total nodes network assume senders evenly distributed network expected area covered node steady state time slot order nodes initiate rts minimum spacing required average nodes total senders initiate concurrently 
succeed concurrent data transmissions 
flow carrier sensing probability readily cs successful data forwarding probability equation flow 
flow loss probability ieee networks rts maximum retry count 
backlogged flows aggregated loss probability initiated node properties characterize behavior contention packet loss threshold values defined follows 
random topology nodes denotes maximum number nodes transmit data packets concurrently collision 
value network achieves highest channel spatial reuse 
nodes denotes maximum number nodes initiate rts messages perceive clear channel carrier sensing 
consider case network underloaded property denote maximum number nodes concurrently transmit data topology number backlogged nodes smaller packet drop probability 
basic idea proof follows 
average nodes transmit simultaneously 
steady state 
drop probability link 
means long network underloaded link drop negligible 
second case number backlogged nodes larger network overloaded property network overloaded number backlogged nodes greater link drop probability increases increases 
see true 
case nodes successfully initiate rts message nodes transmit data collisions 
easy see increasing function dl dm 
shows link drop probability increases network load expressed increases 
look third case 
network load increases link drop probability starts saturate property network heavily loaded sense link drop probability remains stable saturated state 
case nodes nodes initiate rts nodes transmit data packets collisions 
long term remains statistically flat 
discussions tcp suffers throughput decrease graceful contention drop behavior explain standard tcp suffers throughput decrease described section 
tcp achieves highest throughput window size maximizes spatial reuse 
analysis simulations section indicate packet drop probability close window size tcp window size grows link drop probability starts increase gradually stabilizes small value left 
small drop probability insufficient keep tcp average window size avg larger tcp flows typically overload ad hoc network cause excessive collisions competing wireless nodes 
having packets flight reduces network bandwidth capacity compared best operating point 
comparison red red active queue management protocol deployed internet gateways :10.1.1.128.5092
drops packet probabilistically queue length local buffer 
interesting explicitly compare contention packet drop red drop behavior 
red contention drop naturally built mechanism specifically tuned protocol 
useful tcp current form loss load curve appropriately tuned 
particular contention drop may happen network capacity reached due randomness channel contention maximum drop probability small compared standard parameters red 
exists important difference contention packet drop attractive mechanism ad hoc network 
shown red drop probability reflects local queue size contention drop probability reflects total number backlogged nodes network better way indicate global load level network wise operating point 
section simple link layer designs contention packet drops beneficial tcp flows 
tcp performance improvement lred adaptive pacing section describes link layer techniques improve tcp performance multihop wireless networks 
link red lred technique shapes curve packet loss probability versus link layer contention help tcp stabilizing window size maximum throughput 
addition adaptive pacing aims improving spatial channel reuse better coordination contention channel access 
combination techniques able improve tcp throughput 
link red analysis section shows ieee inherent link layer packet dropping probability small stabilize tcp window size main idea link layer random early dropping lred control tcp window size tuning link layer dropping probability perceived channel contentions 
similar red algorithm linearly increasing drop curve queue size exceeds minimum value min th lred increases packet dropping probability link layer contention level measured retransmission counts exceeds minimum threshold 
lred link layer maintains moving average number packet retransmissions 
head packet dropped marked probability average retransmission count 
node average retransmission count small say min th head line packets transmitted usual 
average retransmission count larger dropping marking probability set minimum computed dropping probability upper bound max lred pseudo code shown algorithm 
lred integrates naturally ecn enabled tcp flows 
blindly dropping packets simply mark link layer allow ecn enhanced tcp flows adapt offered load losing packets 
tcp performance improved cost slightly complex link layer design 
summarize lred simple mechanism accomplishes goals 
tuning loss curve serves congestion signals elastic flows long term tcp detect proper offered load network 
second dropping packets aggressively enables tcp adapt window size maximum spatial channel reuse minimum channel contention achieved 
lred improves fairness multiple competing flows reduces channel capturing effect observed 
algorithm red packet require avg retry average mac retries packet avg retry mark prob pacing mark prob min avg retry min th max th min th max set pacing mark mark prob pacing retry avg retry avg retry retry adaptive pacing current ieee protocol node constrained contending channel random backoff period plus single packet transmission time announced immediate downstream node 
exposed terminal problem see section exists due lack coordination nodes hops away 
adaptive pacing solves problem incurring nontrivial modifications ieee second wireless channel 
basic idea node back additional packet transmission time necessary addition current deferral period random backoff plus packet transmission time 
extra backoff interval helps reducing contention drops caused exposed terminals extends range link layer coordination hop hops packet forwarding path 
working lred adaptive pacing enabled lred node finds average retransmission count min th 
pseudo code shown algorithm 
algorithm adaptive pacing require extra backoff received ack random backoff ran backoff cong win data transmission succeeded 
setup backoff timer pacing extra backoff tx time data overhead backoff random backoff extra backoff start backoff timer tcp window packets lred improvement time distribution tcp window tcp newreno tcp lred lred stabilizes tcp window size optimal value 
time distribution instantaneous window size narrower sharper compared tcp newreno 
tcp maximum sending window packets improvement pacing hop chain throughput tcp newreno tcp mac pacing average tcp sending window packets packet dropped mac improvement pacing hop chain contention drops tcp newreno tcp mac pacing average tcp window packets round trip time sec 
improvement pacing hop chain rtt tcp newreno tcp mac pacing adaptive pacing increases tcp throughput hop chain 
left throughput gain adaptive pacing 
middle adaptive pacing reduces link layer contention induced packet drops 
right adaptive pacing slightly reduces rtt 
performance evaluation section evaluate tcp throughput gain lred adaptive pacing individually 
apply techniques show throughput gain fairness multiple tcp newreno flows chain cross grid topologies 
lred hop chain evaluate lred able stabilize tcp window optimal point run simulations maximum window size set packets lred 
time distribution different window sizes shown fig 
see lred tcp flow spends time window size normal tcp grows window larger average size packets 
adaptive pacing hop chain topology evaluate effectiveness adaptive pacing terms throughput gain link layer contention induced packet drops tcp round trip time rtt 
fig shows chain length hops lred pacing improvement tcp flow variable chain tcp newreno newreno lred pacing chain length hops aggregate throughput tcp flows bit sec lred pacing improvement tcp flow variable chain tcp newreno newreno lred pacing chain length hops lred pacing improvement average tcp achieved window tcp newreno newreno lred pacing chain length performance improvement tcp newreno flows hop chain topology 

left single flow middle aggregate throughput flows right average window size 
simulation results tcp newreno flows pacing 
adaptive pacing tcp able achieve throughput gain window size shows packet drop counts indicates average window size pacing significantly reduced packet drops due contention slightly reduces rtt shown right 
adaptive pacing help tcp window size stays shown left 
set average window achieved large larger case adaptive pacing see table section 
reason adaptive pacing reduces link layer contention induced packet drops boosting tcp window size 
lred pacing chain topology plots results chain topologies various lengths single tcp flow tcp flows 
cases observe lred pacing enhanced link layer able increase tcp throughput lred stabilizes tcp window size close optimal value 
chains longer hops techniques able achieve throughput gain 
longer chain better throughput improvement 
longer chain leaves larger room adaptive pacing mechanism optimize spatial channel reuse 
tcp newreno tcp newreno ll ll lred pacing flow kbps kbps flow kbps kbps aggregate kbps kbps fairness table throughput fairness comparison newreno newreno lred pacing cross topology cross topology node cross network topology run tcp flows shown left 
table records throughput fairness gains flows 
fairness results computed fairness index defined 
results show design increases aggregate throughput improves fairness flows 
hand tcp newreno unmodified link layer shows large unfairness flows 
reason ieee favors flow captures wireless channel crossing point observed :10.1.1.131.2057
grid topology study grid network topology flows shown right 
aggregate throughput fairness results recorded table details cases flows provided table 
able achieve throughput gain cases significantly improving fairness index 
discussions section discusses important issues previous study 
nr throughput nr fairness lred aggregate lred fairness flows bps bps flows bps bps flows bps bps flows bps bps table aggregate throughput fairness comparison newreno nr newreno lred pacing lred 
flows grid tcp newreno tcp newreno ll ll lred pacing flow kbps kbps flow kbps kbps flow kbps kbps flow kbps kbps aggregate fairness table throughput fairness comparisons newreno newreno lred pacing 
flows grid 
tcp variants analysis sections imply tcp vegas gauges throughput increasing congestion window size may better 
experiments show tcp vegas tcp newreno perform comparably short packet forwarding paths hops tcp vegas performs worse tcp newreno longer packet forwarding paths hops 
main reason tcp vegas keeps average window size small packets hop chain 
simulations tcp newreno best existing tcp variants compare 
variable packet size analysis simulations assume identical packet size 
packet length varies flow flows simulations show results hold exists tcp window size bytes packets achieves maximal throughput tcp grows window size larger due insufficient link layer packet dropping probabilities 
revisiting packet loss behavior network overload section observe packet losses due link layer contention buffer overflow typical network setting node nontrivial buffer size allocated tcp flow 
section examine issue 
interest buffer overflow happen conditions buffer overflow may potentially dominate packet loss 
start experiment single tcp flow hop chain 
traffic source tcp large file emulates ftp connection 
run second tcp connection multiple times buffer size nodes varying packets packets 
presence packet drop events examine detailed ns traces find cause packet losses 
plots number packet loss type function buffer size node 
shows clear transition point buffer size packets dominance loss types 
shows loss switches buffer drops link drops change buffer size packets packets 
buffer size small smaller packets buffer overflows dominate contention loss negligible buffer size grows packets larger link layer contention loss dominates buffer drops vanish 
buffer size packets loss types contribute roughly equitable drops 
result surprising larger buffer absorbs tcp incoming packets reduces probability overflow drops 
interesting observation shown buffer size intermediate node increased packets average number packets node buffer packets 
indicates average buffer occupancy quite low standard deviation middle 
maximal buffer occupancy nodes high 
clearly shows highly bursty packet transmissions happen infrequently 
reasons may cause bursty transmissions tcp mechanism mac capture effect 
tcp slow start window mechanism may lead back back transmissions 
mac capture effect due binary exponential backoff incurs burst transmissions link :10.1.1.131.2057:10.1.1.131.2057
examine case multiple flows 
interest loss behavior large number tcp flows buffer size shared flows intermediate node insufficient accommodate flight packets flows 
setting shared buffer size packets node simulated number tcp flows ranging hop chain measured contention overflow losses right 
concurrent flows introduced starting nodes chain topology 
compared left observed buffer overflow losses increase significantly 
contention losses dominate concurrent flows introduced 
period network saturation node queue size packet eventual buffer fill contention losses happen fixed probability 
period sufficiently long contention packet losses dominate 
concurrent flows introduced buffer buildup period decreases 
addition interval overflow events decreases 
simulation overflow losses dominant concurrent flows introduced 
simulations show contention losses happen buffer overflow losses scenarios 
cases dominate packet losses multiple concurrent tcp flows introduced 
buffer size packets node contention loss vs congestion loss hop chain contention loss buffer overflow congestion loss average buffer occupation maximum buffer occupation buffer size packets node buffer occupation vs buffer size hop chain standard deviation buffer occupation concurrent flows buffer packets node packets drop multiple tcp flows hop chain contention losses buffer overflows tcp loss transition left buffer loss dominates buffer small contention loss dominates buffer large 
middle average maximum queue size nodes network 
shows average queue size occupancy node low 
right multiple concurrent tcp flows hop chain 
buffer size node set packets 
contention loss dominates packet losses 
multihop wireless networks hold great promise pervasive computing wireless sensor networks 
tcp natural choice reliable data delivery networks 
systematically studies impact multihop shared wireless channel tcp performance 
results show buffer unrealistically small buffer overflow induced packet drops dominate 
scenarios packet loss due link layer contention dominates 
link layer contention drop behaves red gateway terms graceful drops presence network overload 
packet drop provided link layer insufficient keep tcp operating best throughput point 
motivates design link red compensates dropping probability 
combination lred adaptive pacing link layer achieve throughput gain tcp flows tcp semantics remain unchanged 
ieee computer society 
wireless lan medium access control mac physical layer phy specifications ieee standard balakrishnan padmanabhan seshan katz :10.1.1.113.2393
comparison mechanisms improving tcp performance wireless links ieee acm transactions networking dec holland vaidya analysis tcp performance mobile ad hoc networks acm mobicom aggarwal savage anderson understanding performance tcp pacing ieee infocom brakmo malley peterson tcp vegas new techniques congestion detection avoidance acm sigcomm gerla bagrodia zhang tang wang tcp wireless multihop protocols simulation experiments ieee icc gerla tang bagrodia tcp performance wireless multihop networks ieee wmcsa bharghavan performance analysis medium access protocol wireless packet networks ieee performance dependability symposium :10.1.1.131.2057:10.1.1.131.2057:10.1.1.19.3122
allen hidden terminal problems wireless lan ieee working group xx 
floyd jacobson :10.1.1.128.5092
random early detection gateways congestion avoidance ieee acm transactions networking aug jain 
chiu 
quantitative measure fairness discrimination resource allocation shared systems technical report tr dec research report september li charles blake douglas de couto hu imm lee robert morris capacity ad hoc wireless networks acm mobicom 
johnson maltz 
dynamic source routing ad hoc wireless networks 
mobile computing volume pages 
kluwer academic publishers 
perkins royer 
ad hoc demand distance vector routing 
ieee workshop mobile computing systems applications wmcsa 
sinha sivakumar bharghavan wtcp reliable transport protocol wireless wide area networks proceedings acm mobicom 
fu tcp multihop wireless networks ucla computer science tech 
rep fu ben greenstein meng lu design implementation tcp friendly transport protocol ad hoc wireless networks proceedings ieee icnp 
liu singh 
atcp tcp mobile ad hoc networks ieee journal selected areas july wang zhang improving tcp performance mobile ad hoc networks order detection response proceedings third acm international symposium mobile ad hoc networking computing lausanne switzerland 
sundaresan anantharaman hsieh sivakumar atp reliable transport protocol ad hoc networks proceedings mobihoc yang seah yin improving fairness tcp flows crossing wireless ad hoc wired networks proceedings mobihoc xu gerla qi shu enhancing tcp fairness ad hoc wireless networks neighborhood red proceedings mobicom gower jubin congestion control pacing packet radio network proceedings milcom de couto morris high throughput path metric multi hop wireless routing proceedings mobicom san diego 

