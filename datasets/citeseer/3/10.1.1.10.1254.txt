appear combinatorica 
preliminary version appeared ipco 
primal dual approximation algorithms feedback problems planar graphs michel goemans david williamson ibm watson subset cycles graph consider problem finding minimum weight set vertices meets cycles subset 
problem generalizes number problems including minimum weight feedback vertex set problem directed undirected graphs subset feedback vertex set problem graph problem remove minimum weight set vertices remaining graph bipartite 
give approximation algorithm general problem planar graphs subset cycles obeys certain properties 
results approximation algorithms aforementioned feedback problems planar graphs 
algorithms primal dual method approximation algorithms goemans williamson :10.1.1.6.2885
show results interesting bearing conjecture watanabe cardinality feedback vertex sets planar graphs 
problems consider general problem graph non negative weights vertices collection cycles find minimum cost set vertices cycle contains vertex call problem hitting cycle problem hit cycle hitting cycle problem generalizes problems study 
set cycles hitting cycle problem equivalent problem finding minimum weight feedback vertex set graph problem finding minimum weight set graph gamma induced gamma acyclic 
feedback vertex set problem abbreviated fvs 
directed graph digraph set directed cycles minimum weight feedback vertex set problem directed graphs fvs 
set special vertices cycles undirected graph contain special vertex subset feedback vertex set problem fvs 
contains odd cycles graph problem bip problem finding minimum weight subset gamma bipartite 
problems special cases vertex deletion problems find minimum weight minimum cardinality set vertices deletion gives graph satisfying property 
address dept mathematics room cambridge ma 
email goemans math mit edu 
research supported part nsf contracts ccr ccr darpa contract sloan fellowship ibm 
research conducted part author visiting ibm 
address ibm watson research center room box yorktown heights ny 
email watson ibm com 
restrict attention versions problems input graph planar simple 
yannakakis general np hardness proof vertex deletion problems restricted planar graphs results apply planar directed undirected subset feedback vertex set problem planar graph problem 
addition planar fvs np hard indegree outdegree vertex 
consider approximation algorithms problems 
ff approximation algorithm minimization problem runs polynomial time produces solution weight ff times weight optimal solution 
call ff performance guarantee algorithm 
give approximation algorithm general class planar hitting cycle problems includes planar feedback vertex set problem undirected directed graphs planar subset feedback vertex set problem undirected graphs planar graph problem 
algorithms primal dual method approximation algorithms 
method proven useful past years designing algorithms network design problems see example :10.1.1.5.6159
authors written survey method gives generic algorithm theorem deriving approximation algorithms hitting set problem hitting cycle problem special case :10.1.1.6.2885
algorithm analysis application algorithm theorem survey 
review previously known 
fvs general undirected graphs slightly different approximation algorithms becker geiger bafna berman see overview 
algorithms improve log approximation algorithm bar yehuda geiger naor roth number vertices 
gave approximation algorithm case undirected planar graphs show approximation algorithm case 
algorithms apply feedback vertex set problem directed graphs 
naor schieber sudan show result seymour converted log log log approximation algorithm general directed graphs 
observation improves log approximation algorithm case due leighton rao 
case directed planar graphs log time approximation algorithm performance guarantee bounded delta maximum degree graph time approximation algorithm performance guarantee number cyclic faces planar embedding graph minus 
subset feedback vertex set problem general undirected graphs approximation algorithm due klein rao agrawal ravi give log approximation algorithm 
result due naor shows approximation algorithm 
best knowledge previous approximation algorithm special case planar graphs 
graph problem klein give log approximation algorithm 
garg vazirani yannakakis give improved log approximation algorithm 
best knowledge previous approximation algorithm known case planar graphs 
result undirected feedback vertex set problem planar graphs worse known approximation algorithm general undirected graphs turns interesting 
result implies lp relaxation cycle formulation problems factor corresponding optimum value planar graphs 
known false general graphs ratio logarithmic 
ratio interesting connection conjecture watanabe berman discuss section 
conjecture states undirected planar graph vertices contains feedback vertex set size undirected planar bipartite graph contains feedback vertex set size 
bound implies existence feedback vertex set size planar graphs feedback vertex set size graph bipartite 
statement follows easily color theorem don know proof 
coloring result borodin shows planar graph feedback vertex set size jensen toth call proof reminiscent proof color theorem partly involves reducible configurations 
possible consider edge counterparts problems find subset edges meet cycle collection leads feedback edge set problem undirected graphs minimum weight feedback arc set problem directed graphs minimum weight graph problem edge removals 
problems tend simpler vertex counterparts especially planar graphs 
feedback problem general undirected graphs trivially complement maximum spanning tree problem 
minimum weight problem complementary maximum weight cut problem planar graphs polynomial time solvable problem equivalent join problem dual graph 
feedback arc set problem planar digraphs known reducible finding minimum weight dual graph solved polynomial time see example grotschel lov asz schrijver 
directed graph set arcs strongly connected 
minimum weight problem non negative weights find minimum weight 
simple approximation algorithm problem superposing arborescences 
interesting notice problems translated dual graph lead problems hitting certain cutsets dual graph problems approximated ratio primal dual method :10.1.1.6.2885:10.1.1.5.6159
structured follows 
section preliminary concepts definitions 
section reviews generic primal dual algorithm analysis goemans williamson :10.1.1.6.2885
section show algorithm leads approximation algorithm class hitting cycle problems section improve algorithm analysis give approximation algorithm 
comment integrality gap linear programming relaxation relation watanabe conjecture section 
implementation algorithms described section conclude section 
preliminaries refer cycle undirected graph refer vertex set somewhat ambiguous 
refer edge set write 
recall hitting cycle problem defined previous section 
undirected graph weight vertex collection cycles hitting cycle problem finding minimum weight set vertices intersects member cases refer cycle implicitly mean cycle stated 
restrict attention families satisfying property 
abuse notation slightly referring cycles sets edges vertices 
paths sets edges directed graphs set edges path underlying undirected graph 
property cycles path edge disjoint intersects endpoints path endpoints gamma gamma contains cycle gamma gamma contains cycle refer families satisfying property 
approximation algorithms apply hitting cycle problem input graphs restricted planar compute efficiently certain minimal cycles define moment 
claim problems interested correspond families 
notice multi graph eulerian vertex degree vertex indegree equal outdegree case fvs 
removing cycle resulting multigraph remains eulerian assuming directed case fvs 
decomposed cycles 
somewhat careful cycles may trivial cycles consisting simply duplicated edges 
shows property satisfied fvs gamma gamma consists trivial cycles 
case gamma gamma gamma gamma simple cycles implying property fvs property satisfied 
endpoints path directed gamma directed vice versa 
gamma defines directed cycle gamma contains directed cycle eulerian directed cycles consist duplicated edges 
fvs special vertex gamma gamma sure eulerian graph gamma contains special vertex say cycle decomposition gamma trivial cycles edges incident identical 
case resp 
gamma resp 
gamma give eulerian graph gamma non trivial cycle 
cases property hold 
bip observe gamma different odd 
gamma eulerian odd number edges odd contain odd cycle trivial cycle decomposition 
property holds 
fvs fvs bip satisfy additional property property cycle path edge disjoint intersecting endpoints cycles defined belongs observe case fvs guarantee directed path 
property useful implementation purposes 
approximation algorithms hitting cycle problems depend embedding planar graph 
plane graph planar graph embedding cycle partitions plane regions interior exterior regions 
associate cycle set faces interior region observe exterior face embedding belongs 
say cycle contains cycle write 
cycles said crossing cross gamma gamma 
similarly say collection cycles form laminar family cycles crossing 
observe exterior face notions crossing intersecting equivalent 
say cycle face minimal exist cycle 
collection face minimal cycles play central role approximation algorithms 
lemma shows face minimal cycles form laminar family 
lemma satisfy property face minimal cycle cross 
proof proof follows immediately property cycles cross choosing path lies interior cycles gamma contained contradiction belongs face minimal 
satisfies property face minimal cycles simple structure lemma 
lemma satisfy property face minimal cycles boundaries interior faces simple cycles 
proof suppose face minimal cycle boundary interior face 
path interior intersects endpoints 
property cycles defined cycle contained contradicts face minimality particular families satisfying property lemma shows face minimal cycles boundaries interior faces corresponding cycles graph connected 
lemma true directed feedback vertex set problem satisfy property primal dual framework hitting cycle problem special case general hitting set problem needs find minimum weight set hitting set collection sets 
precisely ground set elements weights sets 
hitting set problem finding minimum weight 
survey developed general methodology derive approximation algorithms hitting set problems called primal dual method :10.1.1.6.2885:10.1.1.6.2885
motivated sequence papers developing technique network design problems 
survey propose generic primal dual method deriving approximation algorithms hitting set problems generic proof performance guarantee 
illustrate technique variety problems claim method applied problems :10.1.1.6.2885
show technique directly applies hitting cycle problem planar graphs 
hitting cycle problem formulated integer program ip min ip subject cycles feasible violation increase uniformly fv downto gamma fv feasible gamma fv output primal dual algorithm hitting cycle problems 
primal dual method simultaneously constructs feasible solution hitting set problem solution feasible dual linear programming relaxation ip 
dual lp relaxation max subject generic primal dual method developed described :10.1.1.6.2885
specified oracle violation set vertices outputs specific set cycles hit algorithm begins empty set vertices dual solution 
feasible solution hitting cycle problem increases dual variables cycles returned violation dual packing constraints tight vertex vertex added process continues 
feasible algorithm performs clean step 
goes vertices reverse order added removes vertex necessary remain feasible 
proved performance guarantee algorithm obtained theorem :10.1.1.6.2885
theorem minimal augmentation means feasible solution containing gamma gamma feasible 
theorem goemans williamson primal dual algorithm described delivers solution cost fl opt opt denotes weight optimum solution fl satisfies infeasible set ae minimal augmentation jf cj denotes collection violated sets output violation oracle input need specify violation oracle compute value fl theorem prove algorithm runs polynomial time order obtain fl approximation algorithm :10.1.1.6.2885
observe considering gamma assume loss generality theorem minimal feasible solution 
possibility violation oracle returns cycle 
essentially approach bar yehuda fvs general graphs 
gave approximation algorithm problem planar graphs simply finding short cycle graph analysis improved 
give brief sketch violation oracle improved analysis 
planar graph assume degree vertex vertices deleted affecting cycles claim resulting graph cycle vertices degree higher cycle chosen part boundary face 
easy see fl chosen theorem 
prove claim observe graph connected claim equivalent existence vertex degree dual graph known fact sum degrees jv gamma 
graph connected consider graph block argument 
slight problem resulting cycle may contain may degree 
dealt fact planar graph vertex degree 
idea having violation oracle return cycle fvs fvs bip 
approximation algorithm section consider violation oracle input returns set face minimal cycles gamma respect 
refer oracle face minimal 
show corresponding value fl 
section give refined oracle corresponding fl 
performance guarantees tight fvs fvs bip 
order prove face minimal fl value need show result applied graph gamma 
theorem planar graph collection face minimal cycles corresponding family consider minimal solution jf cj jmj minimal solution know gamma feasible implying existence cycle fvg 
call cycle witness cycle 
family witness cycles collection witness cycles lemma exists laminar family witness cycles proof consider family witness cycles assume existence witness cycles cross assumption fug fvg 
assumption implies degree vertices cycles cross path interior intersects endpoints 
property replaced cycles call contains cycle say say replaced property contain strictly fewer faces feasible hit degree case exactly witness cycles order show existence laminar family witness cycles need prove crossing pairs cycles replaced selected way replacing process terminates laminar family 
arbitrarily choosing cycles cross replacing cycles 
contain strict subset faces suppose crossed cycles continue process replacing pair mark witness cycle process terminate time replace pair cycle pair contains smaller subset faces cycle cycle previous pair 
marked cycle choosing crossing witness cycles continue choose marked cycle 
important observation replace crossing pair explained part proof cycle cross cross new witness cycles follows fact contained entirely faces contain interior faces disjoint interior faces mark witness cycle cross witness cycle course replacement process 
process terminates laminar family witness cycles 
laminar family fc fg witness cycles represented tree precisely forest considering partial order imposed simplify exposition add root node connected maximal sets family obtain tree notice vertex corresponds cycle vertex correspond vertex crucial properties 
element crosses element follows lemma 
element cycles corresponding leaves contains element analysis properties assign element node tree cycle assigned vertex corresponding smallest set inclusion wise contains 
denote set cycles assigned node observe may non empty may empty 
property non empty leaf order prove theorem derive upper bound mv jf cj fix denote subset vertices corresponding children observe mv jf cj mv jf cj 
definition cardinality equal degree deg node order get upper bound mv jf cj construct bipartite graph vertex edge iff mv jf cj precisely number edges observe planar planar embedding obtained embedding placing vertex corresponding interior number edges simple bipartite planar graph twice number vertices minus graph consists simply single vertex vertices edge 
notice single vertex edge vertices occur leaf derived mv jf cj jm jf gamma jm deg gamma leaf case mv jf cj jm deg gamma corresponds case jf cj jm deg gamma summing derive jf cj jmj deg gamma jtj denotes number leaves tree deg equal twice number nodes tree minus 
implies jf cj jmj gamma property number leaves upper bounded jmj 
shows jt cj jmj gamma proving theorem 
fvs worst instance aware primal dual algorithm oracle face minimal achieves performance ratio 
problems fvs bip performance guarantee tight 
instances achieving ratio applies problems 
white vertices weight black vertices weight ffl 
case fvs special vertices denoted black squares fvs orientation arcs faces explicitly orientation arcs shaded faces define directed cycles 
face minimal cycles boundaries shaded faces algorithm select white vertices solution total weight 
cases black squares constitute feasible solution weight ffl giving desired bound gets large ffl tends 
analysis algorithm fact indicates bad examples arise cycles points common 
improved violation oracle develop section deals precisely cases 
approximation algorithm need preliminaries 
face disjoint cycles partition plane regions excluding interiors remaining region corresponds 
bad example approximation algorithm applied bip fvs fvs 
connected component dual graph having removed 
regions contains exterior face refer pockets boundary pocket defined vertices common say consists paths exist non empty pockets vertices common 
say disjoint cycles surround cycle contained pockets improved algorithm oracle returns subset family face minimal cycles 
contain cycles surround third oracle returns oracle outputs non empty subset exist cycles surround third cycle ii consists cycles pockets cycles possible oracle simply recursively select non empty set cycles pockets cycles remaining collection satisfies 
theorem planar graph defined paragraph 
consider minimal feasible solution jf cj jv structure proof similar previous section main difference proof sharper version inequality 
assume contain cycles point common 
case bipartite graph constructed proof theorem cycle length cycle imply existence cycles vertices belonging need sharper bound number edges graphs 
lemma simple bipartite planar bipartition jv jv edges 
assume cycle length edge connected 
gamma proof number faces denote number edges vertices face assumption 
summing inequality faces obtain euler formula stating gamma implies gamma claim gamma 
follows construction 
replace vertex incident edges edge joining neighbors neighbors graph edge connected 
obvious resulting graph planar 
simple vertices connected vertices implying existence cycle length 
number edges resulting graph vertex replaced edge number vertices original graph connected cycles length 
euler formula implies claim 
claim equation implies gamma gamma gamma gamma bound lemma tight 
take maximal planar graph vertex jv insert vertex edge 
easily checks resulting graph satisfies assumptions number edges precisely bound lemma 
lemma deals case bipartite graph edge connected 
lemma assumptions lemma bipartite planar graph may edge connected gamma vertex 
proof edge condition gamma equivalent holds vertices 
non empty forest gamma gamma inequality equivalent holds vertex side bipartition 
forest non trivial block apply lemma block 
claim stronger bound gamma lemma holds 
built successively adding blocks edges non trivial block maintaining connectivity 
claim holds non trivial block 
add non trivial block number edges increases deltaa deltab gamma deltaa resp 
deltab represents increase number vertices resp 
fact new block shares vertex rest 
add edge edge upper bounded deltaa deltab gamma deltaa deltab 
summing contributions derive claim 
continue proof theorem case contain cycles point common 
lemma discussion previous section derive mv jf cj jm deg gamma bipartite graph node vertex 
happen root node deg case increase rhs refer case pathological case 
summing nodes derive jf cj jmj deg gamma jmj gamma pathological case jf cj jmj gamma consider slightly general case includes situation cycles vertex common cycles surround cycles consider minimal solution consider cycles vertex common 
contain common vertices happens true pairs cycles proof unchanged bipartite graph cycle length 
assume cycles vertex common belonging claim exactly vertices witness cycles contained interior pockets contradicting pockets 
furthermore observe witness cycle contain witness cycle pass vertices contradicts fact witness cycle vertex modify replacing cycle interior consists interior pockets cycle may cycle need 
important fact new family obeys properties apply previously established results 
replacing decreased jmj decreased jf cj exactly 
induction prove inequality pathological case 
consider general case vertices define claim family satisfies properties difference witness cycles belong may contain cycle purpose analysis algorithmically assume add cycles guarantee enlarged family satisfies properties 

enlarging increased size jf fa increased jf cj rewriting derive jf cj jv gamma jf cj jv gamma jv 
pathological case need bit careful 
claim pathological case 
witness cycles maximal sets laminar family witness cycles root node degree contradicting definition pathological case 
derivation shows pathological case jf cj jv concludes proof theorem 
performance guarantee tight fvs fvs bip aware instance performance worse fvs 
single class instances applying problems show sample instance 
time gamma white vertices weight black vertices weight ffl 
previous special vertices fvs denoted black squares fvs orientation arcs faces explicitly orientation arcs shaded faces define directed cycles 
face minimal cycles boundaries shaded faces pockets formed pairs face minimal cycles violation oracle return face minimal cycles 
algorithm select white vertices solution total weight gamma 
cases black squares constitute feasible solution weight ffl giving desired bound gets large ffl tends 
bad example approximation algorithm applied bip fvs fvs 
worst case duality gaps section discuss worst case ratio value problem considered optimum value linear programming relaxation ip value dual worst case taken non negatively weighted planar instances 
results previous section immediately imply worst case ratio ae hitting cycle problem 
considering worst case ratio hitting cycle problems detail investigate vertex cover problem 
vertex cover problem find minimum weight set vertices edge endpoints classical linear programming relaxation problem min lp subject known ratio value vertex cover problem value lp upper bounded approached arbitrarily closely general graphs 
show worst case ratio exactly planar instances color theorem 
theorem planar graphs ae proof unit weights minimum vertex cover size lp value obtained setting 
shows ae prove inequality color theorem result structure extreme points lp 
known extreme points lp 
coloring graph optimal extreme point lp find color class maximizes consider integral solution construction furthermore corresponds vertex cover edge proof result color theorem nice 
solution feasible linear programming relaxation theorem implies existence vertex cover size independent set size follows immediately color theorem proof result known 
instance vertex cover problem leads bad instances hitting cycle problems 
consider fvs example 
replace edge triangle introducing new vertex keep weights equal optimum solution value feasible solution linear programming relaxation hitting cycle formulation ip obtained setting original vertices new vertices 
shows worst case ratio ae fv fvs planar instances construction shows ae bip ae gammaf bip fvs planar case 
get larger lower bound ae fv considering appropriately weighted instance vertices side bipartition weight gamma vertices side weight 
optimal solution instance weight gamma 
feasible solution linear programming relaxation ip vertices vertices 
proves ae fv gamma tends large 
conjecture ae gammaf ae bip ae fv 
ratios interesting connection conjecture watanabe berman 
conjectured planar graph feedback vertex set size 
solution feasible lp relaxation ip implies existence feedback vertex set size ae fv 
coloring result borodin shows planar graph feedback vertex set size jensen toth call proof reminiscent proof color theorem partly involves reducible configurations 
think interesting derive results lines invoke color theorem similar theorems 
watanabe conjectured bipartite planar graphs exists feedback vertex set size 
feasible lp relaxation graph bipartite implies existence feedback set size ae fv 
bip conjecture ae bip imply existence vertices removal graph bipartite 
follows easily color theorem removing smallest color classes aware proof statement color theorem 
point worst case remove half vertices fvs bip consider multiple copies 
fvs simple planar digraphs reasoning imply existence feedback vertex set size follow clearly watanabe berman conjecture 
possible fact vertices simple digraphs 
implementation sketch approximation algorithms implemented time jv problems considered face minimal oracle easily implemented linear time follows 
undirected problems fvs fvs bip decide boundary face cycle time proportional length cycle 
faces gives linear running time compute set face minimal cycles total length faces equal twice number edges gamma 
implement face minimal oracle case fvs consider planar dual graph difficult see face minimal cycles correspond sources sinks dag formed contracting strongly connected components planar dual strongly connected components sources sinks easily linear time result implement face minimal linear time fvs 
notice face minimal oracle implement clean phase line set feasible oracle return cycle 
build problems compute vertex quantity jfc represents rate growth left hand side dual constraint corresponding useful order select vertex add keep track vertex vertex selected algorithm minimizing ffl min gamma update setting ffl delta add vertex remove graph easily update planar graph linear time 
loops executed times gives total running time 
get approximation algorithm describe find appropriate subset cycles returned face minimal 
claim subset time leading running time 
focus undirected problems fvs treated similarly computing strongly connected components abuse notation denote vertices correspond face minimal cycles denote vertex corresponding outer face 
characterization cycles corresponding vertices induce non empty pocket gamma fu vg connected component containing vertex containing consider gamma fug compute block structure find furthest away component containing gamma fug gamma fvg connected component containing vertex done linear time 
select vertices induces connected component smallest size guaranteed vertices connected component form suitable choice finding takes time 
pressing question left open derive approximation algorithm fvs planar graphs primal dual technique cycle formulation 
result immediately imply planar graphs feedback vertex sets size think interesting alternate proofs invoke color theorem similar results 
prove result simply need find subset cycles minimal fvs jf cj jn note order prove bound size feedback vertex set subset necessarily polynomial time computable 
additional open question time complexity algorithms linear near linear 
naor pointing jon kleinberg helpful discussions 
agrawal klein ravi 
trees collide approximation algorithm generalized steiner problem networks 
siam journal computing 
watanabe 
research problem 
graphs combinatorics 
berman 
conjecture planar graphs 
bondy murty editors graph theory related topics 
academic press 
bafna berman 
constant ratio approximation weighted feedback vertex set problem undirected graphs 
staples eades katoh moffat editors isaac algorithms computation number lecture notes computer science pages 
bar yehuda geiger naor roth 
approximation algorithms vertex feedback set problem applications constraint satisfaction bayesian inference 
proceedings th annual acm siam symposium discrete algorithms pages 
becker geiger 
approximation algorithms loop cutset problem 
proceedings th conference uncertainty artificial intelligence pages 
borodin 
acyclic colorings planar graphs 
discrete mathematics 
goemans hochbaum williamson 
primal dual interpretation approximation algorithms feedback vertex set problem undirected graphs 
unpublished 
naor schieber sudan 
approximating minimum feedback sets multi cuts directed graphs 
balas clausen editors integer programming combinatorial optimization volume lecture notes computer science pages 
springer verlag 
naor schieber 
approximating minimum subset feedback sets undirected graphs applications 
proceedings fourth israel symposium theory computing systems pages 
naor 
approximation algorithm subset feedback vertex set problem 
appear focs 
garey johnson 
computers intractability 
freeman new york 
garg vazirani yannakakis 
primal dual approximation algorithms integral flow multicut trees applications matching set cover 
proceedings th international colloquium automata languages programming 
appear algorithmica title primal dual approximation algorithms integral flow multicut trees 
garg vazirani yannakakis 
approximate max flow min multi cut theorems applications 
siam journal computing 
goemans williamson 
general approximation technique constrained forest problems 
siam journal computing 
goemans williamson :10.1.1.6.2885
primal dual method approximation algorithms application network design problems 
hochbaum editor approximation algorithms np hard problems chapter pages 
pws boston 
grotschel lov asz schrijver 
geometric algorithms combinatorial optimization 
springer verlag berlin 

finding maximum cut planar graph polynomial time 
siam journal computing 
jensen 
graph coloring problems 
john wiley sons new york 
klein rao agrawal ravi 
approximate max flow min cut relation undirected multicommodity flow applications 
combinatorica 
klein ravi 
cycles collapse general approximation technique constrained connectivity problems 
proceedings third mps conference integer programming combinatorial optimization pages 
appears brown university technical report cs 
appear algorithmica 
leighton rao 
approximate max flow min cut theorem uniform multicommodity flow problems applications approximation algorithms 
proceedings th annual symposium foundations computer science pages 
nemhauser trotter jr vertex packing structural properties algorithms 
mathematical programming 
dorfman 
finding maximal cut graph 
engineering cybernetics pages 
seymour 
packing directed circuits fractionally 
combinatorica 

feedback problems planar digraphs 
mohring editor graph theoretic concepts computer science number lecture notes computer science pages 
springer verlag 
williamson goemans mihail vazirani 
primal dual approximation algorithm generalized steiner network problems 
combinatorica 
yannakakis 
node edge deletion np complete problems 
proceedings th annual acm symposium theory computing pages may 

