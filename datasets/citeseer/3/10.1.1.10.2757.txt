research report series bio steps turing calude un university auckland auckland new zealand institute mathematics romanian academy romania research group natural computing sevilla university spain november modified may centre discrete mathematics theoretical computer science bio steps turing cristian calude un department computer science university auckland private bag auckland new zealand cristian cs auckland ac nz institute mathematics romanian academy po box sti romania george ro research group natural computing department computer science artificial intelligence sevilla university reina mercedes sevilla spain es 
biologically computing agents capable compute turing uncomputable functions 
tempting dismiss question negative answer 
quite opposite time literature molecular computing contend answer theoretically negative 
results formulated language membrane computing systems 
mathematical results interesting 
contrast speed methods non determinism results rest universality results proved deterministic systems 
results building accelerated systems 
contrast case turing machines acceleration part hardware quality environment realised decreasing size reactors speeding communication channels 
consequently acceleration postulates biological inspiration introduced poses specific questions biology 
speculative part deal turing non computability activity brain possible forms intelligence 
years turing machine model computation defined means compute foundations modern theory computing 
furthermore noted various authors see example silicon computer capacity handling information growing rate times faster information handling nervous system years evolution important commodity exponentially better gets cheaper 
exponential race essentially turing bounded produce feasible solutions intractable problems importantly investigations solve turing unsolvable problems 
super turing computation computation transcends limit imposed turing model 
perspective consult special issues journal minds machines see lucid analysis comprehensive bibliography section computation turing machines especially critical 
studies just mere idle speculations pure theoretical abstractions studied sake little regard real world 
dare answer rhetorical question negative 
science really essentially carrying calculation limits science necessarily extended extend computational capabilities 
promises high science reach points seen 
case failure 
case gain immense arguably scientifically interesting negative results reveal new limits far reaching implications mathematics computer science physics biology philosophy 
date suggestions transcend turing barrier far know purely mathematical quantum relativistic physics details serious attempt propose biological computing agent having super turing capability 
aims 
formulate problems solutions language membrane computing branch molecular computing initiated goal computing models structure functioning living cell see comprehensive presentations 
basic idea find classes membrane systems systems allow deterministic characterisations turing computability support natural way acceleration postulates direct biological inspiration organised follows 
section motivation models results informal way 
third section devoted main results complete proofs 
fourth section speculates implications results 
conclude provisional open problems 
readers interested technical details may skip sections 
systematically avoid saying model feature model realistic biological point view try get inspired biology speculations motivated biology 
global time fig 

interplay local global time solving halting problem means accelerated device problems solutions informal discussion various computing models capabilities go turing super turing power exploit time acceleration physics quantum theory relativity theory neural networks methods see overview biological models 
see general discussions 
acceleration approaches main problem carry infinite computation finite amount time 
general scenario suggested scales time external global user accelerated device black box internal local time device 
problem formulated global time moment introduced accelerated device able perform inner infinite computation finite number external time units user gets answer problem 
idea came observed process performs step unit global time second step unit global time general subsequent step half global time step able complete infinity steps just global units time 
universal turing machine working kind accelerated manner capable deciding halting problem problem arbitrary turing machine halts arbitrary input famous turing undecidable problem way suggested global time introduces code particular turing machine input accelerated universal turing machine global time units answer halts 
note acceleration conflict turing model computation mathematical definition turing machine specify long take perform individual step 
shown known physical law forbids acceleration quantum analysis phenomenon reveals type uncertainty sense diminishes value model see 
mention time acceleration qualitatively different time travel ingredient allowing super turing capabilities cf 

accelerated turing machine simply classical turing machine piece classical hardware working environment allowing acceleration 
possible matter physics 
take different approach grounded suggestions coming cell brain biology acceleration part hardware quality environment realised decreasing size reactors making possible reactants find react shorter time training speeding communication channels glimpse membrane computing hypotheses find natural framework formulation mathematical investigation terms membrane computing 
membrane computing branch natural computing aim computational models ideas paradigms living cell neurons particular cases structure functioning inter relationships tissues organs organisms 
approach general starts optimistic observations biologically inspired branches computer science example genetic algorithms generally evolutionary computing prove unexpectedly efficient plausible explanation efficiency fact computational level operations tools processes improved nature billions years ii cell machinery smallest living thing complex structure intricate inner activity relationship environment 
context challenge find cell ingredients features useful computing 
proposed answer membrane computing challenge starts fundamental fact cells defined hierarchical structure membranes external plasma membrane inner 
main role biological membranes separate protect inside outside making possible communication regions certain circumstances 
membranes time borders selective channels communication 
instance cell external membrane simply gives identity cell keeps inside waste products protects special relativity forbid scenario allows objects exceed speed light long slow 
ultimately hypotheses validated biophysics 
place idealized framework instance limit acceleration decreasing size perform arbitrarily steps acceleration 
cell wrong chemicals closing protein channels environment 
internal cell membranes existing crucial cell functioning 
kauffman secret life achievement collective catalytic closure membranes primary organisers multi cellular life 
marcus slogan life dna software membrane hardware aim relevant note functions membranes separate compartments small chemicals swim water solution find small time react 
reactions place cell compartment depend local conditions promoters inhibitors temperature number collisions time unit reactants collisions driven brownian motion roughly speaking directly proportional number copies volume unit inversely proportional volume direct influence reaction rate 
smaller compartments means faster reactions 
pass single cells multi cellular structures 
neighbouring cells communicate directly environment 
main way carrying direct transfer chemicals adjacent cells common protein channels general passage materials controlled proteins embedded membranes chemicals pass region selectively depending size type special type trans membrane transport appears chemicals pass protein channel direction process called symport opposite directions called antiport 
communication compartments cells crucial functioning cells multi cellular structures difference population separated agents system 
may speculate certain circumstances nature interested speeding communication compartments cell different cells 
special important case cells neurons communication done synapses longer just speculation frequently sequences synapses faster efficient 
hypotheses essential anatomy behaviour classes membrane systems systems called cell tissue neural systems 
briefly introduce specifying framework technical presentation section 
main ingredients cell system hierarchical arrangement membranes delimit compartments called regions multisets objects evolve evolution rules 
compartments uniquely associated membranes introduces relevant notions related cell membrane structure 
objects evolution rules localised associated compartments 
objects correspond chemicals skin membrane region environment environment elementary membrane fig 

cell membrane structure rules correspond reactions take place cell compartments 
objects unstructured atomic sense represented symbols alphabet 
compartment number copies object multiset set multiplicities assigned elements 
evolution rules multiset processing rules 
basic type rules modelling chemical reactions form strings symbols representing multisets objects number occurrences letter string gives multiplicity respective object multiset 
rules classified number objects antecedent cooperative rules having objects non cooperative rules consisting single object 
applying rule means consume objects specified produce objects specified objects associated target indications instance object appears form aout leaves region rule applied element multiset placed surrounding region environment case skin region similarly object ain enter immediately inner membranes non deterministically chosen 
way compartments communicate system send objects signals outside 
rules compartment maximally parallel manner step computation objects evolve evolve 
objects rules non deterministically chosen observing maximality restriction 
way get transitions configuration system 
sequence transitions computation 
computation reaches configuration rule applied said halting 
basically computing machinery ways generative device start initial configuration collect outputs defined suitable manner associated halting computations functional device introduce input specified membrane associate output halting computation 
important particular case possibility system accepting device computing characteristic function set introduce input system say input accepted recognised system eventually halts special object ejected system 
variants systems containing features inspired biology priorities rules promoters inhibitors rules membrane creation membrane division rules types systems equal power turing machines possibilities generate exponential workspace linear time membrane division provided computationally hard problems typically np complete solved polynomial linear time 
computing communication important class systems uses communication symport antiport rules computing 
symport rule form meaning objects specified enter respectively exit region rule associated antiport rule form specifying objects exit enter respective membrane 
symport antiport rules cell tissue systems 
case membranes hierarchically arranged nodes tree placed level tissue establish communication graph depending available communication rules 
suggests shape membrane structure case tissue system note cells having membrane communicate directly way way manner cell communicate environment 
account synapses way channels communication systems communication cells way cell sends objects cell cell sends objects cell called neural 
restricted number membranes size multisets symport antiport rules systems types cell tissue computing communication universal equal computational power turing machines 
proofs results see assertion holds neural systems note notion neural system different states associated neurons processing fig 

tissue membrane structure details various classes systems comprehensive image domain 
universality results known membrane computing literature deal non deterministic systems 
deterministic systems configuration possible transition sense systems generative style starting initial configuration generate singleton sets numbers 
want solve decision problems particular turing halting problem deal deterministic accepting systems 
sources acceleration turing barrier bio inspired sources acceleration 
specifically starting postulate smaller faster may imagine membrane cell system local time time unit strictly smaller level membrane structure level 
relation time unit level time unit level level turing computable function constant system called accelerated 
example take rational number greater 
rate change limt small close possible 
rate ratio decreases reach quite soon acceleration extremely small 
objects communication done multiset rewriting style 
clear major difference call neural systems neural networks neural computing 
assumption show construct cell system multiset rewriting rules solve halting problem 
precisely construct accelerated system time determines register machine equivalent way turing machine stops arbitrary input 
system works follows register machine input accelerated recognising system membrane creation order increase depth membrane structure ingredients membrane simulate computation units global time halts sends environment special object global time sends outside global time know postulate faster training repeating closer style accelerated turing machines simply assume step takes time function scenario illustrated solve halting problem units global time 
holds tissue way communication neural way communication cells systems 
crucial constructions common membrane computing need universal system type deterministic 
class problems solved types accelerated systems exactly class class predicates form exists turing computable predicate 
big step 
examples justify answer system capable decide arbitrary diophantine equation solution solve hilbert tenth problem famous turing undecidable problem establish consistency formal system avoiding del incompleteness theorem 
see 
models technical results part describe models partially formal details solutions technical details 
overview methods results framework need systems deterministic manner 
general slogan parallel computing parallelism simulate non reader familiar current proofs membrane computing strong restriction usual techniques avoiding wrong computations turning non halting computations new proof techniques 
note caution existence plausibility super turing machine affects way validity del incompleteness theorem 
determinism trivial matter instance general requests exponential space systematically explored 
follow idea directly look ways construct systems behave deterministically 
noted usually membrane computing area pay attention determinism 
specifically proofs dealing computing power generative systems uses non deterministic systems 
deterministic systems appear papers accepting systems dealing complexity matters see corresponding chapter book case allows certain degree non determinism providing system confluent phase care computations converge common path halts 
address problem finding universality proof systems working analysing mode multisets symbol objects processed rewriting rules 
consider systems membrane creation able produce new membranes list rules form object multiset objects newly created membrane label fact know label important way know rules available region delimited new membrane 
known see theorem generative systems membrane creation membrane features non cooperative rules characterise length sets parikh sets want vectors distinguish objects output languages universal 
proof course non deterministic system simulates system 
universality obtained price priorities rules controlling permeability membranes corollary non deterministic systems essential 
universality obtained cooperative rules theorem membrane creation rules non deterministic systems 
result area combines powerful features cooperating rules membrane creation membrane proving universality deterministic analysing systems 
membrane creation increase membrane structure system adding new membranes definition new membranes elementary way increase continuously depth membrane structure 
prove universality deterministic analysing systems cell tissue systems symport antiport rules case consequence universality neural systems 
universality results proving accelerated mode respective systems solve halting problem 
turing computability classical computability variety equivalent mathematical formalisms include turing machines markov algorithms partial recursive computable functions chomsky type zero grammars register machines follows minsky register machines 
device consists number registers hold arbitrarily large non negative integer number program sequence labelled instructions specify numbers stored registers change instruction follow instruction 
types instructions add add register go instruction label sub non empty subtract register go instruction label go instruction label lh halt halt instruction 
formally register machine construct lh number registers set instruction labels start label lh halt label assigned instruction halt set instructions program 
register machine recognising says accepting numbers sense designate registers say register input register input number register machine start computing registers holding instruction label computation halts reaches instruction label lh recognised recognised 
set non negative integers recognised register machine denoted 
register machine compute function designating certain registers input registers output registers 
start arguments function input registers providing machine halts get value function output registers computation halts function defined input 
partial functions computed way coincide turing computable partial functions see 
particular set positive integers turing computably enumerable partial characteristic function undefined turing partial computable 
denote nce family turing computably enumerable sets numbers 
framework halting problem problem decide arbitrary register machine halts arbitrary positive integer fundamental result due turing states halting problem turing undecidable fixed turing machine fixed register machine mu capable deciding arbitrary register machine halts arbitrary positive integer class predicates written form turing computable predicate denoted 
important problems notation comes fact sets numbers length sets computably enumerable languages languages strings recognised turing machines equivalently generated chomsky type zero grammars 
alternative older notation coming recursively enumerable languages 
expressed predicates example predicate stating diophantine equation equation form 
xn polynomial integer coefficients solution positive integers 
membrane computing introduce informally classes membrane systems consider 
intuition section informal presentation sufficient understanding arguments subsequent sections 
introduce cell systems rewriting rules membrane creation membrane features need 
cell system degree construct 
wm 
rn finite alphabet elements called objects synonymous terms symbol object 
hn set labels possible membranes membrane structure degree represented string correctly matching parentheses membrane label represented pair parentheses form wi string representing multiset objects region rj set rules act region membrane rules forms multiset processing rules ar ar special symbol 
rule means consuming objects indicated introducing objects specified regions indicated targets associated objects way informally section 
membrane rule applied dissolved 
contents dissolved membrane objects inner membranes alike added contents immediately upper membrane 
rule said cooperative non cooperative 
membrane creation rules means rule object creates membrane label objects specified inside 
knowing label membrane know rules act region set rh 
course familiarity membrane computing helpful especially dealing technical details proofs refer interested reader sources information respect starting monographs comprehensive web page mentioned section 
set strings empty string included denoted set non empty strings denoted denote length string note membrane creation rules non cooperative multiset processing rules cooperative 
general target mentioned subscripts objects associated 
rules maximally parallel way chosing objects evolve rules non deterministic way 
configuration system step identified membrane structure objects region step 
configuration system choice rules apply system halts configuration uniquely determined system deterministic 
follows systems accepting mode system form specified input multiset placing objects skin region computation started introducing eventually halts say accepted rejected 
particular specified object number accepted system 
want case accepting input explicitly announced environment may ask special object sent system input accepted happens computation 
set non negative integers accepted sense halting computations system denoted family sets accepted deterministic systems denoted coo diss coo diss indicate cooperative rules membrane creation membrane features multiset processing rules correspond reactions take place compartments cell 
crucial importance possibility transfer objects membranes integrating separate computing agents compartments global computer 
compute level turing machines certain circumstances see communication instance making symport antiport known biology see 
rules cell systems membranes hierarchically arranged tissue systems membranes placed nodes arbitrary graph 
cell system degree symport antiport construct form 
wm 
rm alphabet objects membrane structure degree membranes labelled 
wi multiset objects region ri set rules associated membrane set objects assumed environment arbitrarily copies 
rules associated membranes forms notation comes deterministic systems working objects represented symbols literature investigated systems working string objects accepting sets numbers 
symport rules rule objects specified brought respectively sent region membrane rules associated 
antiport rules applying rule membrane means send membrane objects specified bring adjacent external region environment case skin membrane objects specified starting initial configuration input introduced skin region pass configuration rules maximally parallel manner 
choice rules apply unique step speak deterministic system 
input accepted computation stops 
denote family sets numbers accepted deterministic cell systems membranes note membrane creation symport rules having antiport rules having 
computing communication performed membranes placed nodes arbitrary graph corresponds inter cellular communication investigated biology see communication networks neurons 
tissue system degree construct 
wm components finite set rules forms symport rules 
rule multiset objects specified moved region region identifies environment 
antiport rules possibly 
rule means objects sent region region time sending objects region region identifies environment 
rules maximally parallel definition computations follow pattern cell systems 
time input recognised system introduced specified membrane instance label 
denote family sets numbers recognised deterministic tissue systems membranes symport antiport rules size involved multisets respectively 
systems cells communicate way manner antiport rules complementary symport rules 
attempt get closer neural case communication general oneway axon neuron dendrites neuron distinguish restricted class tissue systems call neural systems communication cells call neurons way cells send objects rules form available rules 
communication environment remains unrestricted 
corresponding family sets non negative integers accepted deterministic case denoted obvious meaning parameters involved 
classes systems cell tissue neural working generative mode known universal 
cases systems low number membranes rules restricted type suffice 
proofs results non deterministic systems 
choices allowed essentially proofs correct simulation grammar register machine guessed computation system aimed simulate grammar register machine wrong guesses turned non halting computations 
purpose computation deterministic characterisations nce looked 
fortunately somewhat surprising results proved classes systems introduced time price pay complexity system 
price determinism results interest membrane computing general proving universality deterministic systems various types essential results proved section main goal investigation 
theorem 
nce coo diss 
proof 
consider deterministic register machine lh specified section 
register consider distinct symbol ai set symbols 
construct recognising cell system sets rules lh ar add ar sub 
assume introduce copies object system corresponds starting register machine number register 
system simulates register machine analysing input initial configuration multiset ca unique membrane label 
assume time membrane arbitrary multiset objects object object rule applied creates membrane label object inside 
step objects skin membrane introduced inner membrane 
perform simulation rules add instructions form add directly simulated rules ar 
label sub instruction proceed follows 
step replaced step performs subtraction providing copy ar way introduced passes object changed 
step exists dissolves membrane label introduces simultaneously replaced 
takes place object arrives skin region replaced dummy object instruction correctly simulated case register zero 
case rule ar waits membrane dissolved rule fourth step 
arrived skin region object replaced dummy object case register empty correctly simulated 
cases released skin region rule applied 
continue way simulating instructions register machine eventually halts reaches label lh computation halts conversely 
consequently 
system deterministic label exactly instruction 
proof complete 
worth noting system previous proof membranes membrane creation followed membrane interest consider different clocks different levels membrane structure see section 
membrane creation avoided making larger extent power cooperative rules 
essentially idea proof proof theorem acceleration obtained increasing number membranes 
theorem 
nce sym anti 
proof 
consider register machine lh distinct symbol ai register 
set symbols construct recognising symport antiport cell system ar add ar sub 
introducing copies object unique membrane system starts simulating computation register machine starting number register 
add instructions correspond directly antiport rules simulation instruction sub simulated follows 
available object sent exchange object leave system copy ar copy exists case rule ar mandatory waits unchanged 
object exits enters system 
step unit subtracted register exits introducing completing simulation leaves system step brought 
completes simulation case register empty 
previous result directly implies equality nce sym anti 
case tissue systems complexity antiport rules decreased rules types bc single objects symport rules 
theorem 
nce sym anti 
proof 
register machine lh alphabet ai construct tissue system components pictorially experience previous proofs information reader easily see elements 
examine detail system simulating subtraction instruction take instruction sub 
case copy ar cell register empty simulation completed steps 
rules steps marked arabic roman numbers respectively placed superscripts form 
table indicates rules step cases register non empty empty 
table 
simulating sub instruction system proof theorem step register non empty register empty ar noted register empty waits cell step iii goes cell brought environment sent cell 
register empty copy ar moved cell way wait step moved system help turn brought cell having 
reader complete missing details proof stops stops analysing rule provided processing object lh 
note previous proof universality obtained cells working deterministically symport antiport rules communicating environment way manner 
mentioned details order stress differences system neural system defined section communication neurons way 
communication cells previous construction performed means symport rules observe step communicates direction 
general see theorem way communication realised symport rules easily replaced way communication providing intermediate buffer cell suggested 
small problem appears case antiport rules communicating environment communication buffers takes steps system 
done replacing rule input ar add ii iii iv ar sub fig 

system proof theorem form rules new symbol associated universality obtained deterministic neural systems neurons 
corollary 
nce sym anti 
interesting question area related size symport antiport rules 
unexpectedly proven see cell systems minimal symport antiport rules object moved direction universal 
current result respect says membranes suffice see proof non deterministic construction 
nice similar result deterministic case cell tissue systems 
accelerated systems general interest computational capacity point view consider different time units different membranes cell system bounded number membranes provided time units regions expressed rational divisions unique external time unit 
consider smallest common multiple denominators fractions expressing local time units denote take time unit membranes fig 

making communication way membranes time units multiples introduce synchronising rules form 
ak ak followed rules ak corresponding initial rules way equivalent system obtained global clock standard systems 
argument systems get configurations arbitrarily membranes arbitrarily local clocks 
existence arbitrarily local clocks time units decreasing sufficiently fast entering deeper membrane structure sufficient reach computing power turing computability 
remember starting hypothesis smaller compartments faster reactions crucial 
bare assumption biologically supported inspired infer consequences mathematical idealized nature claim confirmed cell biology acceleration arbitrary instance consequence having compartments arbitrarily small 
specifically follows accelerated systems assume time unit strictly smaller level membrane structure level relation time unit level time unit level level turing computable function constant theorem 
register machine accelerated recognising cell system cooperating rules membrane creation membrane features stops time input input sends environment special object halts sends outside proof 
idea proof take system constructed proof theorem grow membrane structure way simulation instruction starting register machine done deeper deeper faster faster membrane structure 
computation eventually halts special object sent system forever relevant outside external time units pass knowing object produced 
technically construction 
take function constant start deterministic register machine lh 
consider alphabet ai construct recognising accelerated system sets rules lh lh ar add ar sub 
proof theorem simulation instructions performed membrane created inside membrane means rule 
simulating instruction membrane dissolved released enclosing membrane 
means rule creates membrane objects come step new membrane created instruction simulated 
way membrane structure grows level membrane instruction simulated 
proof theorem clear system introduce label lh starting multiset ca halts starting number register 
halts label lh introduced happens membrane central membrane special object immediately introduced 
object travel step step deepest existing membrane exiting system 
get object environment register machine halts starting register 
maximal number steps system perform give level membrane structure 
obvious largest number steps membrane creating new membranes done simulating sub instructions corresponding register empty 
examine case 
membrane level membrane structure multiset cw create new membrane level 
step introduce objects new membrane steps performed level create membrane level 
step objects introduced central membrane second step level 
perform steps membrane 
way return level repeat procedure 
means perform steps steps lower level steps level return level perform steps 
total steps performed level 
return level simulating instructions return step sending object case 
consequently maximal number steps perform level system observation level perform steps sending object 
steps length skin clock environment means maximal time system works external units 
step step step step step cr mv mv cr simulate fig 

counting steps theorem illustrate analysis number steps performed level membrane structure constellation stars corresponds simulation sub instruction worst case respective register empty 
notation indicates creation new membrane cr new membrane cr movement objects respective membranes mv mv respectively simulation instruction ended membrane 
statement theorem completely proved 
results obtained consequences theorems corollary direct way assuming time needed ith transition computation function system accelerated case get answer halting problem units global time just scenario 
state theorem 
register machine accelerated recognising system types cell symport antiport rules ii tissue iii neural stops units global time input input sends environment special object halts sends outside consequently accelerated systems types appearing theorems recognise turing computable sets numbers just take zero accelerated accelerated systems strictly 
go turing barrier 
theorem 
accelerated systems classes mentioned theorems recognise exactly class 
proof 
implication follows fact halting problem turing complete 
implication accelerated system define predicate true running time get 
clearly turing computable recognised time produces 
intelligence consciousness turing non computability speculative short section discuss possible applications results understanding intelligence human brain nearby universe 
classical biophysics cognitive processes modelled neural networks see successful approach delivered implementations learning memory optimism sufficient complex artificial neuronal network may theoretically reproduce essence brain behaviour accounting intelligence consciousness 
ample support related semantics binding neuronal correlation consciousness name just problems line modelling may ultimately prove insufficient 
importantly penrose argued human understanding mathematical facts involve turing non computational element 
non computational feature part conscious thinking may evidenced difference transition pre conscious conscious processing 
consequence claimed turing barrier human mind special ability comprehend mathematical truths 
agree line arguments 
view ephemeral nature consciousness evokes quantum process evolved theory objective reduction see holds quantum coherence wave function self collapse essential consciousness 
quantum computations brain 
penrose strongly favour positive answer proteins quantum bits assemblies entangled quantum bits proteins 
structures brain neurons participate 
neural membrane proteins see 
contend membranes may certain conditions act accelerated way triggering turing uncomputable computations 
chances spontaneous acceleration occurs may high due factors human brain having 
fact accelerated systems recognise exactly class sets special finitary nature see reinforce hypothesis 
stage just advanced hypothesis planning devote detailed analysis phenomenon different 
possible imagine plausible consistent biological scenario scan universe possible forms intelligence 
better candidate send chaitin number see embodies enormous amount wisdom small space 
inasmuch thousands digits written small piece contain answers mathematical questions written entire universe 
chaitin introduced number representing probability randomly chosen program halt 
order idea precise modify definition register machine programs way programs self delimiting binary strings 
allows choose random program flipping unbiased coin generate bit stopping reach valid self delimited program 
formally chaitin number defined problems arguments involving del incompleteness theorem see discussion 
current projects digits 
done example introducing input instructions representing input positive integer binary appending immediately halt instruction 
program reading data attempting read past data bit results run time error fails halt 
halts length bits register machine program number important properties contrast looks algorithmically random random particular unpredictable turing uncomputable exists turing machine approximating knowing bits binary infinite expansion allows solve halting problem register machine programs bits length 
large includes huge amount information particular answers important mathematical problems solved fermat theorem unsolved riemann hypothesis 
details see 
consequently obvious includes vastly information matter turing computable number 
show method enumerating bits predicate 
aim construct program takes positive integers input halts 
write program construct successive approximations halts steps check stage halting true continuing 
approaches halts required 
hand halt 
turing computable 
determine bits determine greatest value 
binary representation expressed digit binary number leading zeros necessary gives exactly digits binary expansion 
process reduces computation set classical turing computation task power accelerated system see theorems 
main problem transmit bits 
pointed physics particularly useful intensity emitted radiation falls law intensity radiation emitted receding source information maximally compressed bits code halting non halting status programs 
crude estimation shows solve riemann hypothesis millennium dollars problem equivalent decide register machine program bits length halt 
falls fourth power lorentz factor signal fading extremely fast 
suggest bio scenario sending bits neuron type accelerated system self replicating unit local time computes emits result accelerated computation digits produces exact replica continues computation accelerated mode time 
way space invaded self replicating bio systems emits bits sign intelligence 
need acceleration 
simply turing computation scenario produce finitely different copies system see moment process producing new bits 
accelerated computation guarantee theorem process produces powerful copies capable emitting digits 
hope discuss facts technical way forthcoming 
final remarks proposed time literature molecular computing bio computing models theoretically capable turing barrier 
specifically constructed models expressed language membrane computing vivid branch natural computing cell systems multiset rewriting rules cell systems symport antiport tissue systems neural systems 
model exploits type time acceleration inspired biology solve halting problem bounded known external time 
mathematical results acceleration results interesting membrane computing area 
suggest research topics 
results improved number membranes size rules number ingredients 
find deterministic variants universality results membrane computing 
case non determinism necessary deterministic systems type strictly powerful non restricted systems 
study measures non determinism important 
problems mathematically biologically appealing 
problems interest main goal 
find ways increase power system necessarily turing universal turing non computable functions computed 
suggestion come called computing carving removing arbitrarily numbers strings computable set language amounts passing complement set language operation known preserve turing 
procedure biological interpretation analogy 
technically accelerating rules system individually transitions time rule needs time unit applied step applied shorter time rule needs time depends experience 
leads intricate de synchronisation slow rules keep busy objects time intervals faster rules applied times gets faster way 
briefly explored implications results quest understanding intelligence human brain universe 
ideas particularly related relevance neuron systems behaviour brain need investigations 
grateful chaitin chown rozenberg encouragement critique 
due anonymous referees remarks helped improve form presentation 
author acknowledges partial support piv 

calude pavlov 
transcending limits turing computability ed 
proceedings winter school university japan world scientific singapore appear 

alberts johnson lewis raff roberts walter 
molecular biology cell th ed garland science new york 


relevance cell membrane systems 
general aspects fundamenta informaticae 

bennett gardner 
random number omega bids fair hold mysteries universe scientific american 

bernardini 
power minimal symport antiport pre proceedings workshop membrane computing wmc report univ 

bernardini un universality minimal symport antiport membranes suffice 

blake 
paradoxes temporal process journal philosophy 

calude 
information randomness algorithmic perspective nd edition revised extended springer verlag berlin 

calude 
parallel thinking nature april 

calude 
reflections quantum computing complexity 

calude rgensen 
solving finitely refutable mathematical problems calude gh 
un eds 
finite versus infinite 
contributions eternal dilemma springer verlag london 

calude gh 
un 
computing cells atoms taylor francis publishers london 

calude pavlov 
coins quantum measurements turing barrier quantum information processing 


computing uncomputable new scientist may 

true platonic haven joseph henry press new york 

chaitin 
theory program size formally identical information theory assoc 
comput 
mach 

chaitin 
algorithmic information theory cambridge university press cambridge third printing 
chaitin 
exploring randomness springer verlag london 

chown 
personal communication calude november 

chown 
smash grab feature story new scientist april 

copeland 
turing machines compute uncomputable functions calude eds 
unconventional models computation springer verlag singapore 

copeland ed 
minds machines 

copeland 
minds machines 



la re de turing pour la science october 

davis 
myth 


non turing computations space times international journal theoretical physics 


simulating counter automata systems symport antiport 

penrose 
consciousness events orchestrated space time selections journal consciousness studies 


surfaces inside surfaces 
origins agency life cybernetics human knowing 

ibarra 
number membranes matters 

ibarra computational complexity membrane computing systems theoretical computer science press 

ito mart vide gh 
un 
characterization parikh sets languages terms systems ito gh 
un yu eds 
words semigroups transducers world scientific singapore 

kauffman 
origin order oxford univ press oxford 

khanna 
foundations neural networks addison wesley new york 


quantum algorithm hilbert tenth problem los alamos preprint archive arxiv quant ph november 


quantum minds machines 

loewenstein 
touchstone life 
molecular information cell communication foundations life 
oxford university press new york oxford 

madhu 
systems membrane creation universality efficiency eds 
proc 
third int 
conf 
universal machines computations chi sin lecture notes computer science springer verlag berlin 

marcus 
bridging systems genomics preliminary approach 

marshall 
consciousness bose einstein new ideas psychology 

mart vide gh 
un rozenberg salomaa eds 
membrane computing 
international workshop wmc spain revised papers lecture notes computer science springer verlag berlin 

minsky 
computation finite infinite machines 
prentice hall englewood cliffs nj 

ord 
computing turing machine thesis computer science department university melbourne australia arxiv org ftp math papers pdf 

ord 
existence new family diophantine equations fundamenta informaticae 

gh 
un 
computing carving soft computing 

gh 
un 
computing membranes journal computer system sciences 

gh 
un 
computing membranes springer verlag berlin 

gh 
un rozenberg 
guide membrane computing theoretical computer science 

gh 
un rozenberg salomaa eds 
membrane computing 
international workshop wmc de arge romania revised papers lecture notes computer science springer verlag berlin 

penrose 
emperor new mind 
concerning computers minds laws physics oxford university press oxford 

penrose 
pr cis emperor new mind 
concerning computers minds laws physics responses critics reply author behav 
brain sci 

penrose 
shadows mind oxford university press oxford 

rez jim nez romero jim nez 
de la en de con editorial kronos sevilla 

russell 
limits empiricism proceedings aristotelian society 

salomaa 
formal languages 
academic press new york 

siegelmann 
computation turing limit science 

siegelmann 
neural super turing computing minds machines 

stewart 
deciding undecidable nature 


church turing thesis guiding principle physics calude eds 
unconventional models computation springer verlag singapore 

sipper 
hyper computation communications acm 

ed 
alan turing life legacy great thinker springer verlag heidelberg 

weyl 
philosophie der mathematik und oldenburg munich 

van leeuwen 
relativistic computers non uniform complexity theory calude eds 
unconventional models computation lecture notes comput 
sci 
springer verlag berlin 

disco 

www net bib 

