parallel processing letters world scienti publishing hierarchical peer peer systems garc es biersack ross felber keller institut eurecom sophia antipolis france received received date revised revised date communicated name editor structured peer peer lookup services organize peers overlay network er distributed hash table dht functionality 
data associated keys peer responsible subset keys 
hierarchical dhts peers organized groups group autonomous intra group overlay network lookup service 
groups organized top level overlay network 
nd peer responsible key top level overlay rst determines group responsible key responsible group uses intra group overlay determine speci peer responsible key 
provide general framework scalable hierarchical overlay management 
study tier hierarchy chord top level 
analysis shows reliable peers top level hierarchical design signi cantly reduces expected number hops 
provide hierarchical construction groups built internet topology guarantees short intra group communication delay 
results demonstrate feasibility locality peer groups allow systems take full advantage hierarchical design 
keywords dht hierarchy topology aware superpeers 
peer peer systems gaining increased popularity possible harness resources large populations networked computers cost ective manner 
central problem systems assign locate resources peers 
task achieved lookup service 
important proposals put forth implementing distributed lookup services including chord pastry tapestry :10.1.1.105.3673
lookup services key data item assigned live peer node identi er closest key metric lookup service determines peer responsible key 
lookup service implemented organizing peers structured overlay network routing message overlay responsible peer 
eciency lookup service generally measured function number peer hops needed route message responsible peer size parallel processing letters routing table maintained peer 
example chord requires log peer hops log routing table entries peers overlay 
implementations distributed lookup service referred distributed hash tables dhts 
chord pastry tapestry dht designs hierarchical routing 
peer indistinguishable sense peers rules determining routes lookup messages 
approach strikingly di erent routing internet uses hierarchical routing 
hierarchical routing internet ers bene ts non hierarchical routing including scalability administrative autonomy 
inspired hierarchical routing internet examine tier dhts peers organized disjoint groups ii lookup messages rst routed destination group inter group overlay routed destination peer intra group overlay 
general framework hierarchical dhts 
group maintains overlay network intra group lookup service 
top level overlay de ned groups 
group subset peers labeled superpeers 
superpeers analogous gateway routers hierarchical ip networks top level overlay route messages groups 
consider designs peers group locally close provide solution organizing groups hierarchy 
describe cooperative caching scheme signi cantly reduce average data transfer delays 
provide scalable algorithm assigning peers groups identifying superpeers maintaining overlays 
presenting general framework introduce results research toplus experimental low stretch dht allow construction local hierarchical groups 
explore detail particular instantiation chord top level overlay 
novel analytical model analyze expected number peer hops required lookup hierarchical chord instantiation 
model explicitly captures inaccuracies routing tables due peer failures 
organized follows rst discuss related section 
general framework hierarchical dht section illustrate construction hierarchical groups locality properties 
discuss particular case tier chord instantiation section quantify improvement lookup latency due hierarchical organization peers 

related networks classi ed unstructured structured 
chord pastry tapestry grid highly structured overlays hashing targeted data placement examples structured networks :10.1.1.19.6221:10.1.1.105.3673
networks designs grid uses virtual distributed search tree routing purposes 
gnutella kazaa overlays grow random data placement examples hierarchical peer peer systems unstructured networks 
ratnasamy explore landmark nodes bin peers groups 
basic idea peer measure round trip time rtt landmarks order resulting rtts assign groups 
hierarchical dht schemes bear little resemblance scheme 
peers organized groups locality lookup algorithm applies superpeers multi level hierarchical algorithm 
approach uenced kazaa enormously successful unstructured le sharing service 
kazaa designates available powerful peers supernodes 
kazaa new peer wants join bins existing supernodes establishes overlay connection supernode shortest rtt 
supernodes connected top level overlay network 
similar architecture proposed cap tier unstructured network 
design blend supernode hierarchy kazaa lookup services structured dhts 
proposes organize peers level overlay :10.1.1.19.6221
peers form single overlay ol supernodes typically connected situated near network access points forming overlay oh truly hierarchical peers part ol castro topology aware version pastry 
hop pastry presents multiple equivalent choices route request 
choosing closest smallest network delay peer hop try minimize network delay 
step possibilities decrease exponentially delay mainly determined hop usually longest 
propose large hops rst get group shorter local hops inside group leading natural caching scheme shown section 
hierarchical framework presenting general framework hierarchical dht 
focus tier hierarchy framework extended general tier hierarchy 
denote set peers participating system 
peer node identi er id 
peer ip address dynamic 
peers interconnected network links switching equipment routers bridges peers send lookup query messages hierarchical overlay network described 
peers organized groups see group management section 
groups may may peers group topologically close depending application needs example groups named common discussion topic irc application independently peers location 
group unique group id parallel processing letters number groups peers group id group groups organized top level overlay network de ned directed graph fg set groups set virtual edges nodes groups graph required connected nodes directed path uses edges important note overlay network de nes directed edges groups speci peers groups 
group required superpeers 
set superpeers group architecture allows case peers superpeers 
refer architectures peers superpeers symmetric design 
architecture allows js case group exactly superpeer 
set regular peers group non symmetric designs attempt designate powerful peers superpeers 
powerful primarily mean peers connected secondarily high cpu power network connection bandwidth 
superpeers gateways groups inter group group group group chord peers hash top level overlay network list peers group carp group peers peers peers fig 

left sample communication relationships groups overlay network superpeers neighboring groups 
right ring overlay network single superpeer group 
intra group lookup implemented di erent lookup services carp chord 
query propagation 
require superpeer edge top level overlay network knows name current ip address superpeer knowledge send query messages regular peer reach groups superpeers 
left shows top level overlay network possible communication relationships corresponding superpeers 
right shows example superpeer group top level overlay network ring 
group overlay network peers group 
hierarchical peer peer systems 
hierarchical lookup service consider level lookup service 
key say group responsible closest group groups 
closest de ned speci top level lookup service chord pastry tapestry 
tier dht operates follows 
suppose peer wants determine peer responsible key 
peer sends query message superpeers 
ii query reaches superpeer top level lookup service routes query group responsible key phase query passes superpeers hopping group 
eventually query message arrives superpeer 
iii overlay network group superpeer routes query peer responsible key approach generalized arbitrary number levels 
request rst routed top overlay network superpeer level turn routes request local overlay network request nally reaches peer node bottom level 
hierarchical architecture important advantages compared overlay networks 
exploiting heterogeneous peers designating superpeers peers top level overlay network stable corresponding overlay network 
transparency key moved peer group search peer holding key completely transparent toplevel algorithm 
similarly group changes intra group lookup algorithm change completely transparent groups top level lookup algorithm 
failure regular peer appearance new peer local routing tables peers outside ected 
faster lookup time number groups typically orders magnitude smaller total number peers queries travel fewer hops 
messages wide area stable peers form top level dht overlay reconstruction messages happen inside groups gather peers topologically close 
hops lookup means messages exchanged 
content caching inside groups reduce number messages need get group 
parallel processing letters 
intra group lookup framework just described quite exible allowing di erent independent intra group overlays group small number peers say tens peer track peers group ids ip addresses carp consistent hashing assign locate keys group 
number steps necessary perform intra group lookup destination group right 
group little larger say hundreds superpeers track peers group 
case forwarding query local superpeer peer local lookup steps right 
larger groups dht chord pastry tapestry group right 
local lookup typically takes log hops peers group 
large groups tools provided see maintain short lookup delays inside groups 

hierarchy group management brie describe protocols manage groups consider peer joining hierarchical dht 
assume able get id group belongs may correspond name isp university campus 
contacts asks peer part network look key rst step hierarchical lookup locates returns ip address superpeer responsible group 
group id returned superpeer precisely joins group regular join mechanisms underlying intra group dht additionally noti es superpeer cpu bandwidth resources 
group id new group created id super peer 
network superpeers group rst peers join group superpeers group 
superpeers expected stable nodes superpeers monitor peers join group characteristics 
superpeers keep ordered list superpeer candidates longer peer remains connected higher resources better superpeer candidate 
list sent periodically regular peers group 
superpeer fails disconnects rst regular peer list superpeer joins top level overlay 
informs peers group superpeers neighboring groups 
large groups avoided cases may cost ective broadcast information peers 
peers learn lazily changes network new superpeers example letting superpeers embed membership updates lookup responses 
able provide stability top level overlay multiple hierarchical peer peer systems superpeers promoting stable peers superpeers rapidly repairing infrequent failures departures superpeers 

locality hierarchical dht essential ecient hierarchical dht keep intra group lookup delays low 
easy provide fast communication peers group con ned high speed lan groups may span full isp ases heterogeneous wans 
cases try build dht way intra group delay low possible 
organize peers general tier hierarchy groups group tier gathers peers locality properties 
assume ip address peer assign peer group way peers share ip pre group 
wang shows peers sharing existing ip network pre closer peers 
extend idea create hierarchical dht called toplus groups formed ip pre xes obtained bgp tables sources 
internet organized hierarchy networks ip pre xes group nodes create hierarchy groups 
groups bottom hierarchy contain nodes groups higher levels contain nested groups 
formally structure described follows set bit ip addresses 
collection sets set set ip addresses 
refer set group 
group contain group said inner group 
say collection proper nesting satis es properties 
ii pair groups groups disjoint group proper subset 
iii consists set contiguous ip addresses represented ip pre form example 
toplus node contained collection telescoping sets denote sets hn hn 
hn hn 
tier depth inner group 
telescoping sets siblings partial order tree see 
set siblings groups tier knows peer groups 
lookup key done forwarding request tier group id network pre closest key xor metric 
request forwarded tier group inside tier group closest key corresponding tier group 
system spanning parallel processing letters tier tier tier fig 

sample toplus hierarchy 
internet nd step lookup query gets closer destination 
validated measuring stretch average ratio delay peers toplus direct ip path close 
table show results di erent trees built ip pre xes 
ree obtained directly ip pre sources trees obtained slightly rearranging tier groups reduce routing table size 
table 
stretch obtained tree depending tier destination peer 
stretch toplus vs ip con dence interval tier tree tree tree mean observe deeper destination hierarchy higher stretch 
unsurprising lookup multiple tiers additional hops group increasing possible divergence ip routing paths 
hops increase stretch 
conclude hops tier groups close 
straightforward build proper nesting groups ip network pre xes inside top level group toplus demonstrated valid method obtain ecient communication inside groups 
peer groups ip pre xes ective mechanism construct hierarchical overlays independently lookup algorithm groups 
shows mapping toplus groups tier hierarchy chord rings 
level obtain best locality achievable inside groups 
validates assumption hierarchy groups local peers 

content caching data sharing applications peer determines peer hierarchical peer peer systems fig 

top sample toplus hierarchy groups associated ip pre xes 
bottom mapping groups tier hierarchical chord group ip pre detailed 
responsible key asks data associated key 
path traverses congested low speed link data transfer delay long 
hierarchical dht setups expect peers group topologically close interconnected high speed links corporate university campus 
frequently con ning data transfers intra group transfers reduce trac loads access links groups higher tier isps 
hierarchical setups naturally extended implement cooperative caching peer wants obtain le associated key rst uses group intra lookup algorithm nd peer responsible entire set peers 
local copy le associated returns le obtains le hierarchical dht caches copy forwards le files cached groups previously requested 
standard analytical techniques quantify reduction average le transfer time load access links :10.1.1.19.6221

chord instantiation remainder focus speci top level dht chord 
chord peer key bit id ids ordered circle parallel processing letters modulo see left 
key assigned rst peer identi er equal follows identi er space 
peer called successor key peer tracks successor predecessor peer ring 
addition peer tracks peers called ngers speci cally peer id tracks successors ids note rst nger fact successor 
successor predecessor ngers chord routing table 
lookup peer forwards query nger largest id precedes key value 
process repeated peer peer peer preceding key reached closest peer key 
peers average number hops needed reach destination log 

inter group chord ring top level overlay network node group peers 
implies top level lookup system manage overlay groups represented set superpeers 
chord requires adaptations manage groups nodes 
refer modi ed version chord top level chord finger finger finger successor successor successor group table routing fingers pred 
succ 
fig 

normal chord routing left hierarchical chord routing right 
node top level chord predecessor successor vector holding ip addresses superpeers predecessor successor group ring respectively 
nger vector 
routing table top level chord superpeers group shown right 
population groups top level overlay network expected stable 
individual superpeers may fail disconnect top level chord ring 
identity superpeers group changes new superpeers eagerly update vectors predecessor successor groups 
guarantees group date view neighboring groups ring disconnected 
fingers improve lookup performance hierarchical peer peer systems necessary successfully routing requests 
lazily update nger tables detect contain invalid similarly lazy update ngers regular chord rings 
worth noticing regular chord perform lookup operation nd lost nger 
due redundancy multiple superpeer approach provides choose delay superpeer nger vector group 
route request group pointed vector successor nger choose random ip address vector forward request superpeer balancing load superpeers 

lookup latency hierarchical chord section quantify improvement lookup latency due hierarchical organization peers 
compare lookup performance chord tier hierarchical dht chord top level overlay arbitrary dhts bottom level overlays 
bottom level group suppose peers group topologically close intra group lookup delays negligible 
order fair comparison suppose hierarchical dhts number peers denoted number groups hierarchical design 
peers joining leaving ring nger entries peers accurate 
probable ngers updated lazily 
capture heterogeneity peers suppose categories peers stable peers peer probability unstable peers peer probability suppose vast majority peers unstable peers 
real networks gnutella peers just remain connected time getting data peers 
hierarchical organization select superpeers set stable peers suppose stable peer group 
unstable peers stable peers probability randomly chosen chord node dht approximately hierarchical system superpeers stable peers probability chord node compare lookup delay hierarchical dhts need consider chord ring peers peer having probability 
dht corresponds hierarchical dht corresponds 
proceed analyze lookup chord ring 
simplify analysis assume peers equally spaced ring distance adjacent peers model implies peer attempts contact nger table peer nger table probability successor peer suppose nger entry correct successor peer able nd new successor guarantees correct routing parallel processing letters lookup queries 
initial peer randomly generated key random variable denote number chord hops needed reach target peer reach peer responsible key 
random variable clockwise distance number peers initial peer target peer 
want compute expectation 
clearly hjt hjt suces calculate jt compute 
jt 
note 
value represents number nger entries precede target peer excluding nger successor 
nger entries probability corresponding peer starting initial peer hopping peer query advance peers th nger peer peer th nger peer query advance 
denote probability ith nger 
qn probability ith nger jn jn combining expression obtain recursion calculate 
obtain expected number hops 
plot expected number hops lookup function availability peers chord system di erent values smaller values peers ring totally reliable able advance quite quickly ring 
best nger target peer unavailable probability probability second best choice far smaller despite scalability chord lookup algorithm con guration hierarchical architecture signi cantly decrease lookup delay 
table gives expected number hops hierarchical schemes di erent values 
suppose cases groups peers 
number steps directly related lookup delay conclude average lookup delay signi cantly improved hierarchical dht 
hierarchical peer peer systems fig 

number hops lookup chord 
table 
flat vs hierarchical networks 
flat hierarchical pr pr ps 
hierarchical organizations general improve system scalability 
proposed generic framework hierarchical organization peer peer overlay networks demonstrated various advantages ers organization 
hierarchical design ers higher stability reliable peers superpeers top levels 
various intra group lookup algorithms simultaneously treats join leave events key migration local events ect single group 
gathering peers groups topological proximity hierarchical organization generates messages wide area signi cantly improve lookup performance 
architecture ideally suited caching popular content local groups 
instantiation hierarchical peer organization chord top level 
chord lookup algorithm required minor adaptations deal groups individual peers 
peers available hierarchical organization reduces length lookup path factor log log groups peers 
hierarchical organization reduces length lookup path dramatically superpeers far stable regular peers 
acknowledgments research partially funded www org project french government 
parallel processing letters stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications proceedings conference applications technologies architectures protocols computer communications san diego california usa acm press aug 
ratnasamy handley karp shenker scalable content addressable network proceedings conference applications technologies architectures protocols computer communications san diego california usa acm press aug 
rowstron druschel pastry scalable distributed object location routing large scale peer peer systems proceedings ifip acm international conference distributed systems platforms middleware heidelberg germany nov 
zhao kubiatowicz joseph tapestry infrastructure faulttolerant wide area location routing tech 
rep ucb csd computer science division university california berkeley apr 
ross biersack felber keller topology centric look service proceedings fifth international workshop networked group communications ngc munich germany springer sep 
aberer grid self organizing access structure information systems proceedings sixth international conference cooperative information systems coopis trento italy sep :10.1.1.19.6221
gnutella 
gnutella wego com kazaa 
www kazaa com shenker ratnasamy handley karp topologically aware overlay construction server selection proceedings ieee infocom new york city ny usa jun 
krishnamurthy wang xie early measurements cluster architecture systems proceedings acm sigcomm internet measurement workshop san francisco ca usa nov 
joseph zhao duan huang kubiatowicz landmark routing overlay networks proceedings iptps cambridge ma mar :10.1.1.19.6221
castro druschel hu rowstron topology aware routing structure peer peer overlay network international workshop directions distributed computing italy jun 
ross hash routing collections shared web caches ieee network magazine vol 
nov dec 
karger sherman kim web caching consistent hashing eighth international world wide web conference may 
wang network aware client clustering applications 
phd thesis cornell university may 
kurose ross computer networks top approach featuring internet nd edition :10.1.1.19.6221
addison wesley 
adar huberman free riding gnutella monday vol 
oct 
