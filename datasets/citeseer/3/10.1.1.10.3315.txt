proceedings third workshop discourse dialogue philadelphia july pp 

association computational linguistics 
synchronization asynchronous agent architecture dialogue systems nate blaylock james allen george ferguson department computer science university rochester rochester new york usa blaylock james ferguson cs rochester edu dialogue architectures pipelined agent restricted pipelined information 
trips dialogue architecture agent asynchronous layers information flow 
architecture synchronization issues encountered building truly distributed agentbased dialogue architecture 
people building dialogue systems 
architecturally systems tend fall camps pipelined architectures lamel nakano agent architectures seneff stent rudnicky 
agent architectures advantageous free system components potentially act asynchronous manner 
practice dialogue systems built agent architecture pass messages basically functioning terms pipelined flow information 
original implementation trips spoken dialogue system ferguson allen agent pipelined flow information system 
changes system allen allow take advantage distributed nature agentbased system 
system components passing information pipelined manner interpretation discourse management generation allow subsystems interpretation behavior reasoning acting generation asynchronously 
trips system truly distributed agent 
driving forces changes provide framework incremental asynchronous language processing allow mixed initiative system task level 
describe motivations briefly 
incremental language processing pipelined pipelined flow information system generation occur interpretation reasoning processes completed 
constraint human human dialogue evidenced presence grounding utterance acknowledgment interruptions 
making interpretation behavior generation asynchronous allows example system acknowledge question working finding answer 
mixed initiative interaction pipelined systems allow system take discourse level initiative cf 
chu brown difficult see allow system take task level initiative principled way 
systems reasoning action driven interpreted input reactive user utterances 
mixed initiative system system response determined user input system goals obligations exogenous events 
example system asynchronous behavior subsystem inform user new important event regardless tied user utterance 
hand extreme version pipelined flow control behavior user says way get pipeline flowing 
reasons changes described detail allen 
focus issues encountered developing asynchronous agentbased dialogue system respective solutions turn highly related process grounding 
describe general trips architecture information flow discuss various points synchronization system 
discuss issues mean general implementation asynchronous agent system 
trips architecture mentioned trips system allen allen allen built agent architecture 
systems flow information trips pipelined 
architecture information flow components shown 
trips information flows general areas interpretation behavior generation 
trips component implemented separate process 
information shared passing kqml finin messages central hub facilitator supports message logging syntax checking broadcast selective broadcast components 
discuss individual system components functions 
describe flow information system illustrate example 
details trips dialogue system website www cs rochester edu research speech interpretation task manager parser task interpretation requests interpretation manager behavioral agent planner scheduler monitors events task domain specific knowledge sources task execution requests problem solving acts recognized user discourse context problem solving acts perform exogenous event sources speech generation manager response planner behavior graphics generation trips architecture allen system components shows various components trips system 
components divided main categories interpretation behavior generation 
shown components straddle categories meaning represent state provide services necessary sorts processing 
interpretation manager im interprets user input coming various modality processors arises 
interacts resolve referring expressions task manager tm perform plan intention recognition part interpretation process 
broadcasts recognized speech acts interpretation collaborative problem solving actions see incrementally updates discourse context dc 
behavioral agent ba sense autonomous heart agent 
plans system behavior goals obligations user utterances actions changes world state 
actions require task domain dependent processing performed task manager 
actions involve communication collaboration user sent generation manager gm form communicative acts 
gm coordinates planning specific content utterances display updates producing results 
behavior driven discourse obligations dc directives receives ba 
collaborative problem solving model main components im ba gm communicate messages collaborative problem solving model dialogue allen blaylock 
model dialogue collaboration agents planning acting 
collaborating agents dialogue partners build execute plans deciding things objectives recipes resources situations facts world forth 
called collaborative problem solving objects operated collaborative problem solving acts identity possibility evaluate adopt 
agents may decide adopt certain objective identify recipe objective 
agreed beliefs objectives recipes forth constitute collaborative problem solving state 
course agents autonomous agent single change collaborative problem solving cps state 
interaction acts actions single agent performs attempt change cps state 
interaction acts initiate continue complete reject 
initiate proposes new change cps state 
continue adds new information proposal complete simply accepts proposal bringing change adding additional information 
course proposals rejected time causing fail 
example utterance save heart attack victim emergency planning domain interpreted interaction acts initiate identify objective rescue person initiate adopt objective rescue person 
user proposing consider person possible objective pursue 
proposing adopt objective plan 
interaction acts recognized intention recognition speech acts 
interaction acts speech acts differ ways 
speech acts describe linguistic level interaction ask tell interaction acts deal problem solving level adopting objectives evaluating recipes forth 
shown single speech act may correspond interaction acts 
information flow system paths information asynchronously flows system 
discuss information flow levels problem solving discourse grounding 
section follows gives example proceeds 
problem solving level problem solving level describes actual underlying task purposes dialogue interaction acts 
describe problem solving information flow user utterance 
discuss case system takes initiative results utterance system 
user utterance diagram user utterance goes speech recognizer parser outputs list speech acts cover input interpretation manager im 
im sends speech acts resolution 
interaction acts posited ability system react separately example completing rejecting second 
consider possible response right accept possible objective reject adopting right versus center handling don worry reject possible objective reject adopting 
scope precludes giving detail multiple interaction acts 
im sends speech act hypotheses task manager tm computes corresponding interaction acts confidence score hypothesis correct interpretation 
im chooses best interpretation broadcasts chosen cps act system understood message 
tm receives message updates new collaborative problem solving state interpretation entails 
behavioral agent ba receives broadcast decides wants form intentions action interaction act 
assuming ba decides act user utterance sends execution reasoning requests tm passes appropriate back components returns result ba 
ba forms interaction act result sends gm communicated user 
gm generates text graphical updates interaction act utters presents user 
pipelined pipelined flow systems flow information problem solving level 
trips paths information flow 
system initiative trips capable initiative 
stated initiative originates ba come areas user utterances private system objectives exogenous events 
system say exogenous event decides take initiative communicate user sends interaction act gm 
gm path outputs content user 
selective broadcasts components registered messages 
discourse level discourse level describes information directly related task hand linguistic nature 
information represented salience information discourse obligations traum allen 
user utterance input passes detailed speech recognizer parser im calls resolution 
resolved form im computes discourse obligations utterance entails utterance question address answer acknowledge heard question 
point im broadcasts system heard message includes incurred discourse obligations changes salience 
receipt message discourse context updates discourse obligations updates salience information 
gm learns new discourse obligations discourse context begins try fulfill regardless heard ba problem solving side things 
obligations unable fulfill knowledge happening problem solving level answering addressing question example 
obligations fulfilled problem solving knowledge acknowledgment example case gm produces content fulfill discourse obligation 
gm receives interaction acts discourse obligations simultaneously produce content fulfills problem solving discourse needs 
usually interaction acts discourse obligations objective obligation address answer question interaction act identifying situation commu works conceptually similar way current system handle discourse level information flow quite cleanly 
intend clean things move exact model near 
answer user example 
system ability take initiative interaction acts discourse obligations may disparate obligation address answer question interaction act identify adopt new pressing objective example 
case gm plan content fulfill acts obligations best apologize answering question informing user example 
method gm maintains dialogue coherence ba autonomous 
grounding level level information flow level loosely call grounding clark schaefer traum 
trips acts obligations accomplished contexts updated user heard understood system utterance 
receiving new utterance im determines contains evidence user having heard understood utterance 
user heard understood im broadcasts user heard message contains salience information previous system utterance discourse obligations system utterance fulfilled 
message update salience information discourse context discharge fulfilled discourse obligations 
important contexts updated system know user heard utterance 
user example walks away system speaks system discourse obligations fulfilled salience information trips uses small subset traum grounding model 
practice problems far 
acceptance rejection actual content utterance handled collaborative problem solving model allen blaylock discussed 
hearing understanding currently recognized separately system 
extend system handle separately case user having heard understood 
change 
gm receives user heard message knows interaction act system utterance presenting 
broadcasts user understood message causes tm update collaborative problem solving state ba release goals intentions fulfilled interaction act 
important context updates occur system evidence user understood utterance reasons similar discussed 
handling grounding frees system assumptions user hears understands utterance 
example example trips medication advisor domain ferguson 
medication advisor project carried conjunction center health university rochester 
system designed help people especially elderly understand manage prescription medications 
huge growth number pharmaceutical therapies patients tend combination different drugs characteristics requirements 
example drug needs taken certain rate day hours needed 
drugs need taken empty stomach milk meals 
overwhelmed large set complex interactions patients simply comply prescribed drug regimen 
trips medication advisor designed help alleviate problem giving patients easy accessible prescription information management home 
example assume dialogue system user progress www org number topics addressed 
certain point conversation system just uttered ll try user utters user take aspirin trace information flow grounding level discourse level problem solving level 
information flow illustrated 
grounding level utterance goes speech recognizer parser im 
illustrated utterance im recognizes user heard understood system utterance sends user heard message causes discourse context update discourse obligations update salience system utterance 
gm receives user heard message sends corresponding user understood message containing interaction act motivating system utterance 
receiving message tm updates collaborative problem solving state ba updates intentions goals 
things happening discourse level 
discourse level im sends user heard message shown sends request resolve user utterance 
recognizes user asked question gives system discourse obligations answering addressing question acknowledging question 
im sends system heard message causes update salience discourse context store newly incurred discourse obligations 
gm receives new discourse obligations received ba problem solving see 
knowledge happening problem solving gm unable fulfill discourse obligation answer ad dress question 
able fulfill obligation acknowledging question certain delay response ba gm plans content produce acknowledgment causes avatar graphically show thinking causes system utter system hang things happening problem solving level 
problem solving level sends system heard message shown im computes possible speech acts input 
case question ability take aspirin request evaluate action aspirin 
sent tm intention recognition 
case question fit task model receives low score 
system prefers interpretations user wants information reason just sake knowing 
second speech act recognized initiate evaluation action aspirin user wants evaluate action system 
hypothesis receives higher score 
im chooses second interpretation broadcasts system understood message announces interpretation 
tm receives message updates collaborative problem solving state reflect user interaction act 
ba receives message shown decides adopt intention doing evaluation reporting user 
sends evaluation request action user aspirin tm queries back components user knowledge base medication knowledgebase prescriptions user interact aspirin 
trips medication advisor avatar talking capsule top half rotates thinking 
ll try 
take aspirin 
interpret user heard im ref tm ba system understood cps act evaluate action im ref reply tm ba gm gm user understood im resolve reply ref tm ba system heard obligation ack obligation answer im ref tm perform ps act result ba hang gm gm address oblig ack inform user result address oblig answer flow information utterance take aspirin grounding level discourse level problem solving level back components report user prescription interacts aspirin 
tm reports ba action bad idea 
ba formulates interaction act reflecting facts sends gm 
gm produces utterance performs interaction act fulfills discourse obligation responding question 
system interacts aspirin synchronization architecture somewhat idealized details components know context interpret messages ensure messages get components right order 
illustrate problems giving examples 
discuss solution implemented 
examples synchronization problems problems faces distributed systems shared state agents 
problem architecture described section lack context interpret messages 
illustrated interpret request im tm 
discussed im sends candidate speech acts tm performs intention recognition assigns score 
problem context tm interpret utterances 
simply change collaborative problem solving state time performs intention recognition may get multiple requests im gets chosen official interpretation system 
stated tm updates context time receives system understood user understood message 
brings second problem distributed system 
components operating asynchronously including user may add impossible guarantee messages arrive component desired order 
desired order purely pragmatic assessment 
centralized facilitator messages pass guarantee messages particular component particular component arrive order component sends component messages get order component sent 
components send component message say arrive component 
means current context im may different tm 
consider case system just utterance user responding 
describe thing im check hearing understanding sends user heard message 
gm receives message sends corresponding user understood message causes tm update context containing system utterance 
im assuming context systems utterance interpretation 
sends interpret requests tm 
tm receives interpret request im receives user understood message gm try interpret input context user utterance user utterance row system saying 
situation give erroneous results avoided 
synchronization solution solution problems course synchronization causing components wait certain stages sure context 
interesting note synchronization points highly related theory grounding common ground 
solve problem listed lack context components append context assumptions message 
im sending tm request interpret sends tm request interpret context having understood likewise im requesting resolve requests resolve having heard having messages explicitly contain context assumptions allows components interpret messages correct context 
model context discrete incrementing chunk common ground 
common ground updates correspond exactly heard understood messages described 
order perform certain task resolution intention recognition component know common ground context done 
solution second problem message ordering follows explicitly listing context assumptions 
component receives message appended context component hasn received update notice heard understood message component simply defers processing message received corresponding update message update context 
ensures messages may guaranteed arrive right order processed right context 
provides necessary synchronization allows asynchronous system components coherent manner 
discussion believe general ramifications agent flow information architecture 

agents queried hypothesis keep state treat utterance single chunk 
interested moving fine grained models dialogue 
believe current architecture useful move finer grained model 
hypotheses chosen 

agents assume shared context 
system components user acting asynchronously impossible general agent know context agent currently 

agents able defer working input 
feature allows wait synchronization receive message interpreted context reached 
asynchronous agent architectures allow dialogue systems interact users richer natural way 
unfortunately cost moving truly distributed system need deal synchronization 
fortunately dialogue systems models grounding provide suitable intuitive basis system synchronization 
trips dialogue system architecture asynchronous agent architecture multiple layers flow information 
discussed problems building distributed system 
turns models grounding provide foundation necessary system synchronization 
plan clean model ways discussed 
interested moving incremental model grounding grounding take place context change sentence boundaries 
interested extending model handle asynchronous issues turn level 
example happens context user system talking user system speak simultaneous time 
believe able leverage asynchronous model handle cases 
acknowledgments amanda stent involved original formulation architecture 
wish anonymous reviewers helpful comments 
material supported department education 
onr research 
darpa research 
nsf 
eia foundation 
opinions findings recommendations expressed material authors necessarily reflect views mentioned organizations 
allen byron ferguson stent 

architecture generic dialogue shell 
journal natural language engineering special issue best practices spoken language dialogue systems engineering december 
james allen george ferguson amanda stent 

architecture realistic conversational systems 
proceedings intelligent user interfaces iui pages santa fe nm january 
james allen donna byron george ferguson amanda stent 

conversational human computer interaction 
ai magazine 
james allen nate blaylock george ferguson 

problem solving model collaborative agents 
international joint conference autonomous agents multiagent systems bologna italy july 
appear 
nate blaylock 

managing communicative intentions dialogue collaborative problem solving model 
technical report university rochester department computer science april 
jennifer chu michael brown 

initiative collaborative interactions cues effects 
haller mcroy editors working notes aaai spring symposium computational models mixed initiative interaction pages stanford ca 
herbert clark edward schaefer 

contributing discourse 
cognitive science 
cramer pierce 

systematic review associations dose medication compliance 
august 
george ferguson james allen 

trips intelligent integrated intelligent problem solving assistant 
proceedings fifteenth national conference artificial intelligence aaai pages madison wi july 
george ferguson james allen nate blaylock donna byron nate chambers shen robert mary swift 

medication advisor project preliminary report 
technical report university rochester department computer science may tim finin yannis labrou james mayfield 

kqml agent communication language 
bradshaw editor software agents 
aaai press menlo park ca 
lamel rosset gauvain 

limsi arise system 
proceedings th ieee workshop interactive voice technology telecommunications applications pages torino italy september 
nakano miyazaki jun ichi 

understanding unsegmented user utterances real time spoken dialogue systems 
proceedings th annual meeting association computational linguistics acl pages 
rudnicky thayer xu oh 

creating natural dialogs carnegie mellon communicator system 
proceedings th european conference speech communication technology eurospeech pages budapest hungary september 
stephanie seneff raymond lau joseph polifroni 

organization communication control galaxy ii conversational system 
proceedings th european conference speech communication technology eurospeech budapest hungary september 
amanda stent john dowding jean mark elizabeth owen bratt robert moore 

spoken dialogue system 
proceedings th annual meeting association computational linguistics acl 
david traum james allen 

discourse obligations dialogue processing 
proceedings nd annual meeting association computational linguistics acl pages las cruces new mexico 
david traum 

computational theory grounding natural language conversation 
technical report university rochester department computer science december 
phd thesis 
