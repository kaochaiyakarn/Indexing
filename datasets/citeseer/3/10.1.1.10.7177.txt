computers graphics technical section interactive multimedia streams distributed applications edouard aaron oliver markus gross computer science department institute scientific computing ifw eth zentrum ch zurich switzerland computer science department university california davis usa distributed multimedia applications typically handle different types communication request reply interaction control information real time streaming data 
corba audio video streaming service provides promising framework efficient development applications 
discuss corba design implementation campus tv distributed television studio architecture 
analyze performance test application respect different configurations 
especially investigate interaction delays latencies occur issuing corba request receiving video frame corresponding new mode 
analysis confirms interaction delay reasonably bounded udp rtp 
order provide results independent coding schemes take account media specific compression issues 
results help essential design decisions developing interactive multimedia applications general involving distributed synthetic image data augmented virtual reality 
rights reserved 
keywords distributed systems augmented virtual realities computer conferencing teleconferencing videoconferencing performance systems 
distributed component architectures leverage development networked applications provide powerful programming model remote method invocation 
distributed multimedia applications require additional features allow efficient transmission real time streaming data 
years corba research industrial projects foremost standards distributed computing 
stable implementations widely available open source commercial software 
corba suitable time performance critical applications real time corba specification released 
analyzes tao ac framework corba audio video streaming service implementation context dynamically changing real time transmissions 
built streaming application test bed tao ac toolkit benchmarked tao corba implementation test application 
major contribution consists measurement latencies occur invocation corba request reception corresponding video frame 
quantitative results confirm latencies bounded streaming data transmitted unreliable transport protocols udp rtp 
absolute value latency depends average network load 
furthermore assess scalability test application respect number simultaneous video streams 
existing applications campus tv test bed handles large number high quality little processing overhead due coding 
allows efficient testing raw network data transmission aspects corba streaming service 
article pres tel fax 
inf ethz ch inf ethz ch cs ucdavis edu inf ethz ch gross 
see front matter rights reserved 
doi analysis valid video type streamed real time data including computer generated image data 
study corba suitability distributed interactive multimedia streaming part blue project aim development novel platform highly immersive collaborative virtual environments blue ethz ch 
comprises things real time acquisition video images human user reconstruction graphical representation 
geometry enhanced video transmitted high speed network blue portals seamlessly integrated distributed virtual environment 
blue system eventually lead distributed virtual reality platform collaboration possible natural ways communication interaction enhanced feeling total immersion 
research groups th zurich currently develop various blue hard software components 
blue environment heterogeneous system different platforms including sgi irix linux microsoft windows 
increasing complexity system demands middleware advanced programming model distributed computing supporting portability real time features 
chosen middleware needs provide efficient way transmitting control information allowing dynamic configuration system setup exchange time critical information latency critical real time streams bandwidth requirements megabits second 
point view blue platform different distributed applications share highquality multimedia streams 
practical point view campus tv test bed implements distributed television studio depicted fig 

components connected local area network variable number camera stations acquire audio video signals continuously transmit control desk 
control desk providing graphical user interface allows operator preview configure available streams 
theoretically unlimited number receivers listen multicast address tv program 
remainder organized follows 
reviewing corba multimedia applications section related section describe architecture application section 
section discusses implementation details different components section presents performance analysis 

corba multimedia lot effort put development general purpose communication middleware 
middleware intermediate software layer low level application programming interfaces application code 
middleware toolkits leads generally better structured software architecture allows easier portability platform 
middleware standard appropriate building distributed multimedia applications 
special requirements type applications summarized follows handling continuous media streams 
support multi party communication 
quality service management 
real time synchronization 
classical environments distributed computing fulfill requirements distributed article pres fig 

campus tv distributed tv studio architecture 
computers graphics multimedia applications 
initial focus lies remote request reply object interactions capabilities continuous media modeling limited 
common object request broker architecture corba supported object management group omg naturally support transmission real time streaming data 
corba layer introduces large overhead marshalling operations retransmission lost packets 
corba audio video streaming service specified uses promising concept transmission time critical streaming data 
distinction control information connection setup device configuration real time payload data 
control information perfectly handled corba client server programming model real time data directly streamed classical transport protocols 
hand design profits advantages corba programming environment hand produces overhead time critical data 
order guarantee interoperability different streaming applications service defines common interfaces control management streams 
stream associated media controller implements application specific functionality 
streaming service specification prescribe interface details media controllers flexibly designed application developers 
schematic description service depicted fig 

stream contains data flows connects data sources corresponding data sinks 
endpoint represented interface comprises flow endpoint data source data sink represented face 
stream interface control object represented interface providing idl defined interface controlling managing stream 
stream adapter receives transmits data frames network 

related center distributed object computing washington university st louis provides tao advanced corba implementation includes real time features additional services corba including streaming service 
ace adaptive communication environment open source object oriented framework implements core design patterns concurrent communication software 
furthermore provides operating system abstraction layer improves portability applications built ace 
ace orb tao implements standard corba model enhancements real time applications 
information tao ace sources current version downloaded www cs wustl edu schmidt tao html 
mpeg video server included streaming service example application tao 
article pres flow data endpoint source stream adapter stream interface control object object adapter stream interface control object object adapter flow data endpoint sink stream adapter control management objects orb core data stream fig 

data transmission corba audio video streaming service 
computers graphics distributed mpeg player oregon graduate institute :10.1.1.49.946
mbone videoconferencing application vic ported tao streaming service :10.1.1.51.6717
includes video distribution application combining streaming service quality objects framework 
applications allows simple adaptation performance analysis similar tests section 
field collaborative virtual reality distributed simulation design suggestions frameworks going projects exist complete frame implemented today 
iso published model open distributed processing rm odp meta standard distributed processing 
corba concrete standards pr mo presentation multimedia objects implement concepts rm odp various extents 
attempts integrate corba multimedia processing transmission 
time research projects corba streaming service fully specified 
real time transport protocol rtp appropriate transport protocol multimedia data delivery taken account section :10.1.1.165.7150
mccanne propose common infrastructure multimedia networking middleware mash project 
research effort generated large number applications video conferencing application remotely controlled control system live 
application developed functionality campus tv currently requires special hardware video switching implemented ad hoc remote method invocation 

system description section gives overview campus tv test application built evaluation corba streaming service 
supported data classes described important design decisions 

overview application camera stations grab live video images potentially low resolution low frame rate 
information continuously streamed control desk 
user select camera send image active image receivers 
refer active camera station broadcast camera station 
term area television transmission mixed meaning context computer networks 
choice broadcast station communicated camera station corba requests video audio data distributed configurable ip transport protocols 
camera station gets broadcast token control desk starts sending input high resolution highest achievable frame rate multicast address 
control information image dimensions frame rate dynamically configured session 
changes setup propagated orb 
fig 
shows system overview test bed 
receivers ask control desk information currently distributed program 
add multicast session streaming service 
control desk knows distributed camera stations delivering possible input 
keep track receivers exchange information setup data 
high quality stream broadcast camera station distributed udp multicasting system scales high number receivers 
furthermore priori limit number camera stations new camera station introduces additional network traffic increases workload control desk 
fact trade quality preview images dynamically configuring image resolution frame rate preview video streams 
centralized sender broadcast stream data transmitted minimal overhead latency 

supported data 
control information control information different audio video samples includes commands managing streams start configuration parameters data acquisition 
monitoring system 
control desk configures example dimensions video images acquisition frame rate camera station 
sample frequency audio acquisition 
permission send multicast address 
action switching camera station camera station broadcast station summarized actions article pres computers graphics send current broadcast settings instruct sending multicast address 
instruct start sending multicast address 
streaming specification suggests media control object associated point 
media controller implements device specific operations general handled objects 
media controller completely specified application developer type information communicated requirements different applications met 
fig 
depicts typical stream setup point point connection shows different paths control real time streaming data 

audio video transmission video frames grabbed rgb images bits pixel color information 
camera stations sgi workstations video option 
focus dynamically configurable streams assess performance tao streaming service implementation 
integrate compression algorithms campus tv 
course necessary deploying campus tv large scale environment 
tao streaming service implementation provides pluggable protocol framework common ip transport protocols tcp udp unicast multicast rtp atm included 
factory object encapsulates concrete protocol objects simplifies addition data transfer protocols 
furthermore allows rapidly integrate different protocols application 
connection setup completely handled streaming service specification application programmer needs adapt payload data various protocols 
case example sequence numbers identifying fragmented image packets 
tcp rtp sequence numbers protocol headers udp 
implemented additional software layer handles protocol dependent packetization pay load data 
corba specification distinguishes flows carrying data direction streams comprising set flows 
ways specifying connection light full profile 
light profile application granted access stream endpoints virtual multimedia devices 
virtual multimedia devices physical logical devices consuming producing samples multimedia stream 
access flow points flow connection required full profile 
tao implements configurations 
full profile separate access video audio flows design flexible investigations 
critical issue efficient distribution data users availability pointto multipoint communication 
course point distribution realized pointto point connections strategy efficient available resources 
corba service specification includes point multipoint binding define multipoint multipoint binding sources communicate sinks 
tao framework supports multipoint multipoint communication important feature test application 
additionally classical udp multicasting data source aware listening data transmission 
corba service data sink needs explicitly added data sources stream controllers 
application control desk defines naturally stream configuration candidate camera stations receivers article pres fig 

streaming video images data source data sink point point connection 
computers graphics judge connection establishment able handle available streams 

implementation details different components campus tv application 

control desk control desk configuring broadcast session interactive part application 
screenshot representing control desk graphical user interface shown fig 

left part user interface dedicated thumbnail preview images right part deals broadcast stream 
control desk registers corba naming service clients retrieve control desk object 
clients requests control desk distributes setup information camera stations receivers 
practical point view separate service offer functionality receivers 
furthermore control desk initializes multicast transmission listener attributed multicast address 
creates data source dummy source required tao implementation streaming specification multipoint connection setup 
application implemented different strategies reactor process 
campus tv control desk process strategy lead new process connecting camera station 
currently implemented reactor strategy input camera stations handled process events indicate new data arrived 
update rates thumbnail preview images high control desk performance sufficient 
analysis control desk scalability respect number camera stations section 
apart naming service control desk uses corba property service retrieving media controller camera station 
graphical user interfaces implemented qt cross platform gui framework www com 
goal build portable communication layer need gui toolkit available platforms interest 
significant advantage qt library consists article pres fig 

graphical user interface control desk 
computers graphics opengl support www opengl org 
qt allow respectively create opengl rendering context display format render opengl scene integrated qt gui 
opengl rendering necessary campus tv need research deals geometry enhanced video integration virtual scenes 
rendering video images opengl possible different strategies opengl function allows write block pixels directly frame buffer 
second possibility consists texture map video image polygon 
modern graphics processing units texture mapping generally faster cpu consuming pixel drawing strategy 
note simple layer www org provides similar functionality alternative implementation 

camera station video images grabbed regular time intervals 
frame rate video acquisition controlled changing time value 
audio acquisition implemented analogous way video acquisition 
camera station started asks control desk naming service connects control desk 
starts transmitting video data current configuration 
camera station joins multipoint connection setup 
ready start sending audio video data multicast address soon broadcasting station 

receiver receiver retrieves information current session control desk 
connects multicast address presents received data user 
receiver control desk interact initial connection 
control desk directly configure receivers unaware number type current receivers 
currently implementation include explicit synchronization audio video play 

performance analysis section summarizes performance analysis conducted campus tv test bed 
describing experimental setup discuss results concerning interaction delays scalability audio video jitter 

experimental setup experiments sgi workstations video option possible camera stations sgi octane control desk host 
workstations running sgi irix connected mbps fast ethernet switch 
ran tests average load local area network low 
note experiments sections done audio transmission 
configurations useful testing purposes 
running campus tv application mode requires low resolution preview images hz high resolution broadcast images rtp data transmission 

interaction delay call interaction delay duration issuing corba request control desk moment reception video frame new mode 
practice camera station media controller implements method changing color pixel frame acquisition 
control desk check test pixel rgb values received video frames measure delay issuing setcolor command control desk reception corresponding frame 
idl interface function follows struct color short short short void setcolor color col measured interaction delay generating automatically series setcolor commands control desk 
fixed range duration setcolor invocations generated uniformly distributed time outs range 
test results obtained timeout values ms samples respectively experiment ran min repeated experiments various time ranges observe significant differences resulting interaction delays 
image resolutions preview broadcast images configured low pixels 
medium pixels 
high pixels 
article pres computers graphics table shows mean value standard deviation different preview image resolutions udp rtp tcp point point connections respectively 
resolution broadcast image pixels case 
interaction delay measured broadcast connection 
resolution preview images influence network traffic 
low medium resolution configuration camera stations sending preview images hz leads network traffic approximately mbps respectively 
broadcast video streamed maximum possible frame rate 
low medium sized preview images broadcast frame rate hz achieved 
highresolution case camera stations hz leads approximate network traffic mbps certain amount packets certainly lost 
broadcast frame rate drops hz loss indicated table refers broadcast stream 
note udp test case udp multicasting multipoint multipoint broadcast communication rtp tcp test cases rtp multicasting broadcast image 
sample regarded lost corresponding broadcast image frame received 
figs 
vertical axis indicates time interval dt percentage samples interaction delay larger dt figs 
represent approximation probability distribution pt pt dt probability interaction delay larger dt fig 
observe configuration low sized preview images interaction delays shorter ms choice transport protocol significantly influence probability distributions 
case medium sized preview images probability distributions udp rtp slightly different previous case 
article pres table interaction delay measurement statistics different protocols preview image resolutions broadcast resolution pixels preview broadcast mean ms stdev ms min ms max ms loss udp low udp high rtp low rtp high tcp low rtp high udp medium rtp high rtp medium rtp high tcp medium rtp high udp high udp high rtp high rtp high tcp high rtp high preview low medium traffic mbps interaction delay ms udp ow udp medium rtp low rtp medium tcp low tcp medium fig 

semi logarithmic plot interaction delay distribution configurations low medium resolution preview images camera stations broadcast image high resolution 
preview high traffic mbps interaction delay ms udp gh rtp high tcp high fig 

semi logarithmic plot interaction delay distribution configurations high resolution preview images camera stations broadcast image high resolution 
computers graphics tcp observe significant increase interaction delay 
case preview images high resolution see fig 
average interaction delay increases ms udp rtp 
standard deviation udp rtp data sets increases approximately 
realize configuration tcp competitive anymore interaction delay values tcp samples higher unreliable protocols 
note test case network traffic high certain amount multicast frames broadcasting camera station get lost sample generates valid interaction delay 
amount lost frames indicated table 
furthermore part observed interaction delay due low frame rate high resolution configuration 
resolutions preview broadcast images pixels frame rate broadcast stream drops hz expected delay simply due low frame rate ms totally neglected 
probability distribution curves udp rtp experiments lead interaction delay bounded 
setting interaction delays occurred time frame mean width depending average network load 
interaction delay predictable tcp inherent flow control algorithms 
observe probability distributions rtp udp general similar 
hand expected rtp uses udp transport protocol 
hand confirms tao rtp implementation introduce significant amount overhead 

scalability fig 
shows average cpu load camera station various configurations 
camera station broadcast station needs transmit low quality preview images high quality broadcast images 
observe cpu load increases significantly size video frames 
acquisition frequency relevant preview images broadcast images streamed maximum possible frame rate 
note configuration high resolution broadcast images low resolution preview images acquisition frequencies higher hz achievable 
data sets fig 
obtained preview stream 
fig 
appears cpu load control desk influenced number camera stations frame rate 
increase number camera stations cpu load grows 
high acquisition frequencies network load allow regular frame rate broadcast stream 
explains variation test cases monotonic 
fact update rate broadcast image control desk lies hz scalability experiments done rtp rtp multicast preview broadcast images respectively 

audio video jitter additionally investigated phase jitter audio video data 
looking video audio packet transmission observed delays audio video packets broadcast camera station article pres cpu load acquisition frequency hz camera station low medium low low medium medium low high fig 

cpu load different rtp preview broadcast configurations camera station 
cpu load acquisition frequency hz control desk preview low broadcast high fig 

cpu load control desk respect number preview images preview acquisition frequency low preview size high resolution broadcast rtp 
computers graphics receivers 
seen fig 
high quality video transmission uses camera station cpu 
case constant delay audio video play perceived 
explained non optimized audio acquisition scheduling play algorithms 
optimization audio transmission focus blue system speech transmission handled different subsystem geometry enhanced video transmission 

outlook performance analysis shows corba streaming service introduces critical overhead multimedia data transmission 
concept media controllers allows flexible integration application specific interactions streaming framework 
measurements show interaction delay bounded appropriate transport protocols udp rtp 
absolute value interaction delay depends average network load 
furthermore campus tv control desk scaled increasing number camera stations 
pluggable protocol framework tao service implementation allow run similar tests different network configurations 
results study influence important design decisions distributed virtual reality platform findings deciding type requests handled orb type information apart multimedia data needs streamed real time 
concerning tao encountered problems implementation campus tv 
connection setup completely transparent take special care rtp transmission 
especially due fact tao rtp implementation bit unwieldy 
improved tao versions appear regular basis open source character allows bypassing local problems 
note target application blue system data controlling monitoring complex diverse campus tv test application 
point take fully advantage standardized stream interfaces streaming service flexibility provided concept media controllers 
possible optimizations respect acquisition compression taken account video streams upcoming blue prototype 
prototype currently development uses extensively functionality provided corba streaming service 
want investigate possibilities offered mpeg standard supports integration multimedia streams traditional formats synthetic images 
envision extend campus tv application special effects image warps fade outs performed video images 
special effects easily efficiently implemented receiver opengl commands polygons live video texture mapped 
numerous researchers developed tao opensource project 
perceptual computing computer vision group eth zurich letting hardware equipment 
blue project funded eth zurich 
common object request broker architecture specification 
object management group revision september 
schmidt dc kuhns overview real time corba specification 
ieee comput special issue object oriented real time distributed computing 
schmidt dc levine dl architectures patterns high performance real time corba object request brokers vol 
advances computers 
new york academic press 

audio video stream specification 
object management group january 
og gross mh kunz meier blue integrating real humans networked immersive environment 
proceedings acm collaborative virtual environments san francisco september 
new york acm press 

blair stefani 
open distributed processing multimedia 
reading ma addison wesley new york longman 
waddington dg coulson distributed multimedia component architecture 
proceedings international workshop enterprise distributed object computing gold coast australia october 

krishnamurthy schmidt dc 
design performance corba audio video streaming service chapter design management multimedia information systems opportunities challenges 
hershey idea group publishing 
schmidt stal rohnert buschmann software architecture patterns concurrent networked objects vol 

wiley new york 
article pres computers graphics cen pu walpole distributed real time mpeg video audio player :10.1.1.49.946
proceedings fifth international workshop network operating system support digital audio video nossdav durham new hampshire april 

mccanne jacobson vic flexible framework packet video :10.1.1.51.6717
proceedings acm multimedia san francisco california november 

karr da rodrigues krishnamurthy pyarali schmidt dc 
application quo quality service framework distributed video application 
proceedings third international symposium distributed objects applications rome italy september 
au ta 
performance issues hla run time infrastructure corba 
proceedings simulation technology training conference sydney australia 
jr fv kubo mm ac dos santos sg corba platform support distributed virtual environments 
proceedings ieee virtual reality conference march 

ryan levine dl schmidt dc jr applying scalable corba events service large scale distributed interactive simulations 
proceedings fifth workshop object oriented real time dependable systems ca november 
cooper johnson duce blair coulson fitzpatrick structuring extensibility adapting past fit 
proceedings cscw workshop component groupware philadelphia pennsylvania usa december 
standard modeling simulation high level architecture hla framework rules 
ieee standard september 
open distributed processing model 
standard iso iec 
duke dj herman standard multimedia middleware 
proceedings sixth acm international conference multimedia bristol united kingdom september 

blum molva corba platform distributed multimedia applications 
proceedings multimedia computing networking mmcn san jose ca february 
yun kong hong jw 
corba distributed multimedia system 
proceedings fourth workshop distributed multimedia systems 
vancouver canada july 

schulzrinne casner frederick jacobson rtp transport protocol real time applications :10.1.1.165.7150
rfc january 
mccanne brewer katz rowe amir chawathe mayer patel raman simpson swan tung wu smith common infrastructure middleware 
proceedings seventh international workshop network operating systems digital audio video nossdav may 

hodes newman mccanne landay katz shared remote control video conferencing application 
comput 
networking 
proceedings spie vol 

yu wu meyer patel rowe dc live control system 
proceedings electronic imaging science technology multimedia computing networking san jose ca january 
overview mpeg standard 
iso iec jtc sc wg may june 
article pres computers graphics 
