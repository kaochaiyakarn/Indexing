survey automated layout techniques information presentations layout refers process determining sizes positions visual objects part information presentation 
automated layout refers computer program automate part layout process 
field research lies crossroads artificial intelligence human computer interaction 
automated layout presentations increasingly important amount data need rapidly ability manually 
survey analyze techniques research systems automated layout components suggest possible areas 
categories subject descriptors hci user interfaces screen design ai applications expert systems computer graphics methodology techniques keywords automated layout intelligent user interfaces knowledge graphics information visualization artificial intelligence human computer interaction 
effective layout important aspects creating information presentation 
layout mean process determining position size visual object displayed presentation result process 
term presentation refer material intended viewed manipulated people example graphical textual user interfaces uis world wide web documents conventional newspapers magazines 
layout component presentation design complement decisions determine number nature visual objects laid information communicated format 
format supported part national science foundation digital libraries initiative phase part project columbia university award iis 
hawthorne ny usa simon steven feiner dept computer science columbia university amsterdam ave new york ny usa feiner cs columbia edu mean visual objects realized text graphics ui widgets attributes color texture font 
presentation layout significant impact communicates information obtains information interact 
example importance individual objects emphasized relationships objects clear 
case uis layout determines part time effort accuracy tasks accomplished 
laid presentation visually guide viewer infer correct relationships objects view linear presentation accomplish tasks quickly correctly minimizing distance objects manipulated sequentially increasing presentation effectiveness 
vast majority layouts created today done hand human graphic designer layout expert decisions position size objects 
designers typically spend years learning create effective layouts may take hours days create single screen presentation 
designing presentations hand expensive slow address situations time critical information communicated 
recognizing problem rise automated generation graphical presentations uis 
research addressed creation objects determination attributes referred format layout objects 
provide survey automated layout presentations recognizing objects laid may derived wholly part automated generation layout 
focus general problem restrict study address active field graph layout 
field extensively studied annual conference issues concerned specific problems caused explicit visual representation graph edges minimizing edge crossing 
note automated layout term commonly refer automated circuit layout vlsi chip fabrication automated placement pieces cut bolt cloth produce clothing 
presentation layouts including graph layouts layouts designed meet requirements fabrication process minimize chip area interconnect length vlsi un humans 
cover areas note employ techniques may contribute automated layout presentations general constraint solvers may bin packing techniques result minimal area layouts expense maintaining visually obvious relationships objects 
remainder discuss simple approaches presentation layout current commercial software section 
focus methods adopted research systems address automated presentation layout constraints learning 
described section research layout systems assume layout described set constraints 
addresses applying constraint solvers developing new ones 
addition researchers focused determine extract right constraints express computer program 
systems constraint generally fall category learning systems discuss section 
systems trained experts times user system assists layout process 
section introduce issues involved evaluating presentation layouts 
section presents ideas 

simple techniques contemporary user interfaces built ui toolkit sun jfc swing microsoft foundation classes ancestors tk provides basic functionality creating buttons windows 
toolkits include layout managers known geometry managers assist ui designer programmer designing layout objects managed container having specify absolute position size object 
layout managers allow programmer say effect add button add button part window optionally specify additional numeric constraints 
possible create layouts adapt changes container size 
layout manager chooses positions sizes run time objects controls governed set constraints imposed simple layout policy built manager parameters specified programmer 
typical layout policies include strict horizontal row vertical column layout row major layout objects wrap row column avoid exceeding managed container bounds border layout objects specified reside north south east west center managed container grid layout objects specified reside position straddle multiple positions programmer specified grid 
parameters indicate preferred minimum maximum widths heights objects spacing objects objects container edges 
managed containers nested inside managed containers treated just objects 
programmer designs parameterized layout hierarchy managed containers chosen layout policies constrained programmer specified parameters 
layout manager design layout instantiates layout run time structure parameters specified programmer 
designing simple layout buttons displayed row major order easy programmer designing complex hierarchical layout possible tedious difficult especially needs behave robustly resized 
popularity layout manager approach stems primarily ease implementing managers relative ease programmers define simple parameterized layouts 
addition final layout determined run time presentation wide range possible window sizes lower bounds usability imposed minimum effective sizes objects laid 
commercial word processing presentation systems intended primarily sequential presentations microsoft word publisher powerpoint express latex provide set style templates ability create new ones applied existing material example matching markup tags material processed corresponding tags template 
comparison parameterized layouts ui toolkit layout managers systems simpler 
emphasize format material relying order objects specified input directly determine order formatted objects appear presentation exception handling floating objects 
floating objects tables figures move relative surrounding objects typically text 
typically set rules determine final position floating object example height object height page put object separate page put object nearest paragraph break users systems move floating objects hand guide overrule simplistic placement policies 
sections discuss techniques explored automated layout systems constraint satisfaction learning 

constraint satisfaction vast majority research automated layout date focuses constraint methods 
idea layouts represented set constraints intuitive 
instance consider constraint relationships depicted 
goal constraint automated layout system take constraint network generate set positions sizes components network 
constraint automated layout system characterized kinds constraints uses described obtained resolved system addresses constraint inconsistencies loops hazards prevent solution converging 
rest section explore issues 
types constraints constraint automated layout system constraints classified spatial 
mean constraint describes high level relationship components included layout text pic 
contrast spatial constraints enforce position size restrictions components pic 
spatial constraints fed directly constraint solver resolution constraints processed reduced spatial constraints layout realized 
process generating spatial constraints constraints challenging part creating automated layout system 
title text text title text title full page width text left pic pic text text pic title describes text title important text pic describes pic text follows text network constraints automated layout system 
set spatial constraints express constraint network 
set constraints express relationships 
choice employing spatial constraints depends nature layout system designed generate 
research systems employ spatial constraints general multimedia presentation tools 
research initiatives embodied form libraries garnet toolkit include extensions layout manager type functionality simple spatial constraints 
automated layout systems limited environments create effective layouts spatial constraints said attempting employ constraints spatial constraints 
depicts difference output system considers constraints versus system takes account spatial constraints 
issue discussed section 
constraints constraints descriptions high level relationships various components placed layout 
constraints text pic title important sufficiently high level content authors easily specify particularly effective interactive systems author content needs additional technical artistic skill specify 
think text pic implies relatively close generated layout constraints specify position size components layout 
mapping constraints spatial constraints performed translation component spatial constraints passed numeric constraint solver 
spatial constraint translator choose map constraint text pic set spatial constraints 
mean pic placed right text text pic placed different page visual cue left guide user text 
spatial constraints text text title pic text title text pic simple layout generated system considers relationships components 
layout components additional spatial constraints enforced component completely fills regular grid leave margins elements 
spatial constraints relations directly express geometric structure presentation 
instance may wish force certain block text appear beneath block text user assumed read 
instance spatial constraints force objects occupy space certain size integral multiple size 
number reasons want impose spatial constraints 
prevalent reason improve visual quality aesthetics presentation 
early automated layout systems created perspective computer science mathematics 
systems tend treat problem purely theoretical question tiling optimization techniques find solution 
kinds systems take account simple legibility rules text placed columns run entire page having blocks random size packed screen style guidelines captions go beneath associated figures spacing surrounding text block 
exemplifies happen system employs constraints spatial constraints 
system considers constraints able generate layouts aesthetic appeal systems consider system visual restrictions components layout placed 
method components represented may place kind limitation kinds spatial constraints may 
issue may arise referred cousins problem example shown 
layout generated system enforce spatial relationships cousins layout components spatial constraints force children aligned 
problem may arise data structure components stored allow referencing component children different component child 
intuitive want concepts graphic design create legible pleasing output 
systems enforce presentation conform grid system similar lay newspapers 
grid system screen page presentation divided array upright rectangles 
object occupy complete rectangles 
example output feiner grids system designs layout grids enforce consistency screens pages presentation 
complication employing grid systems graphical component may need cropped padded border aspect ratio changed uniform scaling object may sufficient object occupy integral number grid rectangles 
automated layout systems defined environments network diagrams label placement employ spatial constraints exclusively 
systems consider issues proximity components placed distance label target possibility confusing user placing multiple labels sufficiently near target user doesn know label associated 
constraints formatting labels larger cities bigger names generally layout directly 
systems allow user specify data constraints separately spatial constraints 
allows logical single presentation different opening door single presentation displayed different media 
particularly effective interactive layout systems want maintain separation content authors layout experts similar approach leverages concept build spatial constraints system eliminating need layout generated feiner grids grid showing 
layout user 
layouts generated system content constraints different visual constraints human intervention specify spatial constraints layout generated 
feiner grids example system 
spatial constraints increase efficiency constraint solver 
instance constraint placed objects certain type permits resized direction 
similarly imposing constraint quantized display permits fast fixed point integer programming techniques resolving set constraints 
expressing constraints intuitively best define formal grammar describe method constraints expressed 
approach benefits able leverage rich body existing research manipulating parsing constraints 
rich grammar flexible expressive translate better layouts 
example grammar layout system shown 
powerful expressive grammars may difficult 
especially true grammars ontologies attempt extremely general encompassing 
addition complex solver may necessary process information system 
imagine extremely difficult create system de article grammar article text text text number image author description page image article name article image right top aligned top aligned spaced spaced fragment rule definition wittenburg system 
set possible high level relationships components presentation explored automatic graphics generation 
extremely powerful approach express constraints terms boolean predicates 
approach alleviates concerns arise expressive grammar relational grammar approaches limiting space expressed 
boolean predicates eases process solving set constraints input needs little translation passed solver 
obtaining constraints important practical issues implementing constraintbased automated layout system determining obtain constraints 
approaches tried range fully automated computer making suggestions 
automated layout systems implement constraints gathering structured input data 
systems take tables numeric data automatically create presentations 
structure data provides relationships needed generate layout 
systems designed multimedia layout languages explicitly specify constraints describe relationships description precedes components 
assumption input data readily available structured form increasingly valid information create stored structured formats 
prevalent layout modules automated graphics generation systems 
interactive specification interactive constraint specification systems extremely popular suffer obvious limitation require user input 
systems designed help graphically naive content authors create professional quality layouts 
meant reduce amount time graphic designer needs spend layout 
systems take interactive input spatial constraints 
easy create graphical user interfaces allow user interactively place adjust components screen 
providing graphical user interface specify constraints constraints tend need adjustment 
roth sage system allows user associate database records visual elements 
interactive systems require user specify highlevel design document automatically generate final result 
approach useful situations goal enable content author create layouts need intervention layout expert systems take opposite approach system produces initial layout allows user refine 
systems applicable situations goal save amount time graphic designer needs spend create layout 
automated extraction fully automated constraint extraction explored method obtaining constraints 
done integrating natural language techniques automated layout 
particularly effective natural language generation employed create content 
content generators computer programs easier generator send describes relationships components markup text flags denoting parts particularly important 
method explored extract constraints entity relationships sql databases 
natural language generation system passes additional information layout system approach constraints derived data structures originally intended 
constraint solvers constraint automatic layout system way resolve constraints 
formally automated layout techniques solve form constraint satisfaction problem csp 
randomized deterministic algorithms applied solve problems field 
general constraint solvers employed categorized applying local global methodology 
local techniques local constraint solvers attack constraint satisfaction problem bottom 
compared inductive reasoning small subset universe solved 
routes taken rest constraints create final presentation 
approach solve small subsets constraints independently run second resolution phase combine results 
alternative approach iteratively resolve constraints border constraints solved considered 
local resolution technique problematic solver encounters local minima 
resolving small subsets solver may decisions bring system suboptimal final solution 
advantage local resolution techniques usually execute faster global techniques 
global techniques global constraint solvers attack constraint satisfaction problem top 
local techniques global techniques generally suffer problem local minima require computation time 
address issue additional computation time numeric solvers iterative approximation techniques applied 
randomized computation techniques genetic algorithms simulated annealing applied label placement 
inconsistency policies set constraints sufficiently large strong likelihood problems 
particular constraints may contradict possibly system constraints unsolvable 
resolution policy specified generate layout cases 
systems take simple approach inconsistency avoiding 
system inconsistency handling grammar articulate constraints designed way cycles occur 
popular method handling inconsistency apply priorities constraints 
permitting constraint inherent priority system intelligent decisions constraints drop contradiction encountered 
problem occur conflicting constraints priority 
case system ai technique applying tie breaking strategy come pick randomly layout generated 
priorities critical generating effective layouts systems complex networks spatial constraints 
example enforcement grid system employs design grids take precedence constraints 

learning techniques machine learning applied automated multimedia authoring systems including speech synthesis natural language generation graph layout 
automated layout systems leverage large body existing ai community machine learning 
automated layout systems form learning tend interactive specification constraints 
systems implement full machine learning systems 
try learn interacting user 
system allows user set system training mode relative locations components demonstrated system 
spatial constraints generate layout extracted interaction user 
constraints extracted system falls back having user specify position explicitly lisp function 
borning similar allows demonstration constraints adds ability demonstrate animation 
automated graphics generation explored learning techniques 
zhou divides space rules need acquired presentation generation categories information learning space visual learning space rule learning space 
visual learning space directly related spatial constraints similar borning 
zhou system employs full strength machine learning fully automated providing system large dataset presentations designed layout expert addition interactive methods seen employs learning techniques 
user interface designed metric evaluation 
lines track mouse movements human user operating user interface 
user interface designed sears metric evaluation methodology 
shorter mouse tracks show user need move mouse order get done 

evaluation techniques piece software perform task traditionally believed reserved human experts question asked computer human 
field layout may refer usability tasks accomplished quickly fewer errors greater user satisfaction aesthetics presentation users graphic designers think results look ones produced humans 
sense interactive layout generation systems module handles evaluation layout human user 
computer evaluation mechanism evaluate layout automatically relying user ideally feeding back results redesign layout deemed 
evaluation user interfaces independent designs explored number researchers 
focus research primarily divided creating heuristic inferences quantitative metrics 
heuristics course flexible metrics easier incorporate computer systems common automated evaluation mechanisms 
sears explored application metrics automated layout systems 
employed metrics evaluate usable interface amount mouse movement needed button clicks 
shows screen shots sears system 
additional information provided metrics embodied form spatial constraints 
fitts law implies buttons clicked sequentially placed close spatially reduces time needed move 
research addressed adding evaluation automated layout process context user modeling 
proposes interface include exclude certain elements type user change layout 
information may gathered run time frequency different parts system change layout modified reflect 
appropriate user model possible adapt output user 
note potential change create effective ui user mental map user interface 

illustrated range research accomplished field automated layout simple techniques research systems 
data presentation needs rapidly increase field automated layout increasingly important 
time feel inevitable powerful techniques research systems way popular software packages 
reviewing current research see number rich possibilities 
integration natural language techniques automated layout systems explored extent particularly natural language generation 
similar pursued image video understanding speech recognition 
may possible extract spatial constraints automated layout applying known vision speech recognition techniques multimedia components layout 
interesting possibility considering handle constraints wrong systems user specifying constraints manner point layout pipeline 
problem user simply mistake really mean specified 
system support ranking constraints priority user assign incorrect priorities 
constraints automatically extracted opens doors feeding incorrect information system 
natural language understanding image understanding speech recognition extract constraints definition means probability error constraints 
enabling automated layout system capable handling kinds problems involve applying ai techniques adversarial game playing 
algorithms computational biology genomics may applicable kind problem encountered gene sequencing 
constraints extracted automated process verified running multiple extraction algorithms having vote similar approach employed object recognition technique called hough transform 
applying algorithms defend constraint error system robust errors constraints cause little loss effectiveness presentation 
kinds constraints worthwhile consider obtained hardware capture information user models 
example real time systems automatically generate user interface benefit knowing user distance display medium information taken account layout design process computed automatically 
determined variety head tracking technologies 
eye tracking extract additional constraints user looking 
parts display user seen useful information pass automated layout system 

battista eades tamassia tollis 
graph drawing algorithms visualization graphs 
prentice hall usa 
beach 
computerized typesetting technical documents 
technical report dept computer science university waterloo waterloo canada 
bhatt cosmadakis 
complexity minimizing wire lengths vlsi layouts 
information processing letters june 
borning 
constraint tools building user interfaces 
acm transactions graphics oct 
borning 
constraint oriented simulation laboratory 
phd thesis stanford university july 
available stanford computer science department report stan cs xerox palo alto research center report ssl 
casner 
task analytic approach automated design graphic presentations 
acm transactions graphics apr 
christensen marks shieber 
algorithms cartographic label placement 
proceedings american congress surveying mapping pages 
christensen marks shieber 
empirical study algorithms point feature label placement 
acm transactions graphics july 

evaluating usability screen design layout complexity 
proceedings annual conference human computer interaction full papers pages 
di battista 
liu rival 
bipartite graphs upward drawings planarity 
information processing letters dec 
feiner 
grid approach automating display layout 
proceedings graphics interface pages june 
feiner mackinlay marks 
automating design effective graphics tutorial notes 
aaai washington dc july 
graph drawing conference 
www cs virginia edu gd 
graf 
constraint graphical layout multimodal presentations 
catarci costabile levialdi editors advanced visual interfaces avi volume series computer science pages 
world scientific may 

dimensional packing expected performance simple level algorithms 
information control 
horn 
robot vision 
mit press cambridge ma usa 
hu kuh 
vlsi circuit layout theory design 
ieee usa 
hudson smith 
ui toolkit user manual 
www cc gatech edu gvu ui sub arctic sub arctic doc users manual html 
hudson mohamed 
interactive specification flexible user interface displays 
acm transactions information systems july 
hudson smith 
ultra lightweight constraints 
proceedings acm symposium user interface software technology pages 

grid 
van nostrand reinhold australia 
jeffries miller wharton 
user interface evaluation real world comparison techniques 
proceedings acm chi conference human factors computing systems practical design methods pages 
java foundation classes 
whitepaper java sun com products jfc whitepaper html 

application temporal supervised learning algorithm generation natural language 
international joint conference neural networks washington dc january volume pages piscataway nj 
ieee 
kim foley 
don user interface presentation design assistant 
acm editor uist 
third annual symposium user interface software technology 
proceedings acm siggraph symposium snowbird utah usa october pages new york ny usa oct 
acm press 
marks 
interaction paradigms human computer cooperation graphical object modeling 
proceedings graphics interface pages june 
marks shieber 
automating layout network diagrams specified visual organization 
ieee transactions systems man cybernetics 
appear 
feiner 
inferring constraints multiple snapshots 
acm transactions graphics oct 
lengauer 
combinatorial algorithms integrated circuit layout 
teubner stuttgart 
linton vlissides calder 
composing user interfaces interviews 
ieee computer 
ernst 
approach automatic display layout combinatorial optimization algorithms 
software practice experience nov 
mackenzie buxton 
extending fitts law dimensional tasks 
proceedings acm chi conference human factors computing systems perception performance theory hci pages 
mackinlay 
automating design graphical presentations relational information 
acm transactions graphics apr 
mackworth 
constraint satisfaction 
shapiro editor encyclopedia artificial intelligence volume 
addison wesley publishing 
second edition 
mackworth 
logic constraint satisfaction 
artificial intelligence dec 

evolutionary learning graph layout constraints examples 
proceedings acm symposium user interface software technology demonstrational user interfaces pages 
swick converse 
toolkit intrinsics language interface 
digital equipment maynard ma usa 
microsoft microsoft visual mfc library 
microsoft press redmond wa usa 
milenkovic daniels li 
automatic marker making 
editor proceedings third canadian conference computational geometry pages august 
ller 
grid systems graphic design 
arthur publishers switzerland 
myers mcdaniel 
creating complete user interfaces demonstration 
interchi human factors computing systems apr 
myers garnet user interface development environment 
proceedings chi conference companion human factors computing systems pages 
nilsson 
artificial intelligence new synthesis 
morgan kaufmann publishers san francisco 
ousterhout 
tcl tk toolkit 
addison wesley 
pan mckeown 
learning intonation rules concept speech generation 
proc 
joint international conference computational linguistics association computational linguistics coling acl 

automatic generation graphical user interfaces interactive database applications 
bhargava finin yesha editors proceedings nd international conference information knowledge management pages new york ny usa nov 
acm press 
roth goldstein 
interactive graphic design automatic presentation knowledge 
proceedings acm chi conference human factors computing systems volume active support interaction pages 
roth 
graphics natural language components automatic explanation 
sullivan tyler editors intelligent user interfaces 
addison wesley reading ma 
salzberg kasif 
computational methods molecular biology 
elsevier science 

individual user interfaces model user interface software tools 
proceedings international conference intelligent user interfaces pages 
sears 
layout appropriateness metric evaluating user interface widget layout 
ieee transactions software engineering july 
sears 
aide step metric interface development tools 
proceedings acm symposium user interface software technology evaluation pages 
sears lund 
creating effective user interfaces 
ieee software july aug 
szekely drawing graphs surfaces crossings 
algorithmica july 
singh green 
automating lexical syntactic design graphical user interfaces uims 
acm transactions graphics 
singh kok ngan 
system demonstrational rapid user interface development 
proc 
rd annual symposium user interface software technology uist pages snowbird ut 

tim bray jean paoli maler 
extensible markup language xml 
www org tr rec xml 

computer tool evaluating alphanumeric displays 
proceedings ifip interact human computer interaction evaluation approaches methods pages 
vander zanden myers 
automatic look feel independent dialog creation graphical user interfaces 
proceedings acm chi conference human factors computing systems constraint ui tools pages 
wittenburg 
relational grammars interactive design 
glinert olsen editors proc 
ieee symp 
visual languages vl pages 
ieee press aug 
wittenburg 
automatic presentation multimedia documents relational grammars 
proceedings second acm international conference multimedia multimedia pages new york oct 
acm press 
zhou feiner 
data characterization automatically visualizing heterogeneous information 
proceedings ieee symposium information visualization pages 
ieee 
zhou feiner 
top hierarchical planning coherent visual discourse 
moore edmonds puerta editors proceedings international conference intelligent user interfaces pages new york 
acm press 
zhou ma 
applying machine learning design rule acquisition automated graphics generation 
technical report ibm watson research center 
