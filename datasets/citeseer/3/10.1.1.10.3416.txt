sim sketch sketch interface simulink kara mechanical engineering department carnegie mellon university pittsburgh pennsylvania andrew cmu edu sim sketch experimental sketch interface developed matlab simulink software package 
tool users construct functional simulink models simply drawing sketches computer screen 
support iterative design sim sketch allows users interact sketches real time modify existing objects add new ones 
system equipped domainindependent trainable symbol recognizer learn new symbols single prototype examples 
system easily extensible customizable new domains unique drawing styles 
categories subject descriptors software engineering design tools techniques user interfaces computer graphics methodology techniques interaction techniques 
aims create sketch understanding techniques enable natural sketch user interfaces 
sketches serve important role problem solving tool disciplines current computational tools designed representations 
goal change combining freedom freeform sketching unique affordances existing computer software 
provide test bed developed sim sketch sketch user interface matlab simulink software package 
simulink add package matlab analyzing feedback control systems similar dynamic systems 
typical session simulink involves number processes 
typically user navigates multi level symbol palette find select drag components time empty canvas 
objects connected arrows formed extending directed lines specific terminals source symbols sine wave specific terminals target symbols scope block 
model permission permission digital digital hard hard copies copies part part personal personal classroom classroom granted granted fee fee provided provided copies copies permission distributed digital profit hard copies commercial commercial advantage advantage part personal copies copies bear bear classroom notice notice isthe granted full full citation citation provided page 
page 
copies copy copy distributed republish republish profit post post commercial servers servers advantage redistribute redistribute lists copies lists bear requires requires prior specific permission full fee 
fee 
page 
copy republish avi avi may post servers le italy redistribute le italy lists requires prior specific permission acm acm fee 
avi italy copyright acm xxxxx xx xx xx 
thomas mechanical engineering department university california riverside riverside california engr ucr edu parameters signal magnitudes transfer function constants number input output terminals specified clicking objects typing relevant values keyboard 
simulations performed matlab engine running background 
sim sketch hand allows user accomplish task straightforward manner 
designed system user draw ordinarily minimal constraints imposed sketch understanding engine 
instance having navigate symbol palette locate choose object user simply draws symbols combines hand drawn arrows process system restrict order symbols drawn require user indicate symbol ends begins 
users need explicitly specify number input output terminals symbol program automatically determines analyzing spatial configurations arrows 
user sketch interpreted system functional simulink model user interact 
example users modify parameters various symbols run simulation models real time 
unique aspect interface users customize system drawing styles providing single prototype example object 
ability quickly train system frees user having memorize appearance simulink symbol 

user interaction sim sketch deployed digitizing lcd display stylus 
shows snapshot interface 
shown program demonstrates understanding placing bounding box symbol indicating symbol type text 
sketch processed user choose view cleaned version sketch symbols replaced iconic images arrows straightened line segments 
objects interpreted sim sketch live moment recognized enabling user interact 
instance user edit properties simulink object clicking button side stylus pointing object 
brings currently program library contains simulink objects 
system interprets sketch displays understanding marking simulink objects arrows 
sketch dialog box allows user change numerical values simply crossing old ones writing new ones new values recognized digit recognizer developed 
completing sketch user run simulation system view results directly sketch interface 
time user sketch new objects model new simulation automatically performed 

scenes create sketch understanding system address key technical challenges 
symbol recognition recognition individual objects placed drawing surface 
ability distinguish say sine wave transfer function focus symbol recognition 
second issue ink parsing task grouping user pen strokes clusters representing intended symbols requiring user indicate symbol ends begins 
difficult problem strokes grouped different ways number stroke groups consider increases exponentially number strokes 
alleviate difficulty current systems require user explicitly indicate intended partitioning ink 
done pressing button stylus pausing symbols 
alternatively systems require object drawn single pen stroke 
constraints usually result natural drawing environment 
approach hierarchical mark group recognize architecture 
step examine stream pen strokes identify markers symbols easily reliably extracted continuous stream input 
markers efficiently cluster remaining strokes distinct groups corresponding individual symbols 
key stroke clustering driven exclusively marker symbols identified step need search 
step identified stroke groups evaluated symbol recognizer developed 
working example simulink techniques equally applicable types data flow diagrams organizational charts algorithmic flowcharts various graphical representations including finite state machines markov models petri nets 
speed arrow recognition 
stroke arrow key points labeled 
speed profile 
key points speed minima 
preliminary recognition key successful sketch understanding lies ability establish ground truths sketch early costly mistakes take place 
approach marker symbols symbols easy recognize guide interpretation remainder sketch 
useful markers serve natural delimiters symbols 
domain data flow diagrams simulink arrows kind pattern 
program begins find arrows sketch 
user studies indicated users typically draw arrows single pen stroke consecutive strokes 
way invariably drawn tail head 
arrow examines pen stroke determine arrowhead 
determination basis pen speed information 
shown characteristic corner points arrowhead typically occur pen speed minimum 
points determined pen speed profile series geometric tests performed determine stroke really arrow 
example require angles abc bcd lines defined bc dc short compared total length pen stroke 
approach need consider shape arrow shaft recognize wide variety arrows 
stroke clustering arrows recognized step group remaining strokes clusters representing individual symbols 
data flow diagrams arrow connects source object tail target object head 
different clusters identified grouping strokes near arrow 
stroke clustering begins assigning non arrow stroke nearest arrow 
strokes assigned arrow grouped form cluster 
clusters partially fully overlapping bounding boxes merged 
arrow cluster linked nearest stroke cluster 
helps ensure intended connectivity diagram ensuring arrow cluster tail head 
time illustration cluster analysis 
generating symbol candidates identifying stroke clusters step recognize symbols suggested clusters 
sim sketch combines contextual knowledge shape recognition achieve accuracy efficiency 
form contextual knowledge simulink domain comes examination number input output terminals associated symbol 
certain objects output terminals outgoing arrows 
example source signals sine wave chirp signal random number generator step function type 
likewise symbols input terminals scope block may arbitrary number input output terminals sum block 
examining number input output arrows cluster program able narrow set possible interpretations symbol 
reduces amount recognizer 
helps increase accuracy reducing possibilities confusion 
example sum block clock look quite similar circular symbols context dictates sum block incoming arrows clock 
additional knowledge recognizer consider sum block clock competing candidates shape recognition 
symbol recognition sim sketch employs novel image recognizer find best interpretations stroke clusters 
input symbols internally described quantized bitmap images call templates 
representation number desirable characteristics 
segmentation process decomposing sketch con designed curve target curve sketch interface analyzing mechanical systems sketch bar linkage design tool 
primitives lines curves eliminated entirely 
second representation suited recognizing sketchy symbols heavy missing extra segments different line styles solid dashed 
lastly recognizer puts restrictions number strokes symbol order strokes drawn 
recognizer uses ensemble different classifiers evaluate match unknown symbol candidate definition symbol 
classifiers extensions methods hausdorff distance modified hausdorff distance tanimoto coefficient yule coefficient 
classifier provides similarity score symbols superimposing template representations measuring match black pixels 
classifiers differ way measure similarity 
recognition classifiers evaluate unknown symbol definitions outputs list definitions ranked similarity unknown 
results individual classifiers synthesized candidate definition best combined score assigned symbol 
recognizer versatile graphical symbol recognition digit recognition 
advantage recognizer traditional ones learn new definitions single prototype examples 
training user creates new symbol definition simply presenting example system 
approach users seamlessly train new symbols remove overwrite existing ones fly having depart main application 

examples explore techniques developed sketch interfaces analyzing mechanical systems bar linkages 
tool allows users sketch mechanical system study dynamic behavior 
user sketch interpreted program directly animate user hand drawn sketch 
animation masses move springs compress stretch simulation results displayed form graphical plots including position vs time plot masses system 
second tool allows users sketch bar linkage mechanism see animation 
visual feedback useful users immediately determine type mechanism crank double crank double 
animation see trajectory followed point apex triangle motion usually main design objective 
users design new mechanisms simply sketching target trajectory traversed optimization algorithm program produces new mechanism minimizes difference target curve curve produced bar linkage user sketched 

related years seen development experimental sketch interfaces number different disciplines including engineering design user interface design architecture 
alvarado davis describe system interpret simulate variety simple hand drawn mechanical systems 
system uses number heuristics construct recognition graph containing interpretations sketch 
best interpretation chosen scoring scheme uses contextual information user feedback 
approach time new stroke entered entire recognition tree updated 
contrast defer analysis user finishes sketching 
shape recognizers sensitive results segmentation fitting line arc segments raw ink forcing user cautious sketching 
approach rely segmentation allowing casual drawing styles 
rubine describes trainable gesture recognizer direct manipulation interfaces 
gesture characterized set geometric dynamic attributes 
attributes linear discriminant classifier constructed weights learned set training examples 
method developed exclusively gesture interfaces applicable sketches sensitive drawing direction 
landay myers interactive sketching tool called silk allows designers quickly sketch user interface transform fully operational system 
designer sketches silk recognizer adapted rubine method matches pen strokes symbols representing various user interface components returns interpretation 
recognizer limited single stroke shapes drawn certain preferred orientations 
method handles multi stroke shapes drawn orientation 
hong landay describe program called satin designed support creation pen applications 
satin consists set mechanisms manipulating handling interpreting viewing strokes set policies distinguish type gesture vs symbol input stroke number beautification techniques organize clean sketches 
system employs rubine algorithm primary recognition engine limited single stroke objects 

distinction central design process usually discernable static image mechanism 
rely buttons located mouse stylus distinguish type stroke 
described experimental system called sim sketch designed enable sketch interaction simulink software package 
addresses key technical challenges sketch understanding 
recognition objects implied user pen strokes 
developed domain independent multi stroke trainable symbol recognizer 
advantage recognizer traditional ones learn new definitions single prototype examples 
second challenge parsing identifying distinct symbols continuous stream pen strokes 
developed multi level parsing scheme allows users continuously sketch needing indicate symbol ends new begins 
parser uses contextual knowledge improve accuracy reduce recognition times 
currently process conducting formal user studies test improve system 
users tested interface highly favorable opinions 
users easy straightforward difficulty lcd tablet feared resting hand display break 
preliminary results indicated sound parsing recognition algorithm arrow recognition improved accommodate wider variety users 
minor issue time users quickly adept system 

alvarado davis 
resolving ambiguities create natural sketch interface 
ijcai 

jain 
modified hausdorff distance object matching 
th international conference pattern recognition pages jerusalem israel 

new association coefficient molecular dissimilarity 
second joint sheffield conference sheffield england 
fonseca jorge 
cali online recognizer calligraphic interfaces 
aaai spring symposium sketch understanding aaai technical report ss pages 
hong landay 
satin toolkit informal ink applications 
acm uist user interfaces software technology pages san diego ca 
landay myers 
sketching interfaces human interface design 
ieee computer 

pen speech recognition user interface mobile multimedia terminals 
ph thesis university california berkeley 
rubine 
specifying gestures example 
computer graphics 
rucklidge 
efficient visual recognition hausdorff distance 
number lecture notes computer science 
springer verlag berlin 

note binary template matching 
pattern recognition 
