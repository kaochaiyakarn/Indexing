generating lyndon brackets basis th homogeneous component free lie algebra sawada ruskey may known lyndon words length construct basis th homogeneous component free lie algebra 
develop algorithm generates standard bracketing lyndon words length constructing basis th homogeneous component free lie algebra 
algorithm runs linear amortized time time basis element 
necklace lexicographically smallest element equivalence class strings rotation 
lyndon word aperiodic necklace 
denote set ary lyndon words length number elements witt formula jl djn department computer science university sydney australia 
research supported nserc partial support czech ga cr iti project ln 
department mathematics university victoria canada 
research supported nserc 
department computer science university victoria canada 
research supported nserc 
lyndon brackets standard factorization lyndon word jwj denoted pair lyndon words lm maximal length non empty 
proposition factorization exists 
standard factorization lyndon words recursively mapped standard bracketing function jwj 
lyndon word called lyndon bracket example bracketing results applied illustrated 
reutenauer demonstrate set standard bracketings lyndon words basis th homogeneous component free lie algebra alphabet size knowledge free lie algebras required scope helps motivate results 
completeness give de nition similar 
commutative ring unit 
lie algebra algebra product satis es identities property known jacobi identity 
associative algebra product xy yx turns module lie algebra rl free associative algebra generated alphabet set nite linear combinations words multiplication addition de ned naturally 
fact wn wn set linear combinations words length wn called th homogeneous component 
smallest subalgebra containing called free lie algebra denoted 
denote nth homogeneous component ln ln discuss applications numerical algorithms computations free lie algebras 
lyndon words nely homogeneous computations number alphabet symbol xed free lie algebras including computation non standard left bracketing 
know algorithms producing standard lyndon bracketing 
na implementation de nitions gives algorithm running time bracketing improve bracketing integrating computation bracketing table fast algorithm generating lyndon words 
algorithm incorporated combinatorial object server www theory csc uvic ca cos necklace section 
generating lyndon words subsection brie describe algorithm generating lyndon words runs constant amortized time 
algorithm section generate lyndon words standard bracketing 
comprehensive description algorithm analysis see 
procedure lyndon local print lyndon fa lyndon algorithm generating lyndon words pre necklace pre necklace 
general approach algorithm generating lyndon words generate length pre necklaces 
pre necklace generated stored array position character 
assume 
pseudocode algorithm shown 
initial call lyndon recursive call appends character pre necklace get new pre necklace 
recursive call lyndon length current pre necklace length longest lyndon pre pre necklace long length current pre necklace call lyndon recursive call value updating values process 
exceeds resulting pre necklace lyndon word exactly generating lyndon brackets section develop algorithm generating length lyndon brackets alphabet size equivalently basis th homogeneous component free lie algebra 
lyndon words generated constant amortized time algorithm lyndon problem generating words respective bracketing previously fast solution 
na approach generating strings generate lyndon word length test proper right factor starting max procedure print print split print split print function print brackets lyndon word length lyndon word 
process repeated recursively factors factor length reached 
verifying factor lyndon word computed linear time duval algorithm factoring string lyndon words theorem 
worst case test performed proper right factor 
done recursively factor total running time generate lyndon bracket lyndon word 
signi cant improvement na algorithm observation 
longest proper right factor known lyndon factor bracketing lyndon word determined linear time recursive function displayed 
function lyndon word generated stored array lyndon word value split starting position longest proper right factor 
observe split de ned example split values lyndon word displayed 
gure value represents row number value represents column number value ranges entry split determines starting point longest proper right factor original lyndon word standard factorization 
observe value split de ned recursively values split lyndon word recurrence relation 
split 
lyndon word split 
key obtaining value split determine lyndon factors embedded lyndon word 
done modifying algorithm lyndon 
algorithm parameter maintains length longest lyndon pre 
obtain lyndon factors longest lyndon pre maintained strings 
value stored ectively parameter replaced global string values 
pn string starting pre necklace assigned value maintains length longest lyndon pre starting note value maintains value old parameter values 
values split determined associated recurrence string 
lyndon word function shown result applying modi cations algorithm lyndon 
initial call values initialized 
updating values 
split takes linear time 
function takes linear time 
algorithm lyndon generating lyndon words runs constant amortized time obtain theorem 
procedure local array println downto split split split algorithm generating lyndon brackets theorem algorithm generating ary lyndon brackets length runs amortized time 
ideas developed algorithm determine lyndon bracket length lyndon word time 
done computing split values lyndon word function 
finely homogeneous computations free lie algebras discrete mathematics theoretical computer science 
cattell ruskey sawada serra fast algorithms generate necklaces unlabeled necklaces irreducible polynomials gf journal algorithms vol 



duval factoring words ordered alphabet journal algorithms 
combinatorics words cambridge university press 
kass computations free lie algebra philosophical transactions royal society london series 
reutenauer free lie algebras clarendon press oxford 

