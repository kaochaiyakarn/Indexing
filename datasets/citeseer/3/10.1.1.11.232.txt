equix search query language xml sara cohen yaron kogan werner nutt yehoshua sagiv alexander equix search language xml combines power querying simplicity searching 
requirements languages discussed shown equix meets necessary criteria 
graph syntax formal concrete syntax equix queries 
addition semantics de ned evaluation algorithm 
evaluation algorithm polynomial combined complexity 
equix combines pattern matching quanti cation logical expressions query data meta data xml documents 
result query equix set xml documents 
dtd describing result documents derived automatically query 
widespread world wide web rise plethora simple query processors commonly called search engines 
search engines query database semi structured data html pages 
currently search engines query meta data content pages 
data queried 
example search engine nd pages containing word villain 
dicult obtain pages villain appears context character wild west movie 
xml pages nding way web 
increasingly important able query data meta data content pages web 
propose language querying searching web lls void 
search engines viewed simple query processors 
query language search engines restricted 
traditional database query languages sql newly proposed languages xql rls xml ql dff blp richer query language search engines 
limited expressiveness search engines appears advantage context web 
internet users familiar database concepts nd hard formulate sql queries 
comparison comes search engines experience proven novice internet users easily ask queries search engine 
true inherent simplicity search engine query languages 
consequently apparent disadvantage search engine languages really advantage comes querying web 
imperative rst understand requirements query language web attempting design language 
believe web gives rise new concept query languages search languages 
design criteria search languages 
institute computer science hebrew university jerusalem israel 
department computing electrical engineering heriot watt university edinburgh eh 
department computer science leuven celestijnenlaan heverlee belgium 
name implies search language language search data 
di erentiate terms search query roughly speaking search imprecise process user guesses content document requires 
querying precise process user speci es exactly information seeking 
de ne language searching querying capabilities 
call language allows searching querying search language 
call query written search language search query query result search result similarly call query processor search language search processor analyzing popular search engines de ne set criteria guide design search language processor 
criteria 

format results search result search query set documents pages sections documents satisfy query 
general searching user simply interested nding information 
search query need perform restructuring documents compute results 
simpli es formulation search query format result need speci ed 

pattern matching search language allow level pattern matching data meta data 
clearly pattern matching data convenient way specifying search requirements 
pattern matching meta data allows user formulate search query knowing exact structure document 
context searching user aware exact structure document seeking 

quanti cation search languages currently implemented web allow user specify quanti cations search queries 
example search query wild west semantics search engines web requests documents word wild appears exists word west appear exists 
ability specify quanti cations extended allow quanti cations querying meta data 

logical expressions search engines allow user specify logical expressions search languages conjunctions disjunctions conditions 
extended enable user logical expressions querying meta data 

iterative searching ability result search query generally large 
times result may contain hundreds thousands documents 
users generally wish sift documents order nd information require 
useful feature search processor allow previous results 
enables users search desired information iteratively information 

polynomial time database search queries computed large constantly growing 
desirable search query computable polynomial time combined complexity query database part input 
designing search language additional requirement dicult de ne scienti cally 
search language easy 
nal criterion 

simplicity search language simple 
able formulate queries easily queries formulated intuitively understandable 
de nition requirements search language interesting 
speci language equix ful lls requirements 
experience equix search queries intuitively understandable 
believe equix satis es additional language requirement simplicity 
equix unique combines polynomial query evaluation combined complexity powerful querying abilities 
equix quanti cation negation 
regular expressions data xml document 
extension allow aggregation data limited class regular expressions metadata 
searching querying performed equix language 
equix simpli es querying process automatically generating format result corresponding dtd 
extends previous 
section data model xml documents 
concrete syntax equix queries described section 
section de ne semantics equix section polynomial algorithm evaluating equix queries 
procedure computing result dtd section 
section extensions language section conclude 
proofs theorems appendix data model de ne data model querying xml documents 
rst assume xml document dtd 
section relax assumption 
term element refer particular occurrence element document 
term element name refer name element may appear times document 
similarly attribute refer particular occurrence attribute attribute name refer name 
times blur distinction terms meaning clear context 
introduce necessary notation 
directed tree set nodes pair de nes tree structure 
say edge incident incident note tree edge incident node 
assume trees nite 
root directed tree node node reachable denote rooted directed tree triple 
xml document contains data atomic values meta data elements attributes 
relationships data meta data meta data meta data re ected document nesting 
represent xml document directed tree labeling function 
data meta data document correspond nodes tree appropriate labels 
nodes corresponding meta data complex nodes nodes corresponding data atomic nodes 
relationships document represented edges tree 
fashion xml document represented parse tree 
note id idref attributes represent additional relationships values 
considering relationships document may longer represented tree 
sequel utilize id idref attributes answer search queries 
general parsed xml document need rooted tree 
xml document gives rise rooted tree said rooted element corresponds root tree called root element 
xml document rooted create rooted document adding new element document placing opening tag document closing tag document 
new element id id required role cdata required star idref required dtd describing movie information root element new document 
little ort adjust dtd original document create new dtd new document conform 
assume loss generality xml documents database rooted 
give formal de nition xml document 
assume nite set atoms nite set labels 
de nition xml document xml document pair rooted directed tree labeling function associates complex node value atomic node value assume dtd designated element name called root element name dtd 
consider dtd root element name say document root strictly conforms 
document conforms usual way 
function assigns label root 
dtd root element name describes information movies 
xml document containing movie information depicted 
document strictly conforms dtd resented 
note nodes numbered 
numbering convenient part data model 
catalog pair dtd set xml documents strictly conforms database set catalogs 
note similarity de nition relational model database set tuples conforming relation schemes 
data model natural useful characteristics 
assumption xml document conforms dtd implies documents partially known structure 
display knowledge bene user 
task nding information database require preliminary step querying database discover structure 
note xml document sequence characters 
properly model ordering elements document ordering function children node introduced 
simplicity exposition chose omit 
role star movie descr title character star role secrets wild west movie 
jack actor name id movie descr title character character actor name id sam lone cowboy role star role star wild exciting 
wild west cowboy character cowboy movie descr title character star role villain wild west 
takes place villain xml document search query syntax section concrete syntax equix search queries 
search query written concrete syntax concrete query search query written syntax query concrete query syntax concrete syntax described informally part graphical user interface currently implemented equix 
intuitively query example documents appear output 
formulating equix query user specify documents nd 
specify constraints data appear documents 
call constraints content constraints 
specify constraints meta data structure documents 
call constraints structural constraints 
addition user specify quanti cation constraints constrain data meta data appear resulting documents determining content structural constraints applied document 
user formulates query interactively 
user chooses catalog 
documents searched queried 
rst minimal query displayed 
minimal query root element name displayed 
minimal query looks similar empty form querying search engine see 
user add content constraints lling form add structural constraints expanding elements displayed 
element expanded attributes subelements de ned displayed 
user add content constraints elements attributes 
user specify quanti cation applied element attribute quanti cation constraints 
exists exists written user friendly fashion 
addition user choose elements query appear output 
expanded concrete query depicted 
query formulated exploring dtd section 
retrieves title description wild west movies minimal query nds documents containing phrase wild west star villain 
intuitively answering query part process 
search wild west movies 
phrase wild west may appear description movie 
example may appear title movie description 
intuitively similar search search engine 

query movies nd play villain 
condition exact 
speci es exactly phrases appear contains quanti cation constraint 
conceptually similar traditional database query 
query syntax syntax equix show concrete query translated query 
boolean function associates sequence alpha numeric symbols truth value string matching function 
assume nite set string matching functions closed complement function member assume function computable polynomial time 
function wild west contains words wild west de ne query 
de nition query query rooted directed tree augmented constraining functions output set denoted labeling function associates node label content function associates node string matching function query nds titles descriptions movies isn villain operator function associates node logical operator quanti cation function associates edge quanti er set projected nodes nodes appear result 
consider node say node 
say node 
similarly consider edge say existential edge 
universal edge 
give intuitive explanation meaning query 
formal semantics section 
evaluating query attempt match nodes document nodes query 
order document node nx match query node nq function hold data nx addition nq node node require child nq matched child nx nx matched nq child nx matched child nq edge satis ed nx roughly speaking order universal edge existential edge satis ed nx children child nx label matched note concrete query user quanti ers nodes implicitly nodes 
query quanti ers may nodes may nodes nodes 
creating user interface language concrete query language generally intuitive user 
query language simplify discussion semantics query evaluation 
note languages equivalent expressive power 
address problem translating concrete query query 
process straightforward 
tree structure query determined structure concrete query 
labeling function determined labels element attribute names appearing concrete query 
set determined nodes marked output user 
translating quanti cation constraints slightly complicated 
rst step augment edge query appropriate quanti er determined user 
associate node operator content constraint speci ed user 
note empty content constraint concrete query corresponds boolean function 
propagate negation query 
negation propagated node node node node node string matching function associated node replaced complement 
similarly negation propagated existential edge universal edge edge universal edge fashion derive tree edge associated node associated 
functions determined process described 
concrete query represented query 
string matching functions speci ed italics corresponding nodes 
black nodes output nodes 
sequel speci ed term query refer query 
movie character actor role star false true true true descr title wild west true villain query concrete query 
output nodes colored black 
recall search language requirements section 
postulated search language necessary user specify format result criterion 
equix de ning set user speci es information wants result include explicitly detail format appear 
suggested important pattern matching quanti cation logical expressions constraining data meta data criterion 
data speci ed content function meta data pattern structure matched speci ed quanti cation speci ed logical operators speci ed result equix query set xml documents 
section show dtd result documents computed 
results possible equix criterion 
section show equix queries evaluated polynomial time equix meets criterion 
search query semantics describing semantics query relational database language sql datalog term matching 
result evaluating query tuples match schemas mentioned query satisfy constraints 
describe semantics equix query similar fashion 
rst de ne node document matches node query 
consider document query suppose labeling function labeling function say node nx matches node nq 
denote parent node 
de ne matching document query 
de nition matching xml document nodes nx root query tree nodes nq root matching function nq nx hold 
root matching fr 
node matching nx nq nx matches nq 
connectivity nx nq nx root 
note condition requires root document matched root query condition ensures matching nodes label condition requires matchings tree structure 
de ne matching document query satisfying 
rst auxiliary de nitions 
consider xml document tx nx ex 
consider node nx tx di erentiate textual content data contained node nx structural content meta data 
de ning textual content node take id idref values consideration 
say child nx ex say indirect child nx nx attribute type idref value attribute type id denote textual content node nx de ned follows nx atomic node concatenation content children indirect children 
demonstrate textual content node example 
recall xml document depicted 
textual content node villain jack 
note includes value jack node indirect child node 
discuss quanti cation constraint satis ed 
consider document query matching nx node edge say nx satis es respect holds note xml document may cyclic result id idref attributes 
take nite concatenation child account 
addition order concatenation taken ability di erentiate data originated di erent nodes may ect satis ability string matching function 
technical problem taken consideration implementation adding dividing symbol data 
elaborate point 
existential edge child nx matches 
universal edge children nx matches 
de ne satisfying matching document query 
de nition satisfying matching xml document query tree 
matching say satisfying matching nodes nq nodes nx nq conditions hold 
nq leaf nx satis es string matching condition nq 
leaf nq node nx satis es edge incident nq respect nq node nx satis es edges incident nq respect 
condition implies leaves satisfy content constraints conditions imply satis es quanti cation constraints structural constraints satis ed existence matching 
example recall query document 
satisfying matchings document query speci ed table 
additional matchings shown 
query node movie descr title character role star actor note satisfying matching matches node movie node query universal quanti cation edge connecting movie character satis ed 
satisfying matchings document query 
matchings document query de ne union obvious way 
formally query node nq nq may exponential number satisfying matchings document query 
note proposition holds 
proposition union matchings xml document query 
set satisfying matchings union satisfying matchings satisfying matching 
formally proof 
sucient show union satisfying matchings satisfying matching 
suppose root root rst show matching 
easy see root document matched root label fr fr fr consider nx nq document node nx query node nq nx nx 
case follows nx matches nq similarly nx root easily follows 
matching 
similar fashion easy see satisfying matching 
follows satis ability checked node separately satis ability follows directly satis ability say document satis es query exists satisfying matching specify output evaluating query single xml document 
result query set documents derived evaluating query document queried catalog document matched dtd query derived 
intuitively result evaluating query document subtree document required criterion 
subtree contains nodes types 
document nodes corresponding output query nodes appear resulting subtree 
addition include ancestors descendants nodes 
ancestors ensure result tree structure projection original document 
recall textual content document contained atomic nodes document tree 
result include descendants insure textual content returned 
document query processing viewed process nodes document tree part output 
consider document tx nx ex query projected nodes set satisfying matchings output evaluating query document document de ned projecting nx set nr anc desc de ned nx nx nodes corresponding projected nodes anc nx nx ancestor ancestors nodes desc nx nx descendant descendants nodes call nr output set respect result applying query document depicted 
note values descr title grouped movie 
follows naturally structure original document 
cowboy movie descr title movie descr title movie 
secrets wild west wild west 
takes place lone result document query evaluation recall query de ned choosing catalog exploring dtd 
consider query generated dtd catalog 
result evaluating database set documents generated evaluating document algorithm evaluating query document 
may exponential number matchings query document 
concrete queries contain quanti cation negation 
appear source complexity 
computing output query document computationally expensive 
roughly speaking query evaluation case analogous evaluating rst order query written variables 
dynamic programming clr fact derive algorithm runs polynomial time query considered part input combined complexity 
equix meets search language requirement having polynomial evaluation time criterion 
polynomial procedure computes output document query 
document query procedure query evaluate computes output set nr note value document node nx computed preprocessing step polynomial time 
query evaluate uses procedure matches shown 
query node nq document node nx procedure matches checks possible nx nq matching subtrees nq nx note path sequence element names path root query anc desc set ancestors descendants note nq query nodes nx document nodes 
denote size query document nodes respectively 
array match array array size boolean values 
observe order nodes descending depth 
ensures matches match array called array match array updated children nq nx procedure query evaluate explicitly create matchings 
theorem holds 
theorem correctness query evaluate document query algorithm query evaluate computes output set appendix prove theorem 
shown procedure query evaluate runs polynomial time combined complexity 
jdj size data document size ignoring meta data 
formally jdj jt upper bound runtime computing string matching constraint string size recall polynomial algorithm query evaluate input document tx nx ex query tree tq nq eq output nr nx document nodes initialize match array false queue nq ordered descending depth isempty queue nq dequeue queue nx nx path path match array matches nx match array nr queue nq ordered ascending depth isempty queue nq dequeue queue nx nx match array match array false match array nq nr nr anc nx desc return nr evaluation equix query theorem polynomial complexity document query algorithm query evaluate runs time 

jn 
jdj 
proof 
initialization stage sorting queue done jn 
rst loop runs times iteration calls procedure matches runs time jdj 
initialization queue done jn 
second loop runs time 
algorithm query evaluate runs time jn jn jdj equal jn jdj required 
creating result dtd section described process evaluating query database 
query evaluation generates set documents 
query formed chosen dtd called originating dtd documents strictly conforming originating dtd queried 
order allow iterative querying results dtd resulting documents de ned 
query possible result document conform dtd dr say dr result dtd section procedure query computes polynomial time result dtd show equix ful lls search language requirement ability perform criterion 
procedure matches match array input query node nq document node nx array match array output true nx may nq matching subtrees nx nq false tc nq terminal node return tc mq set children nq mq mq mx set children mx nx mx mq mq existential edge status mx mx match array status mx mx match array nq node return tc mq mq status return tc mq mq status satisfaction node procedure dtd set element de nitions attribute list de nitions 
element de nition form element name de ned content de nition 
attribute list de nition form element name de nitions attributes set element names de ned dtd element name set denoted consider query formulated dtd say element name descendant element name may nested element document conforming formally descendant appears content de nition descendant element name appears content de nition say ancestor descendant note element name may appear document resulting evaluating node additionally may appear output ancestor descendant element meets condition previous sentence 
query compute linear time element name set result dtd dr order compute result dtd query compute content de nitions attribute list de nitions elements result dtd take attribute list de nitions elements de ned originating dtd change attributes type implied 
note root element name originating dtd easy see designated root element name dr algorithm computes content de nition element intuitively elements appear result query removed original dtd order form result dtd 
addition elements appear result documents query constraints satis ed 
possible appearance elements may taken account formulating dr algorithm create content de nition uses procedure order simplify content de nition creates 
result dtd created computing content de nitions adding attribute list de nitions 
note algorithm dtd desc true descendant dtd addition anc true nx ancestor node algorithm create content de nition input element query nodes nq edges eq projected nodes originating dtd content de nition output content de nition result dtd 
dtd desc nq 
anc elements nq path path nq 
eq anc replace occurrences replace occurrences return simplify 
content de nition generation algorithm theorem correctness dtd creation query originating dtd document 
suppose result evaluating xml document strictly conforms result dtd formed process described 
addition computation result dtd performed time 
proof 
rst prove correctness 
consider speci occurence document node nr element name appearing result document 
clearly element name appear result document content de nition result dtd 
content de nition disjunction content de nitions 
sucient show de nitions disjunction satis ed respect children nr possible causes occurence nr result document 
matching nr nq output node nq query 
output node nq query label algorithm take original de nition disjuncts new de nition note case nr children appear result 
children nr satisfy de nition result dtd 
procedure simplify input content de nition output simpli ed content de nition change apply rules subexpressions 








return empty return de nition simplifying algorithm 
node nr descendant node matched output query node case hold 
case proved manner previous case 

node nr matched query node nq ancestor output node cases hold 
note possible nr children document appear result 
speci cally child nr element name appear result query node path root nq child labeled ancestor output node 
easily follows de nition output query 
content de nition create nq elements replaced empty element appear output 
elements optional addition symbol 
clearly content de nition de ned nq satis ed children nr algorithm correct 
algorithm create content de nition called jdj time di erent element name algorithm create content de nition goes nodes query label node content de nition created size jdj 
amortizing cost creation query nodes derive result dtd created time jdj 
note follows theorem result dtd polynomial size original dtd query 
compactness result dtd process simpler entails exploring result dtd 
theorem resulting documents conform result dtd 
question arises precisely result dtd describes resulting documents 
order answer question de ne partial order dtds pv 
dtd denote set xml documents strictly conform conf 
dtds say tighter denoted conf conf 
say strictly tighter denoted conf conf 
intuitively desirable nd result dtd dr tight possible restriction possible result documents strictly conform dr algorithm necessarily nd tightest possible result dtd 
words algorithm may create result dtd dr exists dtd resulting documents strictly conform dr dr tightest possible result dtd call dr minimal result dtd minimal result dtd may unique 
comprehensive discussion see pv 
proposition query dtd minimal result dtd exponential size original dtd 
proposition exponential result dtd query created originating dtd minimal result dtd size jdj 
proof 
consider dtd root element suppose contains element de nition query root children suppose assume nodes nodes edges existential edges 
suppose addition fn maps node arbitrary condition 
conclude element names appear result document 
element names appear order 
minimal result dtd consider 
di erent orderings elements proving claim 
observe exponential blowup original dtd undesirable reasons 
creating dtd intractable 
second result dtd exponential size dicult user previous results 
algorithm creating result dtds returns convenient dtd minimal 
extending equix queries equix extended ways yield powerful language 
section extensions equix language 
extensions add additional querying ability equix 
extending equix search language requirements met 
matter opinion equix ful lls criterion requiring simplicity 
extensions suitable expert users 
adding aggregation functions constraints extend equix language allow computing aggregation functions veri cation aggregation constraints 
call new language equix agg extend query formalism allow aggregation 
aggregation function min max sum 
atomic aggregation constraint form aggregation function constant value 
aggregation constraint possibly empty conjunction atomic aggregation constraints 
equix agg query tuple equix augmented functions aggregation specifying function associates node possibly empty set aggregation functions reader recall order document nodes de nes order result document nodes order query nodes uence result 
need exponential size dtd hinges fact 
aggregation constraint function associates node aggregation constraint 
node nq aggregation specifying functions similarly aggregation constraint functions applied nx nq 
note min max functions applied argument domain ordered 
similarly aggregation functions sum avg applied sets numbers 
way enforce typing dtd possible xml schema con 
function applied argument meet requirement result unde ned 
function adds computed aggregation values output 
similar placing aggregation function select clause sql query 
function constrain query 
similar having clause sql query 
order aggregation function sql query include groupby clause 
clause speci es variables grouping performed computing result 
simplify querying process require user specify group variables 
equix agg uses simple heuristic rule determine grouping variables 
suppose node nq lowest node nq conditions hold ancestor node note lowest node nq textual content aggregate values may combined 
equix agg groups computing aggregation functions nq similar fashion equix agg performs grouping order compute aggregation constraints 
choice grouping variables natural takes advantage tree structure query suggests polynomial evaluation algorithm 
easy see adding aggregation functions constraints ect polynomiality evaluation algorithm 
algorithm creating result dtd slightly adapted order take consideration aggregation values retrieved 
equix agg meets search language requirements 
querying ontologies regular expressions equix user chooses catalog queries documents chosen catalog 
possible user query documents conforming di erent dtds containing information subject 
equix reg ability user 
equix reg useful information integration 
ontology denoted set terms meanings known 
note ontology implemented xml namespaces 
say document described element attribute names appear formulating query user chooses ontology terms describes subject matter interested querying 
documents described chosen ontology queried 
query tree equix reg tuple equix 
equix reg function set nodes equix reg query interpreted di erent fashion equix query 
edge implicitly labeled symbol 
intuitively edge query corresponds sequence edges document 
adapt de nition satisfaction edge section re ect change 
consider document query matching nx node edge say nx satis es respect holds existential edge descendent nx matches 
universal edge descendents nx matches 
note change de nition replace words child children descendent descendents 
straightforward fashion modify query evaluation algorithm re ect new semantics 
new algorithm remains polynomial combined complexity 
note longer possible create result dtd permit result dtd contain content de nitions type 
results possible diversity documents queried 
equix reg meets criterion ability results resulting documents described chosen ontology 
equix reg meets search language requirements 
design criteria search language 
de ned speci search language xml equix ful lls requirements 
user friendly concrete syntax formal syntax 
de ned evaluation algorithm equix queries polynomial combined complexity 
polynomial algorithm generates dtd result documents equix query 
believe equix enables user search information repository xml documents simple intuitive fashion 
language especially suitable context internet 
equix ability express complex queries negation quanti cation logical expressions 
extended equix allow aggregation limited regular expressions 
summarize equix unique powerful language polynomial language 
xml query languages proposed xml ql dff xql rls lorel gmw 
languages powerful querying ability 
ful ll search language requirements 
languages user perform restructuring result 
format result speci ed contradiction criterion 
furthermore xml ql xql limited ability express quanti cation constraints criterion 
importantly languages guarantee polynomial evaluation combined complexity criterion 
plan extend ability querying ontologies allow complex regular expressions equix 
xml documents represent data may strict schema 
addition search queries constitute guess content desired documents 
plan re ne equix ability deal incomplete information documents approximately satisfy query 
search engines perform important service user sorting results quality 
plan experimenting nd metric ordering results takes data meta data consideration 
world wide web grows increasingly dicult users nd desired information 
addition meta data web provides ability search query web 
enabling users formulate powerful queries simple fashion interesting challenging problem 
aqm abiteboul quass mchugh widom wiener 
lorel query language semistructured data 
international journal digital libraries 
bray hollander layman 
namespaces xml 
available www org tr rec xml names 
blp baru lud papakonstantinou vianu 
features requirements xml view de nition language lessons xml information mediation 
available www org ql ql pp html 
bray paoli sperberg mcqueen 
extensible markup language xml 
available www org tr rec xml 
bra bradley 
xml companion 
addison wesley 
bar yossef kogan nutt sagiv 
querying semantically tagged documents world wide web 
proc 
th international workshop generation information technologies systems israel july 
springer verlag 
cohen kogan nutt sagiv 
equix xml databases 
international workshop web databases webdb 
cohen kogan nutt sagiv 
combining power searching querying 
scheuermann editors th international conference cooperative information systems coopis volume lecture notes computer science pages israel september 
springer verlag 
clr cormen leiserson rivest 
algorithms 
mcgraw hill book 
con world wide web consortium 
xml schema 
available parts www org tr xmlschema www org tr xmlschema www org tr xmlschema 
dff deutsch fernandez florescu levy suciu 
xml ql query language xml 
available www org tr note xml ql 
gmw goldman mchugh widom 
semistructured data xml migrating lore data model query language 
international workshop web databases webdb 
gw goldman widom 
interactive query search semistructured databases 
international workshop web databases valencia spain 
nutt sagiv 
queries incomplete answers semistructured data 
proc 
th symposium principles database systems pages philadelphia pennsylvania usa june 
acm press 
lud papakonstantinou vianu 
view de nition dtd inference xml 
post icdt workshop query processing semistructured data non standard data formats 
pv papakonstantinou 
semistructured data mediators document type de nitions 
proceedings th international conference data engineering 
ieee computer society press 
rls robie lapp schach 
xml query language xql 
available www org ql ql pp xql html 
correctness query evaluate section prove correctness algorithm query evaluate 
rst prove necessary lemmas 
lemma nx node document nq node query exists matching nx nq path path 
proof 
suppose nx nq 
show induction depth nq path path 
suppose labeling function labeling function case suppose nq root condition de nition holds 
condition de nition nx root clearly claim holds 
case suppose nq depth condition de nition holds 
addition see condition de nition 
note depth 
induction hypothesis path path 
claim follows 
auxiliary de nition 
de ne height query node nq denoted nq nq nq leaf node jn child nq show algorithm implicitly de nes satisfying matching nodes returned corresponding output nodes ancestors descendents 
de ne function nq nx way nx match array true note consider values match array evaluation query evaluate 
call retrieval function query evaluate lemma retrieval function satisfying matching document query retrieval function query evaluate satisfying matching proof 
show matching meets conditions de nition 
roots match node path time function matches called root query root document 
value fr 
easy see query evaluate returns 
hold fr node matching nx matches called nq nx nx nq path nx matches nq connectivity match array hold match array assigned value false 
clearly connectivity requirement matching holds 
show satisfying matching see de nition 
suppose nx document node nx query node nq note implies matches returned value true applied nq nx prove induction height nq appropriate condition holds 
consider cases 
suppose nq 
nq leaf hold required 
suppose nq nq node 
procedure matches returned value true applied nq nx hold 
condition holds 

time application matches nq nx child mq nq child mx nx match array mx value true 
note follows mx matches mq value match array mx changed false evaluation query evaluate match array true 
mx mq 
case condition de nition holds required 
suppose nq nq node 
omit proof similar previous case 
satisfying matching required 
say matching contains matching nq query nodes nq show retrieval function contains satisfying matchings 
lemma retrieval function containment document query retrieval function query evaluate suppose satisfying matching contains 
proof 
suppose satisfying matching 
show induction height nq nq 
rst consider values assigned match array rst pass bottom pass algorithm 
suppose nq 
suppose nx 
lemma path path 
matches called nx nq condition holds 
match array assigned value true 
suppose nq nq node 
suppose nx 
lemma path path 
matches called nx nq follows hold 
value true 
matches returns true 

child mq nq child mx nx mx matches mq mx mq 
note mq nq 
induction hypothesis value match array mx rst pass algorithm true 
matches returns true called nq nx suppose nq nq node 
omit proof similar previous case 
easy see follows connectivity nx nq value match array changed false 
contained required 
prove theorem required 
theorem correctness query evaluate document query algorithm query evaluate retrieves output set proof 
document query 
show document node nx returned query evaluate nx output set suppose nx output set satisfying matching output node nq nx nq nx ancestor descendent node nq 
retrieval function query evaluate lemma contained clearly nx returned query evaluate 
suppose nx returned query evaluate 
retrieval function query evaluate output node nq nx nx ancestor descendent node 
lemma satisfying matching nx output set 
