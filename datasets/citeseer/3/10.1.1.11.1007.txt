overqos overlay architecture enhancing internet qos lakshminarayanan subramanian ion stoica hari balakrishnan randy katz university california berkeley massachusetts institute technology randy cs berkeley edu hari nms lcs mit edu describes design implementation experimental evaluation overqos overlay architecture enhancing best effort service today internet 
controlled loss virtual link clvl abstraction bound loss rate observed traffic aggregate overqos provide variety services including smoothing packet losses prioritizing packets aggregate statistical loss bandwidth guarantees 
demonstrate usefulness overqos sample applications 
overqos improve signal quality multimedia streams protecting important packets expense important ones 
second popular multi player game overqos avoid frame drops prevent hosts getting disconnected presence loss rates high 
wide area overlay testbed hosts show overqos simultaneously provide statistical loss guarantees coupled bandwidth guarantees ranging kbps mbps international links broadband hosts overqos incurs low bandwidth overhead typically achieve target loss rate increase delay bounded roundtrip time overlay path 
past decade efforts provide qos internet 
notably intserv diffserv service architectures proposed offer large array services ranging flow delay guarantees aggregate guarantees priority services 
despite efforts today internet continues provide best effort service 
main reasons requirement proposals network elements source destination implement qos mechanisms 
inherent difficulty changing ip infrastructure coupled natural lack incentives isps coordinate deployment rendered requirement infeasible ultimately hurt adoption intserv diffserv 
trying achieve traditional qos guarantees ones offered intserv diffserv ask question meaningful qos enhancements provided internet requiring support ip routers 
answer question turn attention overlay networks alternative introducing new functionality cumbersome deploy underlying ip infrastructure requires information hard obtain ip level 
examples successful overlay networks include application layer multicast web content distribution networks resilient overlay networks :10.1.1.161.2760
propose overqos overlay qos architecture enhancing internet qos 
key building block overqos controlled loss virtual link clvl abstraction 
clvl provides statistical loss guarantees traffic aggregate overlay nodes face varying network conditions 
addition enables overlay nodes control bandwidth loss allocations individual flows clvl 
overqos provide spectrum service guarantees offered intserv provide useful qos enhancements applications :10.1.1.27.14
examples enhancements smoothing losses bursty network losses negative impact applications multi player games 
overqos reduce eliminate loss bursts smoothing packet losses time 
packet prioritization overqos allow applications express importance packets stream protect important packets expense important ones 
example overqos protect frames mpeg stream frames frames 
statistical bandwidth loss guarantees statistical loss guarantees overqos provide statistical bandwidth guarantees small fraction traffic 
understand tradeoffs limitations overqos architecture design implementation perform extensive evaluation 
widearea testbed diverse nodes spanning europe asia show overqos simultaneously provide statistical loss guarantees order bandwidth guarantees ranging kbps mbps 
addition simultaneously running multiple competing long lived tcps lossy access network show overqos fair cross traffic exist competing overqos links 
additionally demonstrate multiplayer games streaming media benefit overqos 
multi player game example user overqos interactively play game highly lossy environments experiencing loss rate high observing skips getting disconnected 
streaming media example demonstrate overqos preferentially drop recover specific packets enhance quality stream consuming additional bandwidth 
overqos achieves simply redistributing losses packets stream 
increase delay bounded rtt 
rest organized follows 
section describe basic overqos architecture describe construction section 
section provide details overqos implementation 
section show real world applications benefit overqos 
section evaluate performance overqos wide area internet 
related section section 
overqos architecture illustrates overqos network overlay nodes spanning different routing domains flows routed network 
assumptions placement overlay nodes internet 
assume placement overlay nodes pre specified 
assume path top overlay network fixed attempt enhance qos path presence varying levels network congestion 
existing approaches ron determine overlay path pair hosts 
remainder term virtual link refer ip path overlay nodes bundle refer stream application data packets carried virtual link 
bundle typically includes packets multiple transport layer flows different sources destinations 
constraints requirements design overlay qos challenging virtual link ip path overqos routers ip ip ip ip overqos routers overqos system architecture 
overqos nodes different communicate virtual links underlying ip paths 

node placement cross traffic overlay nodes usually span different routing domains directly connected congested links 
avoid losses delays virtual links 
additionally losses incurred due cross traffic time varying hard predict 

fairness overlays offer qos expense hurting cross traffic 
overlay traffic aggregate level congestion sensitive fair share 
standard metric determining fair share tcp friendliness :10.1.1.143.9137

stability multiple overlay networks independently offering qos virtual links overlapping congested physical links underlying network able exist 
address challenges propose solution builds design principles bundle loss control overlay nodes bound loss rate experienced bundle virtual link presence time varying cross traffic 
propose virtual link clvl abstraction achieve loss bound characterize service received bundle 
resource management bundle overlay node control loss bandwidth allocations flow application bundle 
design principles enable overqos provide range useful services internet applications 
example services packet prioritization smoothing losses eliminate bursts losses spreading losses time statistical bandwidth loss guarantees service typically offered small maximum sending rate virtual link clvl available aggregate bandwidth clvl target loss rate statistical bound clvl loss rate clvl redundancy factor cmin minimum statistical bandwidth guarantee probability meeting bandwidth guarantee cmin table overqos notation table fraction bundle traffic 
elaborate design principles 
bundle loss control basic building block enabling overqos achieve loss control bundle controlled loss virtual link clvl abstraction 
clvl abstraction provides bound loss rate seen bundle certain period time regardless underlying network loss rate varies time 
overlays achieve bound recovering network losses combination forward error correction fec packet retransmissions form arq 
setting arbitrarily low value close clvl provides notion near loss free pipe virtual link 
clvl isolates losses experienced bundle loss rate variations underlying ip network path 
biggest challenge constructing clvl achieve loss bound presence time varying cross traffic network conditions 
additionally amount bandwidth overhead minimized 
section hybrid fec arq solution minimizes amount redundancy required provide clvl abstraction value total traffic overlay nodes consists traffic bundle redundancy traffic required achieve target loss rate fairness stability constraints limits maximum rate inclusive redundancy traffic overqos transmit virtual link 
denote traffic bound time section elaborates computed 
denote fraction redundancy traffic required overqos achieve available bandwidth flows bundle 
service provided clvl bundle long arrival rate bundle entry node exceed packet loss rate virtual link exceed high probability 
resource management bundle clvl abstraction provides bundle available bandwidth varies time guarantees cumulative distribution sweden korea netherlands intel sf mazu boston modem sf available bandwidth kbps cumulative distribution separate measured jan transmitting packets virtual link bytes payload 
intersection point cdf curves represent values cmin links 
entire bundle target loss rate traffic arrival rate bundle larger extra traffic dropped entry overlay node 
overlay node employ qos scheduling discipline distribute losses flows bundle 
particular model packet associated priority overlay node priorities preferentially drop packets allocate bandwidth different flows 
general available bandwidth clvl bundle varies time possible statistically bound minimum bandwidth bundle offer bandwidth guarantees fraction overqos traffic 
small probability value capture variations available bandwidth clvl distribution determine value cmin probability cmin represents probability meeting bandwidth guarantee cmin 
corresponding cmin significant fraction overqos provide statistical bandwidth guarantees allocating bandwidth flows clvl long total allocated bandwidth cmin 
table variables expressing properties clvl 
practice notice value cmin overlay links reasonably high implying overqos provide meaningful statistical bandwidth guarantees applications 
shows distribution different overlay links traversing international links broadband networks sweden korea mazu boston cable modem sf netherlands intel sf 
values cmin links provide guarantee kbps kbps kbps respectively 
statistical bandwidth guarantees provided subset overqos flows potentially expense flows 
flows requiring guarantees higher priority flows overqos node 
remaining bandwidth cmin distributed flows 
picture overqos network comprises collection overlay links link associated clvl abstraction 
individual different overqos links stitched generate path flow may routed guaranteed specific amount qos 
demonstrate overlay network useful enhancing internet address issue route flows top overqos network 
rely overlay routing service ron specify path overqos network 
path overqos determines level qos provided path 
application overqos interface legacy application intending overqos required perform functionalities 
needs tunnel packets overlay network overqos proxy 
proxy node functionality reside overqos node path host application 
second proxy responsible signaling application specific requirements overqos 
example overqos offers service smoothing losses packet prioritization proxy required mark priority packets flows 
current implementation overqos proxy application specific infers priorities packets application flow modifying application 
case statistical loss bandwidth guarantees application required clearly signal qos requirements loss bandwidth overqos proxy 
particular service proxy additionally responsible undergoing admission control test determine overqos satisfy application qos requirements 
signaling aspects admission control issue route flows overqos scope 
discussion recovery vs overlay clvl alternative applying clvl abstraction overlay network apply loss control flow basis 
arguments loss control fec apply loss control far expensive applying aggregate level 
example order provide loss guarantee kbps stream game console traffic ip telephony stream bursty channel average loss rate say minimum amount fec required high kbps 
flows aggregated overlay node flow fec requirement drop lower kbps 
second better distribution overlay nodes expect overlay links smaller rtts rtts 
overlay level recovery arq better delay characteristics recovery 
aggregation flows overlay provides ability trade resources different flows packets flow fundamentally necessary provide better qos properties 
delay guarantees overlay networks control variations queuing delays virtual links offer delay assurances 
hand overlay networks route congestion 
techniques embedded overlay improve delay characteristics path 
provisioning measurement studies shown internet backbones provisioned low levels congestion 
questions basic need internet qos 
contend necessarily permanent feature internet reflection big disparity poor connectivity edges backbone capacity 
homes enterprises connected faster multi megabit higher links optical fibers expect parts internet small isps congested 
trend evident countries japan isps offer mbps broadband connections homes 
addition isps provide aggregate qos networks mpls technologies 
believe overlays right platform translating aggregate intradomain qos meaningful qos guarantees 
controlled loss virtual link clvl section describe realization clvl abstraction 
particular describe compute maximum sending rate overqos link achieve target loss rate flows bundle architecture overqos node 
estimating overqos tunes maximum output rate depending network congestion order fair cross traffic achieve stability presence competing overqos traffic 
way achieving set tcp pipe abstraction provides bandwidth times throughput single tcp connection virtual link 
set equal number flows bundle 
emulate behavior tcp connections 
uses tcp congestion control mechanism increment decrement parameters 
may react quickly congestion may provide smooth variations sending rate 
obtain smoother variations may prefer choose alternate operating point lesser value altering net steady state throughput determined tcp equation :10.1.1.143.9137
set corresponding value calculated tcp equation equal 
evaluations standard parameters 
alternatively equation approach emulate behavior tfrc connections 
achieving target loss rate describe hybrid solution uses combination fec arq construct clvl 
recall clvl abstraction aims bound bundle loss rate small value burstiness cross traffic usually unpredictable define statistical bound average loss rate observed larger period time order seconds 
fec vs arq trade main distinction fec arq trade bandwidth overhead packet recovery time 
fec help quickly recovering packet losses bandwidth overhead high especially virtual links experiencing bursty losses 
hand arq solution high packet recovery time rt overlay nodes large 
strike balance approaches hybrid approach uses best features mechanisms 
briefly describe construct clvl purely arq fec combine approaches obtain hybrid clvl construction 
arq clvl purely arq solution building easy construct 
reliable transmission packet repeatedly retransmitted sender receives acknowledgment receiver 
similarly achieve non zero target loss rate retransmit lost packet log times represents average loss rate interval want bound pure arq clvl unattractive uses multiple rtts achieve bound fec clvl fec approach divide time windows period tr window unit encoding decoding 
consider erasure code reed solomon characterized number packets arriving entry node window represents number redundant packets added 
denote redundancy factor fec problem reduces determining minimum redundancy factor target loss rate achieved 
hybrid approach fec arq outperforms fec cases skip description algorithm computing ideal value fec arq clvl due delay constraints loss recovery restrict number retransmissions 
divide packets windows add fec redundancy factor window round 
second round window non recoverable entry node retransmits lost packets redundancy factor 
need estimate parameters 
denote pdf loss rate value measured encoding decoding window 
fec offers loss protection window fraction packets lost window amount redundancy added window 
redundancy factor expected packet loss rate recovering fec pf dp expected packet loss rate rounds hybrid approach equal 
target loss rate require window fec overhead round expected number retransmitted packets expected overhead second round 
expected bandwidth overhead yields optimization problem target loss rate determine redundancy factors minimizes expected overhead subject target loss constraint loss distributions occur practice optimal solution problem 
solution implies better fec round fec protect retransmitted packets 
fec arq clvl reduces pure arq clvl 
happens avg average loss rate virtual link 
fec arq clvl adaptive sudden variations loss characteristics applying minimal amount fec retransmitted packets window 
arrival bundle entry overlay node exit overlay node traffic controlled virtual link estimate management loss virtual loss delay module link module loss recovery packet loss info rtt components entry exit overqos nodes simplistic assumption calculation 
distribution model fraction losses second round 
number packets retransmitted window may smaller original window distribution may apply 
overcome problem estimate table loss distributions different time scales apply appropriate distribution number retransmitted packets 
node architecture captures interactions various components entry exit overlay nodes 
entry node consists modules implements clvl abstraction performs aggregate traffic management 
module communicates exit overqos node estimate link loss rate delay 
uses information adapt data traffic conform clvl abstraction 
second module allocates capacity clvl competing traffic aggregates flows 
exit overqos node responsible measuring loss delay characteristics reconstructing lost packets necessary 
clvl abstraction uses arq loss recovery exit node propagates individual packet loss information entry node 
entry node exerts control traffic bundle levels granularity bundle flow basis bundle 
levels entry node control sending rate loss rate 
clvl management module entry node determines sending rate bundle emulate aggregate behavior virtual tcps 
determines level redundancy required achieve certain target loss rate loss characteristics determined window 
resulting available bandwidth estimated 
traffic management module entry node distributes available bandwidth individual flows 
net input traffic larger entry node drops extra traffic exercises control distributing losses flows 
overqos implementation implemented overqos node architecture lines code 
communication overlay nodes uses udp socket interface 
loss recovery fec software library built rizzo 
implementation works linux freebsd platforms 
illustrates structure single overqos node path 
overqos node listens udp socket arrival bundle tunnels traffic exit node udp stream 
clvl encoder decoder modules implement clvl abstraction top overlay link adding necessary level redundancy recover packet losses decoder provides loss feedback encoder computing optimal redundancy factor 
traffic management module implements flow packet resource management 
different qos schedulers buffer management schemes priority scheduling smoothing losses performed module 
rate estimator computes clvl parameters link estimator provides feedback transmitting overqos node virtual link characteristics comprising loss feedback computing loss distribution rt round trip time 
overlay path stitched cascaded provide services 
cascaded introduce artificial losses overlay node available bandwidth incoming links larger available bandwidth outgoing links 
order avoid artificial packet losses intermediary node overlay path overqos node uses bmax signal maximum sending rate predecessor 
illustrated 
implementation issues briefly discuss salient implementation issues application dependent proxy important aspect interfacing legacy applications application proxy signal application requirements overqos network 
case mpeg streaming application proxy interprets packets stream marks priority recovery packet 
smoothing losses packets stream associated priority 
obtaining bandwidth guarantees proxy needs signaling mechanism rsvp reserve resources overlay path :10.1.1.27.14
choosing parameters parameters rt need estimated determining sending rate estimated instantaneous number flows set average number flows observed larger period time certain flows short lifetime 
reduce variations sending rate induced flows generate minimum previous overlay node arrival bundle packet loss feedback clvl decoder link estimator link characteristics avg rtt max packet losses arrival times single overqos node flow classifier max number packets calculating leverage techniques equation congestion control estimating rt overqos nodes 
choose reasonably low value target loss rate experiments 
fec arq choose packet recovery time tr rt startup phase periods usage send additional traffic estimate virtual link parameters 
phase overqos nodes need determine initial value virtual link 
tcp slow start phase estimate initial value slow start phase overqos loss recovery 
fec implementation implementation perform fec encoding decoding redundancy factor high mbps pentium iii mhz running linux kernel 
operate small window sizes reed solomon coding bottleneck 
example virtual link rt ms window size bounded sending rates mbps 
coding techniques tornado codes faster may provide level error correction small window sizes :10.1.1.35.5754
sample applications section describe real applications leverage qos enhancements offered overqos 
application shows streaming media application improve signal quality multimedia streams overqos preferentially recover important packets expense important ones additional network bandwidth 
second application popular online multiplayer game user base players 
application show overqos smooth losses enable players play game environments 
traffic management qos scheduler loss clvl encoder rate estimator virtual link characteristics output bundle loss feedback udp data ports udp control ports structure single overqos node path 
streaming media applications overlay node streaming media applications typically sensitive network losses delay delay variations masked buffer client 
overqos ideal platform providing different forms enhancements applications 
forms enhancements 
quality streaming audio enhanced converting bursty losses smooth losses 

preferentially recovering packets mpeg stream improve quality video stream 
delay variations primary issue applications overqos primarily uses arq clvl applications 
streaming audio video overqos consume additional bandwidth 
achieves performing operation important packet lost network overqos retransmits packet drops lesser important packet compensate retransmission 
process application observes loss rate normal internet experience occasional increase delay bounded rt overlay path 
qos enhancements streaming media streaming audio bursty errors streaming audio application cause interruptions audio stream cause gaps audio stream periods time easily perceptible human ear 
consider case streams wav mp audio file host rtp 
audio stream overqos smooth bursty losses spread bursty loss time 
mpeg streaming mpeg video stream consists group pictures gop comprising frames frames 
frames important represent start video sequence gop frames frames frames 
frame typically larger packet frame sent multiple consecutive packets 
packets corresponding frame occur succession 
single bursty network loss eliminate frame completely cause mpeg player disconnect gop reconstructed 
frame frame gop useless corresponding frame 
overqos associate packets belonging higher priority recover packets expense frame packets 
additionally bursty dropping frame packets affects quality gop mpeg stream smoothly dropping packets affect quality multiple 
type frame packet embedded mpeg video specific header payload packet 
evaluation network setup helix server version streaming media server streaming media client 
streaming media requests issued real time streaming protocol rtsp stream packets udp 
built client proxy server proxy interpret streaming media packets associate different priorities 
proxies tunnel media stream client overlay path replay sample bursty loss traces collected different overlay links 
purpose illustration consider loss traces mazu boston korea average loss rate intel san francisco sweden average loss trace 
trace minutes long 
emulate behavior overqos consider overqos nodes act packet forwarders 
length media stream shorter length trace repeat analysis different portions trace 
streaming audio demonstrate effect smooth dropping streaming audio concatenated speech samples provided international telecommunication union itu produce test samples length sec sec respectively 
perceptual evaluation speech quality metric evaluate quality voice 
measured score received stream comparison original stream 
score considered ideal implying received audio stream degraded quality 
table compares scores streaming audio overqos benchmark speech samples 
observe smoothing losses help increasing quality audio stream 
overqos measure applicable pure speech samples arbitrary audio streams 
analysis limited standardized samples 
sample sample mazu korea overqos mazu korea overqos intel overqos intel overqos table scores speech samples overqos mazu korea intel loss traces 
table shows standard deviation scores different loss traces 
psnr median psnr mazu korea overqos mazu korea overqos intel overqos intel overqos table table shows median values psnr distribution received stream 
value indicates minimum psnr value observed images stream 
able increase score output stream roughly 
demonstrate reasonable improvement audio quality experimented artificial bursty loss patterns maintaining average loss rate traces measured scores 
average loss rate scores vary variety bursty loss patterns 
cases smooth dropping performs better bursty drops 
find smoothing losses overqos uniformly outperforms different types bursty network losses 
mpeg streaming peak signal noise ratio psnr standard metric measure quality video images stream 
mpeg stream received client yuv mpeg utility convert stream stream images 
image compute psnr value received image comparison video image original mpeg stream 
quantify quality received mpeg stream distribution psnr values individual images 
consider sample mpeg stream seconds analysis 
table compares median values psnr values received mpeg stream overqos loss samples 
observations 
case entire lost due burst stopped playing video stream entire gop reconstructed 
occurred loss traces burst coincided packets frame 
overqos able recover burst stream progress 
second overqos able improve median psnr values stream preferentially dropping packets burst compared quality stream overqos 
illustrate psnr value mainly show overqos improves quality stream average case minimum quality stream 
summarize overqos improve quality media stream consuming additional network resources 
application team multi player game online players grouped competing teams team assigned specific goal 
environment game pre loaded clients exchange game state network small udp packets 
bursty losses adverse effect progress game 
initiation phase client generates important control packets lost render client unable connect server 
second burst packet losses middle game cause skips cause player get disconnected 
skip arise game state messages received immediately congestion provides context jump game 
third multiplayer game problems observed player affect players game 
example disconnection single player halt progress game 
overqos alleviate problem bursty losses performing operations 
recover bursty network losses fec arq clvl abstraction overlay links path 

smoothly drop data packets equivalent size burst overlay node 

identify control packets packet size drop packets 
recovering lost packets smoothly dropping equivalent amount data packets overlay node overqos achieves objectives overqos provides client critical updates continue progress game 
example udp packets generated merely contain coordinates different players 
overqos deliver fraction packets client able reconstruct movement position players 
overqos uses minimal amount additional bandwidth support application 
additional bandwidth compensated overqos fec portion redundant traffic 
wide area experiments realistic overlay links show additional bandwidth negligible refer section 
application observes loss rate normal internet experience skips game 
event bursty loss snapshot game loss rate 
received sequence number overqos overqos time sequence number plot illustrating smoothing packet losses overqos 
application experiences additional delay equal loss recovery time clvl 
reasonable distribution overlay nodes expect recovery time smaller recovery 
proxy reverse engineering traffic characteristics built client server proxy interpret packets 
chose proxy implementation reasons client server codes proprietary modify code 
second simple way capturing different application specific traffic tunneling overqos 
example scenario consider cable modem loss trace high loss rate compare effect losses game scenarios overqos overqos 
illustrates snapshot game overqos converts bursty losses smooth losses client observe skips 
better illustrates smoothing losses overqos 
case overqos observed short periods time network losses high followed periods congestion 
overqos node compensates addi tional bandwidth consumed loss recovery smoothly dropping packets non lossy periods 
additional observations 
smoothing losses works bursty loss periods relatively short compensating 
burst periods longer periods time overqos able smoothly drop packets absence non lossy periods 
second scenario clvl abstraction unable achieve target loss rate due congestion periods high loss rates 
loss reduction provided overqos bursty periods sufficient game progress 
evaluation section answer questions relating practical viability overqos wide area internet implementation results measurements widearea network comprising diverse nodes 
additionally ns simulations answer specific questions wide area evaluation may able address 
specific questions address 
overqos provide statistical bandwidth guarantees loss assurances flows 
particular loss guarantees clvl abstraction provide loss guarantees virtual link 
bandwidth guarantees bandwidth guarantees realizable virtual link 
overqos cost bandwidth overhead delay cost overqos 

fairness stability overqos fair cross traffic stable presence multiple competing overqos networks 
evaluation methodology evaluation methodology fold wide area experiments evaluate overqos performs practice simulations get better understanding overqos performance wider range network conditions 
wide area evaluation testbed resources available large wide area test beds ron planetlab construct network nodes diverse locations university nodes europe site korea canada nodes access networks cable dsl 
main goal choosing nodes test overqos wide area links believe lossy 
reason avoided nodes universities connected internet known losses :10.1.1.161.2760
simulation environment built functionalities overqos architecture top ns simulator background average fec arq achieved traffic loss loss tcps sack mbps self similar web sessions simulations achieved loss rate clvl types background traffic 
set bottleneck link mbps red queue 
version 
specified simulations simple topology consisting single congested link mbps vary background traffic realize different types traffic loss patterns 
commonly bursty traffic models background traffic long lived tcp connections self similar traffic web traffic 
addition publicly available loss traces test performance clvl 
statistical loss guarantees section answer question network conditions overqos achieve clvl abstraction overlay link 
scenarios described section choose target loss rate small value 
compute available bandwidth tcp value 
simulations test fec arq clvl construction achieve target loss rate variety bursty loss models 
key simulations cases meet target loss rate despite bursty losses average loss rate varying 
furthermore true just means tails distribution 
shows achieved loss rate fec arq clvl different background traffic scenarios 
addition recovery algorithm achieves target loss irrespective ip routers virtual link fifo red queues 
results demonstrate clvl algorithm robust range dynamic traffic conditions works underlying loss rate times larger target loss rate wide area evaluation specific choice overlay nodes virtual links overlay testbed lossy 
link characterized lossy loss rate link 
link ran clvl abstraction time ranges varying minutes hour 
order measure system stress sending rate determined tcp averaged kbps cable modems dsl lines mbps nodes 
high sending rate run experiments continued periods time 
additionally bandwidth ex mean cmin variation kbps kbps kbps kbps kbps variation cmin function fec arq clvl achieved target loss rate virtual links 
fec arq algorithm failed achieve target loss rate overlay links 
closer investigation causes short outages bi modal loss distributions 
short outage refers period time packets transmitted virtual link lost 
testbed noticed non recoverable losses links pdi unibo media 
non recoverable losses lasted short periods time 
short outages occur due variety problems routing changes link resets 
loss distribution said bi modal losses experienced window zero high 
links bursty losses bi modal distribution 
fec arq clvl recover large portion window packets bimodal loss distribution long burst affects fec window arq transmissions 
experiments mazu cba experienced bimodal loss distribution 
statistical bandwidth guarantees section answer question bandwidth guarantees realizable virtual link 
recall statistical bandwidth guarantee achievable virtual link cmin cmin represents instantaneous bandwidth virtual link represents probability guarantee met 
rate estimator module updates window packets rtt sec feedback information received overqos hop 
pairs nodes hosts testbed monitored unique virtual links period working days 
figures show distribution cmin 
observations 
value cmin greater kbps links 
links predominantly connected broadband hosts 
second cases cmin average throughput virtual link 
specific cases cmin large average throughput 
median value resource ron planetlab want misuse 
cumulative distribution fec fec arq avg 
loss overhead overhead characteristics wide area testbed compares overhead fec arq fec average loss rate links 
cmin respectively 
shows variation cmin function 
increases notice maximum value cmin increases minimum value decreases 
minimum decreases notice self induced losses links causing drastically reduce sending rate reducing cmin 
stability cmin underlying distribution stable estimated value cmin roughly constant 
dynamic conditions need continuously re estimate cmin flows need bandwidth reservations 
value estimate cmin samples example rt msec calculate cmin samples representing history seconds 
scenario flows bandwidth requirements minutes 
shows variation function time separate virtual links europe north america 
observations value cmin stable compared variations available bandwidth links cmin deviate mean value 
second line algorithm estimating cmin past history reasonable approach 
set cmin actual value estimated cmin cases virtual links 
overqos cost overhead characteristics shows cumulative distribution overhead fec arq clvl overlay links performed measurements 
link ran tcp pipe measured overhead required achieve target loss rate cumulative distribution guarantee guarantee throughput bandwidth kbps cumulative distribution guarantee guarantee min average min kbps nortel unibo intel uk mazu greece nc time minutes cumulative distribution bandwidth guarantee cmin separate measurements unique overlay links measured different days jan th jan th 
run single overlay link generated packets 
measurements taken weak days working hours 
distribution fraction cmin links 
variation cmin different virtual links europe north america 
cmin measured line estimate maximum previous history minutes time collect samples cmin 
cumulative distribution ordering links ordering links ordering links hop hop ordering links delay msec cascaded clvl scenario fec arq ordering overqos network better delay characteristics hop hop ordering 

notice overhead fec arq close average loss rate overlay links 
difference amount fec second round protect retransmitted packets 
comparison pure fec clvl construction far higher bandwidth 
primarily due network loss characteristics background traffic longer tail loss rate distribution higher amount fec required recover losses 
delay characteristics section answers question delay cost overqos 
potential criticism algorithm increases delay observed packets 
reasons increase delay 
note legitimate concern overqos packets flows sharing links path 
packets window lost recovery process cause additional delays 
second overqos required support sequence delivery packets loss packet increase delay packets 
implementation showed additional delay incurred node due processing overhead negligible 
overqos support different models packet delivery packet ordering ordering overqos node path hop hop ordering 
consider simple scenario overlay path traverses multiple overlay nodes link having rtt msec experiencing frequent losses 
shows distribution additional delay incurred due loss recovery packet delivery models 
consider path consisting overlay links 
observations 
packet recovery better delay characteristics hop hop delay characteristics 
second additional delay incurred adding new overqos nodes path limited 
third additional delay dependent loss rate 
loss rate dictates frequently loss recovery process invoked 
fairness stability tcp pipe abstraction built inherently tcp friendly aggregate cross traffic overqos traffic 
illustrates fact real world experiment link university node node access network 
overqos bundles compete shared bottleneck different scenarios cross traffic cross traffic consisting long lived tcps wget downloading content parallel 
bandwidth kbps tcp tcp tcp time sec independent overqos links compete bandwidth shared bottleneck established university node node access network oregon 
graph readable value averaged minute 
observations 
overqos bundles exist background traffic 
second ratio throughputs overqos bundles preserved scenarios 
related classify related qos architectures overlay techniques loss recovery mechanisms 
qos architectures overqos differs previously proposed qos architectures require qos mechanisms routers network 
intserv requires ip router implement flow admission control control path flow classification buffer management scheduling data path :10.1.1.27.14
similarly diffserv requires edge routers perform aggregate classification buffer management scheduling core routers perform class operations 
overqos leverage service provided underlying network enhance services 
instance diffserv domain overqos may expedited forwarding premium service provide flow bandwidth delay guarantees 
addition overqos techniques proposed score architecture improve scalability having overqos node flow path maintain state 
address scalability problems providing toend services papers advocated idea endpoint measurement admission control 
host measures network characteristics path accepts flow flow requirements satisfied path 
overqos solutions assume routers implement mechanism isolate admission controlled traffic best effort traffic 
overlay techniques papers proposed overlay approaches deploying multicast improving routing functionality resilience ron :10.1.1.161.2760
systems motivated large part difficulty modifying ip layer terms deployment terms system robustness 
context qos edge edge congestion control proposal support limited range bandwidth services overlay framework requires modifications edge routers domain achieve functionality 
service overlay network proposal purchases bandwidth certain qos guarantees network domains slas provide qos guarantees 
architecture rely underlying domains meet specified qos requirements 
streaming audio video multimedia proxies offer services smoothing losses selective discard recovery packets 
overqos leverage techniques issues differentiate works overqos overqos apply qos enhancements network opposed streaming media flows overqos shaped part larger aggregate opposed treated separate flows 
loss recovery fec arq approaches investigated context packet audio video internet telephony 
fec constraints different applications recovering fraction packets may sufficient may able apply results directly setting 
classical coding mechanisms wireless networks potentially applied problem 
show possible overlay networks enhance internet qos support underlying ip network 
real world applications experiments wide area testbed demonstrate qos enhancements smoothing losses prioritization packets aggregate statistical loss bandwidth guarantees 
overqos able achieve enhancements little extra bandwidth overhead 
results suggest overqos viable architecture enhance internet qos remains done 
current solution assumes flows paths overqos level predetermined 
natural extension combine admission control path selection entry overqos node compute best path satisfies flow requirements admission time 
possibility ron find paths better performance characteristics recover network failures 
interesting problem determine optimal placement overqos nodes network 
intend address issues part 
acknowledgments anonymous reviewers shepherd jennifer rexford invaluable feedback helped substantially improving quality 
owe gratitude dave andersen tom anderson jon crowcroft scott shenker detailed technical feedback various stages 
nick feamster matthew caesar providing mpeg processing scripts students uc berkeley read earlier drafts provided invaluable feedback 

www counter strike net 
helix universal server basic version 
www 
real com 
itu perceptual evaluation speech quality 
www itu int rec recommendation asp type items lang parent re 
japanese broadband statistics 
www 
go jp whitepaper eng wp chapter pdf 
movie player linux www hu 
mpeg specification 
www 
org mpeg standards mpeg mpeg htm 
andersen balakrishnan kaashoek morris :10.1.1.161.2760
resilient overlay networks 
proc 
acm sosp oct 
blake black carlson davies wang weiss 
architecture differentiated services oct 
rfc 
bolot towsley 
adaptive error control internet telephony 
proc 
ieee infocom mar 
braden clark shenker :10.1.1.27.14
integrated services internet architecture overview june 
internet rfc 
breslau knightly shenker stoica zhang 
endpoint admission control architectural issues performance 
proc 
acm sigcomm sept 
chu rao seshan zhang 
enabling conferencing applications internet overlay multicast architecture 
proc 
acm sigcomm aug 
duan zhang hou 
service overlay networks sla qos bandwidth provisioning 
proc 
icnp nov 
karlsson 
admission control measurements 
proc 
ieee mar 
feldmann huang gilbert willinger 
dynamics ip traffic study role variability impact control 
proc 
acm sigcomm aug 
floyd handley padhye widmer 
congestion control unicast applications 
proc 
acm sigcomm aug 
tobagi diot 
provisioning ip backbone networks support latency sensitive traffic 
proc 
ieee infocom mar 
harrison ramakrishnan 
overlay bandwidth services basic framework edge closed loop building block jan 
preprint 
ipmon com 
jamin danzig shenker zhang 
measurement admission control algorithm integrated services packet networks 
proc 
sigcomm 
jannotti gifford johnson kaashoek toole 
overcast reliable multicasting overlay network 
proc 
usenix osdi oct 
lin costello 
error control coding fundamentals applications 
prentice hall feb 
luby mitzenmacher shokrollahi spielman :10.1.1.35.5754
practical loss resilient codes 
proc 
acm stoc 
nichols jacobson zhang 
approach service allocation internet nov 
internet draft 
ucb lbnl vint network simulator ns version 
www mash cs berkeley edu ns 
osborne simha 
traffic engineering mpls 
cisco press july 
padhye firoiu towsley kurose :10.1.1.143.9137
modeling tcp throughput simple model empirical validation 
proc 
acm sigcomm oct 
www planet lab org 
crowcroft 
weighted proportionally fair differentiated service tcp 
proc 
acm computer communications review 
rizzo 
info iet unipi luigi fec html 
rizzo vicisano 
rmdp fec reliable multicast protocol wireless environments 
mobile computing communications review 
resilient overlay networks 
nms lcs mit 
edu ron 
savage collins hoffman snell anderson 
effects internet path selection 
proc 
acm sigcomm aug 
sen rexford dey kurose towsley 
online smoothing variable bit rate streaming video 
ieee trans 
multimedia mar 
stoica zhang 
providing guaranteed services flow management 
proc 
acm sigcomm sept 
willinger taqqu sherman wilson 
self similarity high variability statistical analysis ethernet lan traffic source level 
proc 
acm sigcomm aug 
zhang aggarwal tsang 
efficient selective frame discard algorithms stored video delivery resource constrained networks 
proc 
ieee infocom 
zorzi 
performance fec arq bursty channels delay constraints 
proc 
vtc may 
