real time robust template matching fr ric michel cnrs umr universit blaise pascal re france univ fr popular methods extract useful informations image sequence template matching approach 
known method tracking certain feature target time comparison content image sample template 
article propose efficient robust template matching algorithm able track targets real time 
special attention paid occlusions handling illumination variations 
template matching major task numerous computer vision applications 
major categories approaches generally distinguished 
feature approaches uses local features points line segments edges regions 
techniques possible localize object current image predict feature positions subsequent ones motion model uncertainty model 
pose search techniques naturally sensitive occlusions local correspondences 
correspondences missing pose computable 
hand global template approaches take template 
strength methods lies ability treat complex templates patterns modeled local features 
robust extensively 
called sum square difference ssd usually consist minimizing difference template region image 
historically brute force search 
strategy impractical case transformations complex translations involve higher dimensional parameter spaces 
new efficient framework proposed 
tracking problem posed problem finding best squares sense set parameter values describing motion deformation target sequence 
case parameter variations written linear function difference image difference target image current image 
approach efficient motion easily deduced difference image 
cootes edwards taylor dynamically estimate parameters face appearance model model 
hager belhumeur include general framework object tracking planar affine motions :10.1.1.147.629
works approach projective transformations projective transformations highly non linear size parameter space 
article address problem tracking surfaces viewed projective transformations 
article special attention paid occlusions handling illumination variations 
propose efficient solution problem ssd tracking partially occluded planar surfaces 
article sections 
problem tracking templates occlusions posed principles proposed approach briefly 
section devoted detailed description proposed approach 
section experimental results 
template matching occlusion handling template tracking brightness value location image acquired time 
set image locations define target region 
vector brightness values target region 
refer template 
template tracked initial time 
points projections set points belonging object surface 
relative motion object camera induces changes position template image 
assume transformations perfectly modeled parametric motion model 
proposed general motion model allowing kind planar transformations 
article assume transformation applied planar surfaces homographies 
coordinates point object centered coordinate system projection image 
homographies rotations translations perspective projections written standard homogeneous coordinates formalism matrix product 
case assume written homogeneous coordinates 
matrix representing homography composition rotations translations 
set parameters included depending relative position surface camera 
parameters translation components euler angles case projection surfaces assuming camera calibrated parameters case homographies 
call motion parameter vector 
time template position known parametrized set image locations corresponding points surface target denoted projections time denoted 
assumptions tracking object time means compute ground truth value time supposed motion parameter vector target surface estimated minimizing squares function general formulation tracking authors 
bold fonts denote vectors matrices 
occlusion handling previous works equation minimized straightforward estimation brute force search optimization algorithms 
case occlusions handled introducing robust error function definition matching error huber function robust norms 
black jepson propose treat points outliers 
define binary outliers vector mask mask computed simple rule set depending value 
hand approaches minimize equation difference images 
case shown solution equation jacobian matrix respect case occlusion hager propose usual form irls :10.1.1.147.629
order formulate algorithm introduce inner iteration performed times time step 
introduce diagonal weighting matrix weights difference image 
inner iteration cycle consists performing estimation matrix step step refining motion estimation 
proposed approach previously approaches really faces actual problems induced occlusions 
irls robust norms interpretation difference ambiguous 
way know difference produced occlusion movement object 
ambiguity motion occlusion 
strong differences compared variance grey level values occlusions easily discarded 
hand weak differences produced shadows example interpreted motions 
experimentally observed numerous cases previous approaches failed 
handling occlusions easier feature bases approaches robust estimation concerns feature positions illumination 
geometric structure objects changed illumination case ambiguity occlusion motion 
strongly believe robust estimation applied positions local transformations illumination 
key idea article 
unfortunately directly applicable template approaches templates considered indivisible 
proposed idea build template representation includes original template plus sub templates obtained dividing parts quadtree scheme 
different levels representation include different templates 
illustrate representation case templates tracked 
means tracking efficient large number templates 
template representation contains original template plus sub templates obtained dividing original 
second tracker gives motion corresponding sub template 
case occlusions trackers provide erroneous motions 
local motions robustly combined order obtain global actual motion template 
task obvious largest sub templates tracked accuracy sensitive occlusions smallest sub templates produce accurate robust motion estimations 
want suppress ambiguity illumination motion way know tracker produces correct motion robustly combine set motions produced trackers 
tasks efficient sub template tracking robust motion estimation handle approach powerful template occluded motion estimation accurate fully constraints brought template case occlusion precision decrease proportionally amount occlusion case global motion computed motion smallest templates affected occlusions accurate 
section devoted description required tasks efficient tracking robust motion estimation 
robust efficient template matching efficient template matching learning stage see propose efficiently track templates sub templates 
template sub template tracked independently approach 
approach stages line learning stage tracking stage 
section describes learning stage 
learning stage linear relation linking motion illumination variations established 
stage assume motion computed difference initial position new position neighbourhood initial position 
see generalize position template 
key idea obtained straightforward efficient computation motion parameters writing denotes time successive images see detailed explanations 
see matrix obtained 
write previous equation written equation seen equation hyper planes number parameters transformation 
estimation matrix done method proposed 
robust tracking level assume know variation templates different trackers working independently described previous section 
tracker provides motion vector relatively initial template position 
set motion vectors want compute real motion robust way 
occlusion vectors case occlusion affected occlusion provide erroneous motion estimation 
keep mind variations variations initial position key idea suppose correct motion vectors concentrated unique area motion vector space erroneous ones disorganized effect occlusion tracker different 
propose see problem problem finding correct variation template pose vector variation template pose poses variations hypotheses furthermore fact different trackers accuracy taken account weight hypotheses 
practice uncertainty modeled gaussian models 
best pose variation vector best satisfies hypotheses computed exploring parameter space account gaussian contribution provided hypothesis 
best pose search done strategy 
modeling uncertainty learning stage equation allows compute estimation matrix tracker 
second time compute covariance matrix associated model 
covariance matrix tracker 
covariance matrix obtained notation defined previous section 
motion errors assumed normally distributed 
probability knowing 
dimensional parameter space dimensional normal probability density function covariance matrix purpose simplification rest represent features original feature space 
decompose covariance matrix orthogonal matrix eigenvectors diagonal matrix eigen values 
eigen values denoted projecting features eigenspace normal distribution model feature simple denotes difference projected eigenspace 
explained different covariance matrix tracker 
finding best variation 
tracking stage tracker provides motion hypothesis interpreted gaussian distribution motion parameter space 
best motion variation defined variation satisfying largest number trackers 
variation define justifications definition 
idea find best motion recursively exploring space possible motions 
recursive subdivision consists recursively splitting space subspaces alternating axes evaluating probability sub spaces exploring ones having highest probabilities 
process seen tree search 
root node corresponds initial box 
leaves smallest regions taken account 
proposed efficient way explore space 
strategy 
get small subset parameter space best satisfied equation 
tracking hyperplane approximation proposed scheme inefficient taken initial form 
direct computation matrix involves square minimization repeated new position template 
matrix depends current position orientation 
learning stage consists computing linear relation set grey level differences correction parameter variation 
relationship computed value known user selects image region valid values 
explain possible extend relation value recomputing matrix 
region defined set points local called region 
matrix changes coordinates region image 
time suppressed simplify notations 
user defines target region image defines set correspondences points region points image example corners rectangular region 
knowing set correspondences computation aligns region target defined image possible 
learning stage consists producing small random disturbances denote disturbances order simplify notations write suppose matrix 
disturbances produce change brightness set disturbances produced order obtain linear model giving training stage possible estimate motion knowing 
coordinates image transformation 
assuming invertible obtain 
knowing estimate compute displacement region expressed region 
displacement valid tracking stage prediction parameters known denoted tracking consists estimating notation time removed simplify notations 
computing predicted position template 
obtain disturbance produced parameters vector case location region transformed 
actual transformation turns 
introducing relation gives equation fundamental tracking gives transformation aligning region target current time knowing prediction local disturbance 
local disturbance initial value obtained mapping current image region computing difference equation gives allows compute main idea correct transformation region region acting parameters transform correction applying written approach possible track templates sub templates real time assuming templates include largest templates points smallest ones 
tracking occlusions 
left white rectangular area represent templates position provides tracker 
right representation transformation space 
probability density projected plane order represent transformations 
square area represents translation pixels 
planar motions occlusions 
images taken video sequence 
results tracking translation rotation scaling case planar translation planar rotation scale relation point coordinates region corresponding point image coordinates 
written matrix products homogeneous coordinates 
experiment levels represent template leading different trackers 
largest template points intermediate levels points smallest sub templates points 
learning stage take stage disturbances produced 
tracking sub template tracking robust estimation takes ms standard silicon graphics workstation 
provides illustration method 
template shown occlusions 
left white rectangular areas represent template positions provided tracker 
transformation space represented right 
probability density projected plane order represent transformations 
shown translations area pixels 
occlusion trackers provide exactly results inaccuracy smallest trackers 
trackers accurate depending patterns included various sub templates 
shows images taken video sequence 
illustrates ability algorithm handle partial occlusions real time 
tracking motions motions handle exactly way 
show images taken video sequence processed real time 
tracking motions occlusions 
images taken video sequence 
tracking motions illumination changes 
images taken video sequence 
tracking illumination variations illumination variations treated simpler way occlusions 
occlusions locally change local repartition grey levels values 
hand illumination changes easily compensated locally image 
directly grey levels values obtain compute value intensity small area 
previous equations substitute simple normalization gives reliable results case illumination variations case shadows 
fig 
shows images taken video sequence occlusions shadows illumination variations 
original efficient algorithm handling occlusions illumination variation ssd trackers 
robust norms directly intensity ambiguous impossible know intensity variation due target motions due occlusions 
approach consists representing template pyramid sub templates tracking independently sub pattern 
robust estimation local motions intensities suppressing ambiguities 
smallest sub templates provide inaccurate robust motions 
largest ones provide non robust accurate motions 
search optimal global motion computed recursive search motion space 
experimental results show technique efficient real time low cost robust occlusions illumination changes 
black jepson 
eigentracking robust matching tracking articulated objects view representation january 
cootes edwards taylor 
active appearance models 
proc 
european conference computer vision pages freiburg germany 
gleicher 
projective registration difference decomposition 
cvpr pages 
hager belhumeur :10.1.1.147.629
efficient region tracking parametric models geometry illumination 
ieee trans 
pattern analysis machine intelligence october 

solution simultaneous pose correspondence problem gaussian error model 
computer vision image understanding 

real time template matching 
computer vision pattern pages hawai december 

real time template matching 
proc 
ieee international conference computer vision pages vancouver canada july 
la cascia sclaroff athitsos 
fast reliable head tracking varying illumination approach registration textured mapped models 
pami april 
nguyen worring van den 
occlusion robust adaptive template tracking 
iccv pages 
zhang 
parameter estimation techniques tutorial application conic fitting 
image vision computing 

