user profiling component aid user ontologies bel barry smith ralf medical learning rd department medicine university leipzig leipzig germany institute formal ontology medical information science university leipzig leipzig germany follows contribution field user modeling adaptive teaching learning programs especially medical field 
outlines existing approaches problem extracting user information form exploited adaptive software 
focus initially called method allocates users classes adaptively reflecting characteristics physical data social background computer experience 
user classifications method ad hoc exploited adaptive system large number trials various kinds users 
argue remedy create database user ontologies taxonomies derived way enable associated software support variety different types users 
topic construction interactive software systems able recognize adjust needs particular users stage users beginners experts kobsa 
systems sort called adaptive systems developed number computer interactive programs facilitate individual learning patients diabetes nebel diseases 
program designed facilitate patients learning diabetes able adjust user current state knowledge 
practicability evaluated basis learning success diabetes patients nebel patients trial learned faster adaptive conventional instructional program obtained significantly better results 
provides evidence thesis instructional programs better able support learning conventional interactive instructional programs 
programs avoid conveying department philosophy university buffalo ny usa redundant information user able maximize quality user support terms content mode presentation 
generating user profiles individual observes world fashion individual user brings diverse needs expectations interaction software system 
determination requirements individual user important prerequisite efficient application tutorial system 
user classification needed serve basis adaptive system save analyze data pertaining user available information relevant program adaptation user successive stage kobsa wahlster wahlster 
data stored part form attribute value pairs represent user current state knowledge personal characteristics features preferences forth 
collection attribute value pairs constitutes user profile representation individual user user attributes competencies stage user reached interaction program 
addition systems needs general user classification terms user profiles organized interpreted 
users familiar system relevant content domain 
familiar 
initial dimensions variability user classification reflecting level technical competence need content related assistance 
types adaptive algorithms needed adaptive capability achieved variety methods algorithms analyze user data data basis making inferences appropriate system behavior 
range methods classified broadly stereotype rule mathematical statistical approaches 
clear exists variety procedures establishing user models user profiles 
mathematical procedures include application statistical probabilistic methods order generate assumptions users conditions uncertainty 
methods user characteristics drawing user stereotypes allow implement ontologies support user tributes detecting relevant stereotype detecting associated cluster user ontology 
method stereotypes interested especially common hitherto successful approach conceptual clustering illustrated lebowitz algorithm lebowitz 
rests method classes users constructed example physical characteristics social background computer experience represented called stereotype hierarchy 
adaptive methods employed initial stages system allocate users specific classes hierarchy way previously unknown characteristics users inferred basis assumption share characteristics users class 
algorithm information real world learned generalization examples ranked similarity way detailed stereotypes formed 
clustering methods allow new stereotypes created fly included continuously evolving stereotype hierarchy 
disadvantage method characteristic ought taken account 
characteristics significance relation incorporated hierarchy unnecessary specializations result 
control classification characteristics needed independent immediate products process 
disadvantage building stereotype hierarchy adaptive system come needed derivations number uses different kinds users 
stereotype hierarchy fails exploit systematic way fact user characteristics re appear class users 
user ontologies light problems propose new method creation user profiles construction central database resource user ontologies ready taxonomies different types users extracted en bloc 
ontologies constitute shared resource available engaged construction adaptive software 
time database constructed way new user ontologies added existing taxonomies user characteristics user types updated light actual experience users system developers 
approach advantage principles building ontology stated explicitly evaluated corrected basis successes failures ontology building different areas 
user ontologies method creating right supplement method 
method jump starting process hierarchy construction control quality results process 
term ontology refers software circles family methods structuring information establishment standardized taxonomies associated definitions theories 
common readings refers cal theory gives explicit account conceptualization gruber utilizing machinery description logic dl baader 
contemporary ontology carried auspices semantic web project dl ontological applications called support integration highly diverse information resources providing system annotating web documents terms standardized terminology hierarchies 
domains recruiting human resource development competency ontologies developed 
example semantic web services environment basis just time learning 
competency ontology rich semantic description competencies employee possess order participate specific activities business processes woelk 
term ontology course philosophical circles refers study nature organization reality guarino 
ontology philosophical sense attempts discover theories match domain reality examination smith 
focuses primarily preparation taxonomies types entities existing domains including types relations unify entities complex wholes different sorts 
ontology information systems sense normally begins conceptualizations developed human beings particular practical purposes seeks formalize conceptualizations ways implementable computer applications 
philosophical ontology contrast seeks theories reality prepared basis simplified models goal maximal descriptive adequacy world 
shall seek marry approaches developing realistic detailed user ontology exploring ways ontology exploited software systems drawing existing competency ontology domain 
multi categorial user ontology user ontology sense consist classification users features users categorized class linked associated information interests knowledge preferences 
adaptive software system position classify different types users keep track ways user characteristics change result experience system 
ontology needs keep track user parameters narrow sense parameters relating processes users involved especially processes system 
similar ontology papi public private information ims project 
papi determined user profiles meta dolog 
ims project ims learner information packaging information model specification described ims collection information learner producer learning content 
ims learner information package ims lip specification addresses interoperability internet learner information systems systems 
intention specification define set packages import data extract data ims compliant learner information server 
different approach adaptive software systems 
spirit philosophical uses term ontology develop highly general user ontology distinguishing dimensions classification correspond top level categories ontology basic formal ontology currently development leipzig smith 
types users 
characteristics users permanent independent experience software system interests ii 
attitudes iii 
personality iv 
skills knowledge vi 
abilities vii 
preferences variable change independently system example age disease state ii 
change experience system 
types user behavior behavior independent system including behavior influenced system behavior involving system types system keyboard actions legal illegal ii 
behavior involving system rejection 
contexts environments users contexts independent system contexts system envision general database ontologies addressing dimensions authors adaptive software medical domain domains contribute additional components evaluation criticism 
database ontologies serve forum working adaptive teaching learning software interact profit results gained 
existence unified database user ontologies possible avoid costly elaborate construction user ontologies adaptive systems 
mean categorize users specialized ways early stage program 
initiation process adaptive systems greatly simplified 
database user ontologies help development adaptive methods easily transferred domain 
possible coordinate adaptive methods exploiting fact different groups employ implemented ontology system 
routines handling different combinations parameters weighting user properties treatment unknown properties shared domains 
examples method user ontologies designed create framework maximal adaptivity 
users medical expert system eliot cardiac tutor eliot subdivided nurses assistants doctors content conveyed system case coordinated skill level needs corresponding user group 
form coarse classification users course effected users direct input interaction program 
array possible alternatives needs created advance ontology type envisaged 
detailed profiling specific user example level knowledge established comparisons effected question answer methods corresponding characteristics stored user ontology 
domain nutrition ontology establish classifications eating habits preferences specific sorts foods terms user assigned specific user type 
adaptation process give special indications order ensure avoidance specific sorts erroneous diet part patients specific types 
clearly single application domain medicine scope relevant user ontologies broad 
software application adaptation process principal procedure adaptation process user profiling 
working process follows universal principle observing user reasoning storing intervening user 
proposal advanced include ontology data pool sub component 
applications developed leipzig user profiling component includes modules different tasks process adaption 
module 
monitors users interaction system time needed specific tasks entries 
users interaction yields input value strategy definition module 
second decision module includes user ontology 
modules yield output value 
third strategy definition module compares information output values defined goals application 
system developer processes comparison values compiles adaptive interventions system presents user values 
done basis results comparison effected strategy definition taken user information derived decision module ontology database 
indicates adaptive system sends users actions user profiling component upc 
actions stored user profile module represents input values decision module user ontology 
user ontology compares input values stored taxonomies allocates cluster value output value 
implemented ontology software component upc 
decision module user drawn subsequently decision value allocated output value 
feedback values decision module user ontology compared adaptive strategies current situation user 
implemented ontology example data flow upc defined strategy show student low budget travel options 
module tells upc type user actions user selected 
comparison process proposes output value travel plans representation form user prefers 
user profiling component control types algorithms need developed adaptive methods way application user ontologies lead faster inferences 
means algorithms adjusted allow integration ontologies done way preserve flexibility system need expensive implementation changes order incorporate changes user ontology 
meet requirements developed new methodology call control types nebel form general framework combining plurality adaptive methods way advantages preserved ontologies incorporated 
example combine method neural networks way improve speed algorithm operation 
achieve new language developed describing conditions realized course interactive dialogues 
language includes facility control type functions way establish communication user profile entries 
result realizes goal adaptation rules form 
example illustrates ontology language control types representing simple dialogue source ontology interface def new ontology def um game count dialog form um id dialog english training situation game completed twice dialogue identifier displayed dialogue identifier displayed 
dialogue formatted relation ontology cluster associated nurses calling forth information differs associated say class doctors 
advantages method outlined include easy adaptability high speed operation automatic completion inferences yield new information automatic extendibility 
believe advantages outweigh disadvantage terms high implementation costs construction adaptive algorithms integrated user ontologies expected serve valuable tool system developers 
acknowledgments supported alexander von humboldt foundation auspices wolfgang paul program program german ministry education research 
kobsa kobsa 
und 
proceedings ki humboldt university berlin 

nebel 
nebel bl evaluation computer interactive diabetes education program designed train estimation energy contents foods 
pat educ elsevier 
nebel 
nebel 
implementation und evaluation eines diabetes auf der basis der mittels 
ki zeitschrift 
lj 

information und lernen mit multimedia und internet 

wahlster wahlster 
cooperative access systems generations computer systems 
amsterdam 
wahlster wahlster kobsa 
user models dialog systems 
springer berlin 
es 

course machine learning 
research institute symbolic computation 
strecker strecker ac 

nstliche und aus 
university 
lebowitz lebowitz 
concept learning rich input domain generalization memory boulay 
advances artificial intelligence ii 
elsevier science publishers 
gruber gruber 
ontology 
www ksl stanford edu kst ontology html 
baader baader 
description logic handbook 
cambridge cambridge university press 
guarino guarino giaretta 
ontologies knowledge bases terminological 
mars ed large knowledge bases 
amsterdam ios press 
smith smith 
ontology floridi ed blackwell guide philosophy information computers 
oxford blackwell 
smith smith 
basic formal ontology 
ontology buffalo edu 
eliot cr 
eliot ka 
williams bp 
woolf 
intelligent learning environment advanced cardiac life support 
proceedings amia annual fall symposium 
nebel 
nebel 
comparative analysis conventional adaptive computer interactive education programs 
patient education press 
woelk woelk 
learning semantic web services competency ontologies 
proceedings ed media denver 
dolog dolog nejdl 
integrating adaptive hypermedia techniques open rdf 
proceedings th international www conference budapest hungary acm 
ims ims global learning consortium ims learner information packaging information model specification final specification version 
www org profiles html 
