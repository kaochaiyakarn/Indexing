cooperating mobile agents dynamic network routing nelson minar kramer pattie maes mit media lab ames st cambridge ma usa nelson pattie media mit edu www media mit edu nelson research routes contemporary computer networks heterogeneous single network consists kinds processors communications channels 
networks inherently decentralized capability scattered system 
system design methodologies embrace acknowledge complexities 
new methods approaches required generation networks configured administered utilized full potentials 
research mit media laboratory building systems mobile software agents manage complex real world networks 
chapter describe strategy collection cooperating mobile agents solve routing problems dynamic peer peer networks 
information networks continue increase size complexity importance 
devices connected computer networks desktop computers cellular telephones web servers pagers television set top boxes smoke detectors 
connections proliferate network topologies necessarily dynamic 
devices may move place place maintain intermittent connections change relationships network peers fly 
networks flexible allow devices communicate variety ways variety substrates 
example physical links currently widespread include ethernet cellular radio short range infrared analog modem name 
problem configuring dynamic heterogeneous networks difficult levels 
researchers domain face hard problems packet routing service coordination infrastructure security 
cases conventional centralized approaches network management inappropriate unable serve large diverse mutable collections computers 
routing tables conventional network systems example usually generated centralized human mediated manner 
contrasting model dynamic wireless peer peer network routing tasks performed decentralized distributed fashion mobile software agents cooperate accumulate distribute connectivity information 
agents determine system topology exploring network store information nodes network 
agents stored information derive multi hop routes network 
study algorithms simulation example populations mobile agents manage networks 
nelson minar kramer pattie maes managing networks populations mobile agents importance decentralization believe complex networks require decentralized management structures 
aggregation control inherent centralized systems difficult networks scale upwards size 
centralized management tools depend definition restricting important decisions nodes 
special nodes performance bottlenecks required serve increasing numbers clients 
addition failure controlling nodes inability reason nodes communicate poses serious difficulties participants centrally managed networks 
similar reasons designing centralized architectures readily adapt changes network usage difficult designing scale 
intelligence centralized network resides small number specialized nodes devices network capable limited range behaviors 
asking devices limited hard wired behavior adjust response changing circumstances different back algorithm structure packets new way usually impossible 
fundamental incompatibility centralized design frameworks inherently distributed real world networks 
cellular telephone system serves example 
nodes cell phone network numerous mobile constantly changing service requirements 
topology connectivity local relationships nodes highly fluid 
current cellular networks ignore complexity possible communications managed static grid monolithic servers cell towers 
contemporary cellular systems highly centralized 
interesting dynamics cellular system revolve behavior individual telephones investment intelligence overhead systems concentrated cell tower infrastructure exterior phones 
result cellular systems offer limited range services remain expensive scale regards coverage area device density relatively poor bandwidth 
suggest different model network design decentralized approach managing networks 
centralized infrastructure managing connectivity propose populations cooperating mobile software agents maintain routing information dynamic networks 
approach push intelligence traditionally centralized controlling nodes network embed intelligence flexible adaptive software framework 
mobile agents mobile agents novel way building distributed software systems 
traditional distributed systems built stationary programs pass data back forth network 
mobile agents contrast programs move node node computation moves just attendant data 
mobile agents defined important properties 
agents encapsulate thread execution bundle code data 
agent runs independently self contained programmatic perspective preserves state moves network node 
strong mobility defined baumann 
agent move easily network 
underlying infrastructure provides language level primitive agent call move neighboring node 

agents small size 
cost associated hosting transporting agent agents designed minimal possible 
simple agents serve building blocks complex aggregate behavior 

agent able cooperate agents order perform complex dynamic tasks 
agents may read write shared block memory node facility coordinate agents executing node leave information subsequent visitors 

agent able identify resources specific node finds 
simulation chapter nodes differentiated neighbors agents information 
heterogeneous network certain nodes access particular kinds information absolute location derived global positioning system receiver agents leverage 
flexible systems small self directed mobile agents building blocks allows design network architecture flexible ways 
fundamentally distributed nature collections agents architecture scale upwards size quite gracefully 
second agent populations change time new usage contexts models accommodated 
system interaction mediated agents multiple network management strategies coexist evolve 
network size mobile agents serve simple distributed building blocks constructing systemlevel functionality 
possible theory design system small number simple agents interactions agents specified pattern interactions agents remains stable blocks kind added 
development design heuristics applicable mobile agent systems long term goal research 
specific rule thumb hypothesis system design emerged research explicit localization interaction networked system easier understand reduce eliminate performance bottlenecks common points failure 
example individual agents model simple self contained interaction restricted local nelson minar kramer pattie maes manipulation shared memory 
simplicity building blocks easy conceptualize systems large numbers agents network nodes 
analysis scalability main focus experiments chapter observed systems design restricted localized communications models comprehensible stable designed open sockets messages frameworks 
worth noting common way organizing large networked system partition hierarchies smaller sub networks 
contrast approach thought structuring communications large number limited overlapping spheres activity discrete partitions 
usage models difficult design conventional network adjusts changing usage patterns short time scales evolving needs circumstances long haul 
contrast mobile agent system reconfigured fly response new situations demands human intervention 
system level behavior incrementally altered varying size composition agent population adding new agents dynamically reinforce weaknesses balance priorities 
human managers adjust network agents adapt changing circumstances 
written agents self regulating dying spawning copies situation dictates 
specific sets agents delegated monitor aspects system altering mix agents population needed 
drastic revision capability patching security hole rolling new feature network accomplished flushing system flooding new population agents 
elaborate populations network agents dedicated maintaining routing connectivity information specialize distinct ways 
agents specialize regard usage patterns network 
example management agents enact economic incentives encourage certain traffic patterns 
specific agents dedicate maintaining low latency routes need disproportionate amount bandwidth 

specialized agents manage requirements specific areas network 
example certain part lan great deal video traffic deploy agents construct maintain high bandwidth connections 

agents adapt network infrastructure changing needs time 
example cost relatively dormant gateway reduced handles traffic 
times peak traffic population weighted complex low overhead routing agents harvest connectivity information environment explicitly constructing connections poor 

agents specialize behalf specific users 
individual pretty idea communications needs able carry collection agents optimized negotiate create personal connectivity 
network management examples suggest various management models integrate quite elegantly systems built mobile agents 
example applying simple economic metrics agent movement thinking information exchanges enable communications transactions provides decentralized framework particular kinds communication encouraged required restricted accounted accurately 
agent tools allow contextually specific decisions finite resources 
cost routing algorithms example davie understood way optimize multi hop traffic network 
metaphors proposed pheromone social insects schoonderwoerd bonabeau schoonderwoerd chapter book 
flexibility mobile agents architecture allow multiple models coexist messaging agents different needs route information different management agents owners messages accordingly owners various management ecologies 
cognitive tools systems design worth trying separate purely technical advantages system built mobile agents cognitive leverage mobile agents metaphor provide designers programmers 
certain attributes notably extreme run time flexibility mobile code architectures stand advances systems capabilities 
attributes described arguments systems designers systems design 
networks complex finding abstractions allow think useful ways important 
mobile agents discrete pieces code clearly defined functionality privileges appropriate powerful tool thinking specifying writing programs networks computers 
mobile agents approach thought metaphoric extension objectoriented programming useful engineers designing network systems way component software tools useful developers complex desktop applications 
mobile agent encapsulates data code agenda intentionality unfolding thread execution small package 
encapsulation gives systems designers way creating building blocks networks 
building blocks possible find ways thinking systemic behaviors embraces changes network size congestion usage patterns user needs 
nelson minar kramer pattie maes related mobile agents active exciting research topic especially contemporary tools java mobile agent systems relatively simple implement 
number general arguments exist mobile agent approach potentially useful chess white 
research focused performance enhancement resource distribution believe interesting novel possibilities mobile agent architectures lie adaptive nature inherent flexibility baldi halls 
applying mobile agents systems infrastructure taken place umbrella active networking tennenhouse 
closely related active networks researchers share concern dynamic characteristics network systems desire explore possibilities movable bits code network context 
simple message agents behave active packets computational resources successive node find choose route 
threads research mobile agents situated telecommunications network manage connectivity load balancing 
steward early suggesting mobile agents ai strategies dynamically load balance telecommunication network 
follow design inspired ant behavior bonabeau extends ideas new direction markers network environment means indirect inter agent communication stigmergy 
mobile agents 
potential disadvantages designing networks mobile software agents noted 
see short list blueprint research set insurmountable obstacles 
efficiency computational cycles expensive network bandwidth precious 
messages route consume computational resources packets 
management infrastructure agents consume share bandwidth 
difficult justify newer approaches costly 
contemporary engineering approaches difficulty dealing dynamic networks perkins apparent networks increasingly complex heterogeneous 
efficiency perspective largely determined architecture deals broad range changing demands 
mobile agents approach offers rich set tools design time great flexibility situ lifetime system stacking deck favor architects implementers maintainers faced difficult task engineering reliable dynamic networks 
way think network efficiency set necessary tradeoffs finite resources 
example compute time fallen price rapidly connect time common trade cpu cycles bandwidth compressing data sending network decompressing receipt 
architectures packets route current multi hop networks expensive see widespread moment 
cheaply available silicon continues fiber benefits self routing messaging agents come outweigh diminishing relative costs 
similarly mobile management infrastructure agents job maintaining dynamic connectivity wireless network system prove efficient rigid centralized system waste certain amount bandwidth order provide certain level service 
infrastructure agents thought harvesting bandwidth simply consuming 
security second moving bits executing code computer computer raises number serious questions security 
concerned building secure systems working understand particularities securing networks 
mobile agents broad classes security problems protecting hosts agents protecting agents hosts protecting agents 
problem protecting hosts agents attracted attention researchers 
believe standard cryptographic techniques code signing combined sandbox permission models security java 
sufficient design execution environment protects computational host 
problems mobile agent security protecting agents hosts enjoyed attention 
actively involved research protect agents extending existing host security models 
growing body research protecting agents hosts executing encrypted code tschudin 
constitute open areas research progress 
furthermore scenarios may possible avoid security problems entirely carefully delineating trusted terrain network 
worth noting fundamental difficulties face regarding information security inherent spread relatively open networks 
advantages having access networks generally outweigh risks deal questions protect malicious attackers poorly written software matter kinds systems design 
provability third concern ecological approach building network behaviors collections cooperating agents difficult model mathematically result difficult reason deterministically 
call problem important contemporary software productivity life limb serious 
typically want build systems unreliable unpredictable 
noted extremely difficult reason realworld networked system matter design networks computers nelson minar kramer pattie maes unreliable 
possible participant network potentially unreachable malicious pathological possible impossible reason provably behavior system fischer believe mobile agents frameworks developing aids reasoning robustness fault tolerance additional impediments analysis 
remainder chapter presents results obtained simulating mobile agent populations wireless peer peer network 
results support contention mobile agents manage networks merit provide thorough analysis particular solution important network management problem maintaining connectivity routing maps 
experimental model experiments defined simple model dynamic wireless network implemented simulator study model 
model motivated realworld wireless networks designing media lab consist large numbers small low power nodes scattered building 
nodes vary great deal respect computational power capabilities usage wearable computers environmental sensors actuators gateways attached desktop computers simply provide location specific information peers 
share characteristic order reduce power consumption maximize single channel limited relatively short range communication 
means message intended recipient outside immediate vicinity require multiple hops reach destination 
simulation describe quite simplified compared real hardware implementation network 
believe model realistic provide guidance designing real systems experiments general applicability dynamically changing decentralized networks 
chapter extends previous set experiments mobile agent populations perform routing reported minar 
model complex earlier expect able directly apply lessons set experiments construction real dynamic multi hop rf networks 
nodes results derive simulation dynamic peer peer network 
experiments chose scenario consistent related colleagues media lab poor 
nodes system conceived low power relatively short range radio frequency transceivers distributed dimensional space 
simulation total network diameter roughly hops nodes cooperate peer peer fashion route packets network 
average packet system requires multiple hops travel source destination resident mobile agents need move network order effectively gather data system 
individual nodes move slowly simulated space random vectors radio links form break nodes move range 
result network topology quite dynamic 
assume physical links reliable bidirectional easily detectable 
node knows neighbors 
node system owns simple routing table 
node keeps list routing information 
node world table stores node send packet 
route packet arbitrary node message needs lookup current node destination move neighbor indicated repeating necessary 
important note routing tables updated nodes 
nodes completely passive rely mobile agents update tables 
chose network density match best estimates capabilities lowpower single channel rf devices personal accessories part home wireless networks 
network size chosen large feasible data collection nodes 
experiments performed configuration movement paths nodes 
snapshot node placements typical time 
snapshot simulated network nelson minar kramer pattie maes agents system nodes dumb run programs simply host agents provide place store database routing information 
mobile agents embody intelligence system moving node node updating routing information go 
routing agents goal explore network updating node visit learned travels 
routing agents discover edges network traversing 
routing agent keeps history 
agent lands node uses information history update routing table host possible routes writing best routes agent knows node table 
agent memory history information quite small baseline entries 
agents carry histories move size history window important parameter longer history higher overhead moving agent 
experiments investigate tradeoffs history size system performance 
system relies cooperative behavior population agents 
population size important parameter routing agents higher overhead 
agents population don communicate directly 
algorithms don read information node routing tables write making decisions go personal history case random agent 
system performance dependent behavior agents individual routing agents blind 
subject inter agent cooperation treated previous describing system minar return experiments 
model implemented simple discrete event time step simulation 
step simulated time agent things 
agent looks neighbors node decision go 
second agent moves new node learning edge travels 
third updates routing table node occupies knowledge network 
test algorithms agent chooses move 
algorithm random agent simply moves randomly chosen reachable node opportunity 
agent provides base comparison directed algorithms 
tested oldest node agent preferentially visits adjacent node visited longest ago visited doesn remember visiting 
agent uses history try avoid backtracking 
intuitively performs task efficiently repeating 
experimental measurements simulation system consists lines java code implementing discrete event scheduler graphical view data collection system simulated objects network nodes mobile agents 
experiments repeatedly run simulator various parameters 
measure system performance different agent algorithms varying history population sizes 
measure system performance average connectivity network converged mean behavior 
number calculated follows 
model designate nodes special gateway nodes 
wireless network nodes wired larger network local lan internet link 
measure connectivity count fraction nodes system valid route gateway 
measure reasonable aggregate connectivity time models nodes access outside world 
run iterations time steps 
parameter settings simulation converges mean behavior time 
take measure performance average fraction connectivity nodes time 
addition report maximum minimum connectivity observed time period order convey idea stability system 
factor randomness initial placements agents report numbers averaged set different runs parameter set 
experiments conducted initial node placement node movements 
results summary results printed appendix follows detailed description analysis 
result performance system time question investigated connectivity network change course single simulation 
examined baseline system oldest node agents history length measuring connectivity nodes time step 
time series shows result heavy line average time series runs grey lines randomly selected set individual runs 
reader see system starts zero connectivity initial condition knowledge 
network quickly gains connectivity agents move collecting information 
small time presumably result major change graph topology agents quickly rise connectivity time 
simulation time connectivity fluctuates network changes dynamically agents adjust routing tables accordingly 
define convergence point purposes measurements time time series connectivity flattens runs 
mean connectivity time calculated roughly take mean characteristic performance system consisting nelson minar kramer pattie maes simulation time connectivity connectivity system time 
oldest node agents history size 
individual run average runs oldest node agents history size 
addition average connectivity remained time span performance interval system 
particular example representative time series data general 
runs start connectivity quickly climb characteristic equilibrium remain run 
rest chapter report simply final mean connectivity number maximum minimum connectivity values registered convergence 
significant results experiment 
demonstrates basic concept population agents maintain reasonable rate connectivity case simulated network 
second population maintains connectivity rate reasonable stability 
system converges quickly fluctuation connectivity large swings 
analysis agent algorithm parameters basic framework analyzing behavior system place explore effects various choices system parameters performance 
alter main variables independently number agents history size agent type routing agents random oldest node 
varied history window size connectivity connectivity different history sizes 
population size agents 
point average connectivity 
interval maximum minimum connectivity 
population size connectivity connectivity different population sizes 
history size hops 
oldest node agent random agent results baseline agents history size 
results 
agent type apparent result effect agent type performance system 
graphs parameter setting oldest node agents perform better random agents 
come surprise oldest node agents able search network effectively minimizing back tracking 
interesting see random agent worse oldest node agent expect 
example baseline agents history size average connectivity oldest node agent system average connectivity random agents 
gain performance random agents preferable network situations 
particular random algorithm reduce computational load node system 
load important depends variety factors quickly network topology changes underneath agents 
algorithm careful choice visit useful relative random choice links nodes longer agent thinks believes 
history size second parameter studied effect agent history size system performance 
reading history graph left right see types algorithms having history better 
expected agents longer memories provide data nodes case oldest node agent operate efficiently 
performance improvements diminish history size grows bigger 
intuitively better agents longer memories 
point memories old date useless redundant multiple agents 
addition larger history sizes high nelson minar kramer pattie maes time connectivity oldest node agent varying history time connectivity oldest node agent varying population time connectivity random agent varying history time connectivity random agent varying population spreads maximum minimum connectivity 
adding memory agents system perform better average little effect stability 
movement nodes explains characteristic 
long agent memories allow information remains valid time steps help system recover large topological changes 
population size looked effect population size system performance 
history size having agents better 
result unsurprising larger population means agents look routes 
history size gain adding agents declines population size gets larger presumably agents duplicate 
agents narrows spread maximum minimum connectivity having redundant agents help lend stability network 
words distributing workload network necessarily agents reduces time takes information newly formed routes propagate outwards 
summary basic system analysis different view data time series graphs 
graph represents effect changing variable history size population size holding agent algorithm population size history size fixed 
time series data confirms summary larger population better agents larger memories perform better oldest node agents better random agents 
series experiments confirms basic expectations model 
analysis overhead agent populations establish basis determining optimum parameters kind system remains 
overhead analysis results validate model basic bit dull 
course agents memory better expect 
real world attributes come cost 
agents system memory agents overhead network support routing agent population 
sensible analysis account agent overhead measuring system performance 
order specify overhead characteristic agent population rough estimates cost transmitting agent 
nodes bit id time stamps kept bit quantities hop counts kept bit quantities node agent remembers needs keep bits data history table 
cost particular agent history size 
furthermore estimate cost sending agent roughly bits bits cover digital signature agent contents bits data agent owner field agent type bookkeeping data 
size agent code factored homogeneous systems sensible cache agent code 
open systems different agent species agent code size important factor 
estimates overhead system defined equation important note particular values constraints somewhat arbitrary 
general form overhead measurement important simple linear function dominated product number agents history size 
overhead calculation place possible compare different systems equal overhead 
baseline overhead entire population agents history bits step 
parameter settings produce overhead example system agents history size overhead system agents history size 
fixed overhead cost optimal tradeoff number agents history size 
shows performance system oldest node agents varying settings constant overhead 
graph shows experimental parameters system agents history size optimal 
wish argue significance specific numbers dependent particular parameters chose world 
believe results suggestive performance similar algorithms characteristic multi hop systems 
nelson minar kramer pattie maes population size history size fraction nodes route gateway average connectivity oldest node agent varying history size population size constant overhead 
interval represents max min connectivity point average 
particular results show kind system strike balance having large number agents having agent carry large amount data 
putting agents system causes unacceptable performance degradation bit leeway giving individual agents shorter memories 
intuitively implies routing dynamic network decentralized approach great individual autonomous agents effective centralized solution smart agents 
chapter approach managing service dynamic network 
particular network chosen simulate consisting large number highly mobile nodes relatively short range transceivers example system poorly served traditional centralized architectures 
attempted show population mobile cooperating software agents able build maintain routing tables system tables remain reasonably accurate topology network changes time 
general level described framework design management networks 
framework idea ecology mobile agents living inside network serving servicing infrastructure 
approach promise inherently decentralized technique appropriate managing networks inherently decentralized 
borrow language electrical engineering impedance mismatch system software 
result design theory aesthetically appealing conceptually clean significantly flexible 
part broader research program focusing development infrastructure complex large scale heterogeneous networks 
just understand possibilities implications systems built mobile code 
remains done important areas provisions security safety networks tools design modeling inspection methods analysis resource tradeoffs system overhead protocol strengths weaknesses application level frameworks allow new uses networked devices 
series experiments study design specialty sub populations agents manage particular routing tasks 
addition number parameters held constant particular system explore speed nodes move density nodes size transmit receive radii assumption link reliability 
incorporating variables increase complexity realism simulation giving better picture demands networks possibilities mobile code approach 
process building real world implementation short range low power rf network modeled chapter order apply lessons learned far test hypotheses outside safe confines simulation 
nelson minar kramer pattie maes bibliography steward 
mobile software agents control telecommunications networks 
bt technology journal vol 


april 
pp 
chapter book 
mario 
exploiting code mobility decentralized flexible network management 
proceedings international workshop mobile agents berlin april 
www picco papers ma ps gz baumann 
mobility mobile agent system mole 
rd workshop 
www informatik uni stuttgart de vs publications publications html baumann bonabeau 
routing telecommunications networks smart ant agents 
santa fe institute publications 
january 
submitted intelligent agents telecommunications applications 
di caro dorigo 
mobile agents adaptive routing 
proceedings hawaii international conference systems january 
ftp iridia ulb ac pub dorigo conferences ic hicss ps gz chess 
mobile agents idea 
mobile object systems programmable internet volume lecture notes computer science 

www research ibm com massive ps davie peterson 
computer networks systems approach 
isbn 
fischer 
impossibility distributed computing faulty process 
journal acm april 
garijo 
multi agent system cooperative network fault management 
proceedings international conference exhibition practical applications intelligent agents multi agent technology pages london 
jennings 
dynamic resource allocation market routing telecommunications networks 
appear intelligent agents telecommunications applications 
www elec qmw ac uk dai projects pdf halls 
applying mobile code distributed systems 
phd thesis computer laboratory university cambridge june 
www cl cam ac uk users dah huberman 
performance cooperative processes 
physica 
minar 
cooperating mobile agents mapping networks 
proceedings hungarian conference agent computation 

www media mit edu nelson research routes 
java security 
isbn 
perkins woolf 
mobile ip design principles practices 
addison wesley wireless communications series 
isbn poor 
self organizing wireless network 
master thesis mit media lab 
ttt media mit edu pia research rosenschein zlotkin 
rules encounter 
isbn schoonderwoerd 
ant load balancing telecommunications networks 
adaptive behavior 
www uk hpl hp com people abc html schoonderwoerd holland 
minimal agents communications networks routing social insect paradigm chapter book 
somers 

intelligent agents high speed network management 
proceedings international conference exhibition practical applications intelligent agents multi agent technology pages 
london 
sycara 
multi agent compromise negotiation 
distributed artificial intelligence volume 
isbn 
tennenhouse 
survey active network research 
ieee communications magazine january 
www lcs mit edu publications html tschudin 
protecting mobile agents malicious hosts 
mobile agents security lecture notes computer science isbn www icsi berkeley edu tschudin white 
telescript technology mobile agents 
software agents 
isbn 
