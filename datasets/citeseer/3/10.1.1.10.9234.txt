case heuristic selection timetabling problems edmund burke petrovic rong qu automated scheduling optimisation planning group school computer science information technology campus university nottingham nottingham ng bb summary presents case heuristic selection approach automated university course exam timetabling 
method described motivated goal developing timetabling systems fundamentally general current state art 
heuristics worked previous similar situations memorized case base retrieved solving new problem hand 
knowledge discovery techniques employed distinct scenarios 
firstly model problem problem solving situations specific heuristics problems 
secondly refine case base discard cases prove non useful solving new problems 
experimental results analyzed 
shown case reasoning act effectively intelligent approach learn heuristics particular timetabling situations 
conclude outlining discussing potential research issues area knowledge discovery different difficult timetabling problems 
key words case reasoning heuristics knowledge discovery timetabling problems correspondence rong qu school computer science information technology campus university nottingham nottingham ng bb tel fax mail cs nott ac uk case reasoning 
case reasoning cbr knowledge technique solves new problems employing previous experiences 
described leake follows cbr new solutions generated chaining retrieving relevant cases memory adapting fit new situations cbr previous problems new problems hand modelled cases certain forms list feature value pairs 
defined kolodner leake follows case contextualized piece knowledge representing experience teaches lesson fundamental achieving goals reasoner build cbr system previous problems solutions source cases collected stored case base 
retrieval process compares source cases new case hand similarity measure usually defined formula 
idea solve new problem reusing solutions source case similar new problem 
cbr applied successfully variety research areas including diagnosis legal advice health education 
examples represent situations naturally easy model cases list features compared nearest neighbour approach similarity measure 
cbr research carried success complex problem domains scheduling problems 
remembering reusing experience previous similar problem solving cbr capable providing reasonably solutions limited amount time important requirements dynamic scheduling 
led situation applications studied cbr scheduling area dynamic reactive scheduling 
applications scheduling employing cbr include travelling salesman problems single machine scheduling nurse rostering timetabling problems 
research largely concerned attempting solve scheduling problems directly compared described concerned choosing right heuristic employed attempt raise level generality timetabling systems operate 
timetabling problems timetabling problems arise real world circumstances nurse rostering university timetabling problems 
general timetabling problem includes scheduling certain number events exams courses meetings limited number time periods satisfying required constraints possible 
constraints usually grouped way hard constraints violated circumstances 
example events common resources students assigned simultaneously 
solution violations hard constraints called feasible solution 
soft constraints desirable essential 
examples events scheduled consecutively event scheduled specific room possible 
timetabling problems studied decades see 
traditional approaches include graph heuristics integer linear programming constraint logic programming large amount successful research carried investigated meta heuristic approaches variety timetabling problems see 
include tabu search simulated annealing evolutionary algorithms 
extensive carried study compare different heuristics specific timetabling problems 
serves starting point employing knowledge techniques timetabling problems experiences obtained collected 
provided motivation cbr directly solving university timetabling problems large amount data problem solving experiences available studied 
note attempting directly solve timetabling problems 
concerned underpinning development general timetabling systems investigating cbr timetabling heuristic selector 
case heuristic selection timetabling problems artificial intelligence operational research problems solved employing variety heuristics guide problem solving high quality solutions promising regions search space 
experience knowledge problem solving gained employing different heuristics usually discarded 
investigates case heuristic selection approach collects reuses previous experience heuristics employed successfully particular situations current similar situations timetabling 
aim avoid solving new problems scratch save lot effort 
key aim develop intelligent systems guess heuristic problem capable dealing problems efficiently 
success area underpin development general systems need tailored particular problem hand 
system significantly cheaper implement current problem specific systems applied far wider range problems 
motivation cbr humans solve new problems re employing knowledge collected previous experience 
timetabling research approaches employ specifically tailored heuristics operated directly problem see 
case specific heuristic worked particular type problem may problems 
case heuristic selection approach timetabling problems solved employing best heuristics predicted particular situations utilising past experience 
idea similar hyper heuristic refers heuristic chooses heuristics see 
research scheduling problems idea attempt raise level generality 
genetic algorithms employed technique search heuristics 
proposed case heuristic selection approach list feature value pairs defined create cases 
knowledge discovery process features represent cases case base system section 
concerned university course timetabling university exam timetabling usually different problems different possible constraints problem characteristics 
total collected different sets potential features simple features combination simple complex features course exam timetabling problems 
study separately different heuristic prediction approaches unified case heuristic selection framework 
section course timetabling section exam timetabling respectively 
section presents discussion research issues concerning data preparation source case selection case heuristic selection approach concluding comments 

knowledge discovery case heuristic selection basic assumption cbr similar problems similar solutions 
retrieval similarity driven process finds solution assessing similarities source cases new cases 
key issue tackling development case heuristic selector timetabling model knowledge specific heuristics particular problems problem solving situations 
successful method allow find similar source cases give predictions best heuristics new cases 
may obtained ways proper features need employed represent timetabling problems cases compared defined similarity measure predictions heuristics 
features affect contribute selection heuristics needed represent cases 
retrieval cbr similarity driven process selection features access similarity cases predictions forms crucial part case heuristic selection approach source cases need selected carefully right retrieved suggesting appropriate heuristic specific range new cases 
study stage knowledge discovery process case representation source cases selection 
knowledge discovery process identifying valid novel potentially useful ultimately understandable patterns data 
usually carried ill structured domains exactly timetabling problems 
approach knowledge discovery techniques strategies employed obtain knowledge problems modeling comparing cases choose heuristics refining case base 
cbr serves base stores discovered knowledge provides heuristics problem hand 
particular features cbr system developed listed follows cases problems partial situations problem solving represented list feature value pairs 
knowledge discovery carried search feature list employed system 
case base database cases best heuristics heuristic sets section section respectively 
knowledge discovery carried refine source cases retained case base 
training cases form set cases best heuristics obtained 
knowledge discovery process carry search features selection source cases 
similarity measure formula employs nearest neighbour approach calculates weighted sum differences pair features cases compared 
fs ft notation formula described follows number features employed case representation wi weight ith feature indicating relevance comparison fsi values ith feature source case cs new case ct hand respectively higher similarity measure cs ct similar cs ct 
source cases highest similarity retrieved best heuristics suggested new case 
retrieval uses similarity measure compare source case new case hand 
knowledge discovery process set training cases discover feature list source cases 
best heuristic training case obtained best heuristics retrieved source case retrieval seen successful retrieval 
criterion set way qualities timetables produced different heuristics close equal 
best heuristic stored having randomness exploitation choose store best heuristics source case 
system performance evaluated knowledge discovery process guide training features selected source cases retained system 
defined percentage successful retrievals training cases 
studied heuristics case heuristic selection approach course exam timetabling problems 
choose widely studied heuristics timetabling research due easy implementation generality wide range problem types require parameters 
described 
largest degree events scheduled scheduled descending order number constraints event 

largest degree tournament selection heuristic tries schedule constrained events element randomness 
time constrained event selected subset events scheduled size subset original set 

colour degree events scheduled ordered number constraints scheduled timetable 

saturation degree events scheduled ordered number periods available timetable 

hill climbing initial timetable randomly constructed improved method 
stage knowledge discovery case representation schematic diagram knowledge discovery process case representation 
firstly initial feature list weights randomly chosen 
artificial intelligent search methods tabu search hill climbing employed search feature vector provides best system performance highest number successful retrievals training cases 
feature list selected retrieval compares best heuristics obtained training cases best heuristics source cases retrieved 
system performance feature list selected fed back step knowledge discovery case representation 
initial features feature weight discovery case base retrieval training cases schematic diagram knowledge discovery process features weights search process discovering features weights search space includes possible enumeration features describe situations timetabling problems 
possible moves include changing features weights removing irrelevant features introducing new features 
fitness function system performance obtained percentage successful retrievals training cases 
current aims investigate manipulation knowledge heuristics solving timetabling problems goal raising generality timetabling system 
employed tabu search hill climbing search 
discovered features relatively fast obtaining reasonable results 
tabu search length tabu list set previous experience experiments value recommended literature 
process carried iteratively stopping condition met pre set time searching 
feature vector gives highest system performance employed stage knowledge discovery case base 
second stage knowledge discovery case base source case selection key elements contribute performance cbr system 
irrelevant source cases may contain wrong redundant information confuses retrieval process decreases system performance 
knowledge discovery case base uses leave strategy removes source case time case base checks effect system performance 
system performance decreased number successful retrievals training cases decreased removed source case added back may contribute higher system performance providing best heuristics certain type timetabling cases 
removed permanently contains wrong information terms predicting best heuristics redundant system harmful system performance 
aim obtain case base relevant representative source cases 

case heuristic selection course timetabling problems firstly investigate case heuristic selection approach predict best heuristic solving course timetabling problems 
sets features collected represent course timetabling problems employed knowledge discovery process fcs includes simple features table fcc includes combinations pair features fcs 
hc set includes selection timetabling heuristics 
sets listed hc fcs fcc fi fm fn fi fm fn fcs table possible features course timetabling problems feature id description number courses number time periods number constraints density conflict matrix number hard constraints number soft constraints number conflicts conflicted course courses number conflicted courses number courses scheduled fixed time period number courses scheduled consecutive time periods guarantee complete coverage heuristics studied heuristics need instance case base knowledge discovery 
build case bases consist different number source cases different best heuristics 
cb database source cases courses different sizes problem 
size set cases 
heuristic hc case heuristic best 
second best heuristic case may heuristics hc 
cb database source cases different sizes set cases 
heuristics hc cases set cases heuristic best 
compared cb knowledge may discovered cb heuristic prediction 
far widely cited benchmark course timetabling problems recommended penalty function evaluate course timetables produced 
try obtain best feature set knowledge discovery process comparing heuristics generate best quality timetables number violations types soft constraints 
training phase system handle feasible solutions violation hard constraints 
infeasible solution generated run heuristics random elements obtain feasible solution simply discard data tested 
knowledge discovery features weights employ relatively simple fast search methods tabu search hill climbing search features fcc case representation study characteristics different search methods knowledge discovery process 
investigation search methods knowledge discovery process feature selection research issue 
total training cases carry knowledge discovery features weights cb case base 
best system performance highest number successful retrievals training cases employing different number features feature set fcc 
number features runs system carried average system performance obtained 
system performance hill climbing tabu search number features system performance different numbers features cc tabu search hill climbing see surprisingly general tabu search operates better hill climbing 
tabu search hill climbing show system performs best features case representation 
features obtained tabu search training cases obtain correct best heuristics retrieved source cases 
observe system performance decreased features employed case representation 
studied similarities source cases training cases different numbers features 
observed features assessed similarity measure similarities source cases training case close 
similarity measure may distinguish similar source cases heuristic prediction may just slightly higher similarity value may right retrieved 
retrieval confused relevant features similarities cases close 
general employing relevant features needed decreases system performance 
features chosen feature set fcc contains higher number complex features generated simple features best system performance obtained weights 
means moves adjust weights features tabu search hill climbing contribute better system performance 
test knowledge discovery system features chosen feature set fcs contains smaller number simple features 
weights features studied detect effect different features sets 
table presents simple features weights discovered highest system performance obtained 
third fourth row weights curly brackets features second row discovered tabu search hill climbing respectively 
table weights discovered features fcs tabu search hill climbing 
features features weights tabu search weights hill climbing see fcs lower number simple features choose case representation weights features discovered tabu search hill climbing different features employed 
may simple features similarity measure get information compare cases weights features need adjusted obtain better assessments cases retrievals 
complex features fcc similarity measure may information comparison adjusting weights features contribution better system performance 
explanation may different complex features generated simple features may contain simple features similarity measure 
example fi fj fi fk feature list contribute weight fi similarity measure 
similarity measure may way affected importance certain features 
feature list gives highest system performance stage employed cbr system second stage knowledge discovery case base 
shown knowledge discovery case base knowledge discovery case base carried case bases cb cb leave strategy 
system performance leave strategy table 
number cases left case bases corresponding system performance leave strategy column refined cb refined cb 
see sizes refined cb refined cb vastly reduced higher system performance obtained compared case bases leave strategy second column third column 
obtained retaining relevant cases case base 
refined cb provides better system performance refined cb source cases trained cb knowledge discovered solving types problems 
table system performance knowledge discovery case bases case base cb cb refined cb refined cb 
source cases system performance section approach cbr predicting best heuristic course timetabling problems 
experimental results show feature selection important feature weights retrieval process 
gives indication current features select reasonably case representation timetabling problems 
employing relevant features case representation confuses retrieval decreases system performance 
source case selection removes redundant cases retains representative cases key issue approach 
knowledge discovery techniques approach employ relatively simple methods just training processes lead satisfying results 
providing set reasonably heuristics trying tailor particular heuristics specific course timetabling problems heuristic selection framework indicates advantages employing knowledge discovery techniques 

case heuristic selection exam timetabling problem investigated case heuristic selection approach suggest heuristics employed constructing exam timetables problem solving process 
idea employing specific heuristics particular situations generate high quality schedules 
motivated goal developing general timetabling systems 
cater laporte noted hundreds research papers examination timetabling probably thousands computer programs written solve particular problem variation theme 
goal move away tendency develop methods solve particular problem instance 
sets possible features collected fes describes characteristics problems partial solutions table fec includes combinations features fes 
listed fes fec fi fm fn fi fm fn fes table possible features exam timetabling problems partial solutions problem solving feature id description number exams number time periods number hard constraints number rooms density conflict matrix number exams scheduled partial solution number times exams common students scheduled consecutive time periods partial solution number times exams common students scheduled time periods apart partial solution penalty partial solution cost scheduling exam partial solution number constrained exam number constraints constrained exams case reasoning system cbr system developed exam timetabling problems characterised features case heuristic selection approach includes studied established sequential heuristics solving exam timetabling problems 
order exams scheduled timetable 
heuristic set containing heuristics 
largest degree largest degree tournament selection colour degree saturation degree 
source cases different possible partial solutions obtained previous problem solving sequential heuristics 
partial solutions heuristics violations step scheduling stored suggested heuristics employed 
penalty function defined way fitness function employed cost exams common students scheduled close aiming spreading exams timetables 
penalty function timetable formula evaluate quality solutions produced heuristics 
notation formula described follows ss ss number situations students exams scheduled time periods apart ws weight reflects importance violations soft constraints number times exams scheduled time periods apart 
set 
purpose comparing quality solutions produced different heuristics consider infeasible solutions violations hard constraints training stage system 
problem cbr system heuristic selector construct solution case base 
solution case heuristic selection approach represents overview case heuristic approach exam timetabling problems 
solve problem input system step exam scheduled partial timetable heuristic selector chooses specific sequential heuristics case base construct solution 
retrieval heuristic selector uses similarity measure formula compare current partial solution constructed cases case base partial solutions obtained solving previous problems 
best heuristic stored similar case suggested employed step construction partial solution 
process carried step step terminated stopping condition met exams scheduled 
data preparation knowledge discovery stage system development want evaluate system performance timetabling problems possible give systematic analysis heuristic selection framework 
just real world benchmark timetabling problems widely available scientific community see 
study require large number timetabling problems generated large number timetabling problems possible different feature values 
deeper understanding system performance variety problems coverage possible features real world timetabling data added system evaluation 
data sets publicly available scientific community www cs nott ac uk publications htm 
exam timetabling problems generated randomly constructing conflict matrix defines hard constraints exams 
element marked matrix denotes conflict exams indicated corresponding row column 
density ratio number total number elements matrix takes values 
size problems ranges exams 
carry knowledge discovery case base built consists set cases best heuristics 
heuristics studied implemented construct solutions step step set exam timetabling problems generated conflict matrix size problems input 
step schedule exam problem solving heuristic number violations constraints partial solution time seen best heuristic corresponding partial solution 
particular partial solutions modeled list features best heuristics stored source cases 
partial solutions heuristics perform cases stored case base representatives class specific problem solving situations 
presents example heuristics best solution process exam timetabling problem stored 
construct timetable best heuristic number steps usually schedule exams 
number steps best heuristics chosen switched 
keep size case base reasonably small sample partial solutions steps timetable construction source cases 
store cases near switching points heuristics indicated 
done help knowledge discovery process detect features heuristic selection detect differences feature values heuristic particular situation 
solving set timetabling problems obtained potential source cases total build case base 
heuristic id number exams scheduled best solution process source case set training cases best heuristics produced process producing source cases 
partial solution generated solution process set training cases best heuristic violations constraints obtained 
heuristic expected heuristic selector suggest knowledge discovery process 
total training cases produced knowledge discovery system 
knowledge discovery heuristic selector tabu search hill climbing employed course timetabling discover feature list models partial solutions give highest system performance training cases 
training cases input system check suggested heuristics heuristic selector feature list 
training cases heuristic selector finds similar source case case base best heuristic checked see successful retrieval particular feature list 
feature list gives highest system performance training cases heuristic selector 
knowledge discovery feature lists case base refined leave strategy remove redundant source cases 
set testing cases different training cases knowledge discovery process generated test heuristic selector discovered feature lists 
length feature lists number cases left refined case bases feature list discovered system performance training cases testing cases percentage successful retrievals training cases testing cases table 

features table system performance different feature lists training testing cases system performance training cases feature list 
cases refined case base originally system performance testing cases system performance training cases testing cases second fourth column obtain similar observations drawn section 
system performs best testing cases obtain expected heuristics relatively smaller number features heuristic selector 
relevant features employed case representation get system performance 
compared system performance obtained course timetabling problems section observe higher system performance obtained exam timetabling problems training cases testing cases 
due fact exam timetabling problems considered fewer types constraints course timetabling problems section 
knowledge discovery problems smaller number possible characteristics obtain higher system performance 
see relatively lower number source cases removed case base exam timetabling problems third column table compared course timetabling 
reason may higher number possible problem solving situations possible timetabling problems 
source cases need retained provide knowledge heuristics new problem situations may require 
case heuristic selection problem solving test case heuristic selection approach problem solving testing exam timetabling problems different sizes exams generated conflict matrices densities range 
problems solved approach employing feature lists discovered refined case base 
due observation heuristics switch certain number scheduling steps set step schedule exams 
may save lot retrieval time solution process ensuring high quality solutions obtained employing heuristics suggested case base 
average penalties solutions obtained single sequential heuristics case heuristic selection feature lists different lengths table table respectively 
table average penalties solutions single sequential heuristics sequential color saturation largest largest degree heuristics degree degree degree tournament selection penalty solutions table average penalties solutions case heuristic selection different features 
features penalty solutions results shown table indicate approach provides solutions better average penalties obtained single sequential heuristics shown table 
just cases features slightly worse solutions obtained case heuristic selection approach comparing best solutions obtained single heuristics 
comparing results table see roughly higher system performance knowledge discovery better case heuristic selection approach performs problem solving stage 
choosing heuristics problem solving better solutions obtained compared generated single heuristics 
section case heuristic selection approach exam timetabling problem solving developed tested 
knowledge selecting best heuristics different problem solving situations stored source cases 
shown employing approach better competitive results produced compared best results obtained set specific heuristics range exam timetabling problems 
aiming investigating learning ability selecting different heuristics general problem solving framework variety possible timetabling problems 
basic idea similar hyper heuristic heuristic selects heuristics 
knowledge learnt problem solving hyper heuristic usually discarded afterward 
new problems similar problem solving situations solved scratch searching vast search space heuristics 
case heuristic approach aims collect knowledge heuristic selection problem solving avoiding searching heuristics problem solving situations similar previously encountered ones knowledge available 
results obtained showed capable solving various simulated timetabling problems different characteristics employing appropriate heuristics knowledge collected solution construction naturally higher generality approaches heuristics tailored particular timetabling problems 
real world timetabling problems different characteristics limited benchmarks exist timetabling problems collecting training set problems adapted real world data training may possible 

discussions investigated case heuristic selection approach general problem solving framework aim producing reasonably solutions quickly variety timetabling problems reusing previous experience heuristics similar problem solving situations 
studied knowledge discovery approach case heuristic selection predict best heuristics course timetabling problems best sequential heuristics solution process exam timetabling problems 
observations obtained experimental results showed knowledge heuristics guide problem solving process successfully construct higher quality solutions 
heuristic selector developed approach exam timetabling problem solving ability heuristics problem solving situations flexible solving wider range problems 
aim develop problem solving approach learn heuristics problem solving flexible solving wide range timetabling problems provide competitive results range specifically tailored heuristics particular problems 
current research timetabling presenting different results different problems 
aiming competing best results reported literature constructing special purpose specific approaches 
goal generate competitive results wider range problems 
attempting underpin generation timetabling systems general specific certain problems problem instances 
knowledge discovery process employs relatively simple techniques carry training case representation case base 
currently tabu search hill climbing study performance knowledge discovery 
possible meta heuristics course investigated 
experimental results showed feature selection important task important feature weights features provide necessary information retrieval 
relevant features studied precise case representation improve system performance 
irrelevant features case representation confuse retrieval refining features selected important task 
source case selection important issue addressed 
current investigated knowledge discovery number artificially produced problems order study performance system problem situations possible 
collecting studying higher number real world data carried obtain wider range knowledge timetabling domain 
obtain deeper understanding approach variety types problems promising results expected solving wider ranger real world problems competitive results 
knowledge discovery process exam timetabling problems large amount time needed data preparation analysis 
source cases greatly affect knowledge discovery process problem solving carefully selected 
firstly cases need checked remove duplicated cases 
cases similar close values feature best heuristics removed 
secondly certain steps solution construction best heuristic selected step scheduling 
current system partial solutions obtained data preparation stored case base 
sample cases steps scheduling reduce redundancy case base 
cases near point switch heuristics chosen potential source cases knowledge discovery process 
current research tested simple heuristics case heuristic selection approach range timetabling problems 
get deeper understanding heuristic selection simple heuristics complex heuristics investigated 
know knowledge discovery non trivial process takes significant time process raw data collected 
data analysis important step knowledge discovery aims obtain organise knowledge allow select appropriate heuristics 
burke investigated similarity measures exam timetabling running simulated annealing set benchmark exam timetabling problems different similarities 
shown removing certain redundancies students just affect result terms hard constraints problems originally similar quite different vice versa 
seen subsets excluded far similarity concerned point view determining purely feasible solution 
elaborate techniques manually automatically may need employed source cases collection data preparation 
acknowledge support epsrc research carried number gr 

berger hybrid genetic algorithm vehicle routing problem windows itinerary constraints proceedings genetic evolutionary computation conference gecco orlando florida usa july 

burke carter eds second international conference practice theory automated timetabling lecture notes computer science 
springer verlag 

burke de causmaecker eds proceedings forth international conference practice theory automated timetabling 
st gent belgium august 
lecture notes computer science springer verlag 

burke petrovic qu 
similarity measure exam timetabling problem 
technical report asap group university nottingham 

burke erben eds third international conference practice theory automated timetabling lecture notes computer science springer verlag 

burke hart kendall newall ross hyper heuristics emerging direction modern search technology 
glover ed handbook meta heuristics kluwer 


burke jackson kingston weare automated timetabling art computer journal 

burke petrovic qu structured cases case reasoning re adapting cases time tabling problems 
knowledge systems 

burke petrovic qu case reasoning course timetabling attribute graph approach 
aha watson eds case reasoning research development 
proceedings th international conference case reasoning iccbr 
lecture notes artificial intelligence 


burke petrovic qu 
multiple retrieval case reasoning course timetabling problems 
technical report tr asap group university nottingham 

burke petrovic qu knowledge discovery hyper heuristic case reasoning course timetabling 


burke newall weare simple heuristically guided search timetabling problem 
proceedings international icsc symposium engineering intelligent systems eis 

burke petrovic research directions automated timetabling 


burke petrovic qu case heuristic selection examination timetabling 
proceedings iconip seal 
burke ross eds international conference practice theory automated timetabling lecture notes computer science springer verlag 

carrasco multiobjective genetic algorithm class teacher timetabling problem 

carter lagrangian relaxation approach classroom assignment problem 



carter laporte developments practical exam timetabling 

carter laporte developments practical course timetabling 

carter laporte examination timetabling algorithmic strategies applications 

chan weil cyclic staff scheduling constraint logic programming 

cheng li lim nurse rostering problems bibliographic survey european journal operational research 

colorni dorigo maniezzo metaheuristics school timetabling 
computational optimisation applications 

costa tabu search algorithm computing operational timetable 

cunningham smyth case reasoning scheduling reusing solution components 
international journal production research 


case reactive scheduling 
technical report cd tr 
vienna university technology institute information systems 

dowsland peg measure 

erben grouping genetic algorithm graph coloring exam timetabling 

fayyad piatetsky shapiro smyth uthurusamy eds advances knowledge discovery data mining aaai press melo park ca 

johnson microcomputer decision support system university timetabling 
decision support systems 

schaerf tabu search techniques examination timetabling 

hart ross nelson solving real world problem evolving heuristically driven schedule evolutionary computation 

kolodner leake 
tutorial case reasoning 
leake ed case reasoning experiences lessons directions aaai press mit press 


kong kwok conceptual model knowledge timetabling system 
knowledge systems 

leake ed case reasoning experiences lessons directions 
aaai press menlo park ca 


jou case reasoning scheduling 
khan wright eds proceedings symposium advanced manufacturing processes systems techniques mep publications 

mantaras plaza case reasoning overview 
ai communications 

marin ross evolution constraint satisfaction strategies examination timetabling proceedings genetic evolutionary computation conference orlando florida usa july 

miyashita sycara cabins framework knowledge acquisition iterative revision schedule improvement reactive repair 
artificial intelligence 

petrovic vanden berghe 
storing adapting repair experiences employee rostering 
appear 

reeves modern heuristic techniques 
smith osman reeves smith eds 
modern heuristic search methods 

ross corne comparing genetic algorithms simulated annealing stochastic hillclimbing timetabling problems 
goos hartmanis leeuwen 
eds 
evolutionary computation aisb workshop 
lecture notes computer science 
springer verlag sheffield 


ross hart corne observations ga timetabling 


survey automated timetabling 
artificial intelligence review 

shaw constraint programming local search methods solve vehicle routing problems proceedings principles practice constraint programming 

schmidt case reasoning production scheduling 
international journal production economics 

scott simpson ward combining case reasoning constraint logic programming techniques packaged nurse rostering systems 
proceedings third uk case reasoning workshop university manchester september 

