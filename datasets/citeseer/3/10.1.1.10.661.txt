platform independent modelling mda supporting platforms jo paulo almeida remco van lu ferreira centre telematics information technology almeida cs utwente nl 
mda design approach able accommodate designs different levels platform independence 
previously proposed design approach allows levels identified 
important feature approach notion platform 
platform determined considering platform characteristics relevant applications certain level platform independence various design goals 
discuss design approach supported mda standards uml mof 
methodological framework notion platform pay particular attention representation platforms language requirements specify platforms 

current trend development distributed applications separate technology independent technology specific aspects describing separate models 
prominent example trend model driven architecture mda 
common pattern mda development define platform independent model pim distributed application apply parameterised transformations pim obtain platform specific models psms 
main benefit approach stems possibility derive different alternative psms pim depending target platform partially automate model transformation process realization distributed application specific target platforms 
concept platform independence plays central role mda development 
believe platform independence defined set target platforms known general capabilities irrelevant technological engineering details established 
leads observation possibly different abstraction levels depending wants consider different sets target platforms 
observation different application characteristics different sets target platforms generally lead different types intermediate models design structures patterns model transformations 
observations motivated investigations types models useful mda development trajectory models related criteria application 
results investigations earlier proposed mda design trajectory accommodates designs different levels platform independence 
architectural concept plays important role approach platform 
platform defines acceptable extent ideal platform application developer point view represents platform support assumed application developer point phase design trajectory 
alternatively platform defines characteristics proper mappings set concrete target platforms considered mda design process defining level platform independence particular process 
defining platform forces designer address conflicting goals achieve ii reduce size design space explored realization 
design approach intended successfully applied practice supported suitable design concepts suitable design languages 
methodological guidelines platform independent design define requirements design languages intended support platform independent design 
methodological framework notion platform pay particular attention representation platforms language requirements specify 
discuss architectural concept platform supported uml mof 
structured follows section provides background introduces concept platform section discusses platforms relate design languages section discusses platforms represented uml mof section presents examples platforms representations section positions respect related 
section presents outlines 

platforms platform independence quality model relates extent model abstracts characteristics particular technology platforms 
order refer platform independent platform specific models define platform general definition platform page platform set subsystems technologies provide coherent set functionality interfaces specified usage patterns 
concentrates platforms correspond middleware technology supporting operation invocation asynchronous message exchange corba ccm net web services 
levels platform independence pursuing platform independence strive neutral respect different classes middleware platforms 
possible models characteristics supporting technological infrastructure irrelevant conceptual domain models rm odp enterprise viewpoint models considered computation independent models 
development trajectory system architecture captured platform characteristics relevant different sets modelling concepts may adequate respect specific classes target middleware platforms 
leads observation platform independence binary quality models distributed application described levels platform independence 
level platform independence model carefully identified 
propose identification explicit step mda development 
notion platform proposed initially supports designer step 
platform defines acceptable extent ideal platform application developer point view represents support comprehensive direct possible assumed platform independent models distributed application 
alternatively platform defines characteristics mapped set concrete platforms considered potential targets development project 
platform determined platform characteristics relevant applications certain platform independent level 
example design contains application parts interact operation invocations operation invocation characteristic platform 
capabilities concrete platform platform specific realization support characteristic platform 
example corba selected target platform characteristic mapped corba operation invocations 
pim distributed application depends platform model way psm depends concrete platform model see 
platform specific realization pim psm transformation straightforward selected concrete platform corresponds directly platform 
case effort invested platform specific realization 
general distinguish contrasting extreme approaches proceed platform specific realization 
adjust concrete platform corresponds directly platform 

adjust scope application platform specific realization requirements specified platform independent level preserved platform specific application model composed target platform model 
approach boundary platform platform independent application model preserved platform specific realization 
implies platform specific platform logic composed concrete target platform 
nature composition depends particular requirements platform 
may possible implement platform logic top concrete platform 
composition may imply platform specific qos mechanisms possibly defined terms internal components concrete platform 
extension nonintrusive manner preferred way adjust concrete platform 
techniques non intrusive extension include interceptors aspect oriented programming composition filters 
approach may imply qos mechanisms design application 
approach may suitable case impossible adjust concrete target platform due lack extension mechanisms cost implications adjustments 
illustrates approaches platform specific realization 
application psm plat 
logic psm concrete platform model trivial application pim platform model fig 

alternative approaches platform specific realization application psm concrete platform model approaches allow target different concrete platforms platform independent model different quality characteristics 
approach generalized recursive application service definition external perspective service internal design resulting hierarchy platforms concrete target platform 
step recursion approaches realization chosen 

design languages designs supported suitable design concepts represented suitable design languages 
mda design trajectory design languages may produce models different levels abstraction 
alternatively single broad spectrum design language may 
design language adopted design important role defining characteristics platform assumed design 
mda development trajectory may apply implicit platform definition approach characteristics platform implied set design concepts describing platform independent model distributed application 
concepts inherited adopted modelling language 
example exchange signals agents sdl may considered define platform supports reliable asynchronous message exchange 
restricted particular constructs design language certain modelling styles serve means select subsets language design concepts 
approach illustrated schematically concepts represented geometric forms 
modelling language domain platform implied inherited design concepts application domain model constructed ins design concepts instantiation design concepts distributed application design set design concepts constraints platform definition set pre defined design artefacts pre defined artefacts platform instantiation design concepts incorporation pre defined design ii fig 

approaches cope platforms implying platform definition adopted set design concepts platform independent modelling may useful necessary define characteristics platform explicitly resulting separate reusable design artefacts 
call approach explicit platform definition 
platform independent modelling parts pre defined platform model may composed model distributed application 
example group communication primitive design concept uml possible specify behaviour group communication sub system uml 
sub system re design distributed application 
examples pre defined artefacts may included platforms odp trader omg pervasive services defined 
set design concepts design language relevant approach distributed application platform model described language 
approach illustrated schematically ii 
implicit explicit platform definition approaches overlap language characteristics platform characteristics 
leads formulation important requirement design language support platform independent design concepts underlying design language precisely defined characteristics platform unambiguously derived concepts 
important reasons designers need know characteristics platform defining platform independent models application platforms starting point platform specific realization 
furthermore comprehensive mda design approach allow designers select define suitable platforms platform independent designs 
leads formulation second requirement design languages suitable mda design language enable definition appropriate levels platform independence 

platform definition mda standards section pay particular attention definition platforms mda standards uml mof 
discuss fulfilment design language requirements section implicit explicit platform definition approaches 

implicit platform definition concepts plain uml prescribes specifying communication application parts objects components imply platform request response invocations message passing 
uml meta model may offer operations receptions 
operations represent capability classifier receive respond requests 
requests sent objects execute 
receptions represent capability classifier receive signal instances sent asynchronously objects execute 
plain uml usefulness implicit platform definition approach restricted platforms request response invocations point point message passing 
uml developed general purpose language expected customized wide variety domains platforms methods 
certain degree customization may obtained uml semantic variation points profiles 
choice definition uml implications implicit platform definition uml specification plain uml conclusive respect platform implied customization mechanisms applied order precisely define specific platforms 
semantic variation points provide intentional degree freedom interpretation uml metamodel semantics 
semantic variation points defined uml specification resolved plain uml conclusive respect platform implied language 
example semantic variation point described uml specification page means requests transported target depend type requesting action target properties communication medium numerous factors 
cases instantaneous completely reliable may involve transmission delays variable duration loss requests reordering duplication resolving semantic variation point designer forced assume worst case interpretations implied platform provides unreliable request response mechanism 
undesirable platform provide reliable request response mechanism designer resolve semantic variation point defining requests response signals transported reliably 
semantic variation points may partially resolved relevant aspects 
example designer may consider reliability characteristics requests relevant may consider timing characteristics irrelevant 
case interpretation timing characteristics requests acceptable 
resolve semantic variation points relating uml metamodel formal semantics basic set design concepts formal semantics 
specialization uml defining platform characteristics manageable clearly defined uml profiles 
profiles language extensions consisting metamodel elements specialise elements metamodel 
specialized elements specific semantics way resolving semantic variation points 
furthermore constraints expressed language ocl added profiles restrict specific concepts combinations concepts 
profiling implicit platform definition restricted constraining specialising platform implicitly defined plain uml 
approach referenced metamodel uml metamodel combination uml profile assumes role platform model 
case relevant platform characteristics represented resolving semantic variation points definition profiles define new languages terms mof metamodels 
design concepts languages constrained uml arbitrarily defined mappings metamodel elements suitable semantic domain 
approach mof metamodel assumes role platform model 
profiling suited platforms require concepts represented specialisations uml concepts 
mof metamodelling suited case required concepts differ uml concepts new independent metamodel defined 
systematically profiling advantage uml tools model validation verification resulting models comply uml rules constraints 
mof metamodelling potential drawback available validation verification tools may impossible reuse new tools may built new metamodel 
explicit platform definition alternative changing design concepts plain uml means profiling changing implicit platform define platform explicitly 
platform composed design application 
accommodated uml model library packages define platform model 
model library packages packages stereotyped standard stereotype 
platform model library package imported pim application 
represented creating dependency package pim defined model library package platform defined 
platform arbitrarily complex behaviour structure varying simple way message passing mechanism communication system maintains transactional integrity time order messages 
design complex platforms manageable uml composite structures break complex design smaller pieces 
state machine activity diagrams may associated encapsulated classifiers define behaviour 
behaviour platform described uml may necessary combine explicit implicit platform definition approaches resolving semantic variation points relevant composition platform explicitly defined platform independent model application 

examples order illustrate approaches platform definition uml specify platform independent model simple chatting application 
application allows users residing different hosts exchange text messages 
initially application described terms platform supports interaction objects conference binding object 
call platform 
order define composition conference binding object application reliable exchange asynchronous signals 
purpose define platform supports reliable signal exchange implicit approach defining uml profile 
consider possible realizations relies event platform define explicitly relies solely exchange reliable signals 
relations different models depicted necessary realization section 
system application app ly profile import mode app ly app ly import mode fig 

relations pim application platforms defined implicit explicit approaches reliable signal exchange depicts specializes exchange asynchronous messages uml 
stereotype reliable defined applied instances defined package uml meta model 
signals created executing stereotype exchanged reliably lost duplicated 
meta class meta class specialized profile 
necessary specialise meta classes signal reception represent respectively type signal instances exchanged ability receive signal instances 
semantics meta classes independent manner transmitting signal instances 
profile metaclass stereotype reliable fig 

uml profile specializing exchange asynchronous messages component provides requires 
application part uses provide 
signals exchanged application parts platform defined explicitly 
class diagram showing component signals interfaces depicted 
cd interface signal string signal join signal leave fig 

interface signal join signal leave signal string signal content string signal content string port shows behaviour component specified state machine 
keeps list conference participants updated join leave signal handled 
reception signal sends signals participants conference 
order simplify behaviour assumed signals sent sequentially order imposed list participants result 
illustrates reliable stereotype 
sm initial initial messaging initial fig 

state machine content participant hasnext leave participant participant join participant participant hasnext reliable content application uses may defined highlevel platform independence communicating conference binding signal exchange 
alternative implementations signal exchange possible target platform 
large freedom implementation conference platform 
application shielded internal design conference platform depend interaction support eventually conference binding object 
realization depicts realization 
realization relies platform provides reliable signals 
cd conf ace ace port port participant signal join signal string signal ace signal ace string fig 

realization signal message string signal string port source inv allinstances target select isempty target asset size allinstances size interaction point corresponds port type 
handles signals join leave delegates handling signals appropriate 
instance participant conference 
instances exchange message signals interaction point port 
definition signals omitted 
ocl constraint define instances fully connected links instance 
shows behaviour associated 
behaviour omitted due space limitations 
signals exchanged reliably stereotype reliable applied instances 
sm initial initial content target size target size reliable message content target initial message content reliable content port fig 

behaviour represented state machine target realized terms depicts alternative realization 
realization illustrates recursive explicitly defined platform 
part eap 
dashed line part eap denote part contained 
multiplicity eap instance decomposition 
cd port signal join signal string signal leave signal string port port fig 

alternative realization eap signal join signal notify event signal leave signal string realize interface signal notify event interface signal publish event signal subscribe signal unsubscribe accepts events subsequently forwards events objects subscribed particular event type 
participant conference 
definition behaviour omitted classes event 
realized number event platforms jms corba event service 
alternatively recursive decomposition done resulting design relies request response platform 

related mda guide provides examples generic platform types mentions briefly need generic platform model amount specification particular architectural style concepts superficial example term generic platform defined explicitly 
interpretation documentation position notion platform subsuming generic platform 
platforms relevant characteristics addition defining particular architectural style 
identified models may serve platform models different approaches platform definition incorporated mda omg core technologies uml profiles mof 
uml profile edoc component collaboration architecture cca defines implicitly platform application part interactions decomposed asynchronous messages exchanged flow ports 
profile introduces notion recursive component collaboration uml explored define platforms explicitly similarly obtained uml composite structures 
explicit platform definition comparable definition behaviour connectors architecture description languages adls rapide wright considering exclusively characteristics interaction support 
role middleware platform characteristics adls recognized mechanisms systematically separate relate platform independent platform specific descriptions proposed scope software architecture 

concluding remarks argued previously architectural concept platform prominent role mda development 
platform defines platform characteristics considered particular level may serve starting point platform specific realization 
design language concepts characteristics platforms interrelated 
careful selection design language indispensable beneficial exploitation pim psm separation definition platforms 
platform characteristics assumed implicitly designs 
may lead reused different platforms may lead directly compared integrated 
may lead transformations reused 
platform characteristics assumed platform independent designs better understood controlled designers characteristics platform explicitly represented platform definitions 
furthermore explicitly identifying platform brings attention balancing conflicting goals platform independent modelling ii platform specific realization 
discussed support concept platform standard uml implicit explicit platform definition approaches 
implicit definition approach semantic variation points uml resolved considered irrelevant deriving intended platform characteristics 
uml profiles useful approach specialise design concepts manage package platforms 
explicit definition approach uml composite structures useful defining platforms external internal perspective 
composite structures useful addition uml 
uml lacks notion behaviour conformance order relate behaviours defined highlevel abstraction refined realizations behaviours 
consequently formally assess correctness platform realizations 
example uml number platforms combined implicit explicit platform definition approaches 
intend investigate modularisation criteria platform definitions aiming obtaining architecture platform definition 
designer able compose platform platform definition modules 
modularisation ideally preserved transformation specifications ultimately platform specific level 
partly supported european commission context tel ist project www org context project ctit utwente nl 

allen garlan formal basis architectural connection 
acm transactions software engineering methodology vol 

almeida van ferreira systematic approach platform independent design service concept 
proceedings th ieee intl 
enterprise distributed object computing conference edoc 
ieee computer society los alamitos ca 
almeida van ferreira role rm odp computational viewpoint concepts mda approach 
proceedings st european workshop model driven architecture emphasis industrial applications mda ia 
ctit technical report tr ctit 
university twente netherlands 
domain analysis art form engineering discipline 
acm sigsoft software engineering notes vol 

filman bader 
eds communications acm special section aspect oriented programming vol 

ferreira architectural notes framework distributed systems development ph thesis 
university twente enschede netherlands 
itu iso open distributed processing model part foundations itu iso iec 
itu iso open distributed processing model part architecture itu iso iec 
itu iso open distributed processing model enterprise language itu iso iec 
itu recommendation ccitt specification description language 
international telecommunications union 
luckham augustin vera bryan mann specification analysis system architecture rapide 
ieee transactions software engineering vol 

luckham vera event architecture definition language 
ieee transactions software engineering vol 

microsoft microsoft net remoting technical overview available msdn microsoft com library en html asp 
di rosenblum exploiting adls specify architectural styles induced middleware infrastructures 
proceedings st international conference software engineering icse 
los angeles ca 
object management group model driven architecture mda 
object management group common object request broker architecture core specification version formal 
object management group corba component model version formal 
object management group mda guide version omg 
object management group meta object facility mof core specification ptc 
object management group meta object facility mof specification version formal 
object management group mof query views transformations rfp ad 
object management group unified modelling language object constraint language version draft adopted specification ptc 
object management group uml superstructure ptc 
object management group uml profile enterprise distributed object computing specification ptc 
object management group unified modelling language uml specification infrastructure version ptc 
object management group unified modelling language uml specification version formal 
sun microsystems java tm message service specification final release available java sun com products jms docs html 
world wide web consortium soap version part messaging framework proposed recommendation available www org tr soap part 
world wide web consortium web services description language wsdl note available www org tr wsdl 
