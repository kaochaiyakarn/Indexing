integrated shallow deep parsing topp meets hpsg frank markus becker berthold bernd kiefer ulrich sch fer dfki gmbh school informatics saarbr cken germany university edinburgh uk firstname lastname dfki de becker ed ac uk novel data driven method integrated shallow deep parsing 
mediated xml multi layer annotation architecture interleave robust accurate stochastic topological field parser german constraintbased hpsg parser 
annotation method dovetailing shallow deep phrasal constraints highly flexible allowing targeted fine grained guidance constraint parsing 
conduct systematic experiments demonstrate substantial performance gains 
strong points deep processing technology hpsg lfg parsers certainly lies high degree precision detailed linguistic analysis systems able deliver 
considerable progress area processing speed systems rival shallow medium depth technologies terms throughput robustness 
net effect impact deep parsing technology application oriented nlp fairly limited 
advent xml hybrid architectures grover lascarides possible integrate added value deep processing performance robustness shallow processing 
far integration largely focused lexical level improve urgent needs increasing robustness coverage deep parsing systems part supported bmbf dfki project whiteboard iw 
lexical coverage 
integration grover lascarides restricted morphological pos information extended shallow deep integration lexical level lexico semantic information named entity expressions including multiword expressions 
assume vertical pipeline scenario shallow nlp tools provide xml annotations system preprocessing lexical interface 
perspective opened multi layered data centric architecture broader encourages horizontal cross effects complementary competing components 
culprits relative inefficiency parsers high degree ambiguity large scale grammars resolved larger syntactic domain 
hybrid shallow deep platform take advantage partial knowledge provided shallow parsers pre structure search space deep parser 
complement efforts lexical side integration phrasal level 
show may lead considerable performance increase component 
specifically combine probabilistic topological field parser german becker frank hpsg parser 
hpsg grammar originally developed ller kasper significant performance enhancements 
section discuss mapping problem involved syntactic integration shallow deep analyses motivate choice combine hpsg system topological parser 
section outlines basic approach syntactic shallow deep integration 
section introduces various confidence measures fine tuning phrasal integration 
sections report experiments results integrated shallow deep parsing measuring effect various integration parameters performance gains component 
section concludes discusses possible extensions address robustness issues 
integrated shallow deep processing prime motivation integrated shallow deep processing combine robustness efficiency shallow processing accuracy fine deep processing 
shallow analyses pre structure search space deep parser enhancing efficiency 
deep analysis fails shallow analysis act guide select partial analyses deep parser chart enhancing robustness deep analysis informativeness combined system 
concentrate usage shallow information increase efficiency potentially quality hpsg parsing 
particular want analyses delivered efficient shallow parser pre structure search space hpsg parsing enhancing efficiency guiding deep parsing best analysis suggested shallow analysis constraints 
search space hpsg chart parser effectively constrained external knowledge sources deliver compatible partial subtrees need checked compatibility constituents derived deep parsing 
raw constituent span information guide parsing process penalizing constituents incompatible precomputed shape 
additional information proposed constituents categorial featural constraints provide criteria compatible penalising incompatible constituents deep parser chart 
obvious challenge approach identify suitable shallow knowledge sources deliver compatible constraints hpsg parsing 
shallow deep mapping problem chunks delivered state art shallow parsers isomorphic deep syntactic analyses explicitly encode phrasal embedding structures 
consequence boundaries deep grammar constituents predetermined basis shallow chunk analysis 
prevailing greedy bottom processing strategies applied chunk parsing take account macro structure sentences 
easily trapped cases 
rumor going bought french competes supercomputers 
rumor going bought french competes supercomputers 
fred eats pizza mary drinks wine 
sum state art chunk parsing provide sufficient detail required accuracy act guide deep syntactic analysis 
stochastic topological parsing revived interest shallow analyses determine clausal macro structure sentences 
topological field model german syntax divides basic clauses distinct fields pre middle fields delimited verbal sentential markers constitute left right sentence brackets 
model clause structure underspecified partial non sentential constituent structure provides theory neutral model sentence macro structure 
due linguistic underpinning topological field model provides pre partitioning complex sentences highly compatible deep syntactic analysis ii maximally effective increase parsing efficiency interleaved deep syntactic analysis iii partiality regarding constituency non sentential material ensures robustness coverage processing efficiency 
becker frank explored stochastic approach topological field parsing training non lexicalised pcfg topological corpus derived treebank german 
measured basis hand corrected pos tagged input provided treebank parser achieves coverage length 
labelled precision recall 
perfect match full tree identity cf 
table 
topological parser provided tagger front free text processing tnt tagger brants 
grammar ported efficient parser schmid 
tagging inaccuracies lead drop percent vf topic lk cl mf rk nf art nn art nn cl der tte eine andere dimension dimension lk compl mf rk wenn er dabei re topo hpsg type root id map constr id constr cp conf left right map constr id constr vf conf left right map constr id constr rk conf left right map constr id constr rk complex conf left right map constr id constr vp rk conf left right map constr id constr vp rk conf left right map constr id constr rk nf conf left right map constr id constr vl compl conf left right map constr id constr vl compl vp conf left right map constr id constr vl rk fin complex conf left right topo hpsg np nom sg np nom sg eps np nom sg der eps np acc sg eps eps cp mod eine ap att andere dimension wenn np nom sg er pp dabei le topological tree param 
cat topo hpsg map constraints tree skeleton hpsg analysis dis perfect lp lr cb cb amb rage match table correct tagger pos input 
eval 
atomic vs parameterised category labels 
age points lp lr percentage points perfect match rate table 
seen topological trees away non sentential constituency phrasal fields mf middle field vf pre field directly expand pos tags 
contrast perfectly render clausal skeleton embedding structure complex sentences 
addition parameterised category labels encode larger syntactic contexts constructions clause type cl rel inflectional patterns verbal clusters rk 
properties high accuracy rate perfect candidates tight integration deep syntactic analysis 
due combination scrambling discontinuous verb clusters german syntax deep parser confronted high degree local ambiguity resolved clausal level 
highly lexicalised frameworks hpsg lend naturally topdown parsing strategy 
topological analyses guide hpsg provide external top information bottom parsing 
topp meets hpsg aims integration topological hpsg parsing data centric architecture component acts independently contrast combination different syntactic formalisms unified parsing process 
data integration favours modularity facilitates flexible targeted dovetailing structures 
mapping topological hpsg structures structurally similar topological trees fully isomorphic hpsg structures 
span verb tte sentence forms constituent hpsg analysis topological tree span dominated sequence categories lk mf rk nf 
due linguistic underpinning topological tree systematically predict key constituents corresponding target hpsg see section comparison integrated chunk dependency parsing 
example 
analysis 
know example span fronted verb lk till clause cl corresponds hpsg phrase 
position follows verb leftmost daughter mf left edge traditional vp 
spans vf clause categories cl exactly match hpsg constituents 
category cl tells need fronted verb position lk daughter cl expect position lk finite verb right verbal complex rk spans positions 
order communicate structural constraints deep parser scan topological tree relevant configurations extract span information target hpsg constituents 
resulting map constraints fig 
encode bracket type name identifies target constituent left right boundary concrete span sentence consideration 
span encoded word position index input identical parsing processes 
addition pure constituency constraints skilled grammar writer able associate specific hpsg grammar constraints positive negative bracket types 
additional constraints globally defined permit finegrained guidance parsing process 
information cf 
section communicated deep parser way xml interface 
annotation integration annotation architecture xml encoded analysis results components stored multi layer xml chart 
architecture employed improves providing central whiteboard annotation transformer supports flexible powerful access transformation xml annotation standard xslt engines see sch fer details 
shallow deep integration fully annotation driven 
complex xslt transformations applied various analyses order currently extract different bracket types 
currently assume identical tokenisation accommodate distinct tokenisation regimes map tables 
advantages see xslt approach minimised programming effort target implementation language xml access ii reuse transformation rules multiple modules iii fast integration new xml producing components 
extract combine independent knowledge sources including xpath access information stored shallow annotation complex xslt transformations output topological parser extraction bracket constraints 
shaping deep parser search space hpsg parser active bidirectional chart parser allows flexible parsing strategies agenda parsing tasks 
compute priorities tasks information sources consulted estimated quality participating edges external resources pos tagger results 
object oriented implementation priority computation facilitates exchange combination different ranking strategies 
extending current regime uses pos tagging prioritisation utilising phrasal constraints brackets topological analysis enhance hand crafted parsing heuristic employed far 
conditions changing default priorities bracket pair computed topological analysis comes bracket type defines behaviour priority computation 
bracket type associated set positive negative constraints state set permissible forbidden rules feature structure configurations hpsg analysis 
bracket types fall main categories left right matching brackets 
bracket may affect priority tasks resulting edge right bracket pair example task combine edges fig 

left matching brackets analogously 
fully matching brackets tasks produce edge matches span bracket pair affected task combines edges fig 

addition specified rule feature structure constraints hold task rewarded positive constraints penalised negative ones 
tasks produce crossing edges endpoint lies strictly inside bracket pair lies strictly outside penalised task combines edges behaviour implemented efficiently assume computation task pri parsing task encodes possible combination passive active chart edge 
see 
prins van noord related 
br br example chart bracket pair type 
dashed edges active 
takes account priorities tasks builds 
guarantees effect changing task parsing process propagate depending tasks having check bracket conditions repeatedly 
task sufficient examine endpoints building edges determine priority affected bracket 
cases occur 
new edge spans pair brackets match 
new edge starts ends brackets match left right hit 
bracket pair joint building edges start endpoint lies strictly inside brackets crossing edges fig 

bracket endpoints edges default priority left right matching brackets match behaves exactly corresponding left right hit 
computing new priority priority task changed change computed relative default priority 
alternative confidence values hand coded parameter adjust impact default priority heuristics 
conf br specifies confidence concrete bracket pair type sentence tree entropy topological parse 
conf specifies measure expected accuracy bracket type 
sec 
introduce measures 
priority task involving bracket computed default priority confidence measures way calculating priorities allows flexible parameterisation integration bracket constraints 
topological parser accuracy high need partially wrong analyses counter expected performance gains 
important factor confidence new sentence best parse delivered topological parser confidence high want fully considered prioritisation low want lower impact completely ignore proposed brackets 
experiment alternative confidence measures expected accuracy particular bracket types extracted best parse delivered ii tree entropy probability distribution encountered topological parse measure accuracy best parse proposed extracted brackets 
conf accuracy map constraints determine measure expected accuracy map constraints computed precision recall bracket types comparing extracted brackets suite best delivered topological parses brackets extracted trees manually annotated evaluation corpus becker frank 
obtain precision recall brackets extracted best topological parse run tnt front 
chose precision extracted bracket types static confidence weight prioritisation 
precision figures distributed follows bracket types precision avg bracket mass precision avg bracket mass 
precision avg bracket mass 
experiments threshold conf bracket type set threshold value excludes bracket types bracket mass includes chunk brackets see section 
conf entropy parse distribution precision bracket types static measure independent structural complexity particular sentence tree entropy defined entropy probability distribution set parsed trees sentence 
useful measure assess certain parser best analysis measure training utility value data point context sample selection hwa 
employ tree entropy measures conceivable extract brackets best topological parses associating weights methods similar carroll briscoe 
precision recall coverage normalized entropy effect different thresholds normalized entropy precision recall coverage confidence measure quality best topological parse extracted bracket constraints 
carry experiment assess effect varying entropy thresholds precision recall topological parsing terms perfect match rate show way determine optimal value 
compute tree entropy full probability distribution normalise values distributed range 
normalisation factor empirically determined highest entropy sentences training set 
experimental setup randomly split manually corrected evaluation corpus becker frank sentence length training set sentences test set sentences 
yields values training set test set brackets initial perfect match rate lp lr 
coverage 
evaluation measures task identifying perfect matches set parses give standard definitions precision proportion selected parses perfect match perfect match rate recall proportion perfect matches system selected 
coverage usually defined proportion attempted analyses parse 
extend definition treat successful analyses high tree entropy coverage 
fig shows effect decreasing entropy thresholds precision recall coverage 
unfiltered set sentences 
lowering possibly higher values test set clipped 
evaluation figures experiment disregarding parameterisation punctuation corresponding row figures table 
precision recall measure normalized entropy maximise measure training set determine best entropy threshold creases precision decreases recall coverage 
determine measure composite measure precision recall equal weighting 
results measure target function training set determine plausible 
measure maximal see 
precision recall resp 
coverage goes 
applying test set get results precision recall 
coverage goes 
lp lr 
confidence measure distribute complement associated tree entropy parse tree global confidence measure brackets extracted parse conf ent thresholded version conf set threshold 
experiments experimental setup experiments subset corpus sents currently parsed hpsg grammar 
average sentence length ignoring punctuation average lexical ambiguity entries word 
baseline performed run topological information including pos prioritisation tagging 
series tests explores effects alternative parameter settings 
test impact chunk information 
test set different corpus section 
comparative run pos established speed factor baseline experiment slight increase coverage 
compares speed factor reported integration pos guidance dependency parser 
phrasal fields determined topological parsing fed chunk parser brants 
extracted np pp bracket constraints defined left matching bracket types compensate non embedding structure chunks 
chunk brackets tested conjunction topological brackets isolation labelled precision value brants uniform confidence weight 
measures runs measure absolute time number parsing tasks needed compute reading 
times individual runs normalised number executed tasks second 
noticed coverage integrated runs decreased test items typical loss 
warrant just trading coverage speed derived measures primary data upper bound associated unsuccessful parse time number tasks limit passive edges hit lower bound removed expensive parses run reached coverage 
upper bound certainly realistic application context lower bound gives worst case estimate speed 
integration parameters explored range weighting parameters prioritisation see section table 
global settings heuristic parameter 
setting confidence measure causes priority affected parsing task decreased half value 
setting drastically increases influence topological information priority rewarded tasks doubled set zero penalized ones 
runs rows ignore confidence parameters conf measuring effect higher lower influence topological information 
remaining runs impact confidence measures conf tested individually setting resp 
alternative value 
runs set resp 
confidence values drop certain threshold zero pt exclude un experiments run mhz pentium iii machine 
runs maximum number passive edges set comparatively high value 
factor msec st tasks low low low baseline integration topological brackets parameters pt pet pt pt chunk topological brackets pt pt chunk brackets pt table priority weight parameters results certain candidate brackets bracket types 
runs including chunk bracketing constraints chose thresholded precision pt confidence weights topological chunk brackets 
discussion results table summarises results 
high impact bracket constraints results lower performance gains moderate impact rows vs 
possible interpretation high wrong topological constraints strong negative priorities mislead parser 
confidence weights yields best performance gains particular thresholded precision bracket types pt tree entropy comparable speed factor averaged 
thresholded entropy yields slightly lower gains 
due non optimal threshold fact precision differentiates bracket types terms confidence small number brackets weakened tree entropy global measure penalizes brackets sentence equal basis positive effects seen may contribute useful information 
additional chunk brackets row leads slight decrease probably due lower precision chunk brackets 
isolated chunk information row yield signifi baseline pt msec sentences performance gain loss sentence length cant gains baseline 
similar results reported integration chunk dependency parsing 
pt shows substantial performance gains outliers range length 
sentences length avg 
took longer parse time compared baseline variance margin 
coverage losses isolated factors erroneous topological information lead parser astray cases topological information prevented spurious hpsg parses surface 
suggests integrated system bears potential crossvalidation different components 
demonstrated integration shallow topological deep hpsg processing results significant performance gains factor high level deep parser efficiency 
show constraints derived topological parsing improve significantly chunk constraints 
fine grained prioritisation terms confidence weights improve results 
annotation architecture easily extended address robustness issues lexical matters 
extracting spans clausal fragments topological parses case deep parsing fail report gain factor relative non pos guided baseline reduces factor relative pos prioritised baseline scenario 
ure chart inspected spanning analyses sub sentential fragments 
simplify input sentence pruning adjunct trigger pruned input 
becker frank 

stochastic topological parser german 
proceedings coling pages taipei taiwan 
brants 

tnt statistical part speech tagger 
proceedings eurospeech rhodes greece 


pet platform experimentation efficient hpsg processing techniques 
natural language engineering 
carroll briscoe 

high precision extraction grammatical relations 
proceedings col ing pages 
frank kiefer st ller sch fer siegel xu becker 
krieger 

integrated architecture deep shallow processing 
proceedings acl pittsburgh 
menzel 

constraint integration deep shallow parsing techniques 
proceedings eacl budapest 


topological dependency trees constraint account linear precedence 
proceedings acl 
grover lascarides 

xml data preparation robust deep parsing 
proceedings acl eacl pages toulouse france 



unpublished manuscript university cologne 
hwa 

sample selection statistical grammar induction 
proceedings emnlp vlc pages hong kong 
ller kasper 

hpsg analysis german 
wahlster editor verbmobil foundations speech speech translation artificial intelligence pages 
springer berlin 
prins van noord 

unsupervised improves parsing accuracy parsing efficiency 
proceedings iwpt beijing 
sch fer 

xslt infrastructure integration natural language processing components 
proceedings workshop hlt naacl edmonton canada 
schmid 
design implementation 
ims stuttgart 
des sfb nr 

brants 

chunk tagger statistical recognition noun phrases 
esslli workshop automated acquisition syntax parsing 


new chances deep linguistic processing 
proceedings coling pages xiv taipei taiwan 
