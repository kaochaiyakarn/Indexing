gradient broadcast robust data delivery protocol large scale sensor networks fan ye gary zhong lu lixia zhang computer science department university california los angeles ca phone fax cs ucla edu data forwarding algorithms protocols rst set issues explored sensor networking reliably deliver sensing data vast eld small vulnerable sensors remains research challenge 
gradient broadcast grab new set mechanisms protocols designed specifically robust data delivery face unreliable nodes fallible wireless links 
similar previous grab builds maintains cost eld providing sensor direction forward sensing data 
di erent previous approaches grab forwards data band interleaved mesh source receiver 
grab controls width band amount credit carried data message allowing sender adjust robustness data delivery 
grab design harnesses advantage large scale relies collective orts multiple nodes deliver data dependency individual ones 
evaluated grab performance analysis extensive simulation 
analysis shows quantitatively advantage interleaved mesh multiple parallel paths 
simulation con rms analysis results shows grab successfully deliver packets relatively low energy cost adverse conditions node failures compounded link message losses 
keywords sensor networks robust data delivery 
technology advances low cost low power chip designs deployment large scale sensor networks economically feasible 
thousands millions small inexpensive low power sensors berkeley motes quickly deployed monitor vast eld 
sensors collectively sense environment deliver sensing data wireless channel 
near sensor networks may play important role various applications ranging precision agriculture disaster recovery military surveillance 
hand mentioned potential applications great challenges reliable sensing data delivery 
severe operational conditions rain re strong wind high temperature may easily damage individual sensors resulting constantly changing topology 
wireless communica supported part darpa program contract number dabt 
lu supported nsf career award ani 
tions small power limited sensor nodes prone errors 
furthermore short transmission range small sensors means sensing data may travel large number hops reach intended destinations potential transmission errors unexpected node failures hop 
propose gradient broadcast grab address problem robust data forwarding data collecting unit called sink unreliable sensor nodes error prone wireless channels 
objects events monitored called stimuli 
sensor nodes detect stimulus collectively elect generates sensing report behalf group 
call node data source 
sink builds maintains cost eld 
node keeps cost forwarding packet sink 
nodes closer sink smaller costs 
sender speci receivers continue forwarding grab receiver decides forward packet comparing cost sender 
result sensing data follow direction descending cost reach sink 
multiple paths exist source sink source assigns credit report sends control degree path redundancy 
credit extra budget enables packet forwarded mesh interleaved paths cost greater total budget credit plus cost source 
amount credit determines width mesh degree robustness overhead 
grab design harnesses advantage large scale 
achieves system robustness relying collective orts multiple sensors dependency individual 
packet forwarded multiple paths improves reliability 
interleaving paths provides tolerance node failures link errors individual path signi cantly increasing data delivery robustness shown analysis section 
receiver decides forward packet sender need keep state information neighbor forward data 
elimination explicit path state removes overhead complexity repairing paths failed nodes broken links packet simply travels whichever working nodes reach sink 
credit provides control knob tune robustness degree total cost 
rest organized follows design grab section analyze robustness complexity section 
section evaluate performance compare existing protocol 
section discusses di erences grab related orts sensor networking 
section summarizes sketches plan 

design overview assume sensor network model shown large numbers small stationary sensor nodes deployed eld 
user collects sensing data stationary sink bottom gure communicates network 
stimulus detected multiple nearby sensor nodes generates reports source upper left corner 
due limited radio range reports forwarded hops reaching sink 
nodes tune transmitting powers control far transmission may reach 
power adjustments save energy reduce collisions possible nodes csma mac communicate reliable dcf rts cts ack exchange 
external noises disturbances may exacerbate channel quality 
due harsh environment sensor nodes su er unpredictable possibly frequent failures 
example sink stimulus illustrate grab works 
collect data reports sink rst builds cost eld propagating advertisement adv packets network 
cost node minimum energy overhead forward packet node sink path 
assume node estimate cost sending data nearby neighbors signal noise ratio neighbors transmissions 
costs nodes network form cost eld imagine node elevated height proportional cost cost eld look funnel see nodes closer sink smaller costs lower farther away greater costs higher 
cost eld gives global direction sink implicitly 
node forwards packet designate nodes hop 
simply includes cost packet 
neighbors smaller costs may continue forwarding packet 
neighbors higher equal costs silently drop packet wrong direction 
packets travel cost eld water ows bottom funnel follow direction decreasing cost reach bottom cost eld sink 
multiple paths decreasing cost exist interleave form forwarding mesh 
election source follows mechanism 
existing hardware di erent levels transmitting power 
cost may take di erent forms hop number energy overhead physical distance 
current energy form meant save scarce energy resources nodes 
adv packet may carry user interests task sensor nodes 
want node generate report waste resources node detecting stimulus sends report 
stimulus creates eld sensing signal strength shape similar cost eld 
node broadcasts message indicating signal strength random delay avoid collision 
node rebroadcasts signal strength hears neighbor message weaker signal stops broadcasting hears stronger 
way messages roll center signal strength eld 
node strongest signal generates report 
call node center stimulus cos 
cos election data forwarding utilize concept gradient eld intensity property varies distance 
di erences signal strength eld exists physical world cost eld artifact created sink nodes farther stimulus weaker signals nodes farther sink greater costs stimulus detected data come directions center forwarding come direction source 
usually paths decreasing cost exist want limit width forwarding mesh 
packet follow possible path decreasing cost creating excessive redundancy wasting resources 
control width source assigns credit packets sends 
credit extra budget consumed forward packet 
sum credit source cost total budget send packet sink path 
packet take path requires cost equal total budget 
amount credit controls redundancy mesh 
credit packet forwarded single minimum cost path source credit added increase budget paths available deliver packet 
paths minimum cost path form forwarding mesh dynamically combined ect cost eld credit value carried packet see example 
nal point presenting design number sources sinks grab design support 
simplify presentation example stationary source cos stationary sink 
point grab supports data forwarding multiple mobile stimuli 
stimulus tank moves location di erent cos sensor elected generate report old cos node stops reporting automatically nds longer center stimulus 
case multiple stimuli works similar way 
exact details focuses robust data forwarding 
rest section give brief summary section algorithm proposed previous build cost eld eciently 
grab forwarding algorithm section 
shape cost eld funnel sink sitting bottom 
packets follow decreasing cost direction reach bottom cost eld sink 
source sink forwarding mesh starts source ends sink 
black nodes forward packet sink collectively 
notice nodes outside mesh receive packet forward 
building maintaining cost field cost eld built straightforward way 
sink broadcasts advertisement packet adv announcing cost 
node initially cost 
hearing adv packet containing cost sender node calculates cost adding link cost sender sender advertised cost 
compares cost previously recorded sets new cost smaller 
obtains cost smaller old broadcasts adv packet containing new cost 
rippling adv packets sink outwards builds cost eld sink problem method excessive adv messages prevent scaling large numbers nodes 
node settles minimum cost may hear adv packets results smaller cost previous 
node broadcasts adv packets 
build cost eld scalable manner proposed waiting algorithm proved ensures node broadcasts minimum cost 
node cost depends topology 
topology changes nodes fail exhaust energy new nodes deployed 
initially built cost eld inaccurate 
grab forwarding protocol highly robust inaccuracies cost eld see section cost eld refreshed time keep forwarding ecient 
avoid overhead periodic refreshing choose event driven design 
sink keeps pro le history data reports source 
includes originally grab gets name 
gradient stands cost broadcast gradients builds cost eld 
notice word gradient completely di erent stands vector pointing hop neighbor 
success ratio packets sequentially numbered sink calculate success ratio average consumed budget average number copies received packet reports 
new packet received sink compares parameters packet past 
parameter di ers past certain threshold sink broadcasts new adv packet rebuild cost eld 
due space limit details technical report 
rationale event driven refreshing topology changes bring variations data delivery 
monitoring certain parameters re ect quality data delivery tell amount change happened 
major changes data delivery deteriorate acceptable levels trigger 
forwarding algorithm robust withstand signi cant amount changes shown section 
proceed forwarding algorithm want point solves problem building cost eld 
address robust data delivery unreliable sensor nodes 
credit robust forwarding mesh cost eld built source sends report carries credit 
hop nodes costs smaller sender forward packet 
ensure robust forwarding mesh need address issues 
expand mesh sucient width quickly starting source 
robust mesh wide contain sucient parallel nodes paths 
node failures packet losses sucient width ensures nodes deliver packets successfully hop 
node source rst hop need expand mesh sucient width quickly 
delivery may fail mesh grows wide 
second establishing sucient width mesh maintain 
node may fail unexpectedly may receive packet number parallel nodes forward packet tend decrease hop 
measure taken counteract tendency mesh narrow 
prevent packets traveling paths diverting direction sink 
sender roughly half neighbors smaller costs 
directions decreasing costs followed forwarding di sector shape packets divert signi cantly direction sink 
want packets diverting paths 
solutions issues address rst issues divide total amount credit di erent hops way hops consume larger shares credit hops consume smaller shares 
share credit node receives decides expand mesh 
node bonus budget equal cost reach hop neighbor minimum cost path expanding mesh 
node bonus credit consume budget reaching receivers expanding mesh 
hops credit expand mesh quickly hops need credit need expand mesh 
receive certain credit prevent mesh narrows due node failures packet losses 
solve issue 
packet quite path divert direction sink consume credit traveling proportionately close sink 
analogy spending month budget days 
comparing remaining credit remaining distance ahead nodes discover terminate packets 
achieve desired division credit di erent hops detect diverting packets mechanism threshold function indicating relative position node source sink 
packet carries certain dynamic state node calculate credit remains 
node compares remaining credit threshold discovering packet consumed credit 
format threshold function chosen carefully divides credit required 
rst describe carried packet detailed forwarding algorithm 
grab forwarding algorithm packet carries elds amount credit assigned packet source 
determines width forwarding mesh 
eld change packet travels source sink calculating credit packet reach sink receiver needs total budget consumed receiver amount amount credit sink 
cost source send packet sink 
calculate threshold 
eld change di erent hops 
amount budget consumed source current hop 
accumulative sum initial cost source broadcast packet cost forward packet hop 
cost current sender broadcasts packet 
cos assigns data report lls elds broadcasts packet 
receivers smaller costs may forward packet hop packet forwarded successive nodes decreasing costs 
traverse back node loops occur 
receiver nds cost report calculates compares values thresh follows 
thresh equations stands amount credit consumed amount total budget required node forward packet path sink successfully see 
minimum amount achieved packet takes minimum cost path node sink 
extra amount credit consumed 
represents fraction credit available node hops 
thresh indicates normalized distance node sink 
numbers range 
node compares thresh greater thresh consider node sucient credit 
broadcasts power reach multiple neighbors sink de ne neighbors smaller costs node nearer neighbors 
amount power depends degree robustness desired 
higher robustness requires nearer neighbors 
current design node broadcast packet power reach closest nearer neighbors 
node knows power adv messages received cost eld building 
increases amount budget going consume broadcasting sets cost 
broadcasts packet reach nearer neighbors 
smaller node sucient credit forward packet minimum cost path minimize total cost 
node sends packet hop neighbor minimum cost path 
sets packet accordingly 
completeness pseudo code shown appendix 
reduce collisions forwarding node waits random time sending packet neighboring senders broadcast simultaneously result collisions 
possible node receives multiple copies packet di erent upstream nodes copy credit 
suppress duplicates node maintains cache stores signatures forwarded packets 
signature packet header packet hash packet calculated demand 
serves identi er distinguish packets 
signature received packet cache packet dropped 
notice optimization technique fundamental requirement design 
number parameters needed forwarding packet impact delivery robustness needs set appropriately 
parameters depend solely topology set arbitrarily 
generally speaking large ensure robustness big cause excessive energy consumption 
evaluation impact section 
theoretical analysis section analyze chosen threshold function favors hops gives shares credit allow quick expansion mesh 
compare robustness interleaved forwarding mesh multiple disjoint paths 
give complexities algorithm 
credit division different hops call number nearer neighbors reach branching factor represents tradeo robustness energy 
experiments analysis section show appropriate number 
derive maximum share credit hop consume requirement sucient credit remain hop 
achieved remaining credit ratio equal threshold thresh simplify analysis simple model chain nodes cos sink cost node proportional number hops sink 
denote node cost ca ca ca ca 
ca derivatives ca ca source allowed energy consumption hop 

ca 
ca source ca eqn 
amount budget consumed consists parts 
ca denotes minimum required budget go hop link cost hop 

ca source ca share credit hop 

ca constant share credit proportional ca higher node cost credit 
analysis simpli ed model shows quantitatively nodes closer source generally credit farther away 
forwarding mesh expand aggressively initially having credit maintain width 
explore forms threshold function section 
interleaving paths add robustness grab achieves robustness redundancy mesh 
carefully design choices paths mesh implicit interleaving 
implicit mean sender appoint neighbors continue forwarding packet 
receiver decide forward 
neighbors fail packet losses sender performs operations 
long surviving neighbors receive packet continue forwarding hop 
lack explicit path state eliminates need repair broken paths 
interleaving mean paths disjoint intersect 
robust multiple disjoint paths single node failure packet loss destroys forwarding path path high probability fail hops source sink 
contrast interleaving paths recover node failures packet losses 
example exist disjoint paths 
fails receive packet paths fail deliver single node failure packet loss single path interleaving paths recover failures packet losses forwarding model disjoint multiple paths forwarding model interleaving paths grab packet 
contrast failure packet losses receive broadcast 
path recovered 
similarly path recovered broadcasts 
quantify robustness packet losses node failures model nodes hop nodes hop send packet 
grab node sends nodes hop multiple disjoint paths node sends node hop illustrated 
probabilities node failure packet loss link want derive fail fail probabilities packet fail reach node hop disjoint paths grab 
denote probability packet reaches node hop 
obvious fail 
consider packet losses assuming 
fail interleaved forwarding mesh de ne probability nodes hop send packet nodes hop receive probability hop nodes send packet hop node receive packet hop node receives packet forwarding fails exactly hop fail recursive equations values parameters solve recursive equations numerically compare robustness grab disjoint paths 
plots fail grab disjoint paths hop nodes 
disjoint paths hops packets lost 
small help hops packets lost 
contrast interleaved mesh grab packets lost hops 
smaller packets travel far hops 
shows interleaved mesh signi cantly robust disjoint paths 
increasing number nodes row help disjoint paths quite limited extend 
gives fail grab disjoint paths di erent xed 
number paths increases packets travel farther disjoint paths 
hops packets lost disjoint paths 
grab nodes row hops amount packets lost 
node added row results improve magnitude packets travel hops increases fail negligible 
shows increasing parallelism help disjoint paths improves robustness interleaved mesh drastically 
consider node failures packet loss 
fail fail plots schemes node failure rates number nodes row xed 
disjoint paths hops packets lost grab hops 
comparisons node failure rates reveal observation grab magnitudes robust disjoint paths node failures 
similarly vary see increased parallelism improves robustness grab disjoint paths 
observation increasing improves robustness grab drastically result experiments reason choose branching factor 
number hops grab grab grab grab disjoint disjoint disjoint disjoint probability packet fails reach hop function hop number di erent packet loss rate xed number hops fail grab grab grab disjoint disjoint disjoint probability packet fails reach hop function hop number di erent number nodes row xed number hops grab grab grab disjoint disjoint disjoint probability packet fails reach hop function hop number di erent node failure rates xed number hops grab grab grab disjoint disjoint disjoint probability packet fails reach hop function hop number di erent numbers nodes row xed slightly disjoint paths 
robustness grab shown evaluation section simple analysis due number factors node send multiple neighbors packets may collide combined ect node failure packet loss demonstrates advantage implicit interleaving paths disjoint ones 
complexities forwarding algorithm sink node state including cost ca reach sink cost reach closest nearer neighbors 
states credit carried packet kept node 
state complexity independent number sources 
state complexity proportional number sinks 
sinks state 
note cache constant size independent number sources sinks 
computing overhead data report constant 
report node needs compute remaining credit ratio threshold thresh requires constant amount calculation 
node failures packet losses node performs operations 
computation nd new paths replace broken ones 
total computing overhead proportional number packets node forward 
energy overhead consists parts forwarding cost eld building 
data report node sends due duplicate suppression 
energy forwarding proportional number data reports 
cost eld building prove node broadcasts refreshing cost eld 
part energy proportional number times cost eld refreshed number sinks 

performance evaluation section evaluate performance grab simulations 
implemented grab forwarding protocol parsec due ability scale large numbers nodes 
select sensor hardware parameters similar berkeley motes 
maximum transmission range node meters node adjusts transmitting power reach range 
simulated test scenarios ray ground free space signal amount normalized credit source success ratio di erent amount normalized credit source energy consumption di erent amount normalized credit source number control packet control packet number di erent propagation models 
due space limitation results 
power consumptions full power transmitting receiving idling mw mw mw 
transmission receiving time packet ms scenarios eld size nodes uniformly distributed 
sink source sit opposite corners eld 
source generates report packet seconds 
run reports generated 
average number hops source minimum hop path minimum cost path respectively 
packet losses simulated probability dropping packet receiver 
packet loss rate de ned probability 
node failures uniformly distributed time 
fraction failed nodes de ned node failure rate 
test grab achieves goal robust data delivery measure success ratio ratio number report packets successfully received sink total number generated source 
indicates degree robustness grab forward data presence node failures packet losses 
see grab satis es robustness cost excessive overhead measure total energy consumption control packet overhead 
total energy consumption total amount energy consumed simulation 
shows energy grab incurs robust data delivery 
control packet overhead number control packets simulation 
results averaged di erent runs 
rst evaluate impact control parameters including amount credit threshold function impact various environmental settings including node failure rate packet loss rate node density size eld 
compare grab directed di usion 
impact control parameters different amounts credit amount credit directly ects degree robustness 
nd credit robust delivery vary amount credit times results free space model similar 
source cost reach sink 
xed node failure xed packet loss rate runs 
shows success ratio function normalized source cost 
credit small chance successful delivery small 
reports lost 
hops source sink node failures packet losses happen frequently 
increases success ratio improves steadily 
gives success ratio 
amount credit sucient forwarding robust 
report packets successfully delivered sink shows credit decides degree robustness 
sucient credit ensure robustness 
nd grab consumes excessive energy ensure robustness gives total energy consumption function small joules consumed 
increases total energy increases 
total energy reaches joules joules 
energy data delivery building cost eld 
total energy decreases joules 
uctuation small compared total amount 
grab ecient achieve robustness cost excessive energy consumption 
decrease total energy high little counterintuitive data packets successfully delivered energy 
decrease comes reduced control packets 
shows control packet overhead 
small big delivery quality constantly low high 
measured parameters delivery quality sink seldom di er history thresholds 
happen total energy consumption 
number control packet average cost eld re buildings happen 
medium delivery quality stable sucient transmitting energy cost 
mean times total energy consumed 
ray ground model transmitting power increases linearly th power distance 
times power means times distance average 
free space model sucient topologies 
normalized credit source threshold source threshold source threshold source threshold source success ratio di erent threshold functions normalized credit source threshold source threshold source threshold source threshold source energy consumption di erent threshold functions normalized credit source total number control packet threshhold source threshhold source threshhold source threshhold source control packet number di erent threshold functions measured parameters di er averages thresholds triggering energy consumption 
number control packets reaches cost eld re buildings happen 
di erent control packet overhead shows event driven cost eld refreshing adapt delivery quality 
delivery quality stable constantly low constantly high improve success ratio improvement 
grab 
delivery quality stable sink refreshes cost eld packets reach sink successfully delivered improvement 
different threshold functions form threshold function decides credit di erent hops 
evaluate di erent threshold functions ca ca ca ca ca cost receiving node cost source reach sink 
repeat simulations section 
success ratio energy consumption control packet overhead shown respectively 
success ratios threshold ca smaller 
energy consumption control packet overhead obviously higher similar energy consumption control packet overhead 
metrics change threshold functions ca ca ca 
give credit hops amount hops forwarding mesh expand quickly maintain certain width 
impact environmental settings node failures packet losses evaluate robustness grab studying node failures packet losses ect success ratio section 
rst vary node failure rate xed packet loss rate 
vary packet loss rate xed similar analysis credit analysis section 
node failure rate 
amount credit set 
value achieves higher success ratio previous section 
shows success ratio functions node failure rate packet loss rate 
rst look impact node failures 
success ratio node failure rates 
node failure rate continues increase success ratio tends decrease grab maintains high degrees robustness 
success ratio remains nodes fail extreme case half nodes fail 
shows grab robust severe node failures 
packet loss rates success ratio 
success ratio drops quickly 
packet loss rate success ratio 
compared node failure cases grab robust packet loss rate high 
acknowledgment retransmission recover lost packet csma mac 
node failures long surviving nodes cost eld refreshing resume data delivery 
grab delivers reports successfully node failure rates packet loss rates 
high success ratio demonstrates grab highly tolerate inaccurate cost elds node failures packet losses cause inaccuracies cost eld building 
energy consumptions shown 
node failure increases energy decreases linearly 
idle energy dominates total energy consumption 
higher node failure rates means node failures proportionally energy consumption 
di erent packet loss rates energy remains constant increasing joules packet loss rate grows 
energy consumed data delivery spent rebuilding cost eld 
total energy increases little 
impact node density nd density nodes ect robustness grab keep eld size varying number nodes 
node failure rate packet loss rate 
shows success ratio changes di erent node numbers 
success ratio low node numbers 
node failure rate loss rate success vs node failure fixed packet loss success vs packet loss fixed node failure success ratio node failures success ratio packet losses node failure rate packet loss rate total energy vs node failure fixed packet loss total energy vs packet loss node failure energy consumption node failures energy consumption packet losses total number nodes success ratio success ratio di erent node densities reason initial low success ratios nearer neighbors node density low 
variations topology exacerbates situation 
forwarding stops nearer neighbors combat node failures packet losses 
starting nodes success ratio remains high remaining densities 
total energy depends number nodes normalize energy consumption node 
remains constant joules 
impact field size scalability study grab scales large numbers hops data delivery 
keep average node density varying eld number hops source sink changes proportion hops hops 
node failure rate packet loss rate xed 
nd regardless eld size success ratio demonstrates grab ensures robustness data delivery large number hops 
comparison diffusion implemented grab ns compared performance directed di usion 
nodes eld 
source sink sit opposite corners eld 
possible grab uses parameters ns di usion code 
transmitting receiving idling power consumptions respectively 
source generates report half second 
di erence grab uses csma communication reliable dcf mac di usion rts cts ack 
evaluated performance kinds node failure models uniform node failure node failures exception eld variation topology caused disconnected source run 
average success ratio excluding exception mentioned section sender randomly waits time passing packet mac reduce collisions uniformly distributed time 
sudden node failure randomly chosen set nodes fail time 
simulate abrupt massive failure 
transient node failure similar 
randomly chosen set nodes turned seconds set chosen turned 
creates lots dynamics network tests protocols handle dynamics 
due space limitation success ratio energy consumption successful report grab maintains robust data delivery node failure models 
success ratio 
di usion high success ratio uniform node failures 
success ratio decreases node failures sudden 
drops signi cantly transient node failures 
di usion relies reinforcements repair broken paths 
high dynamics paths break frequently data lost 
grab robustness ected di erent types node failures robustness achieved reliable csma mac 
grab energy successful report tends decrease nodes fail 
nodes alive forward energy consumed 
energy change failure models 
di usion energy consumption grab sudden failure model 
consumes slightly energy uniform node failures signi cantly transient failures 
fewer reports successfully delivered sink failure models energy consumption successful report increases 
abnormal energy drop di usion transient nodes failures reports delivered energy consumed compared failure case 

related total energy consumption protocols delivers di erent numbers successful reports total energy re ect eciency 
report energy meaningful 
tells successfully deliver packet energy protocol needs consume node failure rate diffusion uniform failure diffusion sudden failure diffusion transient failure grab uniform failure grab sudden failure grab transient failure success ratio grab di usion di erent node failure models node failure rate diffusion uniform failure diffusion sudden failure diffusion transient failure grab uniform failure grab sudden failure grab transient failure energy consumption successful report grab di usion di erent node failure models plethora research orts sensor networking area years 
section describe basic di erences existing grab design 
directed di usion data forwarding protocol designed sensor networks sink interests build reverse paths potential sources sink 
grab builds eld scalar eld cost values reverse path vectors 
di usion uses reinforcement negative reinforcement mechanisms select high quality path data ow source deactivate low quality ones 
braided di usion variant directed di usion 
maintains multiple braided paths backup 
node primary path fails data go alternate path 
directed di usion braided diffusion establish explicit paths forward data node forwards data speci hop neighbor 
contract sender grab simply transmits data radio channel neighbor hop receiving node independently decides forward data 
explicit path grab data simply follows whichever surviving nodes reach destination 
di usion errors failures periodically ooding data repair paths 
grab achieves robustness exploiting redundancy interleaving paths forwarding mesh 
di usion detects forwarding loops caching previous packets 
grab packets go decreasing cost direction sink loop form 
ttdd solves problem delivering data mobile sinks constant motion 
builds grid structure source 
impact mobile sink con ned local cell 
data delivery query forwarding traverse grid tier local cell tier reverse order 
ttdd address robustness issue 
single path forward data 
di usion ttdd dcf mac rts cts ack 
demonstrate robustness nodes reliable csma macs 
cost related 
compared grab waiting algorithm builds cost eld scalable fashion 
gradient routing builds uses cost eld 
control degree redundancy data forwarding 
sender broadcasts packet neighboring nodes lower costs forward packet 
grab credit carried packet ectively controls width forwarding mesh degree redundancy energy consumption 
energy aware routing sender picks neighbor forward packet probability inverse proportional cost 
packet travels di erent single path load balanced multiple paths 
grab uses multiple interleaving paths simultaneously sender decide neighbor continue forwarding 
uses cost way sender calculates includes probabilities neighbors forward packet broadcasting 
neighbor forwards corresponding probability 
probabilities control degree redundancy achieve desired toend success ratio 
grab uses credit control redundancy explicit speci cation reliability 
chen ticket idea similar credit qos routing ad hoc networks search paths satisfy delay bandwidth requirements 
number tickets carried packet decides number copies spawn copy discover path 
paths satisfy qos requirement needed data delivery 
credit grab specify number paths directly translates degree redundancy interaction cost eld 
robustness multiple interleaving paths forward data parallel 
path state kept node hop 
cost eld enables greedy forwarding hop neighbor closest destination 
gpsr geographical greedy routing protocol route packets holes planar graph 
compared cost eld grab holes 
long path exist neighbor smaller cost sender hop 
grab uses multiple interleaving paths simultaneously forward packets 
redundant mesh forwarding proposed robust multicast delivery wireless ad hoc networks 
designs exchange control messages establish explicit path state node node maintain state identify mesh 
contrast forwarding mesh grab dynamically formed combined ect cost eld credit value carried packet keeping explicit state node mesh 
routing active research area context ad hoc networks proposals appeared literature 
designed sensor networks address unique issues sensor networks 

deployment large scale sensor networks emerges horizon today facing new research challenges providing reliable sensing robust data delivery vast numbers potentially unreliable sensors 
compared data networks general individual sensors lower utilization potentially higher failure rate 
special requirements demand new solutions reliable data delivery 
grab design ensures robust data delivery large numbers hops small unreliable sensor nodes error prone wireless channels 
grab exploits large scale property sensor networks achieves robust data delivery controlled mesh forwarding 
grab builds maintains cost eld destination 
controls width forwarding mesh degree redundancy amount credit carried data packet 
analysis extensive simulations con rmed grab ectiveness providing reliable delivery severe operational conditions demonstrating principle reliable system built unreliable components 
plan improve grab credit assignment adaptive 
sink may include information re ects data delivery quality sending adv packets 
source feedback choose appropriate credit adapt network conditions 
addition credit di erent hops adapt local failure noise characteristics 
nodes neighborhood severe conditions greater shares credit measure local failures packet losses 
far focusing stationary sink 
multiple sinks needs build cost eld 
node keeps cost sink 
sink state may allow grab scale large numbers sinks directly 
sink mobility addressed current design 
straightforward solution re building cost eld sink moves may consume excessive energy bandwidth 
sink moves far away location totally new cost eld needed 
mobility low sink may leave trace moves installing state intermediate nodes 
data reaching old location follow trace reach mobile sink 
possibility set relatively stable landmarks mobile sink maintain data forwarding paths nearest landmark 
data attracted landmarks rst distributed mobile sinks 
plan investigate multiple mobile sinks 

ns network simulator 
www isi edu nsnam ns 
chen nahrstedt 
distributed quality service routing ad hoc networks 
ieee journal selected areas communications 

chiang gerla zhang 
forwarding group multicast protocol multihop mobile wireless networks 
cluster computing 
deb nath 
reliable information forwarding multiple paths sensor networks 
th annual ieee conference local computer networks 
ganesan govindan shenker estrin 
highly resilient energy ecient multipath routing wireless sensor networks 
acm mobile computing communications review vol 
october 
garcia luna aceves 
multicast routing protocol ad hoc networks 
infocom pages 
hill szewczyk woo hollar culler pister 
system architecture directions networked sensors 
international conference architectural support programming languages operating systems asplos ix 
intanagonwiwat govindan estrin 
directed di usion scalable robust communication paradigm sensor networks 
acm international conference mobile computing networking mobicom 
johnson maltz 
dynamic source routing ad hoc wireless networks 
mobile computing kluwer academic publishers 
karp kung 
gpsr greedy perimeter stateless routing wireless networks 
acm international conference mobile computing networking mobicom 
parallel computing laboratory computer science department 
parsec 
pcl cs ucla edu projects parsec 
perkins 
ad hoc demand distance vector routing aodv 
internet draft november 
poor 
gradient routing ad hoc networks 
www media mit edu pia research esp texts pdf 
shah rabaey 
energy aware routing low energy ad hoc sensor networks 
wcnc 
tsuchiya 
landmark hierarchy new hierarchy routing large networks 
computer communication review august 
ye chen lu zhang 
scalable solution minimum cost forwarding large scale sensor networks 
tenth international conference computer communications networks 
ye lu zhang 
gradient broadcast robust long lived large sensor network 
irl cs ucla edu papers grab tech report ps 
ye luo cheng lu zhang 
tier data dissemination model large scale wireless sensor networks 
acm international conference mobile computing networking mobicom 
appendix pseudo code grab forwarding algorithm 
forward received packet rep comparing cost sender rep drop packet cost higher equal drop packet calculate credit rep rep calculate remaining credit ratio rep rep calculate threshold thresh receiver rep forward packet remaining greater thresh increase total consumed cost node uses broadcast rep rep rep include cost rep broadcast rep reach nearer neighbors update rep similarly include cost rep broadcast rep reach hop neighbor table pseudo code forwarding 
