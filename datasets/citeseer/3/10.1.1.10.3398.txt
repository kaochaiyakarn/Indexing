building classes object languages automatic clustering valtchev inria alpes av 
de europe montbonnot saint martin france 
deals clustering objects described properties relations 
relational attributes may object descriptions recursively depend attribute values compared objects 
approach clustering core element object dissimilarity measure 
sorts object attributes compared uniform manner possible exploration existing taxonomic knowledge 
dissimilarity values mutually dependent object couples computed solutions system linear equations 
example building classes objects self demonstrates advantages suggested approach 
object systems provide variety tools building software models real world domains classes inheritance object composition data types result underlying data model admits highly structured descriptions complex real world entities 
number object applications constantly growing need analysis tools object datasets critical 
importance topic recognized rarely addressed literature studies concerning object knowledge representation kr systems object oriented oo databases reported past years 
concern design automatic class building tools objects complex relational structure 
compact class built top object cluster discovered automatic clustering procedure 
main difficulty clustering application faces definition consistent comparison kinds object attributes 
relations connect objects larger structures object networks may lead indirect self object descriptions 
self impossible compare object attributes comparing objects 
consequently existing approaches clustering apply self referencing descriptions 
suggest approach automatic class building core element object dissimilarity measure 
measure evaluates object attributes uniform way 
values mutually dependent object couples computed solutions system linear equations 
object sets may processed clustering tool 
discovered clusters turned object classes provided intentional description 
starts short presentation objects model discussion aspects objects similar section 
definition suitable dissimilarity measure section 
computation measure mutually dependent object couples 
section shows example application measure 
clustering class characterization discussed section 
object formalism object languages organize knowledge domain kinds entities classes objects 
domain individuals represented objects groups individuals categories give rise classes 
class associated set member objects instances 
classes objects described terms attributes capture particular aspects underlying individuals 
class description summary instance descriptions 
descriptive aspects object languages considered 
object model tropes system developed team illustrate object specific structure 
results hold larger set object models 
objects concepts classes structured object model list attribute values objects simple values 
instance object representing flat knowledge base may fields flat rent standing owner fig 
shows example object flat attributes rooms owner rent 
kinds attributes distinguished properties components links 
properties model features individual modeled example rent flat components links model relations individuals 
composition part relation individuals expressed component attributes 
attribute relates composite object collection component objects 
composition distinguished due particular nature transitive non circular relation 
example owner link rooms component 
apart nature attributes type delimits possible values 
object valued attributes typed object concepts simple values members data types called data types adt 
attributes may single value collection values case called multi valued attributes 
collections built basic type means constructor list set 
instance values rooms attribute flat set instances room concept 
high standing flat flat interval kind flat rooms rent rooms rent room room room domain basic service owner rent human owner rooms nature property cons cons set type room nature component cons nature link type real type human fig 

example concept flat class high standing instance flat 
entities provide lists attributes concept attributes specify type nature constructor necessary interpreting values instance attributes class attributes provide value restrictions instance attributes instance attributes contain values 
objects kb divided disjoint families called concepts flat human room 
object instance unique concept example flat flat concept drawn rectangle 
concepts define structure set object attributes types identity instances 
may seen upper right part fig 
flat defines type nature constructor attributes example 
concepts comparable big classes traditional oo application tables relational databases 
class defines subset concept instances called class members 
classes provide value restrictions attribute values member objects sets admissible values values attribute basic type concept 
restrictions property attributes correspond sub types adt restrictions relations classes underlying concept 
example class high standing fig 
restricts rent attribute values interval rooms attribute sets composed members classes basic service 
classes concept organized hierarchical structure called taxonomy 
object kb set concepts 
concept set instances organized class taxonomies 
objects classes different concepts connected means relational attributes 
summary objects data model object member entire set instances defined concept 
class defines sub set instances 
quite way simple values members domain adt types define subsets adt values 
objects simple values identity attributes 
objects seen points multi dimensional space determined object concept dimension corresponds attribute 
class describes region space member object lays exclusively region 
furthermore dimensions corresponding relational attributes spaces 
relation establishes dependency source concept target concept instances described means instances 
overview inter concept dependencies provided graphical structure henceforth called conceptual scheme kb composed concepts vertices relational attributes labeled edges 
example partial conceptual scheme real estate kb left fig 
concepts human flat room attributes links composing circuit owner house multi valued component relation rooms 
scheme summarizes relations may exist instances different concepts kb 
fact object embedded similar relational structure concept replaced collection instances 
structure call network associated object includes objects related chain attributes 
network edge corresponding multi valued attribute may link source object set target objects 
example left fig 
network object flat drawn 
network edge rooms connects flat objects representing flat rooms 
observe similar topologies structures fig 

network extended classes objects contains entire amount information maximal part kb explored proximity computation 
object concept link composition multi valued room room room rooms owner house owner house human flat room human flat rooms fig 

example kb conceptual scheme right object network reflects scheme structure left 
network obtained scheme replacing concept instance collection instances 
label preserving morphism instance network respective part conceptual scheme 
analysis issues concerned class design set unclassified objects object kb 
problem solve instance conceptual clustering problem may divided sub tasks constitution member sets class class characterization 
conventional conceptual clustering algorithm typically carry sub tasks simultaneously class descriptions build member sets 
object dataset link attributes relate objects concept approach may fail 
consider example spouse attribute relates objects representing married couple 
class human spouse attribute refers possibly different class concept 
attribute induces object circuits instances human may lead circular classes taxonomy 
classes built automatic way impossible evaluate classes say referring evaluation class require spouse attribute evaluation 
suggest approach automatic class building deals tasks separately 
member sets built automatic clustering procedure object proximity measure 
measure implements principles suggested compare object descriptions self 
class member sets available turned classes 
characterization step straightforward class attributes particular establishing circuits may refer existing classes 
aim find compact classes require discovered clusters homogeneous object attributes inclusive relational ones 
object proximity measure designed combines consistent way differences properties relations 
keeping mind analogy objects simple values formulate general comparison principle 
points space shall measure mutual difference respect relative size smallest region covers 
smallest region type case primitive values class case objects 
unique adt may interpreted different ways concepts 
interpretation corresponds existing class specific common class objects 
corresponding region necessary smallest possible smallest admissible taxonomy concept 
second interpretation straightforward region effective smallest independent form existing taxonomy 
section describe dissimilarity function principle deals successfully circularity object descriptions 
dissimilarity objects proximity measure dissimilarity kind usually defined set omega individuals described attributes fa attribute level functions ffi compute elementary differences attribute global function aggr ffi combines differences single value 
case object kb concept assigned separate object set omega specific function object level function concept flat attributes fa assume object attribute values 
model object dissimilarity function ir normalized linear combination attribute dissimilarities ffi type ir 
couple objects dissimilarity computed ffi weight attribute 
noteworthy real valued functions normalized 
respect said previous section value may interpreted way 
suppose ffi evaluates size smallest region contains values corresponding dimension 
computes weighted average sizes 
estimation size smallest region covering space form chosen enable computation case circularity 
possible definitions ffi consistent general principle previous section 
attribute level functions attribute type ffi substituted formula property dissimilarity ffi pr relational dissimilarity ffi dissimilarity simple values depends ratio size specific common type size adt value set 
formally adt domain shall denote range size sub set described type value may set cardinal nominal partially ordered type structured interval length totally ordered type 
couple values denote specific common type ffi pr range gamma range range range subtraction average value ranges formula allows ffi pr remain consistent conventional functions standard types 
example integer type value ffi pr 
case object valued attribute relative size effective smallest region estimated applying function kind 
doing dissimilarity computation goes step object network structure objects attribute values 
case strongly connected component network computation comes back initial couple objects example comparing flats requires comparison owners turn requires comparison flats 
words self object structure lead recursive dependence dissimilarity values object couples 
section presents possible way deal recursion 
class dissimilarity ffi cl compares objects members class attribute lists 
precisely ffi cl estimates relative size specific common class objects 
course function attribute class taxonomy available type 
computed values sense taxonomy structure reflects similarities instances formally concept type object valued attribute root root class couple instances specific common class class dissimilarity ratio number objects class total number concept instances 
specific class dissimilar objects 
ffi cl members gamma root members returns set member objects class 
stands average members objects 
function allows existing taxonomic knowledge kb clustering building new taxonomies 
case multi valued attributes relational property nature specific comparison strategy applied collections may variable length 
resulting collection dissimilarity relies pair wise matching collection members prior computation 
space limitations allow point extended interested reader find description multi valued dissimilarity 
functions defined consistent dissimilarity model normalized represent valid dissimilarity indices 
dealing circularity circularity arises strongly connected components occur object networks 
simple example component way dependency flat human concepts established owner house attributes 
dissimilarity couple humans computed depends house attribute dissimilarity respective flats 
flat dissimilarity depends turn dissimilarity initial objects owner 
values depend recursively 
possible way deal deadlock compute values solutions system linear equations see 
mix component attributes single system composed strongly connected component occurs networks 
system variables correspond pairs objects may reached initial pair sequences relational links composition 
couple say couples equation obtained formula 
local part dissimilarity sum dissimilarities properties components plus links appear strongly connected component variables representing system 
remaining dissimilarities link attributes take part circular dependence 
coefficients equation computed follows 
objects couple corresponding respective values attribute objects couple weight attribute 
obtained system quadratic variables equations 
matrix diagonal dominant system unique solution 
computed direct way iterative method 
measures concept obtained computation valid dissimilarity indexes positive symmetric minimal 
proved ffi functions metrics metrics 
example dissimilarity computation shall exemplify way computed cluster objects 
due space limitations consider sample dataset exclusively human instances attributes age salary spouse see table 
spouse attribute link nature type human concept 
establishes tiny cycles instances human concept 
salary attribute indicates month income person thousands euros float type ranges age attribute integer type ranges 
see value computed couple objects set say 
fix attribute weights spouse salary age 
formula dissimilarity human ffi ffi ffi table 
sample dataset human instances attribute age salary spouse differences computed property function ffi account respective domain ranges 
total computations amounts 
taxonomy provided ffi spouse replaced human human ffi ffi ffi come mutual dependency human human due spouse circuit 
substituting variable lets say linear equation system obtained table 
dissimilarity values human human solutions respectively 
values human dataset table 
table read follows entries main diagonal represent results human function function lets call human upper part matrix 
human computed age salary attributes taken equal weights 
put exemplify specific features relational measure case circularity 
detailed examination respective values human human leads observation 
couple objects represent couple spouses lets consider arbitrary third object dissimilarity initial objects 
suppose human human 
inequalities hold human human human inequalities hold human 
values measures initial couple remain human human underlying phenomenon kind attraction objects couple mutual influence dissimilarity values objects third tends minimize difference 
means space induced relational measure objects lie nearer space induced simple measure absolute values functions remain equal 
globally attraction results compact dissimilarity matrices sense total variance values tends decrease respect non relational measure relative weights property attributes 
fig 

clustering results dataset single linkage clustering human input single linkage clustering human input complete linkage clustering human input 
scale dendrograms left scale right 
course attraction phenomenon detected particular situation couples objects concept strongly connected 
similar tendency observed case strongly connected components greater size heterogeneous composition 
clustering matrix obtained computation input hierarchical clustering algorithm detects homogeneous object groups 
example clustering results may seen fig 
input data taken table 
fig 
shows result single linkage clustering human values dendrograms fig 
fig 
obtained human single linkage complete linkage algorithms respectively 
concerns attraction related objects goes far change dissimilarity induced order object couples 
observed matrix dendrogram shows better 
fact forms compact class case second dendrogram combined 
shift due influence spouse nearer spouse 
attracted form class spouses may seen dendrograms human cl human cl human cl human root kind interval age salary spouse interval kind interval age human cl spouse class human cl interval class human cl salary human cl kind interval age salary spouse class human cl interval fig 

part class hierarchy obtained characterization 
classes hierarchical clustering 
far class inference concerned clusterings human suggest existence classes root class 
presenting user validation characterization class terms attribute restrictions provided 
description shows limits region concept space represented class helps interpretation 
fig 
shows hierarchy classes corresponding object clusters fo fo fo 
observe cross classes human cl human cl established spouse attribute 
approach automatic class design object languages 
classes built steps member sets classes discovered proximity clustering procedure class provided characterization terms attributes 
dissimilarity measure clustering compares objects respect properties relations 
case self object descriptions values measure computed solutions system linear equations 
addition measure allows available taxonomic knowledge explored object comparison require taxonomies exist 
sum measure complete respect object descriptions allows detection clusters homogeneous object attributes 

beck navathe 
conceptual clustering algorithm database schema design 
ieee transactions knowledge data engineering pages 

bisson 
conceptual clustering order logic representation 
proceedings th european conference artificial intelligence vienna austria pages 

bisson 
define similarity measure object representation systems 
mars editor large knowledge bases pages amsterdam 
ios press 

booch 
object oriented analysis design applications 


euzenat 
brief overview tree tropes taxonomy building tool 
proceedings th asis sig cr classification research workshop columbus oh pages 

fisher 
knowledge acquisition incremental conceptual clustering 
machine learning 

han nishio wang 
generalization data mining object oriented databases object cube model 
ieee transactions data engineering 

inria alpes grenoble fr 
tropes manual 


kietz morik 
polynomial approach constructive induction structural knowledge 
machine learning 

michalski stepp 
machine learning artificial intelligence approach volume chapter learning observation conceptual clustering pages 
tioga publishing palo alto ca 

valtchev euzenat 
dissimilarity measure collections objects values 
coen liu berthold editors proceedings nd symposium intelligent data analysis volume lecture notes computer science pages 

van 
classification dissimilarity analysis volume lecture notes statistics 
springer verlag new york 
