approximating alcn concept descriptions sebastian brandt ralf theoretical computer science theoretical computer science rwth aachen university kiel cs rwth aachen de ti informatik uni kiel de approximating concept de ned dl means translate concept concept de ned second typically expressive dl concepts closely related possible respect subsumption 
previous provided algorithm approximating alc concept descriptions ale concept descriptions 
motivated application chemical process engineering extend result number restrictions account 
approximation new inference service description logics dls rst mentioned baader molitor 
approximating concept de ned dl means translate concept concept de ned second typically expressive dl concepts closely related possible respect subsumption 
number di erent applications inference problem brie mention see translation knowledge bases knowledge base cation 
non standard inferences expressive dls 
non standard inferences dls computing common subsumer lcs matching uni cation concepts introduced support construction maintenance dl knowledge bases see overview 
restricted quite dls example allow concept disjunction 
approximation overcome partially supported deutsche forschungsgemeinschaft dfg project ba 
problem extent 
general idea rst approximate concepts expressive dl yields concepts represented expressive dl apply non standard inferences approximations 
example existing matching algorithms lifted handle expressive dls follows directly matching concept patterns de ned small dl concepts de ned dl handled existing matching algorithms rst approximate concept small dl match approximation 
information may lost matcher general correct accuracy result may suce 
example fact main motivation investigate approximation rst place computation commonalities concepts 
inference service chemical process engineering application support bottom construction knowledge bases 
typically lcs employed accomplish task 
formally lcs concepts say de ned dl speci concept subsumption subsumes concepts 
case provides concept disjunction lcs just disjunction 
problem user inspecting concept learn commonalities approximation commonalities explicit rst approximating sublanguage allow express concept disjunction computing lcs approximations sublanguage 
supporting frame user interfaces dl systems 
interaction dl systems users little knowledge representation expertise may di culties understand full expressive power underlying dls 
overcome problem knowledge representation systems equipped simpli ed frame user interface built top powerful dl system 
example system ontology editor oiled built top fact dl system 
occasions systems concept descriptions user editing inspection solution inference problems 
concept descriptions need restricted representation frame user interface overwhelm inexperienced user 
cases approximation may helpful means represent concept descriptions simpli ed fashion suited user interface users level expertise 
rst depth investigation approximation problem 
particularly double exponential time algorithm devised approximate alc concepts ale concepts 
despite high complexity prototypical implementation showed quite promising performance runtime concept sizes see 
applications chemical process engineering application construct name syntax semantics prim 
negation nc 
conjunction existential restrictions fx 
value restrictions fx 
number restrictions nr fx 
fy ng nr nr fx 
fy ng full negation 
disjunction table syntax semantics alen alcn concept descriptions 
require number restrictions extend results alc alcn show alcn concepts approximated concepts alen sublanguages thereof 
turns approximation algorithm involved 
structure follows 
section de ne dls introduce common subsumer key operation approximation algorithm 
section formally de ne notion approximation illustrate example 
approximation algorithm called alcn normal form introduced section 
main diculty computing approximations extract induced concept descriptions alcn concept descriptions 
section devoted problem 
proof correctness algorithm uses characterization subsumption alcn alen concept description 
characterization provided section 
approximation algorithm section 
conclude section 
preliminaries concept descriptions de ned inductively help set constructors starting set nc concept names set nr role names 
sake simplicity assume nr singleton frg 
de nitions results easily generalized arbitrary sets role names 
consider dls alen alcn dls provide top concept bottom concept conjunction number restrictions existential value restrictions 
addition alen ers primitive negation negation appears front concept names concept name alcn ers disjunction full negation 
semantics alcn alen concept descriptions de ned usual model theoretic way terms inter 


extension 
arbitrary concept descriptions de ned inductively shown table 
important traditional inference services provided dl systems computing subsumption hierarchy 
concept description subsumed description holds interpretations concept descriptions equivalent subsume 
interested computation approximations alcn concept descriptions alen concept descriptions purpose need compute common subsumers alen concept descriptions 
de nition lcs alen concept descriptions alen concept description common subsumer lcs lcs short ii concept description property satis es depending dl consideration lcs descriptions need exist exists unique equivalence 
shown alen lcs exists computed double exponential time 
alen approximation alcn concepts section show alcn concept descriptions approximated alen concept descriptions 
rst de ne notion upper alen approximation formally 
de nition alcn concept description 
alen concept description upper alen approximation approx alen ii minimal property implies alen concept descriptions analogously alcn concept description approximated 
focus upper approximations approximation means upper approximation 
alen allows concept conjunction immediately follows alen approximations uniquely determined equivalence exist upper alen approximations alcn concept de nition upper approximation implies case approximating alc ale concept descriptions shown naive approaches computing approximation return general concept descriptions 
example think alcn concept description approximated simply replacing concept disjunction lcs operator evaluating lcs operators inside 
alcn concept description concept names illustrates case obtained approximation approx alen lcs easily check ua au fact correct alen approximation avoid ects shown approximation alc concept description ale concept description order compute approximations needs turn concepts kind disjunctive normal form implicit facts explicit compute induced concepts 
alc step easy conceptual point view suces inconsistencies explicit propagate value restrictions existential restrictions 
alcn things involved number restrictions induce new value existential restrictions 
illustrate main diculties encounters consider running example 
example consider alcn concept description ex set concept names fa qg ex ua ua ua ex ex want compute alen approximation ex nd number restrictions existential restrictions value restrictions common top level disjuncts ex ex induced number restrictions 
explicit number restrictions nd ex ex ex existential restriction know successors exist 
ex induces approx alen ex induced restriction restriction 
induced existential restrictions 
rst disjunct ex existential restrictions number successors limited 
existential restrictions merged consistency preserved 
done ways yielding possibilities ex explicit existential restrictions restriction implies successor value restriction holds 
easy see value restriction ex approximated ua induced alen concept description ex mappings occurs existential restriction 
know occur approximation ex induced value restrictions 
rst disjunct ex explicit value restriction 
seen ex exactly successors consistent merging existential restriction 
induced value restriction ex disjunction ex yields resulting value restriction ex summing obtain ua approximation concept description ex approximation algorithm normal form alcn concept descriptions de ned 
alcn normal form call concept description top level free negation normal form negation pushed inwards front concept name contain disjunction top level role depth 
notation needed access di erent parts alen concept description top level free alcn concept description prim denotes set negated concept names bottom concept occurring top level val 
exist value restrictions form top level val ex fc exists top level cg min note min nite max minfk exists max 
note min max computed polynomial time oracle subsumption 
numbers necessarily refer number restrictions explicitly represented induced de nition alcn concept description 
alcn normal form form prim exr val min max concepts val alcn normal form removed disjunction case 
easy see alcn concept description turned equivalent concept description alcn normal form 
note disjunctions need distributed conjunctions resulting normal form may size exponential size concept description example alcn normal form 
size exponential extracting induced information alcn concepts example illustrates need take care induced concepts top level free alcn concept descriptions cf 
de nition order compute approximations 
show induced concepts determined 
follows top level free alcn concept description 
mentioned induced number restrictions min max 
example obtained induced number restrictions ex ex exist induced restriction ex 
induced existential value restrictions easy obtain 
need compute lcs certain subconcepts embedded role levels 
subconcepts alcn concepts approximated applying alen lcs 
induced existential restrictions 
need formalize merging existential restrictions encountered ex done called existential mappings intuitively re ects way merge explicit existential restrictions exactly successors allowed number restriction formally de ned ng mg jg want enforce trivial successors produced mapping partitions set ex exactly sets 
furthermore merging existential restrictions lead inconsistencies 
leads conditions 

mg 
val ex fc seen may mappings concept description 
set existential mappings satisfying conditions denoted ex 
existential mapping corresponding set merged concept descriptions denoted ex fu ng ex fc set mapping functions set induced existential restrictions ind ex de ned follows ex ind ex lcs alen val kg ex ex min ind ex fval ind ex 
running example ex rst case applies 
existential mappings say ex ex fp ex ex fp qg 
extracting commonalities valid existential mappings yields ind ex ex qg qg fp ex second case applies ind ex ex ua ua induced value restrictions 
new value restrictions induced reasons 
max second merging existential restrictions combination restrictions may induce value restrictions 
contrast induced existential restrictions needs take care restrictions induced incompatible existential restrictions 
need know number successors induced existential restrictions min val exr ex 
running example ex 
max value restrictions induced know successors instances merged existential restrictions obtained existential mappings collected set ex ex induced value restriction ind val de ned follows max ind val max ind val val max ind val lcs alen val ex example ex max ex ex ex fp qg 
ind val ex ex new value restriction induced ex max ex 
characterization subsumption previous subsections introduced normal form alcn concept descriptions means deal induced concept descriptions 
methods hand provide structural characterization subsumption case alcn concept description subsumed alen concept description characterization prove correctness approximation algorithm 
assuming alcn normal form easy see subsumed conjunct subsumed 
single conjunct subsumption characterized similarly case concepts come alen 
theorem alcn concept description alcn normal form disjuncts alen concept description alen normal form 
ng holds 
prim prim 
max max 
min min 
ex ex min val ex exists ex val 
val max max val val max val val ex consider example concept ex ex ex alen concept description 
order check ex subsumed check conditions primitive concepts value restrictions 
seen section ex ex restrictions respectively condition satis ed 
condition holds ex existential mapping produces existential restriction satisfying 
ex appropriate existential restriction induced value restriction satisfying 
approximation algorithm alcn concepts recursive computation induced number value existential restrictions lcs operation approximation algorithm de ned follows 
quite similar lcs algorithm alen concept descriptions 
de nition approximation alcn alen input alcn concept description output alen approximation 
approx alen approx alen 

transform alcn normal form 
return approx alen ua prim ng ng ind exr 
ind exr cn approx alen val ng approx alen ind val ng returning running example easy check approx alen ex approx alen ex 
generally show theorem 
proof combines ideas proof correctness lcs algorithm alen concept descriptions correctness algorithm ale approximations 
theorem alcn concept description alcn normal form 
approx alen upper alen approximation approx alen approx alen 
particular alen approximations alcn concept descriptions exist computed ectively 
prove approx alen structural induction theorem approx alen takes place order prove minimality approx alen subsumption assumes alen concept subsuming theorem show approx alen omitting subconcepts computed approx alen obtain approximations sublanguages alen example discard number restrictions computed approx alen obtain ale approximation alcn concept description 
computational complexity computing alen approximations note complexity computing lcs alen concept descriptions yields lower bound alen approximation alen concept descriptions exactly lcs alen lcs double exponential time upper bound shown 
know bound tight tight complexity bounds lcs carry approximation problem 
devised algorithm approximate alcn concepts concepts alen sublanguages thereof 
remains determine exact complexity bound problem 
practical point view interesting question similar alc case algorithm implemented eciently 
approximation concept natural question regards loss information aspects approximated concept captured approximation 
proposed algorithm computing di erence alc ale concepts 
extending algorithm alcn alen remains 
baader molitor 
computing common subsumer description logics existential restrictions 
dean ed proc 
ijcai pages stockholm sweden 
morgan kaufmann 
baader molitor 
rewriting concepts terminologies 
cohn giunchiglia selman eds proc 
kr pages san francisco ca 
morgan kaufmann publishers 
bechhofer horrocks goble stevens 
oiled reason able ontology editor semantic web 
baader brewka th 
eiter eds proc 
ki volume lecture notes arti cial intelligence vienna austria 
springer verlag 
brandt 

approximation di erence description logics 
report theoretical computer science rwth aachen germany 
brandt 

approximation di erence description logics 
fensel 
williams eds proc 
kr san francisco ca 
morgan kaufmann publishers 
appear 
brandt 

non standard inferences description logics buy proc 
ki workshop applications description logics number ceur ws vienna austria september 
rwth aachen 
horrocks 
expressive description logic fact ction 
cohn schubert shapiro editors kr principles knowledge representation reasoning pages 
morgan kaufmann san francisco california 

non standard inferences description logics volume lecture notes arti cial intelligence 
springer verlag 
ph thesis rwth aachen 
molitor 
computing common subsumers alen nebel ed ijcai pages 
morgan kaufman 
sattler 
terminological knowledge representation systems process engineering application 
ph thesis rwth aachen 
