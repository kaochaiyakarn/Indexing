proceedings international conference advanced robotics pages coimbra portugal june july 
player stage project tools multi robot distributed sensor systems brian richard vaughan andrew howard robotics research lab information sciences lab robotics research lab university southern california hrl labs university southern california los angeles california california los angeles california robotics usc edu vaughan hrl com robotics usc edu describes player stage software tools applied multi robot distributed robot sensor network systems 
player robot device server provides network transparent robot control 
player seeks constrain controller design little possible device independent non locking language style neutral 
stage lightweight highly con gurable robot simulator supports large populations 
player stage community free software project 
current usage player stage reviewed interesting research opportunities opened infrastructure identi ed 
programming robots complicated timeconsuming 
working multiple distributed robot systems complicated robots ii dif culties network programming 
player stage project provides open source tools simplify controller development particularly distributed robot sensor network systems referred collectively multi robot systems 
provides overview player stage tools application describe tools review published player stage describe explored research opportunities opened infrastructure 
player stage project began usc robotics research lab address internal need interfacing simulation adopted modi ed extended researchers world 
suggest applications particularly player stage offers combination transparency exibility speed useful robot development environment available 
software project provides player robot device server stage multiple robot simulator plus supporting tools libraries 
running robot player provides clean simple interface robot sensors actuators network 
client control programs talk player transmission control protocol tcp socket reading data sensors writing commands actuators con guring devices player supports variety robot hardware provides implementations sophisticated sensing control algorithms landmark tracking probabilistic localization 
stage provides population simulated robots sensors operating dimensional bitmapped environment 
devices accessed player real hardware 
stage aims ef cient con gurable highly accurate 
practice means stage simulate tens hundreds robots desktop pc controllers commonly similarly simulated real robots 
player stage run unix platforms released free software gnu general public license maintained authors sf net 
player goals design player architecture originally described changed time 
section report current state player focusing aspects design facilitate exploration novel distributed sensing control algorithms 
client interface 
player socket device server allows control wide variety robotic sensors actuators 
player executes machine physically connected collection devices offers tcp socket interface clients wish control 
clients connect player communicate devices exchanging messages player tcp socket 
way player similar device servers standard unix printer daemon lpd 
servers player support multiple clients concurrently different socket 
player external interface simply tcp socket client programs written program player control popular robot devices including pioneer dx mobile robot peripherals pictured 
ming language provides socket support language 
client libraries encapsulate details player message protocol facilitate development control programs currently available tcl python java common lisp 
language neutrality comes platform neutrality control programs written tcl python java run modern system running windows 
addition client library ported win environment 
importantly socket abstraction allows location neutrality 
regardless physical location collection robotic devices client program exert control machine network connectivity 
combined player ability support multiple clients concurrently location neutrality provides new opportunities building distributed sensing control systems 
take idea section 
transport protocol tcp drawbacks 
example ad hoc networks networks experience high load conditions latency overhead traf required tcp outweigh reliability protocol provides 
environments user datagram protocol udp better choice tcp multicast messaging place broadcast messaging 
currently working implement player support alternative transports including udp 
device model 
order provide uniform abstraction variety devices chose follow unix model treating devices les 
familiar le semantics hold player devices 
example receiving sensor readings client opens appropriate device access likewise control ling actuator client open appropriate device access 
addition asynchronous data command streams request reply mechanism akin ioctl clients get set con guration information player devices 
model served unix operating systems decades expect suitable player devices 
player implement device locking multiple clients connected player server simultaneously issue commands device 
general queuing commands new command overwrite old 
chose implement locking order provide maximal power exibility client programs 
view multiple clients concurrently controlling single device robot wheels clients probably cooperative case implement arbitration mechanism higher level player 
clients cooperative subject research presumably interaction competitive agents case device locking hindrance 
borrowed classic operating system design way separated device interfaces device drivers 
example operating system joystick interface de nes api interacting joysticks joystick drivers allow programmer control various joysticks api 
similarly player device interface speci cation data command con guration formats device driver module controls device provides standard interface 
example probably commonly player interface interface control mobile robot base 
interface speci es command format includes velocity position targets data format includes velocity position status 
implementation position interface player sp os driver controls research robots including popular pioneer dx 
drivers control kinds robots support position interface means accept commands return data format 
general multiple drivers support interface driver support multiple interfaces 
discuss advantages design section 
stage goals design stage simulates population mobile robots sensors environmental objects 
original purposes enable rapid development controllers eventually drive real robots ii enable robot experiments access real hardware environments 
year extending generalizing sensor models limits available hardware adding purpose iii enable stage screenshot showing robots solid rectangles visualization top robot laser range scanner sonar color blob nder data 
stage modular architecture allows multiple guis gnome 
experiments novel devices exist 
path developing help darpa goal stage tool determine bene ts developing type sensor 
return idea discussing opportunities research 
stage speci cally designed support research multi robot systems 
programming experimenting robots bene ts rapid development multiplied stage enables experiments large populations robots prohibitively expensive buy maintain 
aspects stage design suitable multi robot systems delity stage provides fairly simple computationally cheap models lots devices attempting emulate device great delity 
low delity simulation advantage designing robot controllers run real robots encourages robust control techniques 
low computational demands mean simulate devices commodity hardware 
linear scaling population sensor models algorithms independent population size 
stage computational requirements grow linearly population con gurable composable device models various sensors actuators provided including sonars scanning laser range visual color ducial detectors versatile mobile robot base devices may follow rule algorithms scale power population size convenient implement perform small populations 
odometry 
models general exible speci piece hardware model con gured approximate real imagined target device 
see manual complete list devices properties 
player interface sensor actuator models available player standard interfaces 
typically clients tell difference real robot devices simulated stage equivalents try hard 
stage inherits exibility player non locking platform language neutral interface devices 
devices populations performance 
devices composed tree structures build complex robots 
example users base robots model selection sensor models top 
users simulated pioneer dx pictured model carrying sonar array laser scanning range nder 
stage distribution includes commonly con gurations geometry pioneer sixteen sonar transducers 
default stage attempts run real time 
models updated xed con gurable interval 
update takes longer suggested interval simulations run slower real time 
device models vary greatly computational demands author mhz pentium iii linux pc runs sonar guided robots position sonar models laser guided robots position laser models real time spatial temporal resolutions ms respectively 
optional fast mode stage wait real time clock 
simple simulations run faster real time useful long batch experiments 
time sensitive clients player internal clock avoid time warping issues 
validity 
guarantee experiments stage directly comparable realworld robots 
users clients developed stage little modi cation real robots vice versa 
number transfers stage real robots increases users increasingly powerful argument support real world validity stage experiments 
major advantage known simulator home grown project speci code 
stage open source license allows peer review simulation code encourages sharing models con gurations environments 
just player facilitates code re sharing stage enables experiment sharing 
hope see standard test scenarios emerge users compare controllers 
simulation experiments routinely carried stage example worlds cave hospital opportunities research player easy clients read data send commands device network send arbitrary messages 
stage allows convenient rapid evaluation clients 
programs constrain design clients little aim provide transparent infrastructure research 
section describe research opportunities enabled design decisions described 
embedded systems design player guided part desire maximize utility applicability keeping small fast 
server core provides sophisticated client services quite simple time example collapsed functionality single thread execution 
device driver system modular allowing system designer include drivers necessary particular application 
small fast player equally suited run low power embedded systems high power workstations 
player currently embedded ppc linux arm linux systems 
part darpa software distributed robotics sdr program rst authors knowledge robot experiments comprise network embedded computers running player controlling small mobile robot 
sophisticated devices addition regular device drivers provide transparent control interface piece hardware player extensible device model allows sophisticated sensing control algorithms encapsulated drivers 
drivers perform arbitrary computation ranging signal processing closed loop control 
example player includes driver delivers raw audio data driver performs fast fourier transform raw data reports frequencies amplitudes highest peaks frequency domain 
similarly player contains collection fiducial detectors designed nd different kind landmark processing data various sensors 
detector fuses information laser range nder camera image incorporates control pan tilt zoom unit nd landmarks 
added drivers implement different forms widely monte carlo localization scheme 
included drivers server algorithms standard services client exploit knowledge 
device drivers player server binary version kb 
common device interfaces mentioned section player device model permits drivers control different hardware implement different algorithms interface client 
result control programs largely ignore details underlying hardware algorithm treating system collection generic devices 
example player drivers control mobile robot bases rwi team interface 
player client program control robots little changes required move platforms 
drivers interface appear immobile bases 
similarly landmark detectors mentioned fiducial interface example client program builds landmark map employ appropriate environment largely ignore detector 
novel sensing control systems result innovative network centric architecture player permits client located network access device robot effectively see teammates eyes 
player substrate novel distributed sensing control systems previously unrealizable constructed quite easily 
feature exploited concurrent control approximately fty independent agents simultaneously controlling single robot motors player 
similarly player allowed team robots engaged cooperative localization directly access sensors facilitating sensor fusion 
building systems designer free choose appropriate programming language computing platform implement component 
addition server driver 
executing context player server driver acts client player server 
driver connects remote server provides local proxy remote device forwarding commands data 
way remote resources appear local resources offers interesting avenues research 
consider encapsulation sophisticated algorithms player drivers described section 
algorithms drivers run player server side robot 
robot modest computational facilities may suited run example expensive probabilistic localization algorithm 
case instance player run board powerful desktop machine providing data control remote devices 
expensive algorithm run board instance player 
driver computational load sens ing control system distributed arbitrarily located network best exploit available resources 
working systems composed robots single instance player contains robots sensors actuators act mechanism aggregate data visualization logging distribute commands operator console 
comparing controllers performance metrics result exibility open source development model player stage widely adopted 
provides potential open standard test platform encourage objective evaluation comparison robot control algorithms 
currently practical metrics characterizations robot behavior lot interest area 
evaluation required eld transition primarily ad hoc experimental science principled discipline 
fantastic sensors stage normally simulate existing robot devices users test feasibility ideas controlling real robots 
stage tool explore robot controllers devices exist 
useful conventional design tool allowing investigations localization algorithm perform device performs half way sonar laser trade offs robot speed battery life sensor update rates resolution novel algorithms exploit ultra wide band radar detect walls objects 
robotics projects developing new sensor experiment controllers simulation hardware ready 
stage modular architecture easy add entirely new models order explore common ground robots change color visually express internal states colleagues quickly recognize categorize 
exploring devices currently feasible opens new eld study robotics 
freedom practical constraints distinguishes science engineering having means perform experiments distinguishes science science ction 
challenges scaling sensor simulation stage simulates multiple devices scales devices currently useful simulating massive populations say scale ant colony great interest researchers 
interesting distribute stage compute load cluster computers support large populations tens thousands real time 
signi cant technical challenge poses unsolved problems representation synchronization 
stage bene advanced spatial representation improve speed memory ef ciency large sparsely populated environments 
usage software player stage project downloaded times 
player stage currently major academic industrial research labs world teaching undergraduate graduate classes 
modest size target audience robotics researchers students consider project signi cant success 
important factor success open source model encourages inclusive collaborative software development 
developer team user base grown major enhancements software 
modular designs player stage easily extended example encapsulating sophisticated control algorithm server adding model unavailable interesting sensor simulator 
collective experience users drives development brie review projects player stage 
project concerned robotic sensor networks characterized extremely large collections inexpensive mobile robots :10.1.1.16.2062
practical limitations tens physical robots ability simulate hundreds thousands robots stage invaluable researchers wishing test communication coordination algorithms large scale systems 
similar project aims extend scalability modularity decentralized data fusion ddf architecture active sensor networks network components actuators 
practical implementation able utilize resources heterogeneous dynamic team sensing platforms nd track stationary moving features indoor environment 
player common hardware abstraction layer diverse set software modules stage extensively code validation initial performance assessment 
project studies resource allocation target tracking sensor actuator networks region approach control deployment mobile robots 
multi resolution task assignment architecture allows system handle signi cant environmental occlusion 
player interface physical simulated devices tracking system developed stage trivially transitioned real robots 
resource allocation investigated learning perspective goal developing general adaptive capabilities robots multi robot systems 
focusing spatio temporal adaptivity project uses reinforcement learning allow robots dynamically adjust behavior environment forming set task 
particular project stage ability run simulation trials faster real time generate substantial amount data required determine run time characteristics performance impact learning system 
player investigation novel multirobot task allocation algorithms providing uni ed interface group heterogeneous robots 
case economically inspired task auctioning system developed validated multi robot teams ranging size robots engaged variety tasks 
resulting task allocation system murdoch broader study large scale human system interaction 
coordination infrastructure originally developed tested stage large group simulated robots validated smaller team physical robots 
simulate validate approach successfully employed projects including multi robot resource transportation 
related lack space precludes detailed comparison player stage alternatives 
distinguishing features tools developed player stage project seek constrain design controlling client program little possible ii ef ciently implemented custom network server 
minimizing constraints control program player stage offer uniquely exible robot development environment compared mission lab dca aria carmen 
tradeoff providing support particular control coordination philosophy systems restrict user choice programming language structure 
constraints useful guiding user particular paradigm believe low level constraints unsuitable general purpose system programmer choice build kind control system enjoying device abstraction encapsulation 
player clear distinction programming interface control structure opting highly general programming interface allowing users develop tools including sophisticated architectures mentioned 
designed explicitly robotic device control player ef cient purpose primary limitation performance currently speed delity underlying operating system scheduler 
building custom protocol server adhering generic communications standard corba jini free computational programmatic overhead generally associated practical application standard 
robot interfaces rely standards ity bene readily available client side libraries hide communication details 
demonstrated proliferation similar client side libraries player currently available languages custom message protocol simple easy implement 
summary goal player stage project provide open source software infrastructure support experimental research multi robot systems 
project developed robot device server player multiple robot simulator stage 
addition facilitating ongoing research player stage offer new opportunities research emerging areas including distributed sensing control systems 
expect opportunities improve multiply software developed 
player stage actively developed numerous enhancements planned near 
regarding player plan incorporate standard services sensing control algorithms initially focusing enabling technologies localization mapping 
support construction control complex investigating methods resource discovery discussed 
add device drivers support research embedded systems including monitoring facilities ad hoc networks sophisticated communication services 
order allow simulation extremely large populations systems stage soon networks workstations cluster computers 
near term goals deploy cluster public stage server simulate large worlds long periods time allowing potential comparison evaluation proposed control algorithms cooperative competitive settings 
simultaneously improving stage performance making world representation ef cient sensor modeling 
advanced development open source multi robot simulator 
stage designed simulate large numbers robots indoor environments full dynamic simulation designed simulation small numbers robots outdoor environments 
stage fully compatible player client programs switch simulations code modi cation 
early version available august 
acknowledgments developers users contributed success project especially maxim josh bers brendan burns jason douglas jakob kim jung alex andy iii nik dave naf ard kasper st john sweeney doug vail 
sourceforge net project hosting doug gage darpa valuable support 
supported part darpa dabt mars usc contract sdr hrl 
robotics aria manual november 
tucker balch 
behavioral diversity learning robot teams 
phd thesis college computing georgia institute technology 
ross john 
generic robotic motion control api kit technology corba communications 
proc 
ieee intl 
conf 
robotics automation icra pages minneapolis minnesota april 
dahl matari sukhatme 
adaptive spatio temporal organization groups robots 
proc 
ieee rsj intl 
conf 
intelligent robots systems iros pages lausanne switzerland october 
deering 
rfc host extensions ip multicasting august 
free software foundation 
gnu general public license june 
version 
brian maja matari 
sold auction methods multi robot coordination 
ieee transactions robotics autonomous systems october 
brian maja matari gaurav sukhatme 
exploiting physical dynamics concurrent control mobile robot 
proc 
ieee intl 
conf 
robotics automation icra pages washington may 
brian richard vaughan kasper st andrew howard gaurav maja matari 
valuable player robot device server distributed control 
proc 
ieee rsj intl 
conf 
intelligent robots systems iros pages hawaii october 
ben alexei hugh durrant whyte 
information theoretic coordinated control multiple sensor platforms 
proc 
ieee intl 
conf 
robotics automation icra taipei taiwan september 
appear 
gary deepak grupen 
service paradigm recon gurable agents 
proceedings second international workshop infrastructure agents mas scalable mas autonomous agents montreal canada may 
andrew howard maja matari gaurav sukhatme 
putting team ego centric approach cooperative localization 
proc 
ieee intl 
conf 
robotics automation icra taipei taiwan september 
appear 

mobility software 
www com 
nick jakobi 
evolutionary robotics radical envelope noise hypothesis 
adaptive behavior 
jung gaurav sukhatme 
tracking targets multiple robots effect environment occlusion 
autonomous robots 
kurt konolige 
language reactive control 
proceedings german conf 
arti cial pages freiburg germany 
douglas mackenzie ronald arkin jonathan cameron 
multiagent mission speci cation execution 
autonomous robots march 
alexei stefan williams frederic hugh durrant whyte 
experiment integrated exploration 
proc 
ieee rsj intl 
conf 
intelligent robots systems iros pages lausanne switzerland october 
object management group common object request broker architecture speci cation version july 
project 
www org 
lars petersson david austin henrik christensen 
dca distributed control architecture robotics 
proc 
ieee rsj intl 
conf 
intelligent robots systems iros pages hawaii october 
jon postel 
rfc user datagram protocol august 
jon postel 
rfc transmission control protocol september 
gabriel mohammad gaurav sukhatme 
robomote tiny mobile robot platform large scale ad hoc sensor networks 
proc 
ieee intl 
conf 
robotics automation icra pages washington may 
ashley maja matari gaurav sukhatme 
scalable approach human robot interaction 
proc 
ieee intl 
conf 
robotics automation icra taipei taiwan september 
appear 
sebastian thrun dieter fox wolfram burgard frank dellaert 
robust monte carlo localization mobile robots 
arti cial intelligence 
richard vaughan brian andrew howard 
device abstractions portable reusable robot code 
technical report center robotics embedded systems school engineering university southern california los angeles california april 
richard vaughan andrew howard brian 
stage user manual 
player stage project sourceforge net november 
richard vaughan kasper st andrew howard gaurav sukhatme maja matari 
lost localization space trails robot teams 
ieee transactions robotics autonomous systems october 
richard vaughan kasper st gaurav sukhatme maja matari 
go ahead day robot con ict resolution aggressive competition 
proc 
intl 
conf 
simulation adaptive behavior sab pages paris france september 
jim waldo 
jini architecture network centric computing 
communications acm july 
barry brian 
distributed port arbitrated behavior control 
lynne parker george bekey jacob editors distributed autonomous robotic systems pages 
springer verlag knoxville tennessee october 
