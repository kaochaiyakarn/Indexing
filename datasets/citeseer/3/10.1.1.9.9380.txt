rdf standard enriching information resources web detailed meta data 
semantics rdf data defined rdf schema 
expressive language querying rdf rql enables querying semantics 
order support rql rdf storage system map rdf graph model storage structure 
storage systems rdf data developed store rdf data triples relational database 
evaluate rql query triple structures graph model rebuilt triples 
new approach store rdf data graph object oriented database 
approach avoids costly rebuilding graph efficiently queries storage structure directly 
advantages approach shown performance test prototype implementation oo store 

resource description framework rdf standard enriching information resources web detailed descriptions 
information resources example web pages books 
descriptions characteristics resources author content web site 
call descriptions meta data 
enrichment web meta data enables development called semantic web 
usability web depends compatibility processing possibilities meta data 
rdf supports creating processing meta data defining default structure 
structure data independent character 
application areas rdf numerous web services peer peer networks semantic caching models 
common huge amounts data processed querying rdf data 
consequently storing rdf graph valerie annika hinze heinz institute computer science freie universit berlin germany hinze inf fu berlin de extensive rdf data applications need efficient storage systems 
systems developed storage querying rdf data example sesame 
rdf data represented xml triple structure graph 
graph representation enables semantic interpretation rdf schema 
existing rdf systems store rdf data triples database 
support semantic interpretation current implementations map formal graph model storage structure 
order query semantics graph constructed triples 
mapping constitutes unnecessary impact system performance 
presents new approach storing rdf data graph object oriented database 
approach advantages existing solutions simplifies storage design graph directly stored reorganization 
allows interpret graph storage mapping 
efficiently uses relationship rdf query language rql oql query processing 
verified advantages performance test results achieved prototypical implementation 
remainder organized follows sections introduce basic concepts rdf rdf schema discuss querying options 
approach storing rdf data illustrated section subsequent section describes prototypical implementation 
section discuss results performance analysis prototype 
conclude discussing possible research directions section 
background section introduce context study 
describe rdf data model rdf schema 

rdf resource description framework rdf language representing meta data 
rdf data model defines structure rdf language 
data model consists data types resources data objects described rdf statement called resources 
example resources web sites books 
properties specific aspect characteristic relation resource described property 
example properties creation date web site author book 
statements statement combines resource describing property value property 
rdf statements structural building blocks language 
rdf statement typically expressed resource property value triple commonly written resource property value triples seen object attribute value triple 
statements expressed graphs nodes resources values directed edges represent properties 
shows graph resource edge property directed property value 
graph representation resource property value triple resources represented graph circles 
properties represented directed arcs 
property values represented box 
values called graph 
values resources described properties value forms resource triple 
represented circle 
example shows triple graph representation meta data particular web page 
example different representations statement consider webpage specified url www valerie de 
webpage author valerie 
model page resource property creator 
show triple graph representation data 
data valerie creator resource www valerie de 
triple www valerie de valerie graph see www valerie de valerie 
graph representation rdf triple example 
rdf schema rdf data model assumptions application area data 
reserved terms model data 
additionally rdf data model mechanism define names properties resources 
purpose rdf schema needed define resource types property names 
different rdf schemas defined different application areas 
proposed rdf schema called rdf schema 
rdfschema defines basic type system rdf data 
main rdfschema constructs class property resource types subclassof subpropertyof property names 
terminology allows declare resources instance classes type property 
subclassof property allows specification hierarchies classes 
subpropertyof property defines hierarchy properties 
basic type system defined rdf schema extended new terms new type system 
rdf schema statements valid rdf statements structure follows structure rdf data model 
difference pure resource property value triple agreement specific meaning reserved terms statements 
rdf schema provides vocabulary defining semantics rdf statements 
example shows usage properties type domain range subclassof resources resource property class defined rdfschema 
example application rdf schema example original data example enriched rdf schema 
data valerie creator resource www valerie de 
triples subclassof website document domain document range literal type www valerie de web site type valerie literal www valerie de valerie graph see document web site subclassof type www valerie de domain range literal valerie type schema data 
graph representation rdf schema example see complex graph specific semantics built 

querying rdf seen rdf data represented set triples structure level graph semantic level 
third representation form uses xml syntax level 
shown xml representation drawbacks query processing see 
concentrate querying rdf data structure semantic level 
shall see abstraction level determines query language 

querying structure level structure level queries rdf data data model structure triples 
overview query languages structure level see survey anh ta 
best known rdf query language level rdql derived 
querying rdf data structure level support evaluation data semantics 
illustrate drawback example 
example querying rdf data rdql refer data set defined triples example 
queries formulated rdql 
consider question return resources type document 

select type document query evaluates data structure level 
single triple evaluated 
means triple interpreted individually transitive correlations triples detected 
example www valerie de type web site web site subclass document 
rdfschema semantics type subclassof define www valerie de type document 
document www valerie de retrieved query 
detected explicit statement type www valerie de document existed 

select type subclassof document query solve problem evaluates triple additionally considers correlations triples 
correlations second level subclassof triples query 
rdql languages query structure level provide transitive closure required finding correlations 
general languages query structure level support interpretation semantics 
follow correlations class hierarchies graph representation data 

querying semantic level semantic level queries rdf data graph representation data 
queries retrieve results explicit statements consider correlations statements 
correlations represent data semantics defined rdf schema 
rql standardized query language semantic level rdf 
rql typed language syntax oql 
rql uses graph model possible query data schema 
example show queries data schema respectively 
example querying rdf data rql refer data set defined triples example 
query language rql 
consider question return resources type document 

select type document data related rql query processed interpreting graph 
query gives resources type document 
pattern triple type document searched graph 
result query empty semantic interpreted 

select type document schema related queries rql path search graph 
query retrieves direct indirect resources type document 
receive correct result www valerie de 
queries interpreting schema semantic level 
queries retrieve correct result including transitive closure 
far rql enables interpretation graph evaluation complete correct result terms semantic 
analysis querying semantic level shows rql currently powerful query language 
efficient rdf storage system support rql formal graph model mapped storage structure 
approach solving problem section 

object oriented concept store rdf briefly introduced representation rdf graph section 
section introduce complete new approach map graph model storage structure 
existing concepts triple storages 
means rdf data stored set triples tables relational database 
systems support rql queries graph rebuilt triples semantic interpreted 
unnecessary graph directly mapped storage structure 
direct mapping realized object oriented storage concept 
edges nodes vertices graph realized complex objects 
graph encoded complex objects 
enables directly map graph storage structure 
object oriented concept needs different object types 
graph representation data shows nodes resources values 
rdf schema properties resources 
means edges nodes representing rdf statements instances object type 
statement created resource object referencing value object property object 
example object oriented storage concept rdf graph example mapped object oriented storage structure 
shows structure original rdf graph preserved 
resources properties values modelled objects 
statement graphically represented directed arc resource object property object value object 
example triple www valerie de valerie represented graph having object www valerie de object valerie 
document web site www valerie de subclassof domain range type literal valerie 
object oriented concept rdf graph example store rdf graph object oriented concept advantages storage concept simplified due direct mapping graph connected objects 
nodes edges translated directly objects 
relations nodes edges described 
usage concept easy operations uploading deleting searching data needed rdf storage system executable stored graph translations 
prototypical implementation approach section 

implementation section describe prototypical implementation oo store rdf storage system objectoriented database system 
discuss possible storage systems object oriented graphs 
introduce details specific implementation 
point advantages chosen storage design 

storage system object oriented concept object oriented concept enables mapping graph storage structure 
storing graph persistently object oriented storage system required 
typically object oriented database systems oodb persistent storage systems objects pdom gmd xml objects 
systems allow user store manage complex objects attributes referencing 
mere storage rdf graphs system types may 
rdf data contained graph retrieved efficiently 
oodb enables access objects relations query language oql 
rql queries easily translated oql queries rql syntax oql see section 
persistent storage systems provide specific means object retrieval query language 
close relationship rql oodb advantageous persistent storage systems terms retrieval rdf data 
implementation rdf storage system object oriented database system 

rdf storage design oodb object oriented concept store rdf data resource object value object property object 
resource property value represented single object 
component appears times rdf triple set multiple single object 
implementation storing rdf graph oodb uses types objects resources literals values shown 
components rdf triple resource property value represented database follows resources represented objects type resources 
properties represented objects type resources 
values objects type resources literals 
type resources objects additionally represent resources triples 
type literals represent graphs see section 
value solely resource triple applied rdf schema type literal 
object types resources literals subclasses superclass values inherit attribute outedges 
attribute create rdf triples single components resource literal object stores list properties values 
outedges attribute maps property keys key value lists list listn 
property key points respective list values 
properties values specific resource retrieved mappings outedges attribute resource 
rdf graph stored oodb object structure single triples 
database schema stores rdf data graph object oriented storage structure 
storage structure represents formal graph model physical form objects 
resources id namespace values outedges literals id language name 
object types oodb implementation example shows transformation formal graph model object oriented storage structure 
example storage structure oo storage concept show application database schema exemplary data structure introduced 
tables list created objects attributes 
table resource objects find example object id 
object represent resource www valerie de 
outedges attribute contains triples type www valerie de web site www valerie de valerie 
objects type literals id namespace outedges id language value en valerie type literal objects type resources literal type domain range subclassof web site document outedges subclassof document domain document range literal www valerie de type web site valerie 
objects data example 
design discussion direct usage graph triples implies advantages object oriented db approach compared existing relational solutions sesame simplifies storage concept compared existing storages 
example inferred semantic data explicitly stored semantics derived graph 
details discussion differences storage concepts see 
second advantage direct interpretation data semantics building graph triples 
rql query semantics data directly hierarchies relationships data 
semantic queries follow edges inside graph 
oql realizes search stored graph objects 
main advantage storing rdf data object oriented database close relationship oql rql allows simple translation processing queries 
queries divided triple filters necessary existing relational rdf storages 
query divided set basic sql statements querying triple sets combined final results 
oodb solution query retrieves desired data directly 
different ways processing rql query different processing performances illustrate examples rql queries 
example shows degree performance difference depends applied sql query optimization 
optimizations considered example join order indexing 
example shows querying triples sql demand additional query storage effort 
examples show querying triple sql retrieve identical results performance querying graph oql 
additionally confirm advantage object oriented approach guarantees process rql query performance sql achieve optimization additional effort 
example processing rql data query example refers data example 
process rql data query sql oql 
seen sql performance oql optimal way process triple filters 
rql type creators www valerie de 
sesame framework supports different rdf storages 
rdf data access realized api layer translating rql queries storage specific queries 
layer direct translation additional impact system performance 
consider original sesame implementation relational database 
sql triple filters processed tf www valerie de tf type queried result set 
assume triple table contains triples triple relevant tf triples relevant tf 
number triples result set 
optimal join order indexing optimal join order triple filters process tf set processing tf 
index directly find triples relevant tf knowledge set find 
triples result set tf directly 
total consider 
objects 
join order indexing optimal order means process triple filter tf knowing set demands additional join filters tf tf evaluate set index consider triples triple filter tf tf triples join gives total 
oql rql query processed graph outgoing edge object www valerie de objects objects outgoing type edges objects result set 
objects 
consider objects total 
relevant rql query part result set 
example processing rql schema query example refers data example 
process rql schema query sql oql 
seen querying triples demands additional query storage effort achieve result querying graph 
rql type www valerie de 
sql triple filters processed tf www valerie de type tf subclassof tf subclassof tf 
queried result set 
calculate transitive closure induced rql query apply additional subclassof filters long relevant triples 
filter result unnecessary effort 
relational rdf systems sesame calculate transitive closure store implicit triples 
filter tf gives queried result set 
oql transitive closure calculated graph outgoing subclassof edges long exists 
consider objects relevant rql query part result set 

experiences nr query description qd select www org rdfschema subclassof www org rdf syntax ns type www org rdf schema class returns possible instances sub classes type class 
qd www org rdf schema resource returns complete instances class resource 
qd www org rdf syntax ns type returns instances property type 
section experiences implementation introduced previous section 
describe technical environment test settings 
performance data obtained tests 
test results discussed 

test environment compared prototypical implementation oo store sesame 
tests carried windows machine mb ram intel pentium cpu ghz 
implementations tested context sesame framework version tomcat server written java 
framework project exchanged query processing component 
refer original implementation sesame mysql database version implementation oo store 
test data taken open vine catalog 
test results regarding selected rql queries listed table 
rql queries directly tested sesame oql translation implementation oo store 
performance measured response time submission query results returned including connection time database 
evaluated aspects performance queries belong different query categories queries data schema hybrid queries 
second influence growing data base query performance 

performance different query categories show test results regarding different categories rql queries queries data schema table 
example queries regarding data hybrid queries 
expect different categories show different performance behavior differences interpretation effort 
example processing schema data related query takes time processing data related query interpretation semantics complex 
hypothesis general implementation perform better advantages described section 
expect impact advantages differs depending character query see 
figures show performance results observed category queries data schema hybrid 
compare performance implementations data base triples 
shows response time milliseconds msec axis different queries axis 
tests cache effect observed implementations discussed detail 
caching response times decrease lot execution 
response times shown mean values measurements taken second execution 
observed test results 
general times oo store lower sesame independent size data base character query 

different categories queries impact performance implementations 
category schema data hybrid query response times show similar time behavior implementations 
example response times data queries oo store order msec response time queries sesame order msec 
see average schema hybrid queries see nr query description qs select super sub class super class sub sub sof super qs select super sub class super class sub sub sof super qs select property property subpropertyof returns classes subclasses 
returns classes direct sub classes 
returns properties direct sub properties 
table 
example queries regarding schema nr query description qh select returns values properties possible instances properties respective values 
qh select returns possible properties range domain classes respective qh select instances 
returns range classes instances possible properties properties range classes respective instances 
table 
example queries regarding data schema hybrid figures need time data related queries 

comparing categories data figures performance curves oo store sesame show behavior 
oo store performance schema queries data queries similar sesame see strong performance differences 
reasons behavior lies different strategies query processing implementations 
sesame splits queries triple filters query tables triples 
complex queries schema data related demand usage triple filters 
oodb query interprets graph matter complex query 
complex queries follow paths graph deeply 
means category query influence times oodb sesame 

influence data base size discuss test results single rql query growing database 
distinguish cases 
increasing amount data database similarly increasing amount query relevant data result set increased 
increasing amount data database constant amount relevant data result set changed hypothesis amount relevant data grows database response times higher data evaluated 
assume previous tests implementation performs better sesame 
figures results observed growing database growing result set growing database result set implementations 
figures show response time msec amount triples stored database thousands axis 
observed test results 
response times implementations depend size data base size result set 
growing data base implies increasing response times amount relevant data grows similarly 
response time msec response time msec response time msec sesame oo store qd qd queries qd response time data queries sesame oo store qs qs queries qs response time schema queries sesame oo store qh qh queries qh response time hybrid queries 
performance different categories rdf queries triples case implementations time query evaluation grows relevant data processed 

growing data base constant amount relevant data causes different behavior implementations 
response time sesame increases response time msec response time msec sesame oo store database size triples response times growing database constant sesame oo store database size triples response times growing database growing 
performance single query growing database independent relevant data triples tables exist 
sesame triple filter extract relevant data larger amount data 
response time implementation oo store remains constant queries evaluated starting certain point graph relevant paths 
paths process length amount relevant data remains constant 
evaluated cases oo store implementation shows better performance sesame 
experiments confirm assumption advantages querying stored graph 

outlook new approach store rdf data graph 
discussed rdf data model defines triples base structure rdf language 
data model rdf schema gives certain semantics data 
shown semantics interpreted graph representation rdf data 
powerful query language graph model 
currently rql query language fulfills requirement 
order support rql rdf system map graph model storage structure 
existing systems store triples tables relational database system 
consequently evaluation schema related query query requiring semantic interpretation rdf data graph built triples 
approach additional step necessary 
proposed directly store graph representation rdf data objectoriented database 
approach simplifies storage concept enables directly efficiently query stored graph take advantage close relation rdf oql 
proof concept implementation oo store rdf storage system object oriented database system fast objects 
compared system sesame known rdf system 
shown evaluated cases oo store implementation better performance sesame 
experiments confirm assumption advantages querying stored graph 
currently implementing full rql parser automatically translates rql queries oql 
investigating incorporation rdf user profiling systems usage rdf content routing 

wish database group fu berlin jeen broekstra sesame group valuable comments approach 
alexaki christophides karvounarakis plexousakis tolle 
managing voluminous rdf description bases 
proceedings nd international workshop semantic web semweb conjunction tenth international world wide web conference www hongkong may 
berners lee hendler lassila 
semantic web 
scientific american march 
brickley guha 
rdf vocabulary description language rdf schema 
working draft april 
available org tr rdf schema 
broekstra kampman van harmelen 
sesame architecture storing querying rdf data schema information 
mit press 
available citeseer nj nec com broekstra sesame html 

von rdf 
master thesis institute computer science freie universitt berlin germany october 
available www valerie de 
hewlett packard 
rdql rdf data query language available www hpl hp com semweb rdql htm visited april 
fankhauser huck 
components data intensive xml applications 
ercim news april 
homepage available www de visited march 
karvounarakis christophides plexousakis 
querying semistructured meta data schemas web case rdf rdfs 
technical report forth ics february 
lassila swick 
resource description framework rdf model syntax specification 
working draft february 
available www org tr rec rdf syntax 
miller 
rdf query 
rfc draft 
available org discovery 
homepage open vine project 
available www org data jsp visited july 
sofia 
rql declarative query language rdf 
proceedings www honolulu hawaii usa may 
anh ta 
rdf query current status 
available enst fr ta web rdf rdf query html visited march 
