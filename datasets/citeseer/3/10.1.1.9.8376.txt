web service composition languages old wine new bottles 
wil van der aalst department technology management eindhoven university technology box nl mb eindhoven netherlands aalst tm tue nl dumas arthur ter hofstede centre information technology innovation queensland university technology gpo box brisbane qld australia dumas qut edu au languages web service composition emerged bpel ws wsci 
goal languages glue web services process oriented way 
purpose languages typically borrow concepts workflow management systems embed concepts called web services stack 
little effort dedicated systematically evaluate capabilities limitations languages 
bpel ws example said combine best standards web service composition wsfl ibm xlang microsoft allows mixture block structured graph structured process models 
aspects expressiveness adequacy orthogonality formal characterization bpel ws reachability systematically investigated 
bpel ws bad proposal remarkable attention receives fundamental issues semantics expressiveness adequacy get attention deserve 
advocate rigorous approaches critically evaluate called standards web services composition learn years experiences workflow office automation domain 

web services emerging paradigm architecting implementing business collaborations affiliated queensland university technology 
organizational boundaries 
paradigm functionality provided business applications encapsulated web services software components described semantical level invoked application programs services stack internet standards including xml soap wsdl uddi 
deployed web services provided various organizations inter connected order implement business collaborations leading composite web services 
business collaborations require long running interactions driven explicit process model :10.1.1.11.8633
accordingly current trend express logic composite web service business process modeling language tailored web services 
languages emerged including wsci bpml bpel ws xlang wsfl little effort spent evaluation respect common benchmark 
comparative evaluation contribute establishing overlap complementarities delimit capabilities limitations detect inconsistencies ambiguities 
step direction conducted analysis languages bpml business process modeling language sibling language wsci web services choreography interface bpel ws business process execution language web services parent languages xlang wsfl web services flow language 
analysis framework composed set patterns abstracted forms recurring situations various stages software development 
specifically framework brings set workflow patterns documented set communication patterns documented 
zero office automation prototypes scientific workflow systems daisy domino esprit oval polymer polymer wamo mentor mobile meteor inca wide crossflow wise wasa wasa 
historic overview early systems research prototypes taken 
comparisons languages mentioned 
comparisons typically framework provide opinion structured analysis 
example xpdl bpml bpel ws compared relating concepts languages 
unfortunately leaves open important questions 
remainder review history workflow management introduce set workflow patterns 
discuss topic web service composition compare bpel ws bpml xlang wsfl wsci workflow patterns basic communication patterns 

workflow management historical perspective interesting starting point scientific perspective early office information systems 
seventies skip ellis holt michael worked called office information systems driven explicit process models 
interesting see pioneers area independently petri net variants model office procedures 
seventies eighties great optimism applicability office information systems 
unfortunately applications succeeded 
result experiences application technology re lated research stopped decade 
hardly advances eighties 
nineties renewed interest systems 
number workflow management systems developed past decade papers workflow technology illustrate revival process aware office information systems 
today workflow management systems readily available 
application limited specific industries banking insurance 
indicated skip ellis important learn ups downs 
failures eighties explained technical conceptual problems 
eighties networks slow suitable graphical interfaces proper development software missing 
conceptual problems way modeling processes systems rigid people workplace 
technical problems resolved 
conceptual problems remain 
standards business process modeling missing today workflow management systems enforce unnecessary constraints process logic processes sequential need 
gives historic overview office automation workflow prototypes 
provides historic overview commercial workflow management systems 
figures show workflow management started nineties action coordinator commercial workflow systems wang workflow sigma exotica iii flowmark mqseries workflow sni staffware ncr jflow carnot bea pi domino workflow visual ms accelerate netscape pm recognition int 
dec fujitsu pegasus olivetti workflow continuum dst digital wang fms faf dst cosa baan ley cosa digital proc flo 
altavista proc flow flow ensemble metro fujitsu xerox inconcert tib inconcert leu lucent eastman oracle workflow 
historic overview commercial workflow management systems taken 
seventies ellis ii number commercial systems considerably grown years 
considering web service composition languages important take account experience knowledge workflow domain re invent wheel 

workflow patterns critical evaluation web service composition languages set workflow patterns described 
patterns compare functionality workflow management systems cosa visual workflow fort conductor lotus domino workflow meteor mobile mqseries workflow staffware workflow flow inconcert sap workflow eastman flower 
result evaluation reveals expressive power contemporary systems leaves desired systems support different patterns 
note term expressiveness traditional formal sense 
abstracts capacity constraints workflow language turing complete 
sense com pare languages formal notions expressiveness 
intuitive notion expressiveness takes modeling effort account 
intuitive notion referred suitability 
see discussion distinction formal expressiveness suitability 
detailed description discussion patterns refer 
just illustration describe workflow pattern wp deferred choice 
wp deferred choice point process alternative branches chosen information necessarily available point reached 
differs normal exclusive choice choice immediately point reached alternatives offered choice delayed occurrence event 
example contract finalized reviewed signed director operations manager available 
director operations manager notified contract reviewed available proceed review 
note wp different normal choice wp exclusive choice choice decision data choice resolved environment 
table summarizes results comparison workflow management systems terms selected patterns 
product pattern combination checked possible realize workflow pattern tool 
product directly supports pattern constructs rated 
pattern directly supported rated 
solution results spaghetti diagrams coding considered giving direct support rated 
rating applied care indicated 
note pattern supported directly feature provided graphical interface tool scripting language supports construct resorting solutions mentioned implementation part pattern 
example wp multi choice realized network xor splits 
mean workflow system supporting wp parallel split wp exclusive choice directly supports wp 
comparison appears tool supports selected patterns 
fact tools support relatively small subset advanced patterns patterns 
specifically limited support discriminator state patterns cosa synchronization multiple instances flower cancellation activities worth noting 
pattern product staffware cosa inconcert eastman flower domino meteor seq par spl synch ex ch simple choice sync multi disc arb impl mi mi dt mi rt mi def int par table 
main results evaluation workflow products workflow patterns 

web service composition putting workflow management historical perspective introducing workflow patterns means evaluate languages systems focus web service composition investigate apply results workflow domain web services domain 
goal web services exploit xml technology internet integrate applications published located invoked web 
typical example web services application galileo system connects travel agency locations car rental companies hotels tour operators 
truly integrate business processes enterprise boundaries sufficient merely support simple interaction standard messages protocols 
business interactions require long running interactions driven explicit process model 
raises need web service composition languages bpel ws wsfl xlang wsci bpml 
discussing bpel ws likes focus typical technology build soap wsdl uddi 
soap simple object access protocol protocol exchange information decentralized distributed environment typed message exchange remote languages known web service flow languages web service orchestration languages web enabled workflow languages 
mobile mqseries fort vis 
wf 
flow sap 
wsdl web services description language xml format describing network services standard messaging layer soap 
wsdl document defines services collections network endpoints ports 
wsdl definition endpoints messages separated concrete network deployment data format bindings 
allows reuse definitions messages descriptions data exchanged port types collections operations 
concrete protocol data format specifications particular port type constitute reusable binding 
port defined associating network address reusable binding collection ports defines service 
uddi universal description discovery integration definition set services supporting description discovery businesses organizations web services providers web services available technical interfaces may access services 
simply put uddi build yellow pages web services 
point time consensus soap uddi wsdl 
assume standards place remainder 
web service composition languages build directly top wsdl 
process bpel ws provides uses services described wsdl 
note wsdl service composed ports provide operations 
operation sends message way receives sends message request response sends receives message solicit response receives message notification 
wsdl services corresponding operations glued provide composed services 
glue services process model needed specify order operations executed 
web service composition language provides means specify process model 
important difference wsdl language bpel ws state management 
wsdl essence stateless language aware states operations 
state notion supported state sending receiving message request response operation 
technology supporting web service composition language record states processes complex simple 
recording state possible determine done enabling long lived business transactions 
bpel ws specification builds ibm wsfl web services flow language microsoft xlang web services business process design 
xlang block structured language basic control flow structures sequence switch conditional routing looping parallel routing pick race conditions timing external triggers 
contrast wsfl graph oriented relies mainly concept control links 
graphs defined control links nested need acyclic 
iteration supported exit conditions activity subprocess iterated exit condition met 
control flow part wsfl identical workflow language ibm mqseries workflow 
may surprising fact workflow language different 
example semantics control links mqseries workflow defined terms called dead path elimination principle 
idea dead path elimination positive negative values propagated control links determining activities path executed 
idea possible capture basic merging patterns synchronization wp simple merge wp advanced synchronizing merge wp supported mainstream workflow products 
dead path elimination nice feature quite exotic supported systems 
correspondence wsfl mqseries workflow easily explained fact languages defined people 
similar comments xlang microsoft biztalk 
xlang current middleware solution microsoft hardly qualifies standard 
merger languages wsfl xlang different paradigms leads language bpel ws clearly overlapping constructs lacking orthogonality 
example simple patterns wp wp specified structured activities switch sequence control links combinations discussed 
process designers bpel ws require guidance regarding style xlang style wsfl style 
bpel ws standard area web service composition proposed years 
sun bea sap introduced candidate web services composition wsci web service choreography interface taken inputs created web services choreography group www org ws chor 
initiated business process management initiative bpmi org developed bpml business process markup language 
oasis un support ebxml electronic business extensible markup language 
part ebxml business process schema specification standard having similar scope bpel ws wsfl xlang wsci bpml subtle differences deserve investigation 
abundance overlapping standards web services composition overwhelming 
fact collection competing web services standards clear added value termed web services acronym hell :10.1.1.11.8633
outside web services domain initiatives standardize specification executable business processes 
notable initiative workflow management coalition wfmc 
wfmc active standardize workflow process definition language interfaces various workflow components 
august wfmc released xpdl xml process definition language version beta support exchange workflow specifications different workflow products 
jon wfmc chair cto staffware xpdl consistent bpel ws goes far standards web service composition 
clearly people working standards web service composition benefit experiences workflow domain 
clear standards wfmc adopted workflow vendors 
systems export xpdl import xpdl system produce meaningful results 
reasons working workflow standards decade consensus workflow constructs need supported semantics 
remarkable different interpretations join construct exist workflow languages wait join wait reset xor join wait ignore remaining ones wait come 
web service composition languages comparison bpel ws xlang wsfl bpml wsci table 
ratings bpel ws xlang wsfl bpml wsci table taken 
indicated cell table refers direct support construct language directly supports pattern 
indicates direct support 
mean possible realize pattern solution 
fact patterns realized standard programming language meaningless 
feature partially supports pattern construct directly supports pattern imposes restrictions structure process 
show constructs patterns mentioned 
example bpml realizes deferred choice wp choice construct 
semantics choice awaiting arrival event depending event selecting pre specified route captures key idea pattern choice immediately certain point choice activity reached delayed receipt kind external trigger 
bpel ws offers construct similar choice bpml 
bpel ws construct named pick 
show explicit solutions patterns focus big picture shown table 
observations table patterns correspond basic routing constructs directly supported languages 
bpel ws language integrating features block structured language xlang directed graphs wsfl supports union patterns supported xlang wsfl 
bpel ws contrast bpml offer direct support multi choice synchronizing merge 
consequence dead path elimination principle inherited wsfl 
bpel ws support multi merge pattern bpml directly supports languages bpel ws xlang wsfl bpml turing complete 
emulate turing machine theoretically calculation 
observation relevant context hand programming language turing complete imply suitability web services composition 
consider direct support turing completeness 
tions 
due fact bpml bpel ws supports invocation sub processes 
mainstream workflow languages compared languages support deferred choice 
bpel ws concept serializable scopes languages support interleaved parallel routing pattern restrictions 
compared languages supports arbitrary cycles 
comparing bpel ws xlang wsfl bpml wsci contemporary workflow systems basis patterns discussed remarkably strong 
note workflow management systems support cancel activity cancel case implicit termination deferred choice 
addition workflow management systems typically directly support message sending 
trade block structured languages graph languages partly reflected table 
xlang bpml wsci block structured languages 
wsfl graph 
bpel ws hybrid language sense combines features block structured language xlang graph language wsfl 
nearly workflow languages graphbased emphasize need users understand communicate process models 
remarkable languages evaluated table wsfl graph 
attention paid graphical representation wsfl 
languages textual xml graphical representation 
indicate communication models considered requirement 
context refer bpmi initiative business process modeling notation bpmn 
bpmn intended graphical language mapped languages bpml bpel ws 
reflected table expressiveness block structured languages limited structured processes correspondence splits joins 
case bpml forces designers rely signals related constructs raise synch appear workarounds emulate graph language 

discussion conclude return title web service composition languages old wine new bottles 
answer question compared workflow management systems web service composition languages set patterns 
comparison reveals web ser pattern product standard bpel xlang wsfl bpml wsci sequence wp parallel split wp synchronization wp exclusive choice wp simple merge wp multi choice wp synchronizing merge wp multi merge wp discriminator wp arbitrary cycles wp implicit termination wp mi synchronization wp mi priori design time knowledge wp mi priori runtime knowledge wp mi priori runtime knowledge wp deferred choice wp interleaved parallel routing wp milestone wp cancel activity wp cancel case wp request reply way synchronous polling message passing publish subscribe broadcast table 
comparison bpel ws xlang wsfl bpml wsci workflow communication patterns 
vice composition languages adopt functionality workflow systems 
statement old wine new bottles justified 
time remarkable web service composition languages expressive traditional workflow products 
indicates people developing languages may learned experiences workflow domain 
web service composition languages provide explicit support basic communication patterns 
fact languages termed process definition languages atomic activities support sending receiving messages 
communication patterns analysis directly borrowed previous proposal area enterprise application integration 
analysis refined set communication patterns explicitly take account aspects process creation process correlation retries possible direction 
patterns documented may provide starting point 
hope encourage researchers developers look history workflow management frameworks workflow patterns analyse compare competing languages 
suggested researchers order provide formal semantics characterizations emerging languages established process modeling formalisms communicating finite state automata petri nets process algebras 
example interesting formal proofs languages bpel ws map safe non petri nets decision procedures determining unreachable activities bpel ws process definition completeness theorems regarding emerging languages subsets thereof 
early example effort aimed providing formal foundation web service composition broad sense 
believe direction needed field attains level maturity required moving durable standardization efforts 
acknowledgment 
contributing results referred 
van der aalst :10.1.1.11.8633
don go flow web services composition standards exposed 
ieee intelligent systems 
van der aalst dumas ter hofstede 
pattern analysis bpml wsci 
qut technical report fit tr queensland university technology brisbane australia 
van der aalst workflow patterns home page 
www tm tue nl research patterns 
van der aalst ter hofstede kiepuszewski barros 
workflow patterns 
distributed parallel databases 
arkin web service choreography interface wsci 
standards proposal bea systems sap sun microsystems 
arkin business process modeling language bpml version 
cardelli davies service combinators web computing ieee transactions software engineering 
curbera nagy weerawarana 
unraveling web services web soap wsdl uddi 
ieee internet computing march 
curbera goland klein leymann roller thatte weerawarana 
business process execution language web services version 
standards bea systems international business machines microsoft 
ellis 
information control nets mathematical model office information flow 
proceedings conference simulation measurement modeling computer systems pages boulder colorado 
acm press 
ellis nutt 
workflow process spectrum 
sheth editor proceedings nsf workshop workflow process automation information systems pages athens ga usa may 
editor 
enterprise integration patterns www com 
holt 
coordination technology petri nets 
rozenberg editor advances petri nets volume lecture notes computer science pages 
springer verlag berlin germany 
hull benedikt christophides su 
look curtain invited 
proceedings international symposium principles database systems pods san diego ca usa june 
acm press 
kiepuszewski 
expressiveness suitability languages control flow modelling workflows 
phd thesis queensland university technology brisbane australia 
available www tm tue nl research patterns 
leymann 
web services flow language version 
ebxml business process specification schema version 
zur hlen 
workflow process controlling foundation design application workflow process information systems 
logos berlin 
brown 
enterprise application integration wiley tech brief 
john wiley sons new york ny usa 
shapiro 
comparison xpdl bpml bpel ws version 
xml org shapiro xpdl pdf 
thatte 
xlang web services business process design 
white business process modeling notation bpml working draft version 
van der aalst dumas ter hofstede 
analysis web services composition languages case bpel ws 
proceedings nd international conference conceptual modeling er chicago il usa october 
springer verlag 

representation specification automation office procedures 
phd thesis university pennsylvania school business 
