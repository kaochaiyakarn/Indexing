nested queries quantifiers ordered context norman may sven guido moerkotte universit mannheim mannheim germany norman moerkotte informatik uni mannheim de algebraic equivalences allow unnest nested algebraic expressions order preserving algebraic operators 
illustrate equivalences applied successfully unnest nested queries xquery language 
measurements illustrate performance gains possible unnesting 

seminal kim opened area unnesting nested queries relational context 
quickly clear enormous performance gains possible avoiding nested loop evaluation nested query blocks proposed unnesting 
quickly subtleties unnesting apparent 
bugs original approach detected famous count bug 
retrospectively summarize problem areas follows special cases empty results lead easily bugs count bug 
corrected different approaches 
nested query contains grouping special rules needed pull grouping operators 
special care taken correct duplicate treatment 
main reason problems sql lacked expressiveness unnesting took place query language level 
important construct needed correctly unnesting queries outer joins 
sql usage unnesting reordering outer joins important topic 
unifying framework different unnesting strategies sql 
advent object oriented databases query languages unnesting attracted attention 
contrast relational unnesting strategies performed unnesting extended sql source level researchers objectoriented area preferred describe unnesting techniques algebraic level 
algebras allow nesting algebraic expressions subscripts algebraic operators 
example predicate selection join operator contain algebraic operators 
algebras allow straightforward representation nested queries unnesting take place algebraic level 
main advantage approach unnesting rewrites described algebraic equivalences rigorous correctness proofs delivered 
equivalence unnesting techniques remain valid independently query language long queries remain expressible underlying algebra 
example successfully applied sql 
algebras unnesting maintain order 
applicable queries preserve order 
xquery query language allows user specify retain order input documents 
unordered function applied query order result independent input order query processor generate output order 
case xquery expression translated unordered algebra unnesting techniques discovered object oriented context remain applicable 
apart unordered function query processor determine cases output order irrelevant 
examples include aggregate functions distinct values function quantifiers 
result order relevant unnesting techniques object oriented context applied 
quantification core feature xquery keywords express existential universal quantification 
optimization queries containing quantification investigated relational object oriented context see related 
www org xml query area unnesting nested queries xquery 
approach describes grouping operator nested query 
verbal description transformation rigorous complete important restriction guarantees correctness missing 
come back point discussing counterpart eqv 
sec 
technique section 
best knowledge discusses unnesting ordered context 
previous fegaras focus unnesting queries operating streams 
principle possible approach unnesting ordered context 
unclear extent order preservation considered algebraic level hash joins necessarily known order preserving properties 
introduce different unnesting strategies discuss application different query types 
techniques described means algebraic equivalences proved correct 
particular order preserving 
applied algebraic expressions resulting queries aggregate functions different comparison operators correlation predicate existential universal quantifiers 
providing complete framework optimizing xquery queries scope 
provide performance figures query execution plan demonstrating significant speed gained unnesting 
overview approach quantifiers unnesting approach consists steps 
normalization introduces additional clauses nested queries see sec 


clauses translated map operations see sec 
nested algebraic expressions representing nested query see sec 


unnesting equivalences see fig 
pull expressions nested operator 
remainder organized follows 
section briefly motivates defines algebra 
section shows normalize translate nested queries algebra 
section core containing equivalences unnesting nested queries 
way applied demonstrated section 
apply different equivalences queries xquery case document query execution plan www org tr cases provide performance figures 
section concludes 

notation algebra algebra nal extends sal algebra developed beeri 
sal order preserving counterpart algebra extended handle semistructured data 
order preserving algebras interesting context xquery fields dealing time series finance molecular biology network management 
sal nal sequences sets variable bindings sequences unordered tuples attribute corresponds variable 
allow nested tuples value attribute may sequence tuples 
single tuples constructed standard brackets 
concatenation tuples functions denoted 
set attributes defined expression defined 
set free variables expression defined 
projection tuple set attributes denoted expression possibly containing free variables tuple denote result evaluating bindings free variables taken variable bindings provided 
course requires 
set attributes define tuple constructor returns tuple attributes initialized null 
sequences denote element sequence 
identify single element sequences elements 
function retrieves tail sequence concatenates sequences 
denote empty sequence 
application construct sequence non tuple values sequence tuples denoted 
empty empty 

bears similarity generators comprehension calculus 
id denote identity function 
order avoid special cases translation xquery algebra special algebraic operator returns singleton sequence consisting empty tuple tuple attributes 
define order preserving algebraic operators 
unordered counterparts see 
typically translating complex xquery algebra mixture order preserving non order preserving operators occur 
order keep readable employ order preserving operators notation sal 
algebra allow nesting algebraic expressions 
example selection predicate select operator allow occurrence nested algebraic expressions 
join selection predicate possible 
simplifies translation procedure nested xquery expressions algebra 
nested algebraic expressions force nested loop evaluation strategy 
goal remove nested algebraic expressions 
result perform unnesting nested queries source level algebraic level 
approach versatile error prone 
define algebraic operators recursively input sequences 
unary operators input sequence empty output sequence empty 
binary operators output sequence empty left operand represents empty sequence 
order preserving selection operator defined list attribute names define projection operator define duplicate eliminating projection projection similar semantics distinct values function xquery preserve order 
require deterministic idempotent 
just want eliminate attributes 
want eliminate set attributes denote renaming attributes 
write attributes renamed attributes remain untouched 
map operator defined follows extends input tuple new attribute value computed evaluating 
example see 

example map operator define cross product tuple sequences prepared define join operation ordered sequences define semijoin pe anti join pe left outer join play essential role unnesting defined 
definition deviates slightly standard left outer join operator want conjunction grouping aggregate functions 
con sider sequences 
want join left outer join grouped counted values able handle empty groups 
defines value attribute values find join partner case 
rest comparison operator atomic values 
grouping operator produces sequence valued new attribute containing group defined binary grouping operator 
binary grouping operator called defined function assigns meaningful value empty groups 
see example 
unary grouping operator processes single sequence obviously groups values 
binary grouping operator works sequences uses left hand determine groups 
important correctness unnesting procedure 
count count tuple sequence valued attribute unnest unnest operator defined retrieves sequence tuples attribute case empty returns tuple 
example 
define unnest map operator follows operator mainly evaluating xpath expressions 
complex issue delve optimizing xpath evaluation take xpath expression occurring query place 
optimized translation xpath orthogonal unnesting approach covered 
interested reader referred 
result construction employ simplified operator combines pair operators 
executes semicolon separated list commands side effect constructs query result 
operator occurs different forms 
simple form apart side effects identity function returns input sequence 
simplicity assume result constructed string output stream 
simplest command string copied output stream 
command variable string value copied output stream 
complex expressions procedure similar 
expression evaluates sequence tuples containing string valued attribute successively bound author names bibliography document author author embeds author name author element 
group detecting form uses list tributes sequences commands 
define id order preserving duplicate elimination operation definition processes sequence valued attribute created 
grouping general implemented efficiently condition group spans consecutive tuples input sequence group boundaries detected change id 
examples unary binary id attribute values group sequence statements executed tuple group second executed tuple group third executed tuple group 
condition met stable 
sort introducing complex saves grouping operation construct sequence valued attribute 
illustrate simple example 
sume expression produces sequence tuples author title author title author title author title author name name title title author produces author name author name title title title title title title author author name author name title title title title title title author reader ordered sequences state familiar equivalences hold 
course equivalences usual restrictions hold 
example want push selection predicate left part join may attributes join right argument 
words required 
please note cross product join associative ordered context 
commutative 
implementation issues concerning operators nal please consult technical report :10.1.1.10.8538

normalization translation part section briefly describes normalization step applied original query 
takes place source level 
sketch translation xquery algebra 
section give examples steps give examples section 
prior translation algebra normalization step introduces new variables 
called dependency optimization eliminate common subexpressions 
kind optimization vital simple requires mainly traversal query syntax tree 
detail 
basically break query subexpressions consider factorized 
split query possible positions necessary order demonstrate major points 
motivation step apparent considering clause translated operator unnesting equivalences see fig 
operator starting point 
roughly apply steps 
embed range expressions quantifiers new flwr expressions 

break complex expressions introduce new variables subexpressions 

factorize common subexpressions 

move predicates xpath expressions clause possible 
note steps require attention careless application procedure may change semantics query 
query translates algebra 
specify translation procedure means recursive procedures see 
unary binary 
binary procedure responsible translating flwr expressions algebra 
treat order clause concentrate ordered case 
argument binary procedure remainder query translated second argument algebraic expression constructed far 
non flwr expressions unary operation 
mutually recursive flwr expression occur simple expressions vice versa 
translation straightforward technical remarks necessary 
translating clause introduce additional attributes variables items results expressions ei xquery expressions return sequences tuples sequences items data model algebra allows nested sequences tuples 
invent new attribute names 
result ei singleton need 
additionally function converts return expression sequence expressions 
expression treated constant string printed evaluable expression escaped 
applies treatment return clause xquery really advanced focus unnesting nested queries suffices demonstration purposes 
interested reader referred detailed description treat result construction xml query languages 
result construction suboptimal spot translation treatment path expressions 
aware fact efficient evaluation algorithms path expressions exist 
orthogonal unnesting describe optimizing translation procedure 
note ease translation compared described elaborate efficient xpath evaluation 

unnesting equivalences contains equivalences allow unnest nested algebraic expressions 
readers unfamiliar general procedure unnesting nested queries suggest skipping section reading 
advise continue section containing example queries 
having worked examples come back section look rigorous definitions equivalences crucial correct treatment subject 
incorrect unnesting procedures appeared 
commenting equivalences give conditions ensure correctness 
equivalences ai ei 
eqv 
abbreviates 
equivalences 
equivalences function may depend values attributes 
words satisfy sequence 
binary function flwr expressions rest xn en 

xn en rest rest xn en 

xn en rest rest return empty string unary function expressions satisfies satisfies distinct values flwr expression 
en 
en variable constant 
translation xquery flwr expressions algebra projection aggregate function combination condition easily satisfied 
equivalences new attribute 
assume attributes occurring different 
please note conditions eqv 
imply 
equivalences hold 
results replacing equivalences useful 
remember normalization process nested query expression clause translation process translated operation 
unnesting equivalences applied left right 
alternative applications efficient plan chosen 
typically applying equivalences restrictive conditions attached 
case clause contains quantifier translation process results expression matching left hand side equivalences 
look little bit closer equivalences clarify matter due space constraints go details equivalences problem understand equivalences playing similar examples 
consider eqv 
left hand side equivalence shown 
naive nested loop evaluation expression results scans number items 
right hand side equivalence depicted fig possible ure 
efficient evaluation cause needs scanned just independent number items 
eqv 
special case eqv 
applicable projection just contained tuples 
case fear losing tuples empty groups unary grouping operator 
checking equality attributes previous example apply eqv 

case group tuples unary grouping operator resulting sequence 
second step joined left outer join order avoid losing empty groups 
function identity function supplying empty sequence case empty input 
attribute projected away resulting sequence seen right hand side 
related equivalences counterparts traditional algebra unordered sets appeared literature see related discussion 
equivalences new ordered unordered context 
equivalent eqv 
ordered context appeared giving important condition 
counterparts 
appeared example 
ordered context prove correctness new equivalences counterparts unordered context 
proofs equivalences :10.1.1.10.8538
equivalences unnest save scanning document twice leads faster execution 
typically applied unnesting 
count 
equivalences hold ai ei 

example applications section example applications unnesting equivalences 
queries xquery case document dtds 
dtd queries 

rewrote queries renaming variables simplifying slightly retaining essence query 
numbers subsection headings correspond query numbers 
due space restrictions explain matter highly detailed fashion 
readers trying attain deeper understanding suggest retracing transformations means exemplary xml documents taken xquery case document 
verified effectiveness unnesting techniques experimentally 
experiments carried simple pc running linux ghz pentium query evaluation engine compiled 
database cache configured hold queried documents 
xml files generated dtds xquery case document 
executed various evaluation plans different sizes input documents 
note number elements contained input documents measurement 

query grouping query restructures input document grouping books authors note grouping xquery done implicitly 
doc bib xml distinct values author return author name name www org tr cases 
unnesting equivalences element bib book element book title author editor publisher price attlist book year cdata required element author element editor affiliation element title pcdata element pcdata element pcdata element affiliation pcdata element publisher pcdata element price pcdata element reviews entry element entry title price review element price pcdata element review pcdata element prices book element book title source price element source pcdata 
dtd queries doc bib xml book author return title author normalization yields doc bib xml distinct values author doc bib xml book author title return return author name name author normalization query moves nested flwr expression outside return clause new clause 
prepare moved clause translation algebraic expression introducing new variables 
moved predicate path expression clause translated 
note subscripts left hand side equivalences fig 
translation take care important point 
exist different comparison operators xquery simple existential semantics case side contains sequence expressions 
case bound single value bound sequence 
consequently translate 
dtd know book contains single title element 
save attribute invocation concatenation operation implicitly invoked xquery apply simple projection model return clause inner query block 
translation results author doc title author book doc doc doc bib xml author name name author looking left hand sides unnesting equivalences 
obvious candidates 
verify conditions mentioned text sec 
easy eqv 

order meet conditions eqv 
project unneeded attributes away 
necessary eqv 
define 
condition eqv 
obviously holds author elements directly book elements 
case dtd xquery case document 
true dblp dtd 
fact exactly condition escaped authors 
knew document authors written book condition hold 
xquery specifies result sequences return clause generates tuple binding concatenated 
having checked conditions apply equivalences case document dtd satisfied get unnested argument expressions note order destroyed authors expressions produce titles author document order required xquery semantics query 
expression simplified renaming simplified expression enhanced group detecting operator table summarize evaluation times query 
document bib xml contained books authors 
investigate effect different group sizes varied number authors book 
authors evaluation time books plan book nested outer join grouping group query plan outer join needs scan input document twice plans just nested plan needs scan document author times author number author elements input document 
measurements demonstrate massive performance improvements immediate consequence 
evaluation plans scale approximately linear size group 
give performance numbers reasonably sized document ran query dblp database comprising mb 
xml document contains publications including books articles theses 
publication may child nodes authors 
evaluate example query document may apply eqv 
authors published book 
stay general plan outer join 
plan takes seconds evaluate 
stark contrast execution time nested plan little week 
due high execution time limit smaller documents rest 

query aggregation aggregation conjunction grouping 
second query extends query aggregation 
doc prices xml distinct values book title doc prices xml book title price return decimal return minprice title price min price minprice normalize query 
general careful rewriting path expression 
breaking xpath expression query possible know dtd book element exactly price child element 
doc prices xml distinct values book title min doc prices xml book title price decimal return return minprice title price price minprice knowing book element exactly title child element translation yields min book title doc decimal price title book doc translation 
doc doc prices xml minprice title price price minprice project unneeded attributes away define 
title elements book elements considered 
applicable restriction holds eqv 

results efficient plan neglect possibilities space reasons 
applying eqv 
leaves min compare evaluation times plans 
observe impressive performance gains reasons previously explained 
evaluation time books plan nested grouping 
query existential quantifier third example query uses nested existentially quantified expression clause 
note order preservation quantifier needed query retrieves title elements document order 
document bib xml book title document reviews xml entry title satisfies return book review book review normalized query reads document bib xml book title document reviews xml entry title return satisfies return book review book review move correlation predicate range expression translate normalized query true book title doc entry title doc doc document bib xml doc document reviews xml book review book review eqv 
get 
performance evaluation plans compared table 
previous examples unnested query plan scales better larger input documents 
evaluation time books reviews plan nested semijoin 
query universal quantifier existential quantification xquery supports universal quantification 
example returns authors books published 
doc bib xml distinct values author doc bib xml book author satisfies year return new author new author normalization little complex rewrites necessary 
range expression quantifier doc bib xml book author introduce new query block flwr expression 
unnest authors correlation predicate 
year attribute information books needed satisfies part quantifier change range variable 
rewrites discussed depth see detail 
result doc bib xml distinct values author doc bib xml book year author return satisfies return new author new author nested query plan derived application translation rules 
author doc author year book doc doc doc bib xml new author new author eqv 
applicable yields course push second part join predicate second operand 
yields know dtd author elements occur book elements holds apply eqv 
yields aa count comparison evaluation times discussed plans table 
unnested query plans scale better nested plan need scan input document twice 
contrast nested query needs scan author element input document 
evaluation time books plan nested anti semijoin grouping 
query example query nesting occurs predicate clause depending aggregate function count case 
similar having clause sql grouping bids itemno selected result aggregation 
document bids xml distinct values itemno count itemno return popular item popular item normalization extract left argument general comparison turn clause move xpath predicate clause 
document bids xml distinct values itemno count document bids xml itemno return return popular item popular item translation algebra easy 
result tuples inner query counted need introduce operator attribute project 
count itemno doc itemno doc doc document bids xml popular item popular item apply eqv 
unnesting expression 
order check prerequisites hold 
projecting away unnecessary attributes define 
looking dtd bids xml see itemno elements appear directly beneath elements 
condition holds apply eqv 
count evaluation times plan table 
number bids items varied 
average item bids 
measurements verify effectiveness unnesting techniques 
evaluation time bids plan nested grouping 
outlook core equivalences allow unnest nested algebraic expressions 
equivalences counterparts existing equivalences valid algebras operators preserve order 
counterpart published far 
showed correctness equivalences having counterpart unordered context automatically imply correctness ordered case :10.1.1.10.8538
furthermore demonstrated equivalences means example 
showed applicability queries aggregate functions quantifiers 
experimentally compared performance nested algebraic expressions unnested algebraic expressions 
doing enormous performance improvements observed 
measurements include extensive experiments effectiveness unnesting techniques xml queries 
measurements hint performance numbers unnesting algorithm 
general question remains unanswered operator representation suited evaluating xquery efficiently 
order answer question achieved representation 
near plan check far approach taken 
acknowledgment 
simone seeger help preparing manuscript 
help carrying experiments 
anonymous referees giving helpful hints improving 
astrahan chamberlin 
implementation structured english query language 
communications acm 
beeri 
sal algebra semistructured data xml 
acm sigmod workshop web databases webdb 
bhargava goel iyer 
hypergraph reorderings outer join queries complex predicates 
proc 
acm sigmod conf 
management data pages 
chaudhuri shim 
optimizing queries aggregate views 
proc 
int 
conf 
extending database technology edbt pages 
kemper moerkotte 
optimizing queries universal quantification objectoriented object relational databases 
proc 
int 
conf 
large data bases vldb pages 
cluet delobel 
general framework optimization object oriented queries 
proc 
acm sigmod conf 
management data pages 
cluet moerkotte 
nested queries object bases 
proc 
int 
workshop database programming languages 
cluet moerkotte 
classification optimization nested queries object bases 
technical report rwth aachen 
dayal 
nests trees unified approach processing queries contain nested subqueries aggregates quantifiers 
vldb pages 
leonidas fegaras david levine bose 
query processing streamed xml data 
proceedings acm cikm international conference information knowledge management mclean va usa november pages 
acm 
leonidas fegaras david maier 
optimizing object queries effective calculus 
acm transactions database systems 

moerkotte neumann schiele 
anatomy native xml base management system 
vldb journal 
moerkotte 
algebraic xml construction optimization 
world wide web journal 
rosenthal 
simplification reordering query optimization 
acm transactions database systems march 
wong 
optimization nested sql queries revisited 
proc 
acm sigmod conf 
management data pages 
gottlob koch pichler 
efficient algorithms processing xpath queries 
proc 
int 
conf 
large data bases vldb pages 
gottlob koch pichler 
xpath query evaluation improving time space efficiency 
proc 
th int 
conf 
data engineering pages 
hasan pirahesh 
query rewrite optimization starburst 
research report rj ibm 

moerkotte 
optimized translation xpath expressions algebraic expressions parameterized programs containing navigational primitives 
proc 
int 
conf 
web information systems engineering wise 

jagadish lakshmanan srivastava thompson 
tax tree algebra xml 
proc 
int 
workshop database programming languages pages 

sql quel correlation queries aggregates revisited 
erl ucb memo university berkeley 
kim 
optimizing sql nested query 
acm transactions database systems september 
klug 
equivalence relational algebra relational calculus query languages having aggregate functions 
journal acm 
lerner shasha 
query language ordered data optimization techniques experiments 
proc 
th vldb conference pages berlin germany 
may moerkotte :10.1.1.10.8538
nested queries quantifiers ordered context 
technical report university mannheim 

improved unnesting algorithms join aggregate sql queries 
proc 
int 
conf 
large data bases vldb pages 
jagadish lakshmanan srivastava wu 
grouping xml 
edbt workshops pages 
pirahesh hellerstein hasan 
extensible rulebased query rewrite optimization starburst 
proc 
acm sigmod conf 
management data pages 
rosenthal 
query graphs implementing trees freely 
proc 
acm sigmod conf 
management data pages 
seshadri pirahesh leung 
complex query decorrelation 
proc 
ieee conference data engineering pages 
apers 
optimization nested queries complex object model 
proc 
int 
conf 
extending database technology edbt pages 
apers de 
nested loop join queries oodb 
proc 
int 
conf 
large data bases vldb pages 
de 
translating queries efficient set expressions 
proc 
int 
conf 
extending database technology edbt pages 
