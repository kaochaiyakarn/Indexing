state art realtime rendering vegetation contents stephan robert anton fuhrmann center virtual reality visualization july overview polygon algorithms real time design animation fractal plants trees multiresolution rendering complex botanical scenes 
view dependent multiresolution model foliage 
procedural multiresolution plant tree rendering 
modelling branched structures single polygonal mesh point algorithms approximate probabilistic algorithms shading rendering structured particle systems 
creation rendering realistic trees 
interactive visualization complex plant ecosystems 
image algorithms rendering trees precomputed buffer views 
hierarchical image rendering texture mapping hardware 
interactive vegetation rendering slicing blending 
image multiresolution modeling real time foliage rendering 
drop resize billboards 
interactive rendering trees shading shadowing 
algorithm summary state art 
research opportunities 
major goal computer graphics reproduce natural scenes closely possible 
decades computers evolved point highly convincing scenes routinely created 
years hardware accelerated graphics pushing envelope displayed real time 
geometric complexity objects reduced texture bump maps higher quality renderings possible vertex shaders 
natural features remain elusive approach 
urban visualization applications games realistic leaving desired comes ubiquitous real world vegetation 
plants especially trees extremely complex objects acceleration methods applied objects fail produce visually unpleasant results 
trees omitted applications approximation lags realism rest scene 
believe major open issues realtime rendering 
buildings rendered real time astonishing detail final outcome stand artificial green added 
goal report overview current state art realtime rendering trees 
goal increase realism computer generated scenes algorithms examined focus realistic rendering trees 
course research achieving non realistic effects sketch outlines hatched shading methods outside scope see example deussen book overview 
addition presenting algorithm summarize advantages drawbacks separate section 
conclude possible ideas research 
overview chosen number classic papers topic sections publication 
interaction important aspect realtime computer graphics disregard methods put severe constraints viewpoints fixed viewpoint 
research relevant papers publications categorized dimensions general vs vegetation specific method universally usable 
buffer hom 
specific rendering vegetation 
includes closely rendering method tied specific plant model opposed dealing resulting geometry 
modeling vs rendering publication deal mainly modeling 
growth behavior lighting simulation 
rendering 
offline vs realtime rendering algorithm suitable realtime rendering 
goal produce realistic image rendering offline 
ray casting generally main interest publications fell scales 
categorization certainly clearly possible rendering algorithms require specific approach modeling object 
chosen omit papers deal rendering 
furthermore acceleration methods hierarchical buffer typically known computer graphics community may give short algorithms applicable 
general overview rendering acceleration methods recommend 

deussen published interesting book computer generated plants gives overview aspects including modeling offline realtime non photorealistic rendering german 
sections categorization rendering algorithms main rendering primitive 
course distinction applicable hybrid methods described section main contribution typically point image rendering 
polygon algorithms polygonal especially triangular models traditionally predominant rendering primitive computer graphics 
developments hardware acceleration focused triangular data rendering primitive certain advantage comes realtime rendering 
polygonal rendering methods vegetation apply generic acceleration methods triangle strips speed rendering 
algorithms complex polygonal data applied see example 
furthermore see overview methods 
foliage represents majority tree geometric complexity groups leaves small branches approximated single texture mapped polygon 
real time design animation fractal plants trees early algorithm real time rendering fractal plants trees introduced oppenheimer 
due early time publication discusses aspects fractal modeling self similarity presumed 
natural trees strictly self similar typically deviation symmetry due environmental differences 
greater deviation tree parameters random tree appear 
author defines resulting tree statistically self similar represent fact 
fractal model system introduces parameters control variance parameters 
bump mapped polygonal prisms render resulting models 
branches emanating limb simply limb prisms linked approximate curvilinear shapes 
resulting geometry compiled display lists accelerate rendering 
enhance visual impression bump mapped texture applied tree limbs 
texture procedurally generated adding fractal noise ramp passing result sawtooth function 
function wraps seamlessly rendering leaves discussed sample screenshots feature leaves algorithm adapted accordingly 
time publication rendering complex tree images take hours render obviously trying design desired tree rate effective 
display list split static geometry display lists variable transformation matrices 
transformations adjusted efficiently reflect changed parameters 
obviously similar approach support dynamic effects wind forces 
multiresolution rendering complex botanical scenes publication marshall system rendering large collections randomly parameterized plants 
multiresolution rendering system compiles plant models hierarchical volume approximation irregular tetrahedra 
partitioning creates binary tree similar bsp trees traversed quite efficiently 
plant model allows plant information stored various levels detail memory usage 
generation actual geometry subvolume delayed needed 
drastically reduces memory consumption initialization time binary tree need built fully 
compilation progress begins full tetrahedral volume approximation object refined recursively needed accommodate individual polygons 
depending exact intersection polygon tetrahedral volume resulting subvolumes typically tetrahedra 
freedom partitioning method chosen marshall chooses subdivision depending aspect ratio resulting tetrahedra order avoid subvolumes 
rendering proceeds typical multiresolution rendering fashion 
objects close viewer explicit polygons generated objects hidden away rendered groups approximating contents bounding tetrahedra 
view dependent multiresolution model foliage leaf canopy trees contributes huge number polygons tree models proposed simplification method specifically targets foliage 
traditional geometry simplification methods typically applicable leaves consist individual polygons 
topology preserving algorithms succeed non preserving methods typically introduce significant change 
algorithm described succeeds diminishing number polygons crown maintaining appearance 
achieved introducing new method leaf collapse leaves replaced new preserves area similar collapsed leaves 
preprocessing step multiresolution model created sequence leave collapses 
resulting data structure created bottom binary tree polygonal representation individual leaves highest resolution leaves root nodes polygons required minimum representation 
resulting data structure forest binary trees 
list disconnected trees see 
procedural multiresolution plant tree rendering javier propose method parametric systems 
metric quantifies visual relevance branches tree 
focuses branch structures leaves considered 
level detail algorithm operates underlying system avoiding generation geometry rendered 
capture relevance individual chains generated system intermediate weighted tree data structure created 
data structure multiresolution chain generated 
addition output system multiresolution chain supports new instructions save id restore id 
store restore current state unique identifier 
allows weighted tree stored reordered chain sorted node weights 
higher weights important nodes stored finer lods added point tree restore id instructions 
modelling branched structures single polygonal mesh observe main issues rendering polygonal trees growth models produce disconnected meshes branch bifurcations simplified interpenetration meshes 
single mesh obtained facilitate application multiresolution simplification methods 
tree representation proposal sequences elliptical circular contours library created research group obtain triangular meshes contours 
bifurcations require special treatment represented elliptical structures 
handle sections developed algorithm called refinement intervals 
intermediate contours generated regular intervals branching section seperate elliptical sections reached 
intermediate contours generate appropriate polygonal representations 
authors note refinement intervals causes significant increase count resulting continuous mesh easily reduced decimation algorithm 
example data structure represent foliage forest binary trees 
top level nodes numbers represent lowest detail leaf nodes grey contain highest resolution 
ii different uniform levels detail tree polygons polygons polygons 
shown depending distance viewer 
iii view dependent levels detail interest area determined plane polygons 
view dependent multiresolution model foliage section illustrations adapted 
tree generated different levels detail polygons ii trees rendered proper respective sizes 
procedural multiresolution plant tree rendering section illustrations adapted 
intermediate contours modelling branched structures single polygonal mesh section intermediate contour generation 
illustration adapted 
point algorithms levoy whitted introduced points efficient display primitive time render vegetation 
point primitives vegetation share interesting historical connection 
research point rendering somewhat sporadic 
compared triangle texture rendering paths point primitives taken back seat comes graphics hardware optimization hardly surprising 
publications interesting general purpose algorithms specialized methods definitely worth looking 
approximate probabilistic algorithms shading rendering structured particle systems publication william reeves describes stochastic modelling system render forest images 
time publication clearly realtime system hours rendering image vax performance computer systems increased dramatically past decades 
tree drawn set particles line segments small circles representing branches leaves respectively 
particles generated recursive representation preprocessing step 
model self shadowing probabilistic model particle position orientation implemented 
external shadows trees approximated probabilistic function 
creation rendering realistic trees weber penn classic modeling rendering realistic trees includes point rendering 
publication focuses mainly modeling aspect point line primitives leaves branches respectively 
representation created model explicitly converted geometry interpreted runtime 
close distances full resolution polygonal geometry created progressively increasing ranges stems rendered lines leaves points 
heuristic equations transition representations 
interactive visualization complex plant ecosystems deussen system interactively rendering large plant populations point line primitives 
hierarchical scene data structure support coarser representation distant regions 
additionally visual importance factor manually assigned objects allows certain objects rendered higher quality 
point line representations polygonal input data generated semiautomatically 
user needs choose primitive part plant possibly assign importance factor required 
point line data generated automatically stored display lists 
point line representations respective polygonal data reordered randomly order point primitive polygons avoid popping artefacts 
random reordering switching part object polygonal point line representation localized area object distributed entire model see 
rendering point data performed estimating number points required faithful representation 
holes correct coverage 
blending polygonal point data supported rendering part polygonal display list displaying remainder point data 
lists order entire model covered 
line data area covered entire line set calculated compared triangle set represents 
rendering proceeds similar point data 
image algorithms due nature image algorithms performance typically independent object complexity controlled output resolution 
quite suitable complex objects vegetation 
image rendering methods designed general purpose algorithms experimental results vegetation available 
ideas transferred specific algorithms commercial products 
rendering trees precomputed buffer views algorithm proposed max uses precomputed buffer views approximate arbitrary viewpoints 
approach similar chen williams enhancements 
precomputed views acquired parallel projection number viewpoints generated simple longitude latitude sphere partitioning scheme 
assigning importance factors 
left default values 
right setting higher importance factor causing rendered polygons 
triangles coordinates lines points coordinates distance rendered triangles rendered points rendered vertices distance ii blending polygonal point rendering available rendering budget 
interactive visualization complex plant ecosystems section illustrations adapted 
little coherence leaves tree reconstruction arbitrary view point performed pixel basis 
typically leaves pixels undefined information extracted available views 
authors chosen implement multiple buffer layers reduce artifacts 
dynamic shading shadowing supported storing compressed normal vector material information pixel precomputed views 
shading post process values compute diffuse phong shading 
shadows reconstructing buffer view light source testing output pixels buffer 
normal vector material information available shading applied post processing step output pixel time pixel data written output frame buffer 
hierarchical image rendering texture mapping hardware max combine hierarchical tree model image rendering method supports hardware acceleration 
rendering times real time time publication may feasible current graphics hardware 
approach multi layered depth images containing color normal information standard buffer hardware 
orthogonal views calculated level hierarchy 
multiple depth layers computed hardware clipping partition object slabs 
avoid excessive numbers textures number inequivalent subobjects hierarchy limited 
object distance viewpoint hierarchical description traversed current level sufficient approximation actual polygons need generated 
rendering hierarchy traversed list reprojection matrices accumulated textures 
visible instances texture rendered order significantly reducing texture swapping 
reprojection rendering depth images performed similar method 
interactive vegetation rendering slicing blending combines traditional polygonal geometry rendering trunk limbs tree image rendering system crown 
crown rendered multiple parallel layers slices 
group slices specific view direction called slicing 
preprocessing sets slices created various view points 
slicing primitives 
individual leaves assigned closest slice see 
slice rendered individual texture 
rendering closest actual view direction rendered simultaneously correct transparency blending 
goal algorithm accommodate architectural walkthroughs driving simulations viewing trees directly tree supported 
slices perpendicular ground plane blending sets provides sufficient coverage 
inherent limitation method authors speculate blending appropriate arbitrary viewpoints 
image multiresolution modeling real time foliage rendering proposed interesting image rendering approach rendering foliage 
system tree model create hierarchical data structure includes bounding boxes level 
leaves bounding box projected bounding box planes stored impostor textures 
increase visual realism impostors created usual planes main diagonals 
bounding box impostors oriented local coordinate system level 
possible levels recursion visited impostor creation 
reduce spatial cost model representation threshold relative size branch compared entire tree set 
run time hierarchy traversed suitable distance level detail reached 
appropriate viewing distances level hierarchy precomputed better performance 
suitable impostor available original polygonal geometry 
primitive crown assigned closest slice 
ii multiple blended create solid looking rendering 
rectangular frames added slice textures aid visualization 
discrepancy angle degrees 
interactive vegetation rendering slicing blending section illustrations adapted 
drop resize billboards unfortunately information available method developed halper 
observes rendering large numbers trees far field rendered similar multiresolution foliage 
case trees represented billboards far field billboards dropped remainder resized accordingly 
interactive rendering trees shading shadowing image rendering system proposed meyer provides framework rendering trees complex effects shading self shadowing dynamic illumination 
combine hierarchy bidirectional textures provide billboards observer light directions hierarchical visibility structure self shadowing cast shadows 
representation efficient trees hierarchical instancing heavily 
bidirectional texture functions computed associating billboard representation pair view light directions similar brdf see 
different view directions light directions 
rendering arbitrary configuration approximated interpolating 
associated level hierarchy creating new unique instancing 
rendering actual geometry rendered depending distance 
support dynamic lighting effects approximate visibility cube maps computed level hierarchy 
occlusion depends position hierarchy separate cube maps need generated instances 
shadowing computed rendering traversing hierarchy visibility 
casting shadows supported traditional shadow maps rendering light source 
algorithms summary table summarizes algorithms 
certainly possible capture intricate details method simple table individual algorithms studied detail drawing 
additionally factors quality performance difficult judge 
methods run real time years ago may feasible current hardware algorithms limited 
texture memory size run significantly higher quality 
majority algorithms polygonal rendering presumably triangles best supported primitive current graphics hardware 
image methods benefit increased texture performance typically texture mapped polygons rendering 
point systems exposure early beginnings realtime rendering widely accepted polygonal approaches 
especially deussen shows completely ignored 
billboard reconstructed view direction combining closest images stored sampled sphere view directions 
billboard reconstructed light direction combining closest images stored sampled sphere light directions 
complete allows reconstruction billboard view light directions combining stored images implementation 
reconstructing billboards view directions light directions 
geometry scene graph lod instantiated build large branch 
instantiated build tree 
instantiated build scene 
ray tracer images visibility small branch instances visibility large branch instances visibility tree instances ii building hierarchical data structures 
lod generic small branch lod generic large branch lod generic tree scene interactive rendering trees shading shadowing section illustrations adapted 
table indicate certain feature explicitly supported algorithm 
checkmark omitted current state development generally feasible conflicts intentions method example single polygonal branch mesh naturally won support leaves 
performance quality ratings empty circle represents lowest rating full circles highest 
course entirely subjective feel provide overview algorithms perform 
branches branches supported algorithm need rendered separately 
leaves leaves supported algorithm need rendered separately 
view dependent lod support view dependent 
distance levels detail 
animation algorithm support dynamic scenes 
movement branches due wind 
dynamic lighting algorithm support dynamic lighting 
precalculated instancing algorithm explicitly support data reduction instancing 
include outside placement trees enclosing application possible 
quality image quality 
performance fast algorithm 
state art ideally want algorithm supports features table high quality realtime 
current algorithms include features cost 
example approaches support branches foliage difficult integrate realtime animation desired 
holds true image approaches typically involve extensive preprocessing offline generation textures may need adjusted dynamic lighting animation 
notable exception support dynamic lighting expense increased memory demands rendering overhead 
contrast rendering methods types scenes graphics hardware fill rate bandwidth limitations usually performance bottleneck realistic methods described significant cpu overheads 
obviously apply algorithms ratio cpu limited approaches higher areas 
performance quality instancing dynamic lighting animation view dependent lod leaves branches polygonal algorithm fractal plants trees multiresolution botanical scenes multiresolution foliage procedural multiresolution single polygonal mesh point structured particle systems rendering realistic trees interactive plant ecosystems image precomputed buffer views hierarchical ibr slicing blending image foliage rendering drop resize shading shadowing table summary algorithms 
indicate available features circles represent low empty medium half filled high filled quality performance 
research opportunities looking table apparent realtime animation easily implemented state art algorithms 
real trees hardly perfectly light breeze cause individual leaves small move 
rendering methods support high detail problematic image systems need large amounts texture memory required resolution 
feasible solution integration procedural model avoids explicit generation geometry data necessary 
marshall rendering approach go direction restriction supporting static scenes 
point approach spirit deussen combined procedural approach support animation allow large scenes 
point systems suffer quickly bandwidth limitations large areas need covered 
method benefit impostors way polygonal geometry 
render cache ideally applicable level scene hierarchy branches groups trees see 

idea defer generation impostors needed reduce memory footprint allow dynamic updates 
obviously best procedural tree model supports demand generation geometry parts need re rendered 
done scope basic research virtual environments www vr research center vienna austria www funded austrian governmental research program plus 
thomas moller eric haines 
real time rendering 
peters limited second edition 

homepage 
web page 
www com 
eric chen 
quicktime vr image approach virtual environment navigation 
computer graphics annual conference series 
eric chen lance williams 
view interpolation image synthesis 
computer graphics annual conference series 
william dally leonard mcmillan gary bishop henry fuchs 
delta tree object centered approach image rendering 
technical report aim artificial intelligence laboratory massachusetts institute technology 
costa varshney 
walkthroughs complex environments image simplification 
computers graphics 
xavier fran ois julie dorsey 
multilayered impostors accelerated rendering 
computer graphics forum 
oliver deussen 

springer verlag berlin germany heidelberg germany london uk 
oliver deussen carsten marc george drettakis 
interactive visualization complex plant ecosystems 
ieee visualization october 
steven gortler grzeszczuk richard szeliski michael cohen 
lumigraph 
computer graphics annual conference series 
ned greene michael kass gavin miller 
hierarchical buffer visibility 
computer graphics annual conference series 
nick halper 
drop resize billboards 
web page 
cs uni magdeburg de nick billboards billboards html 
donald house greg schmidt scott kitagawa 
visualizing real forest 
ieee computer graphics applications 
interactive data visualization product homepage 
web page 
www com 

interactive vegetation rendering slicing blending 
de sousa torres editors proc 
eurographics short presentations 
eurographics august 
marc levoy pat hanrahan 
light field rendering 
computer graphics annual conference series 
marc levoy turner whitted 
points display primitive 
technical report computer science department university north carolina chapel hill nc 
fernandez vivo 
image multiresolution model real time foliage rendering 
technical report computer graphics section department information systems computation valencia university technology 
javier roberto vivo 
procedural multiresolution plant tree rendering 
computer graphics virtual reality visualisation interaction africa 
javier fernandez roberto vivo 
modelling branched structures single polygonal mesh 
iasted international conference visualization imaging image processing 
dana marshall donald campbell iii 
multiresolution rendering complex botanical scenes 
wayne davis marilyn mantei victor klassen editors graphics interface pages 
canadian human computer communications society 
nelson max oliver deussen brett keating 
hierarchical image rendering texture mapping hardware 
eurographics workshop rendering pages 
nelson max 
rendering trees precomputed views 
proceedings th eurographics workshop rendering 
leonard mcmillan gary bishop 
plenoptic modeling image rendering system 
computer graphics annual conference series 
alexandre meyer fabrice pierre 
interactive rendering trees shading shadowing 
workshop rendering eurographics 
springer verlag wien new york july 
fabrice 
synthesizing landscapes volumetric textures 
xavier peter schr der editors eurographics workshop rendering pages new york city ny 
springer wien 
oppenheimer 
real time design animation fractal plants trees 
david evans editors computer graphics siggraph proceedings pages august 
pfister matthias zwicker jeroen van baar markus gross 
surfels surface elements rendering primitives 
kurt editor siggraph computer graphics proceedings annual conference series pages 
acm press acm siggraph addison wesley longman 
columbia pictures 
final fantasy 
feature film 
william reeves blau 
approximate probabilistic algorithms shading rendering structured particle systems 
sig graph conference proceedings annual conference series 
acm sig graph 
miguel oscar jose cristina 
real time tree rendering 
technical report departamento de sistemas universitat campus de sec spain 

miguel jose oscar 
view dependent multiresolution model foliage 
journal wscg wscg proceedings february 

dynamically generated impostors 
gi workshop modeling virtual worlds distributed graphics bonn germany 

object image warping layered impostors 
george drettakis nelson max editors rendering techniques eurographics pages 
springer verlag wien new york 
schultz schumann 
automatic instancing hierarchically organized objects 
spring conference computer graphics conference proceedings slovakia 
jonathan shade lischinski david salesin tony derose john snyder 
hierarchical image caching accelerated walkthroughs complex environments 
holly rushmeier editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
held new orleans louisiana august 
wand fischer meyer 
randomized point sampling output sensitive rendering complex dynamic scenes 
michael wand matthias fischer peter meyer auf der heide wolfgang stra er 
randomized buffer algorithm interactive rendering highly complex scenes 
eugene fiume editor siggraph computer graphics proceedings pages 
acm press acm siggraph 
jason weber joseph penn creation rendering realistic trees 
robert cook editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
held los angeles california august 
zheng sun bao peng 
rendering virtual environments polygonal point models 
vrst conference proceedings hong kong 
acm press acm siggraph 

