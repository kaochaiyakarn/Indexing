resource bounded kolmogorov complexity revisited harry buhrman cwi po box gb amsterdam netherlands lance fortnow university chicago department computer science th st chicago il usa sophie lri universit paris sud orsay france may take fresh look cd complexity cd size smallest program distinguishes strings time jxj 
look cnd complexity new nondeterministic variant cd complexity time bounded kolmogorov complexity denoted complexity 
show results relating time bounded cd cnd complexity applications variety questions computational complexity theory including showing approximate size set cd complexity random string needed sipser earlier proof similar result 
give new simpler proof result sipser 
improving bounds strings extractors 
proof valiant vazirani lemma directly sipser earlier cd lemma 
relativized lower bound cnd complexity 
exact characterizations equivalences cd cnd complexity 
showing satisfying assignments satis able boolean formula enumerated time polynomial size output unique assignment quickly 
answers open question papadimitriou 
new kolmogorov complexity proof bpp new kolmogorov complexity constructions relativized worlds exists nite set sparse nite np subsets 
exp nexp exists nexp machine accepting paths exponential time 
satisfying assignments nonadaptive queries sat 
mail buhrman cwi nl 
part research done visiting university chicago 
partially supported dutch foundation scienti research nwo nfi project aladdin contract number nf 
email fortnow cs uchicago edu 
supported part nsf ccr 
email lri fr 
done university chicago 
originally designed measure randomness strings kolmogorov complexity important tool computability complexity theory 
simple lower bound showing exist random strings length important applications see lv chapter 
early history computational complexity theory people naturally looked resource bounded versions kolmogorov complexity 
line research initially fruitful led interesting results 
particular sipser sip invented new variation complexity cd complexity considers size smallest program accepts speci string 
sipser cd complexity rst proof bpp contained polynomial time hierarchy 
complexity theory past decades resource bounded kolmogorov complexity seen little interest 
computational complexity theory matured bit ought look back resource bounded kolmogorov complexity see new results applications draw 
algebraic techniques give new upper bound lemma cd complexity additional advice required sipser lemma sip 
lemma approximately measure size set cd complexity 
obtain better bounds cd complexity extractor graphs 
graphs usually derandomization 
improved bounds apply strings 
give new simpler proof sipser lemma show implies important valiant vazirani lemma vv randomly isolates satisfying assignments 
surprisingly sipser predates result valiant vazirani 
de ne cnd complexity variation cd complexity allow nondeterministic computation 
prove lower bound cnd complexity show exists nite set string high cnd complexity allow access oracle 
lemma prove negative results nondeterministic search vs deterministic decision 
tools place unify important theorems complexity theory 
answer open question papadimitriou pap characterizing exactly set satisfying assignments formula enumerated output polynomial time 
give straightforward proofs bpp rst proven acs see sip create relativized worlds assignments sat non adaptive queries sat rst proven buhrman bt exp nexp exists nexp machine accepting paths exponential time rst proven impagliazzo tardos 
results original form require great deal time fully understand proof ideas technical details quite complex 
show understanding resource bounded kolmogorov complexity see full complete proofs results additional ort 
look polynomial time cd cnd complexity coincide 
give precise characterization equality measures interesting consequences thereof 
preliminaries basic concepts notation computational complexity theory texts azar az bdg kolmogorov complexity excellent book li vit anyi lv 
jxj represent length string jjajj represent number elements set set strings length denotes set integers logarithms base 
formally de ne kolmogorov complexity function xjy xjy min xg 
exists universal machine constant cu xjy xjy xjy cu xjy 
de ne unconditional kolmogorov complexity xj 
basic facts kolmogorov complexity choice ects kolmogorov complexity additive constant 
constant jxj jxj xjy time bounded kolmogorov complexity 
fix fully time constructible function de ne xjy complexity function xjy min runs jxj jyj xj 
di erent universal may ect complexity constant additive term time log factor 
usual kolmogorov complexity asks smallest program produce string may want know smallest program distinguish string 
di erence ects unbounded kolmogorov complexity constant di erence time bounded case 
sipser sip de ned distinguishing complexity cd cd xjy min accepts 
jpj rejects 
runs jzj jyj steps auxiliary input string empty string write cd 
fix universal nondeterministic turing machine de ne nondeterministic distinguishing complexity cnd cnd xjy min accepts 
jpj rejects 
runs jzj jyj steps de nition mean nondeterministic turing machine accepts rejects usual sense nondeterministic computation 
cnd cnd xj 
allow relativized kolmogorov complexity 
example cd xjy de ned universal machine access oracle 
distinguish string generating comparing input stated lemma 
lemma cd ct log constant 
likewise deterministic computation nondeterministic computation lemma follows 
lemma cnd ct log cd section examine consequences converses lemmas 
approximating sets distinguishing complexity section derive lemma enables deterministically approximate density set polynomial time distinguishing complexity 
technique considering values modulo prime reminiscent hashing division method see knu 
lemma fx 
half primes dn mod proof holds di erent prime numbers mod chinese remainder theorem 
alternatively jx prime factors 
dn primes mod prime number theorem ing see hw states approximately ln log primes dn log dn dn primes dn half primes mod lemma set 
strings holds cd log jja jj log polynomial proof fix fix prime ful lling conditions lemma cd poly program works follows input reject mod mod accept reject size program jp jx mod 
log jjajj log 
clear program runs polynomial time accepts note lemma works cnd complexity polynomial 
buhrman blm show lemma tight 
theorem buhrman polynomial suciently large exists set strings containing strings cd log jja jj corollary set string holds cd log jja jj log polynomial proof scheme lemma specifying length yielding extra log term jxj plus additional log log penalty concatenating strings 
theorem gives relativized tightness result corollary 
corollary 
set sparse cd log jxj polynomial 
set sparse cd log jxj polynomial 
set np sparse cnd log jxj polynomial proof lemma yields strings sparse set log cd complexity 
hand simple counting shows set string cnd log jja jxj jj 
sipser lemma lemma give simple proof important result due sipser sip 
lemma sipser polynomial time computable set exists polynomial constant cd xjr log jja jj log proof list randomly chosen numbers concatenation fix jja jj 
fix dn consider numbers listed prime number theorem hw probability prime dn log dn probability ful lls conditions lemma log dn probability ful lls condition lemma 
probability listed ful lling conditions lemma describe mod pointer note sipser original proof gives tighter bound log applications additional log additive factor substantial di erence 
comparing lemma sipser lemma lemma able eliminate random string required sipser cost additional log jja jj bits 
approximating sets extractors extractors obtain nearly bound sipser lemma random string requires 
result works strings theorem set function polynomial fraction cd log jja jj log 
give nondeterministic version result give bound cnd complexity 
give randomized version theorems stating shorter string chosen random probability getting short string encodes information original string bounded away 
extractors extractor thought bipartite graph rst color class larger second color class 
convention think rst color class left second right 
vertices left side strings length rst color class equated set likewise vertices right side graph labeled strings length equated vertices second color class 
distributions choosing node left side graph random distribution result choosing neighbor uniformly random graph produce distribution vertices right 
min entropy distribution de ned minf log jx min entropy thought measure randomness string chosen distribution said close distributions space jy 
de nition extractors bipartite graph independent vertex sets degree vertices rst color class bounded extractor distribution vertices min entropy result choosing distribution random neighbor graph close uniform distribution 
setting distribution uniform distribution subset log jjajj 
denotes set neighbors vertex left side graph 
number edges originating vertex left side graph called outdegree number edges adjacent vertex right side graph called indegree weight represents rth neighbor graph multiple edges allowed 
vertex right side graph subset preimages lie notation extends sets natural way 
best known explicit constructions results state subject improvement better explicit extractor constructions 
stated results general terms new results extractors immediately applicable 
current best known explicit constructions extractors due ta zuckerman trevisan raz reingold ta tre 
extractors best suited purposes ones constructed smallest amount additional randomness 
illustrate results parameters obtained ta construction 
theorem ta explicit construction function yields extractor parameters log useful compare construction current lower bound extractors due nisan zuckerman nz 
theorem nisan zuckerman constant extractor parameters case minfm log lower bound gives indication limits techniques described 
extracting cd complexity theorem follows immediately result explicit extractor construction ta 
theorem assume explicit extractor construction parameters write theorem fix set polynomial 
polynomial fraction 
jyj 
yjx 
cd log jja jj log log jja jj underlying extractor parameters determined log jja jj small absolute constant 
remainder section jja jj 
setting think set de ning distribution min entropy log 
string represents element neighbors graph length computing requires knowing short random string length see short additional distinguishing information suce distinguish string sense cd complexity 
lemmas heart argument 
allow upper bound number bad elements bad means strings theorem apply 
order get short description need nd string range small indegree counting edges originating lemma properties extractor obtain upper bound number large indegree 
statement lemma variable represent threshold degree vertex degree larger large degree 
typical value twice average degree graph 
lemma gives upper bound number left side extractor neighbors lie small subset right side graph 
small subset set vertices large indegree bad theorem apply 
lemma consider restriction extractor set edges originating recall degree graph bounded restricted graph indegree threshold ds ds subset vertices right hand side extractor graph 
jjy jj ds proof set vertices indegree restricted graph exceeds graph extractor case jjy jj ds jjy jj jjy jj get jjy jj ds claimed 
lemma restricted graph set right side graph gjj jjy jj proof fx distribution consists picking random element choosing random neighbor gives measure jjxjj set extractor property jjxjj jjy jj conclude give proof theorem 
proof set statement theorem 
lemma applied ds lemma hypothesis lemma size subset indegree size range indegree ds label edges connects need verify properties pairs 
jyj choice extractor 
yjx algorithm print contain encoding input computes outputs result 

cd log log program recognize contain encoding indegree ds contain distinguishing program recognizes ds vertices left originating adjacent 
encoding required test adjacent may omitted degree graph polynomial 
case current explicit ecient extractors degree order log length bounded log ds log log ds lemma 
additional logarithmic term needed encode lengths various components encoding bundled notation 
algorithm follows input reject reject accept reject program requires encoding distinguishing program total length log ds log log ds 
extracting cnd complexity statement analogous theorem cnd complexity 
slight variant proof theorem get bound smaller term upper bound cd possibly larger term 
theorem fix set np polynomial 
polynomial fraction 
jyj log jja jj 
yjx 
cnd cd log 
proof essentially theorem 
simplify notation assumption extractor achieves ta construction 
obtain property need guess verify guess distinguishing program length bounded cd 
likewise simply guess omit encoding distinguishing program verify guess randomly extracting cd complexity variant saves log term choose counterpart string set random 
require half edges map comes cost applying strings improves result sipser sip reducing length random string log 
proof similar theorem requires slight modi cation counting argument 
theorem fix set polynomial function 
polynomial fraction half strings length 
jyj log jja jj 
yjx 
cd xjr log 
extracting random strings previous section fact strings examined small set bounded complexity showed existence strings mutual information roughly cnd complexity original string 
extractor techniques achieve slightly di erent goal 
obtain incompressible string length close cd complexity computed log bits 
case unbounded kolmogorov complexity easy see proposition true 
proposition lv ex 
string length 
jyj 
yjx log 
jyj 
minimal length program obtained dovetailing value 
time bounded setting argument fails dovetailing take time 
extractors far eld approach yields results surprisingly close proposition 
non explicit extractors allow give alternate proof proposition artifact useful new proof 
theorem polynomial function exists polynomial string length string 
jyj cnd log 
yjx log 
jyj absolute constants depends 
giving proof theorem prove result general form may improved explicit extractor constructions improved 
theorem polynomial exists polynomial string string 
jyj 
yjx 
jyj absolute constant constant depending cnd 
log parameters explicit extractor 
theorem follows applying theorem parameters obtained ta extractor ta 
proof sketch consider family extractors parameters 
fix extractor parameters 
speci value 
fxj lg chosen log large fact extractor prohibits set large see 
jja jj properties extractor jjc jj jjc jj chosen log order get contradiction 
conclude jja jj may apply lemma cnd conclude small cnd complexity 
notice verifying membership 
polynomial suces guess neighbor program length prints exists constant cnd 
log jja jj log consider respect extractor cnd 
log maximal observation case mapped easy verify satis es properties claimed statement theorem 
lower bounds section show exists nite set string high cnd complexity relative fortnow fk prove result relativized cd complexity theorem nite set polynomial cd jxj extend strengthen result cnd complexity theorem nite set cnd jxj jxj proof fortnow theorem uses fact start large set strings length polynomial time algorithm input query nondeterministic machine may query string length 
need careful proof 
proof proof result due goldsmith kunen ghk obtain corollary 
section describe rough equivalence result search theorem impagliazzo tardos 
proof theorem create set stages 
stage pick large add nonempty set strings length nondeterministic programs running time jpj accepts zero strings rst create programs possible accept zero strings carefully remove strings guarantee rest programs accept strings 
set nondeterministic programs size 
jjp jj clock programs reject take time assume program input oracle queries jjp jj jjp jjv pick sets 
maximizes jj 
jj 
jj 

note 
jj jj small program accepts 
nal subset guarantees 
accept strings create 
accepts strings initially 
integer pick minimal accepts 
fix accepting path queries path 
note jjq jj remove jjp jjv strings total 
nd appropriate violated maximality jj 
jj 
note disjoint 
initially set unmarked 

twice pick unmarked mark 
accepts processed 

jjp jj get marked nished nd unmarked note 
accepts 

guarantees 
ful lled requirements stage theorem get corollary rst proved goldsmith kunen ghk 
corollary goldsmith kunen relative oracle exists nite polynomial time computable set nite sparse np subsets 
proof theorem oracle set suppose nite sparse subset np pick large applying corollary follows cnd log 
contradicts fact theorem 
argument shows stronger corollary relative oracle exists nite polynomial time computable set nite subset np density remains open corollary holds 
cd vs cnd section deals consequences assumption complexity measures cd cnd coincide polynomial time 
see assumptions equivalent studied complexity theoretic assumptions 
allows apply machinery developed previous sections 
function classes de nition 
class fp np log class functions computable polynomial time adaptively access oracle np log times 
class fp np tt class functions computable polynomial time access oracle np 
theorem equivalent 
cnd log jxj jyj 

cd cnd log jxj jyj 

fp np log fp np tt proof trivial 
rst need lemma due lozano see jt pp 

lemma fp np log fp np tt fp np tt exists function fp generates polynomial size set 
fp np tt see exists cnd log jxj 
assume machine computing produces list queries fq sat 
exact number queries sat 
jjq 
consider cnd program input generate guess sat guess satisfying assignments reject satis able 
compute answered fq answered accept size program log jxj accepts runs time polynomial constant depending follows pre xes cnd complexity bounded log jxj log jxj 
assumption exists polynomial constant cd log jxj pre program 
jrj log jxj 
accepts 
rejects 
runs time jxj juj jxj 
procedure enumerate possibilities jyj 
consist strings length extends string sm sm consist strings jrj log jxj accepts jxj steps fug accept jxj steps 
note sm size bounded jxj algorithm runs polynomial time 
discussion belong jyj follows lemma fp np log fp np tt 
string cnd program length witnesses 
consider function wm length th bit equal nondeterministically accepts steps 

note cnd program runs steps accepts exactly string length jyj jxj jyj hard see general fp np tt assumption fp np log machine jyj jyj jxj log jyj jxj answers np oracle generate polynomial time 
cnd log jyj jxj corollary results jt 
class limited nondeterminism de ned dt 
de nition function 
class np denotes class languages accepted polynomial time bounded nondeterministic machines inputs length nondeterministic moves 
tor jt show series consequences assumption fp np log fp np tt theorem get consequences collapse cd cnd complexity 
corollary cd cnd log jxj jyj 
np log included 
sat np log 

sat dtime log log 

exists polynomial formulae variables satis able exists satis able cnd jh log log consequence simply tor results notation 
corollary get complete collapse constant di erence cd cnd complexity 
theorem equivalent 
cnd 
cd cnd 
np 
proof sketch easy 
corollary combined assumption formulae satis able cd jh log log satis able enumerate programs length log log nd formula polynomial time create subset size log contains satis able formula original list 
apply standard tree pruning algorithm nd satisfying assignment satis able formula 
simple modi cation proof shows theorem holds replace constant log 
corollary need de nition see 
de nition promise problem pair sets 
set called solution promise problem 
function denotes set boolean formulas satisfying assignments formulae length theorem states nondeterministic computations accepting computations compressed nondeterministic computations nondeterministic moves poly cd poly theorem equivalent 
cd 
sat sat solution 
time constructible sat solution np log log 
proof proven fk 
take fact dt np log 
formula satisfying assignments 
lemma yields satisfying assignment exists polynomial cd log log 
follows log log constant polynomial limited nondeterministic machine guesses program program size log log runs relative accepts generated string satisfying assignment 
corollary fp np log fp np tt implies 
promise problem log sat sat solution 
class languages accepted nondeterministic machines log accepting paths inputs length included proof follows theorem theorem corollary 
satisfying assignments show connections cd complexity nding satisfying assignments boolean formulae 
cook theorem coo nding satisfying assignments equivalent nding accepting computation paths np computation 
enumerating satisfying assignments papadimitriou pap mentioned proposition proposition exists turing machine formula output set satisfying assignments time polynomial jjajj 
cd complexity show 
theorem proposition equivalent sat sat solution proposition require machine halt printing assignments 
machine required halt time polynomial jjajj proposition equivalent np 
proof theorem implication sat sat having solution straightforward 
concentrate direction 
jjajj 
lemma theorem element xj log log polynomial constant simply try program length increasing order enumerate satisfying assignment 
computing satisfying assignments section turn attention question complexity generating satisfying assignment satis able formula wt ogi bkt 
known kre generate leftmost satisfying assignment fp np tantalizing open question compute necessary leftmost satisfying assignment fp np tt formalizing question de ne function class sat sat sat satisfying assignment 
question sat fp np tt 
translating cnd setting 
lemma sat fp np tt sat exists satisfying assignment cnd log polynomial constant lemma consider relativized version sat gj adding series extra predicates true toda watanabe wt showed relative random oracle sat fp np tt 
hand buhrman bt showed exists oracle sat fp np tt 
result holds relative set constructed theorem 
theorem relative set constructed theorem sat fp np tt 
proof formula variables true suppose sat fp np tt 
follows lemma exists cnd log jxj polynomial contradicting fact cnd jxj jxj 
isolating satisfying assignments section take kolmogorov complexity view statement proof famous valiant vazirani lemma vv 
valiant vazirani lemma gives randomized reduction satis able formula formula non negligible probability exactly satisfying assignment 
state lemma terms kolmogorov complexity 
lemma polynomial sat jrj jrj satisfying assignment cd ajh ri log 
usual valiant vazirani lemma follows statement lemma choosing log size program randomly 
show derive valiant vazirani lemma sipser lemma lemma 
note sipser result predates valiant vazirani couple years 
proof lemma consider set satisfying assignments 
apply lemma conditioned part random strings 
blog jjajj get element cd program length bounded log constant di erent elements di erent programs strings length log distinguish assignment rest list di erent strings length log 
random strings program distinguishes assignment give cd program log bits giving pointer search vs decision exponential time np satis able formula binary search nd assignment 
expect similar result exponential time computation exp nexp nd witness nexp computation exponential time 
proof polynomial time breaks binary search input questions get long 
impagliazzo tardos give relativized evidence problem hard 
theorem exists relativized world exp nexp exists nexp machine accepting paths exponential time 
give short proof theorem theorem 
proof theorem theorem 
encode tally set exp nexp nondeterministic oracle machine runs time nexp complete 
initially 
string lexicographic order put accepts 
construction 
query strings length jwj construction give exp nexp show exists nexp machine accepting paths time exponential relative consider nexp machine input guesses string length accepts note runs time jnj suppose accepting computations time jnj log relative theorem large cnd log jjf gjj 
show lemma 
lemma cnd log log log assuming lemma theorem follows jw 
contradiction equation 
proof lemma construct program nondeterministically distinguish log bits encode reconstruct 
suppose reconstructed length construction strings length depend oracle strings length guess strings form nondeterministically verify strings time log nd impagliazzo tardos prove theorem search problem 
relate problem cnd complexity theorem 
de nition search problem player input variables zero wants nd 
player ask rounds parallel queries certain type wins player discovers 
impagliazzo tardos result search problem prove theorem 
theorem queries restricted klr player lose non zero setting variables 
proof similar theorem prove similar bound theorem 
needs just apply theorem relative strategy player 
theorem prove weaker version theorem 
pick large time bound suppose cnd xed cnd program distinguishes nondeterministically nd ith bit queries guessing accepting computation 
express computation complement dnf question 
build strategy search try jpj jpj rst round dnf described 
gives list jpj possible 
just try 
solves search problem jwj 
theorem tn logarithms get log log log log 
contradiction bn 
particular gives nite set cnd jxj bpp second level polynomial hierarchy applications sipser sip randomized version lemma proof bpp show approach taken lemma yields new proof result 
rst prove variation lemma 
lemma fx 
exists prime number mod log 
proof consider prime numbers 
holds log log log di erent prime number mod di erent pairs strings exists prime number rst log log prime numbers holds mod applying prime number theorem hw follows take log log 
idea lemma way approximate number accepting paths bpp machine note set accepting paths set small exists prime number satisfying lemma 
hand set big prime number exists 
veri ed exists number pairs accepting paths mod order apply idea need gap number accepting paths set square set jj jxj set jj jxj 
apply zuckerman oblivious sampler construction obtain gap 
theorem probabilistic machine witnesses set bpp 
assume uses random bits 
exists machine uses log random bits pr accepts pr accepts proof sampler log bpp witnessed probabilistic machine apply theorem obtain algorithm works follows input guess log log mod accept reject jj log lemma guarantees program accepts 
hand jj log prime number log log pair strings congruent modulo follows number log log log log di erent holds mod goldreich zuckerman gz independently zuckerman sampler give proof bpp acknowledgments jos azar leen david zuckerman comments subject 
john tromp current presentation proof lemma 
richard beigel bill stuart kurtz amber settle leen anonymous referees comments earlier drafts 
bdg azar az structural complexity springer verlag 
bkt buhrman 
functions computable nonadaptive queries np 
proceedings th ieee structure complexity theory conference pages 
ieee computer society press 
blm buhrman 
new bounds language compression problem 
proceedings th ieee conference computational complexity pages 
ieee computer society los alamitos 
bt buhrman 
complexity generating checking proofs membership 
reischuk editors th annual symposium theoretical aspects computer science number lecture notes computer science pages 
springer 
coo cook 
complexity theorem proving procedures 
proceedings rd acm symposium theory computing pages shaker heights ohio 
dt az tor 
classes bounded nondeterminism 
math 
systems theory 
selman yacobi 
complexity promise problems applications public key cryptography 
information control may 
fk fortnow 
resource bounded instance complexity 
theoretical computer science 
ghk goldsmith kunen 
polynomial time compression 
computational complexity 
gj goldsmith joseph 
relativized isomorphisms np complete sets 
computational complexity 
gz goldreich zuckerman 
proof bpp ph 
electronic colloquium computational complexity 
ogihara selman 
computing solutions uniquely collapses polynomial hierarchy 
siam comput 
hw hardy wright 
theory numbers 
oxford university press london th edition 
ing ingham 
distribution prime numbers 
cambridge tracts mathematics mathematical physics 
cambridge university press 
impagliazzo tardos 
decision versus search problems super polynomial time 
proceedings th ieee symposium foundations computer science pages 
jt tor 
computing functions parallel queries np 
theoretical computer science 
knu knuth 
sorting searching volume art computer programming 
addisonwesley second edition 
kre 
complexity optimization problem 
computer system sciences 
lv li vit anyi 
kolmogorov complexity applications 
springer verlag second edition 
nz nisan zuckerman 
deterministic simulation logspace 
proceedings th acm symposium theory computing pages 
ogi ogihara 
functions computable limited access np 
information processing letters 
pap papadimitriou 
complexity knowledge representation 
invited presentation eleventh annual ieee conference computational complexity may 
raz reingold 
extracting randomness reducing error trevisan extractors 
proceedings th acm symposium theory computing pages 
sip sipser 
complexity theoretic approach randomness 
proceedings th acm symposium theory computing pages 
ta ta 
extracting randomness weak random sources extended 
proceedings th acm symposium theory computing pages 
tre trevisan 
construction extractors pseudo random generators 
proceedings th acm symposium theory computing pages 
vv valiant vazirani 
np easy detecting unique solutions 
proceedings th acm symposium theory computing pages 
wt watanabe toda 
structural analysis complexity inverse functions 
mathematical systems theory 
zuckerman 
randomness optimal sampling extractors constructive leader election 
proceedings th acm symposium theory computing pages 

