learning tag multilingual texts observation scott bennett aone craig lovell sra international fair lakes court fairfax va bennett sra com describes robotag ad prototype machine learning multilingual information extraction system 
describe general client server architecture learning observation 
give detailed description novel decision tree tag ging approach 
robotag performance proper noun tagging task english japanese compared human tagged keys best hand coded pattern performance reported muc met evaluation results 
re lated directions pre sented 
ability tag proper names zation person place names multilingual texts great value tasks information ex traction information retrieval machine trans lation aone 
successful systems currently rely hand coded patterns identify desired names texts adv def 
approach achieves best performance different hand coded rule sets language domain pair 
sev eral systems improved ease particularly speed write pat tern evaluate performance refine pattern loop plays central role development process 
approach name tagging assist creation hand coded rules making easier developer mark parts name surrounding context include pattern 
boosts productivity hand coding rules re quires significant amount effort developer identify key parts pattern 
step determine generalize rule broadly applicable suggest developer parts context high value inclusion pattern 
skilled developer thorough knowledge particular pattern language essential 
goal developing robotag possible user build tagging system simply giving examples tagged requiring user understand pat tern language 
robotag uses machine learning algorithm discover features training ex amples common 
knowledge construct tagging procedure find addi tional previously unseen examples extraction 
important confidence users tagging procedure induced system easily explained terms de 
factors led consider decision trees quinlan key component system 
potential learning statistical approaches problem neural nets hidden markov models offer advantage 
robotag system particularly instrumented exploration different learn ing system parameters inspection induced tagging procedures 
discuss architecture system 
focus machine learning algorithm employed tag learning 
experimental results compare robotag human tagged keys best hand coded rule systems 
lastly related directions discussed 
robotag architecture robotag design motivated goal de interactive learning system 
system process large number texts provide ability visualize learning results allow feedback learning system 
robotag designed client server architec ture 
client interface enhancement manual annotation tool 
interface works multiple languages includes support single double byte coding schemes 
focus english japanese 
server por tion system performs document man agement text preprocessing machine learning functions 
important facilitate user learning system essential show learned results rapidly 
separating client interface server performs learning functionality possible fast machines cpu intensive learning operations relying user desktop machine 
client interface client consists tagging tool interface written tk tcl cross platform gui scripting language 
interface shown designed pri function tagging tool 
easy user mark edit tags mul texts 
tool reads writes texts sgml format 
distinguishes tagging tool manually tagged documents passed back robotag server build tag ging procedure line user tagging 
robotag suggest tagged having received training observa tion user 
interface augmented displays allow thorough learned tagging procedure 
include graphical displays induced logic tagging cf 
graphical displays tagging accuracy precision recall ability inspect examples texts justify induced tagging procedure 
server robotag server performs tag learning func tions 
manages training testing files extracts features learns tagging procedures tagged training texts applies un seen test texts 
robotag client invokes instance server handle learning tasks 
multiple servers running machine independently handling single client tasks 
robotag server receives commands client returns learning re sults 
dialogue server main tains intermediate results learned tagging procedures texts preprocessed learning evaluation state information current task 
includes parameter settings learning algorithm feature usage statistics preprocessor output 
client connects robotag server network tcp ip 
defined interface server act learning engine text handling applica tions 
examples server commands include 
process text training testing 
learn classifier tag 
evaluate learned classifier text 
load previously learned classifier save 
change learning parameter 
enable disable lexical feature learning tag robotag learn place tags varying types text 
means placing appropriate sgml tag person prior son name text person name sgml tag person 
order compare name tag ging system results reported message un conference muc adv multilingual entity task met def tagging people places organizations 
robotag provides learning types tags 
tag learning task robotag builds decision trees predict tags predict tags 
results classifiers combined tag matching algorithm yield complete tags type 
tag post processing step resolves overlapping tags differ ent types prioritization scheme 
altogether learned tagging procedure 
section describe robotag decision tree learning learning representation learning pa rameters tag matching algorithm post processing 
decision tree learning robotag learns decision tree classifiers predict tags type text 
decision trees trained texts tagged manually 
learning tag classifiers build decision trees quinlan 
learn decision tree classifiers distin items class tributes training examples 
attributes referred 
decision tree classification node indicates feature test performed 
result test indicates branch tree take 
ultimately leaf node tree reached specifies classification result 
produce decision trees information theoretic criteria called information robotag uses decision tree classifiers part learned tagging procedure 
discussed section 
specially adapted directly preprocessor produced data structures ef ficient operation data files normal mode operation 
gain ratio measure step tree construction feature test best distin examples basis class 
simplest classification problem involves learning distinguish positive negative examples concept 
case means characterizing text positions tag text positions 
order extract learning features tag server employs preprocessor plug language operates 
preprocessor forms tokenization word segmentation ical analysis lexical lookup necessary language 
preprocessor produces output defined format languages server uses carrying learning 
stance processing japanese robotag may features uniquely japanese may english vice versa 
table shows features robotag learning 
shows screen shot portion decision tree trained produce tags 
leaf nodes tree selected pro window shows person names con text classified leaf 
test branch prior shown window tests see word prior current word person ti tle president secretary judge decision start name reagan robert re spectively 
screen shot goes show previous word person title system consults nd word prior candidate tag see organization noun prefix robotag interface bank board court 
learning representation represents training examples fixed length feature vectors class labels 
goal learn predict class label features vector 
case means learning label tokens tags token lexical features 
robotag processes tagged train ing text creates labeled feature vectors called tuples preprocessor data 
tuple cre ated token text label true false 
learning tree predict gin tags label true token token inside sgml tag trying learn false 
similarly tags tu ple labeled true token token training tag false 
single token usually contain information decide tag 
features surrounding tokens 
create tuple token robotag collects preprocessor features token immediate neighbors 
neighboring tokens determined radius parameter discussed section 
radius means current token previous tokens part tuple token direction 
fill tuple values robotag calls preprocessor feature extractor 
position tuple feature vector holds value pre processor field 
robotag lexical token type features preprocessor pro table features learning features examples token type lower upper cap pos adv aux conj det prep pro location continent country province city semantic type name corporate designator title vides 
way preprocessor forms back ground knowledge target language 
training texts represented tuples learning process 
learning parameters parameters af fect tagging performance 
descriptions parameters 
experiments section discusses settings produced best results task 
radius controls number tokens training tuple 
higher ra gives decision tree algorithm con textual information deciding token tag 
sampling ratio creating tuple token text leads tive training examples positive tokens tag generate positive training tuples 
token forms negative example place tag 
neg ative examples hurt learning accuracy making system conservative 
extreme cases lead decision trees predict tag mat ter input 
sampling ratio ratio negative positive examples training 
positive examples negative examples chosen randomly accordance parameter 
part robotag tag classifier sampling ratio allows recall traded precision di rectly 
increasing sampling ratio gives learning system examples things tagged reducing number false positives increases precision 
mak ing decision trees conservative way lower recall 
finding balance precision recall tuning parameter essential best results 
certainty factor parameter affects de cision tree pruning process simplify learned decision trees 
pruning helps reduce fitting training data improves clas accuracy unseen examples 
parameter takes values lower values meaning pruning 
matching algorithm tagging text robotag evaluates learned decision tree classifiers new text produce list potential tags tag type 
lists produced independently may ways pair tags 
tag may sev eral plausible tags pair vice versa 
matching algorithm decide best possible pairing tags tag type 
potential tag produced decision tree confidence rating number estimating chance correct classification 
scoring function evalu ate relative merits different sets pairings 
addition confidence ratings tags scoring function statistical mea sures mean standard deviation tag length training examples 
biased prefer tags longer shorter clos est mean length 
considering possible tag pairings quickly intractable number po interacting tags increases 
step matching process seeks divide text set non interacting sections 
time pair tags pair resulting tags overlap 
means pair preclude possible matches 
text divided sections observing tags possibly affect tags 
mean distance stan dard deviation match threshold determine distance interval matcher searches tag pairs 
tags far apart matched independently fear pairing precluding 
boundary points text 
independent section searched separately tag pairings 
best pairing set section maximizes sum scores pair section 
parts scoring function pair 
confidence tag tree classifies token tag 
second component tag tree con 
part distance score calculated tag length mean distance match length preference 
length preferences longest shortest closest mean dis tance uses appropriate bias way inputs combined 
tag overlap resolution tag matching algorithm ensures non overlapping tags tag type pos sible cases embedded tags different types tagging boston location tag boston edison 
resolve cases robotag uses static tag priority scheme 
proper noun tagging priority order highest lowest person entity place 
cur rently learn tag priorities log ical extension learning technique 
experiments set experiments english japanese name tagging texts named entity task muc met competitions 
way easily com pare robotag performance variety name tagging systems 
english results english muc wall street journal cor pus 
robotag trained train ing texts proceeded automatically tag blind test texts 
scores test set shown table 
tag type table gives total number tags type training testing sets recall pre cision measure measured test set 
totals bottom table 
best system muc named entity task hand coded rules returned measures person place entity shown table krupka robotag best english results obtained sampling ratio radius certainty factors pruning tag types 
japanese results japanese met corpus press conference re lated texts news agency experiment 
training set texts blind test set 
scores test set reported table 
best system met task utilizing hand coded rules produced measures son place entity cf ta ble second place system posted person place entity 
tag ranked nd met systems japanese entity task 
sampling ratios best japanese results person place entity 
tags radius certainty factors pruning 
related vilain day vilain day report approach learns applies rule sequences name tagging task eric brill rule sequence brill 
uses greedy algo rithm generate apply rules incrementally re target concept 
report best pre cision recall results machine learned rules muc task equivalent measures zf measure calculated fl fl xp precision recall fl relative importance recall precision 
case muc met 
measure formula report error reported fl 
comparison standard measure formula fl reported 
table robotag english results tag type training testing testing recall testing precision measure person place entity total table best muc english results tag type poss recall precision measure person place entity total table robotag japanese results tag type training testing testing recall testing precision measure person place entity total table best met japanese results tag type poss recall precision measure person place entity total person place entity 
english score significantly better especially person place tasks 
japanese results reported compare japanese performance 
presents approach tag classification decision trees 
hand coded rules employed delimit proper nouns text 
proper noun classified appropriate type person entity place decision trees id easier task learning place tags 
general rely hand coded rules significant part tagging task 
bikel 
bikel report nymble hmm name tagging system operating english spanish 
nymble performs turn ing measures respectively span ish english muc task 
scores achieved words tagged text times size word training set robotag experimental results reported 
bikel reports moving training texts yielded improvement 
direct comparison nymble particular tag types possible measure reported muc task 
experiments trained tested person place en tags 
robotag hand coded rules dates number measure muc english task 
directions number ways robotag formance improved 
ous enhancement representation involves giv ing learning system actual text token feature vector 
currently tuple contains preprocessor information window tokens text actual token text avail able learning 
decision trees refer classes words lexicon features individual words 
adding capability allow performance improvement especially cases lexicon data sparse 
words features related idea automatic word list modification 
allow robotag reconfigure knowledge base word lists pro pose new features 
way robotag adapt new extraction domains 
name tagging systems tag compared robotag alias generation facility 
generating alias recognized name system scan alias acronym individual name order improve likelihood identi fying 
straightforward add alias capability robotag 
accuracy enhancement improve tag matching algorithm 
robotag cur rently lexical features tokens match process 
scoring function takes account tag length decision tree confidence val ues 
errors robotag come matching algorithm decision trees correctly predict tag begins ends wrong tag pairings chosen 
making match ing algorithm sensitive lexical features help correct 
comparison systems traditional batch mode learning re sults robotag strengths 
believe allowing user give direct feedback learning system key rapidly addressing new extraction tasks 
plan experiments address directed feedback result rapidly learned tagging procedures utilizing fewer tagged texts 
experiments focused proper name tagging robotag limited 
planning explore additional tagging tasks names multiple languages chinese thai spanish english japanese 
summary robotag multilingual text extraction system automatically learns tag texts observ ing users 
decision trees learned predict users tags 
combined matching algorithm produce complete tags 
flexible ability mul tiple languages 
shown robotag perfor mance competitive hand coded pattern systems different languages en glish japanese 
advanced research projects agency 

proceed ings sixth message conference muc 
morgan kaufmann publishers 
aone nicholas james 

intelligent multilingual formation browsing retrieval system information extraction 
proceedings fifth conference applied natural language processing 
bikel daniel scott miller richard schwartz ralph weischedel 

nymble high performance learning name finder 
proceed ings fifth conference applied natural language processing 
brill eric 

corpus approach lan guage learning 
ph thesis university penn 
defense advanced research projects agency 

advances text tipster pro gram phase ii 
morgan kaufmann publishers 
anthony 

recognizing names languages 
proceedings th interna tional conference computational linguistics coling 
krupka george 

sra description sra system muc 
proceed ings sixth message understanding conference muc 
quinlan ross 

programs ma chine learning 
morgan kaufmann publishers 
vilain marc david day 

finite state phrase parsing rule sequences 
proceedings th international conference compu tational linguistics coling 

