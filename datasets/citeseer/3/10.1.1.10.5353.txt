representing social structures uml van dyke parunak erim po box ann arbor mi usa erim org software engineering perspective agent systems specialization object oriented oo systems individual objects threads control goals sense purpose 
engineering systems naturally approached extension object oriented systems engineering 
particular unified modeling language uml naturally extended support distinctive requirements multi agent systems 
requirement results increasing emphasis correspondence multi agent systems social systems 
sociological analogies proving fruitful models agent oriented constructions sociologists increasingly agents modeling tool studying social systems 
combine existing organizational models agents including aalaadin dependency theory interaction protocols general theoretical framework show uml applied extended capture constructions framework 
keywords agents uml auml organizations dependencies protocols holarchy aalaadin 
software engineering perspective agent systems specialization object systems individual objects threads control goals sense purpose 
defined agents objects say go reflecting separate threads control resulting ability execute externally invoked reflecting priority internal goals external direction 
engineering systems naturally approached extension object oriented systems engineering 
particular unified modeling language uml product oo community natural starting point developing requirements designs agent systems 
widely known supported number computer aided software engineering platforms 
researchers called attention potential uml unmodified form addressing permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
autonomous agents may june montreal canada 
copyright acm 
james odell james odell associates west river drive ann arbor mi com aspects agent systems 
valuable efforts accommodate additional functionality agents objects 
earlier addressed area definition interaction protocols autonomous processes suggested constructs conventions agent uml auml :10.1.1.25.7641
addresses area agent functionality goes capabilities current uml 
sociological concepts source inspiration multiagent research agent community returning favor exploring potential agent models studying sociological phenomena 
result interaction formalization number sociological psychological concepts important applications engineering agent systems concepts directly supported uml 
brings number concepts including group role dependency speech acts coherent syntax describing organizational structures proposes uml conventions auml extensions support analysis specification design multi agent systems 
approach distinct approaches roles mentalistic 
define roles terms features accessible outside observer available introspection agent 
section outlines syntax group structure representation 
section describes simple scenario illustrates proposed uml constructs model 
section summarizes contribution 
member agent contains group role handles aalaadin architecture expressed uml class diagram 
group syntax aalaadin architecture proposed ferber gutknecht 
model expressed uml class diagram involves elements agent active communicating entity 
group set agents 
role representation agent function service identification group 
mappings diagram reflect original aalaadin model propose 
fundamental insight aalaadin groups interact shared agents 
agent member different groups time playing different role roles move group dynamically 
classical oo point view multiple dynamic role capability distinguishes agentbased oo approach 
oo class defined extension role set instances belong class role membership multiple classes exception rule dynamic change class membership rarer 
uml supports multiple dynamic classification objects 
aalaadin notion group naturally extended organizations 
understand group generic term set agents related roles 
term organization refers groups distinguished formality stability underlying model formalisms 
aalaadin offers attractive combination parsimony expressiveness 
straightforward basis developing representational mechanisms organizational concepts 
refine aalaadin ways 
suggest notion role defined terms notions current agent community dependencies action templates 
second ontology extended concept environment agents interact 
third confront issue aggregation developed holonic model apparent tension aalaadin flat network groups 
looking roles aalaadin defines group set agents 
agent role mediates group 
participates group right incumbent particular role nature group defined set roles includes relations 
observation encourages seek fundamental way define roles explicit relations 
concepts theory multi agent systems contribute refined definition dependency theory speech acts 
concepts define structured relations interacting agents 
insight role just labeling recurring pattern dependencies speech interactions 
dependency theory cite classic idea interactions agents result incompatibility single agent goals resources capabilities 
typically agent control resources ability execute actions required achieve objectives interact agents control resources perform actions 
expository simplicity consider action dependencies dependency agent resource may represented depending agent perform action providing resource define dependency tuple dependent provider action 
literature dependency theory works additional details included dependency including specific goal leads dependency specific plan leading goal requires specified resource action agents involved dependency recognizes existence 
details readily incorporated approach 
pattern dependencies important component role 
example agent customer agent depends goods services depends money 
dependencies leave details role ambiguous 
dependencies thieves 
refine definition role incorporating dynamic information speech act theory 
speech act theory originates observation utterances simply propositions true false attempts part speaker succeed fail 
theory ubiquitous development agent communication protocols kqml fipa agent communication language 
isolated utterances little characterize relationships interacting agents 
speech act nature utterances permits definition set relations obtain successive utterances conversation 
example utterance responds utterance caused replies responds addition addressed agent uttered resolves replies addition causes succeed completes fulfills earlier commitment 
relations may extended non speech actions 
example request close door may resolved physical action closing door 
formal construction relations graph consists nodes corresponding agents directed edges corresponding utterances actions issued source edge received sink 
node graph corresponds single agent agent may occupy different nodes 
significance single node terminates speech acts associated single function agent 
analogy function called character bears clear relationship notion role aalaadin 
characters disclosed analysis useful engineering agent code define reusable behavioral templates cf 
modules actions contexts gensym agent development environment singh agent templates 
template implements particular protocol defining interrelated set speech actions agent may undertake 
point view protocol customer participate pattern actions outlined table 
pattern protocol appropriate customer supplier 
example customer initiate exchange request quotation 
point table 
simple protocol characterizes customer role 
utterance speaker utterance advertisement offers goods exchange money sends order goods accompanied payment sends goods protocol capture part semantics role 
dependencies semantics incomplete 
protocol appropriate actors play depends money goods 
adding dependency information provides clearer robust picture roles customer supplier offers 
protocol represented uml various levels abstractions previous :10.1.1.25.7641
point view system analysis dependency theory interactions attractive analyzed level necessary purposes access internal state agents 
empirically agent function group defined network dependencies actions embedded 
particular pattern dependencies protocols recurs useful summarize role 
role primitive built dependencies interactions 
dependencies actions really matter 
role simply label attach recurring pattern enable manipulate greater efficiency 
viewpoint implies contrary original aalaadin model exemplified role appear multiple groups embody pattern dependencies interactions 
agent group holds multiple roles concurrently may useful define higher level role composed elementary roles 
example consider roles customer vendor employee group market economy 
user economy agent earns money job uses money purchase goods 
user role composition customer employee roles 
supply chain link economy agent buys goods transforms goods sells 
supply chain link composition customer vendor roles 
expresses composition roles composition association loop top role class 
view role recurring pattern dependencies actions deliberately mentalistic 
researchers define roles terms mentalistic qualities obligations permissions rights require detailed knowledge agents internal structure 
prominent definition behavioral considerations role conceived system prescribed mental attitudes system prescribed behaviour 
mentalistic approach extremely useful theoretically extension bdi model interaction protocol composed originator provider recipient role dependent employs employed group action dependency 
uml class diagram expressing role associations described section 
role environment employs supported played consists agent group inform development model permit application formal mechanisms role analysis 
useful systems analyst confronted heterogeneous system elements opaque 
examples systems network trading partners ecommerce scenario terrorist network military intelligence application 
cases internal beliefs desires intentions closely held secrets model system outside rely externally observable behaviors 
intended users extensions uml cope just situations 
important question engage developing correlations classes mentalistic role models 
importance environment agents considered independently environment exist interact 
insight ignored computational multi agent systems researchers consider environment passive communications framework interest relegated agents 
purely electronic environments prove embarrassingly active application scaled real world engineering agents non electronic domains factory automation consider environment explicitly 
consider example active role environment pheromone models coordination 
natural insect societies engineered systems inspired environment actively provides information processing functions 

fuses information different agents passing location different times 

distributes information location nearby locations 

provides truth maintenance forgetting information continually refreshed getting rid obsolete information 
modeling groups important recognize role environment supporting dependencies protocols define participants roles 
exact form representation takes vary widely depending group question 
recognize environment network roles supports defining component social group 

environment involvement groups agents roles 
consists group agent atomic agent consists groups agents glance aalaadin contrasts strongly holonic view agent organization 
holon agent may smaller holons may join holons form higher level holons 
holonic model explicitly permits groups members groups 
resulting lattice holons called holarchy dominant organizational metaphor holonic systems 
aalaadin groups related shared members provision group group member 
models attractions 
holonic model recognizes need form hierarchical aggregation real world systems remain understandable spanning wide range temporal spatial scales 
modern automotive factory incorporates hundreds thousands individual mechanisms candidate agent hood hundreds machines grouped dozen lines 
engineers design construct operate complexes shifting focus mechanism machine line depending problem hand recognizing higher level agents aggregates lowerlevel ones 
similarly commerce applications legal entity independent individual people employees directors 
conversely aalaadin recognizes groups level interact interactions components 
negotiations companies take place individual people roles representing groups negotiation 
machines factory interact virtue process involving sensors actuators 
practicing engineers agent systems recognize need perspectives resolve tension pragmatically 
analyze group identify agents occupying roles 
agents may individual persons robots computer systems atomic agents 
may groups ai treat black boxes 
take holonic perspective long analysis ignore internal agent represented group holonic perspective aalaadin perspective consists represented group agent atomic agent consolidated perspective 
perspectives relation groups agents structure member groups 
subsequent analysis requires open black box look inside roles incumbent agents analyzing bm 
point insist identifying member agents responsible filling role adhering discipline aalaadin 
consolidated model approach 
summary sum model aalaadin extensions roles ontologically primitive defined recurring patterns dependencies actions 
definition group includes just set agents occupying roles environment interact 
aalaadin requirement groups interact identified members relaxed case unanalyzed groups permitted occupy roles higherlevel groups holonic model 
class views described section 
interaction protocol originator recipient role environment action dependency dependent provider employs supported agent 
example illustrate theory uml instantiation modeling simple example terrorist organization 
terrorist organization national security organization construct agentbased model terrorism contingency planning modeling emerging threats 
particular model envision interactions groups associated roles 
individual agent occupies roles groups 
terrorist organization roles operative deploys operates instrument terrorism plants bomb shoots gun sets vision organization may personally weapons wc roles customer wishes arms played consists represented group 
consolidated ontology 
atomic agent supplier delivers arms customer negotiator negotiates deal customer receives payment 
western society ws roles citizen terrorist operative wishes target student convenient cover foreign national 
informally individual financing mission feeding back information permits expand activities 
uses funds purchase weapons wc occupies role ws deploy weapons citizens 
auml model omg unified modeling language uml version provides wealth diagramming elements 
extensions uml required effectively model agents agent systems 
omg fipa effort currently underway define uml agents auml extends uml www auml org 
section proposes usages extensions uml represent groups agents roles illustrated terrorist organization scenario 
common misconception uml extension auml graphical notation formal semantics 
uml specification consists interrelated parts uml semantics metamodel specifies syntax semantics uml object modeling concepts uml notation graphic notation visual representation uml semantics 
concern development communication high level intuitions formal definition associated semantics focus graphical notation 
close linkage uml notation semantics means uml far hampering subsequent formalization fact provides foundation task 
agent instantiation agent agent agent agent terrorist organization coordinates operative aggregation weapons customer deals negotiator orders supplier delivers targets western society student citizen 
class diagram depicts interrelated roles agents groups 
deals weapons orders customer negotiator supplier delivers 
class diagram depicting terrorist organizations consist agents playing distinct roles 
groups scenario described involve groups employing defined roles 
illustrates groups roles uml techniques class diagram 
class diagram models various terrorist roles relationships 
slash front name indicates name role name class name 
uml graphically organize responsibility activities activity graph 
auml proposes device kind uml diagram case class diagram 
example indicates terrorist organization involves roles operative agent coordinates operative agents 
depicts second kind agent instance 
example agent plays roles operative customer student 
multidimensional highly uncommon uml community supported uml version 
uml syntactic sugar graphical packaging technique 
specify underlying semantics 
understanding cause difficulty vertical specify group aggregation horizontal specify role instantiation 
propose uml extended specify underlying relationship 
vertical indicated aggregation horizontal instantiation 
class diagrams define roles mentioned vertical define aggregation relationship groups roles comprise group 
way express relationships group class diagram depicted 
class diagram weapons basically equivalent 
show weapons group consists agents playing roles customer negotiator supplier 
additionally depict relationships roles 
difference expresses relationship cardinality constraints multiplicity weapons various roles 
example indicates weapons terrorist organization group may multiple customers suppliers may negotiator 
constraints expressed uml 
sequence diagrams show roles patterns interactions class diagrams model kinds entities exist system relationships 
modeling interactions may occur entities represented uml sequence diagram 
example depicts permitted interactions may occur customer negotiator supplier agents weapons procurement negotiation 
tabbed folder encompassing sequence diagram indicates interaction viewed unit called package 
extension uml addition decision symbol 
branching decisions expressed uml guard conditions recommend symbol employed purpose activity graphs diamond 
auml extensions sequence diagram see :10.1.1.25.7641
activity graphs show groups patterns dependencies object flow activity graph represents activities kinds objects produce consume 
weapons procurement states terrorist organization guns butter weapons customer interaction protocol weapons procurement negotiation request guns request denied request accepted pay money money butter guns negotiator order guns deliver guns weapons 
object flow activity graph specifies roles patterns activities products produced consumed activity 
supplier 
sequence diagram depicting interaction protocol buying guns terrorist operation agent 
pays money 
representing way roles relate interact groups diagram models groups processing entities right 
example depicts groups dependencies regard underlying roles 
words expresses pattern dependencies terrorist organization weapons 
object flow activity graphs provide way model system removing detail providing higherlevel view system components 
expresses fact groups agents point agents modeling role playing elements group 
activity graph allows model groups agents agents 
way express kinds dependencies best represented group level 
detailed view underlying interactions required sequence diagram 
approach requires uml extension 
uml requires activities terminate order produce output 
agent groups terrorist organizations order processing departments typically thought continuous activities processes definable starts completions 
proposed extension important modeling long lived groups produce output things lifetime 

summary engineering agent systems requires availability common languages requirements analysis specification design 
unified modeling language uml gained wide acceptance object oriented community supported number computer aided software engineering tools 
close relation objects agents led numerous researchers seek apply agents 
carrying agenda requires identify distinctive constructions required designing agent oriented systems develop conventions extending uml accommodate 
case social structures insights aalaadin dependency theory fused single metamodel groups composed agents occupying roles defined patterns dependency interaction environment 
various uml constructs including class diagrams activity diagrams sequence charts capture crucial distinctions model 

acknowledgments author invited talk applications uml agents maamaw participants including cristiano castelfranchi yves demazeau raised question wide range organizational structures captured uml 
challenge germ 
ideas concerning relation dependencies action relations definition roles stimulated discussions jonker workshop comments preliminary version john sauter mitch fleischer erim 

pitt 
formal model open agent societies 
proceedings fifth international conference autonomous agents agents 
austin 
things words 
oxford university press 
poggi 
exploiting uml design multi agent systems 
proceedings engineering societies agents world pages 
brueckner 
return ant synthetic ecosystems manufacturing control 
thesis humboldt university berlin department computer science 

fischer 
holonic fleet management system 
proceedings th european meeting cybernetics systems research pages 
carley editors 
computational organization theory 
lawrence erlbaum associates 
castelfranchi 
founding agent autonomy dependence theory 
proceedings th european conference artificial intelligence pages ios press 
castelfranchi miceli cesta 
dependence relations autonomous agents 
demazeau werner editors decentralized ai proceedings third european workshop modeling autonomous agents multi agent world elsevier 
cavedon sonenberg 
social commitment roles preferred goals 
proceedings international conference multi agent systems icmas pages ieee 

appendix graph 
longacre editor anatomy speech notions pages 
peter de ridder lisse 
epstein axtell 
growing artificial societies social science ground 
boston ma mit press 
ferber 
multi agent systems distributed artificial intelligence 
harlow uk addison wesley longman 
ferber gutknecht 
meta model analysis design organizations multi agent systems 
proceedings third international conference multi agent systems icmas pages ieee computer society 
ferber 
ller 
influences reactions model situated multiagent systems 
proceedings second international conference multi agent systems icmas pages 
finin weber wiederhold genesereth fritzson mckay mcguire shapiro beck 
draft specification kqml agent communication language 

postscript www cs umbc edu kqml spec html 
fipa 
fipa agent communication language specifications 

html www fipa org repository html 
fischer 
agent design holonic manufacturing systems 
robotics autonomous systems 
fowler scott 
uml distilled applying standard object modeling language 
reading ma addison wesley 
gerber siekmann 
flexible autonomy holonic multi agent systems 
proceedings aaai spring symposium agents adjustable autonomy 
gerber siekmann 
holonic multi agent systems 
rr dfki kaiserslautern germany 
url ftp ftp dfki de pub publications rr ps gz 
gilbert simulating societies computer simulation social processes 
london ucl press 
ller 
design intelligent agents 
berlin springer 
odell 
agents technology usage part 
distributed computing architecture business advisory service 
odell parunak bauer 
extending uml agents 
proceedings agent oriented information systems workshop pages 
odell parunak bauer 
representing agent interaction protocols uml 
proceedings agent oriented software engineering pages springer 
omg 
omg unified modeling language specification 

pdf file www rational com media uml post pdf 
norman jennings 
modeling sociality bdi framework 
proceedings asia pacific conference intelligent agent technology iat pages 
parunak 
visualizing agent conversations enhanced graphs agent design analysis 
proceedings second international conference multi agent systems icmas pages 
parunak 
workshop report implementing manufacturing agents 
industrial technology institute 
url www erim org pdf 
parunak 
go ant engineering principles natural agent systems 
annals operations research 
parunak baker clark 
agent architecture manufacturing requirements agent system design 
integrated computer aided engineering 
carley gasser 
simulating organizations computational models institutions groups 
menlo park ca aaai press 

object oriented design agent modeling 
proceedings fourth international conference practical application intelligent agents multi agent technology pages practical applications 
sichman demazeau conte castelfranchi 
social reasoning mechanism dependence networks 
proceedings th european conference artificial intelligence pages john wiley sons 
singh 
developing formal specifications coordinate heterogeneous autonomous agents 
proceedings third international conference multi agent systems icmas pages ieee computer society 
university hannover 
holonic manufacturing systems 

web page hms ifw uni hannover de 
