delegation logic logic approach distributed authorization ninghui li stanford university benjamin grosof massachusetts institute technology joan feigenbaum yale university address problem authorization large scale open distributed systems 
authorization decisions needed electronic commerce mobile code execution remote resource sharing privacy protection applications 
adopt trust management approach authorization viewed proof compliance problem set credentials prove request complies policy 
develop logic language called delegation logic dl represent policies credentials requests distributed authorization 
describe lp monotonic version dl 
lp extends logic programming lp language datalog expressive delegation constructs feature delegation depth wide variety complex principals including limited thresholds 
approach defining implementing lp tractably compiling lp programs ordinary logic programs olp 
compilation approach enables lp implemented modularly top existing technologies olp prolog 
trust management language lp provides concept proof compliance founded understood principles logic programming knowledge representation 
lp provides logical framework studying delegation 
categories subject descriptors management computing information systems security protection general terms security languages additional key words phrases access control trust management delegation logic distributed system security logic programs parts published preliminary form papers logic knowledge representation authorization delegation extended proceedings th ieee computer security foundations workshop june 
practically implementable tractable delegation logic proceedings ieee symposium security privacy may 
performed author phd student department computer science new york university new york ny second author member ibm watson research center hawthorne ny third author member information sciences research center labs florham park nj 
authors addresses ninghui li department computer science gates stanford ca usa email ninghui stanford edu home page crypto stanford edu ninghui 
benjamin grosof mit sloan school management memorial drive cambridge ma usa email mit edu home page www mit edu 
joan feigenbaum department computer science yale university po box new haven ct usa email jf cs yale edu home page www cs yale edu jf 
today internet large growing number scenarios require authorization decisions 
scenarios include limited electronic commerce resource sharing coalitions execution downloadable code java applets activex controls privacy protection 
authorization scenarios significantly different centralized systems distributed systems closed relatively small 
internet authorization scenarios entities system unknown central authority trusts 
traditional access control mechanisms authorization decisions identity resource requester 
unfortunately resource owner requester unknown access control identity may ineffective 
internet authorization scenarios relationship requester authorizer prior request 
authorizer know requester directly information third parties know requester better normally authorizer trusts third parties certain things certain degrees 
trust delegation aspect internet authorization different traditional access control 
goal growing body trust management find expressive distributed approach authorization scenarios 
trust management tm systems proposed years policymaker keynote referee spki sdsi :10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276:10.1.1.41.4201:10.1.1.41.4201
key feature systems support delegation 
lot analysis tm systems 
trust management approach distributed authorization requester submits request possibly supported set credentials issued parties authorizer controls requested resources 
authorizer decides authorize request answering proof compliance question credentials prove request complies local policy credentials may facts joe student stanford university generally non local policy statements complicated facts 
credentials control authorizer need protected alteration credentials signed public keys 
tm approach adopts key centric view authorization views public keys entities authorized 
supports credentials endow public keys just identities distinguished names key holders agreed permissions various attributes key holders fully programmable capabilities 
identity information just kind credential may necessary sufficient applications 
tm systems keynote original spki credentials delegate permissions 
credential delegates certain permissions issuer subject 
chain credentials acts capability granting certain permissions subject credential chain 
permission systems express fact issuer permissions entities certain property 
better understand limitation consider simple example book store wants give discount students nearby university 
ideally book store express policy statement student get discount showing student id issued university 
follow simple approach permission tm systems 
instance keynote assertion express student entitled discount 
ways limitation 
approach book store delegate discount permission university key 
university key explicitly delegates permission student key 
organizations giving different permissions students university issue separate delegation student permission places heavy administrative burden university 
approach university creates new key pair representing group students issues complete delegation group key student public key 
allow book store establish student discount policy granting discount group key 
university different group key meaningful group faculties graduate students book store needs know key corresponds group students require tm system done keynote 
arounds keynote action environment feature 
approaches handle simple example scale complicated cases organizations want give different kinds permissions students university book store wants give discounts different groups different organizations students university graduate students university faculties university employees nearby members professional organization simplify authorization decentralized environments need system access control decisions authenticated attributes subjects attribute authority decentralized 
argue expressive tm language able express decentralized attributes entity asserts entity certain attribute 
example university asserts entity student 
permission viewed attribute granting permission entity viewed asserting entity attribute 
delegation attribute authority entity delegates authority attribute entity entity trusts entity judgment attribute 
example university delegates authority identify students registrar campus university 
inference attributes entity uses attribute inferences keynote spki thresholds capability directed graph credentials 
affect discussion limitations 
attribute 
example book store gives discount entity student particular university 
attribute delegation attribute authority key scalability ability delegate strangers trustworthiness determined authenticated attributes 
example online book store wants give discounts university students having issue delegation university book store able issue statement delegates authority identify students entities certified universities 
book store delegate authority identify universities board avoiding having know universities 
conjunction attributes entity uses conjunction attributes inferences attribute 
example book store gives special discount entity student member acm 
attribute fields useful attribute credentials carry field values age credit limit 
permissions may fields describing resources access modes 
useful infer additional attributes field values delegate attribute authority certain entity certain specific field values spending level certain limit 
believe desirable trust management language satisfy requirements areas 
area list basic requirement stronger requirement 
expressive power basic requirement tm language support features listed 
stronger requirement support desirable features thresholds form re delegation control 
declarative semantics basic requirement tm language declarative clearly specified notion proof compliance 
example tm language allows credentials contain programs written procedural programming languages satisfy requirement 
stronger requirement notion proof compliance understood formal foundation 
furthermore meaning set policies credentials compute meaning inspect policy author intention 
tractability basic requirement compliance checking tractable polynomial size policies credentials requests 
stronger requirement computing meaning set policies credentials tractable 
discuss section previous tm languages satisfies basic requirements 
goal provide trust management language representing authorization policies credentials firstly satisfies basic requirements secondly satisfies stronger requirements 
view problem designing tm language representing authorization policies credentials knowledge representation problem 
adopt approach proven useful knowledge representation logic programming approach 
logic programming languages representing security policies studied previous focused centralized environments address delegation aspect distributed authorization :10.1.1.25.7359
propose logic programming language delegation logic dl trust management language 
approach designing dl extend wellunderstood logic programming languages features needed distributed authorization 
specifically dl extends definite ordinary logic programs dimensions delegation nonmonotonic reasoning 
dl delegation features include explicit linguistic support delegation depth wide variety complex principals thresholds 
dl nonmonotonic expressive features include classical negation negation failure prioritized conflict handling 
focus delegation aspect monotonic delegation logic call lp 
stands version delegation logic programs 
term lp denote formalism program formalism 
lp extends datalog definite ordinary logic programs adding issuer atom adding delegation constructs pre defined meanings 
rest organized follows 
section give background information trust management analyze previous tm systems 
section introduce language lp 
section define semantics lp transformation lp olp 
lp inferencing accomplished combination transformation plus olp inferencing 
tractability results section 
section discuss tractability motivation design decision lp 
section describe implementation issues involved lp 
conclude section 
background system entities inter connected resources controlled entities 
entities may include users operating systems processes threads objects resources may include information files network connections methods objects entity wants access resource controlled entity sends request entity 
entity wants access resource called requester entity controls resource called authorizer 
traditionally authorizer receives request identifies requester 
task determining requester identity rigorous manner called authentication 
words authentication answers question request identity 
knowing identity ordinary logic programs olp correspond essentially pure prolog limitation prolog particular inferencing procedure 
known general lp misleading name generalizations normal lp definite means negation 
datalog means function symbols non zero arity 
arity function symbol number parameters takes 
reviews standard concepts results logic programming see 
requester authorizer decides requester allowed access requested resource 
step called access control 
term authorization denote process authentication access control focuses authorization emerging applications largescale open decentralized distributed systems internet 
authorization decentralized environments significantly different traditional authorization single host systems centrally controlled distributed systems 
basic differences include needs protection 
traditional client server computing environment valuable resources usually belong servers client requests access valuable resource server uses authorization procedure protect resources 
large scale open decentralized system users access servers valuable resources personal information electronic cash client longer right metaphor 
user trust servers interacts authorization mechanisms protect users resources servers 
protect 
large far network potential requesters smaller homogeneous albeit distributed system 
services internet merchants know advance potential requesters 
similarly users know advance services want requests 
authorization mechanisms rely delegation third party 
stores authorization information 
traditionally authorization information access control list stored managed service 
internet services evolve rapidly set potential actions users may request known advance implies authorization information created stored managed dynamic distributed fashion 
users expected gather credentials needed authorize action request 
credentials control service authorization decision danger altered stolen 
public key signatures generally mechanisms verifying provenance credentials part authorization framework 
traditional authentication access control notion identity plays important role 
traditional system identity means existing user account 
user accounts established system prior issue request 
earlier pki proposals try establish similar global user account system gives unique name entity system binds public key globally unique identity internet applications notion identity problematic 
term identity originally meant sameness 
meet previously unknown person time really identify person 
scenario authorizer requester prior relationship knowing requester name identity may help authorizer decision 
real property needs identity verify request credential issued particular identity link particular identity credentials 
argue global system real identity related public key 
trust management approach adopts key centric view authorization public keys treated principals authorized directly 
trust management approach adopts peer model authorization 
entity authorizer third party credential issuer requester 
entity act requester authorization scenario authorizer third party credential issuer 
sample policies testing expressive features review previous tm systems give list sample policies test expressive power decentralized attribute hospital ha asserts entity pa physician 
delegation attribute authority hospital hm trusts hospital ha identify physicians 
inference attributes hospital hm allows entity access document physician 
attribute delegation authority hospital hm trusts entity hospital identify physicians 
conjunction attributes hospital hm gives special permissions physician manager 
attribute fields hospital hm allows entity access records patient entity physician patient 
types policies discussed section 
give additional policies threshold structures 
static threshold structures bank requires explicitly list entities cooperate order complete certain transaction 
dynamic threshold structures bank requires cooperate order complete certain transaction entity cashier explicitly policy determined inferencing entity attributes credentials 
static threshold structures known thresholds common existing tm systems policymaker keynote spki sdsi :10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276
systems dynamic threshold structures 
static threshold structure inconvenient threshold pool large changes 
cashier policy dynamic threshold structures allow simple clear policy enable bank change set changing policy 
review previous trust management systems briefly review systems authentication access control distributed systems policymaker referee keynote spki sdsi src logic :10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276:10.1.1.44.6276:10.1.1.41.4201
choose systems satisfy conditions consider core trust management approach distributed authorization 
system supports decentralized storage management authorization information 
result typical authorization scenario requester submits request supporting credentials authorizer adds local policy credentials uses proof compliance procedure determine request authorized 
language representing credentials policies supports decentralized attributes delegation attribute authority 
language application independent semantics 
policymaker referee 
policymaker introduced blaze feigenbaum lacy original notion trust management introduced 
policymaker compliance checking algorithm fleshed 
details policymaker see 
policymaker policies credentials referred assertions assertion pair source authority issuer assertion program describing nature authority granted party parties authority granted 
program written programming language safely interpreted local environment 
safe version awk developed early experimental policymaker see 
assertions policymaker may include arbitrary programs turing complete programming language quite expressive sense code complex policies delegation relationships policymaker 
satisfy basic requirement declarative semantics 
policymaker framework built support decentralized attributes features need explicitly coded programs assertion authors 
referee similar policymaker allows arbitrary programs credentials policies 
keynote 
keynote second generation tm system policymaker 
allowing programs written general purpose procedural language keynote adopts specific expression language 
keynote assertion delegation issuer licensees formula 
primitive licensees formula simply principal 
complicated licensees formulas built principals conjunction disjunction thresholds 
assertion conditions written expression language 
intuitive meaning assertion licensees support request request satisfies conditions issuer supports request 
keynote system calling application passes keynote evaluation engine list credentials policies requesters public keys action environment consists list attribute value pairs 
action environment essentially specifies request 
evaluation engine uses credentials policies determine local authority supports request requesters support request 
keynote assertion conditions filter requests form action environments delegated delegation apply licensees licensees explicitly listed 
result keynote support inference attributes attribute delegations conjunction attributes attribute fields dynamic threshold structures 
keynote re delegation control permission freely re delegated 
keynote satisfies basic requirement declarative semantics giving procedure answer specific request authorized set credentials 
keynote defines mechanism compute particular request authorized set policies credentials define mechanism compute meaning set policies credentials 
spki sdsi 
sdsi simple distributed security infrastructure originally designed rivest lampson 
spki simple public key infrastructure originally designed ellison 
systems motivated inadequacy public key infrastructures global name hierarchies privacy enhanced mail pem 
spki sdsi merged collaborative effort spki sdsi date documents 
discussion spki denote part spki sdsi originally spki authorization certificates tuples sdsi denote part originally sdsi name certificates tuples 
spki quite similar keynote 
main differences 
lies encoding permissions delegated credential 
spki represent permissions tags special form expressions expressions viewed particular kind constraints strings 
example ftp ftp clark net prefix pub abc set read write encode permission ftp access host ftp clark net read write files directories pub abc 
keynote uses expressions written expression language filter requests pass delegation 
encode permission keynote protocol ftp host ftp clark net dir pub abc access read access write regular expression matching 
second difference spki boolean re delegation control keynote re delegation control 
spki limitations keynote 
document defining spki describes chain tuples get new 
operation uses tag intersection incomplete prose description examples tag intersections 
attempting formalize spki avoids complexity tags simpler models faithfully capture tags 
notable exception howell pointed intersection kinds tags may finitely representable tags gave precise specification tag intersection intersections potentially problematic cases artificially defined empty 
sdsi supports decentralized attributes delegation attribute authority inference attributes attribute delegation supported linked local names 
sdsi support attributes fields conjunction attributes 
spki express attributes fields tags spki sdsi really merge features different kinds certificates 
spki sdsi express conjunction attributes attributes fields dynamic threshold structures 
src logic authentication access control 
abadi burrows lampson plotkin wobber developed logic authentication access control distributed systems 
designed implemented security system logic 
core concept src logic speaks relation principals speaks means principal statement believe principal 
notion speaks useful distributed authentication access control underlies notion delegation trust management 
speaks viewed delegation authority src logic designed mainly authentication total delegation coarse granularity access control 
limit authority delegated logic principal adopt role delegating 
roles achieve effects roughly similar decentralized attributes delegation attribute authority 
src logic lacks attribute delegation attributes fields threshold structures 

lp syntax concepts examples section define syntax lp show lp expressive features listed section 
explain basic concepts lp give examples lp programs 
syntax gives syntax lp bnf 
alphabet lp consists disjoint sets predicate symbols variables constants 
variables start 
set principals subset constants distinguishable constants 
reserved principal symbol local represents trust root authorizer authorization decision 
explain syntax 
numbers text correspond numbers definitions 
term constant variable 
variable appears certain positions called principal variable instantiated principal 
exact positions variable treated principal variable determined bnf 
principal term principal principal variable 
base atom encodes belief 
example bob base atoms encode beliefs 
belief talks security action action access resource belief action happen 
example base atom remove file encodes belief file removed 
direct statement says ba called issuer statement 
statement intuitively means supports belief encoded ba 
example direct statement bob says remove file means bob supports file removed represents bob request remove list list formula formula formula formula formula formula term constant var prin var var prin term prin var prin base atom pred pred list term direct stmt prin term says base atom delegation stmt prin term delegates base atom depth prin exp depth natural number representation stmt prin term represents prin term prin exp prin var prin struct prin struct formula prin element prin element prin threshold threshold su threshold sw threshold du threshold su threshold threshold list prin sw threshold threshold list prin weight pair du threshold threshold prin var prin says base atom natural number prin weight pair prin natural number rule head stmt head stmt body formula head stmt direct stmt delegation stmt representation stmt body formula formula body stmt body stmt direct stmt delegation stmt representation stmt direct stmt prin exp says base atom delegation stmt prin exp delegates base atom depth conj prin exp conj prin exp prin var conj prin struct conj prin struct prin prin conj prin struct locale decl stmt local prin program list rule locale decl stmt list rule query body formula fig 

syntax lp bnf pred var constant prin represent predicate symbol variable constant principal respectively 
definitions list formula macros 
file 
statement says carl means supports believes carl credit 
delegation statement delegates ba pe called issuer statement called delegation depth delegation means unlimited depth principal expression pe called delegatee delegation 
dl basic meaning delegation transferability support 
example delegation statement bob delegates carl means carl supports credit bob supports 
meaning delegation depths discussed section 
representation statement represents ba issuer defined special principal local 
representation statement intuitively means power respect base atom ba local trusts ba trust equally ba 
similar delegation statement delegates ba important differences 
differences rationale representation statements discussed section 
principal expression principal variable principal structure formula principals threshold structures 
threshold structures introduce fault tolerance aid flexibility joint authorization 
lp kinds threshold structures 
static unweighted threshold structure threshold 
call threshold value 
threshold pool require ai aj example threshold static unweighted threshold structure 
supports base atom ba principals threshold pool support ba 
static weighted threshold structure threshold 
wn call principal weight pair set 
wn threshold pool threshold structure require ai aj weighted threshold structures enable assignment different weights different principals threshold pool 
threshold structure supports base atom sum weights principals support base atom greater equal threshold value dynamic unweighted threshold structure threshold rin says ba require appears ba define threshold pool set principals direct statement rin says pred 
true expression rin says pred 
true substituted appearance direct statement 
possible relax restriction static threshold structures 
static unweighted threshold structures threshold structure satisfied 
static weighted threshold structures relaxing permit require subtle discussion tractability 
relatively simple relaxation permit integer constant case complexity bound section increases factor 
example threshold bank says dynamic threshold structure 
example principal structure threshold says threshold says manager represents conjunction manager 
note principal manager principal satisfies principal structure 
wants managers disjoint needs non monotonic features exist lp 
rule known clause 
rule direct statement delegation statement representation statement called head rule formula body statements called body rule 
body may empty keyword omitted 
rule empty body called fact 
rule head principal issuer principal issuer rule 
principal variable issuer issuer rule principal symbol local 
example issuer rule says says issuer delegates local issuer represents issuer says local says intuitively issuer rule principal power issue rule 
rule verify rule issued issuer 
discussed sections 
body statement body direct statement body delegation statement representation statement 
body statements allow principal structures issuers expressive conditions rules 
delegation statement appearing query rule body rule body implicitly query delegatee principal principal variable conjunction principals 
delegatee permitted contain disjunction threshold structure disjunctive nature 
restriction called conjunctive delegatee queries restriction 
imposed ensure computational tractability lp 
rationale discussed detail section 
body direct statement general direct statement permits issuer principal structure 
example body direct statement threshold says account body delegation statement allows issuer principal structure requires delegatee principal principal variable conjunction principals 
locale declaration statement specifies local stands particular principal 
intended statement specify current trust root principal 
semantically statement essentially macro 
program finite set rules plus optional locale declaration statement 
locale declaration statement required local appears rules 
set rules known logic program lp rule set 
query takes form body formula 
usual expression term base atom statement clause program said ground contain variables 
clause variables stands ground instantiations 
expressive power lp section show lp express policies section 
decentralized attribute 
ha asserts pa physician ha says pa 
delegation attribute authority 
hm trusts ha identify physicians 
hm delegates ha 
inference attributes 
hm allows physician access document 
hm says access filea hm says 
attribute delegation authority 
hm trusts entity hospital identify physicians 
hm delegates hm says 
conjunction attributes 
hm allows physician manager access document 
hm says access hm says hm says 
attribute fields 
hm allows entity access records patient entity physician patient 
hm says hm says 
static threshold structures 
bank requires entities cooperate order approve transaction bank delegates approve threshold 
dynamic threshold structures 
bank requires cooperate cooperate order approve transaction bank delegates approve threshold bank says 
discussions delegation depth defined earlier delegation statement depth positive integer discuss meaning rationale delegation depths 
way view delegation depth number re delegation steps allowed depth means re delegation allowed depth means step allowed depth means steps allowed depth means unlimited re delegation allowed 
consider delegation statement local delegates read file bob 
means local delegates bob permission read file allows bob delegate step 
bob delegate permission entity say carl step depth consumed re delegation step 
carl effectively delegate permission 
depth delegation base atom ba implies delegations depth smaller ba 
particular depth delegation implies integer depth delegations 
dl provides integer depth unlimited depth ways control 
contrast restricted approaches previous literature control delegation re delegated depth boolean control delegation allows unlimited re delegation re delegation depth integer control integer depth 
keynote uses approach control spki uses boolean approach 
section spki designers gave reasons choosing boolean control integer control section integer control option original design appeal defeated inability predict proper depth delegation 
need go level creating temporary signing key laptop 
initially predicted depth significantly 
controlling proliferation permissions control width delegation tree control depth tight control proliferation 
disagree arguments reasons 
delegation depths properly predicted depends application system 
tm systems designed broad range applications saying predict adequate depth application 
second scenarios needs create temporary signing key laptop dl approach works better spki boolean approach 
suppose policy give permissions users delegate users allow empower temporary keys 
boolean approach choice allow infinite delegation 
dl delegation depth 
perfect extra depth delegate user control tighter boolean approach 
third see give depth control width control difficult 
see example possible control width delegation dl conjunction principals delegatee 
believe verdict kind re delegation control useful practice 
think dl approach attractive strictly expressive 
need integer depth credential just 
philosophical reason limiting delegation respect depth trust transitive see interesting discussions 
example delegation statement bob delegates carl means bob trusts carl credit 
carl says credit bob believes 
bob trusts carl carl trusts david bob necessarily trust david 
imaginable bob trusts carl ability judge credit trust carl ability judge principals ability judge credit 
case bob delegate carl depth 
bob trust principals carl trusts bob delegate carl depth 
cases bob trusts carl completely bob delegate carl depth 
intuition integer depth distinct meaning larger depth conveys trust smaller depth 
intuition trust transitivity yields behavior intuition controlling re delegation steps 
delegation depth knowing understanding philosophical reason delegation depths 
dl authorization scenarios subsection discuss dl authorization scenarios 
entities authorization scenarios represented principals dl 
principals issue credentials requests 
typically principal distributed authorization public private key pair 
principal issues credential request digitally signing message contains 
authorizer gets request credentials support request authorizer creates query request dl program rule set combination credentials authorizer local policies 
policies credentials translated rules dl 
translation authorizer verify rule issuer 
rule principal issuer encoded credential signed rule issuer 
rule local issuer come local policy 
policies securely stored locally need signed 
having program query authorizer decides authorize request inferring query true relative program dl semantics gives proof procedure answer relative consider example example determining credit status 
merchant approve customer order determine customer credit rating 
trusts bankb bankb trusts determining credit ratings 
credential issued bankb saying bankb believes principal credit particular credit card companies certify principal account standing 
policies credentials represented follows says says 
delegates bankb 
bankb says threshold says 
customer carl sends order provides cre says carl says carl generates new program consisting rules queries says carl dl semantics answer true authorize request 
suppose customer david sends order provides credentials says david says david decline request principal supports david 
note process generating program inferencing done authorizer point view 
dl single distinguished viewpoint viewpoint principal doing reasoning making authorization decisions current trust root referred local note local special symbol refers current trust root particular principal 
example local example 
step reasoning process example derive bankb says carl believes says carl says carl facts signed respective issuers 
rule issued bankb means principal believe principals support believe bankb says rule facts concludes bankb says carl reasoning done point view viewpoint different principal 
credentials signed issuers principal sees credentials believe bankb says carl principal signs distributes rule says says means sees credential believe says believe says discussion representation statements discuss differences representation statement represents ba depth delegation statement delegates ba representation statement strictly stronger delegation statement 
represents ba power respect ba allowed re delegate power 
words drawn representation statement don consume delegation depth 
example rules alice delegates read file bob 
represents bob read file 
says read file 
conclude alice says read file changes second statement bob delegates read file 
longer conclude alice says read file alice delegates bob depth 
main reason having representation statements handle delegations principals sign statements directly distinguished names local names spki sdsi 
authorities delegated names keys 
trust root determine keys represent names issue representation statements 
example credential delegates bankb 
scenarios bankb name issue statements credential signed key bankb 
call key 
assume trusts bindings keys names certifies bankb public key business purposes statements says bankb 
delegates key 
adding statement derive example 
key represents local says key 
representation statement delegate certain permission name entity separate delegation binding key name 
see representation statement essentially circumvents restriction 
rule representation statement head principal local trust root issuer 
principal issue statement saying delegates say represents trust root may rely information principals determine principal represents principal trust root decision information determining representation statements decision trust root 
note trust root incentive cheat depth choose authorize request consulting trust management engine 
example trust root implicitly putting lot trust similar pki today delegation depth limit trust bankb 
difference representation statements delegation statements dl similar difference name certificates delegation statements spki sdsi 
dl notion representation similar notion speaks differences 
dl representation relation defined base atom basis 
principal may represent principal respect thing 
speaks speaks respect 
second dl representation statement trust root speaks true says 
dl delegation relationship delegates says 
examples lp section give examples lp represent authorization policies credentials 
example multiple certification systems 
alice delegates 
alice delegates threshold alice says 
alice says bob 
bob delegates bob says orga 
bob delegates orga 
delegates 
says 
says 
says orga 
example root keys public key certification systems 
levels ca rule says alice accept binding public key site binding certified system system system second rule says alice unconditionally trusts trusted friend purpose binding public keys sites 
third rule says bob trusted friend alice 
fourth rule says bob thinks certification system site belongs specific organization orga 
fifth rule says bob trusts public key certify site belongs organization 
rest rules facts 
rules facts dl conclude alice says follows alice trust bob dl conclude alice says certified system system example accessing medical records 
example concerns access medical records 
example 
hm hospital controls medical records patients authorizes principals physicians patient access medical record patient 
hm trusts known hospital certify principal physician patient 
hm knows hospitals furthermore believes principal hospital known hospitals certify lp program represents policies includes facts 
hm says hm says 
hm delegates hm says 
hm delegates threshold hm says 
hm says hc 
hm says hb 
hb says ha 
hb says hd 
hc says ha 
ha says alice peter 
hd says david peter 
example hm initially believes hb hc hospitals 
hb hc certify ha hospital hm concludes ha says alice physician peter dl conclude hm says alice peter example controlling delegation width 
suppose alice wants delegate bob right access document confidential contract draft copyrighted report allow bob delegate right long principals bob delegates members organization orga membership orga certified carl 
words alice want control depth bob delegation wants restrict delegation certain domain members orga 
lp alice represent policy delegation statements 
alice delegates access bob 
delegates access threshold carl says member orga 
new principal created alice 
alice generates new pair public private keys signs second statement new private key uses new public key statement 
signing second statement alice throw new secret key away having worry keeping safe place 
policy alice delegate principal bob tmp key delegate 
bob delegate freely 
delegates principals certified carl members orga allow re delegation 
achieves intended policy 
suppose bob delegates access david 
bob delegates access john 
carl says member david orga 
delegation alice delegates access david alice delegates access john 

semantics lp section define semantics lp 
semantics defines minimal model lp gives answer query relative semantics defined transformations trans rans 
trans takes lp outputs olp 
rans takes set olp ground facts outputs set lp 
lp transformed essentially compiled definite olp trans olp language lop 
usual minimal model semantics olp olp minimal model mo set entailed ground expressed olp 
minimal lp model denoted mp obtained reverse transforming mo back lp syntax mp rans mo 
mp set entailed ground expressed lp 
inferencing procedure computes entire model mp called exhaustive bottom inferencing 
useful wants compute program 
olp want perform exhaustive inferencing 
answer particular lp query respect lp transform olp olp query answering mechanism answer query 
procedure described detail section 
kind query answering avoids computing entire minimal lp model called goal directed top inferencing 
specifying trans calculating size output trans notation 
size size mean number symbols variables constants predicate symbols keywords logical operators largest integer delegation depth difficult imagine authorization decision distinguishes say depth depth normally expect small integer 
define 
define operation specify trans subsections showing transform lp doesn contain threshold structures showing handle static dynamic threshold structures 
transformation lp olp threshold structures transformation trans generates olp program propagates direct statements delegations depth constraints exceeded 
generated program maintains number depth consuming delegation steps gone 
lp allows delegation queries generated program rules chain delegations derive new delegations rules generate weak delegations strong ones stronger delegation proved true answer query weaker delegation true 
step transformation replace occurrence local rules principal specified locale declaration statement 
recall syntactical requirement local occurs rules locale declaration statement replacement locale declaration statement removed 
resulting program 
predicates trans output language lop holds delegates 
predicate holds represent direct statements derived inference process takes parameters holds issuer ba len domain issuer set contains principals plus set dummy principals principal structure appears delegatee 
domain ba set ground base atoms ground instantiation 
domain len 
note base atoms terms predicate symbol add lop new function symbol name predicate symbol 
field len stores plus number delegation steps gone atom holds alice carl represents alice says carl field len means gone steps need keep track number steps greater maximum integer delegation depth predicate delegates represent delegation statements representation statements derived inference process 
takes parameters delegates issuer ba dep dele len dep stands depth dele stands delegatee 
domains issuer ba holds domain dep domain dele issuer field domain len 
note len field holds atom len field delegates atom case representation statements 
note delegates atom represent delegation single principal 
queries delegations conjunctions principals handled introducing dummy principals shown soon 
consider transform lp contain threshold structures 
define function pexpand transformation 
function pexpand function takes parameters principal expression principal principal variable principal structure atom predicate holds delegates issuer field 
consider case principal expression free threshold structures 
case function pexpand defined recursively follows pexpand pe pe atom pexpand pe atom pexpand pe atom pexpand pe pe atom pexpand pe atom pexpand pe atom pexpand holds ba holds ba pexpand delegates ba dep dele delegates ba dep dele principal variable single principal 
function pexpand transforms statement principal structure issuer equivalent statement formula statement principal principal variable issuer 
soon see pexpand deals principal structures enables body statements general head statements 
pexpand simply returns formula 
deal threshold structures sections extend definition pexpand side effects returning formula generate additional rules introduce new constants 
start defining trans 
divided phases body transformation head transformation 
phase body transformation phase transformation changes rule bodies result called 
may construct new rules set new rules called add phase transformation body rule 
holds body translation replace body direct statement ae says ba pexpand ae holds ba 
step adds length body statements uses pexpand deal complex issuers 
intuitively direct statement ae says ba body rule true prove ae supports base atom ba directly delegation 
length means require drawn certain number delegation steps 
representation body translation replace representation statement represents ba delegates ba 
means representation statements special delegations depth length 
simple delegates body translation replace body delegation statement ae delegates ba pexpand ae delegates ba principal principal variable 
step similar step delegation statements 
adds length body statements require drawn certain number delegation steps 
conjunction delegates body translation replace body delegation statement ae delegates ba 
bn pexpand ae delegates ba bnew 
bn principals bnew newly created principal 
addition bi add fact delegates bi ba bnew 
step enables tractable inference delegations conjunctions principals 
remember dele field predicate delegates required principal conjunction principals 
introduced dummy principal bnew represent principal structure 
bn 
bnew represents 
bn characterized relationships bnew represents principal 
bn 
new facts delegates bi ba bnew introduced purpose 
facts added need processing including final output sufficient 
phase ii head transformation input phase 
phase transformation changes rule heads result called 
constructs new rules set new rules called add rule cases applies case head direct statement says ba steps 
holds head translation replace head holds ba holds length weakening meta rule len add rule holds ba len holds ba len 
meta rule states derived smaller length may inferred larger length allowed 
case head direct statement delegation statement representation statement steps 
note steps may unnecessarily complicated especially way deal length delegation depth 
complication arises need avoid introducing new variables transformation essential proving tractability results 
sub case head delegation statement delegates ba depth delegation ll ll transformation steps 
single principal principal variable newly introduced dummy principal represents 
sub case head representation statement represents ba ll sub cases steps 
delegates head translation replace head delegates ba ll 
place delegatee field predicate delegates restricted single principal principal variable 
holds propagation meta rule len add rule holds ba len ll delegates ba ll pexpand holds ba len 
meta rule propagates direct statements delegation follows delegation head true previous step true body true delegatee supports len delegation steps issuer supports thing len ll steps ll head delegation head representation statement 
delegation chaining meta rule dep len dep add rule delegates ba min len dep len ll delegates ba ll pexpand delegates ba dep len 
complex expensive terms size new rules added meta rule 
intuitively means delegates depth see step relation derive len steps delegates depth dep delegates 
depth newly derived delegation bounded depth dep trust trusts bounded depth minus number delegation steps derive delegation steps provide key part relationship dummy principals principal structures represent 
self delegation meta rule dep len add fact delegates ba dep len 
meta rule states principal delegates unconditionally 
delegates depth weakening meta rule len dep add rule delegates ba dep len delegates ba dep len 
meta rule states smaller depth delegation may derived corresponding larger depth delegation derived 
holds length weakening meta rule len add rule holds ba len holds ba len 
meta rule step 
appears needed case 
delegates length weakening meta rule dep len add rule delegates ba dep len delegates ba dep len 
meta rule states delegation derived certain length may derived larger length 
example holds propagation 
delegates 
delegates 
says applying holds head translation holds applying delegates head translation delegates applying holds propagation meta rule len holds delegates holds rules concludes holds applying delegates applying len holds delegates holds rules concludes holds example delegation chaining 
delegates 
delegates 
delegates 
applying delegates applying delegates applying delegation chaining meta rule dep len delegates delegates delegates rules concludes delegates applying delegates applying dep len delegates delegates delegates rules concludes delegates delegation depth delegates depth steps consumed deriving delegation 
example self delegation 
delegates 
delegates 
applying delegates self delegation meta rule dep len delegates dummy principal introduced represent 
applying delegates 
applying dep len delegates delegates delegates delegates concludes delegates example conjunctive delegation body 
delegates 
says qq delegates 
rules conclude holds qq 
dummy principals introduced 
applying conjunctive delegates body translation head translation holds qq delegates delegates delegates delegates applying delegates applying dep len delegates delegates delegates delegates rules infer delegates applying delegates length weakening meta rule delegates delegates delegates concludes holds qq result transformation trans trans add add transformation process introduces dummy principals replace principal structures occur 
transformation process outputs list dum dummy principals principal expressions replace 
list useful converting drawn back lp 
lemma 
lp threshold structures size maximal integer depth trans 
proof 
counting argument focuses ratio call growth factor 
show growth factor 
note pexpand atom atom 
clearly growth factor pexpand 
body transformation phase body statement replaced result corresponding pexpand call 

body statement conjunctive delegatee program additional fact principal delegatee 
principals delegatee additional fact size linear size original body statement 
note phase change rule heads 
head transformation phase rule direct statement head new rules added size linear size original head 
add 
size remains unchanged 
head transformation phase rule delegation statement representation statement head transformation steps apply adds set rules add size remains unchanged 
step delegation chaining meta rule generates largest set rules 
adds transformed rules rule recall set principals add new principal introduced statement 
transformed rule may pexpand change parts 
growth factor step nd times growth factor pexpand 
add add claim holds 
growth factor comes size order 
comes bound size principal structure usually smaller 
generating typed olp ensure tractability trans datalog trans introduces logical function symbols non zero arities 
predicate pred trans corresponding function symbol 
see sections trans introduces pre defined function symbols threshold structures 
problem addressed generating typed olp output 
intuitive idea typed logic program sorts variables ranging different domain 
typing limit terms instantiate variable limiting instantiated size program 
different typing systems logic programs 
purposes simplest form typing sorted typing suffices 
advanced typing systems logic programs see 
sorted lp language finite set types 
variables constants types 
predicate symbols types form 
function symbols types form 

variables type instantiated terms type 
type predicate specifies type arguments type function symbol func specifies type return value type term form func 
simple techniques translate programs sorted language untyped language see pages 
sorted logic programs executed efficiency untyped logic programs 
sorted typing ensure variable trans ground terms instantiate 
variables trans come variables instantiated ground terms terms constructed function symbols introduced transformation 
simplest typing achieves goal types lop 
variables constants coming type 
terms introduced transformation type 
variables trans come variables lop type 
fact crucial tractability result lp inferencing section 
argued logic programs implicit assumptions types logic program satisfies intended meaning type information added 
observe authorization conceptually different types entities subjects objects groups roles predicates conceptually take arguments certain types 
add typing directly explicitly dl syntax 
degree typing implicitly dl 
dl principals principal variables implicit principal type 
typing relax datalog restriction dl syntax 
long variables allowed instantiated limited number ground terms program need datalog 
think adding types dl potentially useful pursue topic main topic 
transformation static threshold structures handle static unweighted threshold structures add new function symbol lop stands static unweighted threshold structures 
extend domain issuer field predicates holds delegates include terms form 
integer representing threshold value needs satisfied ai principals 
extend definition pexpand include pexpand threshold 
holds ba holds 
ba pexpand threshold 
delegates ba dep dele delegates 
ba dep dele function pexpand calls forms results side effects returning formula generates new rules 
rules reason atoms issuers form 
case pexpand called holds atom 
pexpand threshold 
holds ba 
add rule holds aj aj 
ba holds aj ba holds aj 
ba 
added rule contains 
define empty list 
meta rule means aj supports ba fewer principals aj 
support ba fewer principals aj aj 
support ba add rule holds aj aj 
ba holds aj 
ba 
meta rule means fewer principals aj 
support ba fewer principals aj aj 
support ba 
add fact holds aj 
ba 
meta rule means true fewer principals aj 
support ba 
case pexpand called delegates atom 
pexpand threshold 
delegates ba dep dele 
case similar case delegates place holds 
add rule delegates aj aj 
ba dep dele delegates aj ba dep dele delegates aj 
ba dep dele 
add rule delegates aj aj 
ba dep dele delegates aj 
ba dep dele 
add fact delegates aj 
ba dep dele 
consider size affected 
call pexpand static unweighted threshold structure returns atom size input generates number new rules 
define growth factor pexpand threshold structures total size generated rules plus output divided size input 
lemma 
growth factor pexpand static unweighted threshold 
proof 
time pexpand encounters static unweighted threshold structure new rules generated threshold value size threshold pool 
new rule size linear size pexpand input 
worst case bound kn 
static weighted threshold structures handled similarly static unweighted threshold structures new function symbol introduced 
extend domain issuer field predicates holds delegates include terms form 
wn extend definition pexpand include pexpand threshold 
wn holds ba holds 
wn ba pexpand threshold 
wn delegates ba dep dele delegates 
wn ba dep dele case pexpand threshold 
wn holds ba 
add rule holds aj wj aj wj 
wn ba holds aj ba holds max wj aj wj 
wn ba 
add rule holds aj wj aj wj 
wn ba holds aj wj 
wn ba 
add fact holds aj wj 
wn ba 
case pexpand called static weighted threshold structure delegates atom 
case similar case delegates place holds 
details omitted 
lemma 
growth factor pexpand static weighted threshold 
proof 
similar lemma 
transformation dynamic threshold structures handle dynamic threshold structures need listing principals 
number different principals 
cm list principals 
introduce new function symbol stands dynamic unweighted threshold structure extend domains issuer field predicates holds delegates include terms form integers newly generated constant 
integer threshold value needs satisfied integer index list principals 
cm newly generated constant uniquely identify dynamic threshold pool defined rin says pred 
extend definitions pexpand include pexpand threshold rin says pred 
holds ba holds ba pexpand threshold rin says pred 
delegates ba dep dele delegates ba dep dele time pexpand called dynamic unweighted threshold structure argument generates new constant set new rules addition returning atom defined 
case pexpand threshold rin says pred 
holds ba 
greater threshold satisfied 

add rule holds ba holds rin pred 
cj holds cj ba holds ba 
add rule holds ba holds ba 
add rule holds ba 
case pexpand called dynamic unweighted threshold structure delegates atom 
case similar case delegates place holds 
details omitted 
lemma 
growth factor pexpand dynamic unweighted threshold 
proof 
dynamic threshold structure min rules added threshold value 
recall number different principals 
worst case growth factor pexpand dynamic threshold structures static threshold structures 
dynamic threshold structures expensive practice typically larger 
recall section size static threshold pool 
dynamic weighted threshold structures considered incorporating dynamic weighted threshold structures dl pose difficulties ensuring tractability 
reverse transformation section defined transformation lp olp define reverse transformation maps olp model lp model reverse transformation useful wants lp entailed transformation lp olp dummy principal introduced principal expression principal principal variable occurs delegatee delegation statement 
reverse transformation principals replaced principal structures correspond appear delegates 
mapping dum dummy principals principal structures produced transformation needed 
reverse transformation follows 
atom form holds ba len non dummy principal include lp says ba 
atom form delegates ba non dummy principals include lp represents ba 
atom form delegates ba dep len non dummy principal principal len 
non dummy principal include lp delegates ba dep dummy principal introduced principal structure include lp delegates ba dep 
note way semantic transformation defined atoms len dep 
note ignore dummy principals threshold structures issuers convert back lp intermediate results 
note length ignored olp drawn 
minimal lp model denoted mp obtained applying reverse transformation mo minimal olp model query answering answer lp query set variable bindings true relative ground answer just truth value truth value relative determined minimal lp model mp simply check mp answer syntactic expressiveness lp query considerably greater lp 
query may principal structure issuer may conjunction principals delegatee 
give algorithm answer query relative doing exhaustive inferencing transform olp query procedure transform rule bodies body transformation see section 
transformation changes olp query generates new set olp rules add possibly empty 
form olp add 
answer olp query respect backward olp inference engine prolog 
resulting bindings directly yield answer query relative 
tractability results section give upper bounds worst case computational complexity trans transformation lp olp lp inferencing trans 
section show trans tractable 
section show restriction rule bounded number variables lp inferencing tractable 
restriction similar guaranteeing tractability datalog inferencing relational databases 
tractability transformation lp olp lemmas sections follows straightforwardly growth factor transformation trans maximal delegation depth result 
theorem tractable transform size 
lp size trans maximal delegation depth observe definition trans corresponds straightforwardly algorithm perform transformation 
observe algorithm takes time linear size output olp 
observations theorem theorem 
theorem tractable transform time 
computing takes time 
transformation lp olp computationally tractable 
discussed expect typically small constant 
discuss complexity picture practice significantly better worst case bound 
observe rule grows independently rules simple ones small growth factors 
rule direct statement head simpler rule delegation statement representation statement head 
rule threshold structure simpler rule 
consider rule contain threshold structures head body sr size largest principal structure certainly sr bounded size turn bounded expect sr usually small constant 
head direct statement growth factor max sr small constant assuming sr small constants 
simplest rules typically constant growth factor 
head delegation statement representation statement growth factor srd clearly 
assuming sr constants srd factor relatively large constant factor 
transformation rules contain threshold structures expensive 
having threshold structures rule affect growth factor rules 
expect practice lp programs consist simple rules threshold structures 
break growth factor follows 
having complex principals structures contributes max cases 
having conjunctions disjunctions contributes size largest principal structure clearly 
typically small constant 
having threshold structures contributes max cases 
having static threshold structures contributes min 
having dynamic threshold structures contributes min 
note typically small constant case growth factor complex principal structures involved 
having integer delegation depth contributes trans loops lengths depths derive delegation 
factor reduced answer delegation queries trans needs loop lengths 
answering delegation queries contributes trans needs loop principals set 
tractability lp inferencing review previously known results olp inferencing 
say lp olp lp obeys vb restriction upper bound number logical variables 
indicate rule bound number variables say lp vb 
say lp vbd vb datalog ground 
datalog means function symbols non zero arity 
function symbols non zero arity possible generate infinite number ground terms minimal model non datalog program may infinite 
example arity function symbol constant construct terms definite olp vbd inferencing computing minimal model answering query relative takes time 
inferencing definite olp takes time linear size ground instantiation ground instantiation size 
variable ground terms instantiate rule ways instantiate 
instantiating increases size factor 
directly result lp inferencing generated olp trans datalog generating sorted olp ensure ground terms instantiate variables theorem 
theorem tractable lp inferencing 
lp vb computing minimal lp model time complexity maximal delegation depth proof 
vb trans vb trans introduce new variables 
recall discussion typing variables ground terms instantiate variable function symbols constants 
theorem instantiated size 
computing minimal olp model takes time size model 
reverse transformation takes time linear size model 
theorem transformation takes time 
computing minimal lp model time complexity 

discussion conjunctive delegatee queries restriction section defined lp obey conjunctive delegatee queries restriction delegation statement appearing query rule body delegatee principal principal variable conjunction principals delegatee permitted contain disjunction threshold structure disjunctive nature 
section discuss detail tractability motivation conjunctive delegatee queries restriction 
understanding lp inferencing delegation lp allows delegation statements appear queries 
answer queries correctly lp semantics infers weaker delegations stronger ones 
delegations compared bases base atoms delegation depths 
discussed earlier things equal higher depth delegation stronger lower depth 
stronger relation transitive reflexive partial order 
pairs delegations comparable example delegates delegates different base atoms 
consider stronger relation delegations differ 
simplicity presentation omit implicit base atom depth discussion 
compare relative strength delegations basis intuitive interpretation delegation delegates means says agrees interpretation delegates logically equivalent conjunction delegates delegates contrast delegates weaker delegates delegates delegations implies vice versa 
conjunction principals equivalently represented set principals call conjunction principals principal set set operators directly 
different principal sets pt pt delegates pt different delegates pt furthermore incomparable pt pt pt pt 
see principals number different principal sets principals exponential fact delegation fact delegates 


bm 
imply delegations delegates 
ij 
semantics generates delegations conjunctions principals exponential size program 
order keep lp semantics tractable impose limitation lp generates delegation single principal 
result lp semantics directly answer delegation queries single principal delegatee 
delegation query delegatee principal conjunction handled introducing new dummy principal represent conjunction transforming query delegation new dummy principal 
lp semantics generates delegation conjunction principals delegation asked included query rule body 
form lazy evaluation 
conjunctive delegation queries useful scenario request signed multiple principals may need determine delegation local conjunction signers 
example answering delegation queries 
delegates 
delegates 
delegates 
says qq delegates 
rules conclude says qq give high level description done lp inferencing 
trans transformation lp olp generate new principal replace rule says qq delegates add facts represents represents represents note trans generates rules olp syntax lp syntax ease discussion 
rule facts represents represents concludes delegates similarly rule facts represents represents concludes delegates new rule concludes delegates note depth constraints satisfied 
handling delegation queries disjunctive having explained lp deals conjunctive delegation queries show extend approach answer delegation queries contain disjunctions static threshold structures allowed 
approach exponential computational complexity 
view principals propositions principal structures negation free formulas propositional logic 
principal principal structure true says implicit base atom talking false 
principal structures delegates stronger delegates tautology 
reason follows 
delegates says agrees 
says true true agrees 
delegates true 
give approach answering delegation queries transforming principal structures normal forms essentially disjunctive normal forms formulas propositional logic replace disjunctive delegation query equivalent query conjunction delegation statements 
principal structure normal form form pt pt pt pt principal set pt pt views propositional formula normal form pt pt pt result converting propositional logic formula reduced disjunctive normal form dnf 
reduced means subsumption disjunct pt repetitions principals disjuncts disjunct subset disjunct 
normal form threshold 
wn disjunction minimal subsets 
corresponding weights sum greater equal example normal form threshold 
principal structures transformed conjunction disjunction transformed normal forms methods propositional logic 
knowing principal structure normal form pt 
pt delegation pe delegates query rule body transformed pe delegates pt pe delegates pt pe delegates pt consider example delegation threshold structure rule body 
example query delegation static threshold structures 
delegates 
delegates 
says delegates threshold 
rule translated rule says delegates delegates delegates 
lp semantics answer true delegates delegates delegates dummy principal approach described earlier 
says true concluded 
principal structure converted normal form size may grow exponentially 
normal form threshold structure threshold 
size exponential principal structure 


am 
amn contains mn principals size mn normal form size mn 
motivates conjunctive restriction 
queries delegations dynamic threshold structures delegation query dynamic threshold structure delegatee nonmonotonic sense knowledge representation may go true false information known 
consider example 
example nonmonotonicity delegation dynamic threshold 
delegates 
delegates 
delegates 
says friend 
says friend 
says friend 
program conclude delegates threshold says friend delegation facts program combined equivalent delegates threshold add fact says friend program delegation delegates threshold says friend longer true delegation delegates threshold implies delegates program 

discussion implementation implemented lp xsb prolog variant logic programming system developed warren suny stony brook 
implementation called xd lp available 
xd lp includes compiler compiles lp olp rules internal format meta interpreter answer queries rules 
xd lp turns xsb engine lp engine 
xsb nice features prolog systems 
uses slg resolution tabling ability :10.1.1.38.8814
slg resolution enables xsb evaluate correctly recursive logic programs sld prolog systems get infinite loop 
crucial delegation relationships circular 
xd lp implements slightly version lp omits statements 
xd lp uses alternative transformation different similar gave section 
alternative transformation generates output program size linear size input program introduce new variables 
call ungrounded transformation issues dl additional infrastructural issues discussed practically important developing real world systems dl subject current 
example different entities agree meanings predicates 
data structures com munication protocols exchanging dl rules distributed applications principals internet sites 
arounds dl absence communication infrastructure 
way translate certificates multiple public key infrastructure systems dl facts write local policies control certificates 
example local policies may specify trust different pki systems various purposes varying degrees certification multiple systems required gain sufficient confidence critical applications 
unresolved infrastructural question authorizer obtains credentials needed decision 
possible ways credentials flow authorizer 
requester submits credentials request 
authorizer asks requester additional credentials evaluation request 
authorizer asks entities relevant credentials evaluation request 
mixes interesting 
obtain relevant credentials dynamically dl inference topic exploring 
extending lp nonmonotonic features section mentioned dl extends definite ordinary logic programs nonmonotonic reasoning 
version dl nonmonotonic features called lp described 
lp negation failure default negation classical negation prioritized conflict handling 
discussed integrating delegation nonmonotonicity results difficulties 
difficulties lp defined prohibits delegation statements appearing queries rule bodies 
note nonmonotonic policies needs complete information certain things order derive correct complete information inherently hard obtain distributed environments 
difficulties need resolved nonmonotonic policies trust management 
subsequent related related works appeared delegation logic appeared 
sd secure dynamically distributed datalog binder approach extending datalog explicit issuers 
rt trust management framework datalog 
rt addresses name agreement distributed storage discovery credentials 

lp monotonic version logic trust management language delegation logic dl representing security policies credentials authorization large scale open distributed systems 
gave list sample policies testing expressive powers tm systems showed previous tm systems lack important expressive features 
exceptions systems policymaker allow programs general purpose programming languages credentials policies express policy 
usability suffer result 
showed lp express policies 
general approach designing dl extend existing understood logic programming lp languages features needed distributed authorization 
lp extends definite ordinary lp definite lp see issuers delegation constructs 
approach defining semantics dl define transformation dl programs programs underlying logic programming language 
transformation approach gives easy access established results olp example dl program minimal model 
lp clearly specified notion proof compliance model theoretic semantics abstracted away choice details implementation 
showed transformation steps computationally tractable lp inferencing tractable broad restriction similar ensures tractability olp inferencing 
transformation approach yields natural implementation architecture dl implemented delegation compiler dl olp 
enables dl implemented modularly top existing technologies olp include prolog sql relational databases rule knowledge systems 
summary main contribution tm language lp expressive declarative tractable practically implementable 
studied support delegations integer depths unlimited depth delegations complex principal structures inferencing delegations 
practical importance features integer depth debatable believe clarifying features interact contribution 
author currently supported darpa contracts dod muri semantics consistency information exchange onr 
anonymous reviewers helpful comments 
mart abadi 
sdsi linked local name spaces 
journal computer security 
mart abadi michael burrows butler lampson gordon plotkin 
calculus access control distributed systems 
acm transactions programming languages systems october 
tuomas aura 
structure delegation networks 
proceedings th ieee computer security foundations workshop pages 
ieee computer society press june 
baral michael gelfond 
logic programming knowledge representation 
journal logic programming may july 
elisa bertino francesco elena ferrari pasquale 
logical framework reasoning data access control policies 
proceedings th ieee computer security foundations workshop csfw pages 
ieee computer society press 
matt blaze joan feigenbaum john ioannidis angelos keromytis 
keynote trust management system version 
ietf rfc september 
matt blaze joan feigenbaum john ioannidis angelos keromytis 
role trust management distributed systems 
secure internet programming volume lecture notes computer science pages 
springer 
matt blaze joan feigenbaum jack lacy 
decentralized trust management 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
matt blaze joan feigenbaum martin strauss 
compliance checking policymaker trust management system 
proceedings second international conference financial cryptography fc volume lecture notes computer science pages 
springer 
chen david warren :10.1.1.38.8814
tabled evaluation delaying general logic programs 
journal acm january 
yang hua chu joan feigenbaum brian lamacchia paul resnick martin strauss 
referee trust management web applications 
world wide web journal 
clarke jean emile carl ellison matt alexander ronald rivest 
certificate chain discovery spki sdsi 
journal computer security 
www 
platform privacy preferences project 
www org 
john detreville 
binder logic security language 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
carl ellison bill butler lampson ron rivest brian thomas 
spki certificate theory 
ietf rfc september 
carl ellison bill butler lampson ron rivest brian thomas 
simple public key certificates 
internet draft progress july 
world std com cme spki txt 
hal finney 
transitive trust 
post mailing list archived www inet com dir msg html may 
xsb research group 
xsb programming system 
xsb sourceforge net 
joseph halpern ron van der meyden 
logic sdsi linked local named spaces 
journal computer security 
amir herzberg mass naor ravid 
access control meets public key infrastructure assigning roles strangers 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
jonathan howell 
naming sharing resources administrative boundaries 
phd thesis dartmouth college may 
sushil jajodia samarati subrahmanian 
logical language expressing authorizations 
proceedings ieee symposium security privacy pages 
ieee computer society press 
sushil jajodia samarati subrahmanian elisa bertino 
unified framework enforcing multiple access control policies 
proceedings acm sigmod international conference management data pages 
trevor jim 
sd trust management system certified evaluation 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
stephen kent 
internet privacy enhanced mail 
communications acm august 
butler lampson mart abadi michael burrows edward wobber 
authentication distributed systems theory practice 
acm transactions computer systems november 
marc langheinrich 
preference exchange language appel 
working draft april 
ninghui li 
xd lp implementation lp xsb 
cs nyu edu ninghui xd lp 
ninghui li 
delegation logic logic approach distributed authorization 
phd thesis new york university september 
ninghui li 
local names spki sdsi 
proceedings th ieee computer security foundations workshop csfw pages 
ieee computer society press july 
ninghui li joan feigenbaum benjamin grosof 
logic knowledge representation authorization delegation extended 
proceedings ieee computer security foundations workshop pages 
ieee computer society press june 
ninghui li benjamin grosof joan feigenbaum 
practically implementable tractable delegation logic 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
ninghui li john mitchell william winsborough 
design role trust management framework 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
ninghui li william winsborough john mitchell 
distributed credential chain discovery trust management 
appear journal computer security 
extended appeared proceedings eighth acm conference computer communications security ccs 
john lloyd 
foundations logic programming second edition 
springer 
maurer 
modelling public key infrastructure 
proceedings european symposium research computer security volume lecture notes computer science pages 
springer 
lee naish 
types intended meaning logic programs 
pfenning editor types logic programming pages 
mit press 
peter 
computing horn clause theories volume eatcs monographs theoretical computer science 
springer 
frank pfenning editor 
types logic programming 
logic programming series 
mit press 
itu rec 
revised 
directory authentication framework 
international telecommunication union 
ronald rivest lampson 
sdsi simple distributed security infrastructure october 
theory lcs mit edu rivest sdsi html 
stephen weeks 
understanding trust management systems 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
