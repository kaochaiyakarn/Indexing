getting know learning new user preferences recommender systems rashid albert dan lam sean joseph konstan john riedl grouplens research project department computer science engineering university minnesota minneapolis mn usa lam konstan riedl cs umn edu recommender systems valuable resources users seeking intelligent ways search enormous volume information available 
crucial unsolved problem recommender systems best learn new user 
study techniques collaborative filtering recommender systems learn new users 
techniques select sequence items collaborative filtering system new user rating 
techniques include information theory select items give value recommender system aggregate statistics select items user opinion balanced techniques seek maximize expected number bits learned item personalized techniques predict items user opinion 
study techniques offline experiments large preexisting user data set live experiment users 
show choice learning technique significantly affects user experience user effort accuracy resulting predictions 
keywords recommender systems collaborative filtering information filtering startup problem entropy user modeling 
people decisions day 
movie see city visit book read web page information need far choices far little time explore 
exploding availability information web provides problem tougher 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
iui january san francisco california usa 
copyright acm 
recommender systems help people decisions complex information spaces 
recommenders suggest user items may value knowledge space possible items 
news service example remember articles user read 
time visits site system recommend new articles ones read 
collaborative filtering technique producing recommendations 
domain choices items users express opinions ratings items tried 
recommender compare user ratings users find similar users criterion similarity recommend items similar users liked past 
new users come system knows 
called new user problem recommender systems :10.1.1.42.639
system acquire information new user order personalized predictions 
direct way ask ratings directly presenting items user 
system careful useful items garner information 
food recommender instance probably ask new user likes vanilla ice cream 
people vanilla ice cream knowing new user likes tells little user 
time recommender ask items user opinion 
travel recommender probably benefit asking new user liked instance 
recommender system learn people visited little value forming travel recommendations 
choice exactly questions ask new user critical 
intelligent recommender interface minimize new user effort get fun part system seeing recommendations learning recommendations 
explore approaches choosing items new users rating 
consider problem general case recommender systems illustrating strategies performing experiments movielens movie recommender 
survey related areas decision theory recommender systems consider approaches selecting movies users 
test approaches historical data drawn rating movielens dataset 
test promising strategies new movielens users 
discuss results suggest directions 
related briefly mention related field decision theory survey done new user problem area recommender systems 
decision theory entropy decision theory proved useful determining models re ordering search results 
application utility functions recommender systems 
analysis data entropy theoretical information content standard technique information retrieval medical diagnostic systems sequential classification problems years 
lately researchers extended entropy areas probabilistic models information retrieval value information analysis 
apply decision theory techniques new problem choosing items new user recommender system 
problem ways converse cited research selecting items questions user choosing answers user question 
recommender systems new user problem little solving new user problem analyzing ratings data smart decisions 
pennock horvitz proposed value information calculation discover valuable ratings information gather user 
knowledge published implementations evaluations calculations 
merialdo entropy variance ratings data order generate accurate predictions new users 
expands results number strategies consider suitable variance entropy 
larger dataset offline experiments verify findings live experiment 
approach solving new user problem creates pre user categories quickly assigns new users 
partitioning accomplished asking user pre determined questions build user preference structure 
helps jump start user system requiring substantial number ratings 
class approaches addresses question starting small set preference models demographic models models attributes items asking questions help choose appropriate model user 
models accurate quite useful premise personalized recommender systems collaborative filtering person preferences better predictor preferences attributes 
category demographic models general methods apply certain domains require domain specific expertise 
technique overcome startup problem new items collaborative filtering system injecting ratings agents rate item system algorithmic analysis content item 
sure item system ratings help users find items interested 
directly attack new user problem 
integrated agents collaborative filtering environment extract user preference information transparently 
method advantage collecting implicit information addition explicitly provided ratings gather data new users rapidly 
implicit data addition explicit data promising approach complementary approach carefully selecting explicit data collect 
strategies selecting items trade offs choosing strategy presenting items 
discussed requiring effort user cause users give asking questions result poor recommendations 
identify dimensions strategy choose support user effort hard sign 
user satisfaction user process 
recommendation accuracy system recommendations user 
system utility system able serve users learns 
choose focus user effort accuracy 
chose easy measure measured line line experiments 
user satisfaction studies difficult line historical data believe user satisfaction rise user effort falls 
touch issues related system utility danger introducing biases system ratings database certain strategies focus primary focus factors directly influence user experience 
consider types strategies presenting items ranging random selection strategies exploit aggregate properties system database choosing popular items strategies tune individual users 
random strategies random strategies avoid bias presentation items 
consider variants 
random 
select items randomly uniform probability universe items 
movielens 
page movies select movie randomly ad hoc manual list popular movies rest randomly movies 
discussion 
random strategies advantage collecting user preference data entire universe items 
distribution ratings uniform users seen randomly selected movies 
movielens tries boost chance users success page 
popularity movielens number movies number ratings decreases approximately exponential manner deviating exponential form rated movies 
popularity 
rank items descending order number ratings 
movies descending popularity order 
discussion 
strategy easy calculate easy users rate movies 
popular movies may widely liked true ratings carry little information 
likes titanic say system learn 
concern popularity strategy possibility prefix bias 
popular movies easier system recommend similar users seen 
users rate movie system recommends popular movies garner ratings 
unpopular movies suffer problem reverse hard recommend users see rate 
bias may explain deviation exponential form popularity distribution movies 
pure entropy alternative approach ask users movies give information rating 
informally movie people hate tell movie liked 
merialdo variance entropy get notion 
pure entropy 
movie calculate entropy relative frequency possible ratings 
sort movies descending order entropy 
movies highest entropy user seen 
discussion 
choices entropy strategy 
handle missing ratings 
choose ignore calculation information content missing rating hard measure user may chosen see heard seen thought rate 
choice compute entropy rating individually convert ratings binary vs dislike model ratings indicate ratings indicate dislike 
information technical sense meant entropy necessarily translate information usable system 
movie ratings high entropy little value finding similar users making recommendations 
similarly recommender may high entropy movies user seen system gain information 
performed pilot study online experiment pure entropy strategy turned unusable 
users view movies finding rate 
balanced strategies popularity strategies tend get ratings users rating may low information theoretic value recommender system 
conversely techniques get lot value rating users may find relatively items rate 
section consider balanced techniques attempt obtain ratings relatively high value 
sense techniques working obtain expected bits information possible item user possibly rate 
entropy ratings 
entropy vs popularity movie smoothed moving average entropy previous popular movies 
popularity entropy pop ent 
rank items product popularity entropy 
entropy number bits information user rates item popularity probability user rate item 
bayes theorem way assumes popularity entropy independent strictly true approach approximation expected number bits 
experience movielens ratings suggests popularity entropy strongly correlated 
plots average entropy movies popularity ranking moving average prior popular movies 
shows little correlation movie popularity entropy movies ratings 
log popularity entropy log pop ent 
take log number ratings computing popularity 
studying entropy popularity observed distributions dataset popularity completely dominated pop ent strategies producing nearly sets rankings 
log ratings nearly linearized popularity making better match entropy 
discussion 
suggests entropy may effective strategy entropy nearly independent popularity 
entropy choose items users low probability having opinion 
balanced techniques directly combine entropy popularity increase odds user able rate movies recommender presents expected value rating 
personalized strategies aggregate statistics 
popularity item rough approximation chance particular user seen 
ideally movies user tailored user soon information user 
know user rated want show movies rated people rated 
goal hone movies user seen order process easier require user effort 
simple personalized strategy uses item item similarity 
item item personalized movies strategy user rating 
recommender computes similarity items select items user seen 
update list similar movies user submits ratings remembering movies user seen 
experiments initial screen movies random selection top movies ranked log pop ent strategy 
discussion 
personalizing movies similar recommending movies 
recommend movies try identify movies user presenting movies care seen movie 
suggest recommender item item recommender experiments developed commerce mind uses binary ratings user bought item 
accepts list items user bought returns list items user buy 
exactly task face list movies user seen movies seen 
possible disadvantage item personalized strategy seeing movie probably correlated liking movie 
average rating movielens dataset example close scale 
means may get positive ratings new user useful knowing movies user likes dislikes 
plausible strategies number plausible strategies consider 
system ask questions user mentioned earlier strategies domain dependent 
system ask names items user likes 
cdnow com explicitly asking album titles user liked 
recommender system preferentially display new items items added database 
perform sophisticated analysis entropy personalization attempt try select items high independent entropy 
focus domain independent strategies simplest ones exploring complex strategies fertile ground 
offline experiments decided explore strategies mentioned performing line experiments historical data simulate process new movielens users 
benefit offline experiments quickly test variety strategies bothering actual users strategies turn practice poorly 
disadvantage offline experiments described detail biases existing data may bias results particular approaches 
identify biases carefully interpret results context 
experiments invaluable ruling algorithms painful actual users 
experimental design build dataset line experiments took snapshot movielens ratings database eliminated users fewer ratings 
left users movies ratings 
cutoff high somewhat arbitrary 
needed large number ratings user historical data hard know movies user seen ratings 
needed ratings user sample movies able rate 
tested pure entropy random popularity pop ent item item personalized strategies 
test movielens strategy historical data gathered strategy feared possible bias 
mimic line sign process strategy total movies user 
varied number movies see strategies performed system attempted gather information 
started run withheld user ratings system 
movies users rated movies seen ratings database 
correct number movies counted number movies user able rate 
ratings implied better job showing items user rate 
means wasted user time looking items fewer items get information system needs saving user effort 
counting rated movies training data user predictions movies user rated original dataset 
calculated mean absolute error mae predictions 
mae sum absolute differences prediction corresponding rating divided number ratings 
performed entire procedure strategy user test set computed average mae users 
computing average mae way counts users equally biasing results users ratings 
mae movies seen entropy random popular pop ent item item movies 
number movies seen versus number movies user 
entropy random popular pop ent item item 
movies 
mean absolute error mae vs number movies strategy 
biases reduced dataset reduced dataset inherits biases full movielens dataset 
particular prefix bias popular movies easier recommend shown rated 
give strategies incorporate popularity advantage number movies allow user rate 
decision remove users ratings introduces possible bias 
bias results may meaningful active users 
possible removing users fewer ratings artificially impact prediction accuracy 
excluding users resulted denser data set 
results shows item item personalized strategy best picking movies users rate pure entropy worst 
shows effect different strategies mae 
pop ent performs best number movies popularity close 
pure entropy poor 
poor performance pure entropy metrics directly related 
shows slight increase entropy popular movies 
popularity directly relates chance new user seen movie strategy presents movies users seen resulting poor performance movies seen metric 
fewer rated movies base predictions mae pure entropy suffered 
item item personalized strategy interesting behavior 
expected win metric fact competition 
translate better recommendations 
hard believe random strategy get error rate ratings training data comparable item item personalized strategy ratings 
possible reason item item strategy movies accurate predictions 
imagine system presents star trek kirk star trek fan rates 
system looks finds people seen seen star trek presents movies 
seen star trek movies probably rated highly 
system shot finding user neighborhood able number accurate predictions lowering mae 
problem item item personalized strategy job sampling entire space movies 
item item methods tend find loose clusters similar items hone clusters 
may cause poor exploration universe items recommender may expert star trek movies expense 
helps explain random strategy despite finding fewer movies samples genres levels popularity 
discuss merits strategies results online experiment 
online experiment followed line experiment deploying strategies live movielens site 
live users verify results line experiment removing bias induced considering users ratings 
wanted compare strategies movielens strategy 
planned investigate strategies online experiments 
pilot study decided random entropy strategies average number movies user see rating get recommendations prohibitively high 
reading hundreds movie titles frustrating process surely turn users away 
pilot study lead log pop ent strategy pop ent pop ent popularity chose set movies 
experimental design new user joins movielens system presents pages movies user rates movies 
altered process ask users willing system experimental method selecting movies rate 
users assigned groups popularity log pop ent item item personalized strategy movies 
consent received movielens strategy 
self selection introduces bias strategy baseline 
movielens total new users day experimental period 
table shows number users experimental group 
users gave completing sign process 
results users completed process 
table 
population experimental groups 
strategy total users completed popularity item item ent total primary goal online experiment measure effectiveness process pages movies user see rated get started 
believe suitable proxy effort require user fewer pages effort 
measure prediction accuracy basis computing mae immediately user signs 
compute movies rated process movielens logs predictions movies support retrospective analysis 
purpose process gather information judging error process sense 
user interaction quite difficult foresee quantify 
users rated movies page random sample highly unexpected event dozens pages popular movies seemingly able rate single 
included users prejudice 
expectations popularity log pop ent approaches expected show slow decrease number movies matched page point users finish 
natural consequence fact pre sorted movies descending order corresponding parameter 
expected item item personalized strategy perform better log pop ent page uses strategy select initial set movies 
expect item item strategies subsequent pages showing successfully finding movies users seen 
ratings popularity item item ent page 
number movies users rate page different movie presentation strategies 
results shows number movies page average user able rate strategies 
popularity log pop ent exhibit decay expected rose slightly pages 
item item recommender kicks second page users able rate movies strategy movies page 
approximately constant pages 
percent users 
cumulative percentage users finished signing number pages 
user point view ease process probably best expressed number pages movies see starting get recommendations 
mean number pages varied popularity item item strategies rising log pop ent strategies 
plots cumulative percentages users nth page shows means hide long tails especially case log pop ent strategy 
shows popularity item item strategies far effective strategies users able sign pages 
strategies fare worse number users requiring pages 
consider users completed process strategies eventually reach percent truncated graph pages strategies popularity outliers viewed movies movies rate 
table 
evaluation strategies experiments user effort accuracy metrics 
strategy random user effort accuracy popularity log pop ent item item popularity item item ent page discussion consider line line results section 
evaluating techniques focus dimensions user experience user effort recommendation accuracy 
best strategy eliciting information users depends dimension wish optimize 
algorithms minimizing user effort cost accuracy algorithms provide accuracy cost additional effort user 
best algorithms perform measures 
popularity pop ent item item personalized strategies give reasonable performance metrics provide system designer easy way choose trade offs 
popularity provides balance effort accuracy 
pop ent trades effort accuracy item item personalized trades accuracy effort 
item item sacrifice accuracy methods 
results line line experiments support 
random entropy performed poorly helping users rate movies popularity performed cases item item successfully movies users rate experiments 
table compares performance algorithms primary dimensions minimizing user effort making predictions 
choosing intelligent strategy presenting items rate dramatically improve usability 
strategy required times effort best strategies popularity item item personalized line results random strategy probably delivers worse recommendations 
results generalize set ratings popularity item decays exponentially relative entropy items fairly narrow range 
expect real world ratings data sets properties 
application requirements matter 
commerce recommender start making recommendations data current user 
case suggest recommending popular items highest rated ones item item strategies personalize recommendations quickly possible 
anecdotal evidence dimension user experience users research group preferred techniques allowed rate movies page especially compared techniques required go pages ratings 
reaction strong modified experimental design include technique low ratings density 
exploiting intelligence user may lead improved satisfaction 
methods exploit intelligence user may induce biases ratings distributions 
popularity strategy exacerbate bias described earlier popular movies get chances recommended rated 
time system winner takes recommender recommends generically popular items 
item item strategy create opposite problem 
user see set items rate predicted interest 
time users may clustered small groups little overlap leading user population 
potential long term dangers practice including randomness set items suggested rating 
randomness leads excessive user effort small amount randomness may help extend space recommender understands user interests ensure items occasionally users 
conclude proper strategy eliciting information users depends dimension user experience trying optimize 
general strategies guesses items user able rate reducing user effort producing acceptable recommendations 
believe results hold similar recommender systems 
studied techniques considered ways analysis simulation studies previously collected user data live user trials 
methods complementary 
analysis helped suggest techniques useful 
simulation studies enabled consider large number users quickly explore techniques frustrating live users 
live study helped avoid problems data bias simulations increased confidence applicability results real systems 
believe techniques important successfully developing intelligent user interfaces 
focused minimizing user effort able accurate predictions 
useful perform thorough investigation system needs diverse ratings items balance needs user experience 
direct measurements user satisfaction statistics usage surveying users complement attempts minimize user effort 
members grouplens research group past contributions research 
members movielens system support research efforts anonymous reviewers comments 
supported national science foundation iis iis iis net perceptions 
avery resnick zeckhauser market evaluations 
american economic review 

balabanovic shoham 
fab contentbased collaborative recommendation 
communications acm 

ben myopic policies sequential classification 
ieee transactions computers 

glover birmingham decision theory order documents 
proceedings acm digital libraries 

goldberg roeder gupta perkins eigentaste constant time collaborative filtering algorithm 
information retrieval journal 

schafer konstan borchers sarwar herlocker riedl combining collaborative filtering personal agents better recommendations 
proceedings aaai 

ponte maximum entropy approach probabilistic ir methods 
acm transactions information systems 

ha haddawy case preference elicitation similarity measures preference structures 
proceedings uai 

horvitz heckerman ng normative expert systems part pathfinder project 
methods information medicine 

kantor lee maximum entropy principle informational retrieval 
proceedings acm sigir 

karypis evaluation item top recommendation algorithms 
proceedings cikm 

merialdo improving collaborative filtering new users smart object selection proceedings international conference media features oral presentation 

nguyen haddawy decision theoretic video advisor 
proceedings aaai workshop recommender systems 

pennock horvitz collaborative filtering personality diagnosis hybrid memory modelbased approach 
proceedings uai 

schafer konstan riedl electronic commerce recommender applications 
journal data mining knowledge discovery january 

entropy value information central european journal operations research 


collecting user access patterns building user profiles collaborative filtering 
proceedings iui 
