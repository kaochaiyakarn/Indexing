precise definition omg mda framework 
du jean zivin nantes france olivier hec montr copyright 
cole des de montr tous serv pour tous pays 
reproduction sous forme que ce soit est 
les publi dans la rie des cahiers du que la de 
par issn sum il un de paradigme dans le domaine du de syst mes information 
plus pr cis ment nous de la technologie des objets vers des mod les 
la objet de le paradigme de composition proc par de la composition objets 
cette une peut tre plus vers la transformation de mod les 
comme de cette nouvelle object management group est pass une vision sur les objets object management architecture une vision sur les mod les model driven architecture 
cet article pr une interpr tation de cette 
pour aussi ind pendant que possible du langage utilis pour ce paradigme nous avons le des graphes par john sowa 
nous de voir des probl mes de quelques de solutions 
mots cl mod les meta mod les graphes uml mof mda presently witnessing important paradigm shift occurring area information system construction object component technology model technology 
object technology revolution allowed replacement years old step wise procedural decomposition paradigm fashionable object composition paradigm 
surprisingly evolution triggered today radical change model transformation 
concrete trace object management group rapidly moving previous object management architecture vision newest model driven architecture 
presents investigation interpretation evolution 
order stay language independent possible decided neutral formalism sowa conceptual graphs describe various situations characterize organization 
allow identify potential problems proposed modeling framework suggest possible solutions 
keywords precise definition omg mda framework 
models meta models conceptual graphs uml mof mda precise definition omg mda framework jean zivin universit rue de la re bp nantes cedex france jean sciences univ nantes fr presently witnessing important paradigm shift occurring area information system construction object component technology model technology 
object technology revolution allowed replacement years old step wise procedural decomposition paradigm fashionable object composition paradigm 
surprisingly evolution triggered today radical change model transformation 
concrete trace object management group rapidly moving previous object management architecture vision newest model driven architecture 
presents investigation interpretation evolution 
order stay language independent possible decided neutral formalism sowa conceptual graphs describe various situations characterize organization 
allow identify potential problems proposed modeling framework suggest possible solutions 
purpose understand extent real meaning move object modelbased architectures information system 
starting point study proposed new vision object management group omg called model driven architecture mda 
omg proposed modeling language called uml unified modeling language describing kinds object oriented software artifacts 
applicability scope uml completely stabilized 
order allow similar languages defined omg general framework mof meta object facility 
confusion may exist application conceptual tools may self defined mutually depen olivier hec montr de la te catherine montr qu bec canada olivier hec ca dent shall see 
order understand external neutral formalism describe situation identify problems may arise 
formalism sowa conceptual graphs property simple precise 
focuses peculiarities new frameworks 
section formalism conceptual graphs 
describe section main characteristics omg mda framework succeeding object management architecture 
section introduces framework section discuss number open questions applied model engineering try put forward answers 
summarize original contribution 
presentation conceptual graphs section presents formalism conceptual graphs 
provide minimal order understand rest 
details conceptual graphs various annual iccs conferences subject 
sowa introduced conceptual graphs cgs 
graphical representation system logic existential graphs invented th century pierce 
fact employs employee john may described cgs linear textual description emp employee john considered shorthand graphical representation 
fact employs employee may described emp employee emp employee 
graphical representation conceptual graph 
exists operator called allows translating cgs order predicate logic 
previous statement rendered employee employs binary predicate employs corresponds relation emp previous descriptions 
establishing foundations correspondence cgs order predicate logic may 
conceptual graph composed concepts relations 
concept nodes organized lattice corresponding ordering relation 
concept type corresponds definition graph instance concept conform 
definition concept type employee 
type employee person emp means employee person working 
assume cgs global modeling language describe various recommendations omg uml mof spe software process engineering cwm common warehouse wfl workflow formalism may dimensioned task hand see advantage drawback 
order describe situation standards uml mof define competing modeling languages wise base independent formalism expressive power preferably case cgs 
conceptual graphs uml cwm ocl xmi mof spe wfl omg mda recommendations 
mda observation cgs 
mda systems models meta models important word model driven architecture model need give definition model model simplification system built intended goal mind 
model able answer questions place actual system 
answers model answers system condition questions domain defined general goal system 
order useful model easier handle original system 
achieve details source system abstracted selected target model 
simplification abstraction essence modeling 
modeling common human activities usually precedes action 
needs exactly modeling operation applied times different people meta model 
meta model explicit specification abstraction simplification 
uses specific language expressing abstraction cgs kif mof possible candidate languages task 
order define abstraction meta model identifies list relevant concepts list relevant relationships concepts 
called terminology 
cases may sufficient situations needs completed set logical assertions 
languages kif property able express terminology assertion layers 
cases mof need add specific formalism assertions ocl 
illustrates relationships systems models meta models 
model ask question represents metamodel terminology collection assertions collection system ask question 
relations system model 
meta model defines set concepts relations concepts abstraction filter particular modeling activity 
notion meta model strongly related notion ontology knowledge representation communities 
system extract particular model help specific meta model ontology 
dealing system observe different models system represented different meta model 
obviously models extracted system different meta models systems remain related 
operations models possible mainly transformation operations 
order transform models need regular organization models composite models models composed models including corresponding meta models 
proposing organization need get deeper understanding relation model meta model 
precisely question addressed nature information contained metamodel role played meta model 
meta modeling layers definition uml may observe new wave proposals omg characteristics new period new vision 
center evolution mof unique self defined meta metamodel 
concept mof progressively emerged years different communities cdif framework define meta models 
mof came fact uml meta model software development landscape 
facing danger having variety different non compatible meta models defined independently evolving data warehouse workflow software process urgent need global integration framework meta models software development scene 
answer provide language define meta models meta metamodel 
purpose mof 
consequence layered architecture defined 
layered architecture levels 
meta meta model level contains mof meta model level contains kind metamodel including uml meta model model level model corresponding meta model 
concrete level real situation unique space time represented model 
parallel may drawn domain formal programming languages see right part 
level corresponds meta grammar ebnf notation example 
level corresponds grammar level 
level correspond program level 
level corresponds dynamic execution program 
level correspond modeling world contain model elements real imaginary situation items facts 
execution program level model depicted model source code program describes infinity possible different executions program 
exactly situation holds omg meta modeling layers 
level level level level upm mm particular uml model mof mmm uml mm uml model cwm mm ebnf grammar smalltalk program execution program 
spaces pertaining different levels 
framework comprehension section framework illustrate mda 
utilize conceptual graph formalism introduced section define framework 
presents framework 
mof renamed concepts description clearer avoid vocabulary describe vocabulary 
call node mof class link mof association 
notions mof level apply part located level 
mof specialize relationship represented super relation 
directly mof explicit instantiation relation call meta order clarify situation 
conceptual graph linear form framework may written follows node node meta node node link meta meta meta node node meta node link meta link super 
framework 
node link meta node node link meta meta node link link super meta node link concept node instance 
concept link instance node concepts meta super instances link 
see notation concepts cgs shortcut state element instance element link super states super instance link 
framework shape incomplete 
particular missing element call context corresponds mof package similarity cg context 
contexts model metamodel metametamodel underlying framework represented drawing 
real entities 
node context meta node node node model meta node context node metamodel meta node context node metametamodel meta node context order better understanding framework give complete picture level level 
state model level corresponds particular smalltalk program smalltalk object mary instance sense smalltalk language smalltalk class person 
upper layer level find elements smalltalk meta model concept instance class relation instance class instance 
example allow answering questions organization models meta models see section 
meta meta person meta node meta link meta meta real smalltalk object installed computer address 
concrete object representation mary real person unique time space 
meta meta mary represented 
complete picture 
central issues model engineering omg scene partially described start discussing strong points potential remaining problems 
important literature modeling layers layers need 
may layers 
fundamental difference model meta model 
fundamental difference meta model meta metamodel 
model specialize model 
metamodel specialize meta model 
don intend answer questions highlight part model organization problem 
seen metamodels situated level 
order avoid possible confusion illustrative take classical example uml meta model smalltalk metamodel 
just taken java illustrate presentation 
double instantiation problem hottest discussions double instantiation problem 
possible entity time instance classes 
words question mary answer mary person mary smalltalk instance 
simple look sufficient understand non problem 
situation described follows cg meta model meta uml model node meta context meta meta model meta uml meta meta meta model meta mof 
mof uml represented framework 
linear form node meta node node node meta node node node meta node link node person meta node link meta node node mary meta node node mary node person mary definitions local contextual global 
global definition mary smalltalk instance uses underlying global typing system mof local definition mary person uses context defining smalltalk meta model 
ambiguity 
uml meta model smalltalk meta model mary person context person uml class 
meta person meta meta mary 
difference contextual global definition 
clearly see local instanceof relations 
confused unique global type instance relation named meta corresponds mof typing hierarchy 
fragment smalltalk model program level 
model constrained smalltalk meta model level 
situation obviously simplified 
order pursue illustration noticed smalltalk language allows dealing explicitly meta classes 
added element node meta node node node person node person class notice new statement meta model requires notion meta class defined smalltalk meta model 
statement shows relation class meta class identical relation instance class 
paramount importance fact relation cross hypothetical boundary layer 
case see result arbitrary number levels relation smalltalk class person smalltalk meta class person class cross boundary meta modeling layers 
explicit specification illustration limited 
included smalltalk class named person inherit smalltalk sense 
node person node node node class point relation represents inheritance relation smalltalk language 
plenty relations various environments different similar different 
java environment call relation show apply differently notion java class 
plenty similar different local inheritance specialization generalization extension relationships 
confused 
confused global specialization relation similar mof specialize relation defined level named super 
making relations different improves precision various models 
necessary policy want avoid confusion discussion 
seen lot gained precise explicit definition meta model 
example fact smalltalk class super class metaclass meta class super class written cgs 
assertion added smalltalk meta model ocl 
relationships model metamodel models meta models different kinds contexts 
delimit local spaces global knowledge context 
basic property spaces overlapping allowed 
embedding possible context may contain element including context 
illustrates relationships model meta model consider model containing entities exists meta model defining semantics relationship model meta model meta model meta meta model called sem relationship 
meta meta dest sem meta 
basic relations space meta space meaning sem relationship 
entities model find definition meta model relationships meta sem mutually related 
entity model meta relationship entity meta model relationship 
situation illustrated may stated assertions cgs 
node meta node model node meta node metamodel node sem node node node dest node link meta node node meta node node meta node node node meta relation may considered global basic 
sem relation derived meta relation 
sem relation allows know level space stands 
level model level meta model level meta meta model 
relationships meta sem different 
approach known loose metamodeling consider relations identical 
loose approach brings lot problems replaced strict meta modeling approach 
clear reasons avoid stating model instance meta model elements instances meta model elements 
clear assertion wrong model meta metamodel previously stated model meta node model relationship meta unique sense node may meta node global context seen section layer 
global modeling context composed kind local spaces model meta model meta metamodel 
meta modeling layers ways look problem 
introduced long tradition layered architecture information systems case tools engineering cdif 
multiple independent efforts converged similar architectures 
possible establish analogy domains mentioned formal grammars programming languages 
decomposition natural layer universal entire information systems software engineering field 
feature potentially useful meta models put level 
absolute way distinguish model meta model 
problem point view corresponding precise task performed 
taken additional argument stick clear separation layers 
addition arguments possible establish formal characterization notion metamodeling layer 
basis sem relation 
contexts related form hierarchy 
top self defined universe sem universe context universe mof mda organization 
deduce contexts lie level lie level distance mof measured sem relation 
situation bit complex described need take account variants meta models discussed 
possible establish formal characterization sem relation terms meta relation context layers 
study demonstration layers conjecture 
transformation 
question model transformation lies center mda approach 
discussion profiles may convey idea remains informal 
designer programmer example profiles uml corba uml dialects uml prepare transformation uml design model idl code help limited facilities provided uml case tool vendors 
source meta model sem source model mof sem sem transformation rules target meta model sem target model 
meta model model transformation 
matter fact possibilities lie general approaches studied places 
typical proposal example 
may consider meta models 
source uml example target java ore realistically ejb metamodel 
transformation uml model ejb code may specified set rules defined terms corresponding meta models 
expression rules may facilitated basic generic framework mof 
suggestions building may cwm meta model 
transformation engine may built technology xslt tools 
course immediate question arises studying diagram status transformation rules context 
status meta model 
basic facilities transformation primitives provided mof 
typical questions remain open definition mda framework 
environments omg meta model technologies ready prime time 
move procedural technology object technology triggered radical change way considering information systems conducting software engineering operations 
possible evolution paths called model engineering 
consists giving class status models model elements similarly class status objects classes object technology era 
important areas interest models software components models software processes 
move implicit explicit characteristic model engineering 
essential change models mere documentation programmers directly drive tools 
central new mda organization proposed omg 
consequence possible separate clearly various business models various technical models platform 
correspondence meta models formal grammars pursued done 
clearly see lot similarities 
notions terminal non terminal exist formal grammar java language uml meta model 
shown notion modeling layer quite different notion abstraction layer 
evidence precise kind relation adjacent layers 
proposed strict interpretation layers exactly modeling layers 
interpretation fact called fourth layer model system situation modeled 
consequence relation element system level element level may name certainly instanceof 
interpretation layered meta modeling architecture correspond conventional view contradict 
advantages allow closing debate variable number meta modeling layers 
clearly shown new layer created relation instanceof 
contribution clear distinction unique global typing relation called meta defined level lot contextual relations called instanceof usually defined inside various meta models 
confusion typing relations created doubts organization meta modeling layers 
problems remain solved may mention precise definition meta model profile model profile meta meta model profile 
issues benefited discussions common richard breton 
mikael provided insight implementation meta model driven model transformation 
valuable suggestions improving mariano guy miller thomas 
conceptual graphs order logic 
computer journal 
atkinson 
supporting applying uml conceptual framework 
zivin muller editors proceedings uml notation france 
springer verlag 
lncs 
atkinson hne 
essence multilevel metamodeling 
proceedings uml conference modeling languages concepts tools toronto ontario canada october 

standalone metamodel expressing model relationships 

available universalis tm fr publications pdf 
chein mugnier 
conceptual graphs fundamental notions 
revue intelligence artificielle 
cdif technical committee 
cdif case data interchange format framework modeling extensibility 
electronics industry associate 
interim standard eia 
davis indulska mcbride raymond 
meta meta better better 
october 

omg mda architecture modeling 
omg document available www omg org mda presentations htm 
ernst 
cdif 
available www metamodel com 
genesereth 
knowledge interchange format draft proposed american national standard 
available logic stanford edu kif kif html 
andb 
modeling metamodeling requirements knowledge management 
zivin ernst editors proceedings oopsla workshop model engineering cdif vancouver canada october 
object management group 
meta object facility mof specification 
omg document ad 
object management group 
unified modeling language specification 
omg document ad 
object management group 
model driven architecture 
omg document available www omg org 
guarino welty 
methodology ontology model engineering 
international workshop model engineering conjunction ecoop nice sophia antipolis france june 
available www metamodel com program html 
roberts van 
studies logic charles sanders peirce 
indiana university press 
ansi 
conceptual schema modeling language analysis 
technical report 

transformation rules metamodeling 
proceedings edoc pages la jolla ca november 

techniques de mod de 
phd thesis universit de nantes 
sowa 
conceptual structure information processing mind machine 
addison wesley 
sowa 
knowledge representation logical philosophical computational foundations 

