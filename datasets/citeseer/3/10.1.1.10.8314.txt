test bed misbehavior detection mobile ad hoc networks watchdogs really 
epfl ic technical report ic sonja buchegger dric res jean yves le boudec epfl ic lca ch lausanne switzerland firstname lastname epfl ch misbehavior detection reputation systems proposed mobile ad hoc networks relying direct network observation mechanisms called watchdogs 
approaches far evaluated simulations restricted selfish packet dropping interested capabilities watchdog detection component real network 
test bed implementation misbehavior detection 
evaluation feasibility detectability attacks routing forwarding dynamic source routing dsr protocol design test bed 
order add detection capabilities extend concept passive acknowledgment mechanisms partial dropping packet modification fabrication detection 
combine dsr ape enable detection 
implement attackers detection show feasibility limitations 
interested attacks routing forwarding mobile ad hoc networks 
specifically want determine attacks mounted detected observation real network environment 
reputation systems deal misbehavior mobile ad hoc networks proposed relying component detect misbehavior neighborhood node 
best knowledge far evaluation detection restricted simulations misbehavior type forwarding packets destined self 
detection simple attack concerns raised unambiguously feasible classify 
approach build test bed test attacks detected study practicality feasibility reputation misbehavior detection systems 
main contributions summarized follows 
provide systematic list attacks dsr evaluate effort gain mounting detected 
extend notion passive acknowledgment enable detection attacks 
built test bed enables researchers assess feasibility detectability attacks 
implemented tested attacks showed detection 
compared performance dsr enhanced extended passive acknowledgment detection mechanism regular dsr 
performs explicit acknowledgment mitigates problem duplicates due lost acknowledgments 
remainder organized follows 
section give brief background information dynamic source routing dsr pas sive acknowledgment investigate attacks dsr detect means enhanced passive acknowledgment 
discuss related section 
section discuss feasibility detectability attacks dsr 
describe design architecture test bed section followed detection mechanism enhanced passive acknowledgment section description attacks implemented section 
discuss test bed section section concludes 
background dynamic source routing dynamic source routing protocol developed routing mobile ad hoc networks proposed manet broch johnson maltz 
nutshell works follows nodes send route request message nodes receive message forward neighbors put source route received request 
receiving node destination route destination forward request sends reply message containing full source route 
may send reply source router reverse order issue route request including route get back source possible due asymmetric links 
route reply messages triggered route request messages gratuitous 
receiving routes source picks best default shortest stores sends messages path 
general better route metrics number hops delay bandwidth criteria sooner reply arrived source indication short path nodes required wait time corresponding length route advertise sending order avoid storm replies higher preference route longer stay cache 
case link failure node forward packet node sends error message source 
routes contain failed link alternate partial route contain bad link 
passive acknowledgment pack packet forwarding node responsible confirming packet received hop 
ways get acknowledgment specified dsr draft link layer acknowledgment supplied mac layer 
passive acknowledgment confirmation comes indirectly overhearing node forward packet 
network layer acknowledgment nodes explicitly request dsr acknowledgment hop 
pack route maintenance originating forwarding packet hop hop 
pack hop retransmit packet destined 
pack needs conditions applied nodes network interfaces promiscuous mode network links operate bidirectionally 
pack works follows 
node receives packet forwarded node hop node sends packet requesting acknowledgment ack 
doesn overhear retransmission node timeout node retransmits packet ack request 
certain number trials network layer ack request pack remaining attempts packet 
node receives new packet considers pack checks succeed source address destination address protocol identification fragment offset fields ip header packets match 
packet contains dsr source route header packets contain value segments left field indicates number hops remaining destination dsr source route header new packet packet 
related detection section describe approaches build detection misbehavior mobile ad hoc networks benefit test bed evaluate effectiveness attacks detection 
watchdog path rater components mitigate routing misbehavior proposed marti giuli lai baker 
observed increased throughput mobile ad hoc networks complementing dsr watchdog detection denied packet forwarding path rater trust management routing policy rating path enable nodes avoid malicious nodes routes reaction 
intrusion detection wireless ad hoc networks proposed zhang lee complement intrusion prevention techniques 
authors argue architecture intrusion detection distributed cooperative statistical anomaly detection approaches integrating intrusion detection information networking layers 
majority voting mechanism classify behavior consensus 
responses include isolation compromised nodes 
confidant proposed buchegger le boudec detects misbehaving nodes means observation reports types attacks allows nodes route misbehaved nodes isolate network 
nodes monitor observations reputation records hand trusted second hand observations trust records control trust received warnings path manager nodes adapt behavior reputation 
core collaborative reputation mechanism proposed michiardi molva watchdog component complemented reputation mechanism differentiates subjective reputation observations indirect reputation positive reports functional reputation behavior weighted combined reputation value decisions cooperation gradual isolation node 
context aware inference mechanism proposed paul accusations related context unique route discovery process stipulated time period 
combination consists un keyed hash verification routing messages detection misbehavior comparing cached routing packet overheard packets 
ocean bansal baker relies exclusively hand observations ratings 
rating faulty threshold node added faulty list 
faulty list appended route request node broadcasting avoid list 
route rated bad depending hop faulty list 
addition rating nodes keep track forwarding balance neighbors maintaining chip count node 
cross feature analysis proposed huang fan lee yu detect routing anomalies mobile ad hoc networks 
explore correlations features transform anomaly detection problem set classification sub problems 
classifiers combined provide anomaly detector 
sensor facility required node provide statistics information 
test beds dsr implementations evaluated existing test bed environments implementations dsr view provide enable detection misbehavior 
criteria real network support promiscuous mode support dsr support passive acknowledgment preferably logging scripting facilities current shelf hardware available network cards 
specifically considered ape monarch dsr implementation click dsr implementation piconet dsr implementation 
comparison alternatives ape testbed combined piconet implementation dsr fulfilled largest range requirements 
integrated added capabilities described section 
attacks dsr give examples attacks dsr classify dropping modification fabrication timing attacks 
state potential detectability 
dropping attacks drop packets destined perform partial dropping 
partial dropping restricted specific types data packets route control packets contain packets destined specific nodes 
attacker decide drop packets listed 
previous hop detect dropping passive acknowledgment 
avoid sending route error having detected error prevent nodes looking alternative routes 
source data packet know route disrupted initiate route discovery find route 
fake data packets initiator confirm validity route receives reply fake packet destination interpret data 
previous hops passive acknowledgment looks dropping packets detected misbehavior 
modification attacks sending forged routing packets attacker create called black hole node packets discarded packets lost 
attacker black hole just drops packets detected neighbors passive acknowledgment 
black hole virtual node outside network hard detect 
attacker cause route nodes area point black hole area destination outside network 
done sending forged route reply messages example 
attack unreachable node black hole easily detectable node route reach destination send route error back 
attacker drops route error detected 
source node initiate route discovery process attacker go undetected 
attempt routes go oneself appear longer adding virtual nodes route 
shorter route chosen avoiding node 
attacker receives route request replies route reply route route cache adds virtual nodes route longer 
modify add virtual nodes forward route request 
route reply comes back removes virtual nodes forwards packet 
enhanced passive acknowledgment detect tampering adding nodes detected 
way attacker remove avoided detected passive acknowledgment 
change hop external flag route reply route interesting initiator route discovery 
modification detected enhanced passive acknowledgment 
salvage routes broken redirect data packet consume bandwidth energy deviate traffic malicious purposes 
attacker receives data packet changes route packet sends route error source indicate change route 
source delete original route cache new route time 
potentially detected hop overhears route error containing 
create routing loop attacker send forged routing packets cause packets traversing nodes cycle reaching destination consuming bandwidth power 
detected nodes check loops source route forwarding route request 
attacker manages different addresses node detectable inspecting header 
modify nodes list header route re quest route reply packets add incorrect routes route cache nodes 
attacker add remove change node header packet disturbing route discovery causing nodes packets 
attack detected previous node means enhanced passive acknowledgment 
decrease hop count ttl receiving packet packet received destination 
attack detected previous node route enhanced passive acknowledgment 
fabrication attacks attacker forge route error packets causing nodes incorrectly remove working routes route cache 
worst case attack prevent node able route packets 
time node receives route error remove route route cache broadcast information neighbors 
difficulty attacker emit route error route exists route cache victim 
attacker take part route send route error suspicion 
attack difficult detect nodes mentioned route error possible distinguish normal gratuitous route error forged route error 
send spoofed route requests subsequent sequence query id route requests spoofed node discarded nodes saw 
route reply come back destinations exist 
victim initiate new route request nodes discard seen originating associated id detection limited spoofed node receives route request supposedly originated nodes appearing route received request 
forge route reply packets causing nodes packets add incorrect routes route cache 
nodes overhear update route cache 
packets consume energy bandwidth 
hard detect 
initiate frequent route request consume bandwidth energy cause congestion 
attacker initiate route request destination destination packet 
route request broadcast costs lot bandwidth energy 
case event seen normal event 
second case uncertainty behavior node 
timing attacks send route replies time proportional length route 
give priority long routes attracting routes attacker priority short routes avoiding attacker 
easy mount 
observed nodes wait routes arrive checking length adding route cache 
test bed design overview test bed consists components 
possible components publicly available serve part purposes 
proceeded integrate components means utilities modified provide functionalities need glue parts 
resulting architecture seen 
describe integration main components detail subsequent sections just list briefly 
linux kernel module implementation dsr called piconet routing 
modified adding mechanisms provide regular passive acknowledgment enhanced pack detection attacks 
ape testbed scripting mobility integrate distribution booted cd 
capturing packets promiscuous mode 
patched handle packets received new hook 
pcmcia card drivers pcmcia cs linux patched enable promiscuous mode 
setup experiments consists pentium ii laptops mhz linux kernel ape enables promiscuous mode sends receives packets ape testbed shell script piconet dsr module init cleanup hooks promiscuous support orinoco driver modified scenarios files logging facilities logging wireless network interface orinoco classic proc filesystem test bed architecture user space kernel space hardware redhat pentium iv laptop ghz linux kernel debian woody 
laptops orinoco classic gold cards mb driver pcmcia cs orinoco driver included 
adding pack piconet problem solve put network interface promiscuous mode 
hack orinoco cs driver provided ape test bed source files 
modified driver put orinoco classic card promiscuous mode help command 
try implementation monitor mode orinoco card fails problems send packets interface monitor mode captured packets activate thenf ip promiscuous hook modified 
details monitor mode see 
interface promiscuous mode keeps packets overhear network 
drops promiscuous packets caught hook impossible process packets framework 
keeping global architecture easiest solution patched able handle promiscuous traffic 
patch adds nf ip promiscuous hook catches packets received 
improvement hand feasible implement pack piconet 
handler called nf ip promiscuous catches packet 
check ensures originator belongs subnet proc pack check called 
function parses packet order find source route option case retrieves value left field 
looks packet fulfills tests packet passive acknowledgment described previous section source address destination address correspond 
finds packet removed pack queue 
packet received dropped destined node 
packet forwarded originated check know hop destination 
case explicit network layer acknowledgment function ack add 
add previous care change size packet building ack request option header 
pack add node sends normal packet dsr send fragmented packet dsr fragment send route reply send rt reply route error send rt error forwarding packet includes source route option proc sr rt opt 
function pack add retrieves left field header exists value easily parsing queue looking pack 
builds clone packet kept sets timer expires passive ack timeout ms occurs pack timeout called 
function checks maximum number retransmissions reached 
resends packet 
adds ack request option order network layer acks pack 
packet expanded copy expand fill ack request option add packet ack queue 
packet processed described initial implementation piconet 
older packet waiting queue packed removed 
route route architecture provides set hooks various points ipv protocol stack shown 
packets enter left side diagram 
pass sanity checks truncated ip checksum correct passed nf ip pre routing hook 
enter routing code decides packet destined interface local process 
packet destined machine framework called nf ip local hook passed process 
destined pass interface framework called thenf ip forward hook 
packet passes final hook nf ip post routing hook put network 
thenf ip local hook called packets created locally 
see hook activated 
kernel modules register listen hooks thenf register hook function 
module define priority function hook function listening hook called order priorities 
function called interact packet manipulate 
module tell things 
nf accept continue traversal normal 

nf drop drop packet 

nf stolen taken packet don continue traversal 

nf queue queue packet 

nf repeat call hook 
nf accept need packet continue way module loaded example node sends packet addressed node subnet wired lan 
nf accept packet follow standard kernel routing rules 
node receives packet destined processes removes dsr header uses nf accept packet follow way upper layers 
nf drop quite 
example node receives bad packet simply discard returning nf drop gets packet processes releases nf drop packet destined 
nf stolen time kernel sends packet node intercept local hook modifies routing needed 
stolen tell kernel send packet kernel 
nf queue nf repeat implementation 
initial piconet implementation sending packet piconet uses framework intercept packets manipulate implement dsr protocol 
referring back piconet uses pre route hooks 
additionally post route hook dsr ip gateway 
subsections explain internals piconet journey packet implementation 
send packet packet intercepted local hook module 
function local handler called 
preliminary tests check packet destined subnet multicast example 
function tries build route entry add packet 
route table parsed lookup route 
route send route request send rt req 
function interacts route request cache set timer 
finish send rt req called 
functions output packets function allocates memory place build packet 
matches ip header struct fills ip fields 
adds dsr header struct fills common dsr header 
time add dsr options packet 
case add dsr rt req opt send normal data packet add dsr src rt opt ack req opt want acknowledgments 
important point sure allocate right amount memory packet 
packet built different possibilities 
receive route reply moment add called add packet queue set timer request timeout expires 
route send packet dsr send called 
function adds dsr header builds packet way route request 
implementation explicit network layer ack easiest solution 
add ack request option packet built send 
add packet ack queue keeps clone packets waiting acknowledged add 
function builds clone packet sets timer adds clone list 
timer expires ack timeout called 
function manages number timeouts retries 
receiving packet packet enters stack route hook calls pre route handler 
checks packet implements dsr protocol 
parses header order find options 
time option pad route req route reply route error ack req ack src route corresponding function called 
proc rt req opt called route request option 
function adds reverse route originator route cache determines destination route request 
sends route reply send rt reply 
checks route avoid loops time process route request 
case route request rebroadcast rt req 
proc rt reply opt called route reply option 
function adds route contained packet forward route cache 
proc rt error opt called route error option 
removes route route cache route 
proc ack req opt called ack request option 
sends ack reply 
proc ack reply opt called ack reply option 
function adds neighbor address forward route speed route discovery 
finds remove packets ack queue 
proc src rt opt called source route option 
begins checks determine destination packet gateway 
case processing done 
decreases left field adds route source destination forward reverse route table 
forward address determined time route packet correctly 
bypasses kernel routing route input kernel send directly destination address ip header node subnet 
options processed function pre route handler removes dsr header packet packet destined passes upper layer local 
ape test bed ape test bed provides facilities lead real world multi hop wireless tests deployment tests facilitated possibility cd rom package linux windows machine 
scripted scenarios enable people physically carry experiments prior instruction 
instructions displayed laptops tests easily reproducible 
possibility add routing protocols scripts initialize cleanup sessions 
centralization logs done master slaves architecture 
simplifies post analysis logs synchronization 
visualization node placements movements done java interface 
tool uses radio signal strength build map nodes 
analysis tools provided retrieve basics metrics virtual movement data loss rate path optimality 
mobility emulated function blocks mac addresses 
extensible linux environment 
details 
able build personalized ape distribution quite easily add functionalities require 
need combine sources ape new kernel case sources pcmcia cs case 
apply patch kernel able module disable communication nodes mac layer 
way emulate loss connection having move nodes 
apply patch package adds called promiscuous mode orinoco driver prerequisite pack function 
routing protocol implemented kernel module order integrated ape test bed piconet dsr module 
define script initiate cleanup module 
architecture ape extensible modular 
add new scenarios modify configuration file match requirements 
compiling package kernel pcmcia cs modifications included cd rom zip package 
zip package installation simple 
just need extract root directory script file run modify 
details 
installing ape booting distribution start experiments command start test 
opens menu choose scenario node representing machine protocol want 
experiments completed data gathering done script 
enhanced passive acknowledgment watchdog capabilities addition normal pack benefit promiscuous mode add tests detect attacks 
packets sent logged queue waiting acknowledged pack straightforward check additional fields detect misbehavior flow packets 
bi directionality link layer ieee node able find node forwards packet nodes range 
possible node receives packet promiscuous mode node forwards 
overhear packet forwarded means hop forward forward overheard hop node moved range just receiving packet forwarded 
pack retransmission mechanism node waiting pack resends packet 
get acknowledged emits route error claiming node unreachable 
node overhears forwarded packet additionally check modified modifications result normal behavior 
dsr draft gives fields check order consider packet receive pack 
checking fields ip header identify packet uniquely sure overheard retransmission packet forward 
dsr draft requires packets source route option segments left value overheard packet logged packet 
check assures overheard packet logged 
practice linux versions set ip identity field zero security reasons 
means passive acknowledgment want identify packets uniquely pieces information 
propose solutions problem 
generate random identity number case set zero 
second data contained packet uniquely identify modifying ip identity 
need identify packet uniquely need retransmission packets eligible 
purpose detection partial dropping suffices know packet dropped belonged particular path regardless packet exactly sequence 
order implement added watchdog capabilities detect attacks events enhanced passive acknowledgment added piconet packet completely checked changes identify passive acknowledgment 
attacker changes ip fields identify pack regular pack able detection capabilities 
check fields log changes ip header ttl value decremented 
route reply option fields 
route error option fields 
source route option salvage value unchanged fields left check value decreases 
salvage flag changed check type hop external hop external left decreased 
forged route error node detect unreachable address route error option 
new functionality detects changes 
detects attacks implemented modifications header described section 
attacks implemented test bed choice testing pack implementation added piconet focused attention attacks detected adding watchdog capabilities implementation 
kept types attacks header modification partial dropping sending forged route error messages 
header modification selfish attacks modify pack piconet order implement selfish attacks help attacker saving power 
keep different modifications 

hop external change flag route reply option route interesting initiator route discovery 
receives route prefer ones flag set zero 
done just changing value proc rt reply opt function destination packet 
hop external hop external fields source route option 

removing route reply option node removes address route reply option take part route save power 
implement add code proc rt reply opt function looks address node removes appends addresses 
changes blank line route reply option option 

route error modification node finds route error option header modifies self ish way 
changes error source address address hop address unreachable node hops remove route cache 
add attack inproc rt err opt modify packet includes mandatory source route option 
investigate modifications real environment 
hop external piconet deal flag determining best route attack effect routing 

removing oneself route reply option attack works simple test environment 
time source receives modified route reply data packet sends reach destination false route 
route destination exists route changed avoid attacker 

route error modification 
modification works receiver delete route avoiding attacker 
malicious attacks add attacks mounted altering header 
attacks help attacker saving power disrupting routes 
test 
source route option altering node changes address source route option hops add incorrect route route cache 
attack implemented proc src rt opt function 

error destination address altering node changes error destination address route error option discard route errors 
destination route error receive packet processed route deleted 
modifications real environment 
source route option altering attacks works simple test environment 
answer destination modified packet arrives 
node initiate new route discovery process route destination 
partial dropping attack consists dropping arbitrary packet constant rate 
attacker drop packet resent 
implement attack add new drop keeps log packet drop 
packet caught thenf ip pre routing hook check packet dropped check drop function 
case drop 
packet enters drop packet function checks packet dropped 
case add packet drop queue identify resent 
attack works tests 
rate drop packets 
previous hop detects drop pack timeout expires 
resends packet dropped attacker emits route error explicit ack timeout 
link layer acknowledgments reliable way detect packet lost hop went range dropped intentionally 
heuristic subsequently packet originating hop overheard node range 
fabrication forged route errors attacker forge route error packets causing nodes incorrectly remove optimal routes route cache 
worst case attack prevent node able route packets 
test implementation just emit forged route error identification value ip header multiple packet includes source route option 
attack works environment 
source packet removes route route cache starts new route discovery process 
tack detected hop overhears forged route error corresponds packet just received 
attacker forward packet detected previous hop passive acknowledgment 
test bed discussion contrary concerns raised watchdog correctly detect packet dropping attacks implemented detected successfully enhanced passive acknowledgment 
concerns instance partial dropping attack lead false case ambiguous receiver collisions 
experiments high traffic load experienced single collision 
potential objection effectiveness watchdog detection dropping nodes power ranges just large reach previous hop intended hop away 
difficult achieve power range adaptation current shelf cards precise additionally nodes constantly find distance neighbors potentially mobile 
rely acknowledgments passive explicit send error messages currently link layer notification case link breaks node moving range distinguished node drops packets forwarding 
taken account fixing thresholds misbehavior detection 
implemented attacks detection worked experiments little sense show graphs 
illustrative performance network enhanced passive acknowledgment place compare regular implementation explicit acknowledgment see impact throughput loss delay 
enhanced passive acknowledgment takes computation due effort overhearing comparing added checks modification 
positive side passive acknowledgment need send extra packets acknowledgment reduces traffic 
exemplified showing small packet size large packet size network performance regular explicit acknowledgment better 
high traffic load computational overhead detrimental influence passive acknowledgment mitigates problem duplicates arise due retransmissions packets successfully arrived acknowledgments lost 
loss original piconet piconet pack original piconet resend loss percentage size packets bytes count preload count preload count preload count preload set parameters percentage lost packets number pings count packet size loss original piconet piconet pack original piconet resend loss percentage size packets bytes count preload count preload count preload count preload set parameters percentage lost packets number pings count packet size experiment shown laptops topology aligned row enforce multi hop forwarding 
varied packet size number pings preload packets sent burst 
figures show average runs standard deviation small cases bars absent loss occurred 
compared original piconet implementation uses explicit acknowledgments retransmission versions modified explicit acknowledgments retransmission passive acknowledgment 
note loss rates depend idiosyncrasies machines drivers claim generality results 
vain observed round trip time pings total time taken batches pings reduced passive acknowledgment currently investigating reasons role time takes send explicit acknowledgments premature rerouting attempts case retransmissions 
experiments set timer passive acknowledgment ms timer set sending packet expires packet overheard sent hop node 
experiments actual time overhear ms case high traffic load 
deem expiry time ms sufficient reduced necessary 
implemented attacks detection 
order render misbehaved nodes harmless detection followed response effective isolation 
test bed extended mechanisms disseminate detection information gained enhanced passive acknowledgment 
information serve input reputation system serve basis decision making suitable response 
response added test bed evaluate effectiveness real environment 
intend test bed implement reputation system mechanism envision community evaluate different protocols 
process making code detailed methodology public test bed investigate potential attacks countermeasures 
quest real network evaluation modified integrated components form testbed suitable investigation feasibility misbehavior attacks detection mobile ad hoc networks 
built test bed implemented attacks demonstrated effectiveness 
enhanced passive acknowledgment mechanism nodes overhear transmission neighboring nodes verify reception packets allow detection range attacks 
built extended passive acknowledgment detection test bed evaluated capabilities 
watchdogs detection components mobile adhoc networks called implemented extended passive acknowledgment mechanism detect number attacks mobile networks packet dropping types packet modification fabrication 
capabilities watchdogs limited case packet fabrication 
propose test bed community evaluate attacks detection reputation response mechanisms 
homepage 
com august 
ad hoc protocol evaluation testbed 
sourceforge net november 
build install run ape testbed 
sourceforge net ape testbed ps november 
bansal mary baker 
cooperation enforcement ad hoc networks 
technical report 
sonja buchegger jean yves le boudec 
performance analysis confidant protocol cooperation nodes fairness dynamic ad hoc networks 
proceedings ieee acm symposium mobile ad hoc networking computing mobihoc lausanne ch june 
ieee 
hu johnson maltz 
dynamic source routing protocol mobile ad hoc networks dsr 
www ietf org internet drafts manet dsr txt april 
huang fan lee yu 
cross feature analysis detecting ad hoc routing anomalies 
proceedings rd international conference distributed computing systems icdcs providence ri pages may 
eddie kohler robert morris chen john jannotti frans kaashoek 
click modular router 
acm transactions computer systems august 
david maltz josh broch david johnson 
experiences designing building multihop wireless ad hoc network testbed 
technical report cmu cs cmu school computer science march 
sergio marti giuli kevin lai mary baker 
mitigating routing misbehavior mobile ad hoc networks 
proceedings mobicom pages 
pietro michiardi molva 
core collaborative reputation mechanism enforce node cooperation mobile ad hoc networks 
sixth ifip conference security communications multimedia cms slovenia 
linux lucent wireless cards 
www org wireless lucent june 
nordstrom 
ape large scale ad hoc network testbed reproducible performance tests 
www csd uu se courses docs reports nordstrom pdf june 
krishna paul dirk 
context aware inferencing rate selfish node dsr adhoc networks 
proceedings ieee globecom conference taiwan 
ieee 
boulder pervasive communications laboratory university colorado 
click dsr router project 
colorado edu 
russel 
linux howto 
www org documentation howto howto html july 
song 
piconet ii wireless ad hoc network mobile devices 
piconet sourceforge net 

www fokus gmd de research cc employees sebastian private patch november 
zhang wenke lee 
intrusion detection wireless ad hoc networks 
proceedings mobicom pages 
zhang wei li 
integrated environment testing mobile ad hoc networks 
proceedings ieee acm symposium mobile ad hoc networking computing mobihoc lausanne ch june 
ieee 
