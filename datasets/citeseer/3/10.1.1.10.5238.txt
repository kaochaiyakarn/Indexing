semiotic morphisms representations blending interface design joseph goguen department computer science engineering university california san diego usa ucsd edu issues representation arise natural language processing user interface design art communication medium 
addresses issues algebraic semiotics draws algebraic speci cation give things algebraic theory representation generalization blending sense cognitive linguistics 
new ideas include distinguishing structural conceptual blending relations blending hidden algebra dynamic signs 
examples developed detail including formalization language 
notions design representation meaning formal computer science impoverished compared necessary applications web design natural language understanding 
notions precise amenable implementation applications 
describes algebraic semiotics formal theory complex signs addressing interface issues general sense interface includes user interface design natural language art 
algebraic semiotics broader computer science precise implementable concepts algebraic semantics cognitive linguistics brie reviewed section 
give formal speci cations representations blends code run 
advantage formalization forcing explicit subtle issues exposed usually get glossed 
hand algebraic semiotics formalizations grounded social reality contrary classical semiotics 
dates windows scrollbars discussed detail illustrate approach 
kai lin maintaining fox valuable comments 
students classes cse feedback 
algebraic semiotics section brie reviews key concepts algebraic semiotics application interface design assuming familiarity relevant mathematics 
algebraic semiotics incorporates major insights founders semiotics charles saunders peirce ferdinand saussure 
peirce emphasized things relation token object just function denotational semantics relation depends situation token interpreted saussure emphasized things signs come systems 
peirce saussure considered representations sign systems dynamic signs values user communities pragmatic aspects design 
mathematically semiotic system semiotic theory sign system terms interchangeably consists signature declares sorts subsorts operations material supported national science foundation 
xed data sorts axioms addition level ordering sorts having maximum top element priority ordering constructors level 
sorts classify parts signs constructors build new signs parts data sorts classify values attributes signs color size 
levels express part hierarchy complex signs priorities express relative importance constructors arguments social issues play important role determining orderings 
basic duality theories models semiotic theory determines class models satisfy call semiotic space class models unique equivalence restrictive theory models include duality galois connection may term semiotic space semiotic theory potentially confusing justi ed duality 
main reason prefer theories models basis theories de ne spaces signs axioms constraining allowable signs allowable representations ease treating levels priorities 
example formalizing space books want allow right structure model formalizing representation produces indices books may want impose axioms target space indices requiring indexed items phrases words page total indexed phrases book page total 
informal examples semiotic systems dates times bibliographies xed format tables contents books xed formats newspapers new york times arts section xed website cnn homepage particular instance gradually evolving format 
note large space possible instances xed structure 
sections explain examples detail 
section discusses dates traditional initial model semantics see obj second example windows scrollbars discussed section uses hidden algebra model dynamic aspect signs displayed window change concert scrollbar shows 
place exposition hidden algebra see note elements hidden sort model hidden theory states changed operations signature 
mappings structures increasingly important twentieth century mathematics applications examples include linear transformations representations matrices continuous maps spaces di erentiable analytic functions group homomorphisms 
mappings sign systems appearing semiotics uniform representations signs source space signs target space 
formalize sign systems algebraic theories additional structure formalize semiotic morphisms theory morphisms partial general sorts constructors preserved real world examples 
example semiotic morphism produces outline book omits sorts constructors paragraphs sentences preserving chapters sections addition formal structure algebraic theories semiotic morphisms partially preserve priorities levels source space 
extent morphism preserves various features semiotic theories determines quality show examples 
note take direction semiotic morphism direction models instances mapped 
semiotic system books tables contents books models mapped tables contents models map models determined dual theory inclusion re ects fact structure tables contents substructure books 
duality consistent fact blending diagrams drawn upside algebraic semiotics compared cognitive linguistics 
hand uses algebraic signatures subsorts data sorts axioms equations sort constraints logical systems certainly 
see relatively easy exposition algebraic signatures equations sort constraints explained section 
theory institutions note duality involve levels priorities initial model semantics section models map direction theory morphism note word space con icts cognitive linguistics conceptual spaces single models classes models 
conceptual spaces constants called elements relations multi argument constructors sorts levels priorities axioms 
reason distinguish conceptual blending alias conceptual integration structural blending may call structural integration blending conceptual spaces blending semiotic systems theories general involving non trivial constructors 
example integration window scrollbar structural conceptual conceptual aspects studied section 
algebraic semiotics goes conceptual spaces provide entities states 
features necessary applications user interface design applications conceptual spaces studying meaning natural language adequate user interface design applications structure important web design music 
example conceptual spaces conceptual blending help understand concepts music semiotic spaces structural blending needed adequate treatment structure music melody combined sequence chords 
conceptual spaces talking concepts talk things awkward talking structure things 
note greater cultural variation conceptual blending structural blending deals concepts deals structure instances representations 
modes consider representations analytic synthetic conceptual 
analytic mode sign representation target space seek reconstruct source space representation 
synthetic mode source space seek construct representation signs space technology command line standard gui widgets color graphics target space 
conceptual mode seek analyze metaphorical structure representation style cognitive linguistics example windows xp desktop scrollbar scroll 
treatment mode involve conceptual spaces sense cognitive linguistics see section 
mode particularities cultures involved may signi cant shall see 
perspectives take study signs representations pragmatic theoretical 
rst perspective designer job get done constraints include cost time stylistic guidelines may call engineering perspective generally involve negotiating trade various values constraints 
second perspective scientist seeks understand principles design engaged process constructing testing theories 
second perspective sense describe semiotic spaces involved detailed formal way test hypotheses calculations experiments users 
pragmatic perspective sense formalize adds value design process especially tricky cases formalize minimum extent get job done 
experience shows get considerable bene applying principles algebraic semiotics identifying preserving key features source space doing great deal formalization 
hand designing safety critical systems developing deeper scienti understanding design wish construct formal mathematical model executable debugged example version model spaces consist initial models map free functor adjoint opposite direction forgetful functor induced theory morphism goes direction theory morphism opposite direction 
see concepts 
example cognitive linguists claimed blending considered basis grammar require multi argument constructors 
obj obj cafeobj maude precise fully formal mathematical notations various forms equational logic 
important executability strongly typed rst order logic 
pragmatic theoretical perspective seek model semiotic spaces simply possible simplify tasks engineering design scienti theorizing experimentation forgetting conceptual simplicity theory necessarily correspond simplicity expression particular language 
famous quotation einstein relevant simple possible simpler 
pragmatic perspective representations need simplest possible reasons include engineering tradeo diculty inherent ambiguity measuring simplicity social cultural factors relating 
similar considerations apply notably lesser extent simplicity semiotic theories creating theories design task subject various trade may reassuring reminded general unique best representation 
analysis dates dates representations 
dates discussed interesting dicult analysis greater precision example interesting way highlights possibility di erent representations best di erent purposes purposes depend particular situations users including culture 
example require dynamic entities state reformulated dynamic signs considered section 
rst introduce data sorts examples sort nat natural numbers builtin module nat sort id quoted identi ers builtin module qid sort float oating point numbers builtin module float 
note sort bool booleans builtin module bool automatically imported module having mentioned 
convenient source theory speci es dates triples natural numbers satisfying appropriate constraints dth date sort date pr tuple nat nat nat sort tuple date op day op month op year 
vars nat subsort date mb date keyword pair dth marks opening closing module date name 
rst line body declares new sort named date second line imports generic module tuple instantiates instances data sort nat imported builtin module nat main sort newly created module renamed tuple date things turn dates selectors renamed 
tuple builtin generic module having constructor selectors line introduces nat valued variables subsort date date 
introduced triples satisfy constraint 
nal interesting line gives constraint dates 
keyword mb indicates maude called membership declaration adopt mb notation maude prefer call sort constraints de ne elements obj family name cafeobj obj name speci members family maude exception convention 
months months days precise description months di erent numbers days leap years give simpli ed version expository purposes 
supersort belong subsort 
division lines arbitrary parser ignores carriage returns compress code placing phrases line 
clear date top level sort day month year selectors seen secondary sorts 
explicit constructors express priority ordering secondary constructors deal extra trouble simpler enrich theory new notion selector priority orderings optional partial orderings selectors certain constructors known prefer day come rst month year americans prefer month rst day year 
orderings directly expressed expressed indirectly just indicate informally notation day month year month day year orderings common european rational preserves natural ordering units increasing size 
formalize looking coecients formula di erence days dates 
explicit years larger months months days 
illustrates socially preferred orderings necessarily rational designer potentially confusing trade case dicult see socially preferred ordering de nite social preference logical european ordering 
notice purposes equally reasonable ordering decreasing size useful ordering discussed year month day example list quarterly net earnings release dates quarterly reports easier scan year came rst 
everyday situations year known rapidly changing item day known people may forget month certain situations 
fact ordering china countries 
notice ordering consistent usual ordering times hour minute second european ordering 
restrict consideration representations semiotic space semiotic space strings characters certainly interesting representations position calendar kinds calendar 
especially known representations dates character strings classi ed binary variables european vs american numerical vs mixed 
european representations put day rst month followed year american representations put month rst day second 
numerical representations separate components mixed representations write months words 
formalize need de ne target space strings characters 
convenient generic list module instantiated times dth list triv sort list pr nat subsort elt op nil list enrichment theory illustrates detailed study concrete examples contribute scienti progress 
new feature adds expressive power greatly simplify theories 
note selector priority orderings considered part semiotic theory level orderings constructor priority orderings part algebraic theory data structures involved 
op list list list assoc 
op list nat var elt var list eq nil eq eq phrase triv de nes interface generic module formal parameter triv builtin interface theory says theory designated sort actual parameter includes formal sort parameter designated elt 
operation constructor lists nil empty list operation gives length list 
called attribute assoc operation declares associative 
provide character data type provide words natural numbers convenient take lists union sorts target space theory dth chs sort ch pr nat qid list ch sort list 
subsorts nat id elements builtin module qid sort id forms abc elements sort include things may 
get representations form just rename list constructor follows dth chs pr chs op 
remains de ne representation morphisms see discussion relations section 
done easily de ning function top sort source theory top sort target theory notation denotational semantics 
dth date rep pr date chs op date op date var date eq day month year eq month day year import modules data sorts automatically imported modules date chs imported 
straightforward semiotic morphisms preserves common orderings selectors date constructor 
easy test morphism follows red red commands produce output interesting notice form date output material indicating successful processing various modules deleted welcome version built sun may pdt university california san diego sun may pdt dth date rep reduce date rep result list rewrite time ms parse time ms warning non termination corrected reduce date rep result list rewrite time ms parse time ms warning non termination corrected warning non termination corrected message arises way sort constraints implemented cause concern 
representations character dth date rep pr date chs op date op date var date eq day month year eq month day year course representation tested way 
mixed case done easily specify mapping month numbers month names need rename list constructor left exercise 
alert reader wonder de ned representations denotational style theory calls semiotic morphisms supported view feature 
views support partiality de ne called relation speci es entities theories connected source target theory included injective views 
motivated 
semiotic morphisms functions general partially de ned items represented 
theories complex sign systems user interfaces typically employ auxiliary constructions mapped space representations 

category theoretic notion relation spaces space maps thought projecting pairs components 

duality discussed section theory level relation sense theory inclusions theories respectively relation theories 

relation induces dual relation corresponding spaces models 
relations convenient way represent semiotic morphisms capabilities contrast denotational approach strictly functional 
analogy peirce semiotic triangle relational contrast saussure functional view signi cation 
consider uni ed numerical representation counts total number days passed january module dth date num rep pr date op date nat var date eq day month year assumes european ordering day month year assumes rst century value standard example days 
interesting consider bad representation 
instance important question measuring quality representations 
obvious american vs european representations social convention play important role 
important structural considerations mention just 
important sign map correspondingly important representation technically calls preserving important sorts constructors 
better preserve form structure content sacri ced 
important axioms signs satis ed representations 
principles basis comparing date representations 
american european representations preserve structuring day month year source space date numerical representation violating rst principle example years 
american european representations lose content need know century numerical representation rst representations better preserve form predicted principle axioms sort constraints data preserved numerical representation refer preserved representations may take di erent form months represented names 
di erent example third quality principle source theory time day minutes important axiom expressing cyclic nature unary minute click function variable time 
axiom elegantly satis ed familiar circular clock satis es stronger axiom introduce generalized lexicographic ordering comparing quality representations 
suppose partial order set nite partially ordered set ordering maximum element 
mean mean mean mean de ne lexicographic product rst de ning orderings follows minimal may apply follows set representations semiotic theory partial quality orderings re ect relative importance orderings 
example constructors levels level ordering priority ordering things level combines level priority orderings correct way 
representations preserves better useful quality measure representations take account axioms 
example american european representations better respect priority ordering better numerical representation priority ordering 
discussion quality measures morphisms explained relate peirce classi cation signs symbolic indexical iconic noted general application requires carefully crafted designer ordering lexicographic construction described intended technical tool ease de nition orderings 
called principle special cases familiar designers specialized areas see may rst general statement principle 
example preserves argument place possibly generally lexicographic product argument place preservation relations priority ordering 
analysis scrollbar window second example windows scrollbars gui operating systems 
scrollbars di er dates having states initial algebra semantics awkward hidden algebra semantics 
section considers scrollbars blends windows 
start source theory pointed les text les pointer top line displayed text 
rst specify data theories lines les noting dfn feature second line body abbreviates pr list qid sort id 
gives way sort rst introduced principal sort module default choice instantiating parameterized modules 
files data theory pointed les behavioral theory hidden sorts representing states 
dth file sort line dfn list qid subsort id var mb line pr list line sort list file op file 
file bth ptr file pr nat file sort tuple 
sort subsort var nat var file mb keyword bth module ptr file indicates de nes states hidden sort 
operation builtin parameterized module forms modules new hidden sort states composed principal sorts argument modules constructor sort tuple selectors parameterized module tuple 
sort constraints say lines fewer characters proper pointed les pointer value greater length le 
consider target semiotic space scrollbars 
similar space dates scrollbars height pointers indicating top bottom highlighted part scrollbar denote top bottom respectively 
height parameter needs instantiated scrollbar created top bottom parts state vary scrollbar 
consequently need parameterized theory scrollbars rst need parameter theory de ne interface th height pr float op height float bth scrollbar height sort scrollbar pr float float sort tuple scrollbar op top op bottom 
subsort scrollbar vars float mb scrollbar de ne relationship ptr file scrollbar relation bth ptr file rep height pr ptr file scrollbar sort tuple 
op 
scrollbar 
var pf 
eq pf max pf height pf var pfs eq top pfs top pfs eq bottom pfs bottom pfs scrollbar representation sub le le satis es quality principles section 
sacri ces content preserves le sub le ratio 
test semiotic morphism instantiating generic scrollbar particular height say inches module making assumptions pointer le 
dth pr float height bth ptr file rep pr ptr file rep op file eq red output reduction follows reduce ptr file rep result scrollbar rewrite time ms parse time ms warning non termination corrected says top pointer bottom scrollbar bottom pointer inches bottom 
di erence inches tenth scrollbar length case 
working example forced consideration slightly complex way scrollbars function near bottom les hardly great mystery explicitly thought 
new bugs uncovered corrected system discussed notion selector priority discovered 
phenomena typical important part scienti research reported 
blending scrollbar window section extends analysis previous section include window scrollbar link normally call window generally consists scrollbar area displaying text le 
system structural blend components 
goal section mainly illustrate notion blend explain particular example 
easy de ne windows style previous section combine scrollbars bth window sort window pr file subsort window var file mb window bth window scrollbar pr window scrollbar windows objects state le lines object state having components window scrollbar 
combination link window scrollbar displays need complex setup 
cognitive linguistics blends called generic space containing abstractions concepts occur input spaces instances necessarily identi ed blended space 
algebraic semiotics material theory shared identi ed blend theories interfaces 
consistent mathematical foundations methodology intuitions cognitive linguistics literature 
reason term base theory generic space 
example needs sub le representation correspond material displayed window 
possibility theory le sub le de ne follows bth file pr file file sort tuple 
sort subsort vars file mb says sub le implicit existential quanti ers condition handled replace explicit skolem functions bth file pr file file sort tuple 
sort subsort vars file ops sk sk file file file mb sk sk 
give semiotic morphisms knit window scrollbar blend 
rst obvious inclusion view window subtheory file second relation file ptr file view window file window file bth pr file ptr file sort tuple 
op vars file eq var eq sk eq just add obvious inclusion view window window scrollbar relation ptr file rep resulting diagram gives blend want 
variable size window scrollbar variable size windows scrollbars require elaborate construction 
possible base theory providing le sense module ptr file pointers lines le top bottom displayed material 
sort constraint just says length le bth file ptr pr ptr file file nat nat sort tuple file ptr 
sort file ptr subsort file ptr vars nat var file mb file ptr file ptr 
theory ptr uses length le pointers locations giving le 
bth ptr pr nat nat nat sort tuple ptr 
sort ptr subsort ptr vars nat mb ptr file ptr concrete ptr expressed relation file ptr file ptr enriched representation bth file ptr pr file ptr pr nat nat nat sort tuple nat op file ptr 
nat vars nat var file eq view described quite simply follows view ptr file ptr sort ptr 
nat give semiotic morphisms building blend 
relation connects file file ptr default view ll mappings automatically third instantiates parameterized relation ptr file rep inch scrollbar 
bth pr file file ptr sort tuple ptr 
op file ptr vars file eq var ptr eq eq sk eq sk view ptr file file ptr sort 

bth ptr file rep var pr ptr file rep height op winsize float var file eq height winsize putting collection theories morphisms gives blend want size window user de nable constant winsize 
blending 
subsection brie discusses points structural blending relation traditions 
rst note kinds dynamics involved blending process blending entities internal states 
cognitive linguistics far focussed mainly algebraic semiotics concerned due focus user interface design similar applications 
second point structural blending cross space mappings emerge identi cations implied base space relations causality represented ordinary relations bool valued functions having scroll scrollbar special ad hoc status 
thirdly distinction single double scope blending bit arti cial algebraic semiotics applications typically involve multiple scopes arising multiple spaces morphisms 
fourthly developing formal characterization blending notion colimit account quality orderings morphisms allowing blend system spaces morphisms 
contrast classical semiotics agreement cognitive science general cognitive linguistics particular eschew belief platonic reality signs sign systems strong tendency culture identify mathematical formalizations ideal entities 
conceptual analysis window scrollbar section sketches conceptual analysis scrollbars mainly intended show level analysis di ers previous sections focuses questions scrollbar scroll questions scrollbar represent window le display representation 
major motivation analyses conceptual level explore cognitive consistency designs 
appropriate tools answering questions models think scrollbars models scrollbars 
traditional cognitive linguistics little payo highly precise discussions shall relatively informal 
conceptual space scroll see contains rollers roll parchment material text scrolling text rotating rollers 
note possible expose contiguous segment text appropriate roller rotations 
scrollbar bar highlighted sub bar sub bar highlighted represents arbitrary contiguous segment text proportions locations boundaries highlighted sub bar total length bar described module ptr file rep var 
typically moving segment arrowheads top bottom bar non perceived making larger jumps text clicking corresponding non highlighted areas users aware 
analogy displayed text scroll highlighted sub bar scrollbar convenient real scroll rollers left right text scrollbars represent displayed text oriented vertically horizontally 
situation re ected mathematics expresses proportional representation quite nicely ignoring orientation see section 
hand analogies close 
scrolling text mouse move highlighted portion scrollbar di erent understand sense gibson potential interactions organism user environment system perceived sense norman user able perceive virtue displayed 
location human hands left right body 
old languages text oriented vertically read top bottom 
real scroll indirect control arises structural blending window scrollbar 
operating roller cause exposure di erent text size increases decreases displayed text left right depending roller rotated direction 
behavior scrollbar controls closer buttons elevator rollers scroll behavior di ers elevator buttons 
non perceived scrollbar correspond real scrolls 
approach advocated limited user interface design narrow sense representations dates conceptual analysis windows demonstrate 
way explore potential extended applications algebraic semiotics think interfaces broad sense includes form communication medium scope semiotics 
example principle applies generation outline book navigational guides provided buildings oor numbers room numbers lists oce occupants room numbers 
new ideas include formalization dynamic signs hidden algebra orderings selectors constructor relations blending generalized lexicographic order measure representation quality importance components 
addition subtle points revealed process formalization 
rich duality models theories 

maps induced models theory maps go opposite direction 

initial semantics static signs hidden semantics similar formalism needed dynamic signs order handle states 

non trivial constructors needed examples require structural blending conceptual blending 
hand opposition orts formalizing meaning situation semantics algebraic semiotics stresses necessity grounding social process formalization rst obtain reasonable levels priorities second check formalization useful 
hoped examples convince readers algebraic semiotics provides precise useful tool analyzing representations interfaces including just speci cation techniques general quality principles aid design 
emphasized design practice algebraic semiotics generally applied far informally code suggest 
practical application early stage serious case study done tatami system promises exciting area exploration 
barwise perry 

situations attitudes 
mit bradford 
clavel dur eker lincoln mart oliet meseguer quesada 

maude speci cation programming rewriting logic 
theoretical computer science 
diaconescu 
futatsugi 

cafeobj report language proof techniques methodologies object oriented algebraic speci cation 
world scienti amast series computing volume 
turner 

way think 
basic 
gibson 

theory 
shaw editors perceiving acting knowing ecological psychology 
erlbaum 
gibson 

ecological approach visual perception 
houghton mi 
goguen 

semiotic morphisms 
available web www cs ucsd edu users goguen papers smm html 
early version proc conf 
intelligent systems semiotic perspective vol 
ii ed 
albus nat 
inst 
science technology md october pages 
goguen 

ucsd semiotic zoo 
website url www cs ucsd edu users goguen zoo 
goguen 

algebraic semiotics applications user interface design 
nehaniv editor computation metaphors analogy agents pages 
springer 
lecture notes arti cial intelligence volume 
goguen 

social semiotic analyses theorem prover user interface design 
formal aspects computing 
special issue user interfaces theorem provers 
goguen 
spring 
user interface design class notes 
cse website www cs ucsd edu users goguen courses 
goguen burstall 

institutions model theory speci cation programming 
journal association computing machinery 
goguen 

information visualization semiotic morphisms 
malcolm editor visual representations interpretations 
elsevier 
proceedings workshop held liverpool uk 
goguen lin ro su mori warinschi 

overview tatami project 
cafe industrial strength algebraic formal method pages 
elsevier 
goguen malcolm 

algebraic semantics imperative programs 
mit 
goguen ro su lin 
appear 
conditional circular coinductive rewriting 
trends algebraic development techniques th international workshop wadt 
springer lecture notes computer science 
selected papers workshop held germany october 
norman 

design everyday things 
doubleday 
peirce 

collected papers 
harvard 
volumes see especially volume elements logic 
saussure 

course general linguistics 

translated roy harris 
tufte 

visual display quantitative information 
graphics press 
turner 

literary mind 
oxford 
