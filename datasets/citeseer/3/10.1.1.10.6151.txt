finding underlying connections fast graph method link analysis collaboration queries jeremy ri cmu edu andrew moore cs cmu edu david cohn cohn cs cmu edu jeff schneider cs cmu edu robotics institute carnegie mellon university forbes ave pittsburgh pa usa techniques social sciences graph theory deal problem examining analyzing patterns underlying structure associations group entities 
assumes underlying structure known easily inferred data may unrealistic assumption real world problems 
consider problem learning querying graph model underlying structure 
model learned noisy observations linking sets entities 
explicitly allow different types links representing different types relations temporal information indicating link observed 
quantitatively compare representation learning method algorithms task predicting links new friendships variety real world data sets 

techniques social sciences graph theory deal problem analyzing patterns underlying structure associations group entities 
typical query may examine entity importance looking relations position underlying structure wasserman faust 
real world situations true structure may known 
relevant information may buried large amounts noisy data 
examine problem learning querying graph model underlying structure 
model learned link data link single noisy input observation specifically set entities observed share relation 
sources real world data assume data noisy possibly containing irrelevant links links spurious missing members 
cgraph learning method approximates underlying structure 
account different types links may vary frequency extent noise 
incorporate information link occurred allowing account changes underlying structure time 
introduce friends problem examines strongly entities connected attempts predict entities occur links 
query test effectiveness cgraph algorithm compared variety algorithms 
motivation research increasing number analytical applications trying exploit massive amounts noisy transactional occurrence data 
kind data important insurance analysts intelligence analysts criminal investigators human resource professionals marketing analysts 
questions analysts ask general question underlying relationships people organization focused level people directly interacting person 
example key employee leaves hr needs know impacted 
individual caught transporting illegal materials law enforcement may need rapidly deduce possible 

collaborative graph model graphs social networks common method representing relationships set entities 
nodes represent entities edges capture relations 
example simple graph representing friends relation may consist graph undirected edge entities friends 
proceedings twentieth international conference machine learning icml washington dc 

example collaborative graph 
directed weighted graph capture underlying relations entities restrict weights form multinomial distribution outgoing edges 
words ab weight edge ab ab interpreted transition matrix 
noted edge weighted ordered pair representing true underlying connection different input links 
example collaborative graph shown 
graph structure simple capturing pair wise relationships fast approximate query easy interpret 

link data generation models model entities learned set observed links 
link single noisy input observation unordered set entities linked relation 
observations noisy relations exist truth may observed observations may result actual relations 
link may spurious missing members 
word link interpreted narrowly 
link capture range different relations direct communication occurrence sharing common attribute 

link generation models link generation 
models serve provide model link generation mle graphs creating artificial data motivation approximations 

random walk model random walk model link generation considers link random non self intersecting walk underlying graph 
walk continues set number propagations reaches dead 
formally link contains entities example links authors author relation 
entity added link entity link chosen link terminated 
process viewed random walk transition probabilities independent 
walk non self intersecting probability transitioning depends entities link 

random tree model random tree model realistic model link generation jth entity added link previous members link 
seed entity starts link 
new entity added link random entity link 
formally link contains entities randomly chosen link inv entity link chosen inv inv inv link terminated inv inv 

maximum likelihood estimate graphs possible find mle underlying graph generative model set observed links just simple optimization scheme search graph weights 
optimization include real valued parameters making search expensive large numbers entities 
unfortunately ordering links unknown step evaluating likelihood data may computationally expensive 
assuming random walk generative model simply calculating probability link entities requires examining 
different orderings 

approximating collaborative graph link data important task cgraph learn underlying graph link information 
learned graph reflect true underlying structure queries may return incorrect results 

collaborative graph approximation cgraph algorithm learns underlying graph weighted counts occurrences approximate edge weights 
counts accumulated single scan data 
resulting edge weights computed directly counts 
motivate approximation interpreting ab probability randomly chose link containing randomly chose second entity link entity simple interpretation leads approximation ab second line follows assumption link containing second entity chosen uniformly 
extend sampling interpretation edge weights account noise 
assume links different types different unknown probabilities relevant noise free denoted type 
similarly links occur different times different probabilities relevant current graph denoted time 
edge weights represent probability choosing randomly selected relevant type time noise free link containing probabilistic interpretation derive closed form approximation edge weights ab type time type time size link type typical weighting link type type time temporal weighting link time link occurred time time 
choice weighting functions described section 
approach similar methods newman kautz 
accounts additional information contained links normalized ensure probabilistic interpretation 
weighted counting approximation justified context generative models 
models second entity sampled directly indicates entity ith entity added link 
know order entities added link treat possible link ordering equally probable approximate weight edge percentage possible link orderings combinatorial argument model leads approximation approximate probability average probability links appeared results approximation identical 
difference approximate exact model longer accounting fact entity added link twice 

temporal typical weighting temporal weighting link time determines extent older links counted relevant 
intuition temporal weighting function expect links indicative current graph links occurred time ago 
choose exponential decay function time time time parameter determines decay rate exponential 
choice links occurred equally 
typical weighting link type determines link type counted compared links types 
restrict weights lie range weight results cgraph algorithm effectively ignoring links type 

time complexity scaling build graph need scan data time accumulate weighted counts number occurrences occurrences 
length link occurrences count 
max length largest link accumulating counts upper bound max 
addition need normalize outgoing edge weights 
max largest number outgoing edges branching factor single node entire approximation requires time max bmax 
table illustrates algorithm scales 
entry build time milliseconds ms takes approximate graph 
shows algorithm scales number links data set build model 
large numbers links entities approximation reasonably fast 

learning parameters approximation contains parameters link type weighting tempo table 
summary data sets number entities number links maximum link length max average link length ave time milliseconds construct graph build maximum branching factor resulting graph max average branching factor resulting graph ave time milliseconds perform queries depth 
data set entities links max ave build max ave lab institute drinks manual citeseer citeseer citeseer citeseer percent data set time seconds build time query time 
average time build graph query entities number links increases 
ral decay parameter 
may possible set parameters priori domain specific knowledge appealing approach learn parameters 
parameters unspecified cgraph algorithm attempts learn cross validation 
performance measured closely learned graph corresponds normalized counts cross validation set 
noted experiments learn type weightings cross validation 
friends identification primary goals cgraph algorithm answer queries list top current new collaborators 
call queries friend identification problem consider versions 
friends problem asks data entities appear links 
new friends problem asks data seen far entities appeared link appear links 
predictive questions occurrences entity opposed standard web link analysis queries identifying authoritative pages hubs authorities gibson 
way look friendship problem distance proximity measure entities close collaborate 
simplest proximity function just ab method computationally cheap unable generalize past occurrences seen 
distance measure nonself intersecting walk able capture concept friend friend 
specifically define proximity probability fixed length random nonself intersecting walk include formally prox set nonself intersecting walks length equal directed edge approximate metric considering paths length steps 
nodes reachable steps arbitrarily low proximity 
measure uses depth search graph may computationally expensive 
formally place upper bound running time min max 
expression shows friendship query independent number links scales polynomially branching factor graph 
table illustrate operation scales different size data sets indicates average time friendship query learned graph 

friends identification results 
data sets test cgraph algorithm variety real world data sets described summarized ta ble 
data sets available form www org 

lab data consists publication links members research lab includes people links 

institute data set links different types publication common research interest advisor collected public data carnegie mellon university robotic institute webpages 
publication links marked year publication 
data set provides example multiple link types different amounts relevant information 
expect advisor link better predictor collaboration simply common research interest 

citeseer data collection publication links citeseer online library index computer science publications 
publication served single link containing authors 
entities represented initial name single name correspond multiple authors 
addition subsets consisting citeseer links demonstrate scaling properties 
links chosen randomly entries table averages runs 

drinks data set consists popular bar tending recipes various websites 
link consists ingredients entities contained drink 

manual webpages data set links created human manually read set public web pages news stories related terrorism subjectively linked entities mentioned articles 
pages written hosted various governments news organizations 
link created hand single relation funded web page contained entities relation mentioned page 

competing algorithms performance cgraph algorithm friends identification task tested variety algorithms 
simple baseline strawman comparisons random occurrence counting popular entity algorithms 
random algorithm returns unique random entities entity friends 
occurrence counting algorithm returns entities occurred entity top friends 
popular entity algorithm counts number links entity occurred ranks entities count 
predicted friends entity just popular entities excluding entity ranking 
spectral clustering algorithms include broad range techniques eigenvalue analysis feature vectors shown effective field network analysis bibliometrics garfield gibson ng 
analysis viewed form factoring begins matrix row corresponds link column corresponds entity 
value indicates entity participated link singular value decomposition svd decomposes sets left right singular vectors press 
left singular vectors correspond canonical sets entities may interpreted latent groups right singular vectors correspond mixing proportions groups combined best approximate observed links 
spectral clustering consists assigning observed link canonical set dominates mixture 
mixing proportions may estimate similarities entities number ways 
estimate affinity entities euclidean distance vectors representing mixing proportions 
friends predicted entities highest affinity entity 
examined traditional svd spectral clustering labeled spectral variation non negative matrix factorization lee seung labeled spectral 
produces decomposition similar svd adds constraint entity membership canonical sets strictly non negative 

cross validation tests sequential cross validation data sets compare performance algorithms 
performance algorithm percentage guessed friends occurred test set 
number friends requested entity equal true number test set occurrences 
important appreciate test similar real world algorithm 
data time queries possible connections time step 
table shows performance various algorithms data sets 
performance mean success rate fold sequential cross validation 
runs treated independent results marked significantly different marked 
entry column marked performance algorithms test significantly different 
table 
average fold sequential cross validation results percentage correctly guessed test set occurrences 
institute citeseer drinks lab manual algorithm new new new new new cgraph popular counting random spectral spectral table 
average fold sequential cross validation results percentage correctly guessed test set occurrences institute data set cgraph different temporal decay rates 
friends new friends table illustrates algorithm outperforms algorithms 
important appreciate data sets metrics cgraph best performers 
institute citeseer drinks data significantly better algorithms 
single best performer performance practically close best algorithm 
interesting trend shown table performance popular algorithm 
success suggests possible extension cgraph algorithm incorporating priors entities 

effect beta term demonstrate temporal weighting effect performance sequential cross validation run publication links institute data set 
links time stamped year publication 
goal predict collaborations kth subset previous subsets 
results values shown table 
metrics performance cgraph significantly better significance level 
initially increasing lead increased performance predicting collaborations placing weight collaborations 
continues increase performance decreases information discounted 
fact grows large information current time effectively ignored 

experiments known graphs important test cgraph learns correct graph approximation 
queries incorrect graph best unreliable 
test compared learned graphs known graphs generated link data 
addition evaluating performance cgraph algorithm compared performance learning algorithms 
algorithm simplified version cgraph algorithm fixed equal link type weights 
algorithm counts links weighted solely size link similar approaches newman kautz 

second algorithm unweighted link counting approach take account link size 
third algorithm hill climbing search find mle graph weights described section 
underlying generative model assumed random walk model tests 
important appreciate expect mle necessarily perform better structure highest likelihood may true underlying structure 
fourth algorithm hill climbing search find mle graph random walk model assumed fixed equal link type weights 
provide approximate baseline fifth algorithm simply generated random graph 

data generation known graph tests start test ground truth graph randomly generated 
edges added nodes added directions different weights 
set links including noise links created generative models 
link created choosing link type choosing link completely random probability weight 
tests different link types fixed weights 
link type contained significantly noise links types completely noise free 
table 
mean error squared distance learned known graphs reconstructing graph 
entities entities algorithm walk tree walk tree cgraph learned cgraph fixed mle learned mle fixed counting random graph 
results known graphs table summarizes resulting performance algorithms 
column consists average error tests indicated generative model number entities 
error metric squared distance learned known graphs error true ab learned ab ab weight edge graph metric provides reasonable approximation distance graphs computationally efficient calculate 
entries table marked statistically significantly better unmarked entities column 
results show clear advantage weighting different link types advantage cgraph algorithm mle number entities grows 
mle algorithm outperformed cgraph algorithm small number entities difference comparatively small compared difference cgraph algorithms 
significantly cgraph algorithm distinct advantage data sets links larger links 
link sizes limited entities 
links links larger sizes simply evaluating probability mle may computationally feasible 

related illustrated data sets examples similar analysis citations referral webs web structure 
areas bibliometrics web analysis eigenvector methods spectral clustering shown effective garfield gibson ng 
techniques promising complement alternative research considered tests 
important appreciate similar areas attempting infer different information 
specifically wish infer underlying direct connections entities 
citations linked websites imply relatively weak indirect connections entities common research topic 
probabilistic models approach problems cohn hofmann friedman getoor 
cohn hofmann model document generation assume documents generated mixture sources contents document citations terms probabilistically determined sources 
similarly 
model link generation links generated single underlying group noise added 
models differ significantly assume mixture sources probabilistically determine entity membership link entities members link 
getoor 
technique uses probabilistic relational model classify web pages 
important difference type information attempting infer 
attempting classify entities create full probabilistic model predict underlying direct connections entities 
approach similar techniques newman kautz 

newman kautz describe methods approximating querying social network link data 
approaches weighted count cooccurrences differ 
works heuristics choose link weighting considers link reliability factors type link occurred 
works attempt answer questions different friendship problem 
example kautz attempt referrals finding chains entities 
similar problem lacks important characteristic multiple paths imply stronger indirect connection 
techniques fields social network analysis complement research require underlying graph structure known easily inferred data 
example creates predictive models relational variables friendship question collection explanatory variables extracted demographics known social network anderson wasserman 
example schwartz wood graph find subgraphs people related interests 
schwartz wood estimate graph link information limit estimation boolean edges indicating presence communication 

examined problem quickly inferring underlying graph structure capture relationships entities 
structure learned collection noisy link data problems may easier obtain true underlying graph 
conjunction introduced friends problem examines strongly entities connected appeared link 
problems promise applications areas sociology marketing security study artificial networks 
natural extensions leave 
incorporation concept popularity entities model 
motivated natural extension generative models success popular algorithm new friends problem incorporation priors may boost performance 
second extension positive pairwise relationships include relationships appear pairs triple 
jeremy supported fannie john hertz foundation 
research supported darpa award number 
authors steve lawrence making citeseer data available 
anderson wasserman crouch 

primer logit models social networks 
social networks 
cohn hofmann 

missing link probabilistic model document content hypertext connectivity 
advances neural information processing systems pp 

cambridge ma mit press 
friedman getoor koller pfeffer 

learning probabilistic relational models 
proceedings seventeenth international joint conference artificial intelligence pp 

san francisco morgan kaufmann publishers 
garfield malin small 

citation data science indicators 
merton zuckerman eds metric science advent science indicators 
new york john wiley sons 
getoor segal taskar koller 

probabilistic models text link structure hypertext classification 
ijcai workshop text learning supervision 
seattle washington 
gibson kleinberg raghavan 

inferring web communities link topology 
proceedings acm conference hypertext hypermedia 
new york acm press 
kautz selman shah 

hidden web 
ai magazine 
moore schneider yang 

stochastic link group detection 
proceedings eighteenth national conference artificial intelligence pp 

new york acm press 
lee seung 

algorithms nonnegative matrix factorization 
advances neural information processing systems pp 

mit press 
newman 

best connected scientist study scientific coauthorship networks 
phys 
rev 
ng zheng jordan 

link analysis eigenvectors stability 
proceedings seventeenth international joint conference artificial intelligence pp 

san francisco morgan kaufmann publishers 
press flannery teukolsky vetterling 

numerical recipes art scientific computing 
cambridge england cambridge university press 
second edition 
schwartz wood 

discovering shared interests people graph analysis global electronic mail traffic 
communications acm 
wasserman faust 

social network analysis methods applications 
cambridge england cambridge university press 
wasserman 

logit models logistic regression social networks markov graphs 
psychometrika 
