smooth view dependent level detail control application terrain rendering key real time rendering large scale surfaces locally adapt surface geometric complexity changing view parameters 
schemes developed address problem view dependent level detail control 
progressive mesh framework represents arbitrary triangle mesh hierarchy geometrically optimized refinement transformations accurate approximating meshes efficiently retrieved 
extend general framework provide temporal coherence runtime creation geomorphs 
geomorphs eliminate popping artifacts smoothly interpolating geometry 
implementation requires new output sensitive data structures added benefit reducing memory 
specialize framework important case terrain rendering 
handle huge terrain grids introduce simplification scheme constructs progressive mesh hierarchy block refinements 
demonstrate need accurate approximation metric simplification 
contributions highlighted real time large rugged terrain 
notably geomorphs results visually smooth rendering frames sec graphics workstation 
real time visualization large scale surfaces challenging problem 
example shows grid mesh vertices containing color elevation data 
common approach rendering surfaces exploit traditional graphics pipeline optimized transform texture map triangles 
graphics pipeline main stages geometry processing rasterization 
typically rasterization effort relatively steady rendered surface low depth complexity 
worst case model covers viewport number filled pixels slightly frame buffer 
current graphics workstations soon personal computers sufficient fill rate texture map entire frame buffer hz advanced features trilinear mip map filtering detail textures 
geometry processing proves bottleneck 
high platforms process real time tiny fraction nearly triangles shown 
course little point rendering triangles pixels 
fact surface usually exhibits significant spatial coherence perspective projection approximated accuracy email microsoft com web research microsoft com hoppe hugues hoppe microsoft research pixels simpler mesh triangle faces demonstrated 
finding mesh updating viewing parameters change referred view dependent level detail lod control 
challenge locally adjust complexity approximating mesh satisfy screen space pixel tolerance maintaining rendered surface spatially temporally continuous 
spatially continuous mesh free cracks junctions 
temporally continuous rendered mesh visibly pop frame 
schemes developed address view dependent lod control summarized section 
progressive mesh framework represents arbitrary triangle mesh hierarchy geometrically optimized refinement transformations :10.1.1.159.5637:10.1.1.159.5637
consequently able satisfy screen space approximation tolerance simpler mesh key advantage reducing geometry bottleneck 
extend general framework areas 
memory requirements redesign data structures output sensitive reducing memory requirements section 
runtime geomorphs introduce scheme efficient runtime creation geomorphs smoothly transition surface geometry frames eliminate popping section 
knowledge runtime scheme temporally smooth view dependent lod control arbitrary meshes 
types graphics scenes complex geometric descriptions 
emphasized scenes contain distinct small scale objects lod adjusted independently traditional view independent simplification techniques :10.1.1.153.3865
opinion overhead view dependent lod justified necessary large scale continuous surfaces 
outdoor scenes primary instance terrain surface 
domains examples include virtual organic structures cad surfaces ship hulls 
place emphasis terrain rendering importance growing entertainment market 
second half specialize framework special case terrains height fields 
particular add enhancements approximation error demonstrate common approach measuring approximation error height fields solely grid points inadequate view dependent lod irregular meshes section 
fortunately exact approximation error computed efficiently preprocessing step 
scalability handle huge terrain models recursive simplification process section 
result process hierarchical progressive mesh representation permits runtime memory management 
related terrain grid vertices containing color elevation data 
height fields 
exist numerous multiresolution representations height fields see surveys subset support view dependent lod efficient line algorithms introduced incrementally adapt lod view parameters change 
taylor barrett extract mesh approximations rectangular quadtree hierarchies 
lindstrom define bintree hierarchies binary subdivision right isosceles triangles demonstrate real time view dependent lod 
representations regular subdivision offer concise storage 
able create optimal approximating meshes incremental changes frame 
meshes optimal restricted space meshes regular subdivision structure constrains vertex locations face connectivities 
result approximations may far optimal considers space possible triangulations domain 
methods delaunay triangulation develop multiresolution hierarchies 
particular cohen levanoni support line view dependent lod temporal coherence resort stage geomorphs 
compared quadtrees methods allow general distribution vertices domain 
mesh connectivities constrained case delaunay triangulation criterion 
arbitrary meshes 
xia varshney hoppe show multiresolution hierarchies arbitrary meshes defined general refinement transformation called vertex split 
xia varshney construct hierarchy edge length heuristic hoppe constructs geometrically optimized sequence progressive mesh representation section 
de introduce related refinement hierarchy 
applied special case height fields frameworks able satisfy approximation error fewer faces due absence connectivity constraints 
reports scheme uses number active triangles required bintree schemes screen space error 
review view dependent progressive mesh framework introduced progressive mesh pm representation describes arbitrary triangle mesh coarse base mesh sequence refinement transformations called vertex splits progressively recover detail 
pm representation obtained fn vsplit ecol fl fr fn vertex split refinement operation inverse edge collapse coarsening operation 
vsplit refinement transformations uniquely define vertex hierarchy 
carefully simplifying successive edge collapse transformations recording inverses 
shown framework sequence vsplit refinement transformations uniquely defines vertex hierarchy root nodes correspond vertices base mesh leaf nodes correspond fully detailed mesh hierarchy permits creation selectively refined meshes meshes necessarily original sequence selectively refined mesh corresponds vertex front vertex hierarchy obtained incrementally applying ecol vsplit transformations subject set legality conditions :10.1.1.159.5637:10.1.1.159.5637
selectively refined mesh called active mesh usually simpler fully detailed mesh achieve view dependent lod active vertex front traversed prior rendering frame vertex may coarsened refined view dependent refinement criteria 
vsplit refinement performed neighborhood satisfies criteria intersects view frustum gauss map strictly oriented away screen projected deviation exceeds user specified pixel tolerance efficient conservative runtime evaluation criteria vertex hierarchy stores bounding sphere radius rv normal vector nv cone normals angle deviation space encoded uniform component directional component 
geomorphs demonstrated feasible framework runtime creation left 
remainder assume size base mesh insignificant compared fully refined assume approximately vertices faces 
denote number vertices active mesh approximately faces 
typically efficient temporally smooth output sensitive data structures limitation original scheme data structures scale proportionally size fully refined mesh particular static storage allocated represent mesh connectivity faces small fraction usually active time 
allow geomorphs prohibitive memory redesigned data structures output sensitive 
shown structures separated parts static part encoding vertex hierarchy refinement dependencies size bytes dynamic part encoding connectivity just active mesh size bytes 
examine data structures closely 
vertex contains pointer parent index creates children leaf 
vertices numbered consecutively index sufficient compute indices child vertices vt vu child faces fl fr 
optimizations reduce memory 
geometry storage reduced half modifying vsplit ecol transformation force vertices vs vt geometry illustrated 
experiments reveal vs vt constraint results average increase active faces 
storing texture identifiers new faces fl fr vsplit infer vsplit adjacent active faces fn fn respectively 
concreteness pseudocode vertex split transformation procedure ecol vs defined analogously 
procedure vsplit vs vt vertices jv vs vu vt fl faces jf vs fr fl fn vs fn vt vs vt vertex vt vs vu new vu vertex vu vu listnode add list active vertices vu vs vu fl new fl listnode add active faces fill entries fl fr new fr listnode add active faces fill entries fr update fn neighbors point fl fr face vu update vertices vs vu enable geomorphs described section active vertex field points dynamically allocated record vertex morphing 
practice number morphing vertices fraction number active vertices small fraction total number vertices 
new data structures need gbytes compared bytes 
practice number active faces pointers static structure replaced bit indices 
additionally vsplit quantize coordinates bits entry lookup tables statically allocated structures 
space struct vertex geometry point point vector normal position normal nv struct vertex static vertex active vertex inactive vertex parent parent vertex root int index leaf struct face static face active face inactive struct vsplit vertex split vu geometry child vertex vu face fn required neighbors fn fn fn fn float radius max extent rv affected region float sin alpha cone normals angle sin float uni error uniform error float dir error directional error struct listnode listnode listnode prev node doubly linked list struct selectively refinable mesh array vertex vertices vertices hierarchy array face faces faces array vsplit vertex splits listnode active vertices head active vertex list listnode active faces head active face list dynamically allocated structures 
space struct active vertex heap listnode listnode list active vertices vertex vertex pointer back static vertex vertex coordinates section struct active face heap listnode listnode list active faces vertices ordered counter clockwise neighbors neighbors vertices int texture id texture tile identifier struct heap see section bool coarsening true coarsening false refining short geomorph frames remaining vg refined refined geometry back copy increment frame morph principal data structures 
fields denoted omitted terrain rendering section 
frv sin vg 
static storage reduced bytes 
way comparison standard representation pre simplified quantized irregular mesh uses bytes memory bytes positions normals bytes connectivity 
framework requires increase memory static non lod representation 
runtime generation geomorphs factors crucial visual simulation high steady frame rate absence popping artifacts 
goals contradictory 
popping avoided screen space error tolerance kept near value pixel constant error tolerance number active faces vary greatly depending model complexity near viewpoint leading non uniform frame rate 
old view frustum new view frustum model viewed instantaneous refinement advancing geomorph refinement viewer motion path instantaneous coarsening changes active mesh forward motion viewer 
solution aim primarily constant frame rate adjusting screen space error tolerance eliminate popping smoothly morphing geometry 
model may times projected geometric error pixels results indicate geomorphs error nearly imperceptible 
remainder section describes scheme generating geomorphs runtime framework 
geomorph scheme effective increase pixel error tolerance improve frame rate frames sec noticeable artifacts 
main idea follows 
refinement criteria indicate need ecol vsplit performing transformation instantaneously perform geomorph gradually changing vertex geometry frames 
specifically transformation performed geomorph region affected surface visible region overlaps view frustum oriented away viewer 
undesirable initiate geomorph region known invisible refinement criteria region may unbounded screen space error 
region visible prior geomorph lead arbitrarily large screen space displacement 
example viewpoint pans left nearby screen region morphing coarse state enters left edge viewport 
position vertex attributes interpolated geomorph may include normal color texture coordinates 
attributes linearly interpolated 
normals interpolated unit sphere 
examples texture coordinates generated implicitly rendering linear map vertex positions 
map linear texture coordinates identical result texture coordinates tracked explicitly vertices 
illustrates types changes applied active mesh user moves forward left model 
regions model entering view frustum left instantaneously refined 
regions leaving view frustum right near viewer instantaneously coarsened 
regions view frustum geomorph refined 
note common case forward viewer motion geomorph coarsening occur 
geomorph refinement 
geomorph refinements common case practice 
minor changes vsplit procedure described section 
mesh connectivity modified immediately initially assign new vertex vu geometry sibling vt gradually modify geometry vu refined state frames 
parameter user specified prototype set equal frame rate illustration geomorph refinement 
active mesh right obtained applying vertex splits active mesh left 
obtain smooth transition geometry vertices fv gradually interpolated ancestors indicated arrows 
construction positions interpolation necessary 
geomorphs lifetime second 
note geomorphs require additional faces mesh connectivity exactly desired refined mesh 
modified pseudocode function invisible vs return outside view frustum vs oriented away vs see definitions procedure vsplit vs code section invisible vs vu vt vm vu new vm coarsening false vm vm vg refined vs vu vm vm vg refined vu emphasized modified vsplit may applied vertex vs morphing 
words geomorph refinements composed arbitrarily overlapping lifetimes 
procedure vsplit simply advances vertex front vertex hierarchy possibly layers modifying mesh connectivity instantaneously deferring geometric changes 
shows example vertex splits performed 
shown pseudocode frame traverse set active vertices morphing vertex advance geometry decrement field 
reaches vertex reached goal geometry record deleted 
procedure update active vertices morph delete geomorph coarsening 
geomorph coarsening challenging framework 
geomorph refinement geometry interpolation take place mesh connectivity coarsened 
mesh remain refined geomorph lifetime evaluating legality coarsening steps non trivial 
legality determined coarsening general require modifying ongoing geomorphs 
difficulties inherent framework arise multiresolution hierarchies uniform subdivision 
consequence allow geomorph coarsening layer time 
set desired geomorph simultaneously perform currently legal ones dependents wait initial geomorphs complete 
help mitigate delay reduce parameter geomorph coarsening half geomorph refinement 
fortunately geomorph coarsening required viewer moving backwards infrequent situation 
implementation geomorph coarsening primarily involves changes function adjusts active vertex front procedure adapt refinement compare definition active vertices vertex vs vs invisible vs screen error vs force vsplit vs vs parent ecol legal vs parent coarsening invisible vs parent finish geomorph coarsening ecol vs parent screen error vs parent abort geomorph coarsening finish geomorph coarsening ecol vs parent start geomorph coarsening vs modified screen space error metric 
recall geomorph refinement initiated screen projected deviation mesh neighborhood exceeds pixel tolerance viewer moving forward mesh neighborhood closer viewer time geomorph completes invalidating error estimate 
solution anticipate viewer location frames evaluating screen space error metric 
estimate location extrapolation current frame viewer velocity rigorous solution account changes velocity require altering lifetimes ongoing geomorphs expensive 
original refinement criterion kv ek nv kv ek viewpoint mesh vertex nv normal neighborhood residual error tan accounts field view angle pixel tolerance square root factor allows greater simplification surface viewed direction normal 
terrain fixed factor reduces average number active faces decided omit 
denominator kv ek estimate coordinate vertex screen space 
replace denominator linear functional le computes coordinate directly viewing direction 
new screen space error criterion le point current viewpoint anticipated viewpoint depending negative positive respectively viewer moving backwards forwards 
discussion 
selectively refined meshes framework particular resulting geomorphs may thin near degenerate triangles 
papers warn meshes lod rendering 
opinion unjustified 
thin triangles produce artifacts result inaccurate computation approximation error artifacts avoided computing exact error section 
authors expressed concern thin triangles may misbehave rendering 
observed rasterization artifacts graphics platforms tested sgi maximum impact infinite reality demonstrated accompanying video 
elevation data edge collapse edge collapse evaluating maximum height deviation solely grid points gives error zero 
edge collapse 

center vertex error grid point interior face grid line interior edge correct approximation error crucial consider vertices union partition triangulations 
specialization terrains section discuss framework specialized address rendering height fields 
experiments reveal simplification presents little benefit 
instance result coarsening mesh 
omit view dependent refinement criterion simplifying function invisible follows function invisible vs return outside view frustum vs texture image mapped terrain vertical projection measure surface deviation parametrically strictly vertical distance done 
addition texture mapping performed gouraud shading storage vertex normals unnecessary 
consequence omit storing fields nv highlighted symbol reducing static storage bytes bit indices quantization lookup tables described section 
exact approximation error height fields common literature measure approximation error simplified mesh maximum vertical deviation original grid points 
lod measuring deviation solely grid points generally insufficient surprising input discrete set grid points knowledge surface points 
edge collapse transformation illustrated meshes transformation interpolate grid points different geometric shapes 
argued interpolants equally valid clearly rendered meshes look different mesh transformation may lead partition mesh pre simplify blocks apply bottom recursion ecol ecol simplify blocks save ecol blocks larger blocks ecol simplify top level block steps hierarchical block simplification done preprocess 
arbitrarily large pop 
point academic initial implementation naive approximation error fact result unexpectedly large pops demonstrated qualitatively video 
geomorphs hide pops useful accurate estimate screen space error 
solution measure maximum approximation error respect surface 
natural choice surface regular triangulation grid points 
want compute maximum height deviation triangulated grid open neighborhood edge collapse transformation 
similar derivations described 
maximum height deviation triangle meshes known lie vertex union partition plane vertices labeled 
efficient way enumerate vertices union partition consider grid points internal faces adjacent vs grid line crossings internal edges adjacent vs note computed error just upper bound exact computed respect original fully detailed mesh 
error computed preprocessing discussed section stored vsplit field runtime criterion section 
pointed regular subdivision schemes quadtrees grid line crossings happen fall exactly grid points naive approach fact sufficient 
hierarchical pm construction develop hierarchical scheme constructing pm representations large terrains 
scheme applied preprocess partitions surface geometry blocks uses bottom recursion simplify merge block geometries 
approach motivated considerations simplification methods start detailed mesh successively remove vertices inherently 
mesh acceptable approximation fits main memory attempting form approximation simplifying mesh impractical 
height fields alternative approach requiring memory start coarse approximation progressively insert vertices 
greedy refinement methods generally yield inferior approximations compare figures 
hierarchical strategy allows tackle problem piecemeal accurate simplification method 
larger models pre simplified mesh may large fit main memory 
resorts operating system virtual memory manager resulting paging causes norm integrate squared error domain inadequate reported 
final pm base mesh pre simplified terrain block refinements vsplit vsplit vsplit vsplit vsplit vsplit result hierarchical construction process 
process pause intermittently disturbing frame rate 
partitioning refinement database block hierarchy exploit domain knowledge explicitly pre fetch refinement data needed 
just geometry data may large memory may associated texture image 
clip maps offer elegant solution problem require hardware assistance currently available high systems 
traditional approach partition texture image tiles mip mapped paged independently 
scheme texture tile may associated block pm construction optionally guarantee mesh faces cross block boundaries 
partitioning model blocks recursive scheme proceeds illustrated 
starting lowest level simplifies block iteratively applying sequence ecol transformations 
sequence chosen selecting iteration ecol giving rise lowest approximation error metric section 
simplification process terminates approximation error best ecol exceeds userspecified threshold current level 
order avoid refinement dependencies adjacent blocks constrain ecol leave boundary vertices untouched 
level texture tiles desired constrain ecol prevent displacement tile boundaries block shown checkerboard pattern color plate 
simplification sequences saved disk 
resulting simplified meshes stitched time process repeated higher level larger blocks 
special treatment levels simplification 
level discard block initial ecol texture mapped underlying triangle mesh frame frame sec terrain shown 
screen space error tolerance pixels window 
active mesh faces vertices 
fraction vertices undergoing geomorph refinement coarsening respectively 
note sizes shapes triangles adapt complex topography 
level max 
error number faces range original mesh pre simplified level level level table pm hierarchy statistics 
user specified error tolerance exceeded 
effectively amounts truncating final hierarchy avoids intermediate storage costs 
level single block permit simplification mesh boundary dependencies longer concern 
final base mesh consists triangles triangles tile texture tiles desired color plate 
form hierarchical pm invert recorded ecol sequence form vsplit sequence called block refinement 
concatenate block refinements store base mesh 
construction ordinary pm final assembly involves renumbering vertex face parameters vsplit records 
renumbering requires depth access block refinements hierarchy memory usage moderate 
hierarchical construction constrains simplification block boundaries lower levels inter block simplification occurs higher levels constraints pose significant runtime penalty 
example section pixel tolerance non hierarchical pm representation reduces average number active faces 
mentioned user specifies threshold maximum approximation error simplification level 
choose thresholds block refinements levels roughly number vsplit refinements 
example color plate thresholds expressed fractions terrain width 
thresholds form upperbound errors vsplit level determine block refinements need memory resident current viewing parameters prefetched anticipated view changes 
specifically thresholds compute maximum screen projected error active block 
error exceeds screen space tolerance child block refinements loaded memory tested 
block refinements correspond contiguous sequences vertices faces arrays reserve virtual memory pm entire arrays sparse memory allocation commit fraction physical memory 
instance microsoft windows operating system supports reserve commit decommit protocol system calls 
results preprocessing 
grid represents actual elevation data satellite imagery near grand canyon 
elevation grid vertex integer range unit represents meters 
example challenging exaggerated elevation assigning meters unit 
partitioned initial mesh blocks vertices applied hierarchical construction scheme section 
table shows maximum error tolerance level hierarchy original scale total number faces level 
meshes dense visualize color plate shows simpler example blocks vertices 
pre simplify blocks error half original data resolution range 
resulting pre simplified mesh vertices static data structures mb 
low platforms storage premium pre simplification error threshold increased reduce size mb 
contrast dynamic data structures require mb memory typical situation number active vertices number morphing vertices 
runtime 
accompanying video demonstrate minute grand canyon terrain 
world units speed flight approximately mach 
rendered real time sgi octane workstation single processor mhz maximum impact graphics window pixels 
obtain constant frame rate frames sec regulating screen space error tolerance maintain approximately active faces amortizing procedure adapt refinement frames described 
shows frame equals pixels 
flight screen space tolerance averages pixel attains maximum pixels 
approximations computation screen space errors tolerance values unfortunately upper bounds screen space error 
fraction vertices undergoing geomorph refinement coarsening averages respectively 
scheme hardware window frames faces pixel tol 
config 
dimensions sec avg 
max 
onyx ir onyx ir onyx ir onyx re table runtime statistics comparison previous 
modifying regulation maintain active faces consistently achieve target frame rate frames sec 
similarly active faces yields rate frames sec 
table lists statistics similar ones recorded sgi onyx infinite reality system 
currently single cpu performance gains onyx limited 
comparison table lists statistics previous methods 
unfortunately terrains different case preventing direct comparisons 
quality results due combination advantages 
framework efficient performing output sensitive incremental able adapt render active mesh faces frames second uni processor workstation 

mesh faces derived geometrically optimized refinement transformations providing accurate approximation 

temporal coherence geomorphs mask remaining screen space approximation error 
generalization arbitrary meshes output sensitive data structures section runtime geomorph framework section apply representations arbitrary meshes demonstrated accompanying video 
section briefly discuss techniques section generalized arbitrary meshes 
approximation error 
methods able track upper bounds maximum geometric error simplification arbitrary meshes 
specifically consider sequences edge collapse transformations 
easy include methods general framework 
obtains bounds parametric approximation error appropriate presence texture mapping 
hierarchical construction 
voronoi construction recursively partition arbitrary mesh hierarchy regions 
regions longer square blocks bottom simplification stitching scheme little modification 
acknowledgments wish microsoft direct group helpful feedback cindy grimm john snyder rick szeliski comments 
bajaj error bounded reduction triangle meshes multivariate data 
spie 
cignoni scopigno representation visualization terrain surfaces variable resolution 
visual computer 
cohen manocha simplifying polygonal models successive mappings 
visualization proceedings ieee pp 

cohen manocha simplification 
computer graphics siggraph proceedings 
cohen levanoni temporal continuity levels detail delaunay terrain 
visualization proceedings ieee pp 

de building traversing surface variable resolution 
visualization proceedings ieee pp 

de multiresolution models topographic surface description 
visual computer 
wolinsky miller aldrich weinstein roaming terrain real time optimally adapting meshes 
visualization proceedings ieee pp 

eck derose duchamp hoppe lounsbery stuetzle multiresolution analysis arbitrary meshes 
computer graphics siggraph proceedings 
funkhouser sequin adaptive display algorithm interactive frame rates visualization complex virtual environments 
computer graphics siggraph proceedings 
garland heckbert fast polygonal approximation terrains height fields 
cmu cs cs dept carnegie mellon university 
garland heckbert surface simplification quadric error metrics 
computer graphics siggraph proceedings 
surface simplification variable tolerance 
proceedings second international symposium medical robotics computer assisted surgery november pp 

heckbert garland survey polygonal surface simplification algorithms 
multiresolution surface modeling siggraph course notes 
acm siggraph 
hoppe progressive meshes 
computer graphics siggraph proceedings 
hoppe view dependent refinement progressive meshes 
computer graphics siggraph proceedings 
continuous level detail 
master thesis department computer science norwegian university science technology february 
lindstrom koller ribarsky hodges faust turner real time continuous level detail rendering height fields 
computer graphics siggraph proceedings 
luebke view dependent simplification arbitrary polygonal environments 
computer graphics siggraph proceedings 
baum real time graphics system 
computer graphics sig graph proceedings 
rossignac borrel multi resolution approximations rendering complex scenes 
modeling computer graphics kunii eds 
springer verlag pp 

taylor barrett algorithm continuous resolution discrete surface 
proceedings graphics interface pp 

xia varshney dynamic view dependent simplification polygonal models 
visualization proceedings ieee pp 

original mesh vertices faces max pre simplified mesh faces max level simplification faces max level simplification faces max level base mesh faces max pm hierarchy showing block refinements maximum error block refinements color plate hierarchical pm construction process partitions model blocks recursively simplifies combines blocks 
result base mesh hierarchy block refinements 
value max indicates maximum deviation meshes level fraction terrain width 

