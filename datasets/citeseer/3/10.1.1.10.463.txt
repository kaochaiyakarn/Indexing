sector secure tracking node encounters multi hop wireless networks jean pierre hubaux laboratory computer budapest university communications applications lca technology economics swiss federal institute department telecommunications technology lausanne epfl 
ch lausanne switzerland budapest hungary capkun epfl ch jean pierre hubaux epfl ch buttyan hit bme hu sector set mechanisms secure verification time encounters nodes multi hop wireless networks 
information notably prevent wormhole attacks requiring clock synchronization secure routing protocols encounters loose clock synchronization control topology network 
sec tor primarily distance bounding techniques way hash chains merkle hash trees 
analyze communication computation storage complexity proposed mechanisms show due efficiency simplicity compliant limited resources mobile devices 
categories subject descriptors computer communication networks security protection general terms security positioning keywords security mobile networks mobility security associations positioning supported part national competence center research mobile information communication systems mics center supported swiss national science foundation number www terminodes org 
acm workshop security ad hoc sensor networks october washington usa 

multi hop wireless networks keeping track node encounters crucial function research community devoted little attention far 
function detection wormhole attacks secure routing protocols history encounters detection cheating attempts charging mechanisms 
propose set mechanisms secure verification time encounters nodes multi hop wireless networks 
proposal enables node prove node base station encounters nodes specific time call sector secure tracking node encounters 
sector prevent wormhole attacks ad hoc networks requiring clock synchronization location information valid alternative solutions proposed problem 
sector help secure routing protocols mobile ad hoc networks history encounters illustrate fresh protocol enables efficient route discovery large scale ad hoc networks 
addition applied multi hop cellular network sector allows base station partially totally reconstruct network topology real time past time secure way 
information example network operator detection node misbehavior help base station securely position nodes located power range 
example application prevention charging multi hop cellular networks 
charging probabilistic micro payment scheme multi hop wireless networks mean networks communication partially totally relayed mobile nodes multi hop wireless networks include pure autonomous ad hoc networks ad hoc networks sporadic access backbone multi hop cellular networks proposed mechanism help operator identify inconsistencies may correspond fraud attempts 
example application sector topology monitoring mobile ad hoc networks secure knowledge node encounters help detecting attackers multiple nodes assigning identity 
research efforts reported propose various location verification mechanisms mobile networks extremely 
waters felten propose system proving location tamper resistant devices exchange rf messages 
system uses round trip time flight measurements devices 
similar protocol rf ultrasound devised sastry shankar wagner 
brands chaum proposed set efficient distance bounding protocols operate bit exchange rely measurements round trip time flight 
area ad hoc networks stajano recommends location limited channels provide authentication ad hoc networks 
balfanz channels location access control 
stressed research efforts aim securing information related location sector deals node encounters 
engineering sector carefully took limited memory computational resources mobile devices account 
proposed mechanisms primarily way hash chains merkle hash trees 
discuss public key cryptography considering dramatic computational cost show avoided 
way hash chains merkle hash trees secure various aspects routing 
hauser tsudik efficient mechanism authentication link state routing updates 
zhang improves mechanism presents chained merkle time signature 
hu perrig johnson propose set efficient security mechanisms routing protocols hash chains merkle hash trees 
hash chains efficiently secure distance vector routing updates sead prevent malicious changes hop count ariadne :10.1.1.132.4609
mechanisms sector differ complexity adapted security requirements organization network existence line line central authorities 
analyze communication computation storage complexity proposed mechanisms show due efficiency simplicity easily integrated variety multi hop wireless networks 
carried framework terminodes project 
organization 
section describe system model assumptions 
section explain mechanisms propose support secure verification encounters 
sections contain security performance analysis 
section describe potential applications 
conclude section 
system model assumptions describe mechanisms shortly describe system model assumptions 
system consists set mobile nodes may contain set fixed base stations 
nodes communicate radio transmissions 
nodes reside power range considered neighbors 
assume radio link neighbors bidirectional 
specific assumptions medium access control protocol nodes access radio channel 
nodes may form pure ad hoc network ad hoc network sporadic access backbone multi hop cellular network 
cases communication distant parties may involve multiple wireless hops 
specific assumptions routing protocol transfer packets source destination 
node local clock assume clocks nodes loosely synchronized 
mean difference clocks nodes typically smaller second 
loose time synchronization achieved scope 
note proposals developed 
assume nodes measure time locally precision 
proposed protocols mad assumes node equipped special hardware module temporarily take control radio transceiver unit node cpu 
assume help special hardware module bits transmit single bit involving cpu node 
words assume node put special state capable responding bit challenge bit response essentially immediately delay imposed usual way processing messages 
assume bits correctly transmitted meaning collisions jamming 
collisions occur jamming detected protocol terminated party detects 
assume nodes equipped positioning devices obtain geographical locations way 
assume node able generate cryptographic keys check signatures compute hash functions generally accomplish task required secure communications including agree cryptographic protocols nodes 
assume network operates central authority 
authority line meaning author ity operates line servers contacted network single hop multi hop communication offline meaning services authority reached network 
case authority controls network membership assigns unique identity node 
assume network nodes share pairwise secret keys hold authentic public keys 
achieved manually pre loading keys nodes network setup phase approach inflexible prevent new nodes network 
pairwise secret keys established probabilistic key distribution scheme line key distribution center tesla broadcast authentication key establishment scheme mobility nodes mutual node encounters :10.1.1.132.4609
observe parties claimant certifier verifier 
claimant node wants prove encounter node certifier happened specific time 
certifier node certifies time encounter point certifies claimant location time 
verifier node verifies claimant claim encounter certifier 
observe scenario nodes find power range want certify encounter 
scenario nodes play role certifier claimant node certifier node node certifier node ways convince verifier met 
nodes sends authentic channel message verifier met believe met verifier needs trust cheat 
second nodes send messages verifier stating encounter took place 
verifier receives messages believe met 
third approach encounter nodes exchange proofs encounter 
case node separately time prove verifier encountered node 
follow third approach appropriate systems frequent node encounter nodes need able prove encounters individually node 
note approaches convenient systems communication nodes guaranteed small fraction encounters verified incur large communication overhead 
observe verification scenarios 
scenario nodes network perform role claimant verifier certifier 
precisely enable node efficiently prove node encountered third node certain time 
scenario nodes network perform role claimant certifier single node subset nodes performs encounter verification 
scenario corresponds pure ad hoc networks scenario appropriate multi hop cellular networks base stations naturally perform encounter verifications charging purposes 

mechanisms encounter verification subsections describe mechanisms sector differ guarantees offer communication computation storage complexity 
describe mechanisms bound node distance mechanisms guarantee encounter freshness mechanisms guarantee time node encounters 
mutual authentication distance bounding mad section propose protocol mutual authentication nodes distance bounding call mad 
mad protocol enables nodes determine mutual distance time encounter 
mad protocol important mechanism secure encounter certification prevents false encounter certification caused wormhole mafia fraud attacks 
notion distance bounding protocols introduced brands chaum 
proposed technique enables party determine practical upper bound physical distance party 
main idea technique simple powerful fact light travels finite speed current technology easy measure local timings precision 
proposed distance bounding technique essentially consists series rapid bit exchanges parties 
bit sent party considered challenge party required send bit response immediately 
locally measuring time sending challenges receiving responses party compute upper bound distance party 
slightly modify distance bounding protocol proposed brands chaum better fits requirements 
protocol allows parties measure distance party simultaneously 
second avoid digital signatures 
protocol run frequently time nodes encounter standard digital signatures run protocol result unacceptable overhead 
base authentication symmetric key primitives 
precisely assume pair parties share symmetric key nodes established running distance bounding protocol 
key generate message authentication codes mac order prove authenticity messages exchanged distance bounding protocol 
denote mac function controlled symmetric key mack 
denote parties protocol shared key kuv 
protocol works follows see generate random numbers initialization phase generate random numbers compute commitment cu compute commitment cv cu cv distance bounding phase bits bits ri measure delay measure delay measure delay si measure delay authentication phase si ri verify cv verify cu operation mutual authenticated distance bounding protocol mad 
initialization phase uniformly generate numbers random 
numbers denoted numbers denoted bits long bits long 
compute commitment generated numbers collision resistant way hash function cu 
sends cu sends cv note random numbers generated commitments computed running protocol 
distance bounding phase bits denoted ri si respectively 
steps repeated times sends bit ri sends bit si immediately received node measures times sending receiving times sending receiving 
measured times estimate upper bound distance 
authentication phase computes bits si similarly computes bits ri mac sends sends verifies commitment cv mac correct verifies commitment cu mac correct 
protocol mac ensures authenticity exchange believe ran protocol distance estimated distance bounding phase really distance sending commitments initialization phase making bit sent phase dependent bit received party previous step ensures parties send bits early cheat party appearing closer really 
security protocol depends number bits exchanged distance bounding phase 
functions mac secure attacker successfully compromise protocol guessing value bits sending guessed bits respectively bits revealed respectively 
probability successful guess decreases exponentially 
guaranteeing encounter freshness gef having described sector protocol authenticated distance bounding propose mechanisms gef ce gef cecl guaranteeing freshness node encounters 
guaranteeing encounter freshness mean claimant prove verifier encounter certifier happened time actual encounter 
gef certifier authentication gef ce gef ce uses hash chains guaranteeing encounter freshness 
node creates hash chain vn choosing initial value uniformly random computing vi vi oneway hash function 
vn called root hash chain distributed nodes network authentic way 
node discloses elements hash chain hop neighbors reverse order respect generation vn proceeding 
simple disclosure scheme consists publishing chain elements regular time intervals 
length chain chosen expected number hash values need disclosed 
disclosure scheme enables node resides hop neighborhood get latest published value vi 
neighbor receiving vi verify authenticity hashing iteratively times comparing result vi pre distributed authentic root vn knowledge vi serves proof close prior time vi published 
words verifier typically check met certifier 
due simplicity mechanism efficiently implemented 
shown coppersmith jakobsson single hash chain length managed storing log log log hash values outputting chain elements cost log hash operations element 
mechanism requires node stores hash chain roots authentic hash chain roots nodes 
cost verification received hash value hash function computations significantly reduced storing hash chain roots node stores received authentic hash chain elements nodes 
clearly gef ce mechanism provides certifier claimant authentication means verified disclosed hash value verified value disclosed 
gef certifier claimant authentication gef cecl gef certifier authentication appealing due simplicity lacks claimant authentication provides weak protection malicious nodes discuss section 
multiple hash chains enable higher protection attacks somewhat higher storage cost 
mechanism works follows 
node creates different hash chains chain nodes network 
hash chain node associates node created way chooses initial value computes corresponding root value keeps initial values secret distributes root values chains nodes corresponding addresses nodes 
certify encounter nodes exchange addresses values hash chains previously created time instance 
way receiving hash value generated node nodes prove encountered node prior time 
main advantage mechanism single hash chain mechanism enables claimant authentication verification 
advantage computation complexity change number nodes 
storage requirement increases linearly number nodes network times higher gef ce mechanism log 
gef ce gef cecl mechanisms designed verification applied equally scenarios case cost distributing hash chain roots significantly reduced 
guaranteeing time encounter gte having simple mechanisms hash chains propose sophisticated mechanisms hash trees provide guarantees exact time encounters 
mechanism tree authenticated values efficient hash tree authentication mechanism 
merkle known merkle hash trees 
authenticate values vn place leaf nodes binary tree 
merkle hash tree construction commit values vn way 
value hashed avoid disclosing neighbor values authentication 
value vi hashes mi vi 
internal node binary tree derived child nodes 
consider derivation parent node mp left right child nodes ml mp ml 
compute levels tree recursively leaf nodes root node 
gte certifier authentication gte ce merkle trees guarantee time encounter 
scheme works follows 
node concatenates value release times random values create leaf values vn write vi randi represents time value vi released randi random value generated node th leaf value tree 
initial values generated blinded way hash function prevent disclosing neighboring values authentication information 
mi vi randi 
generates tree node distributes root tree nodes authentic way 
node releases time values order vn fixed time intervals starting predefined time siblings tree values enable node recompute root tree authenticate values 
example certifier releases value releases siblings 
values stored certifier neighborhood 
claimant presents value time rand example merkle hash tree authentication gte ce mechanism 
verifier proof encountered certifier time verifier authenticates received value extract time encounter time example 
authenticate received value computes checks corresponds previously received authentic root certifier 
similarly gef ce mechanism implemented efficiently 
shown merkle trees efficiently stored storing log log log hash values hash tree values efficiently computation cost log log log hash function operations output value 
mechanism requires node stores root hash values 
gte certifier claimant authentication gte cecl security problems gef ce inherent gte ce mechanisms certifier authenticated 
main problem gte ce possible verify source message certifier verifier sure encounter really happened claimant node disclosed authentic value claimant 
order prevent similar attacks similar mechanism hash chains 
node creates hash trees tree node network 
consequently distributing node suppose distribute root values node enabling authentication certification verification encounter 
call mechanism gte cecl basic 
creating trees distributing number roots expensive requires storing log log log tree values roots node 
certifier claimant authentication achieved efficiently node maintains single 
propose creating hash trees size leaf nodes node creates single tree size divides equal parts 
encounters certifier releases claimant values allocated claimant node values range 
call mechanism optimized gte cecl denote gte cecl opt 
operation gte cecl opt shown 
gte cecl opt efficient terms storage requires node store log nn log log nn hash values hash tree roots versus log log log hash values roots gte cecl basic 
computational cost output value gte cecl basic gef ce mechanism log log log hash operations case gte cecl opt computational cost output value slightly higher log nn log log nn hash operations 
example gte cecl mechanism shown 
values iv iv represent values hash tree created node certify encounters node time instance example shown assume node allocates leaf time values node network 
corresponds example trees shown figures 
protocol nodes release values associated time values released second 
gte ce gte cecl gte cecl opt designed primarily verification scenarios appropriate mobile ad hoc networks 
conventional symmetric key public key mechanisms conventional approach solving addressed problems rely classical symmetric key public key techniques 
show drawbacks respect solutions described publickey cryptography high computation cost symmetric key cryptography hardly implemented verification scenario 
public key cryptography certifier certifies encounter computing signature timestamp distributing neighbors 
authenticated version mechanism includes authentication neighbor computation signature timestamp identity neighbor neighbor receives distinct message 
verification encounter mechanism straightforward verifier knows authentic public key certifier 
secure mechanism assumes nodes jointly sign timestamp respective identities encounter prevents cheating nodes collude 
public key implementation equally appropriate encounter verification 
main disadvantage high cost public key operations orders magnitude slower conventional symmetric key hash chain operations 
similar approach symmetric key cryptography 
symmetric key approach appropriate verification describe operation scenario 
certifier computes message authentication code node node tree authenticated values optimized gte cecl mechanism 
node creates single hash tree leaf values values node network 
encounter certifier releases value siblings corresponds claimant encountered time instance encountered 
timestamp key shares base station sends timestamp neighbors 
certifier neighbors store values prove encounters base station 
authenticated version mechanism assumes mutual authentication encountering nodes means shared secret key mad 
authenticate nodes compute macs timestamp id keys share base station 
macs serve proofs encounter 
advantage symmetric key mechanism resides simplicity resilience various attacks 
main drawback mainly limited verification scenarios 
distribution authentic roots mechanisms described previous subsections require node distribute hash chain hash tree roots authentic way node network 
briefly describe performed assumption line central authority system 
explain mechanisms terms distributing root single hash chain node distribute multiple hash chain roots single multiple hash tree roots identical way 
approaches node maintains hash chains active pending 
assume root active hash chain distributed active hash chain guaranteeing encounter freshness described previous subsections 
contrast root pending hash chain distributed goal node distribute node network active hash chain runs elements 
root pending hash chain distributed node turn pending hash chain active state 
time node generate new pending hash chain distributing root 
putting place pending hash chains active ones ensures continuous operation system 
describe possible approaches 
node approach assume line central authority issues public key certificates node network initialization time 
order distribute root pending hash chain node digitally signs root floods network signed message public key certificate 
node receive new hash chain root authenticate verifying signature public key certificate envisage approach hash chains long days running elements result signature verifications performed rarely 
second approach similar hash chains short hours 
approach node floods network signed root pending hash chain case tesla signing 
specifically signs root th pending hash chain th tesla key floods signed message previous tesla key attached 
disclosed tesla key node authenticate root th pending hash chain sent previous flood active 
tesla symmetric key cryptographic primitives authentication hash chain roots done efficiently 
roots tesla key chains distributed messages signed publickey cryptography tesla key chains distributed frequently 
third approach root pending hash chain disseminated authentic way mobility scheme proposed 
root pending hash chain nodes disseminate time 
value estimated way active hash chain run elements execution mutual authenticated distance bounding mad start gte cecl certification select hash tree select hash tree value corresponds value corresponds time time mu mu mu 
mv mv mv gte cecl certification verifier start gte cecl verification verifier authentication mv mv mv gte cecl verification 
root encounter verification correct refuse verification example execution protocol guaranteeing time node encounters gte cecl 
root pending hash chain distributed nodes time pending hash chain active new pending hash chain generated process repeated 

security analysis having protocols analyze resistance various attacks 
attacker model call node malicious controlled central authority controlled attacker positively authenticate honest network nodes 
call node compromised positively authenticate honest network nodes controlled attacker 
assume node compromised secret keys secrets shares nodes known attacker 
compromised node nodes indistinguishable honest node 
assume node compromised detected honest nodes central authority time 
distinguish attackers number malicious compromised nodes control 
attacker denote attacker controls malicious compromised nodes :10.1.1.132.4609
focus types attacks attack cl attacker plays role claimant tries convince honest verifier attacker encountered honest certifier time really different time 
attack ce attacker plays role certifier tries convince honest claimant attacker honest certifier tries falsify 
attack cecl attacker controls nodes plays role claimant role certifier tries convince honest verifier certifier claimant met really met attacker tries convince verifier met different time time actual encounter 
attack attacker plays role verifier tries extract encounter information honest claimant order information prove honest verifier encountered nodes honest claimant met 
proposed mechanisms contain mutual way authentication nodes certification verification 
mechanisms implicitly assume verifier claimant perform mutual authentication verify prove encounter 
claimant certifier authentication certification encounter implemented mechanisms 
mechanisms gef ce gef cecl gte ce gte cecl implicitly contain authentication certifier claimant authentication claimant certifier 
mad mechanism assumes mutual authentication claimant certifier 
combination mad time freshness mechanisms ensure full security system implemented 
resistance attacks gef ce gte ce gef ce gte ce include authentication certifier claimant authentication claimant certifier 
node easily get authentic values certifier distribute nodes 
allows attacker share receiver hash value nodes controls successfully prove met certifier time attack cl 
attacker controls single compromised node successfully attack gef ce gte ce mechanisms requesting node prove encounters values proof encountered nodes attack 
attacker successfully perform attack ce gef ce gte ce convince honest claimant honest certifier met power range 
achieved creating wormhole honest parties attack ce 
gef ce gte ce mechanisms vulnerable attacks performed attackers control malicious nodes attacker attacks performed attackers control single compromised node attacker 
mechanisms resistant attacks attackers control single malicious compromised node attacker 
gef ce gte ce mad gef ce gte ce mechanisms authenticated distance bounding mad resistant attacks mad provides distance bounding mutual authentication certifier claimant 
mad gef ce gte ce resistant attack cl attack ce attacks performed attacker controls multiple malicious nodes attacker attacks performed attacker controls single compromised node attacker 
gef ce gte ce mad resistant attack performed attacker controls multiple malicious nodes attacker attacks attacker 
gef cecl gte cecl mad analyze gef cecl gte cecl mechanisms mad mechanism 
mechanisms stronger gef ce gte ce bind released hash values identity claimant value reused node claimant proving encounter certifier 
precisely hash value released certifier uniquely binds certifier claimant 
due improvement gef cecl gte cecl mad resistant attack cl attack attacks performed attacker 
mean matter malicious compromised nodes attacker controls convince honest verifier believe malicious compromised claimant certifier honest 
way malicious verifier extract information honest claimant help prove claimant met honest certifier guaranteed hash values uniquely bind certifier claimant time encounter 
gef cecl gte cecl mad mechanisms attack ce attacks performed attacker attacker 
single certifier compromised convince honest claimant met met 
gef cecl gte cecl mad attack ce attack cl performed attacker broader sense way cheat attacker delegate identity nodes controls 
nodes needs meet honest claimant certifier able claim nodes met certifier claimant claim identity encounter 
multiplying exchanging identities detected nodes consistency check encounters 
public key symmetric key mechanisms mechanisms typically exhibit level security gte cecl gef cecl mechanisms mad provide authentication certifier verifier claimant 
attacks attacks envisioned proposed mechanisms especially attack cecl discussed far 
attack attacker controls compromised nodes easily convince verifier nodes met 
topology tracking consistency checking false encounters detected especially nodes actively participate network operation 
chance attacker remove nodes network range claim mutually encountered 
time nodes encounter network nodes 
know useful attack attacker 
discussed additional attacks performed attacker uses compromised identity nodes 
attack prevented detected topology tracking 
attack ce attacker powerful limited single attacker isolated reputation mechanisms 

performance analysis analyze detail storage computation communication overhead proposed mechanisms summary shown 
conclude mechanism gef ce lowest cost provides lowest level protection attacks provides freshness guarantees gte cecl mechanism provides highest level protection exact time guarantees slightly higher cost 
consider mobile ad hoc network nodes hash chain roots updated approximately days hash values released second 
network gef ce mechanism induces costs 
node stores hash values log number seconds days root values secret keys means node stores kb information 
computation cost equally small release hash value node needs perform hash operations log number seconds days number values mechanism storage cost computation cost communication cost gef ce log log gef cecl log log gte ce log gte cecl basic log log log log log log log log log gte cecl opt log log log log log public key nn log log nn log nn log log nn signature log nn symmetric key encryption communication cost certification node computation cost certification node storage cost node proposed mechanisms number nodes number time intervals hash chain merkle tree pre computed 
chain 
computation cost small mhz pentium ii processors running windows perform hash operations second 
important mention mhz processors available today pdas hp pocket pcs 
communication cost gef ce low mechanism assumes exchange single hash value bits encounter 
worth noticing gef ce gte ce mechanism cost scales size network communication computation costs mechanisms depend number nodes network 
higher security time guarantee needed gte cecl opt mechanism implemented network costs somewhat higher 
storage cost node approximately hash values secret keys kb 
corresponding computation cost hash tree value hash chain operations 
communication cost gte cecl opt higher gef ce gte ce amounts hash values bytes encounter node 
cost significantly reduced expense initially distributing nodes hash tree roots lower hash tree layer values 
approach somewhat increases storage cost node reduces cost subsequent communication 
symmetric key mechanism lowest communication storage cost suitable encounter verifications typically multi hop cellular networks 
public key mechanism exhibits low communication storage costs inefficient terms computation cost public key operations approximatively orders magnitude slower symmetric key hash operations 
additional merit proposed mechanisms cumulative storage cost meaning cost storing encounter proofs received nodes 
gef ce gte ce cost exactly number encounters multiplied hash value size bits 
cost precisely measured depends rate change network topology notably number different nodes node encounters period desired granularity encounter tracking 
illustrate cost simple example 
assume granularity encounter tracking second means nodes update encounters neighbors second 
mean days node stores mb hash chain values 
necessary node stores encounter node second corresponding hash values especially nodes stay power range longer period time 
node store fraction encounters node encounters consecutive minute 
storing fraction encounters nodes nodes significantly reduce cumulative storage cost node stores encounters node minute need store kb mb 
fine granularity encounters required node saves proofs encounter storage required mb mechanisms implemented today personal portable devices equipped mb storage space 
aspect cumulative storage cost question necessity keep days old network topology information 
related issues part 

applications section briefly examples applications sector 
prevention wormhole attacks wormhole attacks wireless networks discussed researchers including papadimitratos haas hu perrig johnson 
wormhole fast tunnel wireline link nodes typically physically far 
link take hops packet transmitted nodes wormhole transmission fast requires hop 
normally useful enable faster communication nodes malicious users prevent correct operation routing protocols 
authors propose mechanism called packet leashes aims preventing wormhole attacks making geographic location nodes geographic leashes transmission time packet nodes temporal leashes 
mechanism authors assume internal clocks nodes precisely synchronized 
approach assumptions clock synchronization nodes assume nodes equipped positioning devices 
detect wormhole attacks mad protocol 
protocol applies principle packet leashes difference measures distance single node packet leashes distance measured calculating difference time location nodes 
mad important advantage packet leashes node perform distance bounding having trust party case packet leashes nodes detecting trust exchanged information time location 
way mechanisms help detect wireless networks topology encounter tracking gte mechanisms 
base station node collects network topology information identify wormhole links comparing obtained encounter information 
topology tracking application consider topology tracking 
topology tracking performed base station multi hop cellular nodes pure ad hoc networks 
multi hop cellular networks case base station performs topology tracking mad protocol distance bounding nodes symmetric key mechanisms certify time encounter 
nodes receive hello messages run mad protocol verify mutual distance smaller power range 
case computes mac mack ubs shared key base station bs distance estimated time flight measurements performed node similarly computes mack 
nodes exchange computed macs values contain 
proofs encounters passed base stations nodes get power range periodically sent base stations nodes 
furthermore base stations periodically pool nodes latest encounters 
collected encounter information network authority reconstruct history node encounters history network topology 
information useful network operator observe node behavior prevent detect security breaches identify cheating nodes 
pure ad hoc networks enable topology tracking pure ad hoc networks mechanisms different multi hop cellular networks notably gte cecl mad 
multihop cellular networks mad mechanism ensures distance bounding nodes 
hybrid networks symmetric key mechanisms allow efficient verification encounters 
gte cecl 
node creates single merkle tree leaf values node network 
root tree distributed nodes leaf value allocated node see 
nodes meet run mad distance bounding protocol exchange hash values discloses value corresponds time node siblings tree 
values stored serve proof node network met 
performs similar operation discloses tree value corresponds time node value serves proof met node network collect proofs encounters verify detect node misbehavior cheating 
security encounter routing dubois grossglauser vetterli approach called fresh efficient route discovery mobile ad hoc networks encounter ages 
show nodes keep track time encounters route discovery performed lower cost traditional broadcast search methods 
node maintains local database time encounter nodes network 
database consulted packets obtain estimates destination encounter 
packet travels destination able successively refine estimate node mobility diffused estimates times encounters 
step destination search node receives packet performs restricted broadcast queries neighbor nodes encounter destination 
original proposal route discovery mechanism secured dishonest node example advertise encounter destination packet prevent packet reaching destination 
prevent apply gef ce gef cecl mechanisms mad 
node broadcasts request node encounter destination nodes need reply hash value proves encounter 
node correctly verified encounter chosen relay 
introducing gef ce gef cecl route discovery costly requires node authentication mad exchange hash values 

sector set protocols secure verification time encounters nodes 
built protocols established cryptographic techniques including hash chains merkle hash trees 
shown adapt protocols specific requirements application 
explained overhead reasonable assessed robustness respect attackers different degrees strength 
applied solution problems including prevention wormhole attacks securing routing protocols encounters cheating detection means topology tracking 
best knowledge address problem securing topology encounter tracking exception prevention wormhole attack previously investigated researchers 
terms intend study detail behavior proposed protocols notably means simulations different mobility scenarios 
show approach useful conventional hop wireless networks base stations access points completely trusted 

balfanz stewart wong 
talking strangers authentication ad hoc wireless networks 
proceedings ndss 
ben salem 
hubaux jakobsson 
charging rewarding scheme packet forwarding multi hop cellular networks 
proceedings mobihoc 
gligor 
bootstrapping security associations routing mobile ad hoc networks 
technical report tr university maryland may 
brands chaum 
distance bounding protocols extended 
theory application cryptographic techniques pages 
buchegger le boudec 
performance analysis confidant protocol cooperation nodes fairness dynamic ad hoc networks 
proceedings mobihoc lausanne june 
chan perrig song 
random key predistribution schemes sensor networks 
ieee symposium security privacy may 
coppersmith jakobsson 
optimal hash sequence traversal 
proceedings fifth conference financial cryptography fc 

hubaux mobility helps security ad hoc networks 
proceedings mobihoc 
desmedt 
major security problems unforgeable feige fiat shamir proofs identity 
dubois grossglauser vetterli 
age matters efficient route discovery mobile ad hoc networks encounter ages 
proceedings mobihoc 
hauser tsudik 
reducing cost security link state routing 
proceedings ndss february 

hu perrig johnson 
packet leashes defense wormhole attacks wireless networks 
proceedings ieee infocom april 

hu johnson perrig 
sead secure efficient distance vector routing mobile wireless ad hoc networks 
proceedings fourth ieee workshop mobile computing systems applications june 
:10.1.1.132.4609
hu perrig johnson 
ariadne secure demand routing protocol ad hoc networks 
proceedings mobicom september 

hu perrig johnson 
efficient security mechanisms routing protocols 
proceedings ndss february 

hubaux th 
gross 
le boudec vetterli 
self organized mobile ad hoc networks terminodes project 
ieee communications magazine january 
jakobsson 
hubaux scheme encouraging collaboration multi hop cellular networks 
proceedings th financial cryptography conference 
jakobsson leighton micali 
fractal merkle tree representation traversal 
rsa cryptographers track 
merkle 
protocols public key cryptosystems 
proceedings ieee symposium security privacy 
papadimitratos haas 
secure routing mobile ad hoc networks 
proceedings cnds january 
peirce 
multi party electronic payments mobile communications 
phd thesis 
perrig canetti tygar song 
tesla broadcast authentication protocol 
rsa cryptobytes summer 
romer 
time synchronization ad hoc networks 
proceedings mobihoc 
levine shields belding royer 
secure routing protocol ad hoc networks 
proceedings icnp 
sastry shankar wagner 
secure verification location claims 
technical report ucb csd eecs ucb 
stajano 
security ubiquitous computing 
john wiley sons february 
waters felten 
proving location tamper resistant devices 
technical report princeton university www cs princeton edu research location proving ps zhang 
efficient protocols signing routing messages 
proceedings ndss march 
