new point cloud simplification algorithm carsten computer laboratory university cambridge jj thomson avenue cambridge cb fd uk email cm cl cam ac uk new technique simplification geometry prior surface reconstruction 
fast marching farthest point sampling implicit surfaces point clouds devise coarse uniform feature sensitive simplification algorithm user controlled density guarantee 
algorithm computationally memory efficient easy implement inherently allows generation progressive multiresolution representations input point set 
key words point cloud simplification farthest point sampling fast marching 
due advances surface acquisition techniques object boundary surfaces commonly acquired accuracy 
initial output acquisition devices laser range scanners generally consists point clouds considerable redundancy 
part typical mesh processing pipeline point sets converted polygonal mesh representations substantial size help computation memory demanding surface reconstruction algorithms 
size resulting meshes frequently processing prior costly mesh simplification impossible 
point cloud simplification represents attractive alternative process 
simplifying point set subsequent surface reconstruction significantly faster mesh simplification obsolete 
point cloud simplification tends computationally efficient memory demanding mesh simplification mesh data structures need maintained 
furthermore increasing availability powerful point modelling multiresolution visualisation techniques simplification dense point clouds subsequent point polygonal mesh processing significant interest :10.1.1.20.7968
subject user controlled minimum density condition consider problem simplifying neil computer laboratory university cambridge jj thomson avenue cambridge cb fd uk email nad cl cam ac uk densely non uniformly distributed unstructured point cloud pn target model size 
point set assumed represent surface smooth manifold boundary model 
previous dey point cloud simplification algorithm user controlled density guarantee detects redundancy input point cloud help cocone local feature size concepts 
decimation inherently sensitive changes local curvature supports high quality reconstructions 
algorithm allow adaptive decimation driven changes measure addition local curvature 
method requires computation maintenance voronoi diagrams tends computationally memory expensive 
boissonnat introduce coarse fine point cloud simplification approach 
algorithm takes random initial subset input point cloud uses delaunay triangulation define signed distance function set 
implicit function enlarge initial set significant number points lie user defined approximation error tolerance 
second final step enlarged subset delaunay triangulated surface mesh reconstructed 
initial surface meet error condition additional points inserted iteratively sorted distance closest surface facet 
method delivers reconstructed simplified mesh simultaneously 
algorithm point cloud simplification step costly due construction maintenance delaunay triangulation 
increasing usefulness point processing algorithm restriction triangular meshes output undesirable 
associates information content measure input point subsequently removes points featuring lowest entropy :10.1.1.20.7968:10.1.1.20.7968
information measure allows local curvature rgb colour changes 
algorithm simple produces visually appealing results gives guarantees density output point set 
extremely non uniformly distributed input point sets necessarily result simplified point sets insufficient density 
similarly highly dense input point clouds may simplified prohibitively unevenly distributed output point sets 
case resampling input cloud may necessary support effective processing 
important pauly adapt various widely mesh simplification techniques point cloud simplification scenario 
quadric error iterative simplification method produces point sets low approximation error sensitive execution time size input point set 
authors particle simulation technique results point sets low average error generally relatively inefficient compute 
pauly uniform incremental clustering method computationally efficient expense relatively high average approximation error naturally extensible adaptive feature sensitive simplification 
hierarchical clustering algorithm execution time memory efficient feature sensitive version produces point sets approximation error slightly lower introduced uniform incremental clustering 
alexa uniformly reduce point cloud redundancy estimating point contribution moving squares mls representation underlying surface 
points contributing subsequently removed 
similar algorithm method guarantee absence insufficiently dense output point sets :10.1.1.20.7968
alexa suggest resampling method computes planar voronoi diagram representations undersampled mls surface regions 
density point set increased iteratively choosing vertex voronoi diagram farthest away surface points diagram 
process repeated euclidean distance sampling candidate nearest point user specified threshold 
contribution fast marching farthest point sampling method implicit surfaces point clouds new coarse fine point cloud simplification algorithm need prior surface reconstruction 
algorithm execution time memory efficient uniform adaptive feature sensitive form 
user controlled density output point set guaranteed guaranteeing availability point set sufficiently dense meaningful processing 
uniform version method produces irregular hole free point sets exhibiting excellent anti aliasing properties 
method allows feature sensitive simplification form combination point weights local surface variation colour difference estimates computed fly imported form pre computed importance maps 
coarse fine nature algorithm inherently supports generation progressive multiresolution representations input point cloud 
algorithm closest nature alexa resampling method 
contrast simplification method coarse fine require resampling guarantee user requested point set density 
furthermore algorithm supports uniform feature sensitive point cloud simplification 
voronoi diagrams computed method represent true discrete surface voronoi diagrams local planar approximations 
result point sets returned algorithm uniform version truly irregularly uniform deterministic sense retain excellent spacefilling anti aliasing properties typical farthest point sequences 
point cloud simplification introduce coarse fine point cloud simplification algorithm 
start briefly summarising underlying technique followed presentation simplification algorithm 
fast marching farthest point sampling implicit surfaces point clouds farthest point sampling intuitively idea minimising reconstruction error repeatedly placing sample point middle area sampling domain 
show case farthest point sequence location point sampled coincides vertex bounded voronoi diagram previously selected set samples 
incremental voronoi diagram construction provides farthest point samples progressively 
farthest point sample point cloud algorithm computes discrete voronoi diagrams form weighted distance maps incrementally directly input point set 
achieved efficiently need prior surface reconstruction sapiro extension original fast marching level set method 
sapiro extended fast marching technique considers closed hyper surface rm zero level set distance function rm 
offset ofm union balls centred surface points radius smooth sufficiently small manifold smooth boundary 
compute weighted distance map originating source point propagating speed sapiro suggest euclidean distance map approximate intrinsic distance map tm boundary condition propagation source point tm approximated boundary condition 
represents smooth extension problem computing intrinsic distance map transformed problem computing extrinsic distance map euclidean manifold boundary 
sapiro subsequently show fast marching method approximate solution computationally optimal manner slightly modifying original fast marching technique deal bounded spaces 
sapiro prove algorithm log complexity representing number grid points details see sapiro 
new point cloud simplification algorithm simplicity consider formulation uniform point cloud simplification strategy 
algorithm proceeds embedding point cloud pn cartesian grid sufficiently large allow thin offset band details determination optimal size see 
initial subset input points construct simultaneously propagating fronts initial points outwards 
propagation grid points considered 
process equivalent computation euclidean distance map achieved solving single min heap 
vertices grid points entered propagation waves points domain boundary obtained product propagation process 
voronoi vertices arrival times inserted max heap data structure 
algorithm proceeds extracting root max heap grid location represents location output point 
point inserted resetting arrival time zero propagating front away 
front continue propagating hits grid points featuring lower arrival times belonging neighbouring voronoi cells 
values updated grid points updated correspondingly min heap back pointers 
new obsolete voronoi vertices inserted removed max heap respectively 
algorithm continues extracting root max heap user defined density condition met target model size reached 
density condition formulated terms maximum distance points permitted user 
simplified point set refined farthest point candidate distance map value longer larger user threshold 
shows effect different values density simplified point set 

effect different user controlled minimum density values density simplified point set 

points selected equivalent points directly time projecting sample points surface 
algorithm summarised follows embed point cloud cartesian grid sufficiently large allow offset band size initial point cloud subset compute propagating fronts speed pi points outwards extended fast marching 
store voronoi vertices arrival times max heap 
extract root max heap obtain sn 
sn 
compute propagating front locally sn outwards extended fast marching single min heap 
correct arrival times updated grid points min heap 
insert vertices bounded voronoi cell sn bv sn max heap 
remove obsolete voronoi vertices neighbours bv sn max heap 
user controlled point density target model size reached loop 
allowing pi vary positive weight associated points pi algorithm supports flexible feature sensitive simplification 
weighting pi example local surface variation colour difference estimates points concentrated regions change curvature colour 
feature sensitivity estimates may computed fly front propagation local neighbourhoods time readily available bounded voronoi diagram 
alternatively point weights may passed algorithm form importance map 
allow density point cloud simplified uniformly density requirement met 
remaining target model budget distributed sensitively local features 
regards complexity algorithm extracting root inserting max removing max heap subsequent re log operations represents number elements heap 
representing number grid points offset band updating arrival times existing min heap entries due back pointers grid heap 
detection bounded voronoi cell vertices required boundary product log front propagation 
algorithm asymptotic efficiency log 
worked examples discussion start considering uniform simplification point clouds acquired surface genus venus model genus cad object respectively 
simplicity radius union balls making thin offset band set constant 
figures simplified point sets produced algorithm various levels detail renderings corresponding reconstructed triangular meshes 
irregular uniformity simplified point sets evident cluster hole free coverage surfaces 
results excellent anti aliasing properties seen quality renderings relatively strongly simplified point sets 
anti aliasing property alongside coarse fine level detail nature algorithm yields immediate support applications progressive transmission content limited bandwidth channel generation multiresolution representations 

uniformly simplified venus point sets renderings mesh reconstructions 
simplified 
simplified 
simplified 

uniformly simplified point sets genus object renderings mesh reconstructions 
simplified 
simplified 
simplified 
demonstrate algorithm simplification adaptively simplify point set sampled surface isis model shown 
simplicity consider case simplification 
locally estimate surface curvature fly input point cloud firstly querying voronoi diagram generated simplification algorithm obtain set npi nearest neighbours input point pi weighted 
secondly determination centroid npi variance matrix cnp points npi cen computed 
eigenanalysis symmetric positive semi definite matrix cnp may obtain local curvature approximation 
follow pauly considering ratio eigenvalue corresponding eigenvector direction local surface normal sum eigenvalues weight wi pi 
pi wi 
illustrates feature sensitive effect weights distribution resulting point set 
points relatively strongly concentrated regions change curvature 
indicated excessive irregularity resulting point sets meaningful processing may avoided strengthening density condition 
reduction value increases uniformity expense adaptivity 
shows quality renderings supported point sets produced high degree simplification 
computational efficiency 
section determined algorithm worst case complexity log denoting number grid points presents uniform simplification execution times obtained experimentally 
figures indicate practice algorithm benefits coarse fine nature form favourable execution time functions 
performance weakly affected substantial increases input model target model size 
point set distribution 
purposes processing simplified point set surface reconstruction texture synthesis distribution frequently re 
feature sensitively distributed point sets generated adaptive simplification local curvature estimation rendering corresponding mesh reconstructions 

quired meet uniform density requirement 
illustrated figures algorithm meets requirement account density parameter 
desired degree uniformity enforced irrespective degree uniformity input point set 
due surface voronoi diagram covering undersampled regions input point cloud undersampled regions automatically adjusting required 
memory efficiency 
algorithm executes core grid data structure holding offset band min max heap 
memory requirements grid data structure depend size input point cloud radius balls centred input points determine grid points included radius may allowed vary adaptively alongside grid density 
approximate upper limit memory requirement follows ai denotes length point cloud bounding box ith direction representing small constant varying proportionally grid density 
single min heap propagate multiple fronts simultaneously 
part fast marching method fronts propagated direction increasing distance size substantially smaller size offset band time 
max heap 
renderings meshes reconstructed point sets generated adaptive simplification local curvature estimation 
simplified 
simplified 
simplified 
original model points 
hold farthest point candidates 
memory requirements vary magnitude density parameter target model size respectively generally fraction input model size 
approximation error 
qualitatively indicated figures relatively small target model sizes uniformly feature sensitively generated point sets allow visually appealing reconstructions 
objective quantitative evaluation extent geometric error introduced simplification working automatic analysis tool exploits availability dual surface voronoi diagram delaunay triangulation point sets compute distance surfaces represented input output point sets 
new point cloud simplification algorithm user controlled density guarantee 
algorithm computationally memory efficient easy implement requires intermediate prior surface reconstruction 
uniform point cloud simplification algorithm allows high quality processing need prior resampling 
feature sensitive simplification may driven combination point weights including colour differences changes curvature 
coarse fine nature algorithm naturally supports generation progressive multiresolution representations input point cloud 

simplification times seconds pentium mhz windows machine mb main memory 
execution time function input model size simplification input point sets 
execution time function target model size 
currently working automatic tool quantitative analysis approximation error introduced algorithm 
interested incorporating method detection noisy measurements input point set need smoothing point clouds produced typical surface acquisition devices obsolete 
extend algorithm support partial core processing 
investigating generation selectively refined multiresolution representations input point sets simplification algorithm 
malcolm sabin michael mark marc numerous helpful discussions 
point sets obtained cyberware stanford scanning repository web sites 

fast marching farthest point sampling implicit surfaces point clouds 
computer laboratory technical report university cambridge uk 
:10.1.1.20.7968
point cloud representation 
cs technical report universit karlsruhe germany 
pauly kobbelt gross 
multiresolution modeling point sampled geometry 
cs technical report eth rich switzerland 
pfister zwicker van baar gross 
surfels surface elements rendering primitives 
sig graph annual conf 
series new orleans usa 
alexa cohen levin silva 
point set surfaces 
proc 
th ieee visualization conf san diego usa 
dey hudson 
decimating samples mesh simplification 
proc 
th canadian conference computational geometry waterloo canada 
amenta choi dey 
simple algorithm homeomorphic surface reconstruction 
proc 
th annual acm symposium computational geometry hong kong 

boissonnat 
coarse fine surface simplification geometric guarantees 
euro graphics conf 
proc manchester uk 
pauly gross kobbelt 
efficient simplification point sampled surfaces 
proc 
th ieee visualization conf boston usa 
gonzalez 
clustering minimize maximum intercluster distance 
theoretical computer science 
lindenbaum 
farthest point strategy progressive image sampling 
ieee trans 
image processing 
okabe boots sugihara 
spatial tessellations 
nd ed 
chichester uk john wiley sons 
sapiro 
fast computation weighted distance functions geodesics implicit hyper surfaces 
journal computational physics 
sapiro 
distance functions geodesics point clouds 
technical report ima university minnesota usa 
sethian 
level set methods fast marching methods 
nd ed 
cambridge uk cambridge university press 
