querying text databases efficient information extraction eugene agichtein luis gravano columbia university mail eugene gravano cs columbia edu wealth information hidden unstructured text 
information best exploited structured relational form suited sophisticated query processing integration relational databases data mining 
current information extraction techniques extract relations text database examining document database filters select promising documents extraction 
exhaustive scanning approach practical feasible large databases current filtering techniques require human involvement maintain adopt new databases domains 
develop automatic query technique retrieve documents useful extraction user defined relations large text databases adapted new domains databases target relations minimal human effort 
report thorough experimental evaluation large newspaper archive shows significantly improve efficiency extraction process focusing promising documents 
text documents hide valuable structured data 
example newspaper archive contains data useful analysts want track mergers acquisitions government agencies interested monitoring tracing back infectious disease outbreaks reflected news 
information extraction systems produce structured representation information buried unstructured text documents 
improving efficiency information extraction systems large text databases focus 
general state art extraction systems apply rules available text segment determine segment fill value attribute tuple 
processing document relatively expensive typically involves steps named entity tagging identifying person names dates syntactic parsing rule matching 
approach feasible large databases web realistic tag parse simply scan available document 
example highly optimized state art information extraction system requires seconds process average sized newspaper article high workstation 
result days processing time required document archive 
document database size commonly exceeding millions documents processing time bottleneck exploiting information extraction technology time critical applications leveraging extracted information relational databases 
previous approaches addressing high computational cost information extraction resorted document filtering select documents deserve processing information extraction system 
filtering requires scanning complete database consider document 
alternative approaches keywords phrases filters converted queries manually crafted tuned information extraction system developers discuss 
address scalability information extraction systems principled general manner 
introduce automatic query techniques identify database documents promising extraction relation text arbitrary information extraction system assuming minimal search interface text database 
techniques possible information extraction system operate large text databases web retrieving set documents worth analyzing proceeding usual extraction process smaller document set 
approach automatically discovers characteristics documents useful extraction target relation starting handful user provided examples tuples relation extract 
tuples system retrieves sample documents database 
running information extraction system documents identify documents useful extraction task hand 
apply machine learning information retrieval techniques learn queries tend match additional useful documents 
documents retrieved learned queries processed information extraction system extract final relation 
contributions key contribution unsupervised query method retrieving useful documents information extraction large text databases 
method requires document database support minimal query interface independent choice information extraction system 
furthermore method query standard web search engine providing infrastructure efficient information extraction web large 
related information extraction long focus active research 
main emphasis research notably context message understanding conferences quality extracted relation 
contrast assumes information extraction system focuses retrieving relatively small set documents allow extraction close approximation target relation efficiently 
related problem question answering 
question answering systems attempt find answers natural language questions collections text documents 
systems typically process question individually 
scenario interested extracting complete relation tuples relation 
extracted relation viewed set prepared answers particular class questions location headquarters 
question answering techniques may useful retrieving specific tuples target relation problem retrieving documents collectively contain complete relation addressed question answering literature best knowledge 
related research focused web crawling addresses problem fetching web pages relevant topic 
proposed technique tuned information extraction operates searchable text database contents 
addresses problem crawling hidden web portion web hidden search forms 
goal different attempt extract complete relation text database retrieving documents possible 
subtask muc evaluations text filtering 
task participating system judge documents relevant extraction scenario 
documents filtered various stages extraction process 
systems classified input documents single words word grams prior doing processing manually constructed keywords phrase filters discard documents 
classification approach required manually labeled documents training classifiers 
systems developed filters extraction patterns devised extract target relation 
section evaluate related strategy uses queries derived extraction patterns 
contrast techniques goal automatically generate standard search engine queries general filters retrieve relevant documents extraction task 
evaluation uses ideas related 
authors consider manually generated keywords originally compiling test documents muc evaluation 
keywords submitted web search engine resulting documents processed extraction system evaluated relevance extraction scenario 
different setting compiling conference calls papers extracted web documents uses combination focused crawling manually generated queries retrieve promising documents 
section evaluate related manual query strategy compare automatic query generation method 
problem retrieving documents relevant user information need core focus information retrieval ir field 
problem different nature exploit state art term weighting query expansion results ir design variant system section 
alternatively characterization useful documents viewed traditional classification problem 
explore number machine learning techniques design variants system section :10.1.1.50.8204
techniques supervised learning devise queries match documents specific category interest 
constructed topic specific directories web training classifier labeled set documents deriving queries retrieve additional documents 
flake extracted category specific query modifications non linear svm classifier 
ghani technique similar spirit current different task identifying web pages minority language querying search engine 
technique starts set web pages fed language identifier labeled positive negative examples 
set pages derive boolean queries tend identify pages language choice process iterates 
efficient information extraction consider query generation techniques term weighting scheme related techniques query generation strategies exploit machine learning results 
rest organized follows 
section presents new document retrieval method detail 
input documents named entity tagging pattern matching output tuples information extraction system brent barlow software analyst beta tester apple computer headquarters cupertino fired monday thinking little different doc doc person brent barlow person software analyst beta tester organization apple computer organization headquarters location cupertino location fired monday thinking little different doc organization apple computer extraction patterns location cupertino pattern tid organization location eastman kodak rochester apple computer cupertino doc organization headquarters location organization location useful doc doc 
extracting tuples headquarters relation 
output section summarizes general experimental setting including evaluation methodology metrics databases tuning evaluating strategy 
section reports results experimental evaluation technique strategies large text database 
section concludes 
retrieving promising text documents section new automatic method generating queries match documents useful extraction target relation 
describing idea brief overview information extraction systems section 
define problem focus architecture qxtract system section 
qxtract starts retrieving small sample documents text database determining extraction system able extract tuples target relation section 
sample provide examples useful useless documents methods generating queries retrieve remaining promising documents database section 
overview information extraction information extraction usually refers identification instances particular events relationships unstructured natural language text documents 
extracted structured records populate relational table answering queries running data mining tasks 
information extraction crucial step fully exploiting natural language documents 
example information extraction consider extracting headquarters organization location relation contains tuple organization headquarters location shows basic stages extraction tuple document fragment 
omit sophisticated post processing analysis performed state art information extraction systems scope discussion 
refer depth discussion 
qxtract stands querying extraction 
stages extraction input documents typically passed named entity tagger able recognize entities organizations locations persons 
named entity tagging studied problem tools publicly available common entity types 
entities potential values attributes target relation 
find related entities tagged documents processed applying extraction patterns pattern matching step 
patterns may manually constructed automatically learned created combination methods :10.1.1.41.4658
pattern applied text fragment instantiating appropriate slots pattern entities document 
entities combined candidate tuples filtering post processing returned extracted tuples 
example sample document doc passed named entity tagger recognizes person organization entities 
text fragment containing entities interest organization location matched extraction patterns organization headquarters location instantiating generic entity types entities apple computer cupertino respectively 
tuple apple computer cupertino generated 
check mark document indicates tuple successfully extracted document 
consider documents useful extraction task 
note additional information may available extraction system 
example information extraction system may assign weight confidence extracted tuple 
extraction process outlined expensive perform document large database 
focusing potentially useful documents dramatically improve efficiency scalability information extraction process 
introduce qxtract automatic technique retrieving promising documents 
problem statement notation consider problem extracting relation large database text documents 
small fraction documents contain information relevant extraction task 
necessary extraction completeness desirable efficiency viewpoint run information extraction system database document 
furthermore database set web pages indexed search engine google virtually impossible scan page extract tuples 
reasons approach zooms promising documents ignoring rest 
state problem addressing introduce notation rest 
purpose database local archive legal documents customer mails remote web accessible searchable archive newspaper 
organization location microsoft redmond exxon irving boeing seattle ibm intel santa clara user provided seed tuples qxtract promising documents input documents named entity tagging pattern matching output tuples information extraction system sampling generated queries search engine text database 
architecture efficient information extraction system identifies promising documents querying 
problem statement information extraction system text document database example tuples relation extracted 
rall denote instance relation extracted entire database 
goal construct close approximation rall retrieving small subset document database having extraction system operate larger original database 
assume user specifies maximum fraction retrieved extract parameter vary depending needs user size original database 
note rall may contain correct tuples extracted database perfect extraction system 
limited best relation system extract try approximate relation efficient manner 
assume extract tuple attributes occur document 
words assume information extraction system glue pieces tuple multiple documents 
efficient information extraction architecture architecture efficient information extraction system envision shown 
interact target information extraction system unified information extraction system interface describe 
text database accessible search engine interface 
discuss qxtract promising document retrieval component interacts extraction system database retrieve promising documents 
information extraction system interface handle variety arbitrary information extraction systems treat black boxes interact simple extraction system wrappers 
wrappers easily built support unified interface input set documents extraction system process shown 
database size unknown absolute number documents specified control efficiency extraction process 
input user provided seed tuples document sample retrieval learning queries sample documents output generated queries qxtract organization location microsoft redmond exxon irving boeing seattle ibm intel santa clara seed sample tuple tuple tuple tuple tuple useful headquarters office useful search information extraction system headquarters office 
qxtract promising document retrieval 
output set tuples extracted tuples tuple ti tuples set identifiers ui useful documents ti extracted 
wrapper returns identity useful documents defined useful tuples 
example useful doc doc 
optional output patterns extraction system may export set extraction patterns available extracting target relation extraction patterns 
designing minimal uniform interface extraction system allows plug information extraction system take advantage querying techniques changes qxtract system 
text database search interface assume search interface database supports simple boolean queries data mining text phrase queries 
query model provides sufficient expressiveness widely supported major available text indexing tools glimpse web search engines support queries minor variations syntax 
qxtract system rest section describe qxtract architecture shown 
starting set user provided seed tuples sampling procedure described section retrieve small sample documents useful extraction system extracting target relation randomly chosen documents useless extraction system 
information extraction system run sample set producing output set extracted tuples identifiers useful documents 
documents sample labeled automatically positive negative examples positive examples represent documents sample information extraction system able produce tuples 
examples allow derive queries targeted match retrieve documents similar positive examples section 
queries retrieve set promising documents database section returned qxtract output processed information extraction system 
retrieving documents query training initial stage document retrieval process information documents useful extraction 
information require target relation set user provided example tuples including specification relation attributes document retrieval 
goal retrieve document sample size specified parameter mix useful useless documents subsequent query training stage 
accomplish algorithm 
initialization round sampling consists stages retrieve documents sample querying search engine attribute values current seed tuples initially provided user input parameter seed 
run information extraction system documents current sample extracting new set tuples 
subset tuples selected new seed tuples start new sampling round 
initialize document sample randomly picked documents line majority useful extraction negative examples training 
rest sample documents retrieved attributes seed tuples results documents useful extraction positive examples training 
initial seed tuples provided user augmented tuples extracted extraction system sample lines 
retrieve additional sample documents build queries attribute values tuple current set seed tuples 
tuple construct query wherea searchable attributes relation line 
query retrieve documents attributes appear document 
principle documents extracted information extraction system 
retrieve matches returned database query line 
query results added set documents retrieved current sampling round 
clearly documents set useful extraction 
determine documents useful run information extraction system line returning extracted tuples identifiers useful documents tuples extracted 
line choose independently ghani jones introduced similar strategy construct training corpus bootstrapping general entity tagger 
procedure seed seed set example tuples 
maximum number documents retrieve training sample 
retrieve random sample documents negative examples training 
sample identify minority useful documents random sample 
augment seed set extracted tuples useful extract sample seed seed retrieve documents tuple attributes useful provide positive examples training 
sample seed skip line exceeded 
extract set seed tuples iteration 
seed useful useful sample sample sample consists documents 
useless sample useful return useful useless 
retrieving sample documents subsequent query training 
robust tuples seed round sampling choice number documents tuples extracted favors selecting popular tuples appear documents database total size retrieved training set parameter tune training 
unfortunately simply continue sampling process retrieve useful documents database 
show section small fraction documents contain tuples target relation tuples tend appear document able discover significant fraction tuples extracted 
key observation useful documents share similarities content 
example useful documents headquarters relation may contain combinations terms phrases match queries headquarters area companies combinations terms occur useful documents useless documents headquarters relation 
goal automatically generate queries retrieve documents similar extraction system marked useful 
useful useless documents returned serve train alternatively extraction confidence associated tuples information exported information extraction system 
ing set learn queries promising document retrieval 
learning queries promising document retrieval set useful useless documents training set goal generate queries retrieve documents information extraction system find useful able 
process consists stages convert positive negative examples appropriate representation training training examples generate ordered list queries expected retrieve new useful documents 
section see submit queries database retrieve promising documents 
representation features training examples training remove extracted tuple attributes documents 
current experiments words features represent training examples rely advanced query features proximity operators word stems course advanced features alternative query models available apply general approach tailor query interface choice 
plan experiment alternative document features word phrases sets words window 
generation queries examples turn generation queries retrieve useful documents database 
problem retrieving documents similar set relevant examples studied extensively information retrieval machine learning communities 
section discuss adapt established solutions communities non standard problem 
consider query generation ir automatic query expansion problem state art term weighting scheme 
introduce query generation techniques exploit output machine learning text classifiers 
hybrid query generation technique combines learned queries methods 
okapi query generation strategy exploit state art term weighting scheme ir okapi retrieval system 
promising alternatives weighting scheme ir literature chose okapi demonstrated perform naturally suited task relatively straightforward implement 
incorporating alternative information retrieval techniques system easy require changes model 
predict terms retrieve useful documents compute term selection weight term training set 
terms highest positive weight appear useful documents useless ones 
term ti document assigned robertson spark jones term weight log document relevant marked useful extraction system number relevant documents containing ti number documents document sample number relevant documents number documents containing ti 
intuitively weight high terms tend occur relevant documents non relevant documents smoothed normalized account potential sparseness training data 
compute query selection weight wi term ti described automatic query expansion wi defined 
terms sorted descending order wi define word queries consisting top ranked term individually 
ripper second query generation strategy exploit highly efficient rule text document classifier ripper 
ripper learns concise rules useful indicates document contains term term declared useful ripper generates classification rules sort rules descending order expected precision calculated ratio positive examples total examples match rule 
information part ripper output 
rules translated conjunctive queries search engine syntax 
example rule translated query support vector machines svms third query generation strategy exploit family classifiers svms shown perform text classification 
filter noise prune set words training discarding occur fewer training examples weuse freely available efficient implementation linear kernel svms 
generate rules svm feature weights compute minimal sets words collectively sufficient imply positive classification document 
result process set rules similar ripper output 
okapi ripper svm different learning models queries generate little overlap techniques 
exploit observation improve robustness qxtract combining ranked query sets generated query generation strategy 
specifically merge query ranks generated experiments linear kernel svms training database additionally restrict document features words immediate context line original document formatting extracted tuples 
okapi ripper svm round robin fashion query merged rank highest ranked query generated ripper followed highest ranked query generated svm querying promising documents described generate queries retrieve final set promising documents information extraction system choice extract tuples 
size document set direct impact quality extracted relation 
assume efficiency considerations predefined upper bound fraction database willing retrieve 
higher upper bound complete extracted relation 
submit queries generated ranked section document database time 
query database returns document identifiers urls matching documents 
retrieve previously unseen documents maximum number results query reached keep running total documents retrieved avoid exceeding 
bound reached documents retrieve queries retrieved documents returned output qxtract 
promising documents input information extraction system extracts final approximation target relation 
experimental setting report metrics evaluate alternative query methods section 
describe information extraction systems section target relations experiments section 
specify training test databases section conclude describing various querying techniques compare section 
evaluation methodology metrics discussed goal approximate rall relation tuples extracted exhaustive scan database section 
contrast exhaustive scanning qxtract retrieves promising set documents information extraction system obtains relation approximate rall 
document retrieval method focuses closely approximates rall sophisticated ways combining generated queries possible eliminate redundancy queries plan explore 
search engines predefined limit maximum number results query return 
useful documents average recall percentage rall tuples captured recall rall rall 
rall computed running information extraction system document database 
precision percentage documents ful extracting precision subset extraction system managed extract tuples 
note recall precision strictly standard way 
recall measure percentage tuples rall correctly extracted precision measures percentage useful documents retrieved document set 
intuitively document retrieval method purposes extract close approximation rall second efficiently retrieving documents 
direct measure success task percentage rall tuples extracted documents retrieved qxtract 
success task naturally measured document level feed information extraction system document time gain tuples document useful 
document useless tuples extracted resources required retrieve process document wasted 
larger fraction useful documents retrieved translates higher efficiency extraction quantified precision measure 
complement study efficiency techniques section report actual time required extract approximation rall documents retrieved qxtract compared time required extract rall complete database 
target information extraction systems design qxtract general information extraction system long supports wrapper simple interface described section 
experiments consider extraction systems dipre uses simple bootstrapping algorithm starting handful user provided seed tuples 
snowball extension dipre includes automatic pattern tuple evaluation improve quality extracted table 
proteus sophisticated manually trained information extraction system nyu consider absolute accuracy quality extracted tuples 
focus closely approximate best possible relation produced information extraction system examined document database 
proteus system publicly distributed allowed instance tuned extracting infectious disease outbreaks kind help permission roman yangarber ralph grishman 
headquarters organization location location microsoft redmond malaria exxon irving bergen boeing seattle flu midwest ibm mad cow disease intel santa clara pneumonia 
initial seed tuples provided qxtract extracting headquarters relations 
systems representative state art information extraction range simple strategy minimal manual training dipre highly sophisticated strategy extensive manual training proteus 
target relations extraction evaluate performance qxtract extraction relations initial seed tuples headquarters organization location defined section 
attributes organization location querying sample documents 
dipre snowball extract relation 
location country date 
tuple 
mad cow disease 
corresponds outbreak disease location country attributes discuss brevity 
attributes location querying sample documents 
proteus extract relation 
training test databases training database consists documents months new york times archive database consists documents new york times archive 
experiments indexed training test databases glimpse search engine 
glimpse supports boolean retrieval model document ranking 
queries specify exact phrases ignore punctuation single words alternative document retrieval methods experimentally compare number alternatives retrieve promising documents qxtract technique described section parameters tuned training database summarized include available part north american news text corpus linguistic data consortium athttp www ldc upenn edu 
glimpse supports limited regular expression matching exploit 
query generation strategy 
tuples technique uses tuples retrieve promising documents 
tuples proceeds essentially procedure section difference tuples retrieve random document sample step 
modified version continues extract tuples queries fraction database retrieved 
include technique experimental evaluation study benefits qxtract query generation stage missing tuples 
baseline simple baseline technique returns randomly chosen fraction database documents processes previously trained extraction system 
document sample train extraction system counted retrieved document quota baseline 
manual technique hand crafted filters 
implement strategy extraction relation manually constructed queries filters provided developers proteus system 
current filters applied documents running proteus filters converted closest phrase boolean queries 
show sample automatically learned queries generated qxtract somewhat close manual queries 
apply technique headquarters relation externally provided set manually constructed queries filters 
patterns technique exploits terms extraction patterns generated information extraction system training documents available 
instance example patterns extracting headquarters relation organization location 
construct query pattern phrase appear document matches extraction pattern 
note named entity tags location queries tags typically accepted query features standard search engines 
snowball extraction patterns phrases unordered vectors terms 
case pattern converted conjunctive query terms pattern 
advantage patterns strategy simplicity queries readily derived extraction patterns training 
disadvantage approach associated queries broad example specific retrieve useful documents 
extraction patterns vary considerably information extraction system section approach note filters originally conceived applied available news document running proteus 
filters designed primarily maximize recall extraction system importance precision resulting document set processing potentially useless documents acceptable 
relation extraction system useful rall headquarters snowball headquarters dipre proteus 
test database statistics 
parameter value description max 
documents retrieved individual seed tuple max 
new seed tuples picked query strategy query generation strategy max 
documents retrieved individual query 
final configuration qxtract evaluation test database 
generally applicable 
example sophisticated information extraction systems incorporate syntactic information extraction patterns parsing information typically querying 
implemented patterns strategy dipre snowball proteus patterns exploit specific syntactic relationships terms easily converted regular search engine queries 
experimental results section evaluate techniques test database section 
statistics occurrence tuples target relations databases summarized 
statistics generated running extraction system complete database order generate rall 
exhaustive extraction process lasted days extraction systems 
see tuples headquarters relation extracted snowball test database relatively frequent tuples relation occur approximately documents database 
contrast tuples occur documents 
see qxtract exhibits greatest gains extraction efficiency kind sparse relation challenging identify documents useful information 
qxtract significantly improves extraction performance types relation demonstrating robustness techniques 
experiments section run qxtract configuration summarized 
configuration determined tuning system training database section report details due space limitations 
note document sampling query learning automatically performed scratch test database part qxtract method purpose system tuning training database solely set best values parameters 
recall qxtract patterns tuples baseline 
recall precision qxtract patterns tuples test database snowball information extraction system headquarters relation 
precision qxtract patterns tuples baseline extraction headquarters relation shows performance alternative document retrieval methods test database snowball target information extraction system 
qxtract tuples strategies best recall 
example shows qxtract returns database documents snowball manages extract tuples rall reduced document set 
furthermore shows retrieved documents useful meaning snowball managed extract headquarters tuples 
comparison tuples exhibits higher precision recall remains similar qxtract tuples querying new documents tuples tend occur multiple documents causing snowball extract tuples repeatedly retrieved documents 
result tuples extracted documents retrieved tuples extracted repeatedly multiple documents 
contrast tuples extracted documents retrieved qxtract came multiple documents 
reason high recall tuples strategy documents contain multiple headquarters tuples allowing tuple querying retrieve useful documents database 
tuple distribution generally expected see qxtract robust method 
interestingly patterns strategy able retrieve documents test database results maximum recall 
snowball generates patterns extracting headquarters relation approximately half resulted valid queries 
furthermore query allowed retrieve documents simulating common policy web search engines prevented potentially productive snowball patterns queries automatically generated snowball patterns rely stopwords punctuation extract headquarters tuples words comprise patterns ordered contiguous 
result snowball patterns expressible phrase queries 
search engine glimpse support proximity queries omit stopwords punctuation querying snowball patterns 
patterns qxtract office releases high unit unit week recall headquarters companies largest including high brokerage companies precision chatting office assets rose low including issues precision supermarkets 
snowball patterns qxtract queries headquarters relation 
retrieve matched documents 
reports patterns qxtract queries 
qxtract queries appear topical resulting higher recall snowball retrieved documents 
extraction task baseline strategy performs relatively headquarters dense relation documents database useful discussed 
evaluate generality robustness approach run qxtract configuration reported dipre underlying information extraction system 
summarizes recall precision results consistent results snowball 
reports pattern qxtract queries 
note patterns queries dipre treated conjunctions phrases requiring exact string equality including punctuation successful match 
see dipre patterns queries highly specific 
prevents patterns retrieving database resulting relatively low recall maintaining relatively high precision 
summarize results dense headquarters relation qxtract tuples performed best document sets retrieve result significantly better precision recall random document samples 
holds snowball dipre information extraction systems 
recall values techniques low retrieve modest fractions test database discussed low recall due fact large fraction documents test database useful extracting headquarters relation 
extraction relation test generality approach evaluated performance qxtract techniques relation section 
results test database shown 
sparse relation tuples occurring smaller fraction test database case headquarters test database documents useful extracting relation 
performance qxtract scenario remarkable example recall qxtract patterns tuples baseline precision qxtract patterns tuples baseline 
recall precision qxtract patterns tuples test database dipre information extraction system headquarters relation 
patterns qxtract releases high recall stock agreed acquisition buy high biotechnology precision largest share buy big low reports precision 
dipre patterns qxtract queries headquarters relation 
qxtract retrieves database documents proteus manages extract tuples rall 
shows documents retrieved qxtract useful meaning proteus managed extract disease outbreaks tuples 
contrast baseline strategy exhibits expected recall precision random sample database documents 
results headquarters relation tuples strategy performs worse qxtract 
seed tuples qxtract strategy tuples able retrieve documents test database resulting recall 
qxtract performs better manual strategy requires human involvement generate queries 
example manual retrieves database documents proteus manages extract tuples rall 
comparison proteus manages extract rall tuples document set size retrieved qxtract 
reports manual qxtract queries 
extraction task qxtract approximates closely manual queries includes specific words discovered procedure 
results higher recall manually constructed queries developed benefit analyzing test database 
recall qxtract manual manual qxtract tuples baseline precision qxtract manual manual qxtract 
recall precision qxtract tuples manual manual qxtract test database proteus target information extraction system relation 
tuples baseline tradeoff completeness extracted relation number documents retrieved apparent retrieving larger set documents allows proteus extract closer approximation rall 
example extract additional rall tuples extracting rall database requires qxtract retrieve additional database documents 
tradeoff relation completeness extraction efficiency managed user incrementally extract target relation increasing value parameter retrieving additional documents extracted relation sufficiently complete explored combining existing manual queries qxtract queries resulting hybrid strategy refer manual qxtract 
submit queries time alternating qxtract manual queries desired fraction database retrieved 
shows adding manual queries qxtract results slight improvement quality retrieved documents 
summary results sparse relation show qxtract accurately identifies useful documents test database allowing proteus extract closest approximation rall fractions database retrieved 
depending parameter qxtract allows proteus extract tuples rall retrieving documents test database 
qxtract emerges robust technique performing dense headquarters relation sparse relation 
actual running times illustrate performance advantage qxtract computed actual running times extracting tables qxtract 
experiments run ghz pentium iii machines running linux redhat 
speedup achieved qxtract remarkable running proteus system ex manual qxtract virus disease died high recall infected virus infection infected high precision outbreak spread virus low precision new case health 
manual qxtract queries relation 
tract relation complete test database required days finish 
contrast qxtract approach required days extract respectively rall tuples retrieved fractions test database 
qxtract extracting headquarters relation snowball dipre resulted efficiency gains 
qxtract emerges highly effective efficient technique extracting relations large text databases 
developed automatic technique generating queries retrieve documents promising extraction target relation 
demonstrated method general efficient comprehensive experimental evaluation real documents 
techniques allow significant improvement extraction efficiency number documents processed headquarters relation qxtract retrieves document sets allowing snowball dipre approximate target relation significantly better baseline 
outbreaks relation improvement dramatic qxtract allows proteus extract tuples target relation retrieving documents test database 
qxtract help deploy existing information extraction systems larger scale wider range applications previously possible 
addition improving efficiency extraction automatic querying techniques extract target relation arbitrary hidden web database accessible search interface 
example techniques exploit information standard web search engine providing building block scalable portable information extraction web large 
plan evaluate qxtract scenarios part 
material supported national science foundation 
iis 
iis 
ralph grishman roman yangarber fruitful discussions allowing experiment proteus information extraction system 
regina barzilay nicolas bruno eskin am lie marian helpful comments 
proceedings th message understanding conference 
accessible www itl nist gov muc proceedings muc toc html 
deep web surfacing hidden value 
com llc july 
available www com tutorials index asp 
agichtein gravano 
snowball extracting relations large plain text collections 
proceedings th acm international conference digital libraries june 
agichtein lawrence gravano 
learning search engine specific query transformations question answering 
proceedings th world wide web conference www 
brin 
extracting patterns relations world wide web 
proceedings international workshop web databases webdb mar 
chakrabarti 
accelerated focused crawling online relevance feedback 
proceedings th world wide web conference www 
cohen singer 
learning query web 
proceedings aaai workshop internet information systems 
cohen 
fast effective rule induction 
international conference machine learning 
cowie guthrie jin pustejovsky waterman 
information extraction system 
proceedings th message understanding conference 
day aberdeen hirschman kozierok robinson vilain 
mixed initiative development language processing systems 
proceedings fifth acl conference applied natural language processing apr 
flake glover lawrence giles 
extracting query modifications nonlinear svms 
proceedings th world wide web conference www 
gaizauskas robertson 
coupling information retrieval information extraction new text technology gathering information web 
proceedings riao computer assisted information searching internet 
ghani jones 
automatic training data collection semi supervised learning information extraction systems 
technical report technology labs may 
ghani jones mladenic 
mining web create minority language corpora 
proceedings th international conference information knowledge management cikm 
gravano ipeirotis sahami 
system automatic classification hidden web databases 
acm transactions information systems tois accepted publication 
grishman 
information extraction techniques challenges 
information extraction international summer school 
springer verlag 
grishman yangarber 
real time event extraction infectious disease outbreaks 
proceedings human language technology conference hlt 
joachims 
making large scale support vector machine learning practical 
advances kernel methods support vector machines 
mit press cambridge ma december 
kruger giles coetzee glover flake lawrence 
building new niche search engine 
international conference knowledge management cikm 
kwok etzioni weld 
scaling question answering web 
proceedings th world wide web conference www 
lewis tong 
text filtering muc muc 
proceedings th message understanding conference 
manber wu 
glimpse tool search entire file systems 
proceedings winter usenix conference 
raghavan garcia molina 
crawling hidden web 
proceedings th conference large databases 
robertson 
term selection query expansion 
journal documentation volume 
robertson jones 
relevance weighting search terms 
journal american society information science 
rocchio 
relevance feedback information retrieval 
smart retrieval system experiments automatic document processing 
prentice hall 
salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley 
voorhees 
trec question answering track report 
proceedings trec 
xu croft 
improving effectiveness information retrieval local context analysis 
acm transactions information systems tois 
yangarber grishman 
nyu description proteus pet system muc 
proceedings seventh message understanding conference muc 
morgan kaufman 
yangarber grishman tapanainen 
unsupervised discovery scenario level patterns information extraction 
proceedings conference applied natural language processing anlp naacl 
