induction defeasible logic theories legal domain benjamin johnston com au guido governatori guido itee uq edu au school information technology electrical engineering university queensland brisbane queensland australia defeasible logic promising representation legal knowledge appears overcome deficiencies previous approaches representing legal knowledge 
unfortunately immediate application technology challenges generating theories legal domain expensive computationally intractable problem 
light potential benefits seek find practical algorithm uses heuristics discover approximate solution 
outcome developed algorithm integrates defeasible logic decision support system automatically deriving knowledge databases precedents 
experiments new algorithm promising delivering results comparable exceeding approaches 

projects attempted produce powerful systems aid legal decision making progress experienced success clearly legal community taken technologies form common part lawyer tool set cf 

mind seek produce system assists decision making process law makers lawyers public providing tool offers advice reasons advice information current legal proceedings 
challenge peculiar requirements legal domain importance extremely high accuracy value judicial independence need presenting decisions rationale language natural users place constraints development information systems relatively unique domain constraints date adequately overcome 
developing legal information systems seek replace judges remove legal system development systems offer legal community benefits difficult realise computer technologies 
developed ideas clear outcomes mind assist accurate expedient decision making providing efficient tool suggests argues decisions help reach consistent decisions drawing consistent precedents provide advice information low cost offering tool quickly offer strategic predictive information expensive construction analysis costs 
admittedly need humanity difficulty interpreting law gives rise cases far capabilities existing computer systems reason 
handle case understood fields legal practice particularly taxation traffic law legislation precedents understood typical cases courts routine 
fact assumption cases landmark decisions decision making process legal practice routine potential scope partial automation 
reason natural legal information system takes encoded form facts currently court situation user considering legal action returns suggestions consistent precedents justifications suggestions prove beneficial legal community 
seek assist replace experts vitally important decision support system accurate verifiable 
motivated assuming requirements transparent operation construction argument justification reaches internal representation knowledge verifiable comprehended verify conservative mode operation draw doubt user friendly approach suitable law workers general public require training formal logic view knowledge system interpret system preferably low cost method construction 
challenge producing legal information systems necessary find practical trade requirements 
example automatically generating knowledge bases alleviate problem expense result need expert knowledge generating structuring data method construction typically reduces confidence users soundness system 
similarly heuristic methods applied large sets training examples improve accuracy applicability system cost sound verifiable reasoning method ability examine comprehend underlying reasoning involved reaching 
spite inherent difficulties potential benefits legal community successful satisfaction needs legal decision support system surely invaluable outcome 

previous approaches existing approaches constructing legal expert systems fall broad categories manual encoding rules expert systems automatic induction machine learning techniques 
manually encoded expert systems luxury able expressive verifiable internal representations expensive delicate operation produce expert systems may fact result system inconsistent legal practice due difficulty having expert accurately encode knowledge 
hand machine learning reduce construction cost systems technologies may able reconcile automatic construction knowledge bases knowledge representations suitably encode knowledge reasoning 
case reasoning case reasoning systems hypo attempt find related cases assumption similar case similar 
information system certainly benefit lawyer preparing argument systems focus rationale decision similarity cases difficult case reasoning system produce justification predictions analogy 
systems attempt resolve difficulty manually inferring principles underlying case really producing expert system analogical reasoning capabilities expensive approaches manually constructing expert systems 
attribute value propositional learners propositional learners id decision tree induction algorithms assistant success applied legal domain 
unfortunately propositional rules difficult interpret lawyer computer science background training resultant trees propositional expressions difficult interpret 
furthermore output algorithms typically expressions seek classify cases attributes possible adequately handle possibility attributes may available propositional learners satisfactorily partial information 
neural networks bayesian networks continuous model fitting projects split project applied neural networks family law achieve high levels accuracy 
unfortunately approaches model fitting continuous variables neural networks give high accuracy learning examples proven successes disparate fields general difficulties applying successfully legal context 
reasoning methods simply adaptive non linear function extremely difficult generate explanations output verify correctness 
association rules done association rules mined apriori algorithm basis 
currently progress fact initial motivation project approach going result significant success 
association rule mining finds general associations properties produce rules 
specific field legal domain guiding rules exceptions guided associations assumptions exceptions associations association rule miners general solution problem learning reasoning principles underlying law 
furthermore care taken ensure mined associations simply common properties domain deciding factors 
difficulties interpreting association rules challenge integrating formal model suggests association rules better suited heuristic device opposed 
inductive logic programming inductive logic programming ilp concerned producing pure negation free prolog programs theories horn clause logic example sets inputs outputs usually operate bottom approach generalising examples topdown approach specialising empty program suitable theory 
literature appears limited application ilp legal domain may due monotonicity horn clause logic address monotonicity issue unsuitable law 
simplicity theories induced ilp systems typical domains significant drawn body ilp research adapted benefits framework handles defeasibility law directly 
existing non monotonic ilp seeks overcome limitations closed world assumption monotonicity logic ilp 
ilp approaches induce theories reiter default logic similar strategy learn extended logic programs represents subset default logic 
approaches near attempting achieve finding extension default logic theory np complete problem default logic form expression believe difficult untrained users interpret particularly language describing legal systems 

defeasible logic aforementioned existing approaches experienced certain degree success face deficiencies believe limit widespread acceptance techniques legal domain 
challenge finding balance having representation efficient reasoning cost encoding knowledge representation 
prakken describes non monotonic logics appear natural correspondence legal reasoning forms formal expression 
furthermore defeasible logic form nonmonotonic reasoning invented donald nute related logics prakken particularly natural expression permits expression normative systems close correspondence plain language expression encoded form :10.1.1.19.4711
fact illustrates defeasible reasoning multi agent system automated negotiation 
practical applications defeasible reasoning proposed executable regulations contracts business rules 
clarity defeasible logic theory untrained user enhanced validation phase domain expert annotate rules defeasible logic theory plain english expressions displayed user explanation drawn theory 
rule explanation guilty innocence presumed evidence guilty evidence show guilt motive guilty lack motive suggest innocence guilty prove innocence defeasible logic non monotonic logic handles partial knowledge sceptical reasoning process equivalent subsumes defeasible logics algorithm computing extension linear time space 
favourable properties defeasible logic important legal reasoning 
law abounds cases involving partial knowledge reasonable decision support system act conservative sceptical way better give answer incorrect answer 
computational efficiency important drawing theory lends efficient algorithms induction theories datasets 
defeasible logic allow meta level reasoning purpose backing rules example logic remains powerful natural form expression relevant practical routine legal practice rules defeasible logic theory correspond untrained understanding rule :10.1.1.19.4711:10.1.1.19.4711
reasons defeasible logic suitable representation knowledge challenge remains automatic semi automatic creation knowledge precedents 
defeasible logic theory collection rules permit reason set facts known truths reach set defeasible 
multiple rules may applicable situation defeasible logic theory additionally includes relation resolving conflicts 
example consider theory criminal law 
theory consists components set rules conclude guilt innocence defendant event certain facts court law acyclic transitive relation rules indicates hypothetical criminal law theory relative strength rule 
suppose theory set facts evidence court law assumed true defeasibly prove innocence defendant note permits conclude guilty necessary conditions application hold known fact defeasibly proven true remaining rules reaches contradictory guilty necessary conditions satisfied stronger override defeasible logic theory pair finite set rules partially ordered relation defining superiority rules defined literals literal atomic propositional variable negation literal complement literal defined form form kinds rules defeasible rules defeaters 
defeasible rules defeasibly prove defeaters prevent reached 
typically third kind rule permitted strict rules classical meaning monotonic defeated 
disregard strict rules application automatic induction defeasible theories impossible conclude strict correlation partial knowledge possible finite datasets case strict rules simulated defeasible rules high superiority relation rarely defeated 
defeasible rule denoted set literals denoting premises rule single literal denoting application rule 
rule form interpreted say literals known denoted relevant mappings actual superiority relation fact acyclic transitive relation containing mappings denoted case transitive closure mappings 
note rule prove innocence merely disprove guilt 
general case superiority relation simply binary relation set rules 
facts defeasibly provable defeasibly prove defeasibly mean prove tentatively subject possible defeat stronger rules 
defeater rule denoted set literals denoting premises rule single literal denoting counter application rule 
defeater prevent rule form interpreted say literals known facts defeasibly provable reach consistent subject defeat rules prove may prove rules supporting position may reach 
note pair rules form superiority block respect define ante rule form ante set premises antecedents rule ante left hand side rule 
reason set facts case respect defeasible theory reach defeasible tentative particular case 
defeasible theory facts conventionally tagged literal forms intended mean defeasibly provable intended mean defeasibly provable define entailment relation indicates set facts respect theory entailment relation defined proof mechanism expounded briefly completeness 
proof defeasible logic theory set facts finite sequence tagged literals satisfying inference rules follow 
denotes initial part sequence length denotes ith element rd denotes set defeasible rules rules defeaters denotes set rules rd ante ante rd ante rd ante ante rd ante plain english strongest defeasible rules premises satisfied 
rule exists defeater opposite stronger 
simplicity disregard tagging represent simply denote case holds denotes case defeasibly proven respect 
partially ordered superiority relation possibilities occur 

inducing defeasible theories datasets automatically generating logical theory precedents important considerations theory models domain theory generalises new cases 
judging constitutes degree generalisation subjective problem definitive answer peculiarities producing assume note practice minimal theory consistent describes existing precedents desirable 
having smaller theory results rules cover examples generalise realistically match human preference simple reasoning processes 
reason seeking minimal theory rules theory easier domain expert comprehend provide feedback improve induced theory 
goal gives rise concerns set minimal theories dataset 
generation minimal theories tractable 
results important possible find theory describes dataset finding optimal solution np optimisation problem 
definitions 
define dataset finite set pairs form set literals denoting known truths facts particular precedent literal term indicating reached known respect propositional variable usually introduced pre processing 
say dataset consistent formed propositional variable records 
words dataset consistent identical cases different 
consistent dataset define var propositional variable appears 
convenience assume datasets consistent 
assumption invalid possibly due noise identical borderline cases different changing legal practice corrected pre processing 
mean deleting records causing inconsistency result record replacing inconsistent records new record form indicate particular facts causing inconsistencies known 
noted definition dataset includes assumption single propositional variable 
applications multiple necessary limitation trivially overcome processing class different dataset repeated application algorithm section 
say defeasible logic theory accuracy respect dataset records proven say theory describes dataset accurate record proven theorem 
consistent dataset exists theory describes dataset 
fact turns dataset theories describe dataset 
theory generated construction proof theorem unsatisfying theory primitive case reasoning system 
look find minimal theory theory describes dataset minimal number rules 
minimal theory rules expect rule carry significance greater predictive power rules larger theory describing dataset 
reason expect minimal theory give best generalisation dataset perform unseen cases 
believe finding minimal theory simplifies comprehension effort required human expert verify theory simpler representations match reasoning human experts practice needlessly convoluted rules individual case reasoning approach 
unfortunately turns problem generating minimal theory np hard 
assumption np np hardness problem conclude generation minimal theories intractable 
proof np hardness showing instances hitting set problem sp minimum hitting set problem sp transformed dataset precedents polynomial time minimal theory precedents solve decision procedure optimisation problem respectively 
concern subject theorem regarding decision procedure np hardness corresponding optimisation problem follows immediately theorem 
dataset positive integer problem deciding exists theory size describes np complete 

generating small theories heuristics intractability finding minimal theories look heuristics clever search strategies find approximate small theories 
existing generation small logical theories examples context inductive logic programming ilp drawing inspiration developed new algorithm uses top refinement techniques similar ilp improve performance datasets 
algorithm hero operates greedy best branch bound fashion 
algorithm starts empty theory iteratively adds rules theory greedy fashion improve accuracy theory 
iteration search space possible rules explored branch bound algorithm select rule highest gain 
greedy mode operation unrealistic rules offer high degree predictive power naturally offer greatest degree improvement accuracy theory practice confirms case suitable approximation reality 
pseudocode high level operation algorithm detailed 
turn attention search algorithm selecting rules appropriate positions add theory 
rule added position superiority relation theory give new theory define gain gain rule difference number records number records gain rule increase accuracy theory result adding rule theory 
definition gain equivalently stated terms incorrect corrected adding new rule correct blocked adding new rule follows gain derive upper bound gain noting rule refined adding literals premises rule specific number incorrect corrected adding new rule decrease subset corrections applicable refining rule number correct blocked adding new rule decrease reason subset blocks applicable refining rule 
ideal circumstances refinement rule result reduction corrections eliminate blocking 
ideal condition leads upper bound refinement rule expressions gain refined required support legal practice known evolve time 
simply counting records operator possible compute weighted sum contribution record inversely proportional age record 
approach places greater emphasis allows theories generated datasets may contain evolutionary change 
best simply breadth search explore search space maintaining variable holds best rule far exploring branches search space upper bound strictly greater value gain 
added set theory invoke rule search routine find new rule nil set nil defeasible theory search algorithm set best gain far bg set best premises bp nil set best bc nil foreach position totally ordered superiority relation set weaker existing rules weaker current position set stronger existing rules stronger current position set priority queue enqueue priority set current premise dequeue compute preferred gain mg bg set bg set bp set bc mg bg foreach refinement enqueue bg return bg current position return nil rule search routine current theory result positive gain repeating search iteration halting rules exist result positive gain 
considering totally ordered superiority relations possible obtain efficient implementation algorithm 
position total order weaker rules immediately applied dataset give tentative records dataset stronger rules apply discarded added rule position superiority relation effect records stronger rules applicable 
initial processing allows gain efficiently computed single pass dataset 
furthermore additional performance gains possible associating set premises records dataset applicable maintaining set set computation 
restricting algorithm totally ordered superiority relations appear result poorer theories 
pseudocode implementation greedy rule search appears 
best search appears trivially modified breadth search replacing priority queue standard queue 
possible compute accuracy gain rule negation single pass compute simultaneously premise set return gain rule greater accuracy gain 

experimental results hero algorithm implemented prolog 
section evaluate faithful theory induced hero compared known theory underlying dataset 
manually creating theory randomly generating dataset records including noise variables consistent theory running hero dataset 
hero gives impressively accurate results theories executes seconds 
analyse selection important outcomes common patterns identified simple exception simple exception occurs rule exception base rule results opposite :10.1.1.19.4711:10.1.1.19.4711
consider defeasible rules ar ar ar exception ar associated presence associated source theory induced theory induced theory identical source theory extremely high correspondence theories logically equivalent 
significant difference additional rule appears induced theory rule compensate fact superiority relation source theory partial order hero considers totally ordered superiority relations 
aggregate vs separate rule group called aggregate vs separate rules depicts situations choice favour rule aggregated antecedents rules separate antecedents 
example independently sufficient reasons occur simultaneously 
choice rule ar rules ar ar source theory induced theory problem separating aggregate rules separate rules appear extremely hero correctly identifies underlying theory separate rules 
general vs specific rule group called general vs specific rules depicts situations choice general rule specific 
source theory induced theory problem distinguishing general specific rule relevant contexts specific complex rule preferred general rule preferred :10.1.1.19.4711
problem contradicts assumption minimal theory best believe contexts requiring specific rule somewhat atypical 
source theory second rule fact redundant hero correctly identified minimal equivalent theory 
sample case highlights difference optimistic pessimistic modes operations example source theory exercised occurred argued generalize cases occur real datasets encountered problem possible alter hero accommodate requirement 

comparison approaches hero algorithm implemented prolog 
implementation necessary due importance operations algorithm require careful data structures support rapid testing set membership conditions 
significant optimisation offers performance improvement associating records dataset set subset premises record allowing rapid identification records rule requiring excessive maintenance constructive set operation 
section compare implementation hero algorithm approaches machine learning legal domain 
approach follows intent original governatori :10.1.1.19.4711
motivated syntactic similarities certain degree semantic overlap mined association rules defeasible logic theories 
intent development system generates defeasible logic rules analyzing output apriori association rule mining algorithm 
rationale approach possible benefit understood highly efficient algorithms association rule mining post process association rules identify suitable defeasible logic theory 
algorithm tested japanese credit application dataset benchmarking machine learning algorithms contains records supplied lisp domain theory describing attributes credit applicants outcome applications 
apriori applied datasets containing cardinal features binned categories domain theory 
similar limitation applies algorithm binning values mapped set propositional variables 
reports changing minimum support confidence apriori algorithm possible obtain theories offer higher accuracy result fewer rules 
selects combinations support confidence give practical balance theory size accuracy 
contrast algorithm hero seeks find minimal theory parameterisation possible trade runtime accuracy halting algorithm predefined number iterations 
table compares approaches 
clearly hero offers vast improvements accuracy number rules generated fewer rules suggests greater degree generalization 
results pertain initial implementations corresponding theoretical works dramatic differences approaches appear rooted problems 
defeasible logic represent associations premises defeasible logic virtue superiority relation represent exceptions associations difficult represent detect association rule mining algorithms minimum supports 
second identifying collecting association rules defeasible logic rules combinatorial optimisation problem finding optimal theory intractable approach resort heuristics patterns defeasible logic identified algorithm complete version need recognise far patterns mined association rules optimise trade se freely available uci machine learning repository www ics uci edu mlearn mlrepository html algorithm hero hero minimum support minimum confidence target theory size limit accuracy rules generated runtime table comparison results credit application dataset simpler complex patterns 
offers better runtime performance arguably scalable highly efficient association rule mining algorithms exist 
certainly rule hero practical problems bench capon dataset discussed records features comparable runtimes 
practice appears primary limiting factor hero size dataset complexity underlying theory theories branch bound techniques effective 
particular limitation serious concern particular dataset complex underlying theory output hero may complex human reasonably verify situations accuracy hero comparable approaches offers distinct advantage approaches unable verified 
neural networks association rules bench capon justifies development legal information systems discussed trains neural networks existing cases 
bench capon faces problem discussed section admits trained neural network difficult comprehensively verify clear neural network offers little justification answers necessary explain non technical law workers interpret output neural network 
bench capon synthetic datasets describing fictional welfare benefits scheme paid suffer expenses visiting spouse hospital 
decision pay subject conditions 
person age woman man 
person paid contributions relevant contribution years 
person spouse patient 
person absent uk 
person capital resources amounting 
relative patient hospital certain distance patient distance 
conditions immediately translate features age gender contributions spouse absence capital resources distance patient form dataset additional noise features influence 
neural networks bench capon trained records obtained success rates hidden layer hidden layers hidden layers accuracy quite high course difficult judge faithfully conditions payment encoded network hard rationalize technology legal practice alternatives exist 
apply hero algorithm dataset input features binned set prepositional variables 
manner bench capon preprocessing apriori domain knowledge intelligently partition domain feature 
defeasible logic theory generated hero accuracy order superiority weakest strongest distance short spouse absent age lt capital gt trivial alter algorithm prefer scepticism rules equal accuracy gain doing results simpler theory accuracy order superiority weakest strongest spouse absent age lt capital gt distance short clearly theory high correspondence original conditions easy non technical law worker understand theory fact manually annotated domain expert plain english explanations user theory 
fact ignore fact defeasible logic allows clearly interpreted theories generated high accuracy competitive results produced bench capon neural networks 
bench capon points necessary induced theory encode rules underlying domain theory order attain high degree accuracy 
illustrated generated theory high accuracy reached hero mine second rule underlying domain theory rule 
order decrease accuracy incompletely mined models bench capon creates second dataset specifically designed ensure condition exercised isolation 
bench capon reports just accuracy neural network approach second hero performs just poorly dataset accuracy 
rules represented set cn rules individually express condition conditions require far larger datasets intensive searches successfully mine possible perform exhaustive search rules low systems 
accuracy hero comparable bench capon neural networks memory efficient implementation current implementation unable explore entire search space upper bound branch bound algorithm small theory complete small percentage error remains conceivable hero mine required rules express rule 
practice cases rules suspected exist domain theory hero gives poor results may necessary manually augment mined theory correct rule possibly extending syntax defeasible logic support declaration 
course area research 
bench capon manually analyses association rules generated dataset identifying noise variables conditions domain theory offer immediate suggestions automation 
possible directly compare similar trends identified hero manual effort significant 
furthermore techniques lend strategies coping scalability 
example apriori suitable entropy measure preprocess datasets hero order identify remove noise attributes search space 

worthwhile extension examine correspondences horn clause logic defeasible logic 
similarity defeasible logic theory minimization problem ilp may benefit exploring mappings correspondences logics possibly offer new benefits ilp systems 
antoniou demonstrated defeasible logic subsumes logic programming negation failure algorithm provide new approaches ilp community 
decision tree induction algorithms operate rule generation mode produces theories resembling defeasible logic 
algorithms specifically seek optimise output defeasible theory worthwhile compare relative sizes theories generated techniques 
implicit assumption existence structured datasets contain propositional attributes 
clearly case attributes continuous domains law complex express assumptions flat propositional structure 
intend explore semi structured representations precedents xml input algorithm hope bring greater relevance 
research supported university queensland itee 

rakesh agrawal ramakrishnan srikant 
fast algorithms mining association rules 
michael stonebraker joseph hellerstein editors readings database systems chapter pages 
morgan kaufmann publishers rd edition 
grigoris antoniou david billington guido governatori michael maher 
modelling analysis regulations 
proceedings th australasian conference information systems pages 
grigoris antoniou david billington guido governatori michael maher 
flexible framework defeasible logics 
aaai iaai pages 
grigoris antoniou david billington guido governatori michael maher 
representation results defeasible logic 
acm transactions computational logic april 
grigoris antoniou david billington guido governatori michael maher andrew rock 
family defeasible reasoning logics implementation 
proceedings th european conference artificial intelligence amsterdam 
ios press 
grigoris antoniou david billington michael maher 
analysis regulations defeasible rules 
proceedings nd hawaii international conference systems science 
ieee press 
grigoris antoniou michael maher david billington 
defeasible logic versus logic programming negation failure 
journal logic programming january 
giorgio ausiello crescenzi giorgio kann alberto marchetti spaccamela marco 
complexity approximation combinatorial optimization problems approximability properties chapter appendix page 
springer verlag 
see www nada kth se 
john avery andrew guido governatori john 
identification defeasible rule sets databases association rules 
technical report university 
trevor bench capon 
neural networks open texture 
proceedings fourth international conference artificial intelligence law 
acm press 
trevor bench capon frans paul leng 
experiment discovering association rules legal domain 
proceedings eleventh international workshop database expert systems applications pages los alamitos california 
ieee computer society 
david billington 
defeasible logic stable 
journal logic computation 
stefanie br kevin ashley 
adding knowledge learning algorithms indexing legal cases 
seventh international conference artificial intelligence law pages 
michael covington 
logical control elevator defeasible logic 
ieee transactions automatic control 
duval pascal nicolas 
learning default theories 
anthony hunter simon parsons editors ecsqaru number lncs pages london 
springer 
michael garey david johnson 
computers intractability guide theory np completeness chapter appendix page 
freeman 
matthew ginsberg 
ai nonmonotonic reasoning 
dov gabbay christopher hogger john robinson editors handbook logic artificial intelligence logic programming volume 
oxford university press 
guido governatori dumas arthur ter hofstede oaks 
formal approach protocols strategies legal negotiation 
henry prakken editor procedings th international conference artificial intelligence law pages 
acm press 
guido governatori andrew :10.1.1.19.4711
application association rules defeasible rule discovery 
bart verheij arno ronald loui editors frontiers artificial intelligence applications volume 
ios press 
proceedings 
guido governatori arthur ter hofstede oaks 
defeasible logic automated negotiation 
editors proceedings 
deakin university 
benjamin grosof yannis labrou chan 
declarative approach business rules contracts courteous logic programs xml 
proceedings acm conference electronic commerce pages 
acm press 
han jian pei yin 
mining frequent patterns candidate generation 
chen jeffrey naughton philip bernstein editors acm sigmod international conference management data pages dallas texas 
acm press 
inoue 
learning extended logic programs 
proceedings fifteenth international joint conference artificial intelligence volume pages 
morgan kaufmann 
benjamin johnston guido 
algorithm induction defeasible logic theories databases 
klaus dieter schewe zhou editors database technology number conference research practice information technology pages 
australian computer science association acs february 
nada sa zo zeroski 
inductive logic programming techniques applications 
ellis horwood new york 
michael maher 
propositional defeasible logic linear complexity 
theory practice logic programming november 
pascal nicolas duval 
representation incomplete knowledge induction default theories 
thomas eiter wolfgang faber ski editors logic programming nonmonotonic reasoning number lnai pages 
springer 
donald nute 
defeasible logic 
dov gabbay christopher hogger john robinson editors handbook logic artificial intelligence logic programming volume 
oxford university press 
henry prakken 
logical tools modelling legal argument 
kluwer academic publishers 
john quinlan 
programs machine learning 
morgan kaufmann san mateo california 
daniel reeves michael wellman benjamin grosof chan 
automated negotiation declarative contract descriptions 
seventeenth national conference artificial intelligence workshop knowledge electronic markets austin texas july 
aaai aaai press 
singh john donoghue karen 
empirical study small large legal firms uk 
journal information law technology warwick ac uk singh html march 
accessed 
sebastian thrun monk problems performance comparison different learning algorithms 
technical report cmu cs carnegie mellon university 
david wall 
information technology shaping legal practice uk 
th conference changing jurisdiction page www ac uk papers wall html 
accessed 
john dan hunter 
building intelligent legal information systems 
computer law series 
kluwer law taxation publishers 
john andrew 
knowledge discovery split project 
sixth international conference artificial intelligence law 
