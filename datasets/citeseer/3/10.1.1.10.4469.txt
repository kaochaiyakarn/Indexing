improved algorithms analysis secretary problems generalizations ajtai nimrod megiddo waarts july classical secretary problem objects ordered set arrive random order accept nal decision basis rank relative ones seen 
variants problem depend goal maximize probability accepting best objects minimize expectation sum ranks powers ranks accepted objects 
problem generalizations core tasks large data set impractical backtrack select previous choices 
optimal algorithms special case known 
partial solutions rst variant general known 
contrast explicit solution second variant general known question expected sum powers ranks selected items tends nity unresolved 
answer open questions obtaining explicit algorithms 
resulting expected sum zth powers ranks selected objects log best possible value 
methods intuitive apply generalizations 
derive bound trade probability selecting best object expected rank selected object 
preliminary version th symposium foundations computer science november 
research division almaden research center 
research supported part onr contract 
mail ajtai almaden ibm com research division almaden research center school mathematical sciences tel aviv university research supported part onr contract 
mail megiddo almaden ibm com science division berkeley 
supported part onr contract nsf postdoctoral fellowship 
part done author ibm almaden research center 
mail waarts cs berkeley edu log maxf log kg 

classical secretary problem items options random order 
possible orders equally 
observe rank totally ties best rank worst rank 
ith object appears observe rank relative previous objects relative rank equal plus number predecessors preferred wemust accept reject object basis rank relative objects seen required select objects 
problem 
rst goal maximize probability obtaining best objects 
second goal minimize expectation sum ranks selected objects generally positive integer minimize expectation sum zth powers ranks 
solutions classical problem apply variety general situations 
examples include case objects drawn probability distribution interesting feature variant decisions algorithms may relative rank item absolute grade item receives ii number objects known advance iii objects arrive random times iv limited backtracking allowed objects rejected may recalled acceptance algorithm limited memory combinations situations 
addition providing intuition upper lower bounds important generalizations problem solutions classical problem provide cases approximations exact solutions see survey 
methods directly extended apply generalizations 
obvious application choosing best applicant problem common name problem results number applications computer science 
problem large data set may impractical backtrack select previous choices 
example context data mining selecting records best requirements retrieving images digital libraries 
applications limited backtracking may possible fact generalizations mentioned 
important application needs choose appropriate sample population purpose study 
applications items may opportunities investment objects fellowships background intuition problem extensively studied probability statistics literature see surveys 
case rst review case object selected 
observer go back choose previously object retrospect turns best clearly balance risk stopping soon accepting apparently desirable object better arrive risk waiting long nd best item rejected earlier 
easy see optimal probability selecting best item tend zero tends nity consider stopping rule reject rst half objects select rst relatively best 
rule chooses best object second half objects second best object rst half 
rule succeeds probability greater 
established see exists optimal rule form reject rst objects select rst relatively best chosen accept object 
tends nity optimal value tends probability selecting best approximately 
lindley showed backward induction 
gilbert mosteller provided slightly accurate bound 
established result application theory markov stopping times 
easy see optimal expected rank selected object tends nite limit tends nity 
observe algorithm maximizing probability selecting best object yields expected rank selected item argument follows 
probability best item rst items case algorithm selects item 
conditional expectation rank object case approximately 
expected rank selected object algorithm tends nity show surprisingly goals fact con ict see section 
proven backward induction exists optimal policy minimizing expected rank selected item form accept object rank relative previously seen objects exceeds certain threshold depending number objects seen far 
note optimal algorithm maximizing probability selecting best remember best object seen far threshold algorithm remember previous objects 
see solutions observer allowed remember previously items 
fact suggests minimizing expected rank harder 
surprisingly nding approximate solution dynamic programming recurrence problem signi cantly harder case rst variant problem goal maximize probability selecting best 
chow robbins samuels showed optimal expected rank selected object approximately 
question higher powers rank selected object tend nite limits tends nity resolved 
shown order arrivals determined algorithm yield expected rank better 
case general interest case object selected 
hard see xed maximum probability selecting best objects tend zero tends nity 
proof follows 
partition sequence objects disjoint intervals containing consecutive items 
apply algorithm maximizing probability selecting best object set independently 
resulting algorithm selects best item interval probability probability best objects belong distinct intervals tends tends nity 
rst variant problem case considered vanderbei independently barron considered problem general showed optimal policy threshold form accept object relative rank number observations exceeds critical number depends number items selected far addition object rejected objects need considered 
notice means previously seen items selected best rejected 
property analogous happened case goal maximize probability selecting best item 
papers derive recursive relations backward induction 
general solutions recurrences known authors give explicit solutions critical values probability case 
vanderbei presents certain asymptotic results tends nity xed tend nity remains nite 
analogy case bounding optimal expected sum ranks selected items appears considerably harder minimizing probability selecting best items 
obvious see sum tends nite limit tends nity 
backward induction gives recurrences harder solve derived case maximizing probability selecting best equations henke unable approximate general solutions 
question expected sum ranks selected items tends nity open 
explicit solution obtaining bounded expected sum 
second possibly realistic variant secretary problem remained open 
results family explicit algorithms secretary problem positive integer family includes algorithm accepting items values resulting expected sum zth powers ranks accepted items 
kz log clearly sum ranks zth powers best objects 
sum achieved algorithms bounded avalue independent ofn di ers best possible sum relatively small amount 
xed expected sum bounded constant 
resolve open questions regarding expected sum ranks general zth powers ranks selected objects 
approach isvery di erent dynamic programming approach taken papers mentioned 
successful obtaining explicit solutions classical problem easily obtain explicit solutions numerous generalizations 
log maxf log kg 
approach partition items groups select item 
method suboptimal high probability constant fraction best items appear groups ones best method rejects constant fraction best high probability expected value sum ranks obtained algorithm greater constant factor optimal 
expected sums achieved algorithms depend addition probability algorithms select object decrease rank follow probabilities algorithms select best objects depend xed tend zero tends nity 
particular means algorithms select best possible object probability bounded away zero 
contrast algorithm problem order arrival items worst possible generated oblivious adversary algorithm yields expected sum kn zth powers ranks selected items 
lower bound holds randomized algorithms 
section observed optimal algorithm maximizing probability selecting best object results unbounded expected rank selected object 
second part show fact coincidence goals fact con ict 
algorithm simultaneously optimize expected rank probability selecting best 
derive bound trade probability accepting best object expected rank accepted item 

algorithms section describe family algorithms secretary problem positive integer family includes algorithm accepting objects resulting expected sum zth powers ranks accepted objects kz log addition follow algorithm accepts best objects positive probability depends positive integer 
denote log convenience exposition assume loss generality power 
partition sequence corresponding objects order arrival log consecutive intervals ii ii ji words rst intervals fng containing half remaining elements 
mth interval contains element 
note dn 
refer rst maxf blog cg intervals opening ones rest closing ones 
note intervals closing 
opening ii expected number top objects ii necessarily integer 
furthermore opening intervals expected number top objects rst arrive pi observe pj 
refer pi minimum number acceptances required 
observe pi log hand pm log 
intuitively interval algorithm attempts accept expected objects arrive interval addition number objects accepted prior interval 
note pi intervals algorithm attempts number objects accepted 
explain slightly formally 
execution algorithm interval algorithm computes threshold acceptance goal time processing object interval completed number accepted objects minimum number acceptances required prior time 
particular recall pi denotes minimum number acceptances required ii 
pre execution prior ii qj number items accepted ij 
di max pj qj roughly speaking di di erence minimum number acceptances required prior ii number items accepted pre note 
pre execution prior ii ai di pi qj refer ai computed ii acceptance threshold ii execution 
loosely stated pre execution algorithm prior ii ai number objects algorithm accept ii order meet minimum number required ii 
algorithm aim accepting ai objects ii 
ensure accepts attempts accept little 
particular opening interval ii algorithm attempts accept expected number ai ai log see ensures algorithm accepts ai objects interval probability closing interval ii algorithm attempts accept expected number ai 
ensures algorithm accepts ai objects interval probability ai distinction opening closing intervals order restrict expected rank accepted objects 
ii closing ai may smaller ai log bi ai ai log ii opening ai ii closing 
order accept expected number bi objects interval ii algorithm accept dth item approximately bi top ones rst order arrival items random rank dth object relative rst ones distributed uniformly set dg 
dth object accepted probability bi dn expected number objects accepted ii bi 
point execution algorithm number slots tobe lled equals number items processed remaining items accepted regardless rank 
analogously time dth item arrives slots lled item accepted 
algorithm accept rst dn items executions number slots equal number items dn items processed 
roughly speaking modi cation allow bound expected rank dth item terms rank relative rst items 
leads algorithm call select 
algorithm select algorithm processes items time order arrival 
interval ii algorithm computes ai described 
dth item ii arrives algorithm proceeds follows 
slots lled rejected 
ii dn item accepted top ai ai log nc items rst 
algorithm accepts dth item top ai nc items rst 
iii number slots number items left dth item accepted 
refer acceptances number slots tobe lled equals number items remained seen mandatory acceptances 
example dth item arrives opening item accepted electively approximately log logk log top objects rst general dth object arrives opening ii object accepted electively approximately top objects rst 
analysis algorithm select ai ip ai log loosely stated proof proceeds follows 
section show log high probability di 
observe implies high probability ai approximately pi ai ik 
section show dth object arrives opening ii conditional expectation zth power rank accepted electively greater iz log constant depending ii closing conditional expectation greater iz constant 
section results sections combined established dth object arrives opening ii conditional expected zth power rank accepted electively log constant 
ii closing conditional expected zth power rank constant approximately 
follow expected sum zth powers ranks electively accepted objects kz log 
addition result section show expected sum zth powers ranks accepted objects log 
expected sum zth powers ranks accepted objects kz log 
addition fact expected sum zth powers ranks accepted objects bounded avalue depends follow algorithm accepts top objects probability depends bounding ais section high probability ai close pi 
precisely wesay pre execution prior ith interval smooth value computed ai pre 
distinguish smooth nonsmooth executions 
section show opening interval ii executions pre prior th interval smooth probability ai pi decreases exponentially part lemma 
closing ii executions pre prior th interval smooth probability ai decreases exponentially part lemma 
part part lemma follow respectively lemmas show executions pre prior ith interval smooth ii algorithm accepts ai objects high probability ai computed pre execution 
intuitively restriction smooth executions necessary objects selected ii 
lemma implies executions pre prior ith interval smooth high probability ii number objects accepted smaller minimum number acceptances required prior point 
holds ii started disadvantage sense minimum number acceptances required prior ii greater number objects accepted point 
clearly lemma implies smooth executions high probability ai close pi 
complete proof ai close pi section shows nonsmooth executions rare 
particular section uses lemma show executions pre prior st interval smooth probability ai constant lemmas 
case excluded lemma handled separately section 
smooth pre xes denote ei pre execution prior ii 
note em ei smooth aj computed ei 
denote mei event ei smooth 
lemma value ai ai aig proof note di number objects accepted ii ai 
overview loosely stated algorithm accepts dth object electively top ai ai log idc objects rst objects arrive random order rank dth object set rst distributed uniformly accepted electively probability ai pai log idc rank dth object set rst independent arrival order rst independent previous object interval say th top ai ai log nc objects rst 
rest proof follows computing expected number accepted candidates cherno inequality 
proceed actual proof 
suppose ai acceptance threshold computed ii execution 
recall dth object arrives ii empty slots dn algorithm accepts object electively top ai ai log idc objects rst 
dn empty slots dth object arrives may accepted electively 
objects arrive random order rank dth object set rst distributed uniformly accepted electively probability minf ai pai log idc dg 
rank dth object set rst independent arrival order rst 
rank independent previous object interval say th top ai pai log nc objects rst 
loss generality wemay assume minf ai ai log id dg ai ai log id ii ai ai log ai ai log ii ai ai log 
case accepted probability slots lled 
slots lled di done 
qi 
follows de nition di ai qi di ai 
lemma assumption ai follows di non positive 
rest proof follows directly cherno inequality 
formally suppose object rst ii de ne independent random variables ai pai log dn itfollows reasoning dth object opening ii probability dth object accepted electively 
independence order arrival rst objects implies aig prob xt ai complete proof show probf xt aig rst establish claim ai ai log proof distinguish cases 
case 
ai pai log ai ai log ai ai log ai ai log ai ai log ai ai log rst inequality follows 
dn holds ii 
de nition ai pai log third inequality follows noted section im closing ii 
fourth inequality follows fact 
inequality follows noted section pi log ai ai log log case ii 
xji xji dn xji dn dn log log pa log log log log log pk logk pk log logk log log log log rst inequality follows de nition pa log dn third inequality follows noted im closing case opening ii 
fth inequality follows noted pi ii log pp sixth inequality follows eighth inequality follows 
ninth inequality follows log noted 
inequality follows 
inequality related cherno states xn independent random variables pi pi 
xi pi 
exp claim apply cherno inequality xt get prob xt ai prob exp exp xt ai ai log ai log ai pai log ai log ai logk exp logk pai log ai ai log third inequality follows noted ai ai ai ii log 
lemma aig ai proof suppose ai acceptance threshold computed ii 
observe ai implies ai ai di pi qj 
de nition qj am observation follows 
assume qj 
maxf pj qj integers assumption pm qj means am 
pi qj ai de nition 
am reasoned pm qj 
ai di maxf am qj qj qj integers qj assumption aj ai lemma follows di ai 
assume ai 
proof analogous lemma 
recall dn dth object arrives closing ii empty slots object accepted electively top ai nc objects rst 
dn empty slots object accepted electively 
rank dth object set rst uniformly distributed accepted electively probability minf ai nc dg 
proof lemma minf ai id nc dg ai nc 
apply cherno inequality 
suppose object rst arrive ii pi independent random variables ai nc dn itfollows dth object arrives ii probability accepted electively 
follows ai ai aig probf xt aig 
complete proof show probf xt aig ai show rst prove claim ai 
proof distinguish cases 

qj qj case 
dn ai ai ai ai dn ai ai dn rst inequality follows dn ii de nition ai nc 
third inequality follows dn 
fourth inequality follows fact 
inequality follows noted proof may assume ai 
ai case ii 
ji ji dn xji dn dn dn dn dn rst inequality follows wehave de nition nc dn third inequality follows dn objects arrive 
sixth inequality follows case get de nition seventh inequality follows 
claim apply cherno inequality prob xt ai prob exp xt ai ai exp ai ai third inequality follows 
inequality follows noted proof ai 
lemma ii probfai mei probfai mei proof proof suppose loss generality wemay assume follows 
recall minimum number acceptances required opening interval ii pi ai di 
pi pi pi induction ai di di di positive 
bound prob di di di mei note events da mutually dependent conditioned mei dependency conditioning working favour 
lemma implies underlying events occurs probability clearly events occurs probability probfai proof suppose recall pm pm ai dm di lemma implies underlying event occurs probability dependency conditioning mei working favour 
probfai mei complete proof assume 
dm 
lemma implies underlying event fd occurs probability follows dm implies am 
rst part lemma implies underlying event fa occurs probability probfai mei nonsmooth executions lemma proof probf mei mei probf mei mei probfai mei probfai probfai probfai mei rst inequality follows de nition mei mei inequality follows de nition dn 
distinguish cases 
case mei probfai mei probfai mei probfai probfai mei log ne 
part lemma follows probfai mei log ne log second inequality follows ii de nition case ii 
probfai mei probfai mei rst inequality follows part lemma 
lemma proof probf mei mei probf mei mei probfai mei probfai probfai probfai mei rst inequality follows de nition mei mei inequality follows de nition dn 
distinguish cases 
case probfai mei probfai mei probfai mei probfai mei maxf log ne 
distinguish cases 
case log ne 
case log ne 
part lemma follows probfai mei log ne case log ne 
part lemma follows probfai mei cases 
case 
de nition ai pi di pi max xi pj qj ix pj hand assumption ai log 
addition de nition maxf blog cg 
case 
case ii case ii 
distinguish cases 
log log ne log probfai mei probfai probfai second inequality follows lemma assumption part lemma 
case ii 
probfai mei probfai mei log third inequality follows third inequality follows lemma 
fourth inequality follows de nition fth inequality follows log case excluded lemma handled separately section 
expected zth powers ranks denote rd random variable rank dth object 
de ne arrival rank dth object rank set rst objects plus number better objects seen far 
denote sd random variable arrival rank 
denote nad event object accepted electively 
section show exist constants object arrives opening interval ii nad fai aig iz lemma ii closing iz log nad fai aig iz ai lemma 
rst prove technical lemma lemma showing xed ifr lemma prove lemma states roughly exists constant sd log log sd sg decreases exponentially lemma follow result lemma fact object accepted electively opening interval ii ai ai sd distributed uniformly set ai pai log ncg 
lemma follow analogously combining result lemma fact object accepted electively closing interval ii ai ai sd distributed uniformly set ai id ncg 
np lemma proof clearly de ne prob rd sd exp jd prob rd sd prob rd sd 





denote write ln ln prob rd sd observe 
complete proof show complete proof su ces show proof ii js dj sj sj dj sj dj dj dj second inequality follows fact denominator product positive factors factors originated factorials terms proof 
third inequality follows statement lemma clearly ii follows 
lemma exist constants sd sz log log proof de ne np ln sd sd sg prob rd sd prob rd sd prob rd sd sd zs log zs log prob rd np log log prob rd sd exp jd prob rd sd logz prob rd prob rd sd log prob rd sd log nps exp jd log te log log sd sd iv iv log ln exp logz ln exp log ln cv log civ sz log logz log ln log iv vi constants done 
seventh inequality follows lemma 
eighth inequality follows de nition decreases inequality follows inequality follows lemma assumption ii 
lemma exists constant intervals ii values ai ai object arrives ii andd ix log ai log proof ai lemma follows 
assume ai 
su ces prove constant 
distinguish cases 
case 
log log ck constants 
rst inequality follows lemma assumption 
second inequality follows log ck constant inequality follows de nition 
particular opening get de nition 
case ii 
distinguish cases 
case ii ii opening 
log log constant 
rst inequality follows 
second inequality follows ii opening interval mentioned section 
pi ai ii log de nition 
case ii ii closing 
log log ck log constants 
rst inequality follows 
second inequality follows log log constant fourth inequality follows inequality follows observed proof lemma closing ii ai implies ai assumption proof ai 
ii lemma exist constants opening intervals ii value ai ai dth object arrives ii nad fai aig iz iz ai log ai log proof recall dth object arrives opening interval ii accepted electively top ai ai log nc rst obviously sd distributed uniformly dg nad fai aig sd takes values set ai ai log ncg equal probability ai ai log nc nad fai aig ai ai log nc ai pai log idc nad fai sd ai ai log id sz iv ai ai log ai ai log log logz ai ai ai ai log ai ai log log log iz log log iz ai log iz log log iz log log log andc iv constants 
second inequality follows lemma 
fourth inequality follows ai log ai ii opening interval mentioned section pi ai log de nition 
complete proof su ces show exists constant iii ii az log log ai iz log log ai log proof ai az wehavethat ai log ai log 
iii follows lemma 
noted ai log follows 
ii follows lemma exists constant closing intervals ii np values ai ai object arrives ii andd nad fai aig iz proof proof analogous lemma 
recall dth object arrives closing ii accepted electively top ai nc rst nad fai aig rd uniformly distributed set ai ncg 
nad fai aig ai nc ai nc nad fai aig nad fsd sg ai nc ai ai log iz iz log sz logz log ai log iz log andc constants 
second inequality follows lemma 
inequality follows lemma implies constant iz logz ai log ai log iz expected sum ranks section show expected sum zth powers ranks accepted objects kz log theorem 
follow adding expected sum zth powers ranks electively accepted objects lemmas expected sum zth powers ranks accepted objects lemma 
section bound expected sum zth powers ranks electively accepted objects 
particular denote sumzi sum zth powers ranks objects accepted electively ii 
rst lemmas section show exist constants opening sumzi ai ai iz az lemma ii closing sumzi ai ai iz iz ai log lemma 
lemma combined part lemma lemma show exist constant ii opening kz sumzi log lemma 
lemma combined part lemma lemma show exists constant ii closing sumzi lemma 
expected sum zth powers ranks electively accepted objects obtained summing results intervals lemma 
section bounds expected sum zth powers ranks accepted objects 
rst shows execution object ii accepted pre prior ii smooth lemma 
lemmas section imply ii probability pre execution prior ii smooth log constant 
bound applies probability objects accepted ii 
lemma combines bound facts rank object exceeds number accepted objects show expected sum zth powers ranks accepted objects log 
case lemma excludes 
handled lemma addition fact expected sum zth powers ranks accepted objects bounded avalue depend imply algorithm accepts top objects positive probability depend corollary 
acceptances lemma exists constant opening intervals ii values ai ai iz az sumzi ai ai iz log proof suppose ii opening 
ai ii ai aig nad fai aig ai ai log dn ai ai log iz iz iz ai ai log ai iz az ai pai log iz az iz iz log log dn iz ai log iz log log ai pai log ai log log dn dn az log second inequality follows explained dth object arrives opening ii dn prob nad ai ai ai ai log value nad fai aig lemma 
dn object accepted electively 
third inequality follows observed section im closing inequality follows pai log true ii opening mentioned section pi ai de nition log complete proof su ces show constant ai ai log ai log ii dn iz ai log ai ai log ai ai log ai log ai ai log log ii dn inequality follows ai dn np np np log reasoning 
np np np xk cn pk pk lemma exists constant closing intervals ii acceptance thresholds ai computed sumzi ai ai iz proof proof analogous lemma 
suppose ii closing 
sumzi ai ai ii ai aig nad fai aig ai dn iz ai dn iz iz constant 
second inequality follows explained dth object arrives closing interval ii andd dn prob nad ai ai ai nad fai aig isgiven lemma dn dth object accepted electively 
third inequality follows dn 
lemma combined part lemma lemma show lemma exists constant opening intervals ii kz sumzi log proof suppose ii opening 
sumzi probfai ag sumzi ai mei probfai mei sumzi ai probf mei sumzi ai inequality follows ai probfai mei sumzi ai complete proof show exist constants proof probf mei sumzi ai log kz probfai mei sumzi ai log probf mei sumzi ai log iz kz iz log log iz log constant 
rst inequality lemma bound probf mei lemma bound sumzi ai 
second inequality follows inequality follows ii opening pi 
proof probfai mei sumzi ai probfai sumzi ai prob kz kz ai iz log ii log mei kz iz sumzi ai log log log kz log kz log andc constants 
second inequality lemma bound prob ai mei lemma bound sumzi ai 
inequalities follow ii opening log 
analogously lemma exists constant closing interval ii sumi proof proof analogous lemma 
suppose ii closing 
sumzi inequality follows ai probfai ag sumzi ai probfai mei probfai mei sumzi ai probf mei sumzi ai probfai mei complete proof prove exist constants probf mei sumzi ai probfai mei sumzi ai proof distinguish cases 
case 
probf mei sumzi ai log iz constant 
rst inequality follows lemmas 
inequality follows ii log 
case ii probf mei sumzi ai sumzi ai dn constant 
second inequality observe dn maximum rank wehave sum zth jects accepted ii bounded ien third inequality follows assumption proof probfai mei sumzi ai probfai sumzi ai log prob ai mei iz sumzi ai constant 
second inequality follows lemmas 
third inequality follows sum clearly constant sum converges 
inequality follows de nition closing intervals 
lemma completes proof upper bound sum ranks electively accepted objects 
sums expected sum ranks electively accepted objects intervals 
lemma mx sumzi kz log proof assertion immediate 
mx sumzi kz log log log log kz kz log mx log log log log constant 
rst inequality follows lemmas 
third inequality follows de nition log 
mandatory acceptances section bounds expected sum accepted objects 
rst observe lemma dth object accepted ii mei proof claim 
noted section im im closing 
empty time dth object arrives ij aj 
observed proof lemma case aj closing ij aj implies aj 
object electively accepted top aj nc objects seen far electively accepted top aj nc log nc nc objects seen far 
electively accepted accepted 
assume dth object accepted ii 
de nition accepted implies number open slots just dth object arrival equals total number objects remaining seen 
shown follows ii exists 
ii number open slots equals total number objects remaining seen 
number objects remain seen just ii exactly jii 
di ix ai di pi ix pj ix ix qj jii qj ix pj jii pj jii pi jii mx complete proof su ces show jii pj jii 
distinguish cases 
case case pj jii mx pj jii jii case ii case follows directly de nition pj pj pi clearly objects electively accepted accepted 
assume jii 
jii mx pj jii jii jii pj denote sum zth powers ranks objects accepted ii 
lemma exist constants mx log proof assertion immediate 
argue follows 
number accepted objects ii rank object course greater mx probf mei probf mei probf mei rst inequality follows shown proof lemma object accepted im 
second inequality follows lemma 
third inequality follows complete proof show exist constants andc proof probf mei probf mei probf mei log log log constant 
rst inequality follows lemma 
proof distinguish cases case 
probf mei log log log log logk log log log constants 
fourth inequality follows assumption 
fth inequality follows de nition blog inequality follows log nition 
case ii probf mei log log log log constants 
rst inequality follows lemmas 
lemmas imply theorem expected sum ranks accepted kz log corollary algorithm select accepts best objects positive probability depends proof theorem implies expected sum zth powers ranks accepted objects bounded avalue independent ofn 
value depend probability accepted objects rank clearly acceptance decreases monotonically object rank 
probability accepted objects best objects 
trade small expected rank large probability accepting best theorem maximum possible probability selecting best object 
isa su ciently large ifa algorithm selects objects probability pa selects best greater expected rank selected object proof suppose contrary assertion algorithm selects best object probability expected value rank selected object starting construct algorithm selects best object probability 
denote opt algorithm objects pass accept rst object better seen far 
object accepted time object arrives accept object 
su ciently large algorithm accepts best object highest possible probability probability 
de ne modifying de nition depend parameters 
assume su ciently large absolute constant andc su ciently large respect accept object conditions satis ed accepts object time time object better anybody seen earlier ii opt accepts object accepted earlier somebody time acceptance known best better iii opt accepts object accepted somebody iv object comes time better anybody seen accepted anybody rules object nth object accepted object 
notation denote ba br events opt accept best object 
denote events best object appears intervals respectively 
denote ia ia ia events selection intervals respectively 
distinguish cases 
case fact better approximation ne di erence 
ignore di erence sake 
claim ia ia proof suppose selection time rule case accept object arrives time opt accepts object 
choosing su ciently large objects accepted opt time selection time accept object opt accepts 
ia ia second inequality follows probability opt accepts best object independent order arrival rst objects independent selection time hand ia choosing su ciently large claim follows 
claim ia ia proof claim follows immediately fact picks best object object best seen far rule picks object 
claim ia ia proof ia holds accepted anybody till time letx event chooses de nition ia holds accepts object moment acceptance known best accept object 
complete proof su ces show ia xg ia xg ia xg ia xg suppose ia holds accepts object time 
de nition accepted anybody object accepted better seen earlier 
better object accepted arrives time means best object arrives time objects arrive random order rank dth arriving object set rst distributed uniformly 
probability best object arrive time notice probability independent ordering rst objects independent fact accepted tth object 
probability object accepted best object probability thata accepts best smaller xed choice xed order rst objects property ia probability br larger ba ia xg ia xg 
complete proof case ia ia ia ia ia ia second inequality follows claims 
fourth inequality follows theorem assumption ii case assumption 
case ii 
denote br br br events picks best object selections interval respectively 
denote ba ba ba corresponding events assumption case wehave picks best object object best seen far rule picks object 
choosing su ciently large objects accepted opt time observe case second best comes best comes time accepts best object 
probability second best object arrives time conditional probability best object comes time second best comes follows bounding rst assumption expected rank object selected claim proof dc objects rank smaller dc arrives time probability probability objects arrive time rank larger dc 
probability ia greater expected value rank larger absolute constant 
take theorem equal get contradiction assumption expected rank selected object denote event best object arrives interval 
ia 
independent order arrival rst objects independent accepted object time 
claim implies ia equations imply inequality follows assumption su ciently large respect 

deterministic arrivals section consider case order arrivals random determined adversary knows algorithm oblivious adversary 
show adversary algorithm obtain expected sum zth powers ranks selected items kn particular expected sum tends nity lower bound holds randomized algorithms 
algorithm construct sequence expected sum zth powers ranks objects selected kn loss generality assume 
expected number acceptances prior time th object seen inclusive case ranks arriving objects monotonically increasing 
construct sequence objects best objects rst arrive arrive order increasing rank 
clearly expected number objects accepted second half object rank larger 
follows average rank accepted objects kn case analogous 
sequence constructed worst objects rst arrive arrive order increasing rank 
follows expected sum powers ranks accepted objects kn indebted john yossi mike saks steve samuels robert vanderbei helpful 
ajtai megiddo waarts 
improved algorithms analysis secretary problems generalizations 
manuscript available authors 
chow robbins samuels 
optimal selection relative rank secretary problem 
israel math 


optimum choice instant stopping markov process 
soviet math 

ferguson 
solved secretary problem 
statistical science 
freeman 
secretary problem extensions review 
international statistical review 
gilbert mosteller 
recognizing maximum sequence 
amer 
statist 
assoc 

barron 
choice secretary problem 
commun 
statist 
sequential analysis 
lindley 
dynamic programming decision theory 
appl 
statist 

henke 
bei 
anton hain verlag 

generalization best choice problem 
theory probability appl 


multiple choice secretary problems 
mathematics operations research august 
rubin samuels 
nite memory secretary problem 
ann 
probab 

samuels 
optimal counter strategies secretary problem 
ims bull 

samuels 
secretary problems 
handbook sequential analysis 
sen eds 
marcel dekker new york 
chapter 
samuels 
secretary problems source benchmark sounds 
stochastic inequalities ims lecture notes monograph series 
sleator tarjan 
amortized ciency list updates paging rules 
communication acm 
vanderbei 
optimal choice subset population 
mathematics operations research november 

