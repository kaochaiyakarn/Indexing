illustrating smooth surfaces aaron hertzmann denis zorin new york university new set algorithms line art rendering smooth surfaces 
introduce efficient deterministic algorithm finding silhouettes geometric duality algorithm segmenting silhouette curves smooth parts constant visibility 
methods find silhouettes real time software 
automatic method generating hatch marks order convey surface shape 
demonstrate algorithms drawing style inspired topological francis 
cr categories subject descriptors computer graphics picture image generation display algorithms 
additional keywords non photorealistic rendering silhouettes pen ink illustration hatching direction fields 
line art common illustration styles 
line drawing styles contexts cartoons technical illustration architectural design medical atlases 
drawings communicate information efficiently precisely photographs 
line art easy reproduce compresses represented vector form resolution independent 
different styles line art exist unifying feature styles images constructed uniformly colored lines 
simplest style silhouette drawing consists silhouettes images sharp creases object boundaries 
style sufficient engineering architectural contexts shapes constructed simple geometric components boxes spheres cylinders 
style rendering captures geometry completely ignores texture lighting shadows 
spectrum pen ink illustration style 
pen ink illustrations variable density hatching complex hatch patterns convey information shape texture lighting 
silhouette drawing sufficient convey information simple objects insufficient depicting objects complex free form 
points view smooth object may visible silhouette lines aside outer silhouette information inside silhouette lost 
cases added indicate shape surface 
primary goal develop rendering techniques automatic generation line art illustrations piecewise smooth free form surfaces 
conventional photorealistic rendering techniques buffer ray tracing illustrations cupid mesh 
typically replace smooth surface polygonal approximation reduce problem rendering polygonal meshes 
longer true goal generate line drawings 
differential quantities associated smooth surface recovered order generate visually pleasing hatch directions topologically correct silhouette lines 
problems occur smooth surface replaced polygonal approximation discussed greater detail section 
address general problems computing silhouette curves smooth surfaces generating smooth direction fields surfaces suitable hatching 
algorithms developed implement number non photorealistic rendering techniques 
main focus particular rendering style aims communicate essential information shape surface limited amount hatching 
contributions 
algorithms 
support rendering smooth surfaces developed number novel algorithms including efficient deterministic algorithm detecting silhouettes section 
addition non photorealistic applications method accelerate computation shadow volumes 
algorithm cusp detection segmentation silhouette curves smooth parts constant visibility section 
algorithm computing smooth direction fields surfaces suitable hatching section 
fields wide range uses ranging high quality pen ink rendering interactive illustration hatching 
important feature approach polygonal mesh serve input smooth surface render inferred mesh 
assume explicitly specified parame approach general previously developed techniques 
rendering style 
developed new non photorealistic rendering style techniques francis influenced cartoons thomas 
rules drawing style described section 
previous methods nonphotorealistic rendering separated groups image space object space 
image approach general simple particularly suitable generating concise line drawings untextured smooth surfaces 
image techniques algorithms exploit graphics hardware produce image precision silhouette images 
technique object space method directly uses representation objects images 
salesin describe method producing appealing pen ink renderings smooth surfaces 
parametric lines nurbs patches determine hatch directions silhouette lines computed polyhedral approximation surface 
main technical focus hatch density render complex texture lighting effects 
system relied surface parameterization produce hatch directions parameterization exist types surfaces poor indicator shape exist 
elber principal curvature directions hatching 
curvatures generally provide hatch directions reliably uniquely computed points surface 
system principle curvature directions uses optimization technique fill hatching field poorly defined 
deussen intersections surfaces planes quite flexible approach requires segmentation surface parts different groups planes plane orientations computed skeletons relate indirectly local surface properties 
draws techniques developed vector field visualization 
noted relatively little done generating fields surfaces opposed visualization existing fields 
elber relative merits commonly hatching fields principle curvature directions field tangents lines gradient field brightness 
silhouette detection important component nonphotorealistic rendering systems 
markosian randomized algorithm locating silhouettes system fast guarantee silhouettes :10.1.1.54.5314
gooch elber proposed gauss map efficiently locate object silhouettes orthographic projection 
new method silhouette detection fast deterministic applicable orthographic perspective projection 
method computing silhouette lines free form surfaces closely related computing silhouettes nurbs surfaces 
overview section general overview algorithms 
surface representation 
input data system polygonal mesh approximates smooth surface 
polygonal meshes remain common flexible form approximating surfaces 
information differential quantities normals curvatures associated original surface lost 
need way estimate quantities compute necessary finer approximations original smooth surface 
klein bottle 
lighting hatch directions chosen convey surface shape 
undercuts mach bands near hole self intersection enhance contrast 
done choose method allows construct smooth surface approximating arbitrary polygonal mesh easily compute associated differential quantities normals curvatures 
piecewise smooth subdivision similar algorithms important modification appendix curvature defined nonzero extraordinary vertices 
ways defining smooth surfaces polygonal meshes provided necessary quantities computed 
algorithms 
rendering technique main stages computation direction field surface computation silhouette lines generation hatch lines 
hatch direction field 
stage defines view independent field surface generate hatches 
defining separate directional fields define single cross field section hatches cross hatches 
main steps algorithm smooth surface necessary compute initial approximation field areas surface defined initialize directions arbitrarily optimize directions places cross field defined 
silhouette curve computation 
compute curves steps section compute boundary self intersection crease curves boundaries flat areas compute silhouette curves zero crossings dot product normal view direction find cusps determine visibility segment silhouette curves smooth pieces 
hatch generation 
hatch generation algorithms follow rules described francis section 
surface divided levels brightness corresponding levels hatching highlights mach bands hatching single hatching shadowed regions cross hatching undercuts dense cross hatching 
line thickness varies region lighting 
undercuts mach bands increase contrast objects overlap 
lights placed view position side object 
hatching algorithm covers hatch regions cross hatches removes hatches single hatch regions necessary 
computing silhouette drawings section describe algorithms generating simplest line drawings smooth surfaces call silhouette drawings 
silhouette drawing includes images visually important curves surface boundaries creases silhouette lines self intersection lines 
finding intersections smooth surfaces complex problem address 
find self intersections mesh approximating surface assume self intersection lines mesh approximate self intersection curves surface sufficiently 
boundary curves creases explicitly represented surface focus attention problem computing silhouette lines 
refer creases boundaries curves feature curves 
proceeding recall definitions define precisely mean piecewise smooth surface 
piecewise smooth surface thought finite union number smooth surfaces boundaries 
smooth embedded surface subset point subset neighborhood ball continuous nondegenerate map domain 
domain taken open disk interior points half disk including diameter excluding circular boundary smooth boundary points 
follows definition normal fu fv defined nonzero surface 
direction fu fv point surface independent sign local parameterization denoted 
silhouette set smooth surface set points surface viewpoint 
silhouette general union flat areas surface curves points 
isolate flat areas consider separately 
isolated silhouette points unstable relevant purposes 
surface contain flat areas silhouette general position viewpoint shown consist non intersecting curves silhouette curves 
important role constructions played curvature surface 
specifically interested principal curvatures principal curvature directions 
principal curvatures point maximal minimal curvatures curves obtained intersecting surface plane passing containing normal surface 
principal curvature directions tangents curves maximum minimum obtained directions orthogonal lie tangent plane surface 
formulas expressing quantities terms derivatives standard example 
important property principal curvatures formulated follows surface principal curvatures unit vectors principal directions normal define orthonormal coordinate system parameterizing tangent plane locally surface graph function tangent plane follows principal curvatures principal curvature directions locally define best approximating quadratic surface 
silhouettes meshes smooth surfaces simplest approach computing silhouette curves replace smooth surface triangulation find silhouette edges triangular mesh 
significant differences silhouettes smooth surfaces approximating polygonal meshes 
polygonal meshes complex cusps silhouette chains meet stable disappear viewpoint perturbed 
singularities projections polyhedra studied state rigorous mathematical definitions complete detail interested reader find standard differential geometry texts 
considerable detail see pointers simple classification dimensional case appear explicitly described 
smooth surfaces type stable singularity simple cusp shown classic whitney 
consequence silhouette curves smooth surfaces closed loops start feature lines polygonal surfaces may intersect topology complex 
observe complex polygonal cusp simple smooth cusp left complex cusps stable polygonal meshes 
right simple cusps stable smooth surfaces 
matter fine triangulation topology silhouette polygonal approximation surface significantly different smooth surface 
problem fixed resolution images distance projected silhouette mesh projected silhouette smooth surface pixel topological details distinguished 
want generate resolution independent images capturing essential features silhouette smooth surface correctly apply line styles silhouette curves polygonal approximation 

similar observations 
preserve essential topological properties silhouettes compute silhouette curves approach similar spline surfaces 
recall silhouette set surface zero set function defined surface 
idea compute approximation function find zero set 
vertex polygonal approximation compute true surface normal vertex 
approximation function defined linear interpolation values function 
resulting function piecewise linear zero set consist line segments inside triangle polygonal approximation 
easily enforce general position assumption picking arbitrarily sign function vertices happens exactly zero 
result line segments zero set connect points interior edges mesh form closed loops non intersecting chains connecting points feature lines similar structure actual silhouette curves 
may narrow areas surface sign different surrounding areas 
easy see silhouette curves obtain method topology silhouette curves surface obtained small perturbation original 
means guaranteed plausible image surface may accurately reflect features size order size triangle approximating mesh cases 
silhouette algorithm described greater detail 
cusp detection silhouette curves surface singularities general position projected silhouette curves image plane single stable singularity type aside terminating points feature lines simple cusp 
straightforward way detect singularities examine silhouette edges polygonal approximation produce jagged silhouette curves 
method produces smooth silhouette curves inferring information smooth surface polygonal mesh 
curves shown viewpoint overlayed 
complex cusp occurs polygonal approximation surface nearly parallel view direction 
occur smooth silhouette curve 
smooth line drawing smiling torus 
red box shows location curves 
tangents silhouette curves cusps points tangent parallel view direction 
approach numerically reliable especially silhouette curves approximated polylines 
propose new numerically robust way find cusps geometric observations 
consider silhouette point principal curvature directions principal curvatures viewpoint silhouette point viewing direction tangent plane 
components respect coordinates associated principal curvature directions computed vw 
observed cusp tangent silhouette parallel viewing direction tangent silhouette easily expressed terms curvature 
approximation yields approximation normals small neighborhood near 
equation nd order approximation silhouette curve implicit quadratic equation viewing direction 
calculate vector perpendicular silhouette 
resulting condition viewing direction parallel silhouette tangent equivalently perpendicular viewing direction 
define parameterization independent scalar function surface call cusp function quantities evaluated point function important property cusps contained intersection set families curves obtained zero set function zero set cusp function 
zero set approximated way zero set triangle polygonal mesh may contain single line segment approximating zero set approximating zero set 
allows compute approximate cusp locations robustly introducing spurious cusps time relatively coarse polygonal approximations smooth surface 
left cusps intersections zero sets functions defined surface dot product normal viewing direction cusp function 
silhouette curve shown blue cusp zero set red 
right curves view viewpoint different compute curves 
fast silhouette detection previous section algorithm constructing approximations silhouette curves implemented simplest way requires complete traversal mesh 
traversal unnecessary typically small percentage mesh faces contain silhouettes :10.1.1.54.5314
polygonal meshes number fast techniques developed allow avoid complete traversal 
stochastic algorithm proposed :10.1.1.54.5314
deterministic algorithm gauss map proposed restricted orthographic projection 
new deterministic algorithm accelerated location silhouettes works orthographic perspective projection 
algorithm equally suitable finding silhouettes defined zero sets finding silhouette edges polygonal meshes 
algorithm concept dual surfaces 
points dual surface images tangent planes surface duality map maps plane ax cz homogeneous point 
explicitly obtained mapping point homogeneous point unit normal note inverse true plane dual space corresponds point primal space 
viewpoint homogeneous form 
silhouette surface consists points tangent plane point 
perspective projection means 
orthographic projection homogeneous formula interpreted view direction 
algorithm observation image silhouette set surface respect viewpoint duality map intersection plane dual surface 
fact allows reduce problem finding silhouette problem intersecting plane surface space partition acceleration techniques available 
additional complication introduced fact points dual surface may infinity 
allow consider finite part projective space identified identify projective space points unit hypersphere equivalently boundary hypercube dimensional space 
dimensional space somewhat difficult visualize show idea algorithm example 
case problem compute silhouette points curve points tangent line contains viewpoint 
geometric background somewhat actual algorithm quite simple 
input algorithm polygonal mesh normals specified vertices computing silhouettes zero crossings 
normals necessary locating silhouette edges polygonal mesh 
parts algorithm initialization spatial partition silhouette point curve viewpoint dual curve project left dual curve find silhouette points 
shows curve plane dual sphere 
blue arrow vector origin viewpoint plane blue circle intersection plane passing origin perpendicular unit sphere 
red points silhouette point dual 
silhouette point intersecting blue circle dual curve retrieving corresponding point original curve 
right reducing intersection problem planar subproblems 
upper hemisphere containing dual curve projected surface cube case planar curve line intersection problems solved faces 
silhouette lines duality map correspond intersection curve plane dual surface 
top torus shown camera side views 
bottom faces hypercube contain portions dual surface 
viewpoint dual shown blue plane 
silhouettes occur intersection dual plane dual surface 
intersection dual surface plane corresponding viewpoint 
second part fairly standard focus part 
step vertex normal compute dual position 
dual positions define dual mesh different vertex positions connectivity 
step normalize dual position norm divide max 
division components 
resulting dimensional point surface unit hypercube 
dimensional face cube vertex located determined index sign maximal component 
step triangle dual mesh assigned list dimensional face vertex 
step constructed dimensional face triangles assigned face placed 
second step algorithm repeated frame uses find silhouette edges camera position intersecting dual plane dual surface 
implemented interactive silhouette viewer dual space method 
tests silhouette tests performed twice triangles actual triangles containing silhouettes suggesting performance roughly linear number silhouette triangles 
represents substantial speedup traversing entire mesh 
silhouette edge detection visibility calculations times subdivided venus model triangles performed approximately frames second mhz sgi octane graphics hardware similar performance nondeterministic algorithm :10.1.1.54.5314
visibility computing visibility separate silhouette curves segments 
visibility determined segment 
points separate segments cusps silhouette feature joints inverse images silhouette feature intersections image space 
visibility change points segment completely visible invisible 
determining visibility fundamentally difficult smooth surfaces inferred precisely visibility approximating mesh 
algorithm guarantee correct visibility produced mesh sufficiently fine theoretically estimated required degree refinement 
estimate conservative difficult compute practical implementation refine mesh fixed subdivision level 
visibility algorithm observation area surface rate change normal bounded maximal directional curvature 
sufficiently fine triangulation guarantee triangle changes sign silhouette edge polygonal approximation adjacent vertex triangle 
visibility edges compute visibility silhouette curves 
visibility silhouette edges determined known techniques :10.1.1.54.5314
curve find visibility nearby silhouette edges necessarily consistent visibility majority edges determine visibility chain 
possible show method produce correct visibility sufficiently fine meshes sense smooth surface precise projection topology computed method 
practice algorithm performs extra refinement near silhouettes provided original mesh sufficiently close surface 
efficient algorithm better defined properties useful 
direction fields surfaces fields surfaces 
generate hatches need choose direction fields visible parts surface 
direction fields different commonly vector fields vector field direction field magnitude distinguish possible orientations 
fields defined directly image plane defined surface projected 
advantage method field needs defined continuous separate area image 
somewhat difficult information shape objects constructing field field recomputed image 
choose generate field surface 
number different fields surfaces define hatching directions 
commonly field probably field lines method obvious limitations direction fields venus 
silhouettes convey interior shape surface 
raw principle curvature directions produce overly complex hatching pattern 
smooth cross field produced optimization 
reliable principal curvature directions left unchanged 
optimization initialized principal curvatures 
hatching smooth cross field 
smooth cross field produced optimizing directions 
hatching smooth field 
parameterization may far isometric appropriate surfaces lacking natural parameterization subdivision surfaces implicit surfaces 
successes failures approach provide valuable clues construction fields hatching 
natural geometric candidate pair principal curvature direction fields 
corresponding minimal maximal curvatures refer integral lines fields curvature lines 
fields depend parameterization capture important geometric features consistent common directional hatching pattern 
suffer number disadvantages 
points points coinciding principal curvatures singularities means fields defined sphere arbitrarily complex structure surfaces obtained small perturbations sphere 
flat areas curvatures small fields result far complex pattern human 
candidates include isophotes lines constant brightness gradient field distance silhouette feature lines 
suitable hatching narrow band near silhouettes feature lines typically adequately capture shape silhouettes suitable 
approach observations successes failures existing methods hatching techniques artists 
cylindric surfaces 
surface geometry rendered best principal curvature directions cylindrical surfaces surfaces principal curvatures zero points surface parabolic 
fact quite remarkable psychophysical studies confirm parallel curves create strong impression cylindrical surface curves interpreted principal curvature lines 
important observation cylinders principal curvature lines geodesics necessarily true general 
hatching principal curvature directions fails ratio principal curvatures close 
deussen uses intersections surface planes obtain hatch directions resulting curves locally close geodesics slowly varying surfaces 
isometric parameterizations 
lines curvature directions parameterization exists close possible show surface general position fields globally defined excluding set isolated singularities 
isometric minimizes metric distortion described example 
case parametric lines close geodesics 
lines 
artistic examples 
observe artists tend relatively straight hatch lines surface wrinkles 
smaller details conveyed varying density number hatch directions 
hatches cartoon thomas curve slightly capturing shape surface 
note hatches appear follow cylinder approximating surface 
small details geometry rendered variations hatch density 
observations lead simple requirements hatching fields areas surface close parabolic field close principal curvature directions surface integral curves field close geodesic 
addition surface small details field generated smoothed version surface 
cross fields 
usually possible generate global direction fields main hatch directions observed undesirable general 
reasons illustrate surfaces fields may exist 
second importantly natural cross hatching patterns decomposed smooth fields locally 
consider cross fields maps defined surface assigning unordered pair perpendicular directions point 
constructing hatching fields 
algorithm considerations proceeds steps 
cross hatching pattern produced system smooth corner 
pattern decomposed orthogonal smooth fields near corner singularity 
analytic expression similar field plane cos sin sin cos 
field continuous smooth distinguish step 
optionally create smoothed copy original mesh 
copy compute field 
amount smoothing chosen user regard smoothness original mesh scale geometric detail user wishes capture image 
example smoothing necessary close view small part surface substantial smoothing may necessary produce images general view practice seldom necessary 
step 
identify areas surface sufficiently close parabolic ratio minimal maximal curvature high curvature large computed reliably 
additionally mark unreliable vertex average cross field energy incident edges exceeds threshold order allow optimization vertices singular 
step 
initialize field surface computing principal curvature directions 
quasi parabolic areas user input required initialize field 
step 
fix field quasi parabolic areas optimize field rest vertices marked unreliable 
step primary importance describe greater detail 
optimization procedure observation integral lines field close geodesics 
similar identical requirement field close constant possible 
minimizing angles world space directions adjacent vertices mesh possible requires constrained optimization keep directions tangent planes 
different idea establishing correspondence tangent planes different points surface sense corresponds minimal possible motion tangent plane move point 
need minimize change field respect corresponding directions tangent planes 
sufficiently close points smooth surface natural way map tangent plane tangent plane transport vectors geodesics sufficiently close points unique geodesic connecting points 
done mapping unit vector tangent plane unit vector tangent plane angle tangent geodesic angle 
discrete case adjacent vertices approximating mesh approximate tangents geodesic projections edge tangent planes vertices 
directions projections ij ji rigid transformation ij tangent planes uniquely defined require ij maps ji transformation preserves orientation 
pair tangent unit vectors respectively ij measure moving vectors geodesics 
difference directions 
show value expression ji 
measure difference values cross field points choose unit tangent vector point 
vectors chosen directions cross field 
possible choices point 
choose pair unit vectors difference minimal 
explicitly specify energy functional 
cross field described single angle vertex angle fixed tangent direction directions cross field impose limitations value infinitely choices differing result cross field 
ij direction projection edge tangent plane choice coordinates show quantity ij equal mink cos ij ji 
minimization quantity equivalent minimization mink cos ij ji differentiable 
observe just cos ij ji monotonic function range possible values 
minimizing minimize 
arrive simple energy field edges cos ij ji require constraints variables note values ij constant 
due simple form functional minimized quite quickly 
variant bfgs conjugate gradient algorithm described perform minimization 
irregularly sampled meshes energy may weighted inverse proportion edge length 
necessary meshes 
result optimization depends threshold chosen determine vertices considered unreliable extreme cases vertices marked unreliable field optimized vertices marked reliable field remains unoptimized 
shows results thresholds 
rendering style style rules rendering style extent rules described francis topological turn hatching rules shown 
main discrete hatch densities highlights shadows corresponding directions hatches 
undercuts 
mach bands 
undercuts mach bands increase contrast surfaces overlap 
des rules drawing 
observations various illustrations similar styles 
style description defining undercuts folds 
visible projected silhouette curve separates areas image containing image part surface curve located empty containing image different part surface 
call area fold 
area contains image part surface call undercut 
rules illustrated 
surface separated levels hatching highlights mach bands hatching single hatching shadowed regions cross hatching undercuts dense inside area hatch density stays approximately uniform 
choice number hatch directions particular area surface guided lighting rules undercut side silhouette fold thin area silhouette fold side hatched mach band effect 
undercuts densely hatched 
hatches approximately straight hatch terminated length exceeds maximum direction deviates original fixed angle 
optionally hatch thickness density level inversely proportional lighting resulting effect subtle visible hatches relatively thick 
hatch placement hatching procedure user tunable parameters basic hatch density specified image space hatch density undercuts threshold highlights areas receive hatching threshold separates single hatch regions cross hatch regions maximum hatch length maximum deviation hatches initial direction world space 
varying parameters considerable effect appearance images time required algorithm 
threshold values usually chosen divide object evenly different hatching levels 
hatching field illustrate surface placing hatches field 
define intensity regions surface hatching highlights mach bands single hatching cross hatching shadowed regions 
furthermore highlight hatch regions may marked undercut regions 
hatching algorithm follows 
identify mach bands undercuts 

cover single cross hatch regions cross hatches add extra hatches undercut regions 

remove cross hatches single hatch regions leaving direction hatches 
identifying mach bands undercuts order identify mach bands undercuts step silhouette boundary curve 
ray test near curve point determine fold overlaps surface 
undercuts mach bands indicated grid marking grid cell small distance fold near side surface mach band marking grid cells far side surface larger distance undercuts 
grid hatching section 
cross hatching creating evenly spaced cross hatches surface 
adapt method creating evenly spaced streamlines vector field 
hatching algorithm allows place evenly spaced hatches surface single pass surface 
algorithm takes parameters desired hatch separation distance sep test factor test separation distance indicates desired image space hatch density smaller separation distance undercuts 
algorithm creates queue surface curves initially containing critical curves silhouettes boundaries creases self intersections 
queue empty remove front curve queue seed new hatches points evenly spaced image 
seeding creates new hatch surface tracing directions cross hatching field 
cross field invariant degree rotations step hatch follows possible directions smallest angle previous direction 
hatches seeded perpendicular curves 
hatches seeded parallel hatches distance sep curve 
hatch continues surface terminates critical curve world space hatch direction deviates initial hatch direction constant comes near parallel hatch 
condition occurs endpoint hatch near point hatch conditions met test sep measured image space 
straight line drawn points image space intersect projection visible critical curves 
words hatches interfere nearby surface 
world space tangents hatch curves parallel angle degrees projection tangent plane search nearby hatches performed placing hatches grid grid spacing equal sep ensures grid cells searched detect hatches nearby traced 
hatch reduction cross hatched hatch regions remove hatches single hatch regions contain cross hatches 
removing hatches directly placing single hatch direction avoid difficulty inherent producing consistent vector field surface 
algorithm implicitly segments visible single hatch regions locally consistent single hatching fields 
allows take advantage known view direction limited extent regions 
reduction algorithm examines hatch surface deletes hatch perpendicular hatch 
particular hatch deleted contains point nearby point hatch lie single hatch region 
sep measured image space 
straight line drawn points image space intersect visible critical curve 
world space tangents hatch curves perpendicular angle greater degrees projection tangent plane deleting hatch entails clipping cross hatch region part hatch lies cross hatch region left untouched 
order hatches traversed important na traversal order usually leave single hatch region uneven inconsistent 
perform breadth traversal prevent 
queue initialized hatch curve 
queue empty front curve removed queue 
perpendicular curve single hatch region curve deleted parallel neighbors hatch visited added queue 
queue empty hatch visited added queue remain 
tests perpendicular described angle condition reversed parallel test 
results illustrations created system 
figures demonstrate results relatively fine meshes define surfaces complex geometry 
figures show results system illustrate mathematical surfaces 
time required create illustration varies greatly silhouette drawings computed interactively field optimization takes little time hatching time consuming take seconds minutes depending hatch density complexity model 
model parameters algorithms thresholds hatching position light sources hatch density carefully chosen 
mentioned improvements silhouette visibility algorithm 
performance goal hatching algorithm 
clear substantial speedups possible 
quality fields generated algorithms quite desirable reduce number parameters may tuned 
fundamental problem lack control number type placement singularities generated field 
surfaces interest low genus number singularities small surfaces 
user relation numbers singularities different types determined analogs euler formula formulas known vector tensor fields obtaining classification singularities formula type cross fields described interesting mathematical problem 
surfaces generated francis generalization ap ery homotopy 
boy surface ida roman surface venus 
currently little control placement additional support provided 
furthermore hatch reduction algorithm robust irregular cross hatching patterns hatching improved reduce hatching artifacts employing optimization technique turk banks 
acknowledgments special go jianbo peng implemented dual surface silhouette detection algorithm 
grateful pat hanrahan suggested research topic 
anonymous reviewers comments 
chris participated project early stages 
research supported part nsf nyu center advanced technology 
surfaces subdivision commonly subdivision surfaces variants loop subdivision produce surfaces curvatures converge zero curvature extraordinary vertices 
fundamental reasons 
property undesirable compute silhouette curves means flat points singular behavior near extraordinary points 
developed surface representation subdivision produces surfaces zero curvature extraordinary vertices agree arbitrarily limit surfaces produced subdivision 
representation described 
purposes sufficient way compute curvatures surface associated mesh necessary complete surface evaluation algorithm 
curvature computation propose ideas subdivision compatible curvature computations subdivision surfaces regular case 
consider vertex initial mesh valence regard part smooth surface corresponding neighborhood parameterized regular gon plane 
introduce polar coordinates plane cos sin 
second order approximation surface written sin cos sin cos simple calculation shows squares fit points neighborhood 
pk assumed values sin cos center leads sin cos sin cos note formulas coincide standard formulas tangents loop subdivision surface appropriate variable changes produce second derivatives regular case 
calculations compatible loop surface replace limit limit position control point result obtain set simple rules computing coefficients approximating quadratic surface appropriate change variables compute curvatures compatible loop subdivision rules 
show construct surface precisely curvatures vertices 
similar construction works boundary case 
note coefficients quadric independent possible local behaviors approximated 
known partial derivatives fu fv fuv local parameterization surface principal curvature directions magnitudes computed eigenvalues eigenvectors matrix fu fu fv fu fv fv fuv 

singularities projection piecewise linear surfaces 

univ ser 
mat 

thomas johnson 
normal euler class singularities projections polyhedral surfaces space 
topology 
fabien gershon elber 
output sensitive extraction silhouettes polygonal geometry 
pacific graphics october 
held seoul korea 
william 
differentiable manifolds riemannian geometry 
academic press 
wagner toledo corr ea robert jensen craig thayer adam finkelstein 
texture mapping cel animation 
siggraph conference proceedings pages july 
curtis 
loose sketchy animation 
siggraph conference abstracts applications page 
philippe 
cartoon looking rendering scenes 
technical report inria june 
thierry 
topology symmetric second order tensor fields 
visualization pages october 
oliver deussen org hamel andreas stefan thomas strothotte 
illustration technique hardware intersections 
graphics interface pages june 
matthias eck tony derose tom duchamp hugues hoppe michael lounsbery werner stuetzle 
multiresolution analysis arbitrary meshes 
computer graphics proceedings annual conference series pages 
acm siggraph 
gershon elber 
line art rendering coverage curves 
ieee transactions visualization computer graphics september 
gershon elber 
line art illustrations parametric implicit forms 
ieee transactions visualization computer graphics january march 
gershon elber 
interactive line art rendering freeform surfaces 
computer graphics forum september 
gershon elber elaine cohen 
hidden curve removal free form surfaces 
computer graphics siggraph proceedings volume pages august 
george francis 
topological 
springer verlag new york 
george francis 
venus 
finn hoffman editors geometric analysis computer graphics pages 

amy gooch 
interactive non photorealistic technical illustration 
master thesis university utah december 
bruce gooch peter pike sloan amy gooch peter shirley richard 
interactive technical illustration 
proc 
acm symposium interactive graphics april 
aaron hertzmann 
non photorealistic rendering silhouettes outlines 
stuart green editor non photorealistic rendering siggraph course notes 

hugues hoppe tony derose tom duchamp mark halstead huber jin john mcdonald jean schweitzer werner stuetzle 
piecewise smooth surface reconstruction 
computer graphics proceedings annual conference series pages 
acm siggraph 
victoria 
illustrating surface shape volume data principal direction driven line integral convolution 
siggraph conference proceedings pages august 
bruno 
creating evenly spaced streamlines arbitrary density 
proc 
th eurographics workshop visualization scientific computing pages 
lutz kettner emo welzl 
contour edge analysis polyhedron projections 
klein rau editors geometric modeling theory practice pages 
springer verlag 
pascal michael landy 
observer biases interpretation line drawings 
vision research 
lee markosian michael kowalski samuel daniel goldstein john hughes :10.1.1.54.5314
real time nonphotorealistic rendering 
siggraph conference proceedings pages august 
des 
natural way draw 
houghton boston 
hans pedersen 
framework interactive texturing curved surfaces 
proceedings siggraph pages august 
ramesh raskar michael cohen 
image precision silhouette edges 
proc 
acm symposium interactive graphics april 
ulrich reif 
degree estimate polynomial subdivision surfaces higher regularity 
proc 
amer 
math 
soc 
saito takahashi 
comprehensible rendering shapes 
forest baskett editor computer graphics siggraph proceedings volume pages august 
michael salisbury michael wong john hughes david salesin 
orientable textures image pen ink illustration 
siggraph conference proceedings pages august 
kent stevens 
inferring shape contours surfaces 
alex pentland editor pixels predicates pages 

greg turk david banks 
image guided streamline placement 
siggraph conference proceedings pages august 
chal 
thomas political 
university georgia press atlanta 
whitney 
singularities mappings euclidean spaces 
mappings plane plane 
ann 
math 

georges david salesin 
rendering parametric surfaces pen ink 
siggraph conference proceedings pages august 
zhu richard byrd lu jorge nocedal 
algorithm bfgs fortran subroutines large scale bound constrained optimization 
acm trans 
math 
software 
zorin 
constructing curvature continuous surfaces blending 
preparation 
