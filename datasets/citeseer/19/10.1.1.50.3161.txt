netstat network intrusion detection system giovanni vigna richard kemmerer reliable software group department computer science university california santa barbara vigna cs ucsb edu network attacks common sophisticated 
reason intrusion detection systems shifting focus hosts operating systems network 
network intrusion detection challenging network auditing produces large amounts data di erent events related single intrusion may visible di erent places network 
presents new approach applies state transition analysis technique stat network intrusion detection 
network intrusions modeled state transition diagrams states transitions characterized networked environment 
target network environment represented model hypergraphs 
formal model network protected attacks detected approach able determine network events monitored monitored providing automatic support con guration placement intrusion detection components 
keywords security intrusion detection networks stat 
decade networks grown size importance 
particular tcp ip networks notably world wide internet main means exchange data carry transactions 
main means attack hosts 
growing importance internet network security issues shifted security concerns operating system domain network 
security orts experiencing similar shift 
local centralized approaches evolving distributed networked approaches ort cope interconnected heterogeneous platforms provide scalable solutions 
intrusion detection approach security evolving networked environments 
intrusion detection began technique detecting masqueraders standalone systems years focus intrusion detection moved networks 
intrusion detection systems source events object analysis distributed system composed hosts network links 
goal detect attacks involve network may span di erent hosts 
network level monitoring distribution pose new requirements intrusion detection systems networks produce large amount data events 
network intrusion detection system provide mechanisms allow network security cer customize event collectors listen relevant events 
relevant events usually visible parts network especially case large networks 
nids provide means determining look events 
nids generate minimum amount tra network 
local processing event data 
nids needs scalable 
minimum local nids interoperate possibly hierarchical structure 
maximum ectiveness able interoperate host idss misuse patterns include network events operating system events 
netstat tool addresses aforementioned issues 
netstat approach models network attacks state transition diagrams states transitions characterized networked environment 
network environment described formal model hypergraphs graphs edges connect nodes 
formal representations intrusions network netstat able address rst issues listed 
analysis attack scenarios network formal descriptions determines events monitored detect intrusion monitors need placed 
addition characterizing formal way con guration state network possible provide components responsible intrusion detection information need perform task autonomously minimal interaction tra overhead 
achieved network state transition diagrams contain network topology service con guration 
possible extract central database information needed detection particular modeled intrusions 
attack scenarios assertions characterize state network 
possible automatically determine data collected support intrusion analysis instruct detection components look events involved run time attack detection 
solution allows lightweight scalable implementation monitors focused ltering network event stream delivering reliable cient autonomous components 
order address remaining issues scalability integration idss netstat designed interoperable 
netstat instance protecting network interact netstat instances integrated way 
reports produced analysis network activity input events netstat instances monitoring di erent networks 
enterprise wide cross enterprise attacks detected 
netstat instance interact idss 
netstat designed interoperate idss focus di erent targets host idss systems di erent approaches characterize intrusions idss statistical anomalies thresholds 
possible compose di erent approaches maximum ectiveness 
example host ids notify netstat tool suspicious activity occurring particular host 
consequence netstat raise monitoring level scenarios involve host attack 
example attacks naturally modeled detected nids statistics basis model complicated attacks 
interoperability netstat important interesting issue discussed 
remainder structured follows 
section presents related introduces state transition analysis technique 
section presents netstat architecture 
section describes netstat example attack scenarios 
section draws outlines 
related network oriented intrusion detection systems roughly distinguished distributed idss networkbased idss 
survey network oriented idss 
distributed idss extension original single host intrusion detection approach multiple hosts 
operating intrusion detection analysis audit streams collected sources allows identify attacks spanning systems 
examples kind systems ides aafid 
network idss take di erent perspective move focus computational infrastructure hosts operating systems communication infrastructure network protocols 
systems network source security relevant information 
examples kind systems nsm dids 
nsm network security monitor analyses tra local area network detect network intrusions 
system tailored operate single broadcast link order access tra hosts 
dids evolution nsm integrates data retrieved network events gathered auditing facilities hosts composing network 
case analysis limited single link lan event processing centralized 
target network idss widened address detection large complex network topologies 
grids emerald examples evolution 
grids graph intrusion detection system goal detection attacks spanning large network infrastructures 
grids aggregates results localized host network intrusion detection systems graph structure 
analysis resulting graph allows highlight correlation di erent attacks 
system particularly suitable detect worm attacks 
emerald system design attempts address scalability issues associated intrusion detection large networks 
emerald follows building block approach allows hierarchical composition decentralized service monitors current design apply statistical analysis network data 
decentralization security monitors hierarchical composition promising approach grids emerald provide automatic mechanism determine events monitored security event collectors placed 
leaves con guration system totally hands network security cer 
true commercial network intrusion detection systems netranger realsecure 
netranger realsecure evolved single link monitor approaches distributed architecture 
netranger intrusion detection systems composed type modules sensors directors 
sensors network security monitors analyze network tra network segment logging information produced cisco routers detect network attacks 
director module responsible management group sensors 
directors structured hierarchically manage large networks 
realsecure intrusion detection system composed network engines system agents managers 
network engines network monitors equipped attack signatures matched tra network link 
system agents host intrusion detection systems monitor security sensitive log les host 
modules report ndings central monitor 
monitor displays information user 
addition monitor provides functionalities remote administration installed system agents network engines 
netranger realsecure deployment con guration network intrusion detection components task performed manually network security cer 
addition commercial systems provides user de ned complete language specify new possibly complex attack signatures 
approach extends state transition analysis technique stat network intrusion detection :10.1.1.17.9158
state transition analysis technique conceived method describe computer penetrations sequences actions attacker performs compromise security computer system 
attacks graphically described state transition diagrams 
states represent snapshots system volatile semi permanent permanent memory locations 
description attack safe starting state compromised state 
states characterized means assertions predicates aspects security state system le ownership user identi cation user authorization 
transitions states indicated signature actions represent actions omitted execution attack scenario prevent attack completing successfully 
typical examples signature actions include reading writing executing les 
state transition analysis technique applied host intrusion detection tool called ustat developed 
ustat uses state transition diagrams basis rules interpret changes computer system state detect intrusions real time 
changes computer system state monitored leveraging auditing facilities provided operating systems sun microsystems solaris equipped basic security module 
ustat able interpret audit trail produced single operating system 
detect attacks involve multiple hosts sharing network le systems new tool called developed 
uses client server architecture collect audit records di erent sources hosts merge single audit trail manage synchronization correlation di erent trails perform state transition analysis resulting trail 
components distributed network perform monitoring network level event sources auditing facilities available monitored hosts 
natural evolution state transition analysis direct application networks 
netstat result evolution 
netstat tool aimed real time network intrusion detection 
netstat takes advantage peculiar characteristics intrusion detection analysis network tra networks provide detailed information computer system activity provide information regardless installed operating systems auditing modules available hosts 
addition network auditing performed non intrusive way performance monitored hosts network network audit stream generation turned network tra precise timely timing information audit records produced existing os auditing facilities 
sections design netstat tool examples 
netstat architecture netstat distributed application composed components network fact base state transition scenario database collection general purpose probes analyzer 
high level view netstat architecture 
design main netstat components subsections 
network fact base network fact base component stores manages security relevant information network 
fact base stand application network security cer construct insert browse data network protected 
contains information network topology network services deployed 
probe probe probe network fact base analyzer security officer network internet gateway gateway router database scenario netstat architecture 
network topology description constituent components network connected 
network model underlying netstat approach uses interfaces hosts links constituent elements 
network represented hypergraph set interfaces 
model interfaces nodes hosts links edges hosts links modeled sets interfaces 
original approach number advantages 
model formal provides de ned semantics supports reasoning automation 
formalization allows model network links shared bus ethernet natural way representing shared bus set containing interfaces access communication bus 
way possible precisely model concept network tra eavesdropping basis number network related attacks 
addition topological properties described expressive way hosts links treated uniformly edges hypergraph 
network model limited description connection elements element model associated information 
example hosts attributes characterize type hardware operating system software installed 
note model host general concept host device network interfaces explicit source destination network tra example de nition gateways routers printers considered hosts 
model links characterized type ethernet interfaces characterized type corresponding link network level addresses 
current netstat prototype tailored tcp ip networks underlying model easily accommodate di erent protocol suites iso osi protocols 
network services portion network fact base contains description services provided hosts network 
examples services network file system nfs network information system nis telnet ftp services fact base contains characterization service terms network transport protocol access model request reply type authentication address password token certi cate level tra protection encrypted 
addition network fact base contains information services deployed services instantiated accessed network 
shows example network 
hypergraph representing network interfaces drawn black dots hosts drawn circles corresponding interfaces links represented lines connecting interfaces 
example network composed links twelve hosts sixteen interfaces 
assumed interface single associated ip address example interface associated ip address outside network modeled composite host double circle gure 
composite hosts contain set interfaces speci ed expression 
way possible represent compact way parts network details unknown relevant intrusion detection 
example composite host model outside internet contains interfaces corresponding addresses inside network 
far services concerned example network host fellini nfs server exporting le carpenter wilder jackson chaplin hitchcock telnet landis wood lang bergman fellini outside internet rlogin carpenter lang nfs home fs wood wood example network 
systems home fs wood 
addition fellini telnet server host 
host jackson exports rlogin service hosts carpenter lang 
network security cer access network fact base graphic interface 
interface provides functionalities design network topology de ne service infrastructure browse network related information 
note network model complex formal system interface manage network fact base intuitive user friendly 
netstat intended represent large networks containing large number hosts provide diverse services 
reason alternative graphic interface information inserted retrieved tools 
scripting languages perl bourne shell automate retrieval information network hosts querying network information services yellow pages dns examining con guration les involved hosts inetd conf unix systems 
large networks nature subject changes network fact base component designed provide procedures allow network security cer verify internal representation network deployed infrastructure identify inconsistencies incomplete outdated information 
state transition scenario database state transition scenario database component manages set state transition representations intrusion scenarios detected 
state transition scenario database executed stand application allows network security cer browse edit state transition diagrams friendly graphic interface 
mentioned section state transition analysis technique originally developed model intrusions :10.1.1.17.9158
netstat original stat technique applied computer networks concepts state assertions transitions signature actions characterized networked environment 
states assertions network state transition analysis network state includes currently active connections connection oriented services state interactions connectionless services values network tables routing tables dns mappings arp caches 
instance open connection mounted le system part state network 
pending dns request answered part state mapping ip address name hitchcock 
application state transition analysis networks original state transition analysis concept assertion extended include static assertions dynamic assertions 
static assertions assertions network veri ed examining network fact base examining network topology current service con guration 
example assertion service server services name www application name cern httpd identi es service set services provided host server name service www application providing service cern daemon second example assertion interface gateway interfaces link type ethernet denotes interface host gateway connected ethernet link 
assertions customize state transition representations particular scenarios particular server clients 
practice determine amount knowledge network fact base probe provided con guration procedures 
dynamic assertions veri ed examining current state network 
example server client true speci ed le system exported server currently mounted client 
example addr port addr port true established virtual circuit speci ed addresses ports 
assertions determine events relevant network state monitored network probe 
transitions signature actions netstat signature actions expressed leveraging event model 
model events sequences messages exchanged network 
basic event link level message message short 
link level message string bits appears network link speci ed time 
message exchanged directly connected interfaces 
example signature action possibly nonstandard notation assertions 
message length represents link level message exchanged interfaces size greater bytes basic events abstracted composed represent higher level actions 
example ip datagrams transported interface network modeled sequences link level messages represent intermediate steps delivery process 
note directly observable events link level messages appearing speci links 
ip datagram event observable looking payload link level messages deliver datagram 
example signature action options true represents ip datagram delivered interface interface source route option enabled 
event observed looking link level messages datagram delivery path 
possible write signature actions refer speci link level messages context datagram delivery 
example signature action message dst represents link level message delivery ip datagram link level destination address message nal destination interface message delivery process 
events representing single udp datagrams tcp segments represented specifying encapsulation ip datagram 
example signature action convention interfaces denoted identi ers ip addresses denoted identi ers dst dst denotes sequence messages deliver tcp segment encapsulated ip datagram destination ip address destination tcp port 
tcp virtual circuits higher level composite events 
virtual circuit identi ed tuple source ip address source tcp port destination ip address destination tcp port composed sequences tcp segments exchanged interfaces 
sequences de nes byte stream 
byte stream obtained assembling payloads segments corresponding sequence rules tcp protocol sequencing retransmission 
streams denoted 
example signature action syn false ack true denotes tcp segment belongs virtual circuit established interfaces 
virtual circuit destination ip address destination port 
segment syn bit set ack bit set 
events application level encapsulated udp datagrams sent tcp virtual circuits 
case application level event referenced indicating corresponding datagram specifying encapsulation 
example signature action rpc dst dst type call proc mkdir represents rpc request encapsulated udp datagram representing nfs command 
tcp virtual circuit case application level events extracted parsing stream bytes exchanged virtual circuit 
type application event determines protocol interpret stream 
example signature action method get get request transmitted tcp virtual circuit de ned stream directed client server 
probes probes active intrusion detection components 
monitor network tra speci parts network con guration receive startup analyzer described section 
probes general purpose intrusion detection systems con gured remotely dynamically changes modeled attacks implemented security policy 
probe structure shown 
lter module responsible ltering network message stream 
main task select messages contribute signature actions dynamic assertions state transition scenario huge number messages transmitted network link 
lter module con gured remotely analyzer 
con guration updated run time re ect new attack scenarios changes network con guration 
performance lter paramount importance strict network interface filter network link inference engine decision engine probe probe architecture 
real time constraints process selecting events delivered inference engine 
current prototype lter implemented bsd packet filter 
inference engine actual intrusion detecting component 
module initialized analyzer set state transition information representing attack scenarios parts thereof 
attack scenarios codi ed structure called inference engine table 
point probe execution table consists snapshots penetration scenario instances instantiations completed 
entry contains information history instantiation addresses services involved time attack started 
basis current active attacks event stream provided lter interpreted looking evidence occurring attack 
evolution inference engine state monitored decision engine responsible actions outcomes inference engine analysis 
possible actions include informing network security cer successful failed intrusion attempts alerting network security cer rst phases particularly critical scenarios suggesting possible actions preempt state transition leading compromised state playing active role protecting network injecting datagrams reset network connections 
probes autonomous intrusion detection components 
single probe able detect steps involved attack probe need interact probe analyzer 
interaction needed di erent parts intrusion detected probes monitoring di erent subparts network 
case analyzer task decompose intrusion scenario detected single probe 
decision engine procedures associated scenarios con gured part scenario detected event sent probes charge detecting parts attack 
simple form forward chaining allows detect attacks involve di erent possibly distant subnetworks 
analyzer analyzer stand application network security cer analyze instrument network detection number selected attacks 
takes input network fact base state transition scenario database determines events monitored events relevant modeled intrusions detected events need monitored information topology network required perform detection information maintained state network order able verify state assertions 
analyzer component acts probe manager customizes number general purpose probes automated process formal description network protected attacks detected 
customization takes form set probe con gurations 
probe con guration speci es positioning probe set events monitored description intrusions analysis engine configuration builder analysis results analyzer probe configurations scenario database network fact base filter config state transition information filter config state transition information filter config state transition information filter config state transition information decision tables decision tables decision tables decision tables analyzer architecture 
probe detect 
intrusion scenarios customized particular subnetwork probe monitoring focuses scanning reduces overhead 
analyzer composed modules see 
network fact base state transition scenario database components internal modules selection presentation particular network selected set state transition scenarios 
analysis engine uses data contained network fact base state transition scenario database customize selected attacks particular network exam 
example scenario describes attack exploits trust relationship server client scenario customized particular services deployed actual network nfs server clients 
customization allows instantiate attack particular context 
description topology context possible identify su cient conditions detection particular attack simply detected network con guration 
attack scenarios contained state transition scenario database customized respect network module called con guration builder translates results analysis engine set con gurations sent di erent probes 
con guration contains lter con guration set state transition information corresponding decision tables customize probe decision engine 
architecture architecture netstat supports de ned con guration deployment process 
firstly network security cer builds database attack scenarios 
database may include pre modeled wellknown scenarios may extended network security cer perception attack local security policy 
attack scenario database created maintained state transition scenario database stand application 
network security cer builds network fact base describing network protected 
task achieved combination methods ranging manual data automated information retrieval 
operation performed network fact base stand application 
phase network security cer invokes analyzer 
integrated network fact base state transition scenario database modules network security cer selects particular network description set scenarios detected 
choice dictated particular level security achieved network security policy force 
network security cer starts analysis customization process 
process automated circumstances may require interaction network security cer example manage situations attack scenarios detected 
analysis completed probe con gurations created sent probes installed network 
examples section presents network attack scenarios demonstrates described networkbased state transition analysis shows necessary probes detecting attacks placed con gured analyzer tool 
attacks discussed section analyzed assumption attackers able block tra reasonable assumption blocking attacks di cult implement 
assumption greatly simpli es analysis allows cient probe con gurations ip spoo ng ip spoo ng attack host tries impersonate host third host producing spoofed ip datagram directed addresses source address datagram ip address associated interfaces datagram initially generated interfaces receives spoofed datagram processes originally sent attack basis attacks services source ip address request credentials client 
ip spoo ng succeeds original version ip protocol provide form strong authentication 
new version ip protocol designed 
new ip protocol includes mechanisms origin authentication protection payload 
new version ip protocol provides stronger security current version internet protocol widely attacks ip spoo ng frequent 
modeling language netstat allows represent attacks di erent ways 
general way attack described may uence ectiveness detection 
subsections di erent characterizations ip spoo ng attack described 
version analyzed detail simple example network resulting probe placement con guration 
subsection variation ip spoo ng attack exploits udp services analyzed respect complex network 
simple description attack intuitive direct way describe ip spoo ng attack netstat shown 
assertions state de ne entities attack scenario 
rst clause identi es host spoofer blocking attacks considered inherent network state transition analysis approach allow inclusion 
message dst src host spoofer network hosts interface spoofer interfaces host victim network hosts interface victim interfaces victim spoofer network spoofer contains compromised rst description ip spoo ng attack 
set hosts contained modeled network 
second clause identi es spoofer interfaces 
clauses identify host victim di erent spoofer victim interfaces 
fth clause states ip address associated interface 
clause states ip address associated spoofer 
note identi er network denote network represented network fact base 
signature action represented link level message belonging sequence messages generated delivery ip datagram endpoint interfaces 
ip datagram destination address source address 
message rst message delivery sequence source interface 
speci cally means ip datagram originates spoofer interfaces source ip address associated host spoofer datagram considered spoofed 
second state compromised state 
analysis demonstrate analysis technique attack analyzed respect simple network shown 
network composed hosts lucas gilliam coppola cameron links interfaces 
interface corresponding ip address gilliam lucas coppola cameron simple network 
interface associated ip address netstat analysis engine takes input description attack fact base network tries determine events monitored events monitored detect attack 
achieve goal analysis engine generates possible instantiations selected attack scenario respect network exam 
ip spoo ng attack engine rst generates possible combinations attackers victims corresponding interfaces ip addresses 
results shown table 
example consider fourth row 
row identi es scenario spoofer host lucas sending spoofed datagram interface interface host cameron plays role victim 
destination address ip datagram cameron address source ip address lucas ip address considered 
scenarios table analysis engine generates possible datagrams interface spoofer interface victim practice engine nds paths interfaces de ned scenario path generates sequence link level messages deliver spoofed ip datagram 
example scenario lucas attacking cameron spoofed datagrams delivered link level messages 
rst message lucas interface coppola interface second message coppola interface cameron interface precisely possible combinations datagram elds attack representation source destination ip address 
scenarios spoofer victim lucas gilliam lucas coppola lucas coppola lucas cameron gilliam lucas gilliam coppola gilliam coppola gilliam cameron coppola lucas coppola gilliam coppola cameron coppola lucas coppola gilliam coppola cameron cameron lucas cameron gilliam cameron coppola cameron coppola table possible ip spoo ng attack scenarios 
analyzer identi es relevant messages applying predicate contained clause signature action message 
speci cally analyzer determine message rst message sequence deliver datagram 
example scenario previously considered lucas attacking cameron rst message satis es predicate 
detect ip spoo ng attack particular scenario needs place probe link message appears probe instructed look messages source ip address denoted destination ip address process repeated scenario 
table shows datagrams corresponding messages scenario 
messages satisfy signature action clause underlined 
detection rst message tricky task 
source interface belongs host single interface su cient place probe link message appears 
message generated interface multi interface host necessary verify message rst delivery process messages forwarded delivery process perfectly legal datagram agged part ip spoo ng attack 
example consider message hi ha ii message sent coppola cameron encapsulates ip datagram lucas cameron 
message represent second step delivery normal ip datagram result coppola attempt spoof lucas address respect cameron 
case way detect attack place probe link probe link message directed coppola intended cameron appears link corresponding probe sends message probe link subsequent message appearing ignored 
solution creates enormous tra overload message forwarded coppola requires synchronizations probes 
resulting probe con gurations shown table 
scenarios messages spoofer victim lucas gilliam hi ha ii lucas coppola hi ha ii lucas cameron hi ha ii hi ha ii gilliam lucas hi ha ii gilliam coppola hi ha ii gilliam cameron hi ha ii hi ha ii coppola lucas hi ha ii coppola gilliam hi ha ii coppola cameron hi ha ii cameron lucas hi ha ii hi ha ii cameron gilliam hi ha ii hi ha ii cameron coppola hi ha ii table messages generated scenarios 
message represented format hi ha ii source interface destination interface respectively source destination ip addresses encapsulated ip datagram 
messages satisfy clause signature action underlined 
probe link source interface destination interface source ip address destination ip address messages part attack probe link noti ed 
messages part ip spoo ng attack probe link send noti cation events respectively 
probe link source interface destination interface source ip address destination ip address messages probe link detect coppola attacks 
messages part ip spoo ng attack probe link send noti cation events respectively 
table probe con gurations 
network src 
src interface message src dst host victim network hosts interface victim interfaces host spoofer network hosts interface spoofer interfaces victim spoofer network spoofer contains compromised second way describe ip spoo ng attack 
improved description ip spoo ng attack modeled di erent way puts hint description attack allows smarter probe placement 
improved description takes advantage netstat modeling language ability explicitly refer target network topology 
attack described previous section spoofed ip datagram message originates datagram sent host associated source ip address datagram 
way model ip spoo ng attack characterize fact messages deliver ip datagram legally appear paths 
consider state transition diagram 
assertions associated state analogous previous case 
characterize attacker attacked hosts interfaces address 
signature link level message encapsulating ip datagram source ip address destination ip address 
di erence previous description occurs de nition means spoofed 
description datagram considered spoofed path message source interface src interface associated source ip address interface network obtained removing message source interface link network src 
path datagram delivery process legally reached current step deduce datagram spoofed 
second state compromised state 
analysis analysis attack follows steps described previous section 
analysis engine determines attack scenarios respect selected target network see state assertions changed respect previous ip spoo ng attack description scenarios listed table 
messages deliver spoofed ip datagrams generated matched signature action clause 
table shows matching messages 
table shows possible con guration probes 
result improved description attack scenarios place probe place 
example detect cameron attempting impersonate lucas respect gilliam place probe link looking message hi ha ii link looking message hi ha ii 
probes necessarily required placed link attacker host 
advantage evident example network asset large networks 
addition probes need interact detect attacks reducing tra overhead zero 
solution disadvantages 
attacks longer detected host coppola impersonating cameron respect gilliam lucas coppola impersonating gilliam lucas respect cameron 
second cases possible identify host performed spoo ng 
example message hi ha ii determine attack coppola cameron 
may note despite hint attack described number probes required detect attacks reduced respect attack discussed section 
fact cases goal analysis detect possible attempt spoo ng scenarios messages spoofer victim lucas gilliam hi ha ii lucas coppola hi ha ii lucas cameron hi ha ii hi ha ii hi ha ii hi ha ii gilliam lucas hi ha ii gilliam coppola hi ha ii gilliam cameron hi ha ii hi ha ii hi ha ii hi ha ii coppola lucas hi ha ii hi ha ii coppola gilliam hi ha ii hi ha ii coppola cameron hi ha ii hi ha ii cameron lucas hi ha ii hi ha ii hi ha ii hi ha ii cameron gilliam hi ha ii hi ha ii hi ha ii hi ha ii cameron coppola hi ha ii table messages generated analysis attack respect network 
messages satisfy clause signature action underlined 
probe link source interface destination interface source ip address destination ip address probe link source interface destination interface source ip address destination ip address table probe con gurations resulting analysis attack respect network 
probe link 
situations interested limited set possible victims spoofed addresses ip spoo ng gain privileged access service authenticates clients basis ip address 
subsection ip spoo ng description discussed applied detect attacks udp services 
udp spoo ng attack example attack considered active udp spoo ng attack 
scenario attacker tries access udp service exported server pretending trusted clients sending forged udp ip datagram contains ip address authorized clients source address 
attack described 
case subnetwork called contains hosts protected spoo ng attacks 
starting state characterized assertions de ne hosts interfaces addresses services involved host victim hosts compromised service victim services protocol udp authentication host spoofer network hosts spoofer victim interface spoofer interfaces spoofer intersect isempty dst port message interface src dst network src src interface ip spoo ng attack host protected network 
attack 
rst assertion states attacked host victim belongs protected network 
second assertion states service set services provided victim transport protocol udp service authentication ip address client 
third assertion states ip addresses service available 
fourth assertion says addresses service considers trusted 
assertions characterize attacker 
particular fth assertion states exists host spoofer di erent victim associated trusted ip addresses sixth assertion states spoofer interfaces 
signature action spoofed service request 
signature action link level message belongs sequence messages deliver ip datagram interface interface associated address attacked host 
ip datagram enclosed message source address destination address 
ip datagram encloses udp datagram destination port port service addition message considers network obtained may decide consider attacks trusted client trusted client 
removing message source interface corresponding link network src path interface corresponding datagram ip source address link level message source interface 
second state compromised state 
analysis attack analyzed respect example network 
protected network composed internal hosts represented hosts exception composite host representing outside internet 
analysis attack starts identifying possible scenarios context modeled network 
analysis engine determines possible combinations victim host attacked service spoofed address attacker 
network exam possible victim fellini service attack nfs trusted addresses wood respectively 
attacker host wood 
possible scenarios listed table 
step analysis determine events associated signature action detected 
scenario analysis engine generates messages perform attack 
message matched predicate signature action 
messages satisfy predicate candidates part detection scenario 
example consider scenario carpenter attacking fellini pretending wood 
case spoofed datagram generated interface delivered messages fellini interface rst message carpenter bergman second bergman chaplin third chaplin fellini 
messages rst satisfy predicate signature action 
detect particular scenario needs probe looking link level messages carpenter interface bergman interface probe looking messages bergman interface chaplin interface cases ip source address destination ip address destination udp port nfs service 
complete results analysis table 
analyzing scenarios nds order detect possible spoo ng attacks necessary set probes links scenarios victim spoofer fellini nfs outside fellini nfs outside fellini nfs hitchcock fellini nfs hitchcock fellini nfs landis fellini nfs landis fellini nfs chaplin fellini nfs chaplin fellini nfs wilder fellini nfs wilder fellini nfs jackson fellini nfs jackson fellini nfs bergman fellini nfs bergman fellini nfs carpenter fellini nfs carpenter fellini nfs lang fellini nfs lang table possible scenarios udp spoo ng attack 
con guration shown table 
note scenario chaplin attacks fellini pretending wood detected 
scenario detected signature action attack modeled analogously case analysis require detect rst messages 
consequence need probe link probes synchronize nfs requests go chaplin hitchcock bergman 
tcp spoo ng attack tcp spoo ng attack attacker host tries impersonate host addresses third host tcp session 
udp attack described section impersonation aims exploiting trust relationship attacked spoofed host 
example rsh rlogin protocols allow sessions established need provide password connecting host name address listed user system con guration le 
name address host means authentication 
weak authentication procedure misused gain unauthorized access 
attack discussed 
order successfully impersonate host able 
prevent tcp segment sent session processed host 
determine rst sequence number produced connection setup attacked host rst condition satis ed replies spoofed segments delivered deduce error occurred send reset segment resulting connection shutdown 
tcp segments prevented processed spoofed host forwarder segment session gateway able block tra ii deaf responding slowly tra coming discussed earlier assumed case hold case easily achieved means ooding attack unable process tcp ip tra scenarios messages spoofer victim outside fellini hi ha piii hi ha piii hi ha piii outside fellini hi ha piii hi ha piii hi ha piii hitchcock fellini hi ha piii hi ha piii hitchcock fellini hi ha piii hi ha piii landis fellini hi ha piii hi ha piii landis fellini hi ha piii hi ha piii chaplin fellini hi ha piii chaplin fellini hi ha piii wilder fellini hi ha piii wilder fellini hi ha piii jackson fellini hi ha piii hi ha piii jackson fellini hi ha piii hi ha piii bergman fellini hi ha piii hi ha piii bergman fellini hi ha piii hi ha piii carpenter fellini hi ha piii hi ha piii hi ha piii carpenter fellini hi ha piii hi ha piii hi ha piii lang fellini hi ha piii hi ha piii hi ha piii lang fellini hi ha piii hi ha piii hi ha piii table messages generated analysis attack respect network 
message represented format hi ha hp iii source interface destination interface respectively source destination ip addresses encapsulated ip datagram source destination ports encapsulated udp datagram 
messages port nfs service fellini 
messages satisfy clause signature action underlined 
probe link source interface destination interface source ip address destination ip address source udp port destination udp port probe link source interface destination interface source ip address destination ip address source udp port destination udp port probe link source interface destination interface source ip address destination ip address source udp port destination udp port table probe con gurations udp spoo ng attack 
sequence number condition posed way handshake establish tcp connection 
tcp spoo ng attack starts host sending spoofed rst segment pretending requesting connection segment syn ag set contains initial sequence number seq determined attacker 
host replies sending segment containing initial sequence number seq acknowledgment previous sequence number ack seq segment marked syn ack ags 
complete handshake host send segment ack ag set come contains sequence number seq seq acknowledgment number ack seq 
know seq order able complete handshake successfully 
ways achieve attacker guesses right number interpolating function generate sequence number described attacker sni reply 
cases tcp spoo ng attack modeled 
starting state characterized assertions de ne entities involved attack 
host victim provides tcp address authenticated service service available address 
ip service victim services protocol tcp authentication host victim hosts addresses network src 
dst src dst port syn true ack false src interface message interface host spoofer network hosts spoofer victim spoofer intersect isempty interface spoofer interfaces compromised dst src src dst dst src src dst ack seq interface syn false ack true dst src src dst interface dst src src dst syn true ack true tcp spoo ng attack 
address service trusted addresses 
trust relationship exploited host spoofer di erent victim associated trusted addresses 
rst signature action message belongs sequence messages send victim spoofed ip datagram source ip address trusted address 
datagram encapsulates tcp segment syn ag set destination port port service message network obtained removing message source interface corresponding link path message source interface interface associated trusted address 
second signature action victim reply 
event tcp segment encapsulated ip datagram 
source destination addresses ports inverted respect previous signature action 
syn ack ags set 
note case necessary specify particular message involved datagram delivery link level information 
means messages deliver ip datagram detect signature action 
nal signature action step tcp connection setup handshake 
tcp segment enclosed ip datagram delivered path attacker victim 
attack successful tcp segment acknowledgment number equal increment sequence number contained tcp segment previous signature action 
destination state compromised state analysis initial step analysis network fact base queried hosts provide address authenticated services corresponding trust relationships 
example network results host jackson exporting rlogin service carpenter lang 
attack scenarios feature jackson victim rlogin service attacked address spoofed address 
spoofer host jackson carpenter lang 
attack scenario analysis engine generates messages involved matches corresponding signature actions 
rst signature action spoofed ip datagram 
case analysis analogous performed section 
results single probe able detect rst step scenario 
probe con gured looks messages coming interface bergman directed jackson interface messages contain requests jackson rlogin service create tcp virtual circuit pretend come ip address second signature action legitimate reply jackson carpenter lang 
scenario reply detected probe link link event third signature action detected probe link analogously rst signature action 
result single probe link able detect possible attack scenario network 
src dst dst src dst src src dst network src 
message interface src src interface host server network hosts service server services protocol udp authentication racer server host racer network hosts interface interfaces racer contains interface racer interfaces interface interface src dst dst port attack src dst dst src src dst dst src compromised src dst src dst dst src dst src interface interface interface interface src dst dst src dst src src dst network src 
src src interface message interface udp race attack 
udp race attacks attack race attacks kind spoo ng attack 
attack section scenario server exporting udp service protocol follows request reply schema authentication host address name 
attack legitimate client performs service request server 
attacking host able detect request issued produces reply appears come server 
spoofed reply reaches client legitimate client take actions basis contents spoofed reply usually ignore legitimate considering transmission error 
instance class attack represented nis authentication race 
attack intruder races nis server answering request password le performed nis client authentication purposes 
application attack server side spoo ng nfs protocol example attacker delivers trojan horse versions executables requested client 
attack described 
assertions state identify server providing service uses udp transport protocol performs authentication basis ip address 
service contacted ip address 
client identi ed stating trusted ip address interface 
attacker host racer modeled interface 
rst signature action client request 
event udp datagram delivered path client interface server interface 
starting state signature action sequences possible attacker wins race able deliver spoofed reply client attacker loses race attack successful 
rst case attack evolution follows states reach nal compromised state 
second case attack proceeds states nal state described safe attack 
cases signature actions legitimate server reply spoofed reply coming racer pretending server 
analysis consider network 
matching scenario description network fact base analysis engine obtains host fellini playing role server providing nfs service clients wood 
rst class scenarios attacked client 
case attempt impersonate fellini respect detected probe link instructed look message nfs reply address originated interface link possible detect events involved scenario client request server legitimate response 
probe link able detect class scenarios 
second class scenarios features wood attacked client 
case client request server legitimate responses detected link link detection spoofed reply achieved placing probes links detection scenarios jackson bergman carpenter lang detected single probe link scenario wilder attacks wood detected single probe link contrast events involved attack scenarios landis hitchcock outside composite host play role appear di erent links network client request server reply detected link link spoofed reply detected link 
analysis engine tries solve problem ways trying place probe host chaplin connected links ii splitting scenario assigned di erent probes 
case probe link instructed look udp datagrams pretend come fellini directed wood 
event detected message sent probe link responsible detection events scenario 
state transition analysis proved ective approach host intrusion detection 
presents application state transition analysis approach detect network intrusions 
approach formal models attack scenarios state transition diagrams network network hypergraphs 
models composed order determine con guration positioning intrusion detection probes 
resulting architecture distributed autonomous highly customized target network 
way probes focused high volume event streams generated networks ltered resulting decreased overhead 
current prototype netstat tool allows network security cer de ne network state transition diagrams describing attacks 
number sample networks constructed prototype network fact base component 
addition network state transition representations attacks de ned 
attacks include di erent avors udp tcp spoo ng attacks udp race attacks cgi attacks rpc attacks dns attacks remote bu er ows denial service attacks 
analyzer initial stage development 
provides limited ad hoc set analytic capabilities related topological analysis network hypergraphs 
currently analyzer able produce actual probe con gurations con gurations generated manually existing algorithms tested real networks 
problems anticipated dealing real networks scalability proposed network analysis process 
sample attacks described analyzed respect toy network composed hosts 
question technique applicable networks composed thousands hosts 
approach tested large network preliminary investigation indicates approach applied 
explicit analysis process critical operation generation possible instances attack scenario respect target network 
combinatorial process may produce large number cases 
attack scenario instances need considered time 
analyzer require large amount memory able operate large networks may require large amount time 
number attack scenario instances considered reduced network representation 
parts target network modeled composite hosts case real networks number cases greatly reduced 
second half netstat prototype evaluated part mit lincoln laboratory line intrusion detection system evaluation air force research laboratory afrl real time evaluation 
rst case netstat analyze dumps weeks tra looking attack signatures 
second case netstat prototype installed testbed network afrl 
testbed network composed subnetworks connected routers 
subnetworks composed heterogeneous hosts pcs linux windows nt di erent versions sunos solaris ibm workstations aix 
orts netstat prototype performed 
participating event gave new insights approach detect intrusions strong positive feedback research performed far 
focus completion rst prototype re nement architecture 
currently language describe attacks netstat tool ad hoc 
research progress de ne new language stat toolset 
language intended provide de ned semantics allow security cer describe host network intrusions uniform way 
acknowledgments research supported defense advanced research projects agency darpa rome laboratory air force materiel command usaf agreement number 
anderson 
computer security threat monitoring surveillance 
james anderson fort washington april 
garcia fernandez spa ord zamboni 
architecture intrusion detection autonomous agents 
technical report coast tr department computer science purdue university 
bellovin 
security problems tcp ip protocol suite 
computer communications review 
berge 
hypergraphs 
north holland 
cheung crawford frank levitt rowe staniford chen yip 
design grids graph intrusion detection system 
technical report cse davis computer science department january 
cisco 
netranger intrusion detection system 
technical information april 
deering 
internet protocol version ipv speci cation 
rfc december 
denning 
intrusion detection model 
ieee transactions software engineering february 
heberlein dias levitt mukherjee wood 
network security monitor 
proceedings ieee symposium research security privacy pages oakland ca may 
hess sa ord 
unix network protocol security study network information service 
technical report texas university november 
ilgun 
ustat real time intrusion detection system unix 
master thesis computer science department university california santa barbara july 
ilgun 
ustat real time intrusion detection system unix 
proceedings ieee symposium research security privacy oakland ca may 
ilgun kemmerer porras :10.1.1.17.9158
state transition analysis rule intrusion detection system 
ieee transactions software engineering march 
internet security systems 
realsecure version january 
javitz valdes 
sri ides statistical anomaly detector 
proceedings ieee symposium security privacy may 
kemmerer 
model real time network intrusion detection system 
technical report department computer science uc santa barbara november 
kent atkinson 
ip authentication header 
rfc november 
kent atkinson 
ip encapsulating security payload esp 
rfc november 
kent atkinson 
security architecture internet protocol 
rfc november 
mit lincoln lab 
darpa intrusion detection evaluation 
ideval ll mit edu index html 
mccanne jacobson 
bsd packet filter new architecture user level packet capture 
proceedings winter usenix conference san diego ca january 
morris 
weakness bsd unix tcp ip software 
technical report bell laboratories february 
mukherjee heberlein levitt 
network intrusion detection 
ieee network pages may june 
porras 
stat state transition analysis tool intrusion detection 
master thesis computer science department university california santa barbara june 
porras neumann 
emerald event monitoring enabling responses anomalous live disturbances 
proceedings national information systems security conference october 
postel 
user datagram protocol 
rfc august 
postel 
internet protocol 
rfc 
postel 
transmission control protocol 
rfc september 
dias heberlein ho levitt mukherjee 
dids distributed intrusion detection system motivation architecture early prototype 
proceedings th national computer security conference washington dc october 
sun microsystems installing administering basic security module 
garcia ave mountain view ca december 
vigna 
topological characterization tcp ip security 
technical report tr politecnico di milano november 
vigna kemmerer 
netstat network intrusion detection approach 
proceedings th annual computer security application conference scottsdale arizona december 
winkler 
unix prototype intrusion anomaly detection secure networks 
proceedings th national computer security conference washington october 
