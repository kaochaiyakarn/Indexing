analyzing needham schroeder public key protocol comparison approaches catherine meadows code center high assurance computer systems naval research laboratory washington dc meadows itd nrl navy mil 
contrast nrl protocol analyzer gavin lowe model checker fdr analyze needham schroeder public key protocol :10.1.1.27.6385
basis compare contrast systems point possible directions research 
early automated analysis cryptographic protocols concentrated building special purpose tools nrl protocol analyzer interrogator longley protocol analysis tool 
existed application existing tools kemmerer ina jo approach followed 
early concentration special purpose tools may result belief cryptographic protocols certain unique properties amenable analysis tool special purpose models algorithms 
certainly belief motivated development nrl protocol analyzer 
research progressed area people comfortable techniques assumptions needed analyze cryptographic protocols researchers exploring ways existing formal methods tools applied problem assuring cryptographic protocol correctness finding flaw exists 
example theorem prover hol stating proving properties cryptographic protocols 
point sense ask question comparisons ways approaching problem 
clearly advantages existing system greater power maturity advantages tailored problem hand giving better assistance solving problems interest 
expect existing systems provide help solving parts problem problem resemble problems special purpose system provide help solving parts problem unique unusual 
tell exactly things balance experience gained applying types systems problem 
try answer questions comparing different tools analyze protocol public key authentication protocol 
tools nrl protocol analyzer special purpose tool analyzing cryptographic protocols 
fdr model checker tests csp programs specifications 
results analysis provide basis comparison tools 
provide comparison special purpose versus general tools basis looking problem 
history tools analyze protocol follows 
fdr tool lowe find man middle attack protocol 
attack new matter fact protocol previously proven correct 
nrl protocol analyzer reproduce attack new attacks 
remainder structured follows 
section contains description needham schroeder public key protocol referred needham schroeder protocol confused famous private key protocol attacks 
section brief account fdr lowe analysis needham schroeder protocol complete account :10.1.1.27.6385
section describe nrl protocol analyzer show analyze protocol 
section compare approaches 
section concludes 
needham schroeder public key protocol needham schroeder protocol uses public keys achieve authentication parties 
protocol involves initiator responder server proceeds follows 

requests public key 
fkb bg ks gamma sends public key name signed digital signature 
checks signature name 

fra sends nonce ra name encrypted public key 
decrypts get name 

requests public key fact attacks fdr necessarily point limitation system lowe approach simply result fact lowe slightly different assumptions primitives protocol lowe analyzed fragment entire protocol 

ag ks gamma sends public key 
checks signature name 

fra rb generates nonce rb sends ra encrypted ka decrypts message 
finds ra assumes message response original message 

gkb encrypts rb kb sends decrypts message 
finds rb assumes message response original message 
reasoning protocol straightforward 
gets message fra rb assumes received message encrypted public key reason reveal ra knows ra message response message fra likewise receives gkb reasons knows rb sent message response message fra rb words ra rb serve nonces authenticators 
burrows abadi needham suggest authenticators subsequent communication 
see dangerous consequences 
argument appears rigorous form burrows abadi needham logic authentication set forth prove protocol correct 
logic relies assumption principals divulge secrets misses attack discovered lowe relies intruder willingness divulge secret nonce 
lowe leave initial distribution public keys 
attack involves parties intruder notation mean impersonating subscript refers intruder acting 

fra initiates communication 
fra initiates communication ra 
fra rb responds decrypts finds ra 
gk thinking previous message response responds kind 
decrypts rb impersonate 
gkb completes protocol ra rb authenticators ability impersonate rest session read messages 
digital signatures authentication impersonate contrast original needham schroeder suggest authentication supplied public key signatures 
managed get state thinks initiated communication fact 
burrows abadi needham lowe assume principals distinguish types possible example confuse name nonce key 
assumption usually considered easy ensure proper formatting useful see happen types confused 
point places unambiguous formatting vital security 
attack nrl protocol analyzer key distribution authentication phase protocol relies confusion nonces names 

fr 

ag ks gamma 
fr rb message 

rb fr rb sends intercepted message initiator protocol rb name field 

rb sends name rb order get public key 

gkb information needs impersonate encrypts rb kb sends nonces authenticators session impersonate session 
lowe analysis needham schroeder protocol lowe specified needham schroeder protocol csp fdr model checker search attacks 
fdr works checking csp specification refinement 
different notions csp refinement increasing order complexity 
simplest notion refinement usually proving safety properties traces model lowe 
says process refines process traces subset traces specification safety property describing traces system allowable specification program clearly satisfies safety property refines fdr checks csp process refinement sense building sequences possible traces processes checking stage subset property violated 
returns trace finds shortest violates property 
briefly specification protocol consists communication events describe authentication messages existence sets initiators responders public keys nonces assumed 
channels specified standard comm new channels fake intercept reflect intruder ability produce read messages 
processes defined initiators responders describe send messages react received messages 
renamings applied processes reflect fact messages intercepted faked 
msg message sent process comm msg replaced intercept msg message received comm msg replaced fake msg 
initiator responder process indexed name nonce 
think initiator process corresponding single local execution protocol 
multiple interleaved executions protocol represented interleaving multiple initiator responder processes 
number executions simulation protocol limited limiting number type responder initiator process 
definition intruder describes intercept fake messages builds knowledge 
complex part specification action available intruder assumed capable operation specified separately 
state intruder parametrized messages unable decrypt set nonces learned 
nonces secret information passed protocol set thought corresponding set decrypted messages plus nonces intruder knows initially generates 
protocol specified fdr model checker specification consisting initiator process responder process intruder process 
meant fdr generated traces consisting local execution protocol initiator responder 
sufficient find man middle attack needham schroeder protocol requires initiator process responder process process interacting intruder respondent respondent process interacting intruder impersonating initiator process 
specifications desirable properties protocol point view initiator point view responder 
specification auth resp says initiator accept responder authenticated message accepted third message protocol originated responder 
specification auth init says responder accept initiator authenticated message accepted message protocol originated initiator 
fdr determine traces protocol satisfied properties 
counterexamples auth resp man middle attack checked auth init flaw protocol thing fix 
lowe suggested fix replace message fra rb fra rb originator message ambiguous 
way intruder replay message 
fdr run new protocol auth init auth resp specification attacks 
failure fdr find attacks mean protocol proven secure protocol specification involved limited number protocol executions 
possibility exist attacks depend interleaving executions 
model checker verify properties involving unbounded number executions guarantee security protocol 
hand proof included theorem states case fixed needham schroeder protocol attack involving initiator responder protocol secure 
proof detail note hinges key lemmas concerning circumstances intruder produce learn words 
concerns conditions messages containing nonce produced intruder second concerns conditions intruder respond nonce challenge principal 
nrl protocol analyzer analysis needham schroeder protocol overview nrl protocol analyzer lowe csp specification needham schroeder protocol nrl protocol analyzer assumption principals communicate network controlled hostile intruder read modify destroy traffic perform operations encryption available legitimate participants protocol 
means network model realized differ aspects 
nrl protocol analyzer actions legitimate principals specified user state transitions 
input transitions values local state variables messages received principal assumed generated passed intruder output new values local state variables messages sent principal subject interception modification intruder 
means intruder modify messages specified having specification writer indicate operations intruder words intruder may assumed know initially 
operations list concatenation assumed intruder 
nrl protocol analyzer specifications local state variables transitions indexed things name principal involved identifier local execution step protocol corresponds principal local time 
redundant may eliminate versions 
principal names local execution identifiers times indicated variables may unlimited infinite number instantiations 
choose particular instantiation principal name local execution identifier see set transitions relevant particular role protocol corresponds lowe csp processes lowe local execution identifier nonce generated principal local execution 
main difference protocol analyzer fdr specifications fdr specifies finite number processes protocol analyzer assumes unbounded number runs principals possible variables specification infinite number possible instantiations 
allows odd boundary conditions case principal plays role initiator responder done instantiating names principals playing roles term 
possibility attacks conditions explored automatically protocol analyzer user explicitly states considered 
protocol analyzer differs fdr model checkers working forwards initial state works final state 
user analyzer uses prove security property specifying insecure state terms words known intruder values local state variables sequences events occurred 
analyzer gives complete description states immediately precede state followed complete description states immediately precede forth 
search space analyzer deals infinite user number means pruning search space manageable size 
include 
inductive proof unreachability infinite classes states formal languages 
analyzer prove intruder learns member language known word language 
analyzer form generate languages prove unreachable 

remembering conditions reachability states 
state description proved unreachable reachable variables state description instantiated certain values analyzer remember fact apply time state description encountered search 

querying subsets state descriptions 
state description analyzer user option telling analyzer look subset state description 
example state description intruder knows words user ask analyzer find state intruder knows strategy example user suspects easy show state intruder knows unreachable 
analyzer different sets search pruning heuristics built user specify applied automatically 
example directed choose query state variable word contains term appeared original top level query 
user begins asking find state intruder knows analyzer finds done intruder knows ka fv analyzer look fv ka appear original query 
note techniques take place theorems lowe narrow search space generated processes 
note ability query subset state description may generate false attack portion description queried may reachable entire state 
attack produced analyzer technique determine valid 
various lemmas proved possible analyzer perform search 
time state generated backwards search checked lemmas determine unreachable 
state discarded 
state kept analyzer tries determine state reached 
analyzer keeps record paths generated lets user know paths unreachable initial states 
user ask analyzer display path generated 
nrl protocol analyzer specification needham schroeder protocol specification needham schroeder protocol written seen lowe specification important differences 
specified request distribution public keys 
secondly considered possibility old nonces compromised 
included transition states nonce compromised time generated specified dummy principal sole occupation deliver nonces intruder 
somewhat different assumptions principals ability distinguish different types messages 
protocol analyzer assumption principals asked retrieve head concatenated list choose correct word pick smaller chunk word words list example 
assumptions specification writer tells assume 
specify cases principals tell different types words 
specification originally started making assumptions recognizability built analyzer 
resulted searches failed terminate analyzer kept generating paths contained local state variables containing longer longer words 
gave principals ability recognize message contained appropriate amount words assigning word unit length giving principals ability check length message 
gave principals ability recognize word public key 
reasonable formatting public key necessary order usable rsa example user needs know modulus exponent 
gave server ability recognize names server tell name determining public key associated gave initiator ability recognize name principal trying initiate conversation 
principal expecting nonce responder received purported name initiator specified ability recognize supplied 
analysis analyzed different versions needham schroeder protocol 
original version protocol assumptions typing mentioned previous section 
second lowe fix protocol 
third fix assumption added responder recognize word name 
specification close lowe specification fixed protocol possible purposes comparison 
specification left key distribution phase left assumption nonces compromised 
analyses took place running sparc running sunos 
analyses kept track statistics amount time search took number states generated search 
state generated mean state analyzer generated course search immediately rejected unreachable 
means correlation time search took states generated tight searches may generate unreachable states number states proved unreachable 
note times vary considerably load system include help give relative idea long protocol analyzer performed various problems 
began asking analyzer reach final states initiator protocol accepted nonce coming honest responder responder accepted nonce coming honest initiator 
generate attacks described legitimate runs protocol 
attack protocol proceeds normally steps 

fkb bg ks gamma 
fra 

ag ks gamma 
fra rb point intercepts message sends message authentication coming party 

fra rb decrypts message thinking rb party initiating communications sends request public key 

rb learn rb impersonate causing think successfully responded 
gkb attempt perform exhaustive search case 
order better compare lowe tried asking analyzer similar questions lowe asked fdr 
note attack just mentioned appear cases accepted rb sent fact initiated conversation 
case asked analyzer states 
corresponding lowe auth resp state initiator accept nonce rb coming honest responder response request containing ra 
sent rb response rb 
ra compromised 
second condition necessary needham schroeder protocol trivially compromised secret compromised session generated 
state corresponding lowe auth init state responder accepted nonce ra coming honest initiator responded rb 
initiated session ra 
rb compromised 
began running analyzer second state 
case able generate lowe attack 
attack initiator earlier relies confusion names nonces 
number minor variations lowe attack 
unfortunately able complete exhaustive search case 
analyzer state space exploded search overwhelmed resources system 
interesting result 
finished analysis protocols returned case attempted complete search examining unreachable states produced original search results suggest new lemmas proved unreachability states 
successful completing search proved similar lemmas versions protocol reduced number states produced considerably 
cases reduced amount time taken proof reduction dramatic 
probably time taken checking lemmas time saved checking fewer states 
search state initiator fooled went smoothly completed half hour manual intervention generating states 
analyzer attack initiator fooled trying talk 

ag ks gamma 
fra intercepted sends responder impersonating initiator 

fra initiator checks ra believes successfully responded 
assume second field nonce encrypt field ka send result 
attack depends confusing messages containing names messages containing nonces 
ran protocol analyzer lowe fix needham schroeder protocol assumption principals distinguish names nonces 
verification protocol point view responder lowe auth init done completely automatically took little hour generating states 
verification protocol point view initiator lowe auth resp took half minutes generating states 
second try additional lemmas proved auth init took minutes generating states auth resp took minutes generating states 
able prove protocol sound respect properties 
attacks exhaustive search 
surprising 
lowe attack prevented second message longer passed coming user 
secondly various type confusion attacks prevented principals name nonce different types messages 
encrypted string containing word contains contains 
ran protocol analyzer fixed protocol typing built 
change results verification somewhat faster 
verification soundness responder point view auth init took minutes generating states verification initiator point view auth resp took half minutes generating states 
additional lemmas auth init took minutes generating states auth resp took minutes generating states 
note ability distinguish nonces names give benefit probably principals ability distinguish different types messages 
purposes comparison ran protocol analyzer version protocol corresponded closely lowe leaving request distribution public keys compromise old nonces 
protocol verification auth resp took minutes generated states verification auth init showed marked improvement half minutes generating states 
additional lemmas auth resp tool minute seconds generated states auth init took minutes generate states 
contrast fdr analysis took seconds auth resp auth init time spent compiling process definitions generated states check 
comparision nrl protocol analyzer lowe analysis method number similarities nrl protocol analyzer analysis lowe 
model protocol terms processes communicating channel controlled hostile intruder modify intercept destroy messages 
deal possibly infinite state space proving results showing attack takes place finite state space searching space exhaustively 
way search proofs conducted different 
protocol analyzer user uses tool generate number lemmas identify number states unreachable reachable certain conditions satisfied 
user specifies insecure final state analyzer searches backwards 
time encounters state tests conditions unreachability stated lemmas 
state satisfies discarded 
means time state generated subjected number tests 
inefficient way searching especially analysis number lemmas large 
surprising analyzer worse searching large number states fdr model checker matter 
drawback user really knows analyzer proved lemmas search successfully completed 
usual strategy generate set standard lemmas try search see blows generate lemmas try search 
lowe analysis proceeded different way 
proved fixed needham schroeder protocol vulnerable attack produced certain easily defined search space 
specification generated exactly search space searched fdr 
efficient search done protocol analyzer 
hand proof somewhat complex informal manual 
nrl protocol analyzer results give independent confirmation errors hidden assumptions case hand analyses cryptographic protocols 
easy intuition happen get way perception going 
automated proof mechanism burdened intuition advantage 
appears capability analyzer carefully generate search space smaller searched model checker 
analysis lowe fix needham schroeder protocol generated states goals lowe analysis generated states 
model checker efficient search mechanism potential disadvantages search time arising difference 
marked difference fdr fact amount time verify auth init auth resp differed greatly analyzer fdr 
analyzer works backwards specified final state protocol terminates earlier initiator receiver 
hand fdr works forwards initial state generates state space matter property verified 
see property analyzer useful analyzing large scale protocols 
protocols generally consist number smaller protocols interacting 
protocol designed interaction minimal searching backwards specified final state require examination part possible state space 
analyzer positioned explore security protocols 
summary appear analyzer better proving searching lowe analysis state better searching proving 
lowe proofs advantage directed particular goal proving needs check previously defined finite search space 
trial error involved 
suggests possible direction analyzer proofs 
presently lemmas generated rules thumb proved blindly user satisfied trial error analyzer complete search 
possible indicate large finite search space see analyzer prove exhaustive search space verify protocol security 
possible direct analyzer lemmas way suggests possible way combining analyzer model checker 
analyzer built proof techniques specific cryptographic protocols narrow original infinite search space finite 
model checker search finite space 
allow obtain benefits technologies 
compared usefulness nrl protocol analyzer model checkers cryptographic protocol analysis studying application analyzer model checker fdr protocol 
tools somewhat complementary 
fdr expected exploring finite state space quickly needed outside assistance prove exploring finite state space sufficient prove security protocol 
analyzer considerably slower exploring state spaces generate finite state space prove exploring sufficient proof security 
turn led considerations possible directions research best parts technologies combined 
bill roscoe suggesting apply nrl protocol analyzer needham schroeder public key protocol gavin lowe useful discussions fdr analyze protocol 

michael burrows mart abadi roger needham 
logic authentication 
acm transactions computer systems february 

formal systems europe failures divergence refinement users manual tutorial version january 

hoare 
communicating sequential processes 
prentice hall 

richard kemmerer catherine meadows jonathan millen 
systems cryptographic protocol analysis 
journal cryptology 

longley 
automatic search security flaws key management schemes 
computers security 

gavin lowe 
attack needham schroeder public key protocol 
information processing letters 

gavin lowe 
breaking fixing needham schroeder public key protocol csp fdr 
proceedings tacas 
springer verlag 

gavin lowe 
personal communication feb 

catherine meadows 
nrl protocol analyzer overview 
journal logic programming february 

millen clark freedman 
interrogator protocol security analysis 
ieee transactions software engineering se 

needham schroeder 
encryption authentication large networks computers 
communications acm december 


formal specification analysis cryptographic protocols 
phd thesis university oslo may 
article processed lt macro package llncs style 
