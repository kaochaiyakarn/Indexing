supporting collaborative information sharing world wide web bscw shared workspace system richard bentley sikkel jonathan trevor emergence wide spread adoption world wide web offers great deal potential developers collaborative technologies enabling infrastructure platform integration existing user environments 
describes system attempts exploit potential extending provide set basic facilities collaborative information sharing 
bscw shared workspace system conceived alternative tools currently support collaborative working working groups electronic mail ftp 
report design implementation system problems encountered benefits accruing choice enabling platform experiences suggest developments point way suitable powerful mechanisms support development collaborative systems 
keywords cscw information sharing applications current form world wide web provides simple effective means users search browse retrieve information information available 
utility approach providers design retain control form content information evident growth primary means accessing information internet 
approach provide support collaborative information sharing widely dispersed jointly author comment annotate documents negotiating developing form content information part group individual activity 
basic support cooperative project bscw gmd investigating feasibility extending support collaborative working 
report design implementation bscw shared workspace system extended server provides basic facilities primarily asynchronous collaborative information sharing activity awareness integration external applications macintosh pc unix platforms 
system integrates simple facilities ftp storage retrieval documents sophisticated features group member administration check facilities access meta information regarding documents members 
addition system provides simple event awareness service inform users glance current status past changes information held workspace 
discussing development system hope contribute going debate regarding extension protocols architecture support collaborative area consortium signalled important aspect innovation 
section outline motivation system general focus collaborative information sharing discuss potential basis developing collaboration technologies 
describe design system detail consider implications experiences possible extension 
conclude innovations particularly area client computation hold great potential suitable means extension radical change protocols architecture 
supporting collaboration widely distributed groups bscw shared workspace system conceived means supporting widely dispersed groups particularly involved large research development projects 
members projects may come number organisations different countries need share exchange information collaborate production 
geographical distribution prohibits frequent face face meetings clearly benefit computer support collaborative aspects 
unfortunately lack common computing infrastructure group prohibits deployment technology causes serious problems system developers pay close attention issues heterogeneous machines networks application software 
consequence problems despite years research field cscw computer supported cooperative email ftp remain state art supporting collaboration widely distributed groups 
tools facilitate information exchange provide little support information sharing details users changes annotations visible available participants 
drawn powerful cscw technologies common infrastructure addresses problems integration required allowing developers focus application details complexities different system configurations 
real example common infrastructure offering huge potential cscw system developers platform network operating system transparency integration user environments application programs simple consistent user interface platforms application programmer interface bolt functionality ease deployment facilitating rapid system prototyping 
potential unsurprising number collaboration systems developed 
classify systems broad categories extent depart existing standards 
purely systems standard clients comply html standards extend server functionality cgi interface 
additional client functionality provided helper applications include client apis cci standardised clients platforms 
example purely system reported 

customised servers require special purpose servers provide behaviour possibilities offered cgi 
systems support standard clients protocols enhancements may reduce portability server 
example customised server 

customised clients require particular modified clients support non standard html tags non standard client apis necessarily different platforms different clients 
systems support protocol 
sesame client virtual places system example 

web related systems may provide interface support limited interaction protocol 
worlds system example category 
classification degree compliance decreases say system category inherits benefits listed system category gives developer free hand choice protocols interface toolkits benefits 
major goal produce useful usable system deployed target domain refined basis actual usage feedback 
set design goals 
modification protocol 
modifications html client customisation helper applications 
server customisation performed cgi interface section describes current version system developed return design goals discuss system implementation 
bscw shared workspace system bscw shared workspace system document storage retrieval system extended features support collaborative information sharing 
system consists server maintains number workspaces accessible different platforms standard unmodified clients 
workspace contains number shared information objects workspace members perform actions retrieve modify request details objects 
objects currently support documents links normal pages workspaces folders groups members 
shows user interface typical shared workspace fact workspace authoring 
bscw server maintains index workspaces manages 
users access index standard user name password scheme server responds list workspaces user enter 
alternatively workspace members access workspace directly know url 
new users added server completing having existing member complete simple registration form asks user name new user email address 
information check user known server initial password generated mailed user address 
simple registration scheme requires users give valid email address order log system 
logged users change password suitable 
current version system access workspace user member group members added group existing group member 
member sees view root folder workspace similar 
form view member navigation bar top bottom page user definable workspace banner row action buttons listing contents current folder 
contents listed differently dependent view type user currently selected 
member trevor selected event view root folder boston workspace 
sees workspace objects folder case framemaker microsoft word document links related pages sub folder members group workspace 
right object icons may displayed signal events occurred concerning object 
document boston draft written folder added workspace trevor logged 
events signalled way include read re named moved versioned deleted event signalled object full 
members click event icon get infor mation caused occurred catch events similar catching read articles usenet newsgroup clicking events button workspace listing 

user interface bscw shared workspace event view possibilities interacting workspace 
toggle buttons right action buttons allow members switch event view description view action view 
description view shows line description workspace object provided action view displays list buttons allow members manipulate object 
action buttons generated member access rights example creator object destroy object remove workspace members may able check copy document object editing 
clear policies surrounding access system functions great impact system deliberately isolated policy decisions easily tailored 
currently working interface allow members specify access policy associated workspace objects 

boston draft event description action views documents added workspace simple platform specific helper application 
appropriate helper installed members machine executed member clicks add document button 
helper allows members select documents local file store specify possibly different name document remote workspace transmit document bscw server 
document new version existing document old version moved workspace versioned event generated 
old version preserved accessed explicitly destroyed 
system provides simple check check facility assist version management form soft locks ensure members aware current document status 
member tries retrieve document currently checked notification message returned showing document provides option member retrieve document anyway 
currently working powerful version locking management system believe basic approach provides awareness current activities group members 
addition facility system provides standard operations associated document management re naming moving deleting 
macintosh metaphor deleted workspace objects stored workspace allowing restored necessary 
possible request page information object workspace clicking info button left object icon 
document objects page includes details document creator date added mime type 
members provides contact details home page url 
pages allow members access object actions dependent access rights edit description integrated members click document creator receive info page member trevor 
version bscw shared workspace system currently evaluated aid number researchers europe 
feedback trials hope refine extend system provide flexible mechanisms customised requirements different groups example currently investigating alternative methods remote user administration users subscribe workspaces conversely member administration performed privileged users 
topics include multiple group support group mailing mail archiving 
readers interested trying system invited 
directions provided 

information boston draft document implementation bscw system key components bscw system extended server simple database store data workspace objects documents members helper applications transferring documents server 
documents stored unix file system database contains information document creator version number member contact details event information 
server extensive information database generate user interface workspace 
current version server extended ncsa daemon 
majority extra functionality provided cgi interface python scripts necessary add extra code modify approximately lines original server source 
previous version system built cern server constructed entirely cgi interface restrictions placed interface need duplicate existing server functionality cgi scripts led relax third design goals set previously consequence system falls category classification applications 
show server modification necessary focus key requirements supported system 

bscw system architecture implementation put method lack client support selecting sending documents daemon required development platform specific helper applications 
helpers started client special mime type received sent server add document button pressed 
helpers provide file browsing interface local file system versions macintosh pc windows nt unix platforms currently implemented 
implementation put protocol trivial example server ensure files added interpreted scripts configuration files 
solution problem double handshaking server helpers verify files added resulting overly complex protocol introducing points possible failure 
furthermore implementation external helpers applications implications security access control adding files protected file systems requires helpers ask users user name password details may supplied client 
full support mime types current server support mime types relies guessing document type examining filename suffix 
clearly unsuitable documents shared macintosh suffix resource fork pc max 
character case insensitive suffix unix variable length case sensitive suffix platforms 
server filenames select mime types retrieves document type object database ways simulating resource fork properties macintosh document 
document added helper uses local configuration file guess suitable mime type 
guarantee correct user override helper selection edit extend configuration file suit requirements 
worth noting method ensures correct application program started independently document filename applications insist filename extension 
particularly true pc problem compounded possible configure pc clients add extension received documents sun example 
sophisticated access methods current access models supported servers allow user group access control limiting ability send get post put unimplemented requests 
cern server implement file access control lists acls provides way expressing actions scripts requested particular context ncsa put requests file get post requests helper client daemon bscw extensions python cgi scripts delegated functionality workspace documents file hierarchy macintosh clients extended server unix filestore helper client sun helper client pc databases document user files visible different users users modify access permissions 
extended models storing complex acls part object object database 
acls take form rules describe visibility objects example users see workspaces members actions users groups perform 
action rules server suppress output buttons access action scripts denied current user scripts ensure current user authorised perform corresponding action 
enhanced user interface file store system requires richer context sensitive user interface workspace provided standard server directory listings 
particular server generate different html page dependent request users may different actions perform see different view types selected different event icons dependent caught 
requires interaction database retrieve member details check document types documents currently checked order display appropriate icons 
forced replace existing directory listing routines bscw server 
sophisticated logging provision awareness information regarding past activities group members essential collaborative information sharing groups coordinate activities maintain shared understanding status 
event icons generated bscw server attempt support awareness logging facilities supported existing servers record request details results requests 
capture information log form suitable server generate event listing required generating storing event objects workspace database 
innovations required modification core behaviour server 
simply replacing server code extended source code called server access workspace server functions normal daemon 
software required install system public domain commonly available importantly modifications clients html 
believe system retains advantages enabling platform provides basic useful set facilities support collaborative model information sharing 
recommendations discussion experiences implementation bscw system lead recommendations extending collaborative preserving benefits cross platform enabling technology client support put method obvious consequence collaborative view information sharing 
current state art requires developers build platform specific helper applications wish avoid modifying clients non standard apis client features attribute supported versions netscape clients 
reliance external helpers creates potential problems authentication proxy servers 
better support mime types required enable true cross platform information sharing 
current focus file name suffix creates problems macintosh uses resource forks requires general consistency document naming 
problems symptomatic general problem file naming pc applications insist suffix passed document client 
richer model access control current methods provide little support limiting information visibility restricting access certain functionality remote member administration 
differences methods servers inhibit formulation richer general model 
improved user interface facilities html claimed user interface description language function put 
features tag supported versions netscape increase possibilities features supported clients clearly limit interface techniques multiple selections semantic feedback described extensions 
specific user interface description language required 
better support server customisation cgi interface allow customisation core server functionality access logging mime type mapping servers apache provide extensive apis case server functionality unused needs replaced custom applications 
cleaner method removing replacing extending core components required similar manner module approach server 
recommendations arisen attempt extend support collaborative information sharing generally applicable example client support put protocol necessary remote editing applications current support mime types cross platform document exchange 
general problems current form suffers serious limitation considering support collaborative sharing 
limitation concerns fundamental architecture apparent consider synchronous sharing currently supported bscw system 
architecture model information provision assumes information relatively static notification required information changed 
known argument cscw concerning distinction multi user collaborative systems 
briefly see details multi user system seeks hide activities users give impression interacting dedicated system collaborative system propagate explicitly represent users activities provide common context collaborative place 
interaction handled central server gives indication viewing page 
current consumer provider model information exchange require awareness support case collaborative information sharing 
problem highlighted number previous system developments manifest current debates including provision shared virtual worlds vrml 
tempting suggest model sharing requires radical extension basic architecture 
approach taken stanford digital library project corba protocols support meta information objects annotations investigated 
integration powerful mechanisms corba address current problems clear needs take place applications developed deployed advanced features 
suggest key collaborative short term lies extending basic mechanisms preserving simplicity utility current approach 
virtual places system offers method addition second server responsible event propagation currently relies particular clients 
flexible extensible solution integration safe interpreter environments clients allowing arbitrary code retrieved executed client site 
approach best developed sun hotjava support java language additional advantages reducing network traffic load servers 
demonstrate potential approach extended bscw system simple talk facility implemented java applets 
virtual places users interacting workspace see icons type simple messages click icon alert user establish simple audio connection 
currently experimenting advanced features shared pointers simple shared editors believe approach allows support synchronous collaborative information sharing compromising existing architecture 
decision netscape license java interpreter clients approach realistic benefits apparent richer interface toolkits class libraries available 

java talk facility bscw shared workspace system discussed experiences platform supporting collaborative 
system realised extended daemon accessible standard unmodified clients number platforms 
currently evaluating system aid researchers european countries invite interested readers install try system 
details see bscw home page bscw gmd de 
offers excellent opportunity support collaboration widely dispersed groups 
enabling platform integrated different hardware software potential overcome problems current collaborative systems 
feel potential realised important enhancements compromise current availability usability argue extension current mechanisms radical change short term 
highlighted areas extension suggested current innovations client side computation hold promise development 
www org hypertext www collaboration overview html patterson comparing programming demands single multi user applications proceedings uist hilton head sc acm press nov pp trevor rodden mariani adapters support cooperative sharing proceedings cscw chapel hill nc acm press oct pp lang fong extending www synchronous collaboration electronic proceedings second www conference mosaic web www ncsa uiuc edu sdg proceedings cscw html www lotus com www com cs uiuc edu kaplan worlds html pollak und implementierung von verteilten master thesis university kaiserslautern germany march fuchs prinz supporting cooperative awareness local event mechanisms system proceedings ecscw stockholm kluwer academic publishers sept pp se structured authoring environment worldwide web computer networks isdn systems proceedings third international conference darmstadt apr pp www igd fhg de www www papers html rodden mariani blair supporting cooperative applications computer supported cooperative kluwer academic publishers pp mogensen winograd browsing shared comments trails line communities computer networks isdn systems proceedings third international conference darmstadt apr pp www igd fhg de www www papers tr www html java sun com author details richard bentley sikkel jonathan trevor german national research centre information technology gmd fit cscw birlinghoven sankt augustin germany phone fax email bentley sikkel trevor gmd de 
