increasing availability security authentication service li gong sri international computer science laboratory ravenswood avenue menlo park california june 
authentication process satisfies claim identity 
typically authentication server provides authentication service authentication protocol 
authentication service security bottleneck compromise lead compromise system 
service performance bottleneck activities proceed identities concerned parties satisfactorily established 
desirable authentication service highly secure highly available 
propose general solution replicating authentication server minority malicious colluding servers compromise security disrupt service 
discuss unusual features distributed authentication service including trade availability security 
distributed service useful clients identify agree trusted servers prior authentication 
example cooperative federated systems clients simply trust set servers 
authentication process satisfies claim identity 
mutual authentication pairs principals clients servers satisfy mutually identity 
typically authentication server provides authentication service authentication protocol 
authentication service fundamental maintaining security distributed system identification underlines enforcement security policy administration activities accounting audit 
service security bottleneck compromised security guaranteed 
open environment individual server may appeared ieee journal selected areas communications vol june pp 
completely permanently trustworthy 
benign server fail mistakes compromised malicious leaking client keys deliberately sending bogus messages 
centralized service support activities internal auditing position guard guards 
authentication service naturally performance bottleneck activities proceed identities involved satisfactorily established 
example authentication available user starts new session executes protocol rlogin ftp telnet 
service quite system utilities 
machine may need connect network server retrieve electronic mail messages minutes day 
failure authentication server disruptive 
desirable authentication service highly available highly secure time 
number ways increase availability service 
common approach replicate authentication server servers perform authentication 
approach reduces level security server compromised security compromised 
way increase availability reduce dependency service 
example server issue certificate valid period time need contact server 
scheme degrades level security certificate hard revoke issued 
longer certificate remain valid better terms service availability worse security 
discuss replication useful dealing untrustworthy servers increase security authentication service 
simple replications suggest trade increasing availability increasing security 
propose general solution replicating authentication server way multiple servers share responsibility providing authentication service minority compromised servers compromise service malicious behavior collusion 
proof concept secret sharing techniques introduce cross checksum scheme develop protocol similar needham schroeder authentication protocol needham different set servers provide distributed authentication service server providing fraction authentication 
protocol properties fewer threshold number colluding servers compromise security leaking information session keys service available threshold number uncompromised servers operational 
adjusting thresholds explore trade availability security 
call protocol distributed authentication protocol 
clients share secrets authentication completes verify correctness replicated service separate secure channel 
unique feature distinguishes replication authentication server replications key secure replication file server herlihy 
distributed authentication service particularly useful clients identify agree trusted servers prior authentication 
apart enabling activities internal auditing distributed service forms necessary basis cooperative federated systems bull 
example mutually competitive hostile communicating organizations particular organization manage authentication service trust set servers 
organize rest follows 
recall concept authentication describe typical centralized authentication protocol 
examine effect simple replication schemes demonstrate trade security availability 
propose replication scheme analyze security properties 
estimate cost incurred replication possible variations basic protocol discuss public key cryptosystem 
conclude summary suggestions 
authentication authentication definition process verify claim identity 
brevity mutual authentication discussion results apply way authentication 
authentication protocol conventional cryptosystem public key system diffie needham 
concentrate common case conventional systems 
discuss public key systems 
authentication usually prelude communication computation authentication protocol arranges protocol participants identities verified agree encryption key session key user session 
authentication protocol called key distribution protocol 
examine protocol similar needham schroeder protocol needham needham messages packaged style otway rees otway 
client exclusively shares secret key ka kb trusted authentication server executing protocol intend establish session key kab 
denote sends message fmg denote encrypted key denote concatenation 
typical centralized mutual authentication protocol 

na 
na nb 
fb na fa nb 
fb na nb 
kab message generates random number na nb challenge known nonce 
generates session key kab distributes message 
encloses nonces reply verify reply fresh 
complete handshake inform correct session key received 
trade availability security normally protocol implemented server argued earlier configuration naturally creates performance bottleneck security bottleneck 
example malicious server leak keys ka kb kab deliberately send message contains unsafe long compromised session key kab 
benign server fail cause similar problems mistake 
words implicit assumption fail processor optimistic issues taken account ffl information leakage server may leak accident deliberately information key 
ffl cheating server may impersonate client mislead client unsafe key 
ffl failure service may unavailable server crashes sends faulty messages communication mechanism fails 
ffl denial service server may intentionally refuse respond requests 
desirable increase availability security authentication service distributing responsibility providing service servers 
examine simple replication schemes increase availability security 
suppose replicate arbitrary number servers play role protocol 
service availability arbitrarily high 
server know client keys leak session keys sets 
impersonate clients keys 
security service relies proper behavior servers servers need adequate physical forms protection 
short higher availability weaker security 
different arrangement suppose replicate arbitrary number servers allowing server act require server generate key kab 
clients exclusive keys final session key 
require client registers different secret keys different servers 
service security arbitrarily high long server compromised impersonation happen client cheated accepting compromised session key 
server refuses cooperate authentication completed 
availability depends proper behavior servers 
short stronger security lower availability 
imagine schemes extremes spectrum just described suggest trade availability security 
propose distributed authentication protocol property fewer threshold number colluding servers cause security breach authentication available threshold number uncompromised servers operational 
trade availability security explored adjusting thresholds 
distinguish denial service node crash fail processor automatically halts response internal failure effects visible outside world schlichting 
communication failure availability issues appearance clients 
bogus messages faulty messages distinguishable refer simply illegitimate messages 
distributed authentication suppose servers collectively provide authentication service 
assume client say registers different key kai server client derive keys master key ka 
example suitable way hash function diffie merkle register key kai ka server arrangement gives extra security server say know keys ka ka kan 
prevent information leakage session key generated known single server 
fact major difficulty letting servers involved choosing key 
secure communication channel verification purposes authentication completes clients easily reach agreement received servers 
clients participate choosing session key may trust competency aspect 
capable generating random numbers client concerned key quality require candidate keys generated servers sources select exclusive 
exclusive candidate keys key long candidate key presumably chosen uncorrupted server candidate keys suspect 
preliminary version new protocol follows 
preliminary distributed mutual authentication protocol 



na fa kai 
na nb fa kai fb 
fb na kai fa nb 
fb na kai nb 
kab participant generates nonce na nb included encrypted messages addressed participant freshness messages established needham 
messages obtains nonce server 
chooses candidate session key computes server threshold function produces shadows way easy recover shadows shadows reveals information explain function 
message sends shadow server 
fact sends shadows forwarded servers 
similarly message selects computes sends shadow server 
messages essentially acts broker exchange shadows messages computes computes 
compute session key kab pre determined way hash function complete way handshake 
see works describe shamir secret sharing scheme shamir polynomial interpolation 
compute chooses random gamma degree polynomial computes due property interpolation easily determine recover 
shadows information determined 
time complexity compute shadows nt 
time complexity recover log 
threshold scheme effectively prevents fewer compromised colluding servers leaking information session key gather shadows recover fact absolutely information kab 
ensures long carefully chosen random kab key 
subtly prevents forcing session key 
illustrate suppose replaced exclusive operation 
message knows reconstruct retransmit message replaces choose exclusive session key wants 
similarly intercept message send new message force session key wants 
prohibits activities 
select session key exhaustive search 
selection difficult computation include information participants identifiers date 
considerations important number participants collective decisions 
execution protocol aborted expected message arrive time period 
exception rule message 
waits longer time period 
recover messages received proceeds 
considers authentication service unavailable 
length waiting period set suit particular environment 
detect illegitimate messages 
instance suppose gamma gamma colluding servers learn information gamma servers send bogus shadows faulty messages set shadows receives may recover different value 
case way verify legitimacy shadows determine shadows received sent 
authentication completes separate secure channel verify legitimacy shadows 
fact may channel service bogus 
theory try handshakes possible session keys derived combinations shadows dialogue successful 
may secure wrong combination may result cryptographically weak key explored malicious servers 
may practical number combinations large 
economical determine kab exchanging messages 
verification purposes redundancy shadows provided shadows 
shadows give information retrieve 
extra redundancy shadows tells retrieve 
fact authentication servers behaviors impossible centralized approach 
requirement additional redundancy closely related concept verifiable secret sharing scheme parties securely share secret keeping different shadows possible verify shadow legitimate 
proposed schemes chor suited application rounds messages usually require participants cooperation complete protocol 
introduce cross checksum scheme suitable alternative 
informally cross checksum scheme supplies checksums messages manner possible verify authenticity messages cross checking checksums 
define cross checksums cc cc respectively way hash function 
replacing cc cc respectively preliminary version protocol obtain distributed mutual authentication protocol 



na fa cc kai 
na nb fa cc kai fb cc 
fb na cc kai fa nb cc 
fb na cc kai nb 
kab adding cross checksums degrade security way hash function merkle 
require number pairs computationally infeasible compute birthday paradox sufficiently large amount messages malicious servers able find match cross checksum cc looking dictionary past messages 
defeat birthday attack life time limited properties particular function 
requirement similar 
fact function 
legitimate message contains legitimate shadows legitimate cross checksums faulty server sends legitimate messages efficiently identify legitimate shadows provided half messages received legitimate 
algorithm defined follows 
cross checksum cc received received recomputes compares received 
identical credit point gives point 
checks done legitimate shadows servers highest credit points half servers 
prove algorithm correct observe server gets credit point server shadow legitimate 
servers give credits servers outnumber bad ones servers send legitimate messages receive credit points 
algorithm computes way hash functions comparisons 
protocol message identifies legitimate shadows recover computes obtain session key 
considers service unavailable recovered servers get credit points 
uc fs nfs denote respectively numbers servers operational failed fail failed fail compromised 
uc fs nfs proof shows service available uc max gamma nfs typically set nfs 
shadows checksums faulty messages assumed random unknown colluding servers messages increase credit points servers send illegitimate messages 
case service available uc max gamma 
malicious servers may cause denial service compromise security 
small number servers compromised may detect message losses illegitimate messages 
report observations appropriate authorities suitable actions inspecting suspect sites repairing failed servers cleaning compromised ones taken 
client may need change password accumulated total number compromised servers password change close threshold service unavailable may try 
discussion distributing authentication multiple servers costly 
cross checksum significantly increases length message 
servers communicate total number messages 
participants protocol synchronized clocks time stamps place nonces prove message timeliness denning 
case longer needs initial exchange messages total number messages reduced 
maintaining synchronized clocks non trivial costly task mills simons liskov gong 
clock compromised faulty server trusted tell correct time client may need vote time stamps received servers 
note compromised server may try synchronize faulty clock maximize chance successful attack 
letting kab interesting effect uses incorrect value compute kab key worst case useless compromised long carefully chosen value similar arguments apply means servers concerned security reasons freshness messages 
messages wasted 
expense possible waste resources messages safely removed assuming synchronized clocks total number messages reduced 
proposed protocol contribute choosing kab 
relaxed participant decides session key total number messages reduced time stamps 
minimum operational server receives message sends message 
servers may deserve trust security policy history performance worst case analysis mandatory client communicates servers legitimate messages possibly obtained smaller number servers 
reliability 
hierarchical threshold schemes case 
scheme give selected servers shadows say voting illegitimate messages contribute availability 
weighted voting approach works security parameters weights dynamically assigned protocol operates consistently presence network partitions gifford 
assigning votes servers clients may communicate servers number messages reduced availability improved 
demonstrates trade availability security 
servers need communicate 
requirement coordination servers completing protocol unnecessarily complicate situation messages needed disruptive behavior compromised servers handled properly 
proposed solution means implies servers placed adequate protection 
compromise failure server threat 
consequently authentication server need necessarily run dedicated machine replicated approach may require additional hardware 
number ways manage database passwd file unix system stores user information including passwords 
server regarded autonomous entity user registers changes keys server separately 
alternative trusted master server maintain master key database 
server handles initial user registration password change 
periodically computes user master password passwords different servers creates subsidiary database server feeds appropriate server 
master server need line available times general create performance bottleneck 
need security bottleneck may discard master passwords subsidiary databases installed 
case user set secure channel master server distributed authentication service 
participants protocol capable remembering long secrets computational capability public key cryptosystems 
case user equipped smart card file server 
cases distributed authentication service take advantage special features public key cryptosystem improve efficiency authentication protocol 
suppose public keys pa pb respectively keep corresponding private keys secret 
assume share conventional system keys servers 
authentication protocol arrange obtains pb obtains pa needham similarly servers brokers 
pa pb need kept secret requirement result cheating part servers associate different public key 
longer need secret sharing scheme cross checksum scheme protocol simplified replacing cc pa cc pb messages 
receiving messages servers performs possibly weighted voting public keys received 
majority considers service unavailable 
keys directly subsequent communication arrange session key conventional cryptosystem needham 
handshake messages need modified accordingly 
client shares public keys servers case similar client remember public keys 
requirement relaxed threshold signature scheme desmedt reiter 
hybrid schemes possible 
previous discussion trade availability security reducing number messages apply 
summary authentication service security bottleneck performance bottleneck desirable service highly secure highly available 
strong evidence trade increasing security increasing availability 
proposed general solution replicating authentication server minority compromised servers compromise service malicious behavior collusion 
proof concept described distributed mutual authentication protocol variations improved efficiency property trade security availability adjusted 
apart removing bottlenecks distributed service useful clients identify trusted authentication servers trust servers 
worthwhile effort kerberos miller engineer practical design distributed authentication service complete implementation 
issues inter realm authentication gligor fully examined experiment 
basic protocol may extended deal additional concerns protecting client keys gong 
reducing cost replication important especially public key system impractical 
example rabin secret sharing scheme rabin significantly reduce size shadow minor security implications gamma shadows reveal limited information key 
better coding techniques may reduce size cross checksum 
fully analyzed proposed protocol logics authentication burrows gong preliminary examination suggests protocol kind weaknesses logic designed capture 
professor wheeler mark lomas cambridge university brought subject attention provided valuable comments earlier version gong 
bull bull gong sollins security open systems federation proceedings european symposium research computer security toulouse france november 
published lecture notes computer science vol pp springer verlag 
burrows burrows abadi needham logic authentication acm transactions computer systems vol february pp 
chor chor goldwasser micali awerbuch verifiable secret sharing achieving simultaneity process faults proceedings th ieee symposium foundations computer science october pp 
denning denning sacco timestamps key distribution protocols communications acm vol august pp 
desmedt desmedt frankel shared generation authenticators signatures advances cryptology proceedings crypto 
published lecture notes computer science springer verlag pp 
diffie diffie hellman new directions cryptography ieee transactions information theory vol 
november pp 
gifford gifford weighted voting replicated data proceedings th acm symposium operating system principles december pp 
gligor gligor inter realm authentication large distributed systems proceedings ieee symposium security privacy oakland california may pp 
gong gong securely replicating authentication services proceedings ieee th international conference distributed computing systems newport beach california june pp 
gong gong needham yahalom reasoning belief cryptographic protocols proceedings ieee symposium research security privacy oakland california may pp 
gong gong security risk depending synchronized clocks acm operating systems review vol january pp 
gong gong lomas needham saltzer protecting secrets guessing attacks ieee journal selected areas communications vol june 
herlihy herlihy tygar replicated data secure advances cryptology proceedings crypto 
published lecture notes computer science vol springer verlag pp 
generalized linear threshold scheme advances cryptology proceedings crypto 
published lecture notes computer science vol 
springer verlag pp 
liskov liskov practical uses synchronized clocks distributed systems proceedings th annual acm symposium principles distributed computing montreal august pp 
merkle merkle fast software way hash function journal cryptology vol springer verlag new york pp 
miller miller neuman schiller saltzer kerberos authentication authorization system project athena technical plan section massachusetts institute technology october 
mills mills network time protocol version specification implementation iab network working group rfc september 
needham needham schroeder encryption authentication large networks computers communications acm vol december pp 
needham needham schroeder authentication revisited acm operating systems review vol january 
otway otway rees efficient timely mutual authentication acm operating systems review vol january pp 
rabin rabin efficient dispersal information security load balancing fault tolerance journal acm vol april pp 
reiter reiter birman securely replicate services tr department computer science cornell university june 
schlichting schlichting schneider fail processors approach designing fault tolerant computing systems acm transactions computing systems vol august pp 
shamir shamir share secret communications acm vol november pp 
simons simons welch lynch overview clock synchronization simons spector eds fault tolerant distributed computing published lecture notes computer science springer verlag 
