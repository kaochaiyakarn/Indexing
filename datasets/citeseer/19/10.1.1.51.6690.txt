message authentication way hash functions gene tsudik ibm zurich research laboratory ch switzerland gts zurich ibm com fast message integrity authentication services important today high speed network protocols 
current message authentication techniques encryption undesirable reasons 
brief introduce encryption free message authentication entirely way hash functions 
methods strength analyzed 
security proposed methods strength underlying way hash function 
keywords message authentication data integrity way hash functions network protocols communication security 
message authentication important feature today network protocols 
network speeds increase higher demands processing speeds 
encryption technology unable match bandwidth requirements high speed protocols costeffective manner 
reason alternative approaches considered 
years important advances development fast way hash functions 
notable examples merkle rivest md message digest algorithm slower md message digest algorithm 
hash functions aimed high speed software implementations currently public domain 
md considered security community promising hash function partly pass version broken biham shamir 
explore new applications oneway hash functions 
md md substantially similar example function 
rest organized follows 
motivating factors earlier version ieee infocom may florence italy 
encryption free message authentication discussed section 
section reviews key features md 
proposed methods described section subsequently analyzed section 
third hybrid method introduced section 
protocol costs evaluated section potential applications briefly discussed section 
motivation fast way hash functions primarily maintaining message data integrity 
realm secure communications message integrity provide sufficient defense attacks 
strong way hash function protects data modification protection message substitution requires message integrity value message originator 
encryption integrity methods able provide service inputs integrity function secret key des 
case md non trap door hash function 
md implementations readily available produce md value arbitrary bogus message insert msg md msg stream 
simple solution sender encrypt sign message digest 
public key cryptosystem done sender private key 
conventional cryptosystem sender secret key shared appropriate parties 
simple approach solves message substitution problem drawbacks 
encryption usage reduced signing short fixed length message digest remain reasons avoiding encryption altogether ffl encryption software quite slow fastest available des software implementation achieves data rates ca 
kbits sec mhz ibm ps 
unoptimized md implementation hardware platform runs mbits sec 
ffl encryption hardware costs non negligible software implementations tend offer lower rates cost typically low 
furthermore software implementations des md placed public domain 
ffl encryption hardware optimized large data sizes hardware devices optimized bulk encryption 
encryption rates range mbits sec performance tends decrease drastically small data units kbyte 
typically due hardware initialization invocation overhead amortized large units data 
software implementations md case point tend exhibit constant data rates irrespective data sizes 
ffl encryption algorithms covered patents encryption signature algorithms rsa patented licensed obvious cost implications 
ffl encryption algorithms subject export control chief arguments encryption message authentication 
example united states government places export restrictions certain cryptographic 
des implementations hardware software fall category 
drawing discussion ideal scenario countering message substitution message modification attacks 
avoid encryption altogether 
produce unforgeable integrity values initially properties appear odds innovative application fast way hash functions may able reconcile 
briefly touching key features md section turn description proposed protocols 
md summary brief md computes bit digest arbitrary length message 
basic input unit bit block 
md divides input message number bit blocks padding message necessary appends extra trailing block contains message length low order bits remainder trailing block contains zeros 
conjectured md properties 
difficulty computing distinct messages md md order operations 

message digest md difficulty computing message md md order operations 
second property particular interest 
fact md maps bit blocks bit digests 
implies average blocks hashed bit digest 
message digest takes average trials discovering messages maps digest 
protocol description suppose principals communicate insecure channel 
furthermore exist secure means principal authentication 
time session initiation mutual authentication achieved principals say generates random bit value sab communicates sab secret encryption necessary 
message send computes mdm md jjs ab 
sends mdm possesses sab re compute md jjs ab verify mdm known secret suffix technique 
alternatively agree compute mdm md sab jjm sab secret prefix 
secret prefix method developed independently internet security privacy working group spwg simple network management protocol snmp 
informal analysis discussion assumed intruder ability record analyze messages insert fraudulent messages message stream 
order mount successful attack effectively break protocol intruder able produce fraudulent message accompanying digest message digest pair accepted genuine legitimate principals 
jj denotes concatenation 
crocker kent private communication december 
observations second property md algorithm ffl claim message digest md message difficulty computing message md jjm md order operations 
ffl claim message digest md message difficulty computing message md jjm md order operations 
assuming claims conjectured properties hold venue left intruder brute force attack 
purposes attacks take considered futile system question secure 
understanding details possible attacks interest 
seemingly similar methods proposed differ ability withstand brute force attacks 
definitions ffl bit blocks say md md 
symbol denotes prefix equivalent 
bit block denote prefix equivalence class ffl bit blocks blocks md jjm md jjm 
symbol denotes suffix equivalent 
denote suffix equivalence class bit block secret prefix naive intruder wishing discover secret prefix record message accompanied integrity value md sab jjm 
need try average possibilities discovering prefix string sab important observation astute intruder secret prefix sab really needed break protocol 
words secret prefix sufficient necessary successful attack 
attain goal composing genuine messages intruder needs intermediate md value sab md sab 
length md sab bits regardless length sab see section 
example brute force attack des requires operations 
number operations required find md sab remains subtle difference naive educated brute force attacks intruder guaranteed discover md sab successfully attacking protocol operations 
contrast average operations required 
summary shortcut attack deterministic opposed probabilistic 
curious property secret prefix method vulnerability padding attacks 
padding attack successful intruder able prepend append extraneous data authentic message pass resulting message genuine 
intruder capture message secret check md sab jjm 
append arbitrary data compute digest resulting message jj md sab jjm initialization value 
legitimate receiver fooled accepting fraudulent message accompanying secret prefix value md sab jjm jj correct 
safe guarding measure implemented md bit block consists bits zeroes followed bits contain message length 
alleviate padding attacks attacker job difficult forcing include trailing block genuine message part padded bogus message 
padding attack possible reasons attacker knows underlying algorithm md integrity value protected 
obvious countermeasure type attack require message length included secret prefix calculation part block 
protocols include length part message header format ip snmp 
secret suffix brute force attack secret suffix variant similar intruder need try average possibilities discovering md jj md jjs ab 
probability sab average bit blocks hashed bit md value 
hand finding sab purposes equivalent finding sab point time md relatively limited analysis thereof little said certainty average size vulnerability discovered dave solo steve kent 
suffix equivalence classes 
conjecture degree certainty size average suffix equivalence class greater average prefix equivalence class 
imply takes operations find sab note intruder record multiple genuine messages compute respective digests step attack 
number operations required find theta size intruder message test pool 
note suffix variant appears counterpart brute force shortcut described previous section 
furthermore secret suffix secure respect padding attacks 
message digest computed secret suffix input block 
knowing secret intruder certainty append prepend message 
drawback secret suffix susceptibility called birthday attack 
brief attack consists intruder generating message trial pool size recording sample pool genuine messages size probability message trial pool hashing md value messages sample pool roughly expressed range case 
birthday paradox chance messages hashing md value 
feature forms basis property md see section 
implication attack secret suffix method follows 
intruder pre compute sample messages corresponding digests 
recording single genuine message protected secret suffix intruder computes md 
probability high exists bogus message sample message pool md md 
hand attack requires operations storage space trial pool 
contrast prefix method susceptible birthday attack 
intruder discover high probability bogus message md value matches recorded genuine message 
ffl md md implies md jjs ab md jjs ab case ffl md md implies generation message trial pool done line search carried real time 
see detailed discussion 
md sab jjm md sab jj envelope method time protocol requiring operations break considered quite strong 
conceivable need stronger protocols may arise 
reason consider hybrid combination methods described far 
third variant message digest computed secret initialization vector conjunction secret bit suffix 
words message secret prefix secret suffix digest computed 
envelope method significantly stronger prefix suffix variants 
reasons informally sketched 
serious attack enables intruder compose send arbitrary messages accepted genuine receiving party 
order succeed intruder discover secret prefix secret suffix communicating parties discover possible bit blocks md jjm jjs md jjm jj 
order assess difficulty mounting attack important property envelope method needs observed ffl impossible intruder discover discovering corresponding 
proof sketch assume intruder recorded genuine message accompanying digest md md jjm jjs 
course trial values secret prefix suppose intruder comes correct value order determine trial value correct intruder perform test 
test possible ffl intruder knows md jjm 
search md jjm md jjm 
infeasible obtain md jjm md jjm jjs 
ffl intruder simultaneously select trial value secret suffix 
words parallel iterating opposite assertion follows ffl impossible intruder discover discovering corresponding 
conclude takes order theta operations order break envelope method 
denote number trials required break secret prefix suffix methods respectively 
assuming required break prefix suffix methods envelope method provides greater protection operations 
benefit envelope method resistance padding birthday attacks 
padding attack impossible secret suffix see section 
obvious birthday attack longer feasible 
discussed section attack possible secret suffix method intruder ability compute digest genuine recorded message 
having recorded message intruder discover possibly precomputing large number messages bogus message md md 
consequently substitute succeed subverting receiving party believing genuine property md jjs md jjs suffixes 
envelope method substituting desired effect 
md md jjm jj low probability hashing identical digests 
cost evident discussion provided md conjectured properties hold secret suffix secret prefix methods provide strong protection message substitution tampering 
just subtle differences variants respect ability resist hostile attacks differences respective costs 
prefix variant costs close intermediate md value secret prefix precomputed initialization vector verifying message signatures 
furthermore concept prefix abandoned altogether favor bit md initialization vector 
secret suffix costs slightly pre computation done 
cost amounts exactly extra bit block md computation message 
applications secret suffix prefix methods particularly applicable environments high bandwidth low delay requirements implementation certain security services prohibitively expensive packetized voice video applications 
snmp stated implements secret prefix method 
network layer routing protocols sp inter domain policy routing visa protocol benefit substantially inexpensive encryption free message authentication 
summary fast way hash functions md foundation relatively novel implementations security services 
particular simple inexpensive secret prefix secret suffix methods provide protection message substitution attacks conjunction strong way hash function protects message modification remain outstanding issues 
importantly methods dependent conjectured properties md 
md relative newcomer subjected extensive analysis 
furthermore discussion largely informal rigorous scrutiny proposed methods order 
author steve kent deborah estrin molva comments earlier draft 
advanced micro devices amd mos microprocessors peripherals data book advanced micro devices sunnyvale ca biham shamir differential cryptanalysis des cryptosystems proceedings crypto august 
davies price security computer networks new york ny wiley 
estrin mogul tsudik visa protocols controlling inter organizational datagram flow ieee journal selected areas communications may 
federal information processing standards national bureau standards publication 
secure management snmp networks proceedings ifip integrated network management symposium april 
merkle way hash functions des proceedings crypto august 
needham schroeder encryption authentication large networks computers communications acm december 
postel internet protocol rfc sri network information center september 
rivest shamir method obtaining digital signatures public key cryptosystems communications acm february 
rivest md message digest algorithm proceedings crypto august 
rivest md message digest algorithm internet draft july 
steiner kerberos network authentication service overview mit project athena rfc draft april 
protocol signaling working group sp subgroup secure data network system security protocol sp revision steenstrup internet open routing working group inter domain policy routing specification bbn report number december bbn cambridge ma 
kent security mechanisms high level network protocols acm computing surveys june 
