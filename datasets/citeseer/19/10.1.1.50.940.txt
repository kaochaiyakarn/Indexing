categorical glueing logical predicates models linear logic hasegawa research institute mathematical sciences kyoto university email kyoto ac jp january give series glueing constructions categorical models fragments linear logic 
specifically consider glueing symmetric monoidal closed categories models multiplicative intuitionistic linear logic ii symmetric monoidal adjunctions interpreting modality iii autonomous categories models multiplicative linear logic glueing construction autonomous categories mild generalization double glueing construction due hyland tan 
glueing techniques creating interesting models linear logic 
particular free symmetric monoidal deriving kripke parameterized logical predicates logical relations fragments linear logic 
application show full completeness results translations linear type theories 
contents preliminaries symmetric monoidal structures 
categorical glueing 
glueing symmetric monoidal structures glueing symmetric monoidal closed categories 
glueing symmetric monoidal adjunctions 
glueing autonomous categories 
logical predicates linear logic parameterized predicates 
logical predicates 
binary logical relations 
dual intuitionistic linear logic 
multiplicative linear logic 
fully complete translations case study mill mll 
full completeness semantically 
examples 
syntax semantics mill syntax mill 
semantics mill 
syntax semantics dill syntax dill 
semantics dill 
sharing theories action calculi syntax 
semantics 
translation dill 
control operators proof fullness 
proof proposition proof proposition logical predicates logical relations reducibility methods powerful tool proving syntactic semantic results intuitionistic type theories 
particular plotkin substantial study characterizing definability models simply typed lambda calculus related typed languages pcf logical predicates carried see instance 
category theoretic point view known setting logical predicates simply typed lambda calculus derived categorical glueing construction known freyd covering cartesian closed categories 
terms categorical logic glueing construct category predicates codomain subobject fibration change base 
cartesian closed categories suffices assume change base functor preserves finite products making glued category cartesian closed 
cases category predicates model lambda calculus gives model projection original model preserves structure 
observation allows derive basic lemma logical predicates categorical models simply typed lambda calculus 
develops analogous story fragments linear logic 
investigate glueing techniques symmetric monoidal structures serve category theoretic models linear logic 
specifically consider glueing 
symmetric monoidal closed categories models multiplicative intuitionistic linear logic 
symmetric monoidal adjunctions interpreting modality 
autonomous categories models multiplicative linear logic 
glueing construction autonomous categories mild generalization double glueing construction due hyland tan 
creating interesting models linear logic 
instance central development demonstrate phase semantics variants derived systematically glueing techniques example 
ready introduce notion logical predicates models linear logic 
predicates introduce parameterized way kripke logical relations role parameterization essential dealing connectives linear logic especially multiplicatives modalities roughly reason 
suppose predicate base type set closed terms type interpreted 
standard logical predicates hope define predicate type inductive way 
soon face difficulty constructing naive construction fa sense interesting elements particular assume constant type interpretation may belong trouble appears construct solve problem parameterizing predicates symmetric monoidal category specifies property closed linear structural constructions parameter indicates linearly resource linear context 
parameterized predicates give rise model fragment linear logic serve basis constructing logical predicates 
problem observed disappears interesting element satisfies property 
parameterized logical predicates derived glueing constructions free symmetric monoidal symmetric monoidal categories 
mentioned known setting standard logical predicates obtained glueing cartesian closed category set derived glueing symmetric monoidal closed category presheaf category set op free symmetric monoidal small symmetric monoidal category plays role worlds kripke semantics 
consequence observations show full completeness results translations linear type theories equivalently fullness embeddings relatively free symmetric monoidal structures 
carried constructing logical predicate specifies elements term model target type theory definable source theory appealing basic lemma 
application oriented point view fruitful adapt method reasoning properties programming languages 
example complexity parameterized logical relation showing safety type directed compilation respect time complexity common idea parameterized logical predicates 
interesting direction combine approach techniques specifying properties semantic categories instance specification structures 
note application parameterized logical predicates models full propositional classical linear logic streicher see example 
results appeared preliminary version cases intuitionistic linear type theories discussed 
construction section review basic concepts symmetric monoidal categories related structures recall definition categorical glueing 
section describes series glueing constructions symmetric monoidal structures examples 
section apply glueing constructions deriving notion parameterized logical predicates fragments linear logic 
direct application section show full completeness translations linear type theories 
appendices give syntactic details linear type theories proofs results section 
gordon plotkin discussions initial stage 
due martin hyland tan introducing double glueing 
preliminaries symmetric monoidal structures heavily concepts related symmetric monoidal categories names literature avoiding possible confusion summarise notions terminology 
classical articles models linear logic second edition mac lane book 
monoidal category consists category functor called monoidal tensor product object unit object natural isomorphisms objects diagrams commute symmetry monoidal category natural transformation subject commutative diagrams monoidal category equipped symmetry called symmetric monoidal category 
symmetric monoidal closed category symmetric monoidal category functor right adjoint object write specified right adjoint functor call exponent 
write ev counit adjunction bijection 
monoidal categories monoidal functor tuple functor natural transformation fi arrow satisfying coherence conditions 
fa fb fc fc fa fb fc fa fc fa fa fa fa fi fa fa fa fa fa fi fa fr symmetric monoidal categories 
symmetric monoidal functor monoidal functor additionally satisfies condition fa fb fb fa fc composition symmetric monoidal functors guaranteed observation 
lemma symmetric monoidal functors symmetric monoidal functor composition associative satisfies identity law identity symmetric monoidal functor 
ut monoidal functor strong natural isomorphism isomorphism strict components identities 
strict symmetric monoidal functor symmetric monoidal closed categories specified exponents closed preserves exponents unit counit 
monoidal functors source target monoidal categories monoidal natural transformation natural transformation diagrams commute fa fb ga gb fi gi symmetric monoidal adjunction symmetric monoidal categories adjunction functors symmetric monoidal unit counit monoidal natural transformations 
result standard kelly proposition left adjoint part monoidal adjunction strong 
conversely strong symmetric monoidal functor right adjoint adjunction symmetric monoidal 
ut autonomous category symmetric monoidal category equipped fully faithful functor op exists natural isomorphism 
autonomous category closed 
easy verify 
autonomous op unit false tensor par alternatively specify autonomous category symmetric monoidal closed category object object canonical morphism 

isomorphism categorical glueing recall notion categorical glueing constructions 
see section taylor forthcoming book comprehensive survey properties usages historical remarks glueing constructions 
categories functors write comma category object triple fa gb arrow pair diagram commutes 
fa gb fa gb fa gb sequel interested comma categories form functor object may written gc 
arrow pair satisfying gc note obvious projection functor may call glueing consider full subcategory objects subobjects may write object subobject gc 
arrow 
arrow set theoretic notation implies regard predicate specification gc map map respects predicates 
projection sends 
category called useful notice projections characterized pullbacks sub cod cod forgetful functor takes codomain sub full subcategory objects subobjects restriction cod sub 
case pullbacks cod fibrations codomain fibration subobject fibration 
settings fibration obtained change base particular place talk internal logic point view fibrations categorical logic exploited hermida thesis context models typed lambda calculi 
turns bi fibration similar slightly indirect impact giving symmetric monoidal structures glued categories briefly address issue proposition 
glueing symmetric monoidal structures section give series glueing constructions symmetric monoidal structures 
start simple folklore result glueing symmetric monoidal closed categories 
consider involved settings 
glueing symmetric monoidal adjunctions construct symmetric monoidal adjunction glued categories component categories 
second double glueing autonomous categories introduced hyland tan 
realize duality autonomous categories combine glueing dual glueing construction twice 
provide results examples 
glueing symmetric monoidal closed categories lemma suppose symmetric monoidal closed categories symmetric monoidal functor 
suppose pullbacks 
category symmetric monoidal closed structure projection strict symmetric monoidal closed 
proof define symmetric monoidal structure coherent morphisms symmetric monoidal functor exponents defined pullback gc gc gc gc write ev counit adjunction gc gc adjunct ev gev gc gc routine see bijective correspondences gc gc gc gc gc ut folklore lawvere stated result lectures 
describe 
see ambler thesis related observation 
fact point view available terms fibrations 
hermida shown fibred ccc finite products cons products fibration obtained change base functor preserving finite products 
observation spirit parallel result symmetric monoidal closed categories proposition suppose symmetric monoidal closed categories symmetric monoidal functor strict symmetric monoidal closed functor bifibration op fibrations 
consider pullback symmetric monoidal closed structure bifibration strict symmetric monoidal closed 
proof see appendix assumption cofibration making symmetric monoidal exponents fact fibration see proposition general result glueing adjunctions 
ut lemma regarded instance proposition codomain fibration cod derive lemma proposition just checking symmetric monoidal closed cod preserves structure strictly 
lemma gives example subobject fibration sub takes place 
important result hermida thesis states fibred ccc cons products cartesian closed category strictly preserves cartesian closed structure 
know result symmetric monoidal closed categories adequate notion fibred smcc 
ut variation lemma standard result glueing cartesian closed categories see instance corollary suppose cartesian closed categories functor preserves finite products 
suppose pullbacks 
category cartesian closed projection cartesian closed functor 
ut similarly lemma give symmetric monoidal closed structure provided base category admits epi mono factorization lemma addition assumptions lemma suppose admits epi mono factorization 
symmetric monoidal closed structure projection strict symmetric monoidal closed 
proof sketch description symmetric monoidal closed structure easier set theoretic notation fm fm implies ev alternatively apply proposition base category admits epi mono factorization subobject fibration sub bifibration 
need check sub symmetric monoidal closed strict symmetric monoidal closed 
ut example phase semantics symmetric monoidal functor object arrow category trivial symmetric monoidal closed structure set cartesian closed structure symmetric monoidal closed structure commutative monoid jmj 
underlying set jmj image unique object unit multiplication 
correspond respectively 
poset jmj subsets jmj inclusion ordering 
lemma give symmetric monoidal closed structure jmj follows 
feg fx 
yg fu implies 
yg fact jmj free commutative quantale monoid way symmetric monoidal structure determines multiplicative structure phase semantics follows fixed jmj jmj jmj objects take form autonomous structure 
fact symmetric monoidal closed preordered set kleisli category monad autonomous preordered set way example ut example locally small symmetric monoidal closed category 
functor set symmetric monoidal id sends set symmetric monoidal closed structure fid yg implies ev yg indicates canonical isomorphism call category may write 
ut example parameterized predicates sophisticated useful example obtained combining sub glueing construction free symmetric monoidal 
strict symmetric monoidal functor small symmetric monoidal category locally small symmetric monoidal closed category note presheaf category set op symmetric monoidal closed structure fx gy set op fact free symmetric monoidal 
symmetric monoidal functor set op equipped sends ix sends equivalence class iu iv ix category set op objects form 
arrow arrow implies 
symmetric monoidal closed structure described ih ix ev note example special case construction equivalent 
set op appear section category pred parameterized predicates 
ut example proof phase semantics construction appears streicher denotationally complete models classical linear logic 
example suppose category autonomous 
resulting need autonomous easily seen canonical natural transformation 
follows kleisli category monad autonomous category unit tensor duality phase semantics example 
streicher shown suitable conditions cover autonomous structure multiplicatives additives exponentials 
ut drop symmetric results talk monoidal bi closed categories models non commutative linear logic syntactic calculus lambek 
example shows non commutative version phase semantics instance construction 
note studied glueing monoidal bi closed lattices called fl algebras monoidal meet semilattice morphism fringe morphism showing disjunction existence properties substructural logics construction derived non symmetric version lemma 
ut example non commutative phase semantics monoidal functor object arrow category set monoid jmj 
poset jmj described example 
non symmetric variant lemma implies jmj monoidal biclosed structure 
feg fx 
yg fu implies 
yg fu implies 
yg easy verify adjunctions xn 
ut glueing symmetric monoidal adjunctions lemma suppose symmetric monoidal adjunctions symmetric monoidal functors monoidal natural isomorphism symmetric monoidal functors fc fc uc uc fc fc fc unit counit 
strong left adjoint projections give map adjunction proof sketch see bijective correspondence fc uc ut development lemma sufficiently general drop assumption isomorphism provided pullbacks lemma consider lemma monoidal natural transformation suppose pullbacks 
symmetric monoidal functors fc uc lemma uc pullback uc strong left adjoint projections give map adjunction 
proof sketch easy see natural bijections fc uc uc ut examples satisfy assumption lemma lemma example 
terms fibrations lemma generalized follows 
proposition fibration cofibration give map adjunction suppose adjunction functors natural transformation consider pullbacks adjunction functors 
lemma notations cartesian cocartesian liftings appendix 
give map adjunction ut generalises lemma covers construction exponents proposition gc gc 
versions lemma available provided categories admit epi mono factorization lemma fc fs xg uc ft yg lemma fc fs xg uc fz uc yg note isomorphism results agree 
drop symmetric results 
ut example adjunction symmetric monoidal adjunction small symmetric monoidal categories trivial adjunction set id id set glueing functors set set monoidal natural isomorphism fi obtain symmetric monoidal adjunction example fa ffx xg ub fu yg ut example adjunction categories parameterized predicates example constructed category parameterized predicates 
consider commutative diagram functors symmetric monoidal categories strong symmetric monoidal strict symmetric monoidal 
assume right adjoint setting shall give symmetric monoidal adjunction categories parameterized predicates 
note symmetric monoidal adjunction presheaf categories set op lan op set op lan op gx op set left kan extension op set op set op lan op set op glueing functors 
set op 
set op monoidal natural isomorphism obtain symmetric monoidal adjunction set op set op explicitly ff fu ix example section modelling modality intuitionistic linear logic category parameterized predicates 
ut example adjunction phase semantics interpretation noted example give symmetric monoidal functor set give commutative monoid 
easily seen give monoidal natural transformation symmetric monoidal functors give monoid homomorphism corresponding monoids 
consider commutative monoids monoid homomorphism obtain symmetric monoidal adjunction jmj jnj id id set id id set glueing functors natural transformation corresponding version lemma 
explicitly jmj jnj ft xg fx yg induced comonad jnj sends 
composing comonad kleisli adjunction monad described example obtain comonad jnj sends kleisli adjunction symmetric monoidal respect finite products kleisli category autonomous structure jnj jnj cases gives sound interpretation modality 
chosen fu 
ug inclusion 
ut glueing autonomous categories give mild generalization double glueing construction hyland tan see example 
essential idea double objects glued category duality underlying autonomous category scales glued category 
object glued category considered far essentially predicate object underlying category double glued category object pair predicates object underlying category dual 
doubled category obviously self duality surprising see give symmetric monoidal structure duality forms autonomous category 
proposition suppose autonomous category symmetric monoidal closed category symmetric monoidal functor 
suppose pullbacks 
category dg determined pullback autonomous structure projection dg preserves autonomous structure strictly 
dg op op op projections glued categories 
proof sketch explicitly objects dg tuples gc gc arrow tuple diagrams commute 
gc gc gc gc gc 
gc autonomous structure dg follows 
gi id gi gc gc pullbacks gc gc gc 
gc gc 
gc 
gc 
gc 
gc gc proof lemma 
hard see unit tensor product determine symmetric monoidal structure dg easy see determines contravariant fully faithful functor dg 
nontrivial part check natural bijection dg dg requires calculation appendix dg sends obviously preserves autonomous structure strictly 
ut call dg double glueing fact possible give general statement terms fibrations similar way proposition follows 
subsumes proposition 
proof essentially reworking proposition appendix idiom fibrations 
proposition suppose autonomous category symmetric monoidal closed categories symmetric monoidal functor strict symmetric monoidal closed functor bifibration fibred finite products 
consider category dg determined pullbacks dg op op op dg autonomous structure projection strictly preserves autonomous structure 
proof sketch object dg triple jaj hold 
arrow jaj jbj triple jaj jbj satisfies gj gj 
define notations appendix 
gi jaj jbj jaj jbj 
jaj bj jaj jaj jbj jaj jbj jaj jbj jbj jaj write terminal object binary product fibre check data give autonomous structure dg similarly proof proposition 
ut functor symmetric monoidal respect symmetric monoidal structure op double glueing duality op 
ut proposition addition assumptions proposition suppose admits factorization 
category dg determined pullback autonomous structure projection dg preserves autonomous structure strictly 
dg op op proof sketch write jaj object dg jaj subobjects respectively 
map arrow jaj jbj implies implies autonomous structure fm gi jaj jbj fm jaj jbj fu jaj jbj jaj jbj jbj jaj implies ev implies ev jaj fx ut call dg double example double phase semantics example consider case set symmetric monoidal functor determined commutative monoid jmj 
applying double construction poset jmj jmj op ordering iff autonomous structure 
jmj right hand sides example 
connectives derived 
explicitly jmj ut example double glueing hyland tan locally small compact closed category set dg exactly double glueing gc hyland tan 
explicitly gc object triple jaj jaj jaj arrow gc arrow jaj jbj satisfying leading example compact closed category rel sets binary relations obtain double glueing category linear logical predicates loader 
thesis tan shown full completeness gc autonomous category reduced compact closed category derived full completeness results various models mll 
ut example parameterized predicates consider double version parameterized predicates example 
strict symmetric monoidal functor small symmetric monoidal category locally small autonomous category applying double construction symmetric monoidal functor 
set op obtain autonomous category dg concretely describe section category dc pred double parameterized predicates 
ut logical predicates linear logic consider notion parameterized logical predicates fragments linear logic mill multiplicative intuitionistic linear logic dill dual intuitionistic linear logic mill modality mll multiplicative linear logic 
fact category theoretic setting logical predicates appeared examples glueing constructions section example section turn syntax oriented form 
parameterized predicates small symmetric monoidal category locally small symmetric monoidal closed category ibe strict symmetric monoidal functor definition obj indexed set fp predicate ix implies 
ut may intuitively think ix represents denotation set proofs sequent imported determines property proofs closed tensor composition structural constructions 
traditional non linear calculi logical predicates explicitly state resource play significant role 
predicate predicate proofs second condition tells stable change resource proof provided satisfies property definition define category predicates pred follows object pred pair predicate arrow arrow implies 
ut definition predicates define predicates follows 
ix ev ut reader notice pred set op glueing functor 

explained example definition derived free symmetric monoidal lemma 
give proof theoretic explanation sequent derived 


intro elim splits resource prove respectively 
general splitting resource unique consider possible cases proof splitting satisfies tensor closed property ii proofs satisfy predicates respectively cases say derivation satisfies property 
definition spirit usual definition logical predicates satisfies mn belongs satisfying type theory linear deal resources terms linearly explicitly state definition intuitively satisfies mn satisfies satisfying lemma define fif predicate ia ia 
ib pred ig 
ut proposition pred symmetric monoidal closed category data unit object tensor exponents 
extends strict symmetric monoidal functor pred full 
ut closed preserves exponents strictly particular ut logical predicates suppose 
fix interpretation mill see appendix 
definition type indexed family fp predicates logical predicate predicate 
constant ut note logical predicate completely determined instances base types 
logical predicate fp interpret mill pred base type 
constant lemma basic lemma mill fp logical predicate 
term jdj jdj 
holds 
ut corollary occurs jdj holds ut determines logical predicate canonical way provided base type object constant arrow defined inductively automatically interpretation determined 
define canonical logical predicate fp noted logical predicate determined instances base types 
basic lemma canonical logical predicate implies free types types closed definable element image example equivalent object arrow category base type constant canonical logical predicate specifies canonical isomorphisms objects generated iis identity functor morphism mill definable objects satisfies canonical logical predicate 
ut binary logical relations straightforward generalize specialize logical predicates multiple arguments logical relations way demonstrated 
spell case binary logical relations 
suppose small symmetric monoidal category locally small symmetric monoidal closed categories strict symmetric monoidal functors 
binary relation predicate obtained replacing hi explicitly definition obj indexed set fr relation implies 
ut definition define category relations rel follows object rel triple relation arrow pair arrows implies 
ut proposition know rel symmetric monoidal closed category 
explicitly definition relations define relations follows 
implies ev ev ut note relational notation iff implies ev ev results applications related functions related elements related key property logical relations 
novelty definition take care linearly resources fix interpretations mill respectively 
definition type indexed family fr relations logical relation relation 
constant ut lemma basic lemma binary version fr logical relation 
term jdj jdj jdj 
holds 
ut dual intuitionistic linear logic enrich logic calculus modality 
possible choices see instance 
choose formulation due barber plotkin called dual intuitionistic linear logic dill simple syntax equational theory established category theoretic models dill terms symmetric monoidal adjunctions alternatively benton linear non linear logic lnl logic essentially class category theoretic models dill 
syntax semantics dill recalled appendix consider commutative diagram functors term dual refers double context type system duality classical linear logic cartesian categories symmetric monoidal symmetric monoidal closed strong symmetric monoidal strict symmetric monoidal 
assume right adjoint define categories predicates call pred pred respectively 
note pred cartesian category cartesian closed closed products fh gi predicates coincides definition 
give symmetric monoidal adjunction pred pred applying example 
predicate define predicate ff predicate define predicate ix jf ix ix adjunct ix proposition extend functors pred pred 
strong symmetric monoidal left adjoint ut symmetric monoidal adjunction pred pred cartesian category pred symmetric monoidal closed category pred 
induced comonad pred define predicate ff predicate explained example derived left kan extension version lemma explained intuitively proof theoretically follows 
sequent proved 

intro elim converts linear resource non linearly produce possible cases account say proof satisfies belongs satisfies 
fix interpretation dill see appendix 
definition type indexed family fp predicates logical predicate predicate hold 
constant ut lemma basic lemma dill fp logical predicate 
term jg dj jg dj 
holds 
ut determines canonical logical predicate base type object constant arrow defined inductively cases automatically interpretation determined canonical logical predicate fp determined multiplicative linear logic small symmetric monoidal category locally small autonomous category ibe strict symmetric monoidal functor definition double predicate pair predicate predicate ut definition define category double predicates dc pred follows object dc pred pair double predicate arrow arrow implies implies 
ut definition double predicates define double predicate implies id implies id double predicate define double predicate fix 
ut lemma define fif ix ia 
double predicate ia ia 
ib dc pred ig 
ut proposition dc pred autonomous category data unit object tensor duality 
extends strict symmetric monoidal functor dc pred full 
ut fix interpretation mll definition type indexed family fp double predicates double logical predicate double predicate 
constant ut lemma basic lemma mll fp double logical predicate 
term mll holds 
ut fully complete translations application logical predicates glueing constructions show translations fragments linear logic fully complete just conservative full 
case study mill mll spell case embedding mill mll assumption base types constants 
translation type level omit translation proof level obvious linear logic requires proof theory proof nets mll needs space see complete description 
mll richer theory mill mll contains lots types definable mill obvious proofs theories related show fact strongest relation 
term model mill mll 
small symmetric monoidal closed category freely generated fixed set base objects constant arrows small autonomous category freely generated set base objects constant arrows 
strict symmetric monoidal closed embedding corresponds syntactic translation mill mll 
translation sound preserves symmetric monoidal closed structure strictly 
conservative faithful shown observation small symmetric monoidal closed category construct autonomous category fully faithfully embeds obtained example applying chu construction set op general kind model construction technique useful showing conservativity syntactic translations see example 
harder property show translation full expression target theory types definable source theory definable source theory 
equivalently amounts fullness say translation type theories fully complete conservative full 
term full completeness coined abramsky jagadeesan 
original full completeness means arrow semantic category denotation syntactic element adapt case semantic category syntactically defined term model type theory 
show fullness immediate consequence logical predicates method described section 
define double logical predicate fp note fp completely determined instances base types 
suppose mill mll share constants interpretation constant trivially respects double logical predicate 
note holds fact show extends strict symmetric monoidal closed functor dc pred 
see definition mill definable type means image basic lemma mll element mll mill definable type fact definable mill 
proposition term mll mill definable type exists term mill holds mll 
ut theorem translation mill mll fully complete 
ut full completeness semantically fact argument shows stronger result stated mentioning specific syntactic theories 
small symmetric monoidal closed category construct relatively free autonomous category strict symmetric monoidal closed functor satisfy universal property strict symmetric monoidal closed functor autonomous category unique autonomous functor making diagram commute 
equivalently define unit adjunction free construction 
theorem embedding full faithful 
proof faithfulness shown model construction argument 
fullness follows commutative diagrams dc pred au id hj right triangle commutes universal property full ut note assumptions relatively free satisfies suitable universal property dc pred preserves structure full argument applicable similar situations 
condition follows definition third true glued categories proposition 
case check second point embedding glued category preserves required structure 
done fullness follows immediately 
turn fullness fullness translation syntactically defined theories need show term models theories induced functor satisfy relative freeness follows just routine verification case mill mll 
rest section give series full completeness results obtained argument 
examples theorem embedding small symmetric monoidal category relatively free symmetric monoidal closed category fully faithful 
proof follow argument section 
small symmetric monoidal category relatively free symmetric monoidal closed category embedding 
proposition know pred strictly preserves symmetric monoidal structure full 
argument case mill mill shows full 
faithfulness follows constructing symmetric monoidal closed category faithfully embeds free symmetric monoidal 
ut corollary embedding fragment mill mill fully complete 
ut proving syntax oriented restricted results directly convenient basic lemma 
theorem translation mill dill sends fully complete 
proof equivalent term model mill term model dill obvious functor strict symmetric monoidal closed functor corresponding translation mill dill 
applying basic lemma dill lemma canonical logical predicate know dill definable element mill definable type satisfies canonical logical predicate definable mill 
ut theorem translation sharing theory action calculus dill fully complete 
ut spelled appendix proof basic lemma dill lemma 
examples fully faithful relatively free constructions method applied directly 
case embedding small symmetric linearly distributive category relatively free autonomous category full shown normal form result proof nets 
argument small symmetric linearly distributive category functor dc pred may preserve 
ut abramsky gay nagarajan 
specification structures propositions types concurrency proceedings th banff higher order workshop lecture notes computer science vol 
pp 
springer verlag 
abramsky jagadeesan 
games full completeness multiplicative linear logic symbolic logic 

characterization lambda definability categorical models implicit polymorphism theoret 
comp 
sci 

ambler 
order linear logic symmetric monoidal closed categories ph thesis ecs lfcs university edinburgh 
barber gardner hasegawa plotkin 
action calculi linear logic computer science logic csl selected papers lecture notes computer science vol 
pp 
springer verlag 
barber plotkin 
dual intuitionistic linear logic submitted 
barr 
autonomous categories lecture notes mathematics vol 
springer verlag 
barr 
autonomous categories linear logic math 
struct 
comp 
sci 

benton 
mixed linear non linear logic proofs terms models computer science logic csl selected papers lecture notes computer science vol 
pp 
springer verlag 
benton bierman de paiva hyland 
linear lambda calculus categorical models revisited computer science logic csl selected papers lecture notes computer science vol 
pp 
springer verlag 
bierman 
categorical model intuitionistic linear logic 
proceedings typed lambda calculi applications tlca lecture notes computer science vol 
pp 
springer verlag 
blute cockett seely 
natural deduction coherence weakly distributive categories pure appl 
algebra 
crew meseguer pratt 
temporal structures math 
struct 
comp 
sci 

corradini gadducci 
categorical presentation term graphs proceedings category theory computer science ctcs lecture notes computer science vol 
pp 
springer verlag 
crole 
categories types cambridge university press 
eilenberg kelly 
closed categories proceedings categorical algebra la jolla pp 
springer verlag 
fiore simpson 
lambda definability sums grothendieck logical relations appear proceedings typed lambda calculi applications tlca lecture notes computer science springer verlag 
gardner hasegawa 
types models higher order action calculi proceedings theoretical aspects computer software tacs lecture notes computer science vol 
pp 
springer verlag 
minamide 
runtime complexity type directed unboxing proceedings international conference functional programming icfp pp 
acm press 
girard 
linear logic theoret 
comp 
sci 

girard 
linear logic syntax semantics advances linear logic pp 
cambridge university press 
hasegawa 
models sharing graphs categorical semantics letrec ph thesis ecs lfcs university edinburgh published springer verlag volume distinguished dissertation series 
hasegawa 
logical predicates intuitionistic linear type theories appear proceedings typed lambda calculi applications tlca lecture notes computer science springer verlag 
hermida 
fibrations logical predicates indeterminates ph thesis ecs lfcs university edinburgh 
im kelly 
universal property convolution monoidal structure pure appl 
algebra 
jung tiuryn 
new characterisation lambda definability proceedings typed lambda calculi applications tlca lecture notes computer science vol 
pp 
springer verlag 
kelly 
adjunction proceedings sydney category theory seminar lecture notes mathematics vol 
pp springer verlag 
kelly 
coherence compact closed categories pure appl 
algebra 
lafont 
logiques categories machines de doctorat universite paris vii 
lambek 
bilinear logic algebra linguistics advances linear logic pp 
cambridge university press 
lawvere 
categories space quantity space mathematics philosophical epistemological historical explorations pp 
berlin 
loader 
models lambda calculi linear logic structural equational characterisations ph thesis st hugh college oxford 
mac lane 
categories working mathematician second edition graduate texts mathematics springer verlag 
milner 
calculi interaction acta inform 

mitchell moggi 
kripke style models typed lambda calculus ann 
pure appl 
logic 
mitchell scedrov 
notes relators computer science logic csl selected papers lecture notes computer science vol 
pp 
springerverlag 
hearn riecke 
kripke logical relations pcf inform 
comput 

plotkin 
lambda definability full type hierarchy curry essays combinatory logic lambda calculus formalism academic press 
power 
elementary control structures proceedings concurrency theory concur lecture notes computer science vol 
pp 
springer verlag 

glueing algebras substructural logics proceedings non classical logics kripke semantics rims pp 
kyoto university 
streicher 
denotational completeness revisited draft 
tan 
full completeness models linear logic ph thesis university cambridge 
taylor 
practical foundations mathematics published cambridge university press 
syntax semantics mill syntax mill briefly recall syntax equational theory mill 
detail discussed presentation chosen compatible dill appendix 
set base types write set constants fixed 
types terms lx mm assume constant fixed arity types involve 
restriction arity ease presentation essential 
typing constant variable intro elim intro elim lx intro mn elim merge notation taken 
note typing judgement unique derivation 
axioms lx lx mx indicates typed context assume suitable conditions variables avoiding undesirable captures 
equational theory mill defined congruence relation terms typing judgement generated axioms 
semantics mill symmetric monoidal closed category tensor product unit object exponent 
assume object base type arrow constant defined 
typing judgement define interpretation jdj follows jdj jdj id id jd jd jd jd jd jd jd jd jd id jd jd 
jd lx jdj mn jd jd jd 
ev denotes uniquely determined canonical isomorphism 
proposition semantics sound complete 
ut syntax semantics dill dill typing judgement takes form represents intuitionistic additive context linear multiplicative context 
syntax dill types terms lx mm typing constant variable lin intro elim intro elim lx intro mn elim variable int intro elim axioms lx lx mx linear context binds 
semantics dill cartesian category category finite products symmetric monoidal closed category symmetric monoidal adjunction understand symmetric monoidal structure choice terminal object binary product 
assume object base type arrow constant inductively defined fu 
typing judgement define jg dj follows jg dj dj cases dealt mill care discarding duplicating intuitionistic context discard jg dj jdj split jg jg jg defined terms projections diagonal maps imported cases jg fu jg fu fu fu fu jg fu fu jg split jg jg id jg jg proj suitable projection counit comultiplication comonad fu induced coherent morphism 
proposition barber plotkin semantics sound complete 
ut sharing theories action calculi reproduce acyclic sharing theories st introduced type theories sharing graphs term graphs graph rewriting systems see related structure 
regarded type theories action calculi ac see exposition direction 
shown dill suitable constants conservative extension action calculus 
show translation fact fully complete logical predicate 
previous benton lnl logic dill type theory action calculi 
cosmetic changes affect results share class categorical models 
ut syntax types type finite list base types 
range types 
write empty sequence concatenation terms typing constant variable unit tensor axioms intuitively represents notion sharing pointers shared resource referred times equation true duplicated discarded 
semantics semantics slightly relax requirements semantic categorical structure 
strong symmetric monoidal functor cartesian category symmetric monoidal category assume object base type define 
strong follows 
suppose arrow constant 
notations discard 
diag fd define jgj follows 
jgj jg jgj jg jgj diag jgj jgj jgj jgj jg jgj discard jgj diag jgj jgj proposition semantics sound complete 
ut translation dill translation types terms st dill defined follows 
empty empty dummy constant 
soundness results tell translation corresponds structure preserving functor 
lemma type soundness st dill 
ut lemma soundness st dill 
ut constructing model dill term model st faithfully embeds show proposition conservativity dill st ut control operators proof fullness action calculus additionally sort parameterized constants called control operators 
ease presentation shall consider case just parameter generalization multiple arguments straightforward 
control operator arity 
obeys term construction typing control conversion bound variables intuitively control operator amounts rank functional type theory higher order types 
power shown semantic setting described control operator modelled family functions fx fx natural basic lemma effective presence constructs need show lemma setting section 
lemma assume natural families functions natural ja jb jc jd natural ix jh holds 
ja jb pred jf jf implies pred jf jf proof note pred jf jf ix ja jh jb 
similarly pred jf jf ix jc jh jd 
show condition implies 
ix jc ix ja naturality condition exists ja jh holds 
jc ix ja naturality ix jh condition assumption ut hand noted giving natural family amounts giving arrow ja jb jc jd 
assume control operator arity 
corresponding dill constant type 
assumption translation control operators ly theorem translation action calculus corresponding dill full dill consists variables base types exists term ac holds dill 
proof term model action calculus dill determined translation 
lemma ensures basic lemma canonical logical predicate presence control operators 
dill definable element satisfies canonical logical predicate ac definable ac definable types 
ut proof proposition notations chosen cartesian cocartesian liftings pe pe 
pe pe pe write unique map satisfying 
pe pe pe dually pe pe pe write 
unique map hold 


pe pe pe object pair gc pe holds arrow pair satisfying gc pe 
give symmetric monoidal structure fact cofibration 


define defined satisfies pe pe gc gc exponents appealing fact fibration gc gc proof lemma 
natural bijection 



defined satisfies pe gc 
defined satisfies gd verified note hold 
bifibration sends 
obviously preserves symmetric monoidal closed structure strictly 
proof proposition going check bijective correspondence 

means diagrams commute gc gc gc 
gc gc gc 
gc proof sketch 
hand amounts commutative diagrams gc gu gc gc gc gu pullbacks 
gc 
gc 
gc 
gc 
write left vertical arrow top horizontal arrow respectively 
similarly shall define derive follows 
derived bijection 

derived step follows commutative diagrams definition gc 
gc 
qs gu gc 
gc 
routine see required diagrams commute 
converse direction similar derive derivation just inverse step follows commutativity diagrams definition gc gc 
qs gc gc gc 
routine see required diagrams commute 
easy see mappings inverses 
check naturality straightforward 
