chu spaces interpretation concurrent objects vaughan pratt dept computer science stanford university stanford ca pratt cs stanford edu july chu space binary relation set defined set transforms converse functions 
chu spaces admit great interpretations virtue realizing small concrete categories large ones arising mathematical computational practice 
particular interest computer science interpretation computational processes takes schedule events distributed time automaton states forming information system sense scott pairs relation individual transcriptions making history 
traditional homogeneous binary relations transition precedence recovered respectively right left residuals heterogeneous binary relation 
natural algebra chu spaces linear logic process algebra process interpretation 
pressing questions computer science today concurrency object 
question interest today sibling growth industries parallel computing networks stretch extant models computation sequential origins 
second relevant programming languages definition object software engineering methodologies happen intuitive sense object 
view computation tra classifies extant models headings logic networks automata 
perspective nicely ties long established computational frameworks neglects developments abramsky interaction categories exemplified category sproc gn milner calculus mpw action calculi mil 
conception network channel connected modules kahn kah alternating places transitions petri pet 
petri nets express duality events states terms token game played bipartite graph 
distinguishing feature petri nets resulting finegrained move execution tokens move alternately events transitions states places 
contrast coarse grained ply execution transition systems edges connect states schedules edges connect events 
supported onr number popular strategy controlling conceptual complexity large concurrent systems decompose modules assemble compose mathematically formalizable ways 
basic tool formalizing composition modules algebra 
motivates development process algebras forming suitable basis concurrent programming languages 
noteworthy algebras include hoare communicating sequential processes csp hoa milner calculus communicating systems ccs mil bergstra klop algebra concurrent processes acp bk bk 
token game lend algebra limitation addressed nielsen notion event structure show dual prime algebraic domains kind scott domain sco 
duality instance stone duality sto subject matured considerably half century joh 
see essential elements concurrency residing topics petri nets event structures domains stone duality process algebra 
separate chapters theory concurrency topics concurrency jigsaw puzzle 
naturally led ask pieces puzzle arranged recognizable order 
review outcome date investigations chu spaces candidate unifying framework aspects concurrency pra pra gup gp gup pra pra 
simplicity deceptive years experience convinced adequately equipped role 
chu spaces simple useful organized 
regard simplicity chu space merely matrix transforms deleting copying columns identifying adjoining rows ordinary mapping 
section defines process precisely terms converse function specifying surviving columns copied forward function specifying resulting rows sent 
contravariant column manipulations constitute mental preparation states covariant row manipulations constitute physical mapping points chu spaces transform looking leap 
regard utility motivating application concurrent computation chu spaces find application mathematics organize relational structures topology duality unified framework pra physics provide process interpretation pra philosophy offer solution descartes problem mechanism mind interacts body pra 
common applications construction domain question terms interaction appropriate polar opposites domain mathematics interaction sets physics interaction particles waves philosophy interaction body mind 
measure robustness notion chu space applications call adjustment definition 
regard organization chu spaces transforms form remarkably endowed category concrete self dual symmetric monoidal closed 
properties expressible concretely operations category corresponding operations linear logic bringing close model full linear logic comparably simple structure 
process interpretation chu spaces structure process algebra interpretation linear logic 
reinforces connections previously noticed asperti asp gunter gg linear logic concurrency petri net setting section 
definitions definition chu space set triple consisting sets function theta theta matrix elements drawn write entry jx 
may view organized rows columns 
viewing row regard carrier structure row indexed complete description element description function function satisfying assigns description 
write description set fe ag rows description function injective repeated rows say 
viewing column view consisting locations variables values ranging column indexed permitted assignments variables 
extension function satisfies state understood merely name assignment binding values variables 
notations evident duals extension function injective repeated columns call extensional 
chu space states may name assignment 
chu space way seen multiset rows multiset columns multiset replaced set extensional 
rows physical concrete conjunctive yang aspects space columns mental disjunctive yin aspects 
may regard rows columns characteristic functions subsets respectively taken consist degrees membership giving ordinary notion membership 
chu space obtained identifying pairs column indices likewise row indices called skeleton chu space 
normal chu space satisfying written simply definable 
normal space automatically extensional need dual chu space transpose notated 
space dual normal space automatically necessarily extensional 
chu transforms 
just vector spaces transform linear transformations posets monotone functions chu spaces transform chu transforms turning class chu spaces category chu set just chuk definition source target chu spaces chu transform consists pair functions satisfying adjointness condition 
jg chu transforms may understood operationally look leap mental preparation followed physical transformation intermediate chu space representing result just mental preparation 
columns appear rows appear column appears column row appears row requirements suffice determine uniquely 
adjointness condition necessary sufficient condition consistency 
process illustrated example incidentally realizes projection dimensional vector space gf axis 
delete cols gamma 
copy cols send rows rows gamma 
adjoin original rows columns deleted copy columns 
row identified new rows adjoined happen rows source cared target vector space 
intermediate space vector space dimensional vector space done row identifying stage column copying second reasonable order 
mental preparation step consists deleting columns making copies 
new columns introduced structure form disallowed states lost 
target structure absent source structure added deleting columns row mapping possible 
gives chu transforms character structure preserving homomorphisms pra continuous functions falling obvious special case analyzed 
relational structures realizable chu spaces pra pra topological spaces ls 
representations combined represent topological relational structures topological groups topological vector spaces main autonomous category studied bar ordered stone spaces pri 
note preparation shown small concrete category realizable chuk disjoint union underlying sets objects process interaction events states section gives computational process interpretation chu spaces terms internal row column structure external linear logic structure topic section 
propose understand computation terms interaction pure schedule understood set concurrent events pure automaton understood set possible alternative worlds states parallels proposed interpretations phenomena terms interaction opposites appropriate phenomena 
computation number facets particularly problematic concurrency search essence led chu space model 
discussing problematic concurrency 
cater concurrency moved traditional state oriented view computation embraced event oriented view 
understands concurrency terms interleaving concurrent events happen order 
understands concurrency terms independence asynchrony concurrent events bear temporal relationship happening regard order distinct simultaneous synchronized events 
main difference state oriented view distinguish mutual exclusion independence events wish need view atomic 
example children wish ride happier 
offers choice possible sequential behaviors ab ba 
dispense choice delay permitting single concurrent behavior 
notice discussion situation terms rides atomic actions say goes ride drawing distinction 
traditional state model draw distinction automatically identifies ab ba rides understood atomic 
expressing behavior partially ordered set events process set possible behaviors distinction drawn naturally representing unordered set events constituting behavior ab ba possible behaviors linear ordering events 
practice people naturally think terms states events 
really needed simple connection viewpoints facilitating smooth passage 
chu spaces address concurrency admitting interpretation processes 
rows columns chu space interpreted respectively events states process entries matrix interpreted interaction event state specifically recording state information event 
events regarded points time states points information space 
events specify particular information associated incremental changes information just derivatives associated particular position incremental changes position 
dually states exist particular moment time associated incremental changes time time passes waits state discrete time events change status 
distinguish time actual position events information knowledge positions 
chu space process may viewed imperatively declaratively focusing columns rows respectively representing space 
extracting transitions constraints chu space model behavior may usefully contrasted traditional imperative transition approach declarative approach involving temporal precedence delay constraints events follows assume simplicity 
basic component imperative approach transition consisting pair states meaning possible pass state state automaton set transitions acyclic may transitively closed partially order set states 
corresponding basic component event oriented approach precedence constraint consisting pair events meaning necessary perform event event schedule set constraints acyclic deadlock transitively partially order set events 
views involve ongoing motion points type states information space imperative case events time declarative case 
motions differ regard interpretation branching understood disjunctively automaton path taken conjunctively schedule constraints observed 
chu space view involves ongoing connected motion recording 
recording pair consisting event state chu space set recordings 
bipartite directed graph binary relation set events set states acyclic transitive usefully definable 
way chu spaces capture fine grained move orientation petri nets opposed traditional coarse grained ply orientation transitions precedence constraints satisfactory algebra petri nets 
definable binary relations common source right residual 
theta theta right residual relation defined consisting pairs arb implies atc 
right residual jn chu space relation yields binary relation relation largest possible transition relation having property transition undo event recorded state having happened 
natural inclusion bitwise order columns course clear partially orders left residual relations common target defined dually 
theta theta left residual binary relation defined consisting pairs bsc implies atc 
left residual yields binary relation largest possible precedence relation property pair relation state witnessed partial order 
residual derivations ongoing state state event event motion terms recording lifts general relationships possibility transition necessity precedence mathematically rich interesting topic space time prevent delving 
summarize briefly distances organized quantale ros complete semilattice monoid 
combines earlier investigations purely temporal structures time information duality chu spaces way permits temporal structure results lifted directly duality information structures automata scott style information systems 
generalizes valued generalized metric associated partial orders metrics causal accidental order strict nonstrict order various notions real time op cit 

interpretation objects unintended bonus chu spaces admit straightforward interpretation concurrent objects 
statically sets indistinguishable dynamically distinguished transforming respectively functions 
noting set states automaton forms understood mental entity take object set understood physical 
conjunctive set points object coexist contrast disjunctive states sense consider object concurrent 
collection 
objects concurrent sense sum coproduct concurrent object 
absence constraints set states object truly concurrent consisting independent events 
imposition constraints creates interferences events conflicts precedence constraints 
methods class traditionally viewed functions objects class context chu spaces propose take methods chu space states just permitted assignments values physical points locations space 
algebra previous section examined chu spaces inside terms components 
section consider outside terms language algebra 
natural language chu spaces linear logic appears fundamental process language chu spaces giving sensible useful interpretation 
chu space interpretation linear logic boolean logic various choices basis set linear logic operations small boolean logic single nand operation 
particularly natural basis right process interpretation consists operations constants additive disjunction plus phi multiplicative conjunction tensor product times omega linear negation exponential modality course associated plus times respective units operations 
negation omitted list interpreted laws linear logic expressible remaining language merely ordinary number theory 
larry moss pointed remains true taken basic place interpreted numerically motivations axiom phi omega expressed negation pra offers rationale girard exponential 
presence negation adds completely new dimension number theory 
plus times course de morgan dual respectively additive conjunction multiplicative disjunction par 
dual exponential having respective units 
linear implication gammaffib defined omega 
intuitionistic implication defined gammaffib 
operations number theoretic interpretation 
negation basic operations may interpreted acting chu spaces follows 
just dual transpose carrier chu space normal chu space 
phi theta defined unit 
omega theta ja gammaffib states chu transforms defined equivalently adjointness condition 
unit theta normal chu space row identity function completes chu space interpretation basic operations constants 
interpretations derived operations obtained definitions 
process interpretation linear logic computational significance operations follows leave negation 
phi asynchronous parallel play concurrent composition process eating dinner take bites bites phi eating dinner bites silence interaction 
possible joint states form set theta possible pairs individual states 
associated unit events state unconstrained zero event process gets 
omega pra pra interaction flow trains passing stations yield train station events 
event form pairing train station 
state form specifies train state stations collectively appear seen train trains collectively seen station 
associated unit event completely unconstrained states possible event process realize posets omega realizes poset direct product tensor product pos cartesian closed 
consists events constraints making pure set independent events 
operations constants covered far including impossible introduce constraints starting unconstrained processes 
processes effect cardinals follows completeness number theory axiomatization basic operations negation number theoretic counterexample number theory process counterexample making process algebra 
awkward part show completeness number theory axiomatization theta 
negation merely point view interchanging qualities event state 
states physical entities events mental automaton computer program locations text real runtime events imagined 
running program undoes negation program disappears physical view principle runtime events physical 
linear implication gammaffib understood observing point view developed 
definition reveals observation equivalent interaction omega events observed states observer records observations individual recordings event state recording events omega dual turns recording events states gammaffib recording events appear observer observing universality previous sections emphasized computational information processing behavioral scheduling interpretation chu spaces original motivation bringing 
section review briefly areas chu spaces offer fundamental insights mathematics physics philosophy 
mathematics 
argued pra pra mathematical universe constructed interaction polar opposites specifically sets boolean algebras complete atomic kind question arises varying proportions 
chu spaces certain sense dual categories 
may seen perspective universal algebra organizes mathematics levels abstraction elements numbers points structures groups topological spaces categories structures grp top 
may organized category concat large concrete categories uc uc set faithful functor assigning set carrier object large category category theory reduces organization levels suppressing elements structures calling merely objects 
elements objects recovered needed morphisms suitable object typically tensor unit 
chu spaces reduce universal algebra picture levels suppressing elements boundaries categories 
viewpoint applies category concretely fully embeds class categories contains objects categories class pairs objects realizing objects category morphisms objects exactly sense consist underlying functions acting underlying sets fullness concreteness 
addition mathematical universality chu spaces specialized mathematical uses 
example permit uniform treatment pra gamut categories treated johnstone heading stone spaces joh 
stone duality poorly understood computer science crucial importance understanding relationships imperative declarative programming denotational operational semantics algebra logic 
simplifying stone duality mere matrix transposition chu spaces subject accessible 
physics 
physical universe appears constructed interaction particles waves interaction described quantum mechanics mixture varying proportions 
associating points hilbert space states dimensions choice basis outcomes measurements events associated basis usual pure state encodes correlations decoded ih notation quantum mechanics respective residuals 
mixed state mixture described probability density matrix may understood corresponding chu space 
philosophy 
subject amenable perspective mind body problem 
descartes proposed mind interacted body 
proposal generated literature denying causal interaction mind body explaining apparent interaction various forms ex leibniz denial body berkeley mind hobbes assertion equivalence russell 
pra applied chu spaces implementation descartes proposal causal interaction mind body basic derived obtaining consequences basic interactions body mind 
see obtain direction mind body interaction separate behavior mind body better descartes 
viewed object level chu spaces formalize russell solution mathematically offering dual views chu space merely transposition viewpoint 
viewed level individual interactions object solution takes new deeper meaning mind body interaction turns real interaction body body mind mind interaction secondary interactions derivable residuation considered mere imagination universe interacts 
reflections 
interest linear logic process algebra 
linear logic developed proof theorist tidy proofs 
different goals lead logic 
linear logic resource sensitive logic sense disallows weakening unused premises contraction multiply premises 
taken mean logic reasoning resources time space computation 
resource sensitivity logic dual side effect resource neglect arising reasoning inside model results equational logic categorical reasoning 
external reasoning contrast takes place combinatorial world sets cartesian closed structure renders weakening contraction sound cardinality tracks resources pra 
resource sensitivity merely symptom linear logic properly understood logic interaction polar opposites omega interaction operator duality mirror interchanging opposites projecting domain respective poles 
remaining operator phi constant provide finite coproducts duality yielding finite products coequalizers 
argued pra set set op suffice poles mathematical practice acknowledge remains considerable room debate 
history 
chu construction takes symmetric monoidal closed category pullbacks object completes self dual category chu 
details construction appear 
chu master thesis published appendix advisor barr book introducing notion autonomous category bar 
intimate connection linear logic autonomous categories noticed seely see furnishing girard linear logic gir natural constructive semantics 
barr proposed chu construction source constructive models linear logic bar 
case set important combination simplicity generality 
case treated explicitly lafont streicher ls treated connections von neumann morgenstern games linear logic observing passing vector spaces topological spaces coherent spaces realizable games giving small early hint universality 
interest chu spaces consequence attempts formalize suitable notion partial distributive lattice 
arriving notion interaction ordered stone spaces distributive lattices resulting category equivalent chu set full subcategory chu pos description extension monotone functions chu space full isometries 
name chu space suggested author barr suitable name objects chu set reifying chu construction lafont streicher game 
advantage chu space requires disambiguating qualification uniquely identify game 
analogy categories enriched kel refer objects general chu construction chu enriched chu spaces 
application chu spaces computation developed collaboration student vineet gupta gup 
rob van glabbeek gordon plotkin separately invaluable sounding boards sources ideas jointly results 
carolyn brown doug gurr explore connection chu construction concurrency bg useful source insights 
pavlovic developed formal sense chu spaces universal mathematics correctly 
am grateful opportunity week course chu spaces attentive audience summer school budapest 
am grateful onr making possible host small monthly chu sessions past summers involving students rob van glabbeek visitors gordon plotkin carolyn brown year pavlovic michael barr 
asp asperti 
logic concurrency 
manuscript november 
bar barr 
autonomous categories volume lecture notes mathematics 
springer verlag 
bar barr 
autonomous categories linear logic 
math structures comp 
sci 
bg brown gurr 
categorical linear framework petri nets 
mitchell editor logic computer science pages 
ieee computer society june 
bk bergstra klop 
process algebra synchronous communication 
information control 
bk bergstra klop 
process theory bisimulation semantics 
proc 
rex school workshop linear time branching time partial order logics models concurrency pages noordwijkerhout netherlands 
springer verlag 
crew meseguer pratt 
temporal structures 
math 
structures comp 
sci july 
gg gunter 
nets tensor theories 
preliminary report 
de michelis editor applications petri nets pages 
university pennsylvania logic computation report number 
gir 
girard 
linear logic 
theoretical computer science 
gn gay nagarajan 
typed calculus synchronous processes 
logic computer science pages 
ieee computer society june 
gp gupta pratt 
gates accept concurrent behavior 
proc 
th ann 
ieee symp 
foundations comp 
sci pages november 
gup gupta 
concurrent kripke structures 
proceedings north american process algebra workshop cornell cs tr august 
gup gupta 
chu spaces model concurrency 
phd thesis stanford university september 
tech 
report available ftp boole stanford edu pub ps hoa hoare 
communicating sequential processes 
communications acm august 
joh johnstone 
stone spaces 
cambridge university press 
kah kahn 
semantics simple language parallel programming 
proc 
ifip congress 
north holland amsterdam 
kel kelly 
basic concepts enriched category theory london math 
soc 
lecture notes 

cambridge university press 
ls lafont streicher 
games semantics linear logic 
proc 
th annual ieee symp 
logic computer science pages amsterdam july 
mil milner 
communication concurrency 
prentice hall 
mil milner 
action calculi syntactic action structures 
proceedings mfcs volume lecture notes computer science pages gda poland 
springer verlag 
mpw milner parrow walker 
calculus mobile processes 
information control 
nielsen plotkin winskel 
petri nets event structures domains part theoretical computer science 
pet petri 
fundamentals theory asynchronous information flow 
proc 
ifip congress pages munich 
north holland amsterdam 
pra pratt 
constructions order theoretic models concurrency 
proc 
conf 
logics programs volume lecture notes computer science pages brooklyn 
springer verlag 
pra pratt 
modeling concurrency partial orders 
int 
parallel programming february 
pra pratt 
duality time information 
proc 
concur volume lecture notes computer science pages new york august 
springer verlag 
pra pratt 
second calculus binary relations 
proceedings mfcs volume lecture notes computer science pages gda poland 
springer verlag 
pra pratt 
chu spaces automata quantum aspects 
proc 
workshop physics computation dallas 
ieee 
pra pratt 
time information sequential concurrent computation 
proc 
theory practice parallel programming sendai japan november 
pra pratt 
rational mechanics natural mathematics 
tapsoft volume lecture notes computer science pages aarhus denmark 
springer verlag 
pra pratt 
stone gamut mathematics 
logic computer science pages 
ieee computer society june 
pri priestley 
representation distributive lattices 
bull 
london math 
soc 
ros rosenthal 
quantales applications 
longman scientific technical 
sco scott 
data types lattices 
siam journal computing 
see seely 
linear logic autonomous categories cofree algebras 
categories computer science logic volume contemporary mathematics pages held june boulder colorado 
sto stone 
theory representations boolean algebras 
trans 
amer 
math 
soc 
tra trakhtenbrot 
origins trinity logic nets automata 
kozen editor logic computer science pages 
ieee computer society june 
van glabbeek plotkin 
configuration structures 
logic computer science pages 
ieee computer society june 
