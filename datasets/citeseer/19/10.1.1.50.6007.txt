comparing evaluating layout algorithms graphed michael himsolt fakultat fur informatik und mathematik universitat passau passau germany graph drawing layout algorithms gain growing interest importance visualization complex data structures 
despite algorithms concepts satisfactory solution central problem criteria readable layouts 
approach problem evaluate layout algorithms comparing effect large set sample graphs 
run compute statistical data collected evaluated 
experiments show traditional layout criteria minimal area maximal edge length straight line edges important may appear 
balance better optimization displaying intended inherited structure graph important formal cost criteria 
general availability graphical user interfaces early growing interest visualizing complex structures 
need structure algorithms draw structure automatically 
graphs accepted serve structure 
graph pair set nodes theta set edges 
graphs model different structures finite state automata state charts flowcharts database schemata electrical vlsi circuits petri nets neural nets molecules name just 
automatic graph drawing current field research 
specific graph drawing algorithms graphs classified characteristics 
wide range characteristics directed undirected cycles planar non planar bounded degree secondly application graph structure 
purpose meaning petri net example different graph theoretic properties net 
graph drawings reflect 
human evaluate drawings criteria 
may intuition completely known 
point stressed graph drawing algorithm mixture criteria 
reflect properties graph application structure cognitive structure reflecting humans understanding nice drawing 
known requirements combined nice drawing graph 
approach problem comparing effect different graph drawing algorithms large sets sample graphs 
collect geometric properties drawings evaluate statistically relate subjective human judgements 
conclude ranking classical criteria graph drawing algorithms reconsidered algorithms need adaption revision 
organized follows 
section overview graphed system implemented graph drawing algorithms 
section explains evaluation experiments section shows results 
section give subjective ranking layout criteria 
graphed graphed extensible editor graphs graph grammars 
graphed system consists parts core system application interface application modules 
written runs sun workstations 
core system graph editor 
graphed object oriented user interface supports functions necessary convenient manipulation graphs 
fonts shapes nodes styles edges easily customized 
special feature graph grammars macro systems generate graphs specific hierarchical structure 
application interface data structure programming graphs 
application modules full access manipulate graphical representation nodes edges 
may create windows user interface 
algorithms graphed programmed 
application modules implement complex editor functions graph theoretic algorithms layout algorithms graph grammar algorithms application specific extensions 
capabilities create edit graphs graphed provides efficient environment create test large sets examples 
drawing algorithms built tool compare effect different layout algorithms graph environment 
graphed graph drawing algorithms classified categories general graphs section directed acyclic graphs section planar graphs section graphs specific structure section 
agrees classification schema reader may find motivation criteria algorithms 
chosen implemented particular subset known algorithms order experiment algorithm major class graph drawing algorithms perform comparison algorithms significantly different 
shall help focussing essentials 
algorithms general graphs force directed algorithms fd fd fr algorithms kamada kawai fruchterman reingold original algorithm eades 
algorithms impose certain forces nodes graph 
heuristic bring equilibrium 
produce layouts graphs display isomorphic symmetric substructures 
major drawback high runtime classification runtimes see section 
implementation fd approach produces smoother drawings fd fr approach noticeably higher runtime 
algorithms directed acyclic graphs directed acyclic graph drawing dag algorithms sugiyama toda eades sugiyama 
algorithm provides base draw directed acyclic graphs topological sorting 
applied general graphs temporarily reversing edges break cycles described 
implementation algorithm runs medium speed 
algorithms planar graphs planarity typical characteristic graph drawing 
algorithms draw planar graphs planar embedding 
example standard planarity tests see modified produce planar embedding cyclic ordering edges node 
ordering directly define coordinates determines general frame layout graph 
drawing algorithm remains bring frame nice form 
realized algorithms planar orthogonal grid drawing bends minimization algorithm tamassia 
nodes placed grid edges polylines horizontal vertical segments 
number bends minimized respect planar embedding 
algorithm gives best layouts pay highest running time class 
planar grid drawing pg algorithm woods 
algorithm gives suitable results small graphs number bends higher obtained algorithm 
theoretically quadratic bound number bends 
edges may arbitrary slopes pleasing algorithm edges composed horizontal vertical segments 
note linear time planar polyline drawing algorithms guarantee linear number bends implemented system 
planar convex faces drawing straight line edges pcs algorithm chiba 
graphs drawn nicely algorithm 
generally tends cluster nodes drawings readable produced pg algorithms 
outer face circular 
algorithm runs fast 
planar grid drawing straight line edges pgs algorithm de pach pollack speed improvements described chrobak payne 
similar algorithm described 
similar previous algorithm tends cluster nodes 
graph triangular shape 
subjective quality drawings algorithm worst best theoretical characteristics planar straight line drawings grid quadratic area 
literature see algorithms planar graphs implemented system 
pg pgs drawings different 
approaches algorithms planar graphs drawing general graphs initial step 
influence planarization step difficult evaluate 
algorithms graphs special structure algorithms graph theoretic properties graph 
knowledge structure meaning graph 
human designer may provide information lack reason gap readability automatic drawings man drawings 
algorithms tailored graphs special structure reduce gap 
tree drawing algorithm walker generalization algorithm reingold 
practical point view tree drawing closest general solution 
algorithm reproduces tree structure nearly way user hand 
petri nets petri implemented petri net drawing algorithm graphed 
petri net algorithm takes agents input term descriptions special petri net structures 
graph theoretically similar series parallel graphs 
drawings nice draw petri net way similar human designer 
comes fact agents provide detailed information structure nets exploited drawing 
petri nets term description 
data flow graphs graph grammar gg df case study designed graph grammar generates data flow graphs 
effect different planar embeddings algorithm 
graph grammar algorithms gg variants layout algorithms graph grammars implemented 
algorithms graph grammar information graph structure 
graph grammars natural extensions string grammars graphs 
enrich graph hierarchy 
implementation parser generates derivation tree user applies derivation rules interactively 
positive side structure graph identified reflected drawing suitable graph grammar 
negative side parser high runtime need suitable graph grammar 
graph classes described graph grammar 
summary tables show various graphs drawn general planar drawing algorithms 
restricted examples planar graphs nonplanar graphs drawn fd fd fr dag algorithms 
experience drawings nonplanar graphs similar appearance crossings 
stimulates initial planarization step 
table gives overview layout algorithms currently implemented graphed 
term connected means connected undirected graphs weakly connected directed graphs graph theoretic definitions see 
straight line polyline bends describe style edges 
personal rating schema uses stars quality drawing lowest highest rating 
purely viewing drawings 
incorporated judgements researchers graduate students computer science university passau working frequently graphed 
experiments learned external factors large influence graph 
example different planar embeddings produce different drawings 
complex effects responsible variations 
case quality drawing varies wide range 
effect different planar embeddings pcs algorithm 
evaluation publications graph drawing generally include examples algorithms 
reports graph drawing systems literature 
difficult comparison data systems support algorithm 
today common basis 
need measure geometric properties layout collect statistical data 
need generally accepted benchmark 
statistics provide objective criteria 
earlier attempts comparison graph drawing algorithms broader collections examples 
tamassia di battista batini give survey graph layout criteria algorithms 
fruchterman reingold examples compare results drawings kamada kawai 
included examples database 
davidson harel provide examples compare algorithm layouts force directed algorithms 
provide statistics 
examples included database 
harel extend algorithms compare implementation pgs 
algorithms drawing planar graphs compared jones 
implementations pcs pgs 
di battista provide experimental comparison orthogonal graph drawing algorithms implemented diagram server 
diagram server system objectives comparable graphed 
approach layout evaluation similar 
measure formal criteria drawings evaluate rank statistical data collected drawings 
evaluation graphed tested algorithms sample graphs literature 
examples consist unstructured graphs graphs special structure circles trees grids special graph theoretic properties directed acyclic graphs planar graphs 
restricted connected graphs algorithms need connected graphs input 
ran algorithm applicable input graph 
graphed contains special modules purpose layout suite layout info 
layout suite runs applicable layout algorithms graphs directory 
layout info module collects statistical geometric data specific drawing 
detail data collected ffl number nodes edges graph 
sum taken measure size graph 
ffl area drawing width height density drawing defined area node 
ffl numbers bends crossings ffl minimum average maximum standard deviation edge lengths angles face sizes node distances recorded ratio maximum minimum value 
ffl distributions edge lengths angles face sizes node distances ffl runtime algorithm 
collected data algorithms petri gg gg df algorithms 
excluded need graphs special input format fit layout suite module 
separate program puts data readable form 
creates fact sheet applicable algorithm graph consists drawing set statistical data 
create kinds diagrams call short diagrams long diagrams 
short diagrams pairs data visualized value graph 
pairs size versus time size versus area fall category 
minimum average maximum pairs placed diagram better comparison 
long diagrams visualize data list values graph example edge lengths face sizes 
graph represented curve shows data distribution 
values normalized interval hide effects generated size graph area drawing 
identify global trends overlay curves particular algorithm 
complete set fact sheets diagrams available 
results experiments came edge length distributions shows distribution edge lengths 
line diagram shows edge length distribution single graph 
edges listed abscissa sorted size 
lengths edges taken relative longest edge graph plotted ordinate 
force directed drawings distribution different algorithms 
curves shaped means short edges medium sized edges long edges 
algorithms concave curves short edges long edges 
examples symmetric graphs fd fr algorithm 
note lobes drawn equally graph center 
heuristics run local global optimum 
curves force directed algorithms start higher values means ratio longest shortest edge smaller 
particular pgs produces short edges long edges 
experiments indicate ideal distribution start high value short medium long edges 
differences force directed variants clearly visible diagram 
smoother fd narrower distribution concentrated upper left corner diagram 
edge lengths shows minimum average maximum edge lengths graphs database 
diagrams point abscissa corresponds size graph 
minimum average maximum edge lengths shown ordinate 
force directed drawings ratio longest edge shortest edge smaller algorithms 
individual differences seen diagrams minimum average maximum edge lengths fd roughly stay level graphs graph sizes 
indicates smooth distribution nodes seen examples 
fd fr algorithm increase size graph reflected smooth distribution nodes drawings 
ratio longest shortest edge roughly stays level algorithms 
algorithms ratio longest shortest edge higher increases rapidly size graph 
consistent observation algorithms produce uniform distribution nodes edges 
scales ordinates provide additional information 
show fd produces shortest edges followed fd fr 
algorithms produce longer longest edges 
due implementation shortest edges force directed algorithms length standard grid size 
structure examples displaying structure graph important 
example force directed drawing algorithms stress symmetric isomorphic substructures reflect see tables 
dag fd fd fr tree drawn various algorithms tree structure best displayed algorithm 
dag algorithm partially reflects graph tree structure algorithm recognize tree structure perform 
hand force directed algorithms perform quite trees stress isomorphic symmetric substructures cost higher runtime distortions large trees 
petri algorithm draws nets nicely algorithms fail 
graph grammar algorithms know hierarchical structure graph graph grammar 
able reflect structure drawing 
shows drawing data flow graph generated gg df algorithm compares drawings generated dag fd fr algorithms 
clearly gg df displays structure data flow 
shows drawing binary tree drawn graph grammar approach gg compares drawing dag 
shows series parallel graphs drawn gg fd fr dag 
intrinsic structure drawing displayed best algorithms best knowledge structure 
orthogonal edges algorithm produces best drawings planar graphs 
shows due bends 
additionally horizontal vertical edges improve quality drawing lot 
algorithm produces drawings horizontal vertical edge segments parallel edge segments separated grid sema sema sema petri dag fd fr petri net drawn various algorithms 
petri algorithm recognize petri net structure appropriate way 
unit 
edges easier distinguish pg algorithm produce arbitrary slopes narrow parallel edges 
visibility layouts edges drawn straight vertical lines nodes stretched horizontally confirm experience 
interesting see algorithm uses larger area longer longest edge 
strongly suggests formal criteria guarantee layout 
grid grid help produce clean drawing algorithm 
clearly source problems pgs algorithm 
hand force directed algorithms show grid needed results 
straight line edges force directed algorithms perform straight line edges 
obviously easily follow straight line edges eyes 
hand straight line edges drawback seen pcs pgs algorithms 
believe straight line edges cause trouble placement nodes restricted criteria 
example combinations planarity grid straight line edges pgs planarity convex faces straight line edges pcs problematic bundles 
means polishing needed 
furthermore drawings generated algorithm show straight line edges necessary nice layout see 
bends easily tolerable 
crossings comparison dag approach algorithms planar layouts tables evident crossings avoided 
force directed algorithms produce crossings dag catch readers eye immediately 
area pcs pgs algorithms area consumption drawing usually critical algorithms 
users prefer small area criteria important 
stated algorithm consumes area pg algorithm users prefer drawings 
experience reasonable distribution nodes edges usually leads acceptable area consumption 
dx dx dx dx greater plus div gg df dx greater fd fr dx dx dx dx greater plus div dag data flow graph drawn various algorithms 
note gg df preserves hierarchical structure program 
time runtime layout algorithms classified categories slow slow medium fast fast 
note approximate descriptions actual times heavily depend external issues implementation details operating system cpu speed 
slow gg means algorithm usually runs minutes hours graphs size 
slow fd fd fr means algorithm runs seconds minutes graphs size 
running time grows quickly larger graphs 
medium dag means algorithm runs seconds tens seconds graphs size 
time increases moderately size graph grows 
fast pg means algorithm responds instantaneously small graphs takes seconds examples 
fast pcs pgs petri gg means algorithm runs instantaneously examples 
graph grammar drawing approaches fast interactively derivation step time 
need parse graph slow 
optimization generally observed exact optimization necessary 
algorithm draws graphs larger area pg gg dag binary tree drawn gg dag algorithms gg dag fd fr series parallel graph drawn gg dag fd fr algorithms 
algorithm larger longest edge 
criteria exact area minimization take long np complete 
experience balanced layout extreme values generally better minimized maximized solution 
example force directed algorithms draw planar graphs nearly convex inner faces generally nicer pcs algorithm 
distribution edge lengths evenly balanced criteria 
ranking experiments actual ranking layout criteria follows 
distribute nodes uniform fashion 

display intrinsic structure graph 

display symmetric isomorph substructures graph 

edge crossings draw graph graph planar 

bends draw graph 
pg visibility drawing planar drawings algorithms bends pg bends 
right visibility drawing graph nodes stretched horizontal bars 

place nodes bends grid 
motivation highest rank uniform distribution comes experiments algorithms fd fr fd 
profit smooth distribution nodes edges 
guarantees parallel edges separated grid unit gives drawing clean appearance 
hand pcs pgs produce drawings uneven distribution node clustering 
displaying structure clearly point see petri gg df algorithms 
success fd fd fr tightly connected ability stress symmetric isomorphic substructures 
choose crossings bends pg algorithm usually performs better dag algorithm graph 
produces crossings planar graphs results worse layout 
grids importance help algorithms dag produce clean drawing algorithms fd fr fd perform grid 
layout algorithms ongoing challenge theoretical computer scientists designers user interfaces 
graphed system able compare different algorithms study advantages disadvantages 
conclude experiments traditional layout criteria ranking change algorithms revised 
important issue development flexible application oriented layout algorithms 
current algorithms probably exception dot diagram server systems offer flexibility 
adapted specific needs structures display 
data flow petri net experiments clearly show benefit approaches 
techniques graph grammars declarative graph drawing needed extend old paradigms 
graphed layout algorithms refined directions 
plans include dynamic algorithms application layout algorithms real world structures extending statistics 
referees brandenburg peter eades brendan madden fruitful comments discussions helped improve 
numerous people contributed build graphed evaluate layout algorithms 
biedl kant better heuristic orthogonal graph drawings 
proceedings nd annual european symposium algorithms esa lecture notes computer science pp 

brandenburg himsolt designing dataflow graphs graph grammars 
technical report mip universitat passau 
chiba drawing planar graphs nicely 
acta informatica pp 

chrobak payne linear time algorithm drawing planar graph grid 
technical report ucr cs department mathematics computer science univ california riverside 
cruz garg drawing graphs example efficiently trees planar acyclic digraphs 
tamassia tollis editors graph drawing lecture notes computer science pp 
davidson harel drawing graphs nicely simulated annealing 
technical report department applied mathematics computer science weizmann institute science rehovot israel 
di battista eades tamassia tollis algorithms drawing graphs annotated bibliography 
computational geometry theory applications pp 

di battista garg tamassia experimental comparison graph drawing algorithms 
proceedings th annual acm symposium computational geometry appear 
di battista diagram server 
journal visual languages computation issue 
di battista tamassia tollis area requirement symmetry display planar upward drawings 
discrete computational geometry pp 

peter eades heuristic graph drawing 
congressus numerantium pp 

eades lin integration declarative approaches layout creation 
tamassia tollis editors graph drawing lecture notes computer science pp 
eades sugiyama draw directed graph 
journal information processing pp 

graph algorithms 
computer science press md ehrig nagl rosenfeld rozenberg editors graph grammars application computer science lecture notes computer science 
ehrig kreowski rozenberg editors graph grammars application computer science lecture notes computer science 
de pach pollack draw planar graph grid 
combinatorica pp 

fruchterman reingold graph drawing placement 
software practice experience pp 

gansner koutsofios north vo technique drawing directed graphs 
ieee transactions software engineering pp 

graphed related documents available anonymous ftp site ftp uni passau de pub local graphed 
harel randomized graph drawing heavy duty preprocessing 
journal visual languages computation issue 
layout von 
dissertation universitat passau 
himsolt programmer manual 
universitat passau 
himsolt und implementierung von 
dissertation 
verlag shaker aachen 
himsolt graphed graphical platform implementation graph algorithms 
tamassia tollis editors graph drawing lecture notes computer science pp 

jones eades moran ward tamassia note planar graph drawing algorithms 
technical report department computer science university queensland 
maximum planar subgraphs nice embeddings layout tools 
algorithmica appear 
kamada kawai algorithm drawing general undirected graphs 
information processing letters pp 

marks shieber automating layout network diagrams specified visual organization 
ieee transactions systems man cybernetics pp 

maximum planar subgraph problem 
dissertation universit 
reingold drawing trees 
ieee transactions software engineering pp 

embedding planar graphs grid 
proc 
st symposium discrete algorithms pp 

ein system zur von und 
diplomarbeit universitat passau 
sugiyama toda methods visual understanding hierarchical systems 
ieee transactions systems man cybernetics pp 

tamassia embedding graph grid minimum number bends 
siam journal computing pp 

tamassia di battista batini automatic graph drawing readability diagrams 
ieee transactions systems man cybernetics pp 

tamassia tollis planar grid embedding linear time 
ieee transactions circuits systems pp 

walker node positioning algorithm general trees 
software practice experience pp 

woods drawing planar graphs 
phd thesis stanford university 
algorithm criteria restrictions speed drawing fd force directed connected slow 
straight line fd fr force directed connected slow 
straight line dag hierarchy medium 
polyline grid planar planar medium 
orthogonal degree grid connected polyline bends minimization pg planar planar fast 
polyline connected grid pcs planar planar fast convex faces connected 
straight line specific pgs planar planar fast straight line grid tree tree fast 
straight line grid petri petri net agents fast 
gg graph grammars derivation fast incremental various gg graph grammars parsed slow parser graph grammar various gg df graph grammars input medium derivation speed rating slow slow medium fast fast see text 
star rating lowest rating 
highest rating 
parser slow due inherently high complexity 
drawing component fast 
prototype implementation available 
table layout algorithms graphed fd fd fr dag pg pcs pgs table examples layout algorithms 
column shows graph 
fd fd fr dag pg pcs pgs table layout examples edge length normalized edges sorted length fd fr algorithm edge length normalized edges sorted length fd algorithm edge length normalized edges sorted length dag algorithm edge length normalized edges sorted length algorithm edge length normalized edges sorted length pg edge length normalized edges sorted length pcs algorithm edge length normalized edges sorted length pgs algorithm edge length normalized edges sorted length algorithm edge length distributions 
edge lengths size fd fr algorithm edge lengths size fd algorithm edge lengths size dag algorithm edge lengths size algorithm edge lengths size pg edge lengths size pcs algorithm edge lengths size pgs algorithm edge lengths size algorithm minimum average maximum edge lengths 
