efficient routing algorithms shun yan cheung kumar dept math 
comp 
sc 
graduate school management emory university cornell university atlanta ga ithaca ny study problem generalization multicasting 
multicasting consists sending message select group nodes system nodes sends message nodes 
need communicate arbitrary subset predefined set arises distributed applications distributed synchronization updating replicated resource 
straightforward solutions send message individual members time members responded multicasting deliver message members 
solution excessive delay cause congestion nodes network 
solutions proposed minimum cost tree spanning subset 
choosing appropriate set nodes communications cost minimized 
heuristics find low cost solutions routing problem evaluate heuristics comparing solutions exact solutions obtained enumerating solution space 
heuristic solutions compared random solutions quorum sites selected random problem treated multicast 
results tests show heuristics compare favorably optimal solutions random solutions perform poorly comparison heuristics 
multicast communication popular increasing number distributed applications group communication paradigm 
multicasting delivers message source subset nodes multicast destinations network 
typically distributed application consists set processes forming distributed process group 
processes cooperate perform task time time process may author supported part university research committee emory university 
need communicate local data state information processes 
information sent point multipoint messages multicasting means deliver messages 
point multipoint communication achieved sending individual point point messages destination node policy clearly naive message travel times certain link 
communications cost reduced considerably constructing routing tree spans destination nodes sending message links tree 
applications multicasting improve performance finding idle computers local area network implementing reliable ordered group communication sending multi media messages large number subscribers accessing replicated data 
study generalization multicasting message needs delivered subset multicast destinations 
type communication requirement arises number distributed applications 
example processes need communicate subset multicast destinations distributed synchronization problem processes distributed process group want coordinate execution ensure correctness 
example processes want update shared data item distributed database system update operations allowed proceed parallel 
distributed synchronization protocols developed achieve proper synchronization protocols failure tolerant single point failures halt entire system 
increasingly popular class synchronization methods quorum consensus representative voting 
voting member process group assigned vote critical operations require synchronization obtain quorum proceeding 
group members provide permission operation proceed completion called quorum group conflicting operations intersecting quorum groups guarantee synchronization 
database update example process group consists database manager processes synchronization update operations guaranteed requiring update operations obtain permission majority database managers 
majority groups database manager process common process detect potential access conflicts prevent processes updating data simultaneously 
example set database manager processes fm write operation obtain permission processes fm allowed update data 
clearly groups contain process common common database manager process different groups detect potential access conflicts 
synchronization procedure failure tolerant system able perform synchronization long database manager processes operational 
need communicate subset predefined set arises management replicated data 
copies data files stored subset nodes network physically multiple copies file exist behave logically single copy system 
replica control protocols developed synchronize read write accesses replicated files replicas behave logically single copy 
read write operations access replicated files synchronized obtaining permissions nodes constitute read write quorum group respectively read write quorum groups subsets nodes residence set consisting nodes maintain copy file 
read write quorum group different write quorum groups intersect set copies remain synchronization 
clearly collecting read write quorum require communicating subset predefined residence set 
communication subset residence set required write operation 
read operation obtain current copy file locating node stores current copy sending read request node 
contrast write operation updates copies write quorum group 
communication cost affected varying sizes read write quorums read operations predominant read quorum usually smaller write quorum 
general quorum group consists members predefined residence set size 
user communicate quorum group sending message nodes time positive replies received 
alternatively user multicast message nodes wait responses received responses discarded 
methods serious drawbacks causes excessive delay nodes communication network members process message reply 
better solution routing tree spanning source node quorum group send messages quorum group multicasting links tree 
term type communication 
difference multicast routing subtle set nodes spanned multicast routing tree known priori contrast quorum group spanned routing tree known advance 
clearly routing problem generalization multicast routing problem ways selecting nodes group nodes 
different trees spanning source node quorum group optimum routing tree minimum communications cost determined sum cost links routing tree 
call problem finding optimum routing tree routing problem 
multicast routing problem known minimum cost steiner tree problem np complete efficient optimal solutions routing problem 
naive method constructing routing tree pick nodes random minimum cost steiner tree heuristic construct tree spanning subset nodes 
cost solutions produced approach excessively high 
develop number efficient heuristics finding minimum cost routing trees compare performance 
heuristics centralized assume source node information network topology costs links 
describe discuss heuristics 
heuristic minimal cost path heuristic mph proposed previously steiner tree problem serves benchmark comparison purposes 
second heuristic improvement mph called improved minimum path imp heuristic 
third heuristic modified average distance mad heuristic kruskal algorithm minimum spanning tree problem 
heuristics tested experiments networks nodes evaluated comparing best costs produced optimal costs obtained branch bound algorithm 
probabilistic approach 
node trying assemble quorum sends message nodes includes probability value message probability receiving node respond 
adjusting value likelihood response improved keeping communications overhead low 
scalability improved congestion minimized different set nodes respond message different times 
organized follows 
section describe system model routing tree problem 
sections different heuristics finding minimum cost routing trees 
results experimental tests example networks section conclude section 
model distributed system modeled graph denote set nodes set interconnecting links respectively 
links assumed bidirectional link nodes assume network messages sent packets cost sending packet ij ji 
subset designated residence set assume sizes equal respectively 
size quorum denoted 
routing problem consists finding minimum cost tree spanning source node nodes subgraph satisfies conditions 
fsg 

connected 

cost ij minimum subgraphs properties 
loss generality assume node reasonable assume participate quorum problem restated gamma members set gamma fsg 
having described model turn discuss various heuristic solutions solving 
minimum cost path heuristic heuristic adapted minimum cost path mph heuristic technique finding near optimal steiner minimum trees 
algorithm listed 
nodes network numbered loss generality nodes source node nodes containing copies nodes set numbered 
set initialized 
algorithm builds tree adding nodes time stops contains elements step examines nodes belong selects nearest set nodes nodes shortest path included edges path added algorithm mph nodes source node nodes copies subgraph oe 
best cost copies copies find gamma cu min gammav ij min cost path min cost path copies copies cost ij print cost mph minimum cost path heuristic shown mph heuristic produces steiner trees cost theta gamma cost steiner minimum tree 
show example bound placed heuristic problem 
sample network consider instance network 
nodes numbered node member cost links ffl ff ff 
ffl 
spanning tree obtained mph heuristic consists links gamma gamma gamma see cost equal gamma ff gamma gamma ffl gamma gamma ff 
minimum cost tree see cost ff spanning tree obtained algorithm optimal spanning tree gamma ff gamma gamma ffl ff gamma majority consensus protocol mph obtains routing tree cost 
example inspired develop new heuristic overcomes problem 
turn describe section 
improved minimum cost path heuristic section describes improved minimum cost path heuristic imp performs better mph heuristic 
algorithm listed 
loss generality nodes set initialized 
algorithm usually go iterations 
iteration identical algorithm mph previous section nodes set added time tree constructed copies gathered 
subsequent iteration re initializing selection node forced follows 
nodes included far solution select nearest node add 
algorithm restarted initial solution proceeds add nodes exactly copies assembled 
set keeps track nodes appeared solution 
initialized fg start heuristic additions new node included solution 
set gamma contains nodes residence set appeared previous solution imp heuristic try steiner tree solutions long set gamma empty 
iteration solution compared best solution far cost new solution lower best 
new iteration started set gamma empty algorithm prints best solution terminates 
iteration imp heuristic takes time execute 
imp heuristic guaranteed terminate gammaq fewer iterations worst case complexity 
algorithm imp nodes source node nodes copies fg best cost gamma oe oe 
find node gamma min gammad min cost path ug min cost path ug fug copies copies find gamma cu min gammad ij min cost path min cost path fu copies copies cost ij cost best cost best cost cost best tree print best tree best cost imp improved minimum cost path heuristic modified average distance mad heuristic section describes heuristic similar average distance heuristic steiner tree problem described 
average distance heuristic mad heuristic inspired kruskal minimum spanning tree algorithm 
basic idea kruskal algorithm examine step pairs nodes joining produce cycle select shortest distance pair 
repeated nodes belong tree 
resulting tree minimum spanning tree 
heuristic mad listed nodes 
stages mad heuristic 
stage exploits main idea kruskal algorithm 
sets initialized fg respectively 
set contains selected nodes set contains nodes members step examine pairs nodes gamma pairs element pair lies gamma shortest distance pair identified nodes shortest path added added difference contains nodes set contain nodes lie shortest path nodes step repeated set contains members second stage reinitialized nodes connected source node applying mph heuristic section 
complexity mad heuristic 
experimental results tested various heuristics proposed extensively comparing solutions optimal solution various node networks network connectivity quorum sizes varied 
optimal solution branch bound algorithm listed 
algorithm tries improve solution cost mincost heuristic exhaustively searching routing trees cost lower mincost 
branch bound algorithm extremely computation intensive takes days sun sparcstation find optimal solution 
test networks generated follows 
number nodes cases links generated randomly subject connectivity parameter 
connectivity defined average number direct links node nodes network 
connectivity parameter kept levels low high 
links assigned cost chosen randomly uniform distribution 
size residence set kept settings low medium high 
corresponding quorum sizes determined majority case respectively 
algorithm mad nodes source node nodes copies fg copies copies find gamma cu min gammav ij copies copies copies copies min cost path fu oe 
oe find cu min ij min cost path min cost path gamma fu cost ij print cost mad modified average distance heuristic results sets experiments pairing connectivity settings fl hg residence set fl hg sizes 
experiments denoted ll lm lh hl hm hh 
instance hl denotes experiment networks high connectivity low size residence set 
experiment repeated different randomly generated networks average worst case results summarized tables 
table shows average cost routing trees heuristics averaged experiments set comparison average cost optimal routing trees 
type experiment random networks generated minimum cost routing trees brute force enumeration solution space opt mph heuristic imp heuristic mad heuristic 
fifth column table shows average cost routing trees ob mincost cost best heuristic solution tree oe oe print mincost procedure return mincost tree tree tree reaches quorum group mincost tree tree tree branch bound procedure problem tained randomly picking nodes finding steiner minimum tree algorithm connects source node set nodes 
minimize statistical error random selection nodes repeated times averages reported 
table shows parentheses percentage difference cost heuristics optimal cost 
observations table 
see random heuristic performs poorly comparison heuristics especially number nodes increases 
number nodes random heuristic sub optimal number nodes increases suboptimality grows nearly 
total number nodes increases combinations ways set nodes selected random 
hand suboptimality heuristics remains consistently increase number nodes 
random algorithm clearly unsuitable 
heuristics imp method performs considerably better mph cases ll hl lm hh shows improvement proposed imp useful 
average cost solutions exp opt mph imp mad random ll hl lm hm lh hh table comparison optimal solution heuristic solutions average numbers experiments proportion exact solutions exp mph imp mad random ll hl lm hm lh hh maximum relative error exp mph imp mad random ll hl lm hm lh hh table proportion exact solutions maximum relative error experiments produced heuristics sets experiments average performance imp best sets mad best set hh negligible margin 
noticed sets average cost imp optimal mad heuristic optimal 
table gives proportion exact solutions maximum relative error produced various heuristics set experiments 
imp mad produce similar maximum relative errors network connectivity low imp clearly superior cases connectivity high 
remarkably hl set experiments degree connectivity high quorum size low imp algorithm finds optimum tree networks 
experiment conducted compare mph imp mad heuristics extensively 
repeated sets experiments ll lm lh hl hm hh randomly generated networks mph imp mad heuristics determine minimum cost routing trees network 
cost solutions averaged summarized table 
experiments demonstrate imp best heuristic 
avg 
node average cost solutions degree mph imp mad table comparing mph imp mad heuristics average values experiments average cost solutions ffi opt mph imp mad random table effect quorum size average error copies average numbers experiments 
ffi average node degree 
turn study effect varying quorum size quality solutions produced heuristics 
recall smaller quorum size improve performance read operations usually predominant write operations database system environments 
systems set experiments fall hl hh categories size residence set network connectivity parameter alternately low high 
type system construct routing trees quorum size equal 
results averaged sets experiments tables 
results show quality solution produced imp heuristic relative optimal improves quorum smaller 
hand quality solutions produced mph mad heuristic worsens quorum exact solutions ffi mph imp mad random maximum relative error ffi mph imp mad random table effect quorum size proportion exact solutions maximum relative error experiments copies 
ffi average node degree 
comes smaller 
read operations predominant read quorum size small majority especially important construct cost efficient solutions quorum sizes 
results tables substantiate imp heuristic best method 
concluding remarks studied problem consists finding cost spanning tree send messages designated nodes node network 
problem arises frequently synchronization distributed processing systems quorum assembled reach consensus 
problem generalization multicast harder multicast problem studied extensively received surprisingly little attention 
multicast problem treated steiner minimum tree smt problem solved heuristics smt 
heuristics problem best set sites known priori selecting random produces poor results 
approximate solution methods finding trees proposed minimum cost path mph heuristic improved minimum path imp heuristic modified average distance mad heuristic 
heuristics described performance extensively evaluated comparing solutions optimal solutions node networks low high connectivity 
experiments size residence set quorum sizes varied wide range 
performance heuristics contrasted naive heuristic choice set nodes participate quorum random steiner tree constructed connect set node originated message 
experimental results showed heuristics proposed considerably outperform naive heuristic heuristics imp heuristic best 
imp heuristic suboptimal average worst case 
experimental testing substantial results encouraging research necessary establish theoretical bounds heuristics 
cheriton zwaenepoel distributed process groups kernel acm transactions computer systems vol 
pp 
may 
frank bernstein multicast communication network computers ieee software vol 
pp 
may 
dalal metcalfe reverse path forwarding broadcast packets communications acm vol 
pp 
dec 
theimer finding idle machines workstation distributed system th international conference distributed computing systems pp 
ieee communications society june 
garcia molina ordered reliable multicast communication acm transactions computer systems vol 
pp 
aug 
pasquale polyzos multicasting multimedia applications proceedings infocom pp 
ieee computer society 
wolfson milo multicast policy relationship replicated data placement acm transactions database systems vol 
pp 
march 
garcia molina barbara assign votes distributed system journal acm vol 
pp 

gifford weighted voting replicated data proceedings th symposium operating systems pp 
acm 
ahamad ammar cheung multi dimensional voting acm transactions computer systems vol 
pp 
nov 

paris voting witnesses consistency scheme replicated files proceedings th international conference distributed computing systems pp 
ieee 
jajodia dynamic voting algorithms maintaining consistency replicated database acm transactions database systems vol 
pp 

el abbadi toueg maintaining availability partitioned replicated databases proceedings symposium principles database systems pods pp 
acm 
kumar performance analysis hierarchical quorum consensus algorithm replicated objects proceedings th international conference distributed computing systems pp 
ieee 
cheung ammar ahamad grid protocol high performance scheme maintaining replicated data ieee transactions knowledge data engineering vol 
pp 
dec 
kumar cheung hierarchical grid protocol information processing letters vol 
pp 
dec 
winter steiner problem networks survey networks vol 
pp 

kruskal shortest spanning tree graph travelling salesman problem proc 
american math 
society vol 
pp 

ammar probabilistic multicast generalizing multicast paradigm improve scalability tech 
rep git cc georgia institute technology atlanta ga 
takahashi matsuyama approximate solution steiner problem graphs math 
vol 
pp 

smith computation nearly minimum steiner trees graphs international journal mathematical education science technology vol 
pp 

