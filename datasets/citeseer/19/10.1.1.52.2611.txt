partial approach problem deadlocks processes resources fernando departamento de inform atica ia de sistemas centro polit superior universidad de zaragoza mar ia de luna zaragoza spain mail es modeling control manufacturing systems aims obtain system run automatic way 
means software charge monitoring control system able deal set problematic situations system failures system deadlocks overflow storing facilities 
going concentrate previous problems deadlock problem 
deadlock problems usual concurrent system execution process correct competition set processes set resources give rise deadlocks 
problem common environments processes share resources communicate messages databases operating systems manufacturing systems focuses deadlock problem class systems appears flexible manufacturing systems fms environments 
going identify class nets appears frequently environment class called es pr characterize deadlock problems related structural elements petri net model 
characterization order establish control policy deadlock prevention 
class nets results obtained generalizes results previous ecm shows way improve ones tm 
keywords deadlock prevention flexible manufacturing systems petri nets software design concurrent systems deal satisfaction conditions behavior 
requirements absence deadlocks system able ensure production order accomplished sv vn 
research studied problem concurrent systems set sequential processes compete set shared resources 
kind systems appear modeling fms 
idea process comes try represent fact different types parts processed different processing sequences 
order process type parts set resources needed robots agvs machines tools 
different types parts usually processed different sequences steps need common resources 
set concurrent processes share set resources 
kind problems hard manage formal tools help represent demonstrate properties system 
models deal kind problems petri nets mur chosen 
petri net models widely fms environment vn dhp px 
terms petri nets ability system finish production orders seen study absence deadlocks 
deal problem different approaches usually adopted 
deadlock recovery deadlock prevention avoidance approach fits prevention category 
model system constructed proposed method consists addition places control entry processes system order avoid dangerous situations 
previous ecm theory liveness deadlock freeness particular case systems developed set restrictions system 
resources taken copy time resource copies needed 
proposed policy implemented addition elements petri nets model places arcs optimal policies restrictive wear live models 
context say control policy optimal minimally restrictive 
organization rest follows section presents notation basic concepts properties petri nets 
section class nets interested 
section policy section done 
notation basic concepts assume reader familiar basic petri nets concepts 
instance mur 
order selfcontained possible section introduces compact way set definitions 
petri nets petri net place transition net tuple hp non empty disjoint sets elements called places transitions 
generic way elements belonging called nodes 
set thetat thetap flow relation say arc weight multiplicity 
ordinary nets thetat thetap 
net hp node ffl fy pre set ffl fy post set notation extended set nodes follows ffl ffl ffl ffl marking mapping gamma 
general multi set notation markings talking set places 
pair hn net initial marking called marked petri net place transition system 
transition enabled marking iff ffl fact denoted ti fired usual way gives new marking denoted tim marking reachable marking iff exists firing sequence oe im im gamma im denoted set oe jx denote projection firing sequence oe respect set set markings reachable denoted 
petri net self loop free iff 
self loop free petri net hp alternatively represented hp ci net flow matrix theta integer matrix gamma gamma gamma 
submatrix rows columns correspond places transitions path petri net hp sequence nodes ffl gamma 
path simple iff circuit simple path structural objects properties marked petri net set places structural siphon iff ffl ffl structural trap iff ffl ffl marked petri net hn deadlock free iff ft tig 
transition live iff ti 
marked net live iff transition live 
say transition dead reachable marking iff reachable marking enables notice transition live iff dead reachable marking 
natural matrix right left natural called respectively 
called minimal support strict superset support greatest common divisor elements 
notations sets sets indexed vector 
denote ajb indexed vector defined follows ajb 
particular case indexed unit vector denote ajb indexed vector defined follows ajb 
sets indexed vector 
denote set properties relating petri net behavior 
proposition com hn marked ordinary petri net 
reachable marking total deadlock occurs 
exists siphon 
ut going concentrate class nets wider class ordinary nets proper subset class generalized nets 
weights arcs belonging output transitions allowed greater ordinary weight arcs placed transition input arc proposition extends proposition considered restrictive class nets 
proposition hn marked generalized petri net theta 
reachable marking total deadlock occurs 
exists structural siphon 
ut proposition remembers important behavioral property siphon 
marking siphon empty reached markings reachable maintain siphon empty 
transition belonging output siphon able fired 
proposition hn marked generalized petri net theta 
siphon 

ut going describe section petri net subclass obtain modeling concurrent processes sharing resources 
class es pr nets 
stated previously devoted study class nets appears modeling flexible manufacturing systems 
introduce informal way means example new class nets 
intuitive approach 
wp wp layout fms parts going processed 
shows layout hypothetical fms cell composed robots moving parts machines 
machines different tools 
robot load parts conveyor machines unload parts machine conveyor 
machines tools 
robot load unload machines 
machines tools 
robot unload machine load exit conveyor load machine conveyor 
cell types parts processed process plans 
parts type arrive system conveyor leave conveyor 
processed machine 
needs take tool accomplish needs take tools 
part processed machine need tools process plan wp 
parts type arrive system conveyor leave conveyor 
need processed machine 
machine takes tools processing 
processed machine needs tools process plan wp 
going suppose machines process parts concurrently machines manage parts system tools tools tool 
robot hold single part time 
petri nets represent processing parts type net obtained composition pay little attention processing parts type 
processing sequence part type follows order processed part held robot loaded machine processed hold robot loads machine unloaded robot 
petri net sequence states part type stay processing system modeled places 
way token place models part type processed machine robot loaded part held robot waiting loaded machine 
notice order reach state sequence fired 
state place empty marking marking represents fact robot carrying part thing busy part 
firing released token modeling machine finished unloaded leaving copies tools respective places order processing parts 
fire arcs point need available space machine tools processing step part 
transition fires token put place representing robot finished accomplish new 
give formal definition es pr class 
extension ones bk hc jen sense process plans decisions allowed ones ecm jen way resources released 
es pr subclass class ws psr tm ws psr copies resource hold single processing step 
net belonging class composed set state machines models states reached type part 
state machines resources modeled monitors marking represents availability resources modeled 
resources shared state machines modeling processes need set common resources 
way marking system shows state cell marking state machine shows state parts type models marking place modeling resources represents available copies considered state 
definition es pr nets definition class models studied constructive way similar ecm tm 
definition simple sequential process ordinary petri net hp fp wi 

strongly connected state machine 

circuits contain place ut special place called idle state place 
place introduce system idea idle state state system working 
note marking place limits number total tokens allowed system 
note choosing adequate marking place implicit 
way type nets model open systems account fact 
addition place helps simplifying definition 
place introduces condition inevitability idle state system 
reaches deadlock situation firing sequence related token net carry token idle state place 
modeling point view represents set different processing sequences part follow system 
sense inevitability idle state place represents fact processing part finished 
consider places see set places petri net modeling processing parts type fp place transitions form net trivially strongly connected state machine circuit contains place 
places called state places 
different states configured state machines decisions allowed part choose different paths 
extended simple sequential processes resources es pr net defined uses resources states system idle 
class nets said intuitive process state need resources simultaneously represent resources model going add net new set places called pr resource places set arcs join new places transitions arcs model way resources hold released reach different processing states 
see fire transitions mark place places model resources lost tokens fire presence token places needed 
definition extended simple sequential process resources es pr generalized self loop free petri net hp fp pr wi 
subnet generated set fp 
pr fp 

ffl 
pr minimal frg ky ky ky 
ut net depicted pr fm ym ym yr yr yr yh yh yh yh 
order simplify notation going name fp minimal net fx denotes set defined fx ft kxk ffl note defined set class nets studying ffl unique place 
es pr 
circuit net 
induces sets net sets set nodes path transitions places respectively 
example net invariant induces set fx fp 
net circuit fx induces sets fx ft fx fp lemma te es pr ffl circuit net contain places pr set induces minimal net jt ffl reversely minimal net :10.1.1.52.2611
induced set fx defined previously circuit 
ut important induce invariant relations useful reasoning behaviour 
represent firing sequences change marking 
previous lemma see actions completing processing part 
look physical system modeled nets represents possible sequences steps part follow execution working plan 
example net models part working plan wp 
consequence set represents set processing sequences system 
cyclical behaviour reveal desirable property kind systems modeling related idea finishing parts processing consequence es pr denote ff circuit contain places pr write set minimal fx fg net depicted fx tp tp tp tp tp tp tp tp fx tq tq tq tq tq tq circuits fx fp tp tp tp tp fx fp tp tp tp tp 
introduce class initial markings going consider 
initial markings represent idle state system 
means initial marking places represent states modeling system activity activity carried 
initial marking represents maximal number parts type modeled embedded allowed concurrently processed system 
considering previous points initial state process activated resource 
consequence initial marking places pr corresponds capacity resources process parts 
notice natural assume capacity greater 
system defined 
impose initial marking minimal fired isolated rest system activating copy process 
remember represents processing sequence system 
sense impose sequences completed carried isolated rest sequences 
poor system design processing sequence executed isolated way 
initial markings verifying previous conditions called acceptable 
going write formal way 
definition es pr 
marking acceptable iff 

pr 
minimal fired sequentially 
ut acceptable initial markings considered 
going lemma points relation structural components acceptable initial markings es pr nets 
lemma te hn marked es pr minimal net fx induced circuit :10.1.1.52.2611
pr max transitions fx fired sequentially 
ut lemma point definition substituted pr max going es pr nets composed es pr shared resources 
modeled set process sequences es pr need represent interaction interaction restricted set common resources needed processes 
previously need formal definition way composition 
definition hp generalized petri nets 

composable fusion places iff pc 
net hp named composed net represented ffi ut definition easily extended nets sequential composition nets compose compose resulting third 
definition set indexes hp set generalized petri nets 
denote means fl net obtained follows card ffi fl nfi ut going definition es pr nets 
definition es pr composition set es pr shared resources 
ut talking es pr assume form fl set es pr composing 
net helpful introduce set indexes resource set indexes resource belongs corresponding net 
pr define set indexes resource fi pr example es pr composed es pr depicted figures set shared resources fr 
resource resource set 
definition establish acceptable marking shared resources 
shared resources ones card 
definition extends notion acceptable marking es pr new class nets 
definition hn fl hp pr acceptably marked es pr iff pr card max ut composition nets shared resources marking places common remains 
places common maximum initial marking place 
consider reasonable approach model working processes shows availability copies resource greater availability resource different plan indicates maximum number copies available system impose restriction working processes ones related resources 
speaking es pr going suppose initial marking acceptable 
properties es pr short section going show es pr 
lemma ffin es pr obtained composition es pr deltac 
pr pr pr pr deltac 
proof trivial way composition basic properties 
ut lemma generalized straightforward manner case composition number es pr 
example net depicted incidence matrix gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma structure matrix corresponds way composed subsystems constitute system 
seen set boxes meaning left shows flow relation nodes belonging parts type second shows flow relation parts type third corresponds flow relation nodes pr transitions es pr form system 
divided sub matrices correspond interaction resources notice resources shared subsystems corresponding row values different sub matrices resources row corresponding subsystem 
lemma helps see shared resources establishes takes account involved es pr nets 
lemma te ffi es pr obtained composition es pr :10.1.1.52.2611
pr pr minimal 
ut lemma extended composition number es pr 
lemma establishes ones composed net 
lemma te hn fl hp pr es pr set minimal es pr lemma states minimal siphon contain support minimal contain idle places :10.1.1.52.2611
serves describe dangerous siphon composition parts resources siphon process places siphon meaning adjective dangerous understood 
lemma es pr 
minimal siphon contain support pr 
ut liveness analysis es pr models 
section going show important behavioral properties es pr nets 
es pr nets particular case ones proposition class nets true total deadlock reached exists unmarked siphon 
previously definitions taken approach point view system going show definitions resource point view 
concept holders resource going set process places marking implies resource tokens initial marking 
definition holders resource hn marked es pr 
resource pr set holders resource defined ky 
ut going definition es pr subnets compose system 
holders resource subnet holders es pr index example net resource place fp fq 
going introduce technical lemmata help see existence unmarked siphon necessary sufficient condition net dead transition 
remembers transition fired 
direct consequence initial marking chosen 
proof uses idea system fire transitions subnet different transition system behave independent system 
lemma hn fl hp pr es pr exists oe oe im ti proof assume circuit contains induced 
acceptable marking lemma holds trivially remember lemmata 
ut lemma establishes firing sequence enables transition sequence firing transitions es pr different containing enables firing sequence enables transition sequence freezing tokens belong process types change behavior transition 
lemma hn fl hp pr marked es pr index es pr component 
exists firing sequence oe ti oe verifies oe im ti sketch proof oe oe lemma holds trivially 
assume oe oe 
remove transitions belonging oe removing constraints firing rest transitions 
marking idle state resource 
allow evolve resources evolved fire transitions oe belonging oe marking 
oe im ut prove dead transition initial marking reached 
lemma hn marked es pr dead transition 
proof oe firing sequence oe im suppose exists oe oe im lemma dead contradicts hypothesis 
ut lemmata characterize relation partial deadlock sense part system blocked total deadlock occurs es pr nets 
stated ecm property true general class petri nets 
lemma hn fl hp pr es pr 
dead transition exists subsets ae fp ffl set dead transitions 
proof consider set indexes 
possible conservativeness class nets 
note possible dead transition lemma 
denote ni 
ensure exists mh mh 
marking moving processes corresponding indexes considering state machine contains place net reaches marking verifies condition hypothesis contradiction lemma 
ut lemma shows exists dead transition set es pr reach initial marking 
remembering es pr represents type process means reach initial state 
interpret set deadlocked processes 
going introduce definition extended siphon composition es pr systems 
marked es pr siphon compose es pr extend siphon composed net just adding original holders resources siphon added es pr denoted sr notation resource places 
definition extended siphon hn fl hp pr marked es pr ae fl 
siphon define composed net ffi set es sr ut course definition extended natural way iterated composition es pr 
note definition extended sets natural way es es 
ut composing set es pr definition provides way extend sets places systems composed sets places system 
way act add resource siphon holders systems 
intuitive idea composed system ffl augmented transitions es pr 
close siphon need add new places 
conceptually simple way reach adding holders resources 
note obtained way need minimal 
example net set fp siphon extended siphon net follows sr fr sr fp es fp 
propositions show defined set siphon net 
going introduce proposition help check new defined set siphon composed net information subnets 
proposition te hp composable petri nets hp ffin net obtained composition nets :10.1.1.52.2611
siphon iff siphon 
ut proposition shows defined extended siphon siphon composed net 
proposition te hn fl hp pr marked es pr ae subnet obtained composition nets indexes siphon net :10.1.1.52.2611
es siphon net ut shown es pr siphon augment system adding new es pr able construct siphon augmented system going property demonstrate es pr dead transition reach marking empty siphon 
theorem hn es pr 
dead transition exists siphon 
sketch proof marking sets lemma 
net obtained composition subnets fn ig 
net drop tokens contained fp ig 
point net total deadlock exists siphon net marking 
proposition construct set siphon net siphon empty construction sns places tokens 
ut control policy deadlock prevention deadlock problems desirable automated systems consequence research field fms models devoted problem 
deadlock situations reached system able characterize important impose restrictions order system avoid deadlock prevention avoidance problem recover undesired situations deadlock recovery problem 
attention going concentrate deadlock prevention avoidance problem 
proved previous sections class systems dealing deadlock problems characterized empty 
control policy deadlock prevention easily established constraint system evolutions way siphon emptied 
order liveness characterization establish control policy take account kinds markings sketches reachability graph es pr 
class markings contains markings reachable 
markings involved deadlock problems shadowed zone 
second class composed contain empty siphon 
easily eliminated controlling system way siphon emptied depicted black dots outside shadowed zone 
third class composed markings empty marking empty siphon reached inevitable way depicted white dots 
markings problematic ones 
optimal policy optimal means allows concurrency possible maintaining system liveness avoid markings type type 
going show liveness characterization order obtain live model 
unfortunately going cut markings type markings type proposed control policy optimal 
empty siphon grey zone reached 
necessary control siphon net 
minimal siphon support insufficiently marked chosen acceptable initial marking 
consequence state problematic minimal support 
illustrate definitions results going simple es pr depicted 
idle places participate dangerous depicted shake simplicity 
net minimal fp fq fq fp plus trivial ones involving idle place 
definitions going define set places responsible 
definition places stole tokens siphon hn fl hp pr marked es pr siphon define set places stole tokens th fp sr sg ut set represents places net resources siphon belong 
places ones contribute empty siphon 
net example th fp th fp th fq 
lemma states tokens places stole tokens siphon siphon tokens initial marking 
proof fact places th corresponding resources tokens initial marking 
resources part siphon lemma holds 
ut lemma te hn fl hp pr marked es pr siphon th :10.1.1.52.2611
avoid undesired states going propose control policy consisting locking entry processes zones previous ones problems arise 
hn fl siphon net 
going denote fi set indexes corresponding es pr resources example nets siphon assuming es pr left part second 
es pr define set dangerous net fs minimal siphon support net got minimal fp fp fp plus trivial ones involving idle places depicted 
consequence support fs 
definition presents concept need resources place respect siphon sum weights invariants containing resources siphon place 
weight represents resource number tokens disappeared resource place place marked 
number gives idea tokens lost siphon token reaches place 
table pnr values example 
nr pnr nr pnr nr pnr definition hn fl hp pr es pr pr associated 
sr minimal siphon need resources respect siphon defined nr 
ut table see values parameter net 
definition presents subpath circuit 
useful part circuit considered token marking place follow complete circuit reach idle place 
definition hn fl hp pr marked es pr minimal fx induced circuit 
define path suc fx pt sub path fx begins place ut previous definitions going define potential need resources place respect siphon maximum need resources places path idle state 
number gives idea maximum quantity tokens stolen siphon token want reach corresponding idle place 
definition hn fl hp pr marked es pr sr minimal siphon potential need resources place respect siphon defined pnr max suc nr ut example values nr pnr seen table 
lemma hn fl hp pr marked es pr 
minimal fx induced circuit 
fx pnr pnr 
proof pnr defined maximum paths paths pnr pnr 
ut order control system going add new place dangerous siphon initial marking ensuring state leads inevitable way deadlock reached 
places added system evolution controlled follows 
consider dangerous siphon assume new process activated firing transition ffl execution process transition belonging ffl th fired firing minimal contains transition support 
means execution decrease marking siphon aim added place associated siphon ensure set active processes empty siphon 
going add initial petri net place arcs dangerous siphon 
pc set control places going add 
set related set means bijection pc gamma 
definition going introduce controlled petri net model corresponding es pr 
definition marked es pr 
net hn hp pr pc controlled system hn hp pr defined follows 
pc exists bijection pc gamma 

ffl pr ffl ffl pc pc pnr ffl 
ffl np ffl pc pc pnr ffl pc gamma pnr ffl pc 

ffl pr ffl pc gamma 
ut note notice defined 
seen consequence definition marking es pr siphon net 
places need add control system ones depicted 
example place ps arc tp place potential need resources 
tp arc ps weight place pnr decreases unit 
arc weight transition shows pnr goes 
arc weight reflects transition need resources decreases 
subnet models processing type pnr need put arc place ps transition tq weight 
arcs weights equal show tokens enter siphon transitions tq tq variation need resources siphon exists transitions reached 
tq tq tq tq tp tp tp tp tp ps ps ps tq tq tq tq tp tp tp tp tp original net controlled resources 
going prove policy correct sense system live 
lemma indicates fired new model 
proof left easy see components belonging added places true way pnr constructed way define control policy 
lemma te hn fl hp pr marked es pr transitions fx fired sequentially :10.1.1.52.2611
easy see components belonging added places true way pnr constructed way define control policy 
ut lemma shows firing sequences controlled system firing sequences original 
lemma hn controlled system es pr system hn oe firing sequence hn oe firing sequence hn proof difference control places 
restrict firing sequences ut going show invariant relation control places introduce system 
show policy really controls system 
proof done induction length firing sequences 
way controlled system control places marking represents number tokens enter selected parts system 
lemma te hn marked es pr hn controlled system defined :10.1.1.52.2611
pc defines invariant relation reachable markings pnr pc lemma shows siphon reach empty marking control policy 
lemma hn marked es pr hn controlled system defined 
proof suppose 
hs nr 

hs nr hs nr nr nr contradicts definition gamma ut proposition joins previously results prove obtained net live 
proposition hn fl hp pr marked es pr 
hn controlled net defined dead transition proof assume proof induction number tokens system idle state 
number 
account ffl proposition holds 
assume siphon initial net emptied exists np ffl im remember ffl implies pc ffl 
apply reasoning token generated firing np iterate procedure reach marking gamma 
induction proposition true 
ut conclude controlled system live 
focused study liveness property class systems appears modeling flexible manufacturing systems 
extends previous wider class systems 
approach drawbacks optimal states states leading deadlocks class nets model copy resource time approach computation minimal expensive 
solve drawbacks ideas investigated 
obtain better policies approaches studied select parts net control places supervise order reduce number states forbidden 
second line cut states contain unmarked way states original net previous states unmarked states empty controlled net 
iterative solution natural way deal kind problems 
order extend class nets concentrate main lines reducing restrictions way resources taken allowing processing sequences modeled general classes nets different state machines 
easily extended allow weighted arcs resource places transitions 
order weighted arcs simulated means ordinary arcs way sufficient conditions control initial net obtained 
promising research study ad hoc techniques obtain net 
acknowledgments authors grateful anonymous referees comments helped improve contents 
bk krogh 
deadlock avoidance flexible manufacturing systems concurrently competing process flows 
ieee transactions robotics automation december 
com 
deadlocks petri nets 
applied data research 

application petri nets manufacturing systems modeling control performance analysis 
ieee press 
dhp silva 
practice petri nets manufacturing 
chapman hall 
ecm mart 
petri net deadlock prevention policy flexible manufacturing systems 
ieee transactions robotics automation april 
hc fu hsieh shi ching chang 
dispatching driven deadlock avoidance controller synthesis flexible manufacturing systems 
ieee transactions robotics automation april 
jen 
petri net synthesis theory modeling flexible manufacturing systems 
ieee transactions systems man cybernetics part cybernetics april 
mur murata 
petri nets properties analysis applications 
proceedings ieee april 
px xie 
petri nets 
tool design management systems 
john wiley sons 
sv silva 
petri nets flexible manufacturing 
technical report rr dep 
ia el inform atica universidad de zaragoza 
te :10.1.1.52.2611
partial approach problem deadlocks processes resources 
technical report rr departamento de inform atica ia de sistemas universidad de zaragoza september 
tm mart 
extension liveness theory concurrent sequential processes competing shared resources 
proceedings ieee international conference systems man cybernetics 
intelligent systems st century pages vancouver british columbia canada october 
ieee systems man cybernetics society 
vn 
performance modeling automated systems 
prentice hall 
ke yi xing bao sheng hu hao chen 
deadlock avoidance policy petri net modeling flexible manufacturing systems shared resources 
ieee transactions automatic control february 
