reconfigurable processor architectures ian page oxford university computing laboratory parks road oxford ox qd submitted special issue microprocessors microsystems hardware software codesign particular application supported conventional microprocessor predetermined set functional units 
particularly true highly dynamic areas multimedia communications embedded systems 
suggest additional silicon provide hardware dynamically configured support application 
combining conventional microprocessor fpga reconfigurable logic chip commodity pricing maintained part effectively support wide range applications 
novel fpga architecture outlined particularly suitable style implementation 
keywords fpga computer architecture parallel processing embedded systems 
computer architecture lively relevant topic research development changed years history modern computers remained 
explores thesis radical changes set affect aspects computer architecture far reaching witnessed past half century 
force changes newly emerging technology dynamically reconfigurable hardware 
dynamically programmable gate array dpga chips today potent implementations hardware 
function changed milliseconds purely software control early embodiments truly general purpose hardware 
technology offers possibility architectures change operation support current application efficiently possible 
reconfigurable hardware components combination traditional processors deliver novel ways implementing applications 
fact combination processor reconfigurable hardware useful direct pointer reconfigurable hardware finds way inside processors radically changes nature ways design program 
great deal reported benefits obtained coupling microprocessors dynamically programmable gate array dpga components 
area reported modular system closely coupled bit microprocessor dpga described fuller details appearing 
demonstrated number applications running framework including pattern matching spell checking video compression decompression video target tracking 
success applications convinced applications run significantly faster modest amount reconfigurable hardware available host processor 
significant increases speed execution applications claimed despite fact circuitry implemented near fast dense achieved asics 
fast dense give significant support important applications especially asic development take long costly 
slightly non obvious factor favour 
easier design implement asics case time market new dpga shorter new commodity microprocessor asic 
means newly released dpga gives designer access technology date asic released exactly time 
believe key exploiting technological opportunity provision appropriate software tools 
believe closely coupled tomorrow microprocessors fact configured programmers writing compiling programs electronic engineers designing hardware 
crucial task remove differences hardware software design longer necessary maintain separate development teams hardware software components new system 
argue current paradigms hardware design simply inappropriate developing software paradigm computer programming fact quite suited task hardware design 
sketches number related ideas covers depth 
intended contribute discussion areas help develop taxonomy new class computing device 
processors integrated past responses increased availability silicon area provide additional functionality commodity microprocessor chips 
seen microprocessors grow bit bit single execution units multiple execution units seen chip memories dma engines communications links caches floating point processors 
certain style development come problem simply go away 
processors exhibit sort clearly attempting provide wide spectrum support applications 
despite attempt provide high performance general purpose computing inevitably suited particular application decreasing fraction chip going useful application 
final analysis hardly really wants general purpose computer 
entire software industry exists provide programs users turn general purpose computers application specific processors running spreadsheet multimedia application 
duration interaction software package user wants machine run application quickly cost effectively 
general purpose nature underlying compute engine direct relevance user 
simply historical fact best way supporting wide range applications general purpose computers 
possible costly build application specific processors 
believe coupling microprocessors appropriate hardware compilation technology usher era application specific processors created milliseconds response changing demands system 
repeated argument says point designing application specific processors general purpose processors getting fast cheap support application 
simply true general 
fact increasing market chips support high speed graphics operations video multimedia communications shows general purpose computer lacking special purpose applications 
unfortunately application application type naturally require different set functional units support effectively 
particular application may cost effective add functional units relevant application results highly specific chips support application extremely sell large numbers suffer high cost comparison commodity parts 
commodity product support wide range applications simply cost effective certain point add functional units fixed functionality 
result doing high cost commodity part matched application utilisation units low particular application executed 
summary argue different ways provide additional support applications commodity parts broadly produce wider range application specific processors route undoubtedly followed market particular application specific processor large 
design chips lengthy expensive process volumes may normally sufficient pricing compete commodity chips 
suit novel products services market built necessarily slowly new product 
add fixed function units adding fixed features processor usually mean particular application proportion new features decrease 
model look expensive silicon lies idle time 
fixed function features poor additional silicon going useful time 
add variable function units solution offers way dilemma posed mismatch technology push market pull 
general purpose reconfigurable hardware deliver usable functionality range applications 
advances vlsi technology easily exploited reconfigurable hardware fairly straightforward design scales easily 
programmable logic allows design decisions deferred influences incorporated ii fast new products iii service upgrade products iv development controllable software process 
favoured third strategy increasingly large amounts silicon area devoted generalpurpose hardware deployed way order support particular applications 
happens factory volume chip particular product happens dynamically response changing real time demands delivered system irrelevant technological problems need solved development systems practical possibility 
step connecting processor dpga design today microprocessors ways connect dpga microprocessor chip 
major interface microprocessors memory bus consisting sections parallel transfer data addresses control information 
mapping device registers address space processor bus structure conventionally provide device interfaces input output 
processor chips bus may sport number dma controlled communication channels 
structures result increased bandwidth lowered latency lack interference separate processes new opportunities dpga interaction single multi purpose processor bus consider 
connect dpga processor bus clearly full generality entire bus available pins dpga perfectly reasonable restrict bus signals available dpga particular applications 
dpga need configured effectively done control microprocessor 
details reconfiguration operation particularly relevant discussion simply assume programming port dpga mapped address space microprocessor software dma process responsible loading configuration information 
example system tightly coupled microprocessor dpga shown fig 

fpga processor machines constructed useful list machines 
block diagram harp reconfigurable computing platform 
consists bit risc microprocessor transputer mbytes dram closely coupled xilinx dpga processing system xc local memory 
microprocessor load arbitrary hardware configuration dpga bus 
processor controlled mhz frequency synthesiser allows dpga clocked highest rate depends depth combinational hardware dpga wiring delays inherent particular configuration 
harp mm theta mm printed circuit board surface mount technology available commercial basis 
industry standard tram module size integrated easily wide range shelf hardware host computing systems 
main input output channels board theta mbit sec serial links supplied microprocessor 
easy link boards link available tram modules converters frame microprocessors dsp systems 
frequency synthesiser generate arbitrary clock dpga circuit 
advantage processors run different speeds accordance technology precise configuration 
disadvantage separate clocking processors asynchronous 
microprocessor mbit links mbyte dram sram xc fpga mhz frequency synthesiser sram clock bit bus harp reconfigurable computer module complicates exchange data problems anticipated dealt interface 
system simplification obtained clocking dpga circuit microprocessor clock 
strategy may possible simplify transfer data processor dpga 
unfortunately difficult ensure proper synchronous operation processor memory mapped device modern microprocessors may internal clock signals visible chip boundary activity bus increasing divorced operations cpu 
harp system goes little simple connection dpga microprocessor bus provides banks sram connected dpga 
memory general purpose high speed memory storage data temporary results associated processor computation 
altering dpga configuration memory privately dpga algorithm mapped microprocessor bus processors access 
system currently programmed writing programs different closely related languages 
software part usually written occam language part destined hardware written handel 
handel essentially subset occam slightly extended support arbitrary width variables 
languages closely related csp language gives secure intellectual foundation provides transformational algebra allows programs routinely converted form 
hardware compilation step expressed program transformation starts user program delivers program called normal form program output 
programs language output program special form directly interpreted hardware netlist 
mechanism possible develop hardware software framework problems relating separate hardware software systems simply disappear 
models dpga processor operation assume bus close coupling commodity microprocessor commodity dpga described number ways system 
admitted may easy way tell modes apart really just convenient ways talking different levels interaction processors adding new op codes processor microprocessor issues processor instruction instruction instruction sequence detected dpga interpreted command plus data 
dpga algorithm fast may allowable hold processor result generated processor continue operations explicit synchronisation required requires results dpga 
remote procedure call microprocessor issues instruction instruction sequence interpreted dpga remote procedure call rpc plus parameters 
similar effect heavyweight interface explicit synchronisation necessary 
true multi tasking system provided occam system running transputer easy arrange traditional procedure call semantics maintained rpc process issued rpc suspended processor 
client server model model dpga algorithm server process similar rpc mechanism communications processes running microprocessor server process arbitrate prioritise multiple activations microprocessor 
additionally unreasonable consider rpc client server models operating dpga algorithm master 
ultimately may way real time system running dpga able load difficult infrequently executed tasks microprocessor may time space resources deal complex exceptional cases 
parallel process scheme takes step distance operations processor dpga 
dpga algorithm runs top level parallel process communication processors happen point jointly agreed 
natural master slave interpretation relationship processors distributed algorithm sole charge pattern communications 
models dpga memory architecture program running dpga processor normally require amount variable temporary storage operation 
rarely entire circuit consist combinational logic 
different memory models suggest dpga uses external memory circumstances algorithm embedded dpga coprocessor may able operate external memory 
situation reasonable processor needs little state operation current relatively registers available 
dpga shares microprocessor memory dpga processor share bus dpga able memory attached bus 
involves time space overheads dpga deal necessary memory access arbitration 
may necessary build row column address controller dpga dynamic ram 
access memory considerably slow processor data intensive computation microprocessor better able deal slow memory interface chip cache arrangements currently part dpga technology 
special case implement shared ram dual ported memory 
reduces contention microprocessor bus limiting factor applications 
dpga local memory frequently possible desirable organise dpga algorithm access data rapidly consuming creating data value clock cycle 
taken fact instruction fetches needed hardware implementation algorithm seen conventional microprocessor memory match real time dpga algorithm 
better served local banks sram provide necessary bandwidth 
smarter large address counters just burst mode support aid high bandwidth data exchange 
models dpga memory operation local dpga memory may number different ways 
noted models dpga memory operation necessarily mutually exclusive memory holds complete data set local memory large hold complete data set computation 
example complete frame video compressed uncompressed forms video compression algorithm 
fifo queue memory acts fifo buffering exchanging data results microprocessor 
example storage complete region support real time fir finite impulse response filter 
cache local memory may run cache larger application data structure held main processor 
may managed predictive data exchange programmed high level requests microprocessor traditional cache line demand methods 
models dpga program execution number ways programs may embedded dpga 
different models supporting program execution dpga exploit different parts cost performance spectrum implementations 
pure hardware algorithm converted hardware compilation hardware description loaded dpga 
root technology built 
application specific microprocessor algorithm compiled machine code processor optimised produce description applicationspecific microprocessor machine code program 
microprocessor description may compiled dpga implementation 
option explored depth 
sequential re dpga algorithm may large fit available dpga may engineering economic reasons split algorithm runs partially dpga configuration continues 
gains sequential re dpga hardware course balanced time taken re configure dpga 
sequential combinator source language semi colon obvious structure boundary re loading operation case constructs provide points code splitting 
multiple simultaneous dpga resources large may possible number algorithms resident interact separately host processor 
current levels technology certainly means number dpga chips available 
style uncommon develop 
important develop methods producing running position independent circuits analogous position independent code software world 
harder problem underlying resource twodimensional piece silicon dimensional memory conventional processor 
increases need develop strategies dealing problem 
demand usage opportunity clearly exists complex systems built hardware exist time real time demands system dictate hardware built destroyed 
precisely going time dpga configured 
scheme take step relatively large collection circuits loaded dpga exact mix circuitry point time depends actual activity system 
reasonable analogy virtual memory systems refer virtual hardware 
may futuristic scenario reasons believing fields multimedia communications databases cryptography characteristics applications demand sort highly flexible execution environment 
course option combined usefully 
application specific microprocessor worth saying little application specific microprocessor represents essentially different implementation paradigm standard ones 
commodity microprocessor plus appropriate machine code common implementation paradigm systems 
cheap commodity processor memory parts slow processor sequentially re expensive parts hardware alu registers 
reasonable regard paradigm spectrum possible implementation strategies different characteristics hard imagine cheaper way implementing complex systems 
spectrum asic highly parallel hardware implementations produced hardware compilation techniques discussed means 
solutions tend expensive large amounts hardware non commodity status regarded spectrum hard think solution faster execution 
having ends spectrum interesting see lie 
naturally possibility mixed mode solution partly hardware partly microprocessor mixed mode solutions interest 
essentially different paradigm application specific microprocessor asp appropriate machine code 
solution appropriate inherits key benefit microprocessor offers fairly performance rapid re expensive hardware resources 
asp pick benefit parallel hardware having specialised instructions support application 
details approach provided 
possible solution system designers rarely available reasons cost 
possible implement microprocessors directly processors fact automatically designed 
example built processor compiler takes user program compiles machine code processor 
optimises processor machine code produce concrete machine code program concrete processor description form isp instruction set processor program 
isp program put hardware compiler produce actual application specific processor 
process automatic programmer influence final processor architecture annotating parts original program 
example original program contains statement simply writing programmer ensures automatically designed microprocessor squaring operation built single instruction 
style asp implementation prove practice highly 
fact successfully inhabit new point implementation spectrum natural follow processor construction kit chip alternatively dpga number special purpose support circuits depending point view 
option explored 
design better dpga processors major step forward terms performance integrate dpga processor die 
cover topic concentrate chip solution evolutionary revolutionary 
small size compared size circuits implement remain problem foreseeable 
backdrop may able ameliorate problem altering internal architecture dpga external interfaces adding special purpose functional units 
sections briefly explore strategies 
changing dpga external interfaces assume intending dpga cooperatively commodity microprocessor interfacing models described 
look special purpose circuitry added periphery dpga order support processor dpga communication 
list survey specialisations attempted dpga order effectively processor role 
memory mapping supports mapping dpga special purpose hardware general purpose circuitry address space microprocessor say configurable address decoder simple bus interface 
memory interface add fully configurable interface dpga interface various widths styles bus maintaining simple logical internal interface dpga core 
example philosophy xilinx design 
data transfer goes simple synchronous memory interface support handshaking guards clock recovery block transfer supports transfer larger amounts data providing buffers fifos counters 
dma engine supports dpga accessing memory host processor local memory 
dma engine complex support linked list data structures memory real time embedded applications structures 
chip cache common dpga processors range autonomously large data sets private shared memory necessary support memory interface exactly sort cache arrangements common microprocessors 
synchronisation necessary points ensure processor dpga synchronise particularly exchanging data 
mediated data transfer operations ensuring software dpga implement endto handshaking 
harp board implementing csp style channels software hardware 
special purpose support added support pure synchronisation operations 
specialised communication interfaces dpga support limited number specialised external interfaces scsi ethernet atm 
possibilities prove worthy support conceivable protocols sufficient volume product feasible 
giving extensive support particular high bandwidth communications protocols seen changing nature dpga force split market 
chips easily seen way implementing interface external network processor specific interface implemented dpga low level processing dpga relieve host processor appreciable amount processing 
view says simply part microprocessor dpga technology involved 
adding special purpose support structures generations certainly exhibit increasing number specialised structures experience demonstrates addition offers worthwhile support broad range applications unduly affect part nature commodity item 
comment possibilities pay way specialised world dpga coprocessors 
extension part microprocessor bus appropriate buffering heart dpga way ensure communication dpga boundary 
obvious problem scheme demands reduction flexibility way bus lines brought dpga pins 
particular automatic place route tools hard time dpga pins heavily constrained 
difficult worth tackling problems head potential gain considerable 
route extending microprocessor bus dpga leads quite naturally supplying specialised structures internal bus multiplexors alu register structures access bus 
naturally starts beg question component traditional dpga new sort re configurable microprocessor 
novel dpga architecture architecture dpga cells routing networks naturally hot topic research 
consequently far clear eventual winners race set standards dpga architectures 
attempt general comparison architectures content briefly describing novel architecture may contribute debate 
starting survey desirable characteristics check list current dpga architectures delivered clear major gap current architectures support wide gates particularly type circuits best implemented pla plane technology 
example dpga lookup tables efficiently implement address decoder microprocessor bus 
plas programmable logic arrays allow efficient implementation circuits large number inputs outputs 
addressed lack directly developed patented novel dpga uses cam memory ram random access memory logic implementation 
conventional employ small banks ram lookup tables implement simple boolean functions 
design cam allows implement types circuit element supported advanced designs including dense ram structures addition novel architecture supports implementation arbitrary sized pla style circuits 
architecture described detail 
plas plane gates process inputs pass results plane gates produce desired outputs 
efficiency improved intermediate plane terms shared different outputs 
clearly desirable single dpga design characteristics conventional plas 
believe design effectively address issue 
dpga block inherently flexible simple ram lookup table inputs outputs 
signals direction provide local connections blocks 
interesting structures rams plas decoders built pack densely dpga requiring support global routing network 
inputs outputs block orthogonal bidirectional large extent interchangeable 
gives place route software great deal easily exploitable freedom way macros placed 
dpga blocks cam mode basic cam cell shown fig 
vertical horizontal bus lines 
seen similar complexity static ram cell additional lines allow content 
design uses array theta bit cam cells directly build cam core single block dpga 
block total theta vertical bus wires theta horizontal wires 
peripheral circuitry block processes multiplexes signals bit cam block wires cardinal direction directly join nearest neighbour blocks 
fact output wires block contrasts markedly single output lookup table dpga architectures 
allows greater density user circuitry wordline bitline cam cell array fragments circuitry exploit fragments precisely ones poorly supported traditional architecture 
cam block ideal unit building planes needs modest support block peripheral circuitry multiplex de multiplex signals plane boundaries 
blocks operating cam mode grouped form arbitrarily large pla structures shown fig 

blocks routing corner turning programmed act crossbar switches 
blocks efficiently build cam arrays arbitrary size 
proven useful building blocks applications caches expect find uses cam applications previously considered part solution space 
feature bonus directly attributable novel design cam dpga original design requirement 
dpga block ram mode ram mode block operate fully functional bit lookup table 
having outputs generate function variables functions variables functions variables fig 
shows cam dpga blocks operating ram mode grouped form arbitrarily large ram structures 
architecture neatly solves twin problems building dense ram arrays building necessary decoder logic 
decoder blocks simply cam mode horizontal outputs block ram blocks ram mode 
difference ram mode cam mode simply configuration peripheral circuitry block 
combining processor dpga chip predictions relevance dpga processors prove correct soon follow commodity market dpga processor chip 
obviously yield reduction number parts typical system implementation speed communication processors may simplify communication clocking arrangements 
stage main inputs outputs plane plane terms larger pla built cam mode blocks evolution problems dpga processor interaction characterised wide range real world applications 
consequently simply combining elements single chip economically interesting essentially straightforward technical sense considered 
scope real technical innovation longer necessity regard processor core consider making changes dpga combination better supporting user applications 
may may relevant provide measure object code compatibility processor immediate large extent separable issue follows ignored 
opportunity complete re appraisal computer architecture examine role reconfigurable hardware play implementation commodity microprocessors 
seen complete microprocessors implemented dpga technology large cost processors highly structured objects dpga designed support relatively unstructured circuits 
suggested dpga major datapath specialised components mounted useful evolutionary step better integration technologies 
natural development processor construction kit chip 
reconfigurable processor processor relatively fixed high level architecture significant amount reconfiguration capability specialised architectural components 
concepts related worth distinguishing result significantly different products significantly different software support costs 
cam cam cam cam ram ram ram ram ram ram ram ram decoder array address data address decoded address propagating bitlines propagating ram structure cam dpga reconfigurable processor notion reconfigurable processor contains microprocessor relatively fixed architecture uses dpga technology major architectural modules 
pairing microprocessor dpga processor earlier certainly fall category 
definite possibilities incorporating dpga resources parts architecture section reviews appear useful purpose 
alu alu obvious place put reconfigurable logic alus fairly evolved standard purpose 
major opportunity support special purpose operations non standard data formats 
instance bit alu treat data theta bit bytes ordering operation database application dataset specific field extraction processing operation 
register file opportunity build special purpose registers standard register file 
registers constructed accumulators auto incrementing registers assignment side effect operation input output machine 
application commonly uses data formats considerably smaller datapath width processor size register file smaller alternatively number registers increased implementing short registers 
addressing register file flexible register storage content addressable part run stack queue 
memory interface modern microprocessors evolving having complex memory interface operate peak efficiency large number different external memory configurations 
dpga contender building interfaces microprocessor chips opportunities increase memory technologies common 
dma device interfaces communications controllers massive opportunity building specialised input output processors 
configured navigate directly application data structure memory directly support complex external communications protocol atm ethernet 
microcode store microcode store large consumer silicon modern microprocessors 
opportunity dpga technology store just parts microcode needed possibly change instruction set dynamically required current application 
possible compress size store pla style implementation extensive opportunities exist logic sharing special purpose microcode decoding logic 
instruction decode scheduling pipeline support dpga resources construct instruction decode operations target possibly changing instruction set recognise instruction sequences order optimise schedule operations called 
efficient running pipeline increasingly important high performance processors opportunities dpga technology adapt scheduling optimisation strategies current application current statistics operation 
floating point processor core fpp large evolved unit opportunities dpga implementation non standard formats supported 
core fpu opportunity application specific operations core 
instance fpu results extracted normalised de normalised form simultaneously operation root mean square primitive 
interrupt misc 
control just external bus microprocessor adapted wide range environments dpga miscellaneous control signals generated consumed processor 
interrupt control clear example application specific behaviour beneficial novel components possible add novel special purpose units point relatively fixed architecture processor 
best regarded application specific processors topic covered 
worth noting possibility add processor quite small 
processor construction kit chip take child construction kit large numbers simple building blocks analogy today development suggested analogous production specific models child construction kit framework host specialised parts support construction particular model class models 
chip expect see extensive bus routing system addition traditional dpga routing scheme processors internal bus constructed 
expect see multiple alu structures register files pipeline registers associated bus structures 
programmable external memory interface additional possibility supporting cache essential 
clearly difficult issues concerning number size resources provide chip portion chip devoted traditional fine grained dpga resources 
evolutionary path higher level functions added piecemeal fashion probably response demands niche markets 
particularly early stages development necessary maintain high level fine grained resources clear mixes fixed functionality blocks commodity items 
number ways architecture solutions applications problems change radically 
developments speculative happening 
feel doubt reconfigurable hardware increasingly important component systems inevitably integrated microprocessors change architecture 
reconfigurable hardware right characteristics ensure long term position market 
easy design fabricate usefully consume increasing number transistors provided price advances vlsi technology reduces design cost new systems reduces time market new systems allows systems upgraded moment leave factory allows post delivery upgrades floppy disc telephone network 
advanced tools trying develop oxford radical change skills base needed implement tomorrow high performance systems 
feasible implement complex hardware software systems mainly programmer effort cases appropriate hardware platform reconfigurable hardware resources exists feasible entire system produced software team 
arbitrary programs transformed efficient hardware implementations necessary programmers think carefully hardware programs write 
explicitly decide things happen parallel extent knowing executed clock cycle 
case considerations part everyday life electronics engineer programmers develop systems electronic engineers moving design domain programmers moving concrete 
speculative doubt ideas contained see commercial light day 
equally certain things come pass thought 
absolutely certain number new ideas hardware compilation key going change design build digital systems 
author certainly looking forward decade research convinced going exciting years proven 
underlies supported years european union esprit programme engineering physical sciences research council epsrc advanced risc machines 
arm sharp european laboratories sel inmos 
sgs thompson atmel xilinx development music semiconductor oxford university computing laboratory wish remain nameless 
particularly wish tony stansfield cam dpga architecture working computing laboratory wish geoffrey randall producing diagrams jon saul comments draft 
arnold buell davis 
splash 
proceedings th annual acm symposium parallel algorithms architectures pages june 
athanas silverman 
processor reconfiguration instruction set metamorphosis 
computer march 
bertin vuillemin 
programmable active memories performance assessment 
borriello ebeling editors research integrated systems proceedings symposium pages 
bowen editor 
verified systems 
real time safety critical systems series 
elsevier 
preparation 
buell pocek editors 
proceedings ieee workshop fpgas custom computing machines napa ca april 
steve churcher tom bill wilkie 
xc fastmap processor interface 
moore wayne luk editors field programmable logic applications number lecture notes computer science pages 
springer 
procedings th international workshop 
steve 
list fpga computing machines 
world wide web 
jifeng ian page jonathan bowen 
provably correct hardware implementation occam 
milne pierre editors correct hardware design verification methods proc 
ifip wg advanced research working conference volume lecture notes computer science pages 
springer verlag 
hoare 
communicating sequential processes 
international series computer science 
prentice hall 
hoare ian page 
hardware software closing gap 
transputer communications june 
inmos 
occam manual 
international series computer science 
prentice hall 
inmos 
transputer development iq systems 
inmos 
gray 
configurable hardware case studies micro grain computation 
journal vlsi signal processing september 
adrian lawrence andrew kay wayne luk ian page 
reconfigurable hardware speed product development performance 
luk moore editors fpl lecture notes computer science 
springer verlag 
adrian lawrence ian page wayne luk andrew kay 
reconfigurable hardware speed product development performance 
proc 
conference 

moore wayne luk editors 
fpgas 
ee cs books 
moore wayne luk editors 
fpgas 
ee cs books 
page 
reconfigurable processor architectures 
microprocessors microsystems 
ian page 
automatic design implementation microprocessors 
proceedings pages amsterdam april 
ios press 
isbn 
ian page 
parametrised processor generation 
moore wayne luk editors fpgas 
ee cs books 
ian page 
hardware compilation research group world wide web pages 
oxford university computing laboratory 
ian page wayne luk 
compiling occam fpgas 
moore wayne luk editors fpgas pages 
ee cs books 
greg snider philip bruce richard carter arnold berger rick 
configurable computer engine 
moore wayne luk editors field programmable logic applications number lecture notes computer science pages 
springer 
procedings th international workshop 
michael spivey ian page 
program handel 
technical report see www comlab ox ac uk html oxford university computing laboratory 
anthony stansfield ian page 
design new fpga architecture 
luk moore editors fpl lecture notes computer science 
springer verlag 
sundance multiprocessor technology market square hp dq product overview 
xilinx san jose ca 
programmable gate array data book 
