adaptation team thomas haynes sandip sen south college ave department mathematical computer sciences university tulsa tulsa ok usa research partially supported nsf research initiative award iri 
preprint article going appear international journal computational intelligence organizations late early 
adaptation team introduce cooperative evolutionary system facilitate development teams heterogeneous agents 
believe different behavioral strategies controlling actions group agents combine form cooperation strategy efficiently achieves global goals 
examine line adaption behavioral strategies utilizing genetic programming demonstrate successful evolution cooperative individuals 
new crossover mechanism genetic programming systems order facilitate evolution member team crossover operation 
goal reduce time needed evolve effective team 
russell norvig russell norvig define agent viewed perceiving environment sensors acting environment effectors 
insects animals robots humans clearly fall definition 
consider software programs agents environment operating system system calls sensors effectors 
transition internet information entering age information available fingertips exceeds capacity process 
internet growing new protocols developing 
protocols include proprietary databases web page layouts just hope keep explosive growth internet expect software agent handle emerging data formats 
envision society interacting agents exchanging information standard language kqml fox finin 
dialog free subject market pressures 
agents able translate data format integrate knowledge agents broker services surveys human organizational theory leveraged computational agent societies fox malone malone mullen wellman 
body literature providing novel evolutionary algorithms generating team adapted agents perform effectively environment 
adaptation team coordination actions agents key research topics multiagent systems mas lesser malone shaw 
distributed artificial intelligence dai researchers study organizational behavior fox malone robbins adaptive behavior nature jr krebs davies gain insight groups effectively interact problem solving 
interested groups form maintain common purpose learn adapt individualistic goals common group goal 
research consider problem investigate domain simple greedy behavior adapted cooperative group behavior 
mutual adaptation learning paramount importance designers agent groups societies wei sen sen 
genetic programming gp koza genetic algorithms ga holland effectively performs implicit parallel search problem space 
population composed random programs chromosomes constructed domain specific language 
chromosome evaluated domain specific fitness function 
chromosomes selected generation higher scoring chromosomes picked 
chromosomes undergo reproduction process similar seen biological systems 
utilized genetic programming evolve behavioral strategies enabled team loosely coupled agents cooperatively achieve common goal haynes sen haynes 
agents shared behavioral strategy homogeneous population member represented program agents 
simple algorithm model actions believe behave situation haynes 
homogeneous agents agents employ algorithm models agents matches actions 
key issue dai research heterogeneous agents cooperate form successful team 
extend research evolution homogeneous agents evolution heterogeneous agents team 
chromosome population explicitly represents programs corresponding agent 
core problem credit assignment fairly reward individual agent contributions group goal 
individual agents perform independent tasks shared environment relatively simple distribute credit 
goals individual start overlap adaptation team group distribution credit problematic interaction individuals achieves goal determine distribution credit 
suppose agent aid second presence sufficient task done 
agents get equal share credit 
agent helping just little task done faster cheaper 
agent receive equal credit scenarios 
address problem evolving individuals context team 
credit goes individual team 
learning takes place team adaptation occurs individuals 
consider scenario member team individuals significantly effective realizing team goals 
team performed underlying genetic algorithm select undergo recombination generation 
single agent rewarded directly 
team undergoes recombination team individual members stochastically selected regard contribution team goals adaptation 
effective member aids team learning ineffective members engage learning team 
average time ineffective members adapt level effective 
proposed approach novel way evolve strategy coordinating group agents process generating strategy distributed nature 
agent teams evolved individual learning performed agent 
individual agents control adaptation process gp concurrently adapting team members believe adaptation proper term describe evolutionary process 
endowed evolved behaviors agent completely autonomous interactions environment team members centralized control 
predator prey pursuit problem testbed experiments evolving heterogeneous agent groups 
problem provide possible challenges heterogeneous groups sufficiently complex provides starting point 
predator prey game studied stylized domain researchers multiagent systems utilized evaluate organizations control structures messaging systems stephens merx stephens merx 
goal predator agents capture prey agent surrounding orthogonally 
adaptation team agents domain capabilities pursuit different agents required play different group roles 
consider analogous situation team hunters chasing target 
animal hunters adopt roles hunt scouts quarry flushes quarry kills quarry 
roles dynamically allocated fit state current hunt 
hunter capable performing role 
key aspects domain agent groups effectively coordinated retaining individual autonomy groups able anticipate adapt problem solving technique new demanding situations 
line design behavioral strategies agents bound limited applications possible interactions anticipated design time 
interested line adaptive mechanisms tailoring group behavior 
agents particular groups agents increasingly commonplace real world 
artificial problem domain methodology investigate clearly promising address broader challenges 
genetic algorithms working benchmark problem suites nowadays applications engineering fields davis 
show potential gps developing effectively coordinated multiagent systems 
plan investigate real life agents coordinated meeting schedulers cooperative controllers proposed methodology 
develop methodology understood problem domain effectively simulated data available compare methodology techniques domain 
predator prey domain perfectly suits bill 
rest laid follows section presents methodology coordinating agent groups 
section introduces pursuit domain 
section provides overview genetic programming presents evaluate predator prey games describes experimental setup 
section presents crossover strategy improving learning team 
section compares utility crossover strategies evolve teams 
section wraps research team formation 
section points extended 
adaptation team coordination agent groups underlying goal research generate programs coordination cooperative actions group autonomous agents initially uncooperative 
agents adapt greedy local behavior working common goal 
effect want evolve behavioral strategies guide actions agents domain 
identification design implementation strategies coordination central research issue dai bond gasser 
current research techniques developing coordination strategies line mechanisms extensive domain knowledge design scratch appropriate cooperation strategy 
cases coordination strategy chosen reasonably 
haynes new approach developing coordination strategies multiagent problem solving situations different existing techniques constructing coordination strategies ways ffl strategies coordination incrementally constructed repeatedly solving problems domain line 
ffl rely automated method strategy formulation modification depends little domain details human expertise problem solving performance randomly generated problems domain 
approach developing coordination strategies multi agent problems completely domain independent uses strongly typed genetic programming stgp paradigm montana extension gp 
stgp approach evolving coordination strategies strategies encoded symbolic expressions expressions evaluation criterion chosen evaluating arbitrary expressions 
mapping various strategies expressions vice versa accomplished set functions terminals representing primitive actions domain application 
evaluations strategies represented structures accomplished allowing agents execute particular strategies application domain 
measure efficiency effectiveness criteria relevant domain 
populations structures evolved produce increasingly efficient coordination strategies 
adaptation team examine rise cooperation strategies implicit communication 
previous research developed strategies implicit communication program control predator agents 
removal implicit communication achieved having predator agent controlled program 
system solves cooperative evolution problem opposed competitive evolution problem described angeline pollack haynes sen reynolds 
believe cooperative evolution provides opportunities produce solutions problems solved implicit communication 
pursuit domain predator prey pursuit game benda test hypothesis useful coordination strategies evolved stgp paradigm non trivial problems 
domain involves multiple predator agents trying capture mobile prey agent grid world surrounding 
predator prey problem widely test new coordination schemes gasser korf levy rosenschein stephens merx stephens merx 
problem easy describe extremely difficult solve performances best manually generated coordination strategies satisfactory 
showed stgp evolved coordination strategies perform competitively best available manually generated strategies 
original version predator prey pursuit problem introduced benda 
benda consisted blue predator agents trying capture red prey agent surrounding directions grid world 
agent movements limited horizontal vertical step time unit 
movement prey agent random 
agents allowed occupy location 
goal problem show effectiveness organizational structures varying degrees agent cooperation control efficiency predator agents capture prey 
approach undertaken gasser 
gasser allowed predators occupy maintain lieb configuration predator occupying different quadrant quadrant defined diagonals adaptation team intersecting location prey homing prey 
study study singh singh group intentions agent coordination lacks experimental results allow comparison problem 
stephens merx stephens merx stephens merx performed series experiments demonstrate relative effectiveness different control strategies 
defined local control strategy predator broadcasts position predators occupies neighboring location prey 
predator agents concentrate occupying locations neighboring prey 
distributed control strategy predators broadcast positions step 
predators farther prey priority choosing target location preys neighboring location 
centralized control strategy single predator directs predators subregions lieb configuration 
stephens merx experimented random initial positions predators prey problem discovered centralized control mechanism resulted capture configurations 
distributed control mechanism worked robust 
discovered performance local control mechanism considerably worse 
research predator prey agents took turns making moves 
believe realistic 
realistic scenario agents choose actions concurrently 
introduce significant uncertainty complexity problem 
korf korf claims research discretization continuous world allows horizontal vertical movements poor approximation 
calls orthogonal game 
korf developed greedy solutions problems predators allowed move orthogonally diagonally 
calls diagonal game 
korf solutions agent chooses step brings nearest predator 
max norm distance metric maximum distance locations agents chose steps 
predator captured random configurations games 
max norm metric produce stable captures orthogonal game predators circle prey allowing escape 
korf replaces previously randomly moving prey prey chooses move places maximum distance nearest predator 
ties broken randomly 
claims addition prey movements problem adaptation team considerably difficult 
campbell investigated utility theta predators theta prey pursuit games testbed dai research 
campbell utilized genetic algorithms evolve parameters decision modules 
difference domain grid bounded toroidal neighbors cell edge cells edge 
theta game interesting dai research 
concluded theta games right complexity testbeds 
believe argument invalid domain grid world toroidal 
benefit bounded grid world teams size effect capture prey trapping walls 
removing bounds theta game interesting dai research 
prior research haynes haynes utilized genetic programming evolve behavioral strategy control predator agents pursuit prey 
chromosome represented behavioral strategy employed predator agents 
compared best strategy evolved genetic programming system implementations korf algorithms 
evolved strategy comparable hand crafted ones 
furthermore determined problem deceptively simple agents memory allowed communication exist simple prey strategies sit move straight line consistently evade capture predator strategies 
evolving coordination strategies genetic programming holland adaptive systems holland produced class biologically inspired algorithms known genetic algorithms manipulate develop solutions optimization learning types problems 
order gas effective solution represented ary strings shown gas adapted manipulate real valued features 
gas guaranteed find optimal solutions simulated annealing algorithms pos adaptation team sess nice provable properties optimal allocation trials substrings evaluating exponential number schemas linear number string evaluations useful number practical applications davis 
koza genetic programming koza motivated representational constraint traditional gas 
koza claims large number apparently dissimilar problems artificial intelligence symbolic processing optimal control automatic programming empirical discovery machine learning reformulated search computer program produces correct input output mapping domains 
uses traditional ga operators selection recombination individuals population structures applies structures represented expressive language traditional gas 
representation language gps computer programs represented lisp expressions 
gps possess nice theoretical properties traditional gas attracted tremendous number researchers wide range applicability paradigm easily interpretable form solutions produced algorithms angeline kinnear jr kinnear jr koza koza 
gp algorithm described follows 
randomly generate population programs functions terminals problem 

repeat step termination condition satisfied assign fitness programs population executing domain problems evaluating performance solving problems 
create new generation programs applying fitness proportionate selection operation followed genetic recombination operators follows ffl select programs replacement current population probability distribution fitness 
ffl create new population programs pairing selected individuals swapping random sub parts programs 
adaptation team 
best program generations static domains best program run dynamic domains solution produced algorithm 
gp user needs specify functions variables constants nodes expression parse tree 
functions variables constants require arguments leaves parse trees called terminals 
functions require arguments form branches parse trees called functions non terminals 
set terminals called terminal set set functions called function set 
traditional gp terminal function set members type 
montana montana introduced stgp variables constants arguments returned values type 
restriction data type element specified 
experimental setup experiments initial configuration consisted prey center grid predators placed random non overlapping positions 
agents choose action simultaneously 
training cases team allowed moves case 
environment updated agents select moves agents choose action updated state 
conflict resolution necessary allow agents occupy position 
agents try move location simultaneously bumped back prior positions 
predator push predator prey decided move 
prey movements controlled strategy moves away nearest predator ties non deterministically broken 
prey move time effectively predators travel faster prey 
grid toroidal nature diagonal moves allowed 
capture defined predator agents occupying cells directly adjacent orthogonal prey predators block legal moves prey 
predator see prey prey see predators 
predators communicate resolve conflicts adaptation team ate capture strategy 
eliminates explicit communication agents 
evaluation coordination strategies evolve coordination strategies predators stgp need rate effectiveness strategies represented programs expressions 
chose evaluate strategies putting task randomly generated pursuit scenarios 
scenario program run time steps 
percentage capture measure fitness comparing strategies scenario 
initial population strategies randomly generated strategies produce capture 
need additional terms fitness function differentially evaluate non capture strategies 
key aspect gps including stgp gas particular structure effective may contain useful substructures combined useful substructures produce highly effective structure 
evaluation fitness function designed useful sub structures assigned due credit 
analysis mind designed evaluation function programs controlling predators contain terms ffl move strategy fitness program representing strategy incremented grid width distance predator prey predator 
higher fitness values result strategies bring predators closer prey keep near prey 
term favors programs produce capture number moves 
ffl simulation ends predator occupying location adjacent prey number equal number moves allowed grid width added fitness program 
term favor situations predators surround prey 
ffl simulation ends capture position additional reward number moves allowed grid width added fitness program 
term strongly biases evolutionary search adaptation team programs enable predators maintain positions succeed capturing prey 
experiments distance agents measured manhattan distance sum offsets locations 
limited simulation time steps 
increased capture rate increase 
order generate general solutions solutions dependent initial predator prey configuration training cases run member population generation 
fitness measure average training cases 
training cases generations randomly generated generation 
experiments random training cases generation 
encoding behavioral strategies korf implementation predator prey domain utilized algorithm control predator agents 
evolve behavioral strategies predator agents 
behavioral strategies encoded expressions 
terminal function sets pursuit problem tables 
domain root node parse trees enforced type tack returns number corresponding choices prey predators north east west south 
notice required types terminals required arguments return types function function set 
choice sets reflect simplicity solution proposed korf 
goals language algorithms employed korf represented 
adaptation team terminal type purpose boolean true false bi agent current predator 
pred agent predator 
pred agent second predator 
pred agent third predator 
pred agent fourth predator 
prey agent prey 
tack random tack range north west 
table terminal set function return arguments purpose return cell agent get cell tack coord ifthenelse type boolean generic 
type 
boolean length true length false 
md length cell manhattan cell distance table function set adaptation team establishing environment teamwork earlier program represented chromosome population individuals 
method compose team different chromosomes randomly selected members population chromosomes member awarded certain percentage total fitness 
ensure member population participates teams 
member get points definitely contributed team fitness score 
divide team score participating members chromosomes 
fair evenly divide score 
assuming members team actions individual accounted large share team score get th score 
problem credit assignment problem grefenstette 
way create teams deterministically split population sized teams 
individuals form team 
problem imposes artificial ordering population 
team generation formed generation due re ordering caused reproductive cycle 
method employ ensure consistency membership team evolve team individual 
chromosome consists programs 
subject effects crossover mutation ensured members form team 
effectively removes credit assignment problem 
team member participates team 
points awarded individual contribution teams contribution correctly entire team 
approach similar pitt approach evolving genetic machine learning systems dejong 
ga production systems camps maintain ruleset pitt approach maintain entire ruleset individual string entire population collection rulesets michigan approach maintain entire population ruleset 
michigan approach credit assignment problem correctly award individual rules contributions global solution 
pitt approach bypasses credit assignment problem rules evaluated context ruleset 
similar mechanism proposed successfully evolve set prototypes supervised concept classification adaptation team problems knight sen 
method maintaining consistency team introduce problem crossover 
allow crossover shown take place usual sense 
programs participates crossover 
shown allow programs participate crossover 
crossover mechanism allows relatively small changes parent structures produce offspring conjecture slows learning 
investigate utility allowing multiple programs participate crossover process 
consider crossover functions comparison purposes method agents share program 
method simply pick crossover point chromosome see 
traditional gp crossover mechanism 
program program program program crossover point program program program program crossover point example crossover crossover point chromosome 
crossover mechanism adapt uniform crossover function ga research syswerda see 
basically adaptation team develop uniform crossover mask programs inside chromosome 
indicates programs copied respective child indicates programs undergo crossover 
able uniform crossover function number programs team fixed 
programs atomic sense alleles gas randomly determine interactions programs 
example decided order interaction parent chromosomes bit mask produce children 
represented visually 
programs re ordered paired utilize reordering allow new crossover method flexibility branch chromosome engage crossover branch chromosome 
competitive evolution involved concurrently evolving agents compete 
individuals evolving populations evaluate rosin belew haynes sen grefenstette daley 
mode evolution offers possibility graded variation environmental challenges allow effective agents developed time opposed set standard problems evaluating agents 
competitive evolution included island models involves evolving subpopulations occasional migration tanese 
team strategies may thought cooperative evolution processes subpopulation consists programs represent agents 
exchange genetic material agents different subpopulations crossover operation exchange information may likened migration subpopulations 
implementation dictate th team structure formed th member subpopulation 
evaluation team shared members team 
potter team formed combining member current subpopulation best members received subpopulations potter 
individual member subpopulation receives adaptation team evaluation corresponding performance group formed 
view team member receiving evaluation entire team 
assumption allowing sharing genetic information team members ga researchers working problem cooperative evolution bull fogarty 
adaptation team crossover points program program program program parent program program program program crossover points parent program program child program program program program child program program example uniform crossover mask 
parent ordering 
parent ordering 
child branches created crossover 
child branches created crossover 
adaptation team results series experiments evaluated different crossover mechanisms evolving teams comprised heterogeneous agents 
basic setup experiment follows population size maximum generations crossover rate mutation rate employ standard mutation operator utilized gp chromosome selected mutation randomly pick node replace subtree randomly generated subtree 
generation chromosome evaluated random initial placements predators prey 
ran approach different seeds random number generator 
averaged results best fitness generation crossover functions shown 
initially learns faster able learn degree cooperation 
primary significant trend observe experiments initially learns faster able noticeably outperform long run 
shows effective evolve set possibly heterogeneous agents homogeneous agent group 
examining movements agents realized benefits heterogeneous predator agents able move different directions quadrant respect prey orthogonal axis 
observed behaviors evolved homogeneous hand crafted behavioral strategies predators quadrant select action haynes 
behavior lead deadlock situations example predators lined horizontal axis respect prey predator stuck get capture position 
heterogeneous behavioral strategies deadlock situations potential avoided 
adaptation team generation best fitness crossover functions 
maximum possible fitness adaptation team computational agent societies rapidly approaching 
human users come expect capabilities computational resources effort spent developing agent groups cooperate meet variety user needs 
agent developers invest time developing extensive effective agent capabilities agents different developers learn reduce conflict resources cooperation 
due nature open environments learning best done line interaction agents 
learning strategy improves coordination evolutionary algorithmic approach 
heterogeneous agents able improve adaption new genetic programming crossover function 
limiting crossover result producing branch multiple result producing branches capable exchanging genetic material 
heterogeneous agents better able excel compared homogeneous agent groups symmetrical domain 
heterogeneous agents suffer lack simple models capability exploited homogeneous agent systems 
heterogeneous agents essentially input similar state induced symmetry perform different actions 
asymmetry behavioral strategies allows agents avoid potential deadlock situations 
predator prey domain symmetrical favors emergence homogeneous agents 
explore degree similarity different behavioral strategies group need develop tools enable analyze similarity chromosomes semantical syntactical content 
evidenced team members different subtrees identical results 
want explore emergence operative evolution context domains asymmetrical 
believe type scenario specialists develop 
context animal hunting adaptation team example expect scout flusher attacker develop 
role assignments static adaptive take advantage varying environmental conditions 
envision evolving team consisting specialists 
critical tasks handled specialists switch back forth tasks environmental demands vary 
computer network machine host user sessions 
software compiler word processor restricted certain machines due licensing agreements 
certain machines network special hardware printers modems process scheduler loader evolved evenly spread tasks machines 
interested evolutionary mechanisms allow quick adaptation environmental changes 
responsive adaptation mechanisms allow evolve agent groups modify environmental demands vary 
adaptation schemes include addition new members team consequence reorganization team enable effective utilization resources 
angeline kinnear jr editors 
advances genetic programming 
mit press cambridge ma usa 
angeline pollack 

competitive environments evolve better solutions complex tasks 
proceedings fifth international conference genetic algorithms pages 
morgan kaufmann publishers fox 

cool language describing coordination multiagent systems 
lesser editor proceedings international conference multi agent systems pages san francisco ca 
mit press 
benda jagannathan 

optimal cooperation knowledge sources empirical investigation 
technical report bcs boeing advanced technology center boeing computing services seattle washington 
adaptation team bond gasser editors 
readings distributed artificial intelligence 
morgan kaufmann 
bull fogarty 

evolution cooperative multiagent environments 
sen editor working notes aaai symposium adaptation evolution learning multiagent systems pages stanford university ca 
davis editor 
handbook genetic algorithms 
van nostrand reinhold new york ny 
dejong 

genetic algorithm learning 
kodratoff michalski editors machine learning volume iii 
morgan kaufmann los alamos ca 
finin mckay 

kqml language protocol knowledge information exchange 
proceedings th international workshop distributed artificial intelligence pages wa 
fox 

organizational view distributed systems 
ieee transactions systems man cybernetics 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
gasser hill lieb 

representing organizational knowledge dai systems 
gasser huhns editors distributed artificial intelligence volume research notes artificial intelligence pages 
pitman 
jr 

army ants biology social predation 
cornell university 
grefenstette 

credit assignment rule discovery systems 
machine learning 
grefenstette daley 

methods competitive cooperative evolution 
sen editor working notes aaai symposium adaptation evolution learning multiagent systems pages stanford university ca 
adaptation team haynes lau sen 

learning cases compliment rules conflict resolution multiagent systems 
sen editor working notes aaai symposium adaptation evolution learning multiagent systems pages stanford university ca 
haynes sen 

evolving behavioral strategies predators prey 
wei sen editors adaptation learning multi agent systems lecture notes artificial intelligence pages 
springer verlag berlin 
haynes sen wainwright 

evolving multiagent coordination strategies genetic programming 
technical report mcs university tulsa 
haynes wainwright sen 

strongly typed genetic programming evolving cooperation strategies 
eshelman editor proceedings sixth international conference genetic algorithms pages san francisco ca 
morgan kaufmann publishers holland 

natural artificial systems 
university michigan press ann arbor mi 
kinnear jr editor 
advances genetic programming 
mit press cambridge ma 
knight sen 

please prototype learning system genetic algorithms 
proceedings sixth international conference genetic algorithms pages 
morgan kaufmann publishers korf 

simple solution pursuit games 
working papers th international workshop distributed artificial intelligence pages 
koza 

genetic programming programming computers natural selection 
mit press cambridge ma 
adaptation team koza 

genetic programming ii automatic discovery reusable programs 
mit press cambridge ma 
krebs davies 

behavioural ecology 
blackwell scientific publications 
lesser 

multiagent systems emerging ai 
acm computing surveys 
levy rosenschein 

game theoretic approach pursuit problem 
working papers th international workshop distributed artificial intelligence pages 
malone 

modeling coordination organizations markets 
management science 
published readings distributed artificial intelligence alan bond les gasser editors pages morgan kaufmann 
malone 

organizing information processing systems parallels human organizations computer systems 
robertson zachary black editors cognition computing cooperation pages 
ablex publishing 
campbell 

designing pursuit problems testbeds distributed ai novel application genetic algorithms 
fifth european workshop modelling autonomous agents multiagent world switzerland 
montana 

strongly typed genetic programming 
evolutionary computation 
mullen wellman 

simple computational market network information services 
lesser editor proceedings international conference multi agent systems pages san francisco ca 
mit press 
potter jong grefenstette 

coevolutionary approach learning sequential decision rules 
eshelman editor proceedings sixth international conference genetic algorithms pages 
morgan kaufmann publishers adaptation team reynolds 

competition coevolution game tag 
artificial life iv 
mit press 
robbins 

organizational behavior concepts controversies applications 
prentice hall 
rosin belew 

methods competitive evolution finding opponents worth beating 
eshelman editor proceedings sixth international conference genetic algorithms pages 
morgan kaufmann publishers russell norvig 

artificial intelligence modern approach 
prentice hall 
sen 

adaptation coevolution learning multiagent systems 
technical report ss aaai press stanford ca 
shaw 

cooperative problem solving learning multi agent information systems 
international journal computational intelligence organizations 
singh 

effect agent control strategy performance dai pursuit problem 
working papers th international workshop distributed artificial intelligence 
stephens merx 

agent organization effector dai system performance 
working papers th international workshop distributed artificial intelligence 
stephens merx 

effect agent control strategy performance dai pursuit problem 
proceedings distributed ai workshop 
syswerda 

uniform crossover genetic algorithms 
schaffer editor proceedings rd international conference genetic algorithms pages 
morgan kaufmann 
tanese 

distributed genetic algorithms 
proceedings third international conference genetic algorithms pages san mateo ca 
morgan kaufman 
adaptation team wei sen editors 
adaptation learning multi agent systems 
lecture notes artificial intelligence 
springer verlag berlin 
