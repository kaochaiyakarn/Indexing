parallel supercomputing commodity components michael warren theoretical astrophysics los alamos national laboratory los alamos nm donald becker goddard space flight center code md patrick theoretical astrophysics los alamos national laboratory los alamos nm john salmon center advanced computing research california institute technology mail code pasadena ca thomas sterling center advanced computing research california institute technology mail code pasadena ca implemented parallel computer architecture entirely commodity personal computer components 
intel pentium pro microprocessors switched fast ethernet communication fabric obtained sustained performance scientific applications excess 
production astrophysics simulation performed theta floating point operations petaflops week period phase simulation running continuously weeks interruption 
report variety disk memory network benchmarks 
results nas parallel benchmark suite indicate architecture competitive current commercial architectures 
addition describe software written support efficient message passing linux device driver interface pentium hardware performance monitoring registers 
keywords beowulf benchmarks moore law contends performance commodity microprocessor price doubles months 
involved computer technology aware implications law 
current efforts high performance computing forced rely microprocessors commodity dram remain competitive adding value areas network interconnects proprietary operating system software development tools 
tremendous profit opportunity hardware consumer level driven development increasingly fast hardware accompanied extreme price deflation 
entered phase different brands cpu disk storage network hardware little distinguish apart price 
building foundation beowulf project possible construct highperformance computers entirely commodity components free software obtaining significant price performance advantage machines require expensive design development phase 
development powerful free operating systems linux freebsd message passing standards mpi support hardware independent peripheral interconnect bus pci allowed take advantage opportunity provided low cost commodity computer hardware 
extreme disadvantage supercomputer vendors face things people ship limited volume high priced product 
customer requires parallel debugger graphical user interface hpf compiler large real expense develop software added cost hardware intends survive 
cases costs added clear list buy outs supercomputer industry 
ideally self sufficient user require reliable hardware efficient send receive message passing call expected pay software 
exactly case current parallel machines 
view applications require supercomputer performance perform commodity parallel architectures 
example authors report awarded gordon bell performance prize astrophysical body simulations hierarchical tree data structures running processor intel delta machine 
years possible run simulation machine constructed parts free software cost 
commodity system user friendly reliable current generation parallel supercomputers 
past years important events enabled commodity supercomputing ffl dramatic increase microprocessor performance continued accelerated 
intel pentium pentium pro improved floating point performance factor 
narrowed performance gap high volume intel processors top ofthe line workstation microprocessors significantly 
difference raw floating point performance typical scientific workloads mhz pentium pro best dec sgi cray hp convex sun ibm offer factor 
ffl free unix operating system linux written hundreds thousands people 
originally designed intel family machines releases running alpha powerpc sparc architectures 
freely distributable system promoted development high quality device drivers nearly possible peripheral device notably scsi networking cards 
ffl intel designed peripheral component interconnect pci local bus offers greater mbyte second communication processor subsystem outside world processor independent manner 
pci bus de facto standard allows peripheral cards fast ethernet interfaces plugged machine regardless cpu architecture 
ffl fast ethernet technologies atm terms price performance 
mbit ethernet capable bandwidth mbytes sec points interface cards cost 
commodity switches available allow machines communicate full mbit bandwidth cost dollars port 
ffl mpi standard enabled development reasonable amount portable parallel software 
groups working machines cm intel paragon ibm sp cray spent considerable effort past years develop software take immediate advantage new machines support mpi message passing standard suitable unix software environment 
architecture constructed distinct processor pentium pro machines having gbytes ram gbytes disk space 
machines differ primarily network topology 
cost machines fall roughly 
price construct equivalent system go press may 
loki theoretical division los alamos national laboratory loki constructed nodes described table 
machine contains gbytes memory gbytes disk 
port full duplex ethernet cards allowed experiment variety network topologies hypercube 
fifth ethernet port connected com ii switch tx port full duplex fast ethernet switches provide connectivity front server bypassing multihop hypercube routes 
early lesson learned memory bandwidth pentium pro chipset sufficient support mbytes sec message traffic node tcp udp protocols due copies data kernel user space results quoted loki connected split switch topology ethernet ports node 
video card node strictly necessary required access initial bios setup screen see certain hardware error messages 
caltech jpl constructed nodes identical loki 
primary differences link dfe tx mb fast ethernet cards bay networks way fast ethernet switch western digital gbyte drives node dram 
total price including sales tax 
advantages commodity architecture commodity hardware upgraded little difficulty 
machines described upgraded different brand microprocessor mhz dec alpha cpu replacing motherboard processor 
memory disk network systems re 
linux operating system supports pentium alpha software environment remain upgrade 
maintenance contracts current workstations supercomputers expensive 
expect pay price machine year hardware support costs 
hardware support demanding commodity parallel architectures consist replicated parts 
simple matter keep spare parts spare node hand 
converts usual emergency phone calls vendor minute swap offending part 
parts memory network cards traditionally covered lifetime warranty single part machines described costs replace apart ethernet switch 
significantly software maintenance systems significantly complex machines equivalent performance significant advantage small groups able afford additional system management expense typical parallel supercomputer 
technology described complex 
fact machines described sent shipping supercomputing pittsburgh november connected additional ethernet hardware form single processor machine demonstrated conference 
performance results low level benchmarks measures disk memory bandwidth table stream lmbench performance analysis tools 
note memory bandwidth improvement coming dram clearly discernible improving memory read bandwidth intel vs fx board write copy bandwidth somewhat lesser degree 
space detailed data table loki architecture price september 
qty 
price ext 
description intel pentium pro mhz cpu cache heat sink fan intel vs fx venus motherboard ns parity fpm mb node quantum mbyte ide hard drive cogent em tx pci quartet fast ethernet smc fast ethernet pci card trio mb pci video card atx case com ii switch port fast ethernet ethernet cables total table memory disk micro benchmarks 
bandwidth reported mbytes sec 
identical loki nodes compare fast page mode fpm dynamic random access memory dram extended data dram 
benchmark bw fpm bw stream copy stream scale stream add stream triad lmbench mem read lmbench mem write lmbench mem copy disk dram typically improves performance nas benchmarks representative fortran codes 
spec benchmark suite improves performance lesser degree average components show increases 
table network bandwidth latency numbers variety protocols 
salmon warren message passing interface small fast implementation table comparison various message passing protocols 
mpich tcp udp net numbers linux 
bandwidth reported mbytes sec 
latencies round trip time microseconds 
column includes latency added fast ethernet switch opposed direct connection crossed rx tx cable 
version bw lat 
lat 
sw mpich mpich lam lam tcp socket udp socket net minimal set message passing interface mpi functions tcp sockets described 
mpich portable mpi implementation argonne national laboratory mississippi state university 
lam portable mpi implementation ohio state university 
net user space message library avoids udp tcp socket overhead protocols incur 
application benchmarks results hashed oct tree code authors warren salmon developed considerable software infrastructure support large body simulations 
needing little function send receive messages code tuned refined generations parallel architectures awarded gordon bell prize performance category 
offers reasonable way compare commodity parallel architecture parallel supercomputers concerted effort optimize code architectures 
basic algorithm may divided stages 
discussion necessarily brief 
detailed discussion intricacies code please consult web page qso lanl gov 
particles domain decomposed spatial groups 
second distributed tree data structure constructed 
main stage algorithm tree traversed independently processor requests non local data generated needed 
implementation assign key particle selfsimilar space filling curve morton ordering 
maps points dimensional space dimensional list maintains spatial locality possible 
domain decomposition obtained splitting list number processors pieces 
implementation domain decomposition practically identical parallel sorting algorithm modification amount data ends processor weighted associated item 
morton ordered key labeling scheme implicitly defines topology tree possible easily compute key parent daughter boundary cell key 
hash table order translate key pointer location cell data stored 
level indirection hash table catch accesses non local data allows request receive data processors global key name space 
efficient mechanism latency hiding tree traversal phase algorithm critical 
data structure manipulation support fundamental approximation employed gm ij jd ij gm cm cm cm gamma cm vector center mass particles appear summation left hand side ellipsis indicates terms multipole expansion 
benchmark follows machines running code exception machine specific optimizations inner loop 
intel machines cm inner loop coded assembly language 
machines sp loki decompose reciprocal square root function required gravitational interaction table lookup chebychev polynomial interpolation newton raphson iteration algorithm karp 
algorithm uses adds multiplies requires floating point operations interaction count floating point operations interaction machines hardware square root function 
skews comparison actual application performance quote number gravitational interactions performed second 
simulation april may ran simulation particles processors loki timesteps 
simulation interrupted due scheduled power outage machine room april 
april may code ran continuously days restarts 
habit staying night watching job run latest hardware supercomputer center restart crashes allocated table performance results 
calculate forces particles accuracy line particles 
times reported wall clock time seconds includes message passing load imbalance overheads 
benchmark requires computation gravitational interactions 
new inner loop optimizations applied final result table loki attempting extrapolate scaling efficiency loki possible 
site machine procs theta time gflops mflops proc sandia asci red sandia asci red lanl tmc cm caltech intel paragon nrl tmc cm caltech intel delta nas ibm sp wn jpl cray lanl sgi origin lanl cm vu sc loki lanl loki time valuable lose running job size interruption nearly 
simulation spherical region space mpc diameter region large contain typical galaxies 
region inside sphere diameter mpc calculated high mass resolution buffer region mpc particle mass times higher outside provide boundary conditions 
initial conditions extracted point initial dataset calculated point fft loki cold dark matter power spectrum density fluctuations 
simulation carried theta floating point operations petaflops 
created data files totaling gbytes 
single data file simulation mbytes size written striped disks system obtaining aggregate bandwidth mbytes sec 
entire simulation required computation theta interactions wall clock time seconds hours just seventeen days throughput theta floating point operations second mflops 
simulation loki consisted operations single simulation performed parallel supercomputer prior april performed simulation asci intel system times particles times floating point operations 
better performance result obtained initial timesteps simulation 
computed theta interactions seconds wall clock time throughput theta floating point operations second gflops 
result better mflops quoted initial stages calculation require time spent tree traversal overhead 
important note useful accomplished algorithm floating point operations reflected number mflops report 
purpose avoid doing floating point operations possible 
nas parallel benchmarks results shown table nas parallel benchmarks version results sgi obtained npb web page 
pentium pro take great care assure compiler flags operating system provide byte alignment double precision floating point variables performance suffer greatly proper alignment maintained 
especially true malign double flag improve performance factor 
sure linux libc version greater assure stack properly aligned 
table sixteen processor performance mops class npb benchmarks 
data loki portland group pgf rel fortran compiler gnu compilers asci intel system rel sgi origin 
loki asci sgi gnu red origin bt sp lu mg ft ep tools support parallel computation timing performance monitoring pentium architecture supports bit counter incremented clock tick requires assembly instructions access 
mhz pentium pro supplies realtime clock tick size invaluable performance tuning providing messages accurate timestamps 
table data npb class benchmarks loki 
column denotes number processors data mflops sec mops sec 
data plotted 
nc bt sp lu ft mg pentium pentium pro processors support advanced set hardware diagnostic timing counting routines 
allow direct measurement small time intervals counting cache misses profiling support 
users access capabilities program designed allows access performance monitoring features pentium pentium pro 
processors allow monitoring performance events simultaneously 
pentium pro events monitored including floating point operations floating point divides multiplies memory cache loads stores outstanding bus requests 
facilitate monitoring events life process developed complement 
multiplexes performance monitoring events subset produce ensemble approximation processor utilization 
codes run longer sec pentium pro user receives accurate estimate performance monitoring events 
allow glimpse internal workings pentium pentium pro previously possible operating systems 
tools production code code fragments provide insight code performance 
astute programmer performance monitoring tools provide sufficient information determine certain optimizations warranted exactly scaling nas class benchmarks loki 
increase performance 
message passing interface mpi publicly available implementations message passing interface mpi library 
possible perform computations libraries performance optimal 
certainly fault implementation simply impossible support maximally efficient communication maximally portable library 
close inspection available mpi codes decided write minimal implementation scratch wade layers layers mpich lam codes 
spend extensive effort implementing mpi functions concentrated efficient implementations basic functions test wait important collective functions reduce bcast gather 
roughly week effort minimal mpi library capable running version mpi implementation nas parallel benchmarks 
minimal library implements important mpi functions fortran lines source header files including comments 
may compared lines code ohio state lam implementation mpich distribution lines examples lines device specific 
needless say considerably easier understand happening lines code vs somebody 
currently performance mpi provisionally named salmon warren message passing interface measured improve message bandwidth significantly general purpose implementations 
performance lam flag forces efficient protocol expense features quite close lam unable run programs ran fine flag 
discussion clear commodity parallel processing cpp architectures loki perform role departmental supercomputer 
convincing evidence put forth fact performed simulations requiring gbytes memory operations 
flop rates measure npb version class benchmarks mflops factor single cpu cray running npb version benchmarks 
version npb benchmarks restrictions optimizes algorithms defined pencil fashion willing spend time optimize version benchmarks loki advantage 
main advantage cpp architectures may affordable dedicated computing resources achieving throughput equivalent larger machines shared users 
limitations cpp architecture scale 
loki configured fast ethernet interfaces capable aggregate mbytes sec practice drive fast ethernet interfaces full potential 
memory bandwidth pentium pro motherboard chipset capable keeping fast ethernet ports time conventional tcp udp message protocols 
limits performance node roughly mbytes second shown pci bus platform capable supporting rates mbytes sec 
faster network hardware help 
order obtain better performance needs greatly increased memory copy bandwidth implementation active messages net avoid buffer copies kernel space user space 
comparing machines benchmarks reported run loki similar suite benchmarks run results similar limitations machines running quite versions operating system software compilers higher bandwidth memory fpm memory 
compare loki results obtained nodes asci red system janus incidentally binary compatible loki object file level 
janus exactly pentium pro processor amount memory compiler loki 
differences network janus times faster mbytes sec latency microseconds round trip memory bandwidth higher 
janus advantage processor level ranges table 
estimate roughly half improvement comes better memory bandwidth janus nodes 
conclude surprisingly 
switched fast ethernet exotic networking technology appears fairly small effect performance processor machine nas benchmarks exception message bandwidth hungry benchmark 
effect improved memory bandwidth interleaved memory janus network advantage 
unfortunately intel discontinued orion chipset supports interleaved memory wait patiently see new generation intel sdram offer 
seen memory bandwidth critical floating point performance network performance 
reason multiple processors node smp idea applications 
simply shortage memory bandwidth worse 
terms price performance note time may just buying gbytes memory sgi origin machine costs roughly twice loki 
neighborhood price floating point performance loki cpu origin amount memory disk space entry level machine certainly capable supporting large computations 
striking features loki excellent machine balance fallen naturally spending roughly equivalent amounts processor memory disk network subsystems 
careful fall trap buying machine loaded horsepower lacking memory subsystems absolutely required accomplish useful 
look vendor reported prices nov npb class capable machines reported processor origin processor ibm sp sc dec alphaserver find price performance cpp machines npb mpi fortran benchmarks better factor 
example time processor sp sc machine run npb version class bt benchmark seconds beating loki speed factor cost times higher 
sgi runs benchmark seconds times faster cost times higher 
commodity components offer alternative route follow search supercomputer performance 
mere cost advantage nearly order magnitude cases intangible benefits flexibility ability control computing resources 
shown shelf technology compete successfully best commercial offerings problems 
may arguable commodity supercomputing genuinely superior advantages inherent technology continue grow 
becker sterling savarese 
beowulf parallel workstation scientific computation 
proceedings international conference parallel processing icpp pages 
warren salmon 
astrophysical body simulations hierarchical tree data structures 
supercomputing pages los alamitos 
ieee comp 
soc 
linux documentation project 
sunsite unc edu linux html 
anderson 
pci system architecture 
richardson tx 
warren 
loki commodity parallel processing 
loki www lanl gov salmon sterling 
beowulf machine 
www caltech edu research beowulf 
john 
sustainable memory bandwidth current high performance computers 
www cs virginia edu stream ref html 
larry mcvoy 
lmbench portable tools performance analysis 
reality sgi com lm engr lmbench 
william gropp ewing lusk nathan anthony skjellum 
mpich portable implementation mpi 
www mcs anl gov projects mpi mpich 
ohio state university 
lam mpi parallel computing 
www osc edu lam html 
matt welsh anindya basu thorsten von eicken 
atm fast ethernet network interfaces user level communication 
proceedings third international symposium high performance computer architecture hpca san antonio texas 
warren salmon 
parallel hashed oct tree body algorithm 
supercomputing pages los alamitos 
ieee comp 
soc 
warren salmon 
portable parallel particle program 
computer physics communications 
karp 
speeding body calculations machines hardware square root 
report 
bailey harris van der woo 
nas parallel benchmarks 
technical report nasa ames research center 
npb detailed results graphs raw data 
science nas nasa gov software npb 
intel 
pentium pro processor developer manual volume 
mcgrawhill 
subhash david bailey 
nas parallel benchmark version results 
technical report nasa ames research center 
