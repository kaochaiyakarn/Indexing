ranking spatial databases hanan samet computer science department center automation research institute advanced computer studies university maryland college park md usa proceedings th symposium spatial databases portland maine aug eds 
egenhofer herring lecture notes computer science springer verlag berlin pp 

algorithm ranking spatial objects increasing distance query object introduced analyzed 
algorithm hierarchical spatial data structure 
intended application area database environment spatial data structure serves index 
algorithm incremental sense objects reported query processor algorithm pipelined fashion complex queries involving proximity 
suited nearest neighbor queries property needs fixed advance 
indexes databases facilitate retrieval records similar values 
particular attribute index yields ordering records increasing decreasing order attribute value 
extending idea attribute bit complex 
approach attribute primary attribute additional attribute secondary attribute 
sort records value attribute break ties second attribute 
fine long want records sorted value attribute 
want records ordered value second attribute index useless consecutive records obtained index necessarily ordered value second attribute 
solution build additional index second attribute 
feasible take space 
solution adding second index acceptable long queries combination attribute values 
combination generally meaningless dimensional units attribute values differ 
example attribute age weight corresponding dimensional units years pounds 
case try determine nearest record name john jones terms age weight don commonly accepted notion meaning year pound unit 
spatial databases distinguished conventional databases part fact attributes locational case supported part national science foundation iri asc 
proc 
th symposium spatial databases portland maine august dimensional unit 
importantly common dimensional unit distance space 
distance unit regardless dimensionality space spanned locational spatial attributes records long cover space 
means combine attributes seek determine nearest record type name chicago corresponding unit distance regardless locational attributes associated note just attribute dimensional unit distance locational attribute 
example size attributes measured terms distance locational 
attributes corresponding person height waist locational attributes combined 
addition different spatial databases distinguished types records store 
types points objects 
define zero volumetric measure nonzero volumetric measure 
words extent discrete 
note records conventional database discrete viewed points higher dimensional space 
difference case spatial data dimensional unit attribute distance space 
regardless distinction types data stored spatial database interested ordering records basis combination values locational attributes 
ordering facilitate storage records storage methods inherently onedimensional 
desirable ordering preserve proximity sense records close multidimensional space formed ranges values locational attributes close ordering 
course just locational attribute ordering non locational attribute 
example ordering technique hashing 
variants hashing depending resulting ordering explicit implicit 
explicit ordering results particular mapping higher dimensional space dimensional space 
example mapping interleaves individual bits binary representation locational attribute values 
mappings result known space filling curves peano hilbert sierpinsky curve property records close multidimensional space formed ranges locational attribute values close range mapping 
bucketing methods examples implicit ordering 
case records sorted basis space occupy space formed values locational attribute grouped cells buckets finite capacity 
course just locational attribute implicit explicit orderings equivalent 
records extent non point spatial objects notion bucket meaningful 
particular possible proc 
th symposium spatial databases portland maine august approaches 
approach finds minimum bounding box object 
boxes may subsequently aggregated hierarchies 
case minimum bounding boxes may necessarily disjoint 
drawback object associated just bounding box 
particular point search object contains just don find object contains bounding box containing mean objects bounding boxes contain alternative approach decomposes objects bounding boxes contain disjoint 
boxes may subsequently aggregated hierarchies 
point just bounding box contains objects contain objects database contain query fails 
drawback object decomposed pieces associated boxes 
want determine objects associated region spans bounding boxes may report particular object 
queries post processing step removes duplicate answers 
process removing duplicate may require process complex sorting depending nature object methods may applicable 
ordering provided index useful ranking data closeness particular value attribute ability perform ranking depend record exists database attribute value value serves point ranking 
focus issue ranking spatial databases 
moment assume just attribute locational non locational 
case explicit implicit indexes equivalent derive ranking directly index attribute 
particular index obtained sorting data respect particular point usually smallest possible value zero attribute value type ratio 
example consider non locational attribute weight corresponding index 
suppose database records correspond individuals want find individuals order closeness weight john smith weight pounds 
answer computed looking value index proceeding directions index get nearest individuals weight constant time 
rebuild index want able answer query deals sam jones weight pounds 
case locational attribute values type distance wish obtain ranking records terms distance particular value locational attributes 
index explicit derive ranking directly index locational attributes 
example built index basis distance records particular point distance metric 
want obtain records order respect proc 
th symposium spatial databases portland maine august new point resort 
words simply say distance equal addition subtraction constant equal distance depending relative position record respect done just attribute regardless locational 
rebuild index costly process need query 
usually done implicit index discussed earlier sorting objects respect space occupy respect fixed point 
ranking queries frequently spatial databases browsing applications 
example may wish find houses database order distance point location desired ranking partial 
example may wish find nearest city population greater las vegas 
case index locational attributes corresponding location cities want obtain cities order cities distance las vegas 
population cities examined increasing order distance las vegas 
process ceases condition value non locational population attribute satisfied 
clear query find closest city las vegas partial ranking query 
observe key utility ranking process closest record satisfy query condition continue search computed current answer 
restart search point index 
show respond ranking queries spatial database spatial data organized implicit index 
number possible solutions depending nature implicit index 
general solution designed minimize number blocks underlying decomposition examined 
order able analyze execution cost concrete representation 
choose representation decomposes objects bounding boxes contain disjoint 
assume regular decomposition provided pmr quadtree 
course representations tree implementation bounding boxes disjoint tree 
methods equally applicable representations 
data structure mentioned earlier algorithm developed pmr quadtree adapted hierarchical spatial data structures term container block 
term denote area space may decomposed basis number particular nature spatial objects contains 
examples structures include proc 
th symposium spatial databases portland maine august trees trees trees 
pmr quadtree uses regular decomposition space index spatial objects 
quadtree block square hypercube higher dimensions 
leaf blocks contain spatial objects pointers non leaf blocks decomposed sub blocks number dimensions 
fig 
presents example dimensional pmr quadtree splitting threshold objects points representing cities 
cities inserted order chicago mobile toronto buffalo denver atlanta miami 
inherent definition quadtree representation recursively decomposes space congruent blocks condition satisfied 
retrieval blocks comprise quadtree facilitated number different access structures 
common access structures tree having sons level see fig 
tree tree finding ordering blocks 
example ordering achieved interleaving bits comprising binary representations coordinates upper left corners block 
numbers keys tree 
implementation discussion algorithm works implementation 
pmr quadtrees differ quadtree variants way object insertions trigger decomposition quadtree blocks 
particular insertion object number objects leaf block intersected object exceeds threshold value similar bucket capacity quite concept split objects reinserted new sub blocks intersect 
note number objects leaf block may exceed threshold value 
number objects leaf block depth bounded assuming limit depth tree 
overview algorithm top solution 
alternative bottom solution 
case algorithm locates block containing query object finds nearest object examining adjacent neighboring blocks clockwise order 
depending nature distance metric employed may examine blocks immediately adjacent technique termed bottom obtaining neighbors neighbor finding techniques restart search root tree 
case pointer tree quadtree representation shown visit constant number blocks operation 
method fast especially block brothers may visit blocks node 
worse need closest object restart search left making unsuitable ranking 
contrast algorithm simply continue search object 
proc 
th symposium spatial databases portland maine august mobile toronto buffalo denver atlanta chicago miami toronto buffalo denver chicago atlanta miami mobile fig 

pmr quadtree representing points corresponding cities 
block decomposition induced quadtree tree access structure blocks key efficiency bottom method works principle block empty siblings contain objects decomposed space 
acts pruning device search 
interested obtaining ranking top method 
find leaf nodes containing recursion keep track blocks seen 
visit leaf node want remember objects encountered block may closest ones 
achieve modifying top algorithm maintain priority queue record blocks descendants visited objects proc 
th symposium spatial databases portland maine august visited 
top method easy find leaf node containing need able extend technique find nearest object leaf may empty object leaf may quite far query object 
problem unwind recursion find nearest object 
want find second nearest object solution tougher 
resolve problem replace recursion stack block examined block nearest priority queue 
key solution objects stored priority queue 
leaf block encountered attempt insert objects stored priority queue 
insert object reported 
determined checking distance query object distance case contained block closer processed earlier 
observe data objects query objects arbitrary type points rectangles polygons 
requirement distance function query object type object type stored index feature metric query object type container block type block metric 
distance functions consistent 
consistency means feature distance query object exist block containing distance equal hold distance functions distance metric common examples euclidean manhattan chessboard metrics 
consistency assumption means distance query object block contains zero 
algorithm works dimension examples give restricted dimensions 
query object need space dataset 
algorithm consider regular recursive top traversal index locate leaf block containing query object 
note block 
traversal initiated root block second argument 
queryobject block queryobject container block block block leaf block report leaf block block child block container block block queryobject child enddo endif endif proc 
th symposium spatial databases portland maine august task extend algorithm find nearest object query object 
particular leaf block containing queryobject line start examining objects contained block 
object closest query object reside quadtree block 
finding block may fact require unwinding recursion top descending deeper tree 
furthermore block doesn aid finding nearest object 
resolve dilemma replace recursion stack regular topdown traversal priority queue 
addition priority queue container blocks objects put queue leaf blocks processed 
key order elements queue distance query object 
order distinguish elements equal distance query object adopt convention blocks ordered objects different objects ordered arbitrary unique rule 
possible avoid reporting particular object necessary disjoint decomposition object may associated block pmr quadtree tree 
container block examined reaches head queue 
time blocks objects closer query object looked 
initially container block spanning index space sole element priority queue 
subsequent steps element head queue closest element examined retrieved queue emptied 
queryobject queue block enqueue queue dist block queryobject block isempty queue element dequeue queue element spatial object element queue queue enddo report element elsif element leaf block object leaf block element dist object queryobject dist element queryobject enqueue queue dist object queryobject object endif enddo element non leaf container block child block container block element enqueue queue dist child queryobject child enddo proc 
th symposium spatial databases portland maine august endif enddo lines initialize queue 
line closest object reported 
point routine query processor take control possibly resuming algorithm time get closest object alternately terminate objects desired 
recall representations spatial object may span container blocks 
algorithm guard objects reported 
test statement line ensures objects reported put queue 
properly blocks retrieved queue spatial objects distance 
feature may retrieved queue block containing distance query object 
feature encountered block way knowing reported 
loop lines eliminate duplicate instances object queue 
inducing ordering features distance query object instances object clustered front queue instance reaches front 
reason check duplicates manner representations priority queue efficient test membership 
removal duplicates largely byproduct algorithm 
give example illustrate algorithm works 
consider simple database fig 
containing dimensional point data 
assuming euclidean distance metric want find city closest point population 
scenario query processor interacts algorithm retrieve cities order distance point 
note algorithm inserts city queue population high satisfy query condition 
reason checking satisfaction condition require database access 
access unnecessary distance query point may result coming front queue time algorithm terminates time answers output 
shows pmr quadtree splitting threshold value containing points corresponding cities 
cities population denoted solid dots query point denoted 
concentric circles drawn query point relative distances obvious 
leaf blocks labelled number 
description pmr quadtree block denoted depth label north descendant leaf block 
root block denoted ne son 
elements priority queue listed brackets order distance query point 
initially queue contains root block 
step root block retrieved queue non leaf block sub blocks put queue 
block dequeued sub blocks enqueued 
proc 
th symposium spatial databases portland maine august mobile toronto buffalo denver atlanta chicago miami city pop 
pos 
atlanta buffalo chicago denver mobile toronto miami fig 

example data set nearest neighbor query step leaf block dequeued contains objects 
leaf block contains buffalo buffalo inserted queue buffalo 
steps sub blocks put queue leaf retrieved queue contains objects city toronto enqueued leaf block processed toronto buffalo 
action taken dequeued empty toronto city reported query processor 
query processor discards population requests closest city 
top elements queue empty leaf blocks action taken 
buffalo reported query processor population low 
point queue contains 
taken queue sub blocks enqueued resulting 
subblocks put queue resulting 
blocks empty contains chicago put queue chicago 
chicago reported query processor terminates search returns chicago result query 
analysis solution problem finding nearest object efficient known methods 
general respects 
proc 
th symposium spatial databases portland maine august algorithm works point data relies specialized data structure achieve optimality execution time approximate nearest neighbor queries 
structure static rebuilt points introduced 
addition amenable practical implementation 
authors implemented greatly simplified data structure sacrificing optimality guarantee algorithm yielding approximate answer resembles trees priority queue query process 
contrast algorithm arbitrary data objects large class spatial indices 
course level efficiency may depend type spatial index 
main advantage method compared proposed efficiently find nearest objects nearest 
method relies quadtree decomposition 
algorithm limited points query objects tree spatial index may possibly extended wider class query objects spatial indices 
algorithm find nearest neighbors query object 
case fixed 
contrast algorithm finding nearest neighbors 
particular computed nearest neighbors st nearest neighbor desired algorithm restarted anew 
analysis incomplete gives indication worstcase behavior algorithm 
various simplifications ease task 
assume calculating distance metric takes constant amount time 
true simple objects points lines may true complex ones polygons 
second spatial index assumed properties pmr quadtree 
suppose objects 
object types points lines shown certain assumptions data distribution tree depth number blocks pmr quadtree proportional 
assume objects question stored spatial index ignore cost preprocessing needed build index 
order complete analysis space requirements algorithm need know maximum size priority queue 
consider queue arbitrary time execution algorithm distance object head queue query object 
objects queue distance query object contained blocks distance query object blocks retrieved queue processed 
worst case scenario leaf blocks containing objects closer query object nearest object 
case objects inserted queue nearest 
gives worst case bound size queue 
pathological case arise 
practice maximum size queue smaller 
objects need ranked distance query object proc 
th symposium spatial databases portland maine august execution time algorithm worst log number leaf blocks spatial index maximum number items priority queue 
assumes priority queue implementation update operations take log time 
discussed worst case gives bound log 
compares favorably dimensional sorting algorithms 
alternative solution ranking objects compute distance query object sort conventional sorting technique 
cost log number objects 
contrast ranking algorithm advantage doesn retrieve objects 
dynamic 
achieve better result log practice don sort objects sort container blocks 
quite important executing disk environment inspection container blocks require examine contents may require disk access 
ranking algorithm container blocks inserted priority queue may empty leaf blocks 
examine blocks putting queue just insert non empty ones 
problem executing disk system require disk access time check container empty 
contrast insert blocks priority queue regard contents may look may get pruned search virtue distance query object search terminated finding object closer query object 
want ranking objects may advantageous inspect blocks putting queue fewer priority queue operations needed addition queue smaller 
partial ranking objects algorithm visits minimal number container blocks sense th nearest neighbor distance query object container blocks lie completely part contents examined time nearest neighbors 
note container blocks regardless value worst case execution time finding total ranking log 
algorithm designed sand spatial database environment pmr quadtree underlying spatial index 
algorithm limited pmr quadtree 
minor modifications wide class spatial indices includes tree variants trees 
successfully adapted algorithm tree index 
basic requirement spatial index satisfy algorithm useful spatial index decomposes space blocks organized hierarchically tree proc 
th symposium spatial databases portland maine august fashion 
course analysis execution time algorithm depends characteristics pmr quadtree may change spatial data structures 

aref samet 
extending dbms spatial operations 
gunther schek editors advances spatial databases nd symposium ssd pages berlin 
springer verlag 
lecture notes computer science 

aref samet 
uniquely reporting spatial objects operation comparing spatial data structures 
proceedings fifth international symposium spatial data handling pages charleston south carolina august 

arya mount netanyahu silverman wu 
optimal algorithm approximate nearest neighbor searching 
proceedings fifth annual acm siam symposium discrete algorithms pages arlington va january 

comer 
ubiquitous tree 
acm computing surveys june 

goldschlager 
short algorithms space filling curves 
software practice experience january 

guttman 
trees dynamic index structure spatial searching 
proceedings sigmod conference pages boston june 

hoel samet 
efficient processing spatial queries line segment databases 
gunther schek editors advances spatial databases nd symposium ssd pages 
springer verlag berlin 
lecture notes computer science 

lindenbaum samet 
probabilistic analysis trie sorting large collections line segments 
department computer science cs tr university maryland college park md april 

nelson samet 
population analysis hierarchical data structures 
proceedings sigmod conference pages san francisco may 

robinson 
tree search structure large multidimensional dynamic indexes 
proceedings sigmod conference pages ann arbor mi april 

roussopoulos kelley vincent 
nearest neighbor queries 
proceedings acm sigmod international conference management data pages san jose ca may 

samet 
neighbor finding techniques images represented quadtrees 
computer graphics image processing january 

samet 
applications spatial data structures computer graphics image processing gis 
addison wesley reading ma 

samet 
design analysis spatial data structures 
addison wesley reading ma 

stonebraker sellis hanson 
analysis rule indexing implementations data base systems 
proceedings international conference expert database systems pages charleston sc april 
