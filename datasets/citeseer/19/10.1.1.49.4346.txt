syntax linear logic philip wadler wadler dcs glasgow ac uk department computing science university glasgow qq scotland 
standard syntax girard linear logic due abramsky standard semantics due seely 
alas incoherent different derivations syntax may assigned different semantics 
reviews standard syntax semantics discusses problem arises standard approach solution 
new solution proposed ideas taken girard logic unity 
new syntax pattern matching allowing concise expression programs 
inside linear logic programming language struggling get 
wish define analogue lambda calculus solve equation lambda calculus intuitionistic logic linear logic language look 
think answer straightforward 
linear logic girard gir syntax abramsky abr semantics seely see 
standard 
abramsky inspired earlier lafont laf holmstrom hol turn inspired related systems chirimar gunter riecke cgr lincoln mitchell lm mackie mac troelstra tro wadler wad wad 
seely provided categorical model subsumes models coherence spaces gir event spaces pra games ls geometry interaction aj 
unfortunately abramsky syntax incoherent seely semantics different derivations term may yield different semantics 
basic problem promotion commute substitution 
syntaxes suffer similar problem form meaning difficult assign meaning models 
rightly credits abramsky influence wrong burden blame 
syntax coherent operational model uses 
brookes editors mathematical foundations programming semantics new orleans april springer verlag lncs 
difficulty spotted previously wad :10.1.1.24.7472
researchers observed problem proposed solution form syntax boxes promotion rule way boxes proof nets 
notable regard benton bierman de paiva hyland provides thorough natural deduction sequent versions linear logic categorical semantics associated proof theory 
presents new syntax linear logic resolves promotion problem 
new syntax follows naturally idea patterns sequents represent destructors 
closely related girard logic unity lu polarities gir 
syntax suggestion jean yves girard pointed problems noted standard syntax resolved syntax lu 
syntax bears passing resemblance moggi calculus monads mog 
syntax expressed way dereliction promotion explicit contraction weakening left implicit 
linear logic resource conscious logic adequate conscious dereliction promotion 
semantics introduces sufficient coherence properties precise order contraction weakening applied irrelevant 
details may safely omitted programme yielding economic mode expression 
truly desire control details variant syntax contraction weakening explicit 
approach giving syntax linear logic lu appears wad 
presents tutorial natural deduction sequent calculus takes advantage pattern matching stresses syntactic aspects proof reduction ignoring semantics 
remainder organised follows 
section presents abramsky syntax 
section presents seely semantics 
section presents new syntax 
section compares new syntax girard logic unity 
section sketches variations new syntax 
old syntax simplicity restrict ourself connectives omega tensor product gammaffi linear implication product 
course 
type proposition built connectives base types 
omega gammaffi range types range base types 
types terms construct destruct values type 
ht ui hx yi range terms range variables 
comparison abramsky omega merely reflects preference traditional notation significant difference 
assumption form variables distinct gamma delta range assumptions 
write gamma delta catenation assumptions appears assumed variables gamma delta disjoint 
judgement form gamma rules version linear logic shown 
rule zero hypotheses horizontal line 
rule term form exception rules exchange cut 
exchange rule expresses order assumptions irrelevant 
cut rule uses notation stand term derived substituting occurrences rules sequent calculus style constructors represented rules omega connective appears consequent right destructors represented rules omega connective appears left 
promotion constructs term course type rule 
dereliction uses variable course type contraction duplicates weakening discards refer collectively rules 
gammaffi rule allows apply variable term 
readers may familiar application rule natural deduction allows apply term term 
gammaffi gamma gammaffi delta gamma delta rule derived follows 
gamma gammaffi delta id gammaffi delta gammaffi cut gamma delta note central role played cut 
sequent natural deduction versions linear calculus shown equivalent lincoln mitchell lm 
various mixtures systems various researchers cgr wad wad 
id exchange gamma delta gamma delta cut gamma delta gamma delta omega gamma delta gamma delta omega omega gamma gamma omega gammaffi gamma gamma gammaffi gammaffi gamma delta gamma gammaffi delta gamma gamma gamma ht ui gamma gamma hx gamma gamma yi promotion xn xn dereliction gamma gamma contraction gamma gamma weakening gamma gamma fig 

old syntax example judgements 
gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi si omega gammaffi cut rule property system terms uniquely encode derivations 
example judgement derivation id dereliction promotion derivation id dereliction id promotion cut may vaguely disturbing 
shall see shortly profoundly disturbing derivations attached different semantics 
semantics section presents seely model linear logic restricted case intuitionistic linear logic 
seely model normally thought deriving autonomous categories object required model classical linear logic 
anticipating objects model types assumptions arrows model terms gamma delta range objects range arrows 
model intuitionistic linear logic provided category structure 
symmetric monoidal closed unit object tensor omega internal hom gammaffi 
transpose gamma omega curry gamma 
gammaffi counit apply gammaffi omega possesses finite products terminal product 
unique arrow terminal gamma mediating morphism gamma gamma ht ui gamma projections fst snd possesses comonad 
kleisli operator kleisli counit counit isomorphisms 
omega 
induce comonoid structure object natural discard gamma gamma gamma gamma 
gamma 
duplicate gamma gamma gamma gamma gamma 
omega hid idi gamma gamma gamma gamma 
omega categorical model obtained associating base type object category inducing map types objects 
write type corresponding object 
assumption gamma possesses corresponding object gamma omega delta delta delta omega empty assumption corresponds unit object judgement gamma corresponds arrow gamma shows derivation induces arrow semantics 
judgement may derivation verify possible derivations judgement assign semantics 
id id gamma 
exchange gamma omega omega omega delta gamma 
gamma omega omega omega delta gamma omega omega omega delta gamma 
cut gamma gamma 
omega delta gamma 
gamma omega delta omega id gamma gamma 
omega delta gamma 
omega gamma gamma 
delta gamma 
gamma omega delta omega gamma gamma 
omega omega gamma omega omega gamma 
gamma omega omega gamma omega omega gamma 
gammaffi gamma omega gamma 
gamma curry gamma gamma gamma gamma 
gammaffi gammaffi gamma gamma 
omega delta gamma 
gamma omega gammaffi omega delta omega id omega id gamma gamma gamma gamma gamma 
omega gammaffi omega delta gammaffi omega omega delta apply omega id gamma gamma gamma gamma gamma 
omega delta gamma 
gamma gamma 
gamma gamma 
gamma ht ui gamma gamma 
gamma omega gamma 
gamma omega id omega fst gamma gamma gamma 
gamma omega gamma 
gamma omega gamma 
gamma omega id omega snd gamma gamma gamma gamma 
gamma omega gamma 
promotion omega delta delta delta omega delta delta delta gamma 
omega delta delta delta omega delta delta delta kleisli gamma gamma gamma gamma gamma 
dereliction gamma omega gamma 
gamma omega id omega counit gamma gamma gamma gamma gamma gamma 
gamma omega gamma 
contraction gamma omega omega gamma 
gamma omega id omega duplicate gamma gamma gamma gamma gamma gamma gamma 
gamma omega omega gamma omega omega gamma 
weakening gamma gamma 
gamma omega id omega discard gamma gamma gamma gamma gamma gamma 
gamma omega gamma gamma 
fig 

semantics property called coherence importance noted breazu tannen coquand gunter scedrov 
case derivations judgement differ exchange cut rules uses rules encoded term 
coherence guaranteed exchange fact omega symmetric monoidal 
unfortunately cut rule introduce incoherence conjunction promotion 
derivation previously induces semantics id id gamma 
dereliction counit gamma gamma gamma 
promotion kleisli counit gamma gamma gamma gamma gamma gamma gamma gamma 
derivation previously induces semantics id id gamma 
dereliction counit gamma gamma gamma 
id id gamma 
promotion kleisli id gamma gamma gamma gamma gamma gamma 
cut counit gamma gamma gamma 
kleisli id gamma gamma gamma gamma gamma gamma 
necessarily equal 
arrow necessarily identity arrow 

counterexample 
syntax coherent semantics 
problem arises promotion rule 
theorem 
syntax coherent semantics promotion 
term contain constructor derivations semantics cut 
proof examination overlapping rules 
variations abramsky syntax cited suffer problem form 
natural deduction system problem reveals failure substitution lemma substitution commute promotion wad :10.1.1.24.7472
difficulty root problems lincoln mitchell lm chirimar gunter riecke cgr encountered subject reduction theorems forcing restricted various ways 
way fix problems restrict class categorical models 
earlier wad shown substitution commutes promotion categorical model satisfies counit kleisli id id satisfactory models cited satisfy restriction :10.1.1.24.7472
similar restrictions appears hearn filinski fil may explain 
fix revise syntax promotion records explicitly substitutions occured 
suggestion benton bierman de paiva hyland reddy red 
syntax promotion changed term replaced free variables square brackets concrete syntax concrete syntax chosen resemble meta syntax substitution roles similar 
revised promotion rule follows 
promotion promotion free variables term substitutions variables explicit term 
acting barrier substitution new syntax performs role boxing proof nets gir 
possible show boxed syntax coherent derivations term semantics 
returning example derivation id dereliction promotion second id dereliction id promotion cut terms different problem assigned different semantics 
key idea barrier promotion indicating substitutions occur 
section reveal different syntax similar barrier 
new syntax new syntax significant changes 
introduces notion pattern 
previously assumptions paired variables types pair patterns types 
second various instances appeared previously associated omega rules consolidated single 
third explicit indication contraction weakening terms 
third change convenient essential see undo section 
type term construct values type pattern destruct values type 
exception gammaffi terms construction destruction 
term 
hp qi ht ui range patterns range terms range variables 
note patterns types omega may nested patterns type may 
see system guarantees coherent semantics nested patterns allowed coherence lost 
assumption form variable appears patterns combined 
gamma delta range assumptions judgements form gamma rules version linear logic shown 
exception new rule correspondence rules old syntax rules new syntax 
omega rules introduce patterns terms 
terms factored separate rule 
rules introduce pattern explicit indication contraction weakening 
appearance patterns contraction helps explain restriction variables substitution associated contraction easier express 
promotion changed addition requiring types assumption patterns assumption 
change critical step patterns act barrier substitution just boxed syntax section 
written boxed syntax written delta delta delta note concrete syntax meta syntax substitution 
new syntax appears compact boxed syntax practice new syntax compact pattern matching contraction weakening explicitly indicated 
rule logical content erasing terms hypothesis gives logical judgement gamma rule simply considered convenient abbreviation derived gammaffi rules cut 
gamma gammaffi gamma gammaffi id id gammaffi gammaffi cut gamma take abbreviation 
id exchange gamma delta gamma delta cut gamma delta gamma delta gamma gamma omega gamma delta gamma delta omega omega gamma gamma omega gammaffi gamma gamma gammaffi gammaffi gamma delta gamma gammaffi delta gamma gamma gamma ht ui gamma gamma hp gamma gamma qi promotion xn xn dereliction gamma gamma contraction gamma gamma weakening gamma gamma fig 

new syntax rules assigning semantics derivation term apply 
rule assigns judgement semantics judgement hypothesis 
theorem 
syntax coherent semantics 
proof examining possible overlaps rules 
example judgements section revisited 
gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi gammaffi hr si omega gammaffi new syntax considerably compact 
returning main example derivation id dereliction promotion second derivation longer valid 
promotion rule longer applies contains patterns proper form 
order obtain semantics previously derivation rewritten 
old id rule yielded replaced id dereliction promotion yields derivations semantics identity arrow promotion possible 
id dereliction id dereliction promotion promotion cut new semantics old 
boxed semantics distinct terms yielding distinct semantics 
old derivation carries new derivation semantics change needed may replace uses id id dereliction promotion add uses 
nested patterns allowed coherence property lost 
consider illegal judgement different proof trees yield judgement 
applies rules order id derelict promote derelict semantics counit kleisli counit simplifies counit second applies rules order id derelict derelict promote semantics kleisli counit counit simplify counit restriction patterns nested 
similar problem omega patterns 
longer explicit terms contraction weakening checked coherence 
coherence guaranteed fact discard duplicate form comonoid duplicating discarding identity duplications different orders meaning 
situation similar exchange appears reason textually indicating contraction weakening indicating exchange 
new syntax satisfies pleasing number equivalences 
case simply binding variable replaced substitution 
constructor meets corresponding destructor substituted 
satisfies pair familiar laws 
points summarised 
theorem 
equations hold syntax semantics 
hp ht ui qi ht ui laws assume collision bound variables law free variables bound law immediate coherence 
laws follow immediately categorical semantics 
law proved induction pattern 
equations instantiated special case patterns 
reminiscent equations satisfied moggi calculus monads mog 
syntax equation depends right counit law comonads second equation depends left counit law comonads moggi calculus equation depends left unit law monads second equation depends right unit law monads 
analogy goes third equation 
moggi equation depends associative law monads equation associative law comonads 
associative laws comonads important verifying coherence new syntax 
logic unity system described closely related girard logic unity lu gir 
inspired trick avoids coherence problems stolen lu 
clarify relation section appropriately simplified version lu 
major differences girard lu version restricted intuitionistic fragment polarities 
variant lu sorts assumptions linear intuitionistic 
linear assumptions pair patterns types form intuitionistic assumptions pair variables types form linear assumptions may contracted weakened intuitionistic assumptions may contraction rule neatly expressed terms variables involves substitution partly explains restriction variables intuitionistic assumptions 
gamma delta range linear assumptions phi psi range intuitionistic assumptions 
judgement form gamma phi linear intuitionistic assumptions separated semicolon 
rules variant lu shown 
close correspondence new syntax called ll short 
previous id rule split rules id id int dealing linear assumption second dealing intuitionistic 
similarly previous exchange rule split exchange exchange int 
logical rules omega gammaffi deal linear assumptions 
promotion logical rules deal relation sorts assumptions contraction weakening logical rules structural rules dealing intuitionistic assumptions 
id id int exchange gamma delta phi gamma delta phi exchange int gamma phi psi gamma phi psi cut gamma phi delta psi gamma delta phi psi gamma phi gamma phi omega gamma phi delta psi gamma delta phi psi omega omega gamma phi gamma omega phi gammaffi gamma phi gamma phi gammaffi gammaffi gamma phi delta psi gamma gammaffi delta phi psi gamma phi gamma phi gamma phi ht ui gamma phi gamma hp phi gamma phi gamma qi phi promotion phi phi dereliction gamma phi gamma phi contraction gamma phi gamma phi weakening gamma phi gamma phi fig 

version logic unity possible translate lu ll 
judgement form gamma phi lu corresponds judgement gamma phi ll phi phi rule lu corresponds rule name ll spectacular exceptions 
id int lu translates combination id dereliction ll 
id int 
id dereliction hand hypothesis dereliction rule lu translate judgement ll 
dereliction gamma phi gamma phi 
gamma phi id int lu corresponds dereliction ll dereliction lu corresponds 
translation induces obvious semantics semantics judgement lu semantics corresponding judgement ll 
analogues theorems section hold 
number rules expect lu derived rules 
important cut int 
cut int phi delta psi delta phi psi rule derived follows 
phi promotion phi delta psi dereliction delta psi delta psi delta phi psi observe semantics identical semantics may offer scope simplification 
variations programmers unfamiliar gammaffi rule sequent calculus may find gammaffi rule natural deduction natural 
hand sequent calculus naturally capture pattern matching omega rules may value exploring hybrid systems 
variation simply replace gammaffi rule gammaffi 
easier programmers follow important logical properties cut elimination lost 
extends straightforwardly handle sums 
phi gamma gamma inl phi gamma gamma inr phi phi gamma phi delta delta gamma delta case inr ug rules rules 
rules exploit power pattern matching thoroughly hope 
instance patterns form inl inr appear nested inside patterns 
open question different approach allows nested patterns 
path direction indicated breazu tannen 
variation include patterns indicate contraction weakening 
grammar patterns divided patterns course patterns superset 
hp qi range patterns range course patterns 
new rules follows 
promotion dereliction gamma gamma contraction gamma gamma weakening gamma gamma dereliction contraction weakening introduce different sorts course pattern promotion allows course pattern 
variation included simply illustrate approach preclude specific patterns indicate contraction weakening 
practice value including detailed information 

am grateful jean yves girard samson abramsky robert seely martin hyland valeria de paiva reddy insights linear logic 
mfps referees detailed valuable suggestions improvement 
abr abramsky computational interpretations linear logic 
workshop mathematical foundations programming language semantics 
appear theoretical computer science 
aj abramsky jagadeesan new foundations geometry interaction 
th symposium logic computer science ieee press santa cruz california june 
bar barr autonomous categories 
lecture notes mathematics springer verlag 
benton bierman de paiva hyland type assignment intuitionistic linear logic 
technical report computing laboratory university cambridge august 
breazu tannen coquand gunter scedrov inheritance explicit coercion 
information 
earlier version appeared symposium logic computer science ieee press asilomar california june 
breazu tannen typed pattern calculus 
th symposium logic computer science montreal june 
cgr chirimar gunter riecke 
linear ml 
symposium lisp functional programming acm press san francisco june 
fil filinski linear continuations 
symposium principles programming languages acm press albuquerque new mexico january 
gir 
girard linear logic 
theoretical computer science 
gir 
girard unity logic 
manuscript 
hol holmstrom linear functional language 
draft chalmers university technology 
laf lafont linear machine 
theoretical computer science 
lm lincoln mitchell operational aspects linear lambda calculus 
th symposium logic computer science ieee press santa cruz california june 
ls lafont streicher 
game semantics linear logic 
th symposium logic computer science ieee press amsterdam july 
mac mackie functional programming language linear logic 
master thesis imperial college london 
mog moggi computational lambda calculus monads 
th symposium logic computer science ieee press asilomar california june 
hearn linear logic interference control 
conference category theory computer science paris september 
lncs springer verlag 
pra pratt event spaces linear logic 
amast algebraic methodology software technology iowa city springer verlag lncs 
red reddy acceptors values 
manuscript december 
see seely linear logic autonomous categories cofree coalgebras 
categories computer science logic june 
ams contemporary mathematics 
tro troelstra lectures linear logic 
csli lecture notes 
wad wadler linear types change world 
broy jones editors programming concepts methods sea israel north holland april 
wad wadler linear logic 
conference partial evaluation semantics program manipulation pepm new haven connecticut acm press june 
wad wadler substitute linear logic :10.1.1.24.7472
workshop mathematical foundations programming language semantics oxford april 
wad wadler taste linear logic 
mathematical foundations computer science poland lncs springer verlag august 
article processed macro package llncs style 
