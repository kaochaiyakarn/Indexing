comparing galois connection widening narrowing approaches interpretation patrick cousot radhia cousot liens dmi ecole normale sup erieure rue ulm paris cedex france cousot dmi ens fr lix ecole polytechnique palaiseau cedex france radhia polytechnique fr 
infinite domains widening narrowing accelerating convergence interpretations shown powerful galois connection approach restricted finite lattices lattices satisfying chain condition 
widely held opinion finite lattices lattices satisfying chain condition strictly increasing chains finite widenings ensure termination interpretations programs infinite lattices 
show general detriment precision prove infinite domains widenings powerful galois connection approach finite lattices lattices satisfying chain condition 
way example various widenings suggested solving non convergence problems left open literature 
upper approximation collecting semantics cc cc cc interpretation program formalized effective computation upper approximation collecting semantics program 
collecting semantics specified fixed point lfp continuous operator con gamma 
cpo greater basis satisfying 
kleene fixpoint theorem prop 
appendix lfp upper bound 
iterates 
defined def def approximation sound sense lfp supported part esprit bra action 
monotony sufficient considering transfinite iterations cc 
basis infimum cpo case lfp written lfp commonly satisfied hypotheses definition collecting semantics specification approximation stronger strictly necessary see discussion various weaker hypotheses cc 
example imperative programs 
assume collecting semantics pascal program program var integer set possible values integer variable starting execution loop body fixed point lfp lfp fi zz continuous additive operator con gamma 

fi xg fi zz complete lattice zz zz zz set integers powerset set sound upper approximation loop invariant fi zz specifying non negative 
ut example logic programs 
logic program containing constant bp herbrand universe family ary functors ground set ground instances clauses immediate consequence operator tp bp con gamma 
bp tp fa 
ground 
model set bp tp characterization theorem van emden kowalski shows model mp complete lattice bp mp lfp tp tp 
ut example functional programs 
cc relational semantics functional factorial program gamma theta def represents non termination fh ig fhn fhn 
fixpoint lfp theta con gamma 
theta fh ig fh ig fhn aei hn gamma aei fg gamma ae ae gamma 
ae ae 
semantic domain theta complete lattice def theta def theta def delta def delta delta observe produces output results terminating non terminating argument terminates frequently ut galois connection approach interpretation principle approach 
galois connection approach interpretation cc cc formalizes idea equation simplified mon gamma 
poset solved iteratively starting basis technique consists understanding discrete approximation extending notion approximation various ways semantic domains products theta powersets function spaces gamma 
cc cc 
galois connection 
correspondence semantic domain version formalized galois connection called pair adjoined functions 
definition 
posets hff fli galois connection written gamma gamma fl ff ff gamma 
fl gamma 
functions gamma ff delta fl ff abstraction precise approximation fl concretization imprecise element soundly approximated example intervals 
cc ordered approximated lattice intervals zz gamma gu zz ug ordered def true def approximation formalized galois connection defined fl 
fl fx zz ug ff ff min maxx example set zz soundly approximated ut soundness precision 
concrete notions soundness precision formalized way respective partial orders interpreted sound approximation precise concrete assertion logically implies 
way means sound approximations precise may case non comparable sound approximations equation states concrete notions soundness precision coincide approximation consists representing concrete assertions fx ff xg assertion example intervals continued 
intervals considered ex 
concrete approximation relation subset inclusion approximation relation defined 
example fi zz fi zz assertion value variable execution precise saying strictly positive 
assertions respectively abstracted gamma approximations comparable gamma gamma 
best possible approximation concrete assertion 
ut extension function spaces 
concrete approximation relation theta extended function space gamma 
pointwise def 
intuition precise yields precise results approximation extended approximation function space gamma 
gamma 
functional abstraction ff concretization fl defined cc ff gamma 
gamma 
gamma 
ff def ff ffi ffi fl fl gamma 
gamma 
gamma 
fl def fl ffi ffi ff prop 
appendix mon gamma 
gamma gamma fl ff mon gamma 
intuitively ff image galois connection gamma gamma fl ff follows prop 
appendix poset con gamma 
ff 
lfp fl gamma lfp ff delta stated fixpoint operator lfp preserves soundness approximation cc 
functional abstraction 
practice ff may easy program 
case upper approximation precisely gamma 
abstraction con gamma 
ff equivalently fl 
diagrammatically fl ff ff fl intuitively approximation applied approximation definition 
hl interpretation hl written hl gamma gamma fl ff hl gamma gamma fl ff ff 
ff hl gamma gamma fl ff hl upper bound iterates lfp fl shown prop 
appendix stated upper bound iterates sound approximation collecting semantics 
example intervals continued 
interval abstraction ex 
approximate equation corresponding program defined mon gamma 

phi gamma tx 
min max ux max min max min phi phi phi 
solved iteratively starting infimum 
successive iterates 

sequence infinite strictly increasing nonterminating programs 
ut practice finite convergence iterates 
ensured 
leads hypotheses finite increasing chain strictly increasing chain infinite satisfies called ascending chain condition 
observe various hypotheses ensure 
increasing chain 
example extensive may 
mon gamma 
may monotone 
details equivalent approaches see cc cou chapter cc 
example descriptive types 
prolog type analysis bruynooghe jb set ground terms approximated type graph constants arity binary functor ff 
equivalent fl 
ff equivalent ffi fl fl ffi ff ffi ffi ff see prop 
appendix dispense ff fl cc 
case lfp fixpoint exists 
gamma gamma gamma psi gamma gamma gamma psi fi fl oe type graph finite bipartite graph consisting 
finite set type nodes marked ffi diagrams 
finite set functor nodes labeled ary functors 
root path node 
set theta theta theta arcs type nodes outgoing arc outgoing arcs hk mi go functors nodes distinct labels functors nodes labeled functor arity outgoing arcs hm outgoing arc 
write 
hk mi hm say type nodes 
sons node ground term bp said fold type node type graph 



ground term folds type node graph concretization function defined fl ft bp folds root gg type graph fl fa 
define equivalence relation fl fl 
partial order relation defined fl fl 
paths exist checked path finding algorithms 
ut example strictness analysis 
mycroft strictness analysis myc relation theta approximated function mon gamma 
strict ae aei ae 
approximation formalized galois connection defined fl theta fl fh ig theta fl theta ff theta ff aei ae ff interpretation lifted higher order functions 
ut widening narrowing approach interpretation method cc cc enforcing termination interpretation consists widening theta gamma 
increasing chains 
increasing chain defined 

strictly increasing 
follows shown prop 
appendix upward iteration sequence widening ultimately stationary limit sound upper approximation lfp observe join semi lattice upper bound exists satisfying ascending chain condition widening 
approximation improved narrowing operator theta gamma 
decreasing chains decreasing chain defined 

strictly decreasing 
follows shown prop 
appendix downward iteration sequence narrowing ultimately stationary limit term decreasing chain sound upper approximation lfp 
observe approximation lfp fixpoint improved 
observe meet semi lattice greatest lower bound exists satisfying descending chain condition strictly decreasing chain infinite narrowing 
example widening narrowing intervals 
widening narrowing introduced cc lattice intervals zz gamma ug defined follows gamma numerous variants possible 
example assume tf gamma delta different widening iterate cou widening depends previous iterates 
widening unstable bounds infinity 
observe widening monotone 
example 
narrowing introduced cc lattice intervals zz gamma zz ug defined 

gamma narrowing improves infinite bounds 
resolution equation phi gamma considered ex 
starts increasing iterates gamma phi delta gamma gamma 
phi delta gamma gamma gamma phi delta gamma gamma phi delta gamma gamma gamma delta gamma gamma phi delta gamma gamma phi delta gamma gamma gamma delta gamma decreasing iterates follows gamma phi delta gamma gamma phi delta gamma gamma gamma delta gamma gamma phi delta gamma gamma phi delta gamma follows consider fact integer constants interpreter bou analyze program program pn var integer solving system fixpoint equations equivalent phi gamma automatically discover loop invariant ut example type graphs widening 
defined restriction type graphs 
widening 
example gamma gamma gamma psi gamma gamma gamma psi gamma gamma gamma psi gamma gamma gamma psi gamma gamma gamma psi gamma gamma gamma psi gamma gamma gamma psi fi fl oe precisely widening type graphs obtained 
initializing copy roots merged merging consists joining type nodes removing arc 
repeatedly applying transformations type nodes distinct sons 

functor sons pairwise merged distinct type nodes 

functor acyclic path root merged sons type node different functors breadth type graph finite 
acyclic path starting root contain functor twice depth widened type graph finite 
follows strictly increasing chain type graphs finite 
ut combining galois connection widening narrowing approaches interpretation practice galois connection widening narrowing approaches simultaneously cc cc 
galois connection obtain approximate equations domain goal obtain computer representable properties programs 
fixpoint equations solved iteratively 
widenings domain infinite long strictly ascending chains finite large 
goal enforce accelerate convergence 
details see cc cc consult cou minimize number widenings loops chapter cou dual problems 
galois connections corresponds ideal situation concrete assertions unique best interpretation cc 
practice property satisfied reasons efficient computer representation properties 
domain need partially ordered equivalent values represent assertion upper bounds may exist may efficiently computable 
case widenings non existence upper bounds greatest lower bounds domain cc 
proposition appendix applied case 
examples situation bou ch deu ms str 
conjectures approaches widening narrowing approach interpretation understood galois connection approach exemplified ah refers convergence acceleration method 
noticed solutions possible 
argument proving widening narrowing approach infinite domain specific widening narrowing operators possible find finite lattice give results 
example kn claim may wonder necessary choose finite domain interpretation apparently information obtained interpretation infinite domain 
answer uniform termination interpretation required information obtained choosing infinite domain 
hh fixpoint approximation method considered consists upwards iteration safe approximation ff function con gamma 
finite small lattice gamma gamma fl ff problem finding fixpoints tractable followed downwards iteration fl gamma lfp ff 
ff delta sequence intermediate lattices larger 
hh claim shown equivalence step process cousot notion widening 
step consists working larger lattice hh claim refinement upper bound intermediate lattice corresponds narrowing 
comparing approaches correct show contrary general finite domain domain satisfying ascending chain condition widening narrowing operators infinite domains obtain results equivalent ones computer representation 
finite domains domains satisfying ascending chain condition widenings precisely prove section exist infinite domains widening narrowing operators 
program exists finite lattice program obtain results equivalent obtained widening narrowing operators 
finite lattice programs 
programs infinitely values necessary 
particular program possible infer set needed values simple inspection text program 
lfp mon gamma 
collecting semantics program assume hl gamma gamma fl ff hl interpretation lfp computable iteratively finitely steps upper approximation lfp effectively computed widening narrowing approach 
lfp fl gamma lfp delta lfp monotony transitivity lfp fl 
want find finite equivalent interpretation hl gamma gamma fl ff hl finite lfp gives results equivalent fl gamma lfp delta fl 
choose finite lattice consisting elements operator mon gamma 


define galois connection gamma gamma fl ff ff elsif fl 
fl fl 
supremum added exists 
gamma gamma fl ffi fl ff ffi ff ff ffi ff ffi ffi fl ffi fl lfp follows effective computation upper approximation lfp obtained widening narrowing done iteration fixpoint operator finite lattice equivalent results required approaches observe contain element lfp fl gamma lfp delta fl program family programs pn defined ex 
lattice contain infinitely different elements equivalent fl 
follows general finite contain infinite strictly increasing chains 
proof contrived argued finite subset needed analyzing program directly derived simple inspection text 
possible general shown series examples invariant analysis necessarily appear program generally simple function program text 
example interval analysis 
integer constant interpreter bou analyze program function known automatically discover invariant comment program function var integer function integer integer gamma readln gamma maxint gamma observe integer constants gamma maxint gamma bounds automatic interval analysis appear program 
convincing example program function var integer function integer integer gamma maxint maxint readln maxint ut example rational congruence analysis 
gra considers discovery arithmetical congruences form rational numbers automatically determined analysis denotes value program variable 
non extremal elements corresponding lattice theta denoted fl fx zz kg 
lattice satisfy ascending chain condition zz zz zz 
zz 
widening narrowing approach interpretation loop invariant derived gra program pc var real 
observe constant derived appear program text 
ut example linear inequality analysis 
interpretation introduced ch designed widening narrowing approach discover linear invariants program pl var integer 

observe analysis discovers relations variables appear command 
incidentally fact prove automatically termination loops hal new counter added program loop initialized zero incremented loop body 
analysis relate value variables program 
value counter bounded loop exit termination automatically proved 
ut widenings finite domains domains satisfying ascending chain condition prove widening narrowing approach general galois connection approach remains show infinite domain possible find widening narrowing operators giving results similar precision speed convergence ones obtained approximations domain galois connections gamma gamma fl ff assume poset con gamma 
continuous 
lfp 
exists see prop 
appendix 
assume poset satisfying ascending chain condition hl gamma gamma fl ff hl assume fl 
precision obtained considering new element fl 
simplicity assume ff surjective choosing fff lg eliminate useless values value useless replaced ff ffi fl loss information 
consequently prop 
appendix ff ffi fl assume ff ffi ffi fl prop 
appendix precise satisfying ff ffi ffi fl monotone continuous satisfies ascending chain condition 
prop 
appendix implies increasing chain 

converges steps limit lfp result obtained galois connection approach 
result analysis sound lfp fl 
define partial widening theta 
fl gamma ff ff delta widening approach consists computing iteration sequence 

sequence defined converges steps result obtained widening approach 
fl gamma lfp delta approaches cost precision hff fli far representation values concerned 
proof follows proof 
show defines widening 
observe ff ff ff definition upper bounds fl ffi ff fl gamma ff ff delta proving 
way holds 

increasing chain 

defined 
ff ff increasing chains 
satisfies ascending chain condition exists ff ff ff ff maximum ff ff ff ff fl gamma ff ff delta fl gamma ff ff delta proving eventually stable required 
poset upper bound may exist 
show iteration sequence defined 
precisely prove defined ff ff gamma delta basis 
ff ff gamma delta 
induction hypothesis defined ff ff gamma delta ff ff gamma delta ff gamma delta exists fl gamma ff ff delta fl ffi ff gamma delta defined 
induction hypothesis defined ff ff gamma delta shown fl ffi ff gamma delta defined 
induction hypothesis fl ffi ff fl ffi ff gamma delta derive continuity monotony ff ff ffi fl ffi ff gamma delta ff gamma delta ff gamma delta recurrence conclude welldefined ff ff gamma delta prove recurrence fl basis fl fl 
induction step assume fl ff ffi fl ff 
fl fl tx fl gamma tf delta fl gamma ff ffi ffi fl delta definition ff ffi ffi fl fl gamma ff ff ffi delta induction hypothesis definition 
case fl fl gamma delta definition fl ffi ff ffi ffi fl definition fl ffi ff ffi induction hypothesis fl ffi ff fl ff induction hypothesis induction hypothesis 
increasing chain fl fl 
antisymmetry fl observe chain increasing strictly exists 
smallest chain increasing strictly satisfies ascending chain condition smallest natural gamma fl delta fl implies ff gamma gamma fl delta delta sequence hx increasing antisymmetry 
follows reciprocally ff ffi ffi fl ffi fl fl conclude fl fl fl gamma lfp delta ut remarks design widenings design domains galois connections familiar great number examples available number equivalent understood mathematical objects upper closure operators moore families topologies complete join congruence relations families principal ideals see cc 
contrary design widenings thought difficult appears heuristic cope induction 
remarks help design widenings 
approaches observing galois connection gamma gamma fl ff available join semi lattice satisfying ascending chain condition widening theta gamma 
defined infinite domain gamma gamma fl ff projection upper bound defined follows ff fl gamma ff ffi fl ff ffi fl delta prop 
appendix ff surjective defines widening 
particular ff fl identity functions obtain widening defined 
similarly meet semi lattice poset satisfying descending chain condition theta gamma 
defined speeding convergence projection follows fl ffi ff proposition appendix shows narrowing 
example rule signs widening narrowing interval analysis 
assume lattice intervals lattice signs gamma cc gamma fl 
fl fl gamma gamma fl fl 
gamma elsif gamma elsif gamma similarly 
ut example application boolean interpretations higher order functional languages strictness analysis hh 
restriction finite lattice unfortunate expressiveness severely restricted necessary speed length strictly increasing decreasing chains taken account 
finite lattices understood resort power widening narrowing approach relies ability extrapolate infinitely distinct values programs finite number program 
results obtained infinite domain widening worse obtained finite domain corresponding coarser galois connection 
case example intervals widening give worse results obtained application rule signs cc shown example loose widenings 
program var integer 

system approximate equations intervals program phi solved iteratively widening follows gamma gamma system approximate equations signs program phi solved iteratively follows yields better results 
ut remedy simple consists widening lose information galois connection 
example reducing loss information widening 
widening narrowing improved give results better rule signs analysis follows elsif gamma elsif 

gamma widening unstable bounds zero infinity narrowing improves bounds 
bounds gamma declared bounds taken account definitions 
iterates solution alternate collection bounds iteration extrapolation unstable ones widening iteration 
ut suggestion designing widenings consists upper bounds greatest lower bounds long iterates follow finite chains lattice extrapolating soon iterate belongs infinite chain 
example widening congruence analysis 
come back lattice 
theta considered ex 
discovering arithmetical congruences form 
widening proposed gra zz zz jq jq zz zz upper bound defined zz zz gcd gamma zz idea extrapolation necessary modulus congruence class constant consecutive iterates 
ut general idea widenings eliminate unstable components consecutive iterates previous iterates equivalent choice different domain allow accumulation successive iterates single value 
brute force widening similarly naive narrowing consists immediately stopping decreasing iteration sequence definitions prove widenings exist convincing argument 
idea introducing extrapolation threshold upper bound greatest lower bound extrapolation enforced 
simple way limit number exact iterations positive integer follows values extended pairs memorize number iterations hx ii hy hx elsif hx hx hx ii hy hx hx example widening congruence analysis continued 
idea extrapolation threshold gra proposes improve widening follows zz zz jq jq jq zz zz idea extrapolation necessary modulus constant fixed rational number example chosen equal modulus encountered iterates 
ut widenings solve convergence problems left open literature numerous program analysis methods literature easily generalized expressing interpretations 
non convergence problems resorting restricted classes programs human interaction solved widenings 
consider examples 
simple sections kennedy bk simple sections provide compact representation commonly encountered array access shapes fortran programs 
simple section program variables 
fl false pair ui representing predicate fl ui ij ij gamma ij gamma gamma ij ij ij gamma ij gamma ij belong zz zz gamma 
kennedy consider relationships loop indices fortran programs consist sequence perfectly nested loops subroutines calls expanded inline infer loop invariants directly program text bk page 
solves convergence problem particular class programs 
simple sections analysis generalized arbitrary programs framework interpretation 
obtains slight extension interval analysis cc restricted form linear invariants ch 
formally sufficient specify corresponding galois connection uniquely determined function fl widening operator ui ui ui ui ui standing ij gamma ij ij gamma ij corresponding ij gamma ij similarly standing bounds gamma narrowing operator ui ui ui gamma precision obtained widening narrowing bounds declarations scalar variables subrange type arrays 
step size loop index variable ignored computing simple sections 
noticed bk inadequacy simple section representation 
simple way cope problem combine simple sections arithmetical congruences gra gra 
deriving constraints sizes data structures van gelder vg proposes method deriving constraints argument sizes logic programs set possible tuples arguments logic procedure approximated set tuples sizes data structures turn approximated polyhedron convex hull points ir obtain invariant form conjunction inequalities proven hold argument sizes 
shows invariant defined fixpoint operator associated logic program observes iteration process compute fixpoint may converge finitely steps 
proposes heuristic works resorts human interaction verifies experimentally fixpoints difficult guess indicates directions need ways generate candidates fixpoint concludes done automatic analysis argument term size constraints 
thinking terms interpretation major step goal taken cc observed post fixpoints upper approximations fixpoint shown prop 
appendix post fixpoints easier compute fixpoints 
major step goal taken cc cc widening narrowing approach enforce convergence iterates 
far linear inequalities concerned choose widening proposed ch improved hal follows polyhedra ir respectively defined sets linear inequalities ffi fi 
fi ffl fl 
fl subset consisting inequalities fi satisfied points subset fl exists fi gamma ffi ffl defines polyhedron observe widening mitigates non existence upper bounds circle limit inscribed polygons see cc 
example widening linear inequality analysis 
fhx yi ir fhx yi ir xg yg fx xg 
extremal points 
satisfy constraints yg 
constraint replaced changing constraint appears constraint replace constraint changing follows xg 
xg constraint redundant 
consequently fhx yi xg 
ut simple narrowing obtained limiting length decreasing iteration sequence experience shows brings significant improvement 
example argument size analysis 
logic procedure vg test precedence partial order thinking successor knowing size constant size size constraints argument sizes predicate upper approximations solution fixpoint equation fhx yi ir hx gamma effectively computed iteration sequence widening fhx yi ir yg fhx yi ir yg fhx yi ir fhx yi ir yg ut conclude vg method may applicable languages sizes data structures determined syntactically refer chapter hal examples illustrating point view 
widening narrowing approach cc interpretation powerful popular variations galois connection approach cc deserves better understood significantly improve precision analyses speed convergence including case finite lattices large fixpoint finding problem tractable 
practical experience combination approaches infinite domains worthwhile 
acknowledgments 
granger hankin comments version 
ah abramsky hankin editors 
interpretation declarative languages 
computers applications 
ellis horwood chichester 
bruynooghe janssens 
interpretation global optimization prolog programs 
proceedings international symposium logic programming san francisco california pages 
ieee computer society press los alamitos california august september 
bk kennedy 
technique summarizing data access parallelism enhancing transformations 
sigplan conference programming language design implementation pages portland oregon june 
bou bourdoncle 
interprocedural interpretation block structured languages nested procedures aliasing 
ma nski editors proceedings international workshop plilp programming language implementation logic programming linkoping sweden lecture notes computer science pages 
springer verlag berlin germany august 
bou bourdoncle 
interpretation dynamic partitioning 
journal functional programming 
appear 
cc cousot cousot 
static determination dynamic properties programs 
proceedings nd international symposium programming pages 
paris france 
cc cousot cousot 
interpretation unified lattice model static analysis programs construction approximation fixpoints 
conference record th acm symposium principles programming languages pages los angeles california 
cc cousot cousot 
static determination dynamic properties recursive procedures 
neuhold editor ifip conference formal description programming concepts st andrews canada pages 
north holland pub 
amsterdam netherlands 
cc cousot cousot 
constructive versions tarski fixed point theorems 
pacific journal mathematics 
cc cousot cousot 
systematic design program analysis frameworks 
conference record th acm symposium principles programming languages pages san antonio texas 
cc cousot cousot 
interpretation application logic programs 
journal logic programming 
appear 
cc cousot cousot 
interpretation frameworks 
journal logic computation 
appear 
cc cousot cousot 
inductive definitions semantics interpretation 
conference record th acm symposium principles programming languages pages albuquerque new mexico 
ch cousot halbwachs 
automatic discovery linear restraints variables program 
conference record th acm symposium principles programming languages pages tucson arizona 
cou cousot 
ethodes de construction approximation de points fixes op erateurs sur un treillis analyse de programmes 
th ese etat es sciences math ematiques universit scientifique de grenoble grenoble france march 
cou cousot 
semantic foundations program analysis 
muchnick jones editors program flow analysis theory applications chapter pages 
prentice hall englewood cliffs new jersey 
deu deutsch 
model aliasing abstraction finite representations right regular equivalence relations 
proceedings international conference computer languages oakland california pages 
ieee computer society press los alamitos california april 
gra granger 
static analysis arithmetical congruences 
international journal computer mathematics 
gra granger 
analyses de congruence 
th ese de ecole polytechnique en informatique lix ecole polytechnique palaiseau france july 
gra granger 
static analysis linear congruence equalities variables program 
abramsky maibaum editors tapsoft proceed ings international joint conference theory practice software development brighton volume caap lecture notes computer science pages 
springer verlag berlin germany 
hal halbwachs 
automatique de relations lin ees par les variables un programme 
th ese de eme cycle informatique universit scientifique de grenoble grenoble france march 
hh hankin hunt 
approximate fixed points interpretation 
krieg bruckner editor proceedings th european symposium programming esop pages 
springer verlag berlin germany rennes france february 
jb janssens bruynooghe 
abstracting procedural behaviour logic programs 
voronkov editor proceedings russian conference logic programming russia september second russian conference logic programming st petersburg russia september pages 
springer verlag berlin germany 
kn kieburtz 
semantics 
abramsky hankin editors interpretation declarative languages chapter pages 
ellis horwood chichester 
ms marriott 
describing success patterns logic programs 
technical report department computer science university melbourne melbourne australia 
myc mycroft 
theory practice transforming call need call byvalue 
robinet editor proceedings fourth international symposium programming paris france april lecture notes computer science pages 
springer verlag berlin germany 
str 
analyse de structures de donn ees avec application au cas de langages 
th ese de doctorat en science universit de paris sud orsay june 
van emden kowalski 
semantics predicate logic programming language 
journal association computing october 
vg van gelder 
deriving constraints argument sizes logic programs 
proceedings th acm symposium principles database systems pages nashville 
appendix preorder preordered set theta reflexive transitive 
poset preorder antisymmetric 
upper bound upper bound written tx upper bound upper bounds tx exists upper bound tx unique antisymmetry 
strict poset infimum cpo complete poset termed sequence increasing chain upper bound complete lattice poset subset upper bound tx greatest lower bound ux 
map mon gamma 
monotone implies 
continuous written con gamma 
increasing chains upper bound exists 
continuity implies monotony 
proposition kleene fixpoint theorem 
poset con gamma 
continuous 

increasing chain 

exists fixpoint lfp greater equal proposition characteristic property galois connections 
posets equivalent fl ffi ff ff ffi fl ff mon gamma 
fl mon gamma 
proposition functional galois connection 
posets ff gamma 
fl gamma 
satisfy implies 
proposition function approximation 
posets mon gamma 
mon gamma 
monotone imply ff equivalent ffi fl fl ffi ff ffi ffi ff 
proposition upper bounds inducing 
posets gamma gamma fl ff galois connection tx exists ff exists equal ff tx 
proposition connection property 
posets gamma gamma fl ff galois connection ff ffi fl ffi ff ff fl ffi ff ffi fl fl proposition galois surjection 
posets gamma gamma fl ff galois connection ff surjective ff ffi fl proposition fixpoint abstraction 
cpo poset gamma gamma fl ff galois connection con gamma 
continuous 
ff defined lfp fl upper bound ff gamma ff 
delta increasing chain ff gamma ff 
delta exists ff ff 
particular ff con gamma 
lfp ff 
ff equality hold general true lattice iterate 
case cpo 
necessarily cpo see cc weaker hypotheses 
considering transfinite iterates 
proposition fixpoint approximation 
cpo poset gamma gamma fl ff galois connection con gamma 
continuous 
ff defined gamma 
ff pointwise ordering ff 

lfp fl ff gamma ff 
delta fl 
proposition approximation 
poset con gamma 
continuous 

exists lfp proposition upward iteration sequence widening 
cpo con gamma 
continuous 
theta gamma 
satisfies upward iteration sequence widening defined ultimately stationary limit lfp proposition downward iteration sequence narrowing 
cpo con gamma 
continuous 
theta gamma 
satisfies downward iteration sequence narrowing defined lfp ultimately stationary terms lfp proposition preordered upward iteration widening 
poset con gamma 
continuous 
exists set fl gamma 
preorder defined def fl fl fl 
mon gamma 
ffi fl fl ffi theta gamma 
satisfies respectively upward iteration sequence widening ultimately stationary limit lfp fl proposition preordered downward iteration narrowing 
poset con gamma 
continuous 

exists set fl gamma 
preorder defined def fl fl fl 
mon gamma 
ffi fl fl ffi theta gamma 
satisfies downward iteration sequence narrowing defined lfp fl ultimately stationary terms lfp fl proposition widening inducing 
posets join semi lattice satisfying ascending chain condition gamma gamma fl ff gamma gamma fl ff ff surjective 
theta gamma 
defined widening 
may hold ff surjective 
proposition narrowing inducing 
meet semi lattice poset satisfying descending chain condition theta gamma 
defined narrowing satisfying 
article processed macro package llncs style article invited reprinted proceedings fourth international symposium plilp programming language implementation logic programming leuven belgium august lecture notes computer science maurice bruynooghe martin wirsing eds 
verlag berlin heidelberg 
