multi dimensional logic programming theoretical foundations mehmet orgun du department computing department mathematics computer science macquarie university university new brunswick sydney nsw australia saint john canada tel tel fax fax mail mehmet orgun mq edu au mail ca introduces extension logic programming multi dimensional logics called mlp 
multi dimensional logic values elements vary depending dimension time space 
resulting logic programming language suitable modelling objects involve implicit explicit temporal spatial dependencies 
execution programs language resolution type proof procedure called msld resolution multi dimensional sld resolution 
axioms rules inference underlying multi dimensional logic 
establishes declarative semantics multi dimensional logic programs extension herbrand models 
particular shown mlp programs satisfy minimum model semantics 
novel multidimensional interface mlp outlined powerful development tool advantage non determinism inherent logic programming 
keywords logic programming multi dimensional logic proof procedures declarative semantics spreadsheets sld resolution 
extensions classical logics temporal modal logic successfully formalism areas including program specification verification temporal reasoning knowledge representation 
temporal modal logics meanings formulas vary depending implicit context elements different contexts combined contextual temporal modal operators explicit context time space 
logics model dynamic properties certain problems natural problem oriented way 
researchers suggested temporal modal logics directly programming language applications involving notion dynamic change 
number temporal modal logic programming languages interval logic form temporal logic linear time temporal logic temporal prolog linear branching time temporal logic intense multi dimensional logic multiple spatial temporal dimensions mtl temporal logic metric past operators modal logic 
details refer reader surveys fisher owens orgun ma 
just logics languages execution mechanisms differ markedly way programs interpreted answers queries obtained 
programs systematically transformed sequence state descriptions interval satisfies original program 
temporal prolog extensions logic programming programs executed obtain answers resolution type proof procedures 
uses modal inference rules resolution type proof procedure 
interval logic execution mechanism mixture transformation resolution 
attempts developing declarative operational semantics languages 
known order temporal modal logic incomplete important show fragments temporal modal logic operational semantics declarative operational semantics languages coincide compute program means declaratively 
ordinary logic programming semantics coincide 
established soundness completeness mtl resolution translating mtl programs constraint logic programs suitable algebra 
showed proof procedure resolution sound complete forms basis operational semantics language established equivalence declarative operational semantics programs 
orgun wadge provided analogous results programs particular showed completeness proof procedure forms basis implementations language 
gabbay defined resolution procedure temporal prolog proved soundness 
provided tree semantics instances modal logics 
results suggest temporal modal logic programming feasible 
multi dimensional logic programming mlp logic countably infinite number dimensions call ml 
dimension modeled set integers unbounded past 
sense temporal logic dimension time 
context ml 
simply point contextual operators provided formally define dynamic relationships data different points implicitly explicit contexts 
mlp allows capture naturally dynamic aspects certain problems simulation dataflow computation mesh oriented computation spreadsheets 
intense multi dimensional logic ml 
intense includes large repertoire lucid intensional operators asa soon 
clear operators operational semantics proof rules defined implemented 
correctness implementation addressed declarative semantics language 
contrast intense starts solid foundation declarative semantics complete proof procedure called msld resolution 
subset intense lucid operators just mlp 
provides basis pure intense 
particular msld resolution provide operational semantics pure intense programs 
main goal provide theoretical framework mlp demonstrate practical aspects applications involving notion dynamic change 
address issue implementations 
note preliminary results appeared 
structure follows 
section discusses underlying logic mlp detailing axioms rules inference 
section outlines syntax semantics multi dimensional logic programs summarizes features proof procedure mlp call msld resolution 
operational semantics mlp defined terms msld derivations msld resolution forms basis implementations mlp 
section establish declarative semantics mlp programs extension herbrand models 
particular show mlp programs satisfy minimum model semantics alternative declarative semantics mlp discussed theory orgun wadge 
section outline multidimensional interface mlp define mlp program input program display results 
give examples multi dimensional logic programming multi dimensional logic multi dimensional logic form modal logic 
set possible contexts possible worlds modeled countably infinite cartesian product theta theta theta delta delta delta words possible context multi dimensional logic point write hx coordinate value th dimension 
dimension contextual operators init prior rest dimension indicator 
informally init refers origin dimension prior previous point dimension rest point dimension formal semantics operators 
syntax multi dimensional logic extends order logic formation rules formula init prior rest 
note contextual operators applied formulas terms language 
write prior rest successive applications prior rest case prior rest empty string 
write ml 
multi dimensional logic countably infinite dimensions 
especially interested multi dimensional logics finite number dimensions instance ml logic dimensions set possible contexts 
write folded cartesian product set pascal program earlier ml 
semantics formulas semantics formulas ml 
provided multi dimensional interpretations 
multi dimensional interpretation assigns meanings possible contexts basic elements language function predicate symbols variables 
interpretations extended upward elements language satisfaction relation 
meaning formula context dependent 
restrict discussion interpretations values variables function symbols rigid 
value rigid term invariant contexts 
formal definition multi dimensional interpretation 
notation denote set functions set set set subsets power set set definition interpretation ml 
comprises non empty set called domain interpretation variable element ary function symbol element ary predicate symbols element 
fact formula true context multi dimensional interpretation denoted formal semantics formulas ml follows definition semantics elements ml 
inductively interpretation ml hx formulas ml 

gamma term gamma gamma variable 
ary predicate symbol terms gamma hx gamma hi gamma hx 

hx case hx 
hx hx hx 
hx hx interpretation just variable assigned value 

hx gamma init hx gamma 
hx gamma prior hx gamma gamma 
hx gamma rest hx gamma formula true multi dimensional possible contexts say true model denote fact formula true multi dimensional interpretation denote fact regard primitives assume usual definitions terms primitives 
axioms rules inference notation denote fact theorem ml 
theorem interpreted true statement possible contexts 
notion deducibility characterized terms theoremhood gamma means formula deducible set gamma formulas ml 
axioms state important theorems properties ml 
dimension indicator contextual operator contextual operator th dimension 
cancellation rules 
init init 
prior rest 
rest prior axiom says initial truths dimension persist 
axioms capture fact prior rest complete inverses dimension 
distribution rules 





fl fl contextual operator dimension fl contextual operator dimension axioms say contextual operators commute boolean operators 
axioms state conditions contextual operators commute 
variables axioms stipulate values individual variables range extensions data values intensions context varying values 
instant called barcan formula combined converse 
rules inference addition substitution modus ponens contextual operator rules 

init 
prior 
rest read rules inference theorem infer init prior rest theorems 
rules instances rule generalization modal logic 
derived rule 
contextual operator 

induction rule case init prior rest induction rule form contextual operator elimination rule 
induction rule logic programming infinitary flavor 
presentation axiomatic system ml 
begs question complete respect semantics scheme ml semantics scheme structure set possible worlds described 
attempt answer question completeness ml 
issue application logic programming 
include theorem showing correctness soundness axioms rules inference 
lemma axioms rules inference valid respect semantics scheme ml 
proof 
definition satisfaction relation 
axioms need show implies rules inference form need show 
omit details assume rules inference extended consider notion deducibility set formulas 
instance reads gamma gamma init 
presence rules inference form deduction theorem 
derive init deduction theorem init shown init valid formula 
axioms rules inference ml 
form basis operational semantics multi dimensional logic programming ml 
see 
multi dimensional logic programs building blocks start defining multi dimensional logic program set program clauses 
basic building blocks multi dimensional logic program contextual units defined inductively follows definition ffl atomic formulas contextual units 
ffl contextual unit contextual operator ml contextual unit 
adopt clausal notation multi dimensional logic programs 
variables program clause assumed universally quantified 
convenience upper case letters variables lower case letters function predicate symbols 
definition ffl program clause universal closure clause form bm gamma contextual units 
ffl goal clause universal closure clause form bm gamma contextual unit 
informal semantics program clause bm gamma defined follows contexts variable assignment bm gamma true true 
multi dimensional logic program consists conjunction set program clauses regarded axioms true contexts goal clauses called queries 
practical purposes restrict discussion mlp finite number dimensions instance program defines pascal predicate mlp 
simple dimensionality analysis technique determine dimensionality mlp program 
define dimensionality contextual unit set contexts varies definition contextual unit 
dimensionality denoted dim defined follows ffl atomic formula dim fg 
ffl form contextual operator contextual unit dim fkg dim 
definition define dimensionality program clause program mlp definition program clause form bm gamma dimensionality denoted dim defined follows dim dim dim dim bm gamma definition conjunction set program clauses 
dimensionality denoted dim defined follows dim dim card dim card cardinality set say program mlp 
definition assume gaps dimensions program order simplify discussion 
fact simple translation programs gaps dimensions programs gaps 
dim fd translated program dimension replaced index dim dimension example program uses dimensions dimension replaced dimension dim applied mlp ordinary logic programming 
note dim finite program consisting finitely program clauses 
considering extension mlp dimension indicators contextual operators may variables constants variable 
extension programs finitely program clauses may infinite number dimensions 
need definitions pascal pascal pascal pascal pascal dimension dimension pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal pascal triangle south east quadrant definition contextual unit mlp 
say canonical form init init init gamma gamma gamma atomic formula 
definition bm program clause mlp 
say clause canonical bm canonical contextual units 
similarly goal clauses queries 
example mlp program adapted defines predicate pascal varies dimensions 
program clauses interpreted assertions true points contexts 
contextual operators indexed dimension indicators natural numbers 
init init pascal 
init pascal init rest pascal 
init pascal init prior pascal 
pascal rest pascal prior pascal definition pascal involve contextual operators operating dimensions value pascal varies dimensions constant dimensions 
resulting program said mlp dimensional logic programming 
axioms pascal predicate pascal triangle constructed south east quadrant dimensional space apex pascal true clause 
shows approximate twodimensional graphic representation pascal triangle specified pascal predicate 
triangle observed rotating degrees clock wise direction 
msld resolution note discussion assume familiarity concepts substitution unification refutation procedures see detailed discussion 
programs mlp executed resolution type proof procedure called multi dimensional sld resolution 
extension sld resolution 
msld resolution applied set canonical instances program clauses queries 

multi dimensional logic ml canonical instances clause obtained systematic applications rules inference follows ffl init ffl init prior ffl init rest ffl init prior ffl init rest 
start dimension gamma proceed dimension step step repeating process dimension resulting formulas previous step dimensions exhausted 
introduced contextual operators distributed contextual units clauses contextual operators grouped dimensions superfluous applications contextual operators eliminated cancellation distribution axioms ml 
clauses resulting set clauses canonical instance clause ml 
value canonical instance clause ml invariant context implied lemma 
proof lemma straightforward 
lemma canonical contextual unit ml form init init gamma gamma atomic formula rest prior 
multi dimensional interpretation ml 
hx gamma context hx gamma hm gamma ml canonical instances contain countably infinite number init operators applied 
form described provision ml accomodate infinitely long formulas 
notion canonical instance apply formulas ml 
value clause multi dimensional interpretation ml expressed values canonical instances 
intuitive idea context find canonical instance clause fixed context combine values canonical instances 
lemma clause ml multi dimensional interpretation ml 
canonical instances multi dimensional logic program canonical instances program clauses queries naturally obtained rules inference axioms 
lemmas canonical instance program clause short carry proofs canonical instances clauses results justified lemmas 
goal clauses assumed canonical 
restriction lifted goal clauses open ended 
open ended goal clauses initiate non terminating computations 
program ml goal msld derivation fgg consists sequence goal clauses sequence variants renaming canonical instances program clauses sequence substitutions 
step msld derivation contextual unit current goal selected unified head canonical instance program clause renaming variables canonical instance 
new goal produced replacing selected contextual unit goal premise body canonical instance substitution mgu obtained unification applied new goal 
formally msld resolution step described follows fhg hg relation consecutive elements say formulated 
gamma bm gamma 
bm gamma gamma selected temporal unit goal computation rule canonical instance program clause mgu sequence associated successful msld derivation case sequence length element hg gamma gamma gamma composition substitutions mgu gamma computed answer substitution goal example msld derivation consider pascal program earlier simple dimensionality analysis shows ml 
consider goal init init rest prior pascal 
goal clause canonical ml reordering contextual operators goal respect distribution axioms 
give steps msld refutation program goal assumption contextual units refutation canonical reordering contextual operators 
contextual unit goal selected matched head canonical instance fourth program clause unification renaming variable clause 
ask reader verify program clauses applicable goal 
init rest init prior pascal 
init rest init prior pascal init rest init pascal init init prior pascal init rest init prior 
fourth program clause rules inference axioms fx new goal produced replacing selected contextual unit body substitution applied new goal 
contextual units selected step derivation select 
contextual unit init init rest pascal matched canonical instance third program clause program 
init rest init pascal init init prior pascal init rest init prior init rest init pascal init init pascal 
third program clause rules inference axioms fy new goal selected contextual unit replaced body substitution applied new goal 
select contextual unit goal match program clause canonical 
init init pascal init init prior pascal init rest init prior init init pascal 
program clause fx selected contextual unit removed select contextual unit step derivation 
matches canonical instance second program clause 
init init prior pascal init rest init prior init init prior pascal init init pascal 
second program clause rules inference axioms fz rest derivation proceed manner arrive empty goal say clause eliminating addition operation 
note predicate form formalized ternary addition predicate unified result addition operation 
reach empty goal say derivation successful 
successful msld derivation called msld refutation 
composition mgu regarded computed answer substitution original goal correct 
answer original goal substituted 
follows init rest init prior pascal logical consequence pascal program 
proof procedure show init rest init prior pascal computational procedure find answer substitution variable note msld resolution complete proof procedure languages ml degenerates ordinary sld resolution 
completeness msld resolution established extending completeness results making equivalence program set canonical instances program clauses space limitations discuss completeness msld resolution 
declarative semantics declarative semantics mlp programs defined terms minimum herbrand models 
minimum herbrand model ordinary logic program consists ground atomic formulas logical consequences program 
similarly declarative semantics mlp programs defined terms minimum multi dimensional herbrand models 
section demonstrate declarative semantics negation free logic programs smoothly extended mlp programs 
mlp degenerates ordinary logic programming 
particular show minimum multi dimensional herbrand model mlp program consists canonical contextual units logical consequences program 
multi dimensional herbrand models logic programming theory herbrand interpretations models generated constants function predicate symbols logic program 
mlp meaning predicate symbol varies contexts need different approach generate multi dimensional herbrand interpretations mlp program 
lemma know value formula expressed terms values canonical instances 
furthermore value canonical instance formula invariant time 
idea define multi dimensional herbrand interpretations 
definition mlp program 
ffl herbrand universe denoted generated function symbols constants nullary function symbols appear ffl multi dimensional herbrand base consists canonical contextual units ml generated contextual operators predicate symbols appear terms arguments 
mlp program 
conjunction set contextual program clauses say true multi dimensional interpretation program clauses true lemma program clause true canonical instances clause true far declarative semantics concerned may regard set canonical instances program clauses definition mlp program 
subsets called multi dimensional herbrand interpretations 
definition just reformulation multi dimensional interpretations having domain 
fact correspondence established follows 
multi dimensional interpretation strictly underlying multi dimensional language ml domain 
identified subset 
predicate symbol arity gamma hx gamma init init gamma gamma gamma gamma rest prior 
notion model naturally extends subsets ordinary logic programs multi dimensional herbrand interpretations satisfactory developing declarative semantics mlp programs 
fact shown mlp program goal fgg unsatisfiable fgg multidimensional herbrand models 
corresponding canonical truth value fixed contexts 
lemma says entire multi dimensional herbrand base mlp program model program 
lemma mlp program 
bp proof 
bp canonical ground instances program clause consists ground canonical contextual units mlp obtained program 
means canonical instances program clauses true definition 
bp lemma lemma shows family multi dimensional herbrand models mlp program closed intersection 
lemma mlp program non empty family multi dimensional herbrand models multi dimensional herbrand model proof 
proof similar logic programming lloyd 
multi dimensional herbrand interpretation suppose model canonical ground instance clause false context 
delta delta delta gamma instance implies model true 
obtain contradiction model 
family multi dimensional herbrand models mlp program non empty lemma contains model intersection property holds family lemma intersection family minimum multi dimensional herbrand model program 
theorem mlp program family multi dimensional herbrand models mmod def minimum multi dimensional herbrand model theorem says minimum model mlp program consists canonical contextual units logical consequences program canonical contextual units true model program 
theorem mlp program 
mmod fa ag 
proof 
bp logical consequence ag unsatisfiable multi dimensional model multi dimensional herbrand model satisfies ag multi dimensional herbrand model multi dimensional herbrand models mmod theorem 
fixpoint semantics alternative approach declarative semantics mlp programs involves fixpoint theory 
van emden kowalski developed fixpoint semantics logic programs mapping step modus ponens function 
generalize results mlp programs 
definition mapping mlp programs follows 
definition mlp program denote family multi dimensional herbrand interpretations tp gamma canonical ground instance program clause fb gamma mlp program 
complete lattice partial order set inclusion denoted 
fixpoint semantics mlp programs depends fact multi dimensional herbrand models characterized mapping complete lattice continuous monotonic 
continuity condition expressed follows definition mlp program 
say continuous chain 
multi dimensional herbrand interpretations tp 

tp lemma mlp program 
tp continuous monotonic 
proof 
proof point wise extension continuity tp logic programs 
canonical contextual unit bp show show tp 

tp 
omit details 
lemma gives necessary sufficient conditions terms multi dimensional herbrand interpretation model lemma basically says mapping improve multi dimensional herbrand interpretation model 
lemma mlp program 
model give fixpoint characterization minimum multi dimensional herbrand model mlp programs 
lloyd shows monotonic mappings complete lattices fixpoints 
tp introduce notation ordinal powers ffl ffl gamma ffl 
minimum element maximum 
continuity tp lemma implies theorem 
theorem mlp program lfp denote fixed point mmod lfp 
proof 
proof analogous theorem logic programming generalized mlp programs 
uses knaster tarski fixpoint theorem kleene recursion theorem lemmas generalized semantics mlp 
techniques mlp programs apply mlp 
programs notion canonical instance extend need infinite formulas 
model theoretic framework mlp 
apply instances mlp 
orgun wadge developed language independent model theory imposing certain constraints underlying intensional logics studying model theoretic properties intensional logic programs related constraints 
show alternative declarative semantics mlp 
programs fact follows results 
define denotation formula ml 
definition denotation formula dimensional interpretation denoted kak defined fx ag 
words denotation formula just subset determined interpretation kak set elements true 
contextual operators take formulas arguments denotations formulas subsets denotation unary contextual operator mapping subsets subsets definition unary contextual operator ml 
denotation denoted element 
consider semantics formula form rest multi dimensional interpretation ak kak 
definition satisfaction relation function obtained follows kak hx hx rest hx hx hx hx kak kak arbitrary element 
lambda abstraction definition obtained hx hx xg formulation denotations contextual operators define useful semantic properties 
definition theta 
say ffl theta monotonic theta theta ffl theta universal theta ffl theta conjunctive theta ff ff ff theta ff fx ff ff ffl theta finitary theta implies theta finite subset theorem theorem showing minimum model semantics valid intensional modal logic programs provided denotations operators appearing heads program clauses monotonic universal conjunctive denotations operators appearing bodies program clauses monotonic finitary 
continuity mapping may regarded computability requirement guaranteed restrictions 
shown properties described 
justifies unrestricted mlp 
result lemma monotonic universal conjunctive finitary 
proof 
definition satisfaction relation obtain definitions denotations contextual operators hx gamma hx gamma hx hx gamma xg hx hx xg definitions desired properties shown operators properties 
omit details 
lemma corollary theorem orgun wadge 
corollary mlp program 
model intersection property holds minimum multi dimensional herbrand model exists 
orgun wadge theory applied temporal modal logic programming languages temporal prolog intense shown languages temporal prolog minimum model semantics 
minimum model semantics independently 
declarative semantics instance modal logics terms tree semantics 
multidimensional interface multi dimensional logic programming visual interface browser enhance appreciation results computations provide aid writing programs 
example dimensional programming spreadsheet interface natural choice 
cell interface corresponds context 
interface define clauses display results 
define clause cell context dimension row column entire plane 
context defining finer say cell override coarser say dimension 
consider pascal program earlier 
value pascal predicate varies dimensions 
value pascal context theta corresponds value displayed cell spreadsheet 
theta infinite plane regard interface window finite portions plane observed 
interface define clause predicate pascal follows 
cells plane define origin goal pascal dimensions pascal triangle dimensional spreadsheet pascal rest pascal prior pascal cells row column define pascal override plane definitions 
cell definition corresponds canonical instance defined clause context 
example definition cell corresponds canonical instance init rest init rest 
shows result computation initiated goal pascal displayed interface 
displayed theta spreadsheet 
dimensions displayed 
pascal predicate designated goal predicate predicate values going displayed interface 
origin refers left cell top row gives coordinate possible context chosen displayed position 
cells contexts pascal fails left blank 
multidimensional interface provides solution goal convention problem canonical instances goal produced cells chosen interface 
example canonical instances reordering contextual operators produced cell init prior init rest pascal cell init init rest pascal cell init rest init rest pascal 
cell init prior init pascal cell init init pascal cell init rest init pascal 
course variable assumed different canonical instance 
option values cells displayed time 
possible interface programs mlp arbitrary 
allow user view multi dimensional object different angles points view selecting appropriate dimensions relative ordering cell definition display freezing dimensions fixed coordinates 
unary predicate designated goal predicate 
consider program conway game life ml 
game involves possibly infinite plane divided grids 
inside grid cell resides organism may alive dead depending status immediate neighbors surrounding cells plane 
game starts initial configuration plane organisms alive 
mlp plane modeled dimensions say dimensions time modeled positive fragment dimension 
define mlp program interface 
describes relationships state changes game adapted program 
cube definition cell organism alive prior neighbors prior count alive 
organism alive prior organism alive prior neighbors prior count alive 
organism dead prior neighbors prior lonely 
organism dead prior neighbors prior 
organism dead prior organism dead prior neighbors prior count alive 
neighbors prior rest organism rest organism rest rest organism rest organism rest prior organism prior organism prior prior organism prior organism 
lonely count alive 
count alive 
count alive 
count alive alive count alive 
count alive dead count alive 
definition time organism dead initial cell definition alive cells space time organism alive read clauses assertions true cells 
initial cell definition overrides definitions definitions override definitions 
initial cell definition cell definition 
definitions define initial configuration game 
intuitive reading clauses definition follows 
clause says organism alive moment point dimension exactly neighbors alive previous moment matter organism alive dead 
clause covers case birth organism occurs moment dead exactly neighbors alive previous moment 
second clause says alive organism continues live moment exactly neighbors alive previous moment 
clauses state organism dead moment lonely neighbors alive surrounding area neighbors alive 
fifth clause says organism stays dead dead exactly alive neighbors 
sixth clause simply bundles status neighbors cell list 
rest clauses define auxiliary predicates 
program possible context exactly units organism alive organism dead true 
problem produce canonical instances goal organism 
fact interested canonical instances goal interface display difficult impose ordering way canonical instances produced 
dimension regarded time dimension dimensions chosen display 
time dimension orthogonal display plane 
displays initial configuration game defined plane definition time cell definitions 
initially organisms dead cells outside boundaries interface second stage game time displayed 
origin refers left cell top row dimensions refers remaining dimensions case dimension 
canonical instances goal organism produced information provided origin dimensions 
organism goal predicate 
way stack planes moment time point dimension 
dimensions origin goal organism alive dead dead alive alive dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead alive alive alive alive alive alive alive alive alive dead dead dead dead dead alive alive alive alive dead dead dead dead dead dead dead alive dead alive alive dead alive dead stage game life origin goal organism dead dead alive alive dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead alive alive alive alive alive dead dead alive alive dead dead dead dead dead dead dead alive dead alive alive dead alive dimensions alive alive alive alive alive alive alive alive alive alive dead dead dead dead dead dead dead dead second stage game life general restrictions form goals complicated goals 
example consider goal organism rest organism 
says display values organism true values consecutive moments time 
result goal cell gamma left blank display origin dimensions 
goal involves variable choice variable display user 
multidimensional interface flexible 
definition program clauses finer goals may override coarser goals goal override goal 
possible exploit inherent non determinism logic programming 
examples pascal organism represent single valued relations possible context 
multiple valued predicate goal predicate simply request value individual cell 
possible conventional spreadsheets cell single value 
currently working formalization multidimensional interface browser 
opinion interface promising avenue research 
logic programming spreadsheets van emden concentrate spreadsheet interface supported incremental queries means display results goals 
outlines spreadsheet program implemented prolog 
approach natural correspondence multidimensional interface mlp 
interface naturally programming tool 
du wadge proposed spreadsheet intensional logic functional language lucid 
concluding remarks established theoretical foundation logic programming multi dimensional logics outlined features 
particular discussed declarative operational semantics mlp 
orgun wadge provided language independent model theoretic framework temporal modal logic programming applied mlp 
framework provide basis operational semantics soundness completeness mlp established 
msld resolution apply mlp ml 
implementations mlp rely msld resolution correctness 
efficiency combine features logic programming prolog implementations features dataflow implementations associative memory tagging lucid 
mitchell report implementation intense extension warren machine wam associative memory contexts tags atoms 
implementation allows temporal spatial dimensions 
outlined evaluation mechanism logic programming implement contextual extensions mlp 
contextual extensions logic programming offer extra form parallelism call context parallelism addition standard parallelism existing logic programs 
context parallelism effectively exploited parallel implementation 
parallel execution model temporal logic programming exploits context parallelism proposed 
research continues direction 
mehmet orgun supported part australian research council arc 
du supported part canadian nserc research 
abadi 
power temporal proofs 
theoretical computer science 
abadi manna 
temporal logic programming 
proceedings symposium logic programming pages san fransisco calif 
ieee computer society press 
abadi manna 
temporal logic programming 
journal symbolic computation 
fujita oka 
temporal logic programming language 
wada editor logic programming volume lncs pages 
springer verlag 
apt van emden 
contributions theory logic programming 
journal association computing machinery july 
ashcroft 
eduction model parallel computation programming language lucid 
proc 
phoenix conference computers communications pages 
ieee computer society press 
philippe luis nas del cerro andreas 
declarative semantics modal logic programs 
proceedings international conference fifth generation computer systems pages 
icot 

temporal logic programming complete expressive 
conference record sixteenth acm symposium principles programming languages pages austin texas january 
association computing machinery 

simple proof completeness temporal logic programming 
nas del cerro editors intensional logics programming pages 
oxford university press 

temporal logic programming metric past operators 
fisher owens editors executable modal temporal logics pages 
springer verlag berlin heidelberg 
chellas 
modal logic 
cambridge university press 
du wadge 
spreadsheet intensional logic 
ieee software pages 
luis nas del cerro 
system extends prolog modal logic 
new generation computing 
fisher owens 
executable modal temporal logics 
fisher owens editors executable modal temporal logics pages 
springer verlag berlin heidelberg 
gabbay 
modal temporal logic programming 
galton editor temporal logics applications pages 
academic press 
hale 
temporal logic programming 
galton editor temporal logics applications pages 
academic press 
jackson reichgelt 
general proof method modal predicate logic 
jackson reichgelt van harmelen editors logic knowledge representation pages 
mit press 
kowalski 
logic problem solving 
north holland publishing amsterdam 

prolog spreadsheet 
hayes michie richards editors machine intelligence pages 
clarendon press oxford 
liu orgun zhang 
framework exploiting parallelism 
proceedings ieee international conference algorithms architectures parallel processing brisbane australia april 
ieee press 
lloyd 
foundations logic programming 
springer verlag 
manna pnueli 
verification concurrent programs temporal framework 
boyer moore editors correctness problem computer science pages 
academic press 
mitchell 
intensional horn clause logic programming language implementation 
master thesis department computer science engineering arizona state university tempe arizona 
mitchell 
intensional logic language intense 
proceedings international symposium lucid intensional programming arizona state university may 
moszkowski 
executing temporal logic programs 
cambridge university press 
orgun du 
multi dimensional logic programming 
special issue proceedings sixth international conference computing information pages trent university ontario canada may 
journal computing information vol 

orgun ma 
overview temporal modal logic programming 
gabbay ohlbach editors proc 
ictl international conference temporal logic volume lnai pages institut bonn germany july 
springer verlag 
orgun wadge 
theory practice temporal logic programming 
nas del cerro editors intensional logics programming pages 
oxford university press 
orgun wadge 
unified theory intensional logic programming 
journal logic programming august 
orgun wadge 
admits complete proof procedure 
proceedings sixth international symposium lucid intensional programming pages universit laval qu ebec city qu ebec canada april 

tense logic mitigation frame problem 
brown editor proceedings workshop frame problem ai lawrence kansas april 
morgan kaufmann los altos calif 
overview evaluation mechanism logic programs 
proceedings sixth international symposium lucid intensional programming pages universit laval qu ebec city canada april 
sadri 
approaches temporal reasoning 
galton editor temporal logics applications pages 
academic press 
smets mamdani dubois prade editors 
non standard logics automated reasoning 
academic press 

concerning semantic consequence relation order temporal logic 
theoretical computer science 
van emden takeuchi 
spreadsheets incremental queries user interface logic programming 
new generation computing 
van emden kowalski 
semantics predicate logic programming language 
journal association computing machinery 
wadge ashcroft 
lucid dataflow programming language 
academic press 
zhang orgun 
parallel execution temporal logic programs dataflow computation 
special issue proceedings sixth international conference computing information pages trent university ontario canada may 
journal computing information vol 

