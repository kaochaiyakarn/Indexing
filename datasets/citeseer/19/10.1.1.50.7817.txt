real time communication multi hop networks dilip kandlur kang shin real time computing laboratory department elec 
engr 
computer science university michigan ann arbor michigan 
email alps eecs umich edu domenico ferrari computer science division ee cs department university california berkeley ca 
communication real time systems predictable unpredictable delays delivery messages adversely affect execution tasks dependent messages 
develop scheme providing predictable inter process communication real time systems partially connected point point interconnection networks provides guarantees maximum delivery time messages 
scheme concept real time channel unidirectional connection source destination 
real time channel parameters describe performance requirements source destination communication sensor station control site 
channel established communications subsystem guarantees performance requirements met 
concentrate methods compute guarantees delivery time messages belonging real time channels 
address problems associated allocating buffers messages develop scheme preserves delivery time guarantees 
index terms real time systems communication scheduling guaranteed delay point point networks 
reported supported part ibm graduate fellowship office naval research contract 
opinions findings recommendations expressed authors necessarily reflect views funding agencies 
due potential high perfomance high reliability multicomputer systems point point interconnection networks natural candidates time applications 
presence multiple disjoint paths nodes networks robust link node failures 
possible support simultaneous transmissions different links total throughput achievable higher 
examples type network include hypercubes meshes 
problem providing predictable inter process communication great significance real time systems unpredictable delays delivery messages affect completion time tasks participating message communication 
tasks deadlines associated communication delays cause tasks deadlines 
address issue guaranteeing delivery messages time constraints multicomputers point point interconnection networks 
problem time constrained communication studied researchers plays important role video voice data transmission data network 
studied context communication embedded real time systems 
efforts directed mainly designing medium access protocols multiple access networks consider time constraints messages 
medium access protocols try implement distributed scheduling discipline focus developing algorithms try minimize message loss 
example case csma cd networks proposed algorithms include virtual time methods window access methods 
survey kurose discusses proposed techniques 
schemes classified best effort schemes system tries ensure messages meet deadlines give guarantees delivery times 
performance algorithms demonstrated mainly simulation certain stochastic arrival deadline patterns 
hand system information arrival pattern messages try give guarantees delivery times 
example variation rate monotonic scheduling algorithm control access token ring network 
assign priorities design time message sources periodicity message generation check possibility deadline overrun time 
deadline periodic message implicitly assumed period 
network consideration multiple access network point point interconnection structure mentioned earlier potential higher performance reliability bus ring structures 
case problem com multiple access networks consider delivery time constraints multiple stages network 
type network source node network link issue addressed access medium message scheduling network nodes 
possible messages traverse multiple links reach destination may suffer problem higher latency latency predictable message scheduling network flow control 
higher latency need problem periodic messages generally assumed deadline periodic message period typically large 
reported problem providing communication local area point point interconnection network 
ferrari anderson dash tenet projects dealing continuous media communication wide area networks closely related reported 
see section differences 
concentrating issues related design time constrained communication system provides priori guarantees message delivery 
briefly discuss best effort delivery easily accommodated design 
section describes computing environment defines problems addressed 
section solution scheme general works messages arbitrary length 
section describes buffer management scheme consistent message handling scheme section 
section presents extensions scheme help handle long messages effectively 
discuss related section draw section 
background problem statement intended application embedded real time systems assumptions appropriate environment 
system consists processor nodes connected point point dual simplex links 
node system incoming outgoing links connected links operate parallel 
nodes run common distributed real time operating system responsible control network 
operating system synchronizes clocks maintains global time base system maximum skew clocks different nodes small compared message delivery delay 
scheme achieving synchronization 
communication user level entities system connection oriented connectionless 
connection oriented case message stream byte stream oriented 
context time constrained communication communication model preserve message boundaries byte stream model suitable 
service considered suitable applications require guaranteed delivery time communication 
order guarantee delivery time message system requires information message sources contend resources message 
necessary provide mechanism describing characteristics communication resources reserved real time connections 
connection establishment procedure gives service provider case distributed operating system opportunity reserve resources connection user specify requirements 
abstraction guaranteed time constrained communication connection oriented sequenced messages call real time channel simply channel 
bidirectional connection pair user entities message generation characteristics may differ substantially directions 
preferable restrict real time channel unidirectional communication bidirectional connection composed pair channels 
resources required channel include network bandwidth buffer space message processing bandwidth 
operating system resource reservations communication requirements user specified request connection 
requirements consist source destination points description message generation process desired guarantee delivery time 
description message generation process service provider compute resource requirements provide guarantee 
perceived significant portion traffic requires guarantees periodic communication model message generation perception 
message generation process specified terms linear bounded arrival process model proposed cruz 
model adopted anderson continuous media applications terminology 
arrival process parameters maximum message size max bytes maximum message rate max messages second maximum burst size bmax messages model includes restriction time interval length number messages generated may exceed max delta rmax length message may exceed max max bound message generation rate reciprocal min minimum oe min min delivery time guarantee 
logical inter arrival time messages 
burst parameter max puts bound allowed short term variation message generation rate partially determines buffer space requirement channel 
message generation periodic represented model estimate worst case inter arrival time average rate generation 
semantics guarantee delivery time model 
logical generation time message defined maxf gamma min denotes actual generation time delay channel system guarantees message delivered destination node time words inter arrival time messages min system guarantees message channel incurs delay seconds logical arrival time 
messages arrive burst inter arrival time min may suffer larger delay guarantee respect logical arrival time 
possible increase delay consequence regulation arrivals node regulated order prevent burst arrivals channel affecting guaranteed delay messages belonging channels 
definition message delivery guarantee suited periodic message generation 
example consider periodic task generates message execution 
generation time message depends response time seen task vary invocation 
messages transmitted real time channel worst case delivery time message linked arrival time periodic task 
shows instances periodic task occur time respectively 
messages form part real time channel inter arrival time min delay instance task experiences worst case response time message released time second instance task experiences response time gamma gamma interval generation time second messages min second message arrived early 
logical generation time assigned second message greater actual arrival time 
seen generated messages delivered time task period worst case execution time periodic task 
property line schedulability analysis system 
deals problems connected computing guaranteed delay messages belonging channel scheduling messages achieve goal 
problems related necessary understand scheduling environment order compute guarantee 
section simple channel establishment procedure problem computing guaranteed delay reduced problem guaranteeing worst case delay single station node 
basic solution approach distinct phases handling real time channels channel establishment runtime message scheduling 
channel establishment phase outlined begins selection route channel 
alternatives routing packets network dynamic routing static routing 
dynamic routing offers advantage adapt network load reduce average delivery delay messages 
difficult guarantees message delivery channel dynamic routing message alternate routes network 
static routing messages belonging real time channels 
assume route selected channel possibly scheme concentrate computation guarantees buffer management 
worst case delay message link depends scheduling algorithm channels link 
link may messages time constraints effect messages worst case delay limited restricted single packet delay packet transmission aborted progress belong lower priority class 
restrict attention messages belonging real time channels calculating worst case delay 
scheduling environment encounter message scheduling independent possibly periodic message arrivals deadlines associated 
message deadline may related 
select source destination route channel 

compute worst case delay message link route 
computation necessary ensure new channel affect guaranteed delivery times existing channels 
compute buffer requirement channel 

compute sum worst case delays determined step check user specified delay 
channel establishment test 

channel established divide user specified delay links route worst case delay message 
adjust buffer requirements allocated delays 
channel establishment procedure period necessarily period 
approaches scheduling messages categorized fixed priority dynamic priority algorithms 
example earliest due date dynamic priority algorithm rate monotonic scheduling fixed priority algorithm 
discuss problems associated algorithms message scheduling channel establishment 
deadline scheduling earliest due date edd algorithm schedules messages order deadlines higher priority messages closer deadlines 
liu layland shown edd optimal preemptive scheduling periodic tasks task deadline equal period feasible schedule exists total utilization 
similar result utilization available task deadlines related periods 
main drawback edd scheduling computation guarantees difficult priority task depends relative order arrival tasks 
multi class version edd algorithm scheduling real time messages ferrari verma sufficient conditions existence feasible schedules 
approach discussed greater detail section 
fixed priority scheduling scheduling decisions fixed static priority scheduling algorithm messages processed transmitted order priority 
example rate monotonic scheduling priority assigned channel related frequency occurrence messages channel 
priority assignment scheme message arrivals channels assumed strictly periodic determine set channels schedulable 
done computing worst case response early arrival normal arrivals effect early arrivals 
time message critical time zone analysis similar liu layland verifying worst case response time delay assigned channel 
details scheme analysis appendix problems priority scheduling computation guarantees consider multiple stage service service message traverse multiple links 
response time message varies depending arrival time messages node 
messages generated fixed inter arrival time source inter arrival time message service point constant 
early arrivals possible due burstiness message generation source 
message arrives early node cause lower priority message deadline 
shows results preemptive priority scheduling message streams service requirements higher priority shows early arrival message cause message deadline note similar effect observed non preemptive discipline 
solution problem hold back early arrival consider transmission scheduled arrival time 
scheme involves setting resetting timers expensive implement 
implies message best progress possible lightly loaded links 
proposed algorithm discussion problems deadline fixed priority scheduling multi hop communication system suggests combination deadline fixed priority scheduling 
channel establishment scheme uses fixed priority scheduling computing delay form edd run time message scheduling algorithm 
channel established link route estimate worst case response time message fixed priority scheduling method outlined appendix response time analysis approximation preemptive scheduling 
pure preemptive scheduling context message scheduling transmission message interrupted message lost retransmitted 
achieve benefits preemptive scheduling message split packets message transmission interrupted packet transmission loss 
analogous allowing interrupt instruction execution 
consider message set packets packet size bounded 
packet transmission non preemptive message transmission considered preemptive 
priority assigned new channel link depends characteristics channels going link 
total response time sum response times links route channel checked maximum permissible message delay channel established greater 
case permissible message delay split proportionally different links 
procedure necessary ensure new channel affect guaranteed delivery times existing channels 
taken care priority assignment algorithm 
priority assignment worst case response time computation new channel link route requires assignment priorities existing channels link 
priority assignment problem defined formally follows 
fm kg set existing channels link maximum service time required messages channel link min message inter arrival time permissible delay assigned channel link 
service time requirement proportional product max max maximum message size maximum message rate channel new channel established delay bound need specified link basis find priority assignment augmented set channels response time computed channel priority assignment satisfies constraint assignment satisfies constraint called feasible priority assignment 
find feasible priority assignment minimize response time new channel finding minimum feasible response time link improve chances satisfying channel establishment test 
consider procedure order shown assigns priorities computes response time channels including established 
procedure works 
arrange channels ascending order associated delay 
assign highest priority new channel assign priorities channels order high priority assigned channels small delays 

compute new worst case response times existing channels priority assignment 

priority order find smallest position channels position greater 
assign priority new channel compute response time assignment procedure order condition channels worst case delay link channel exceed inter arrival time 
note total delay exceed inter arrival time channel 
prove assignment procedure order optimal sense computed response time minimum possible feasible priority assignment 
lemma proves priority assignment delays optimal sense feasible priority assignment channel set feasible priority assignment delays 
fact generalization optimality result rate monotonic scheduling 
model liu layland assumed deadline instance periodic task release time instance rate monotonic algorithm assigns priorities periodic tasks periodicity high priority assigned tasks high frequency 
optimality result scheduling algorithm derived lemma substituting 
brought attention result similar lemma proved leung whitehead 
lemma consider set channels fm kg link 
assume exists feasible fixed priority assignment channels computed response time channel satisfies constraint 
priority assignment increasing order delays high priority assigned channels small delays feasible priority assignment 
proof assume loss generality set channels ordered priority accordance feasible priority assignment implies higher priority proof complete 
exists pair adjacent channels case want prove priorities channels swapped yield feasible assignment worst case response times channels computed priority assignment scheme shown appendix includes service time exactly instance response time reduced constraint trivially satisfied 
definition worst case response time see eq 
appendix contains exactly instance response time contain instance seen channels feasible priority assignment 
evident sequence pairwise exchanges reach show feasible assignment 
theorem assignment procedure order yields smallest response time new channel proof suppose feasible priority assignment yields smaller response time 
response time set consider channel lower priority lemma priority assignment channel delays feasible assignment 
assignment implies priority channel priority lower priority lower channel priority higher priority lower means response time greater response time contradiction 
order implemented efficiently storing additional information existing channels 
maintain channels ascending order permissible delays cost sorting ameliorated 
computation response time channels important operation 
eliminate duplicate computations computing response times ascending order 
example starting point scan 
computation computation aborted 
note result holds switch priorities instance included response time stage channel establishment procedure delays assigned new channel link source destination route 
link assigned delay link shown channels allotted priorities assigned delay resulting priority order feasible 
new priority order channels necessarily compute response time may exist channel run time scheduling node system incoming outgoing links connected 
links operate parallel outgoing link considered separate entity scheduling 
messages composed packets packets carry information message channel belong 
packet arrives node generated node dispatched appropriate outgoing link 
suppose arriving packet belongs ith message channel packets belonging ith message assigned logical arrival time logical arrival time message 
source node channel defined exactly way logical generation time section denotes generation time message maxf gamma min nodes source node logical arrival time node logical arrival time message upstream node 
information logical arrival time carried packet part packet header 
consider adjacent nodes sharing link part route channel logical arrival time node defined worst case delay messages channel node seen logical arrival time message node ultimately logical arrival time source node 
definition logical arrival time feasible nodes system synchronized clocks maximum skew clocks different nodes small compared message delivery delays 
alternatively conceivable define observed arrival time messages node carrying timestamps packet headers 
type scheme problems consider multiple packet messages 
example defined arrival time packet possible packet may arrive approximately time units packet consider worst case delay just link 
consider delays multiple links separation packets increase 
case packet assigned logical arrival time local deadline 
result problems deadline scheduler 
hand defined arrival time packet message processed packet arrived 
necessary guard loss packet message possibly message timers 
logical arrival time assigned messages message scheduler uses variation multi class edd algorithm 
description second subscript dropped notation logical arrival time dealing single node 
scheduler maintains queues outgoing link corresponding service classes 
queue packets belonging real time channels current time arranged order increasing deadlines 
queue packets arranged order increasing deadlines 
queue packets belonging real time channels current time arranged order increasing logical arrival time 
queue queue contain packets belong real time channels queue contains types packets 
queue contains current real time packets scheduled order deadline organized increasing packet deadlines 
current real time packets packets logical arrival time current clock time node 
queue contains packets guarantees deadlines associated 
example packets belonging messages request best effort type service fall category 
service provided class packets improved giving priority real time packets current 
pertinent current discussion elaborate treatment class 
packets queue arrived early burstiness message generation encountered delays smaller worst case delays upstream nodes 
packets stored order logical arrival time transferred queue current 

find logical arrival time message packet belongs 

set packet 

set deadline packet 
packet current time insert packet queue insert packet queue 
invoke dispatcher 
processing packet arrival actions taken real time packet arrives shown non realtime packets simply inserted queue 
logical arrival time determined channel packet belongs sequence number message part 
logical time packet 
deadline packet set worst case delay guaranteed channel node 
packets message deadline 
packet inserted queue queue depending current early 
lastly dispatcher invoked 
dispatcher shown checks real time packets queue current transfers packets queue 
link idle examines queues order priority looking packet transmit 
packets queue considered transmission logical time horizon link 
horizon link dependent flow control explained section 
packets scheduled order logical time primarily queued order 
ordering easy identify packets horizon considered transmission 
dispatcher invoked completion transmission packet link 
situations possible queues empty queue contains packets ineligible transmission 
cases timer trigger dispatcher appropriate instant 
proof correctness establish run time scheduling scheme conform guarantees computed fixed message priorities 
stated formally theorem 

examine queue 
transfer packets packet current time queue 
link idle 
queue nonempty 
start transmission head queue 
queue nonempty 
start transmission head queue 
queue nonempty 
head queue current time 
start transmission head queue 


dispatcher theorem consider link containing set real time channels satisfy properties 

channels assigned delays link procedures section figures 
arriving messages assigned logical arrival times eqs 


messages scheduled procedures figures 
messages arriving real time channels meet delay requirements link 
proof approach stages 
stage show scheduling scheme channel set schedulable strict periodic arrivals satisfying inter arrival time constraints message deadline 
second stage consider effects deviations periodic behavior show scheme accommodate 
stage system times channels computed priority scheduling account maximum rate arrival messages times satisfy local deadlines channel 
arrivals periodic conform inter arrival time constraints feasible schedule priorities exists 
shown implies existence feasible edd schedule message set deadlines assigned channels 
case logical arrival time message arrival time arrivals go queue 
queue scheduled edd algorithm feasible edd schedule possible delay requirements messages satisfied 
stage consider message belonging channel arrives source node logical arrival time arr gamma min message assigned deadline corresponding logical arrival time inserted queue 
possibilities consider transmitted directly queue subsequently transferred queue 
instance conclude transmitted time transmitted deadline 
second case packets transferred queue 
queue scanned packet transmission transfer occur time pkt pkt transmission time single maximum length packet 
argument stage assert message arrived system logical arrival time feasible edd schedule exists messages meet deadline 
note computed response time channels includes pkt packets transferred queue transmitted deadline 
argument applied multiple messages arrive prior logical arrival time 
message arrives late source node arr gamma min assigned logical arrival time arr deadline inserted queue 
message arrivals channel assigned logical times 
message increase maximum system time messages system times messages computed considering maximum possible arrival rate messages channel feasible priority schedule exists case consequently feasible edd schedule exists 
flow control buffer management buffer space reserved real time channels source destination intermediate nodes order prevent buffer overruns consequent loss messages 
channel establishment user specify burstiness message generation max part channel specification 
burstiness determines buffer requirement source node channel 
worst case delay guaranteed channel source node buffer requirement expressed max delta max max delta max term accounts new arrivals system response time message channel 
necessary source node provide buffer space client legitimately produce messages rate buffer space provided messages lost due non availability buffers 
source node responsible making sure message generation adheres channel specification 
refuse accept messages belonging actual generation rate exceeds specified bounds 
intermediate nodes provide buffer space need depend max flow control mechanism employed nodes 
buffer reservation scheme flow control mechanism intimately related flow control regulate burstiness message arrivals intermediate nodes 
flow control mechanism considered operates holding back messages arrive logical arrival time 
flow control messages zip lightly loaded nodes back heavily loaded nodes causing buffer space problems heavily loaded nodes 
extreme case flow control messages arrive early held back message considered transmission message current time 
extreme case intermediate node need provide buffer space proportional delta max delta max rely flow control eliminate burstiness 
strict regulation result unnecessary delays messages network lightly loaded 
allocating buffer space possible messages go quickly lightly loaded nodes 
logical arrival time assigned message depends burstiness arrival process 
bound burstiness interpreted horizon logical arrival time 
burstiness measured equation message gamma current time min rewritten message current time delta min bound burstiness bm interpreted message current time bm delta min packets belonging messages logical arrival time greater horizon may discarded node 
words horizon bm delta min determines buffer requirement channel intermediate node 
node compute horizon link available buffer memory new channel established link 
horizon passed back upstream node node responsible flow control link 
upstream node sure transmits forward messages logical time node horizon packets belong single message logical time 
possible different horizon channel create problems run time scheduler forced examine packets queue individually check eligibility transmission 
single horizon means flexibility buffer management suitable run time scheduling 
buffer space required channel computed follows 
consider adjacent nodes sharing link horizon consider message arriving node channel link 
node uses flow control link deduce logical time message node current time logical time assigned message node assigned worst case delay node node contain messages belonging current time gamma worst case delay assigned channel node 
messages guaranteed leave time units logical arrival time 
node contain messages belonging logical time range current time gamma current time buffer space required hold packets min delta max equation clear minimum buffer space required channel max delta min horizon link large maximum buffer space required channel bounded max delta dd min max delay channel 
buffer space requirement node sum buffer space required channels going node 
new channel established node tries accommodate new channel computing buffer space existing horizon 
available buffer space requirement node reduces horizon link 
reducing horizon link effect reducing buffer space requirement channels link amount buffer space available increases 
extensions long messages channel establishment scheme handle messages size 
response time obtained long message substantial latency message delivery determined cumulative response time links route grow large 
underlying problem store forward delays grow size message 
long messages pose problems buffer management intermediate nodes nodes reserve sufficient buffer space hold entire message 
number channels going intermediate node large buffer space requirement transit messages important issue 
consider request channel mm cm dm dm delay mm traverse lm links 
order satisfy delay sum worst case delays lm links greater dm average worst case delay link dm lm seen lm increases delay available link reduces may possible satisfy delay requirement 
buffer space required link mm depends cm burstiness parameter 
delay buffer problems long messages alleviated splitting messages packet groups pipelining transmission packet groups message channel mm split nm packet groups size grp cm nm delay grp transmission packet groups sequence shown 
shows message split packet groups grp grp transmitted links 
transmission packet group complete interval length grp grp represents delay stage pipeline exceed equal maximum response time packet group links route 
pipelining mechanism enables bring overlap transmission packets belonging message mm different links route 
delay message mm grp nm lm gamma grp example 
constraint grp satisfy grp dm nm lm gamma selection nm packet groups larger value nm preferable standpoint delay computation 
ratio grp grp defines fraction time required process packet group packet period desirable small 
ratio expressed terms parameters mm cm dm delta nm lm gamma nm monotone decreasing function nm buffering problem reduced intermediate nodes provide buffer space size packet group message size 
increase flexibility buffer management appears increase number term packet group distinguish entity physical packet 
packet group contain physical packets 
link link link grp grp delta grp delta grp delta grp delta grp grp grp grp grp grp delta grp delta grp delta grp delta grp grp grp delta grp packet group illustration 
packet groups nm possible preferably packet packet group 
pipelining scheme necessary packet groups message transmitted link arrival message channel 
imposes restriction possible values number packet groups 
grp delta nm eqs 
get dm nm lm gamma delta nm equation rewritten constraint nm solution depends relative values dm lm lm nm nm lm gamma dm cases considered dm case nm take value 
large nm grp small implies priority assigned channel high 
interfere resource requirements channels result rejection subsequent channel establishment requests 
dm lpm optimal choice nm largest integer satisfies eq 

example dm example optimal choice nm 
select source destination route channel 
determines lm number links route 

select nm number packet groups 

compute worst case delay message link route 
desired worst case delay set dm dm nm lm gamma 

check buffer requirement compute horizons different links 

check channel accommodated link route 
channel establishment test 

channel established assign dm delay link route 
channel establishment packet groups 
dm lpm seen eq 
solution dm delta delay requirements stringent case 
pipelining message level parallelism transmission different links 
practice choice nm affected size resulting packet group group delay 
grp small include transmission time packet packet transmission interrupted 
channel establishment channel creation request handled decide request treated regular channel channel packet groups 
decision parameters channel dm number links route destination 
channel establishment procedure modified packet groups shown 
decision consider request channel packet groups taken step 
worst case delay link computed procedure order case target worst case delay dm dm nm lm gamma packet group link 
channel establishment check link able satisfy target worst case delay violating worst case delay existing channels 
response time computation procedure order modified handle packet groups see 
channel established target worst case 
arrange existing channels ascending order associated delay delay packet group channel 

insert new packet group order required worst case delay dm 
compute new worst case response times channels priority assignment 

check channels channel established 
extensions procedure order packet groups 
delay specified assigned priority target dm priority assignment increase worst case response time existing channels may cause exceed assigned worst case delay new channel accepted channels 
response time computation scheme procedure order accommodate packet groups 
consider existing channel response time delta dm 
nm channel consider mm channel period dm message length equal size packet group 
channels nm delta dm treat mm regular channel length cm inter arrival time run time scheduling packets belonging packet group considered part single unit logical arrival time 
logical arrival time packet group determined basis logical arrival time message sequence number packet group 
example logical arrival time packet belonging ith packet group message packet delta dm defined regular channel 
computation done source node 
intermediate nodes logical arrival time computed simply logical arrival time previous link 
see global time base simplifies design 
scheduling packet handled logical time horizon link 
buffer requirement intermediate nodes provide buffer space sufficient hold packet groups 
buffer requirement computed horizon section small changes 
channel considered inter arrival time dm message size equal size packet group cm nm related concept unidirectional real time channel developed researchers dash project 
real time channel considered similar deterministic real time channel 
considers types channels statistical messages guarantee successful delivery certain probability best effort guarantees 
consider statistical channels mainly realtime applications require hard guarantees 
comer yavatkar developed abstraction called flows similar unidirectional channel give guarantees delivery time messages 
flows identified best effort channels 
parameters description message arrival process linear bounded arrival process model cruz small modifications 
outline channel establishment scheme similar different respects 
examined problem guarantee computation depth developed scheme computing worst case response times priorities 
corresponds delay bound test 
shown delay bound test special case priority response time computation scheme 
integrated solution problem buffer reservation flow control horizon model 
shown channels long messages require special consideration scheme accommodate 
problem time constrained communication multi hop network addressed paris system 
approach providing limited buffer space switching nodes fifo scheduling obtain upper bound network delay node 
limited buffering result packet loss efforts aimed maximizing throughput keeping probability packet loss certain level 
approach problem go queueing framework proposed golestani 
approach framing technique switching nodes eliminate packet loss achieve guaranteed delay 
delay tied sizes frames reducing flexibility satisfying different delay requirements 
appears approach appropriate mainly required delay large compared periodicity message arrivals voice transmission 
identified solved problems related establishment management real time communication channels 
algorithms computing worst case delay messages scheduling messages 
computation priority scheduling shown optimal certain conditions 
mechanisms buffer allocation flow control suitable real time channels preserve guarantees delivery time 
ideas currently building prototype communication subsystem distributed real time system called developed real time computing laboratory university michigan 
zhao ramamritham virtual time csma protocols hard real time communication ieee transactions software engineering vol 
pp 
aug 
kurose schwartz yemini controlling window protocols communication multiple access networks ieee trans 
communications vol 
pp 
jan 
zhao stankovic ramamritham multi access window protocol transmission time constrained messages proc 
th international conference distributed computing systems pp 
june 
kurose schwartz yemini multiple access protocols time constrained communication acm computing surveys vol 
pp 
mar 
responsive deterministic ieee token ring scheduling journal real time systems vol 
pp 
sept 
ferrari guaranteeing performance real time communication wide area networks tech 
rep ucb csd ucb computer science division eecs berkeley ca jan 
ferrari verma scheme real time channel establishment wide area networks ieee journal selected areas communications vol 
sac pp 
apr 
anderson software architecture network communication proc 
th international conference distributed computing systems pp 
june 
anderson ferrari dash project overview tech 
rep ucb computer science division eecs berkeley ca feb 
ramanathan shin vlsi routing controller proc 
ieee int 
conf 
computer design vlsi computers pp 
ieee oct 
ramanathan kandlur shin hardware assisted software clock synchronization homogeneous distributed systems ieee trans 
computers vol 
pp 
apr 
cruz calculus network delay note topologies interconnection networks 
phd thesis university illinois urbana champaign july 
available technical report eng 
anderson wahbe govindan andrews support continuous media dash system proc 
th international conference distributed computing systems pp 
ieee may 
anderson schaefer srp resource reservation protocol guaranteed performance communication internet technical report tr international computer science institute berkeley feb 
kandlur shin traffic routing networks virtual cut capability proc 
th international conference distributed computing systems pp 
ieee may 
control robotics procedural control physical processes proceedings ifip congress pp 

liu layland scheduling algorithms multiprogramming time environment journal acm vol 
pp 
jan 

leung whitehead complexity fixed priority scheduling periodic real time tasks performance evaluation vol 
pp 
dec 
comer yavatkar flows performance guarantees best effort delivery systems technical report csd tr computer science department purdue university west lafayette july 
gopal paris approach integrated high speed private networks intl 
journal digital analog systems vol 
pp 
apr 
gopal grover sidi real time packet switching performance analysis ieee journal selected areas communications vol 
pp 
dec 
golestani congestion free transmission real time traffic packet networks proc 
infocom pp 
ieee june 
golestani go queueing framework congestion management proc 
sigcomm pp 
acm sept 

chen shin kandlur addressing routing broadcasting hexagonal mesh multiprocessors ieee trans 
computers vol 
pp 
jan 
lehoczky sha ding rate monotonic scheduling algorithm exact characterization average case behavior proc 
real time systems symposium pp 
ieee dec 
schedulability analysis consider set channels fm mg share common link maximum service time message channel maximum permissible delay messages belonging link inter arrival time 
assume channel set ordered priority channel highest priority 
shown worst case delay message occurs arrival time coincides arrival time messages equal higher priority 
denote critical instant time 
transmission message delayed instances higher priority messages system subsequent arrivals new instances messages 
arrival times instances set system time requirement message higher priority messages shown see 
fd gamma cg gamma delta dt channel schedulable delay bound satisfied worst case response time messages belonging smallest value set channels said schedulable channel set schedulable 
results hold conditions preemptive scheduling employed message aborted stage execution loss 
model messages split packets packet transmission interrupted 
schedulability conditions modified account new worst case conditions 
worst case response time message occurs messages equal higher priority arrive time packet belonging lower priority message transmitted time 
system time requirement case pkt gamma delta dt pkt service time maximum size packet service time message including overheads packetization 
