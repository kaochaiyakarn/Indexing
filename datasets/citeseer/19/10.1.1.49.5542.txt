bridging framework modeling devices users interfaces thomas moher victor eecs department university illinois chicago morgan chicago il usa tel mail moher eecs uic edu bastide philippe lis university toulouse place france toulouse cedex france tel mail bastide fr presents bridging framework combining results various models human computer interaction 
views system composite interacting subsystems describes subsystems structured permit compositions responsibility global behavior appropriately ascribed 
presents human device example wrist watch develops range task device models 
devices tasks modeled colored petri nets partitioned cleanly distinguish submodel component visibility interface affordances 
formality petri nets allows axiomatic validation isolated interacting subsystems 
keywords petri nets user interface design system modeling task modeling research human computer interaction abounds various notations formalisms models aim capturing aspects domain 
underlying problem various disciplines relating hci complex right easy mechanism transfer results expertise diverse theories models 
hci encompasses concerns ranging human factors software engineering device mechanics necessary approaches define crisp boundary stating belongs modeling domain exterior 
part mixture concerns may stem recognition issue hci adequately treated attempt respond impoverished model external system 
generally clear respect hci paradigm certain approaches lend human side mainly devoted system side 
example exhaustivity approaches may ranked interface modeling formalisms 
proposals attempt include investigation domain interface model internals application constitute functional kernel 
hand formalisms focus description analysis users attempting capture essence goals tasks undertaking modeling cognitive behavior 
fact formalism dedicated domain generally considered beneficial allows straightforward mapping concepts notations allows building concise descriptive models 
discrepancies approaches difficult achieve coherent model encompassing system interface potential users 
bridging approaches achieved manual combination user device models 
part restricted skilled relatively simple tasks static production rule goms analysis feasible extensions goms interactive dynamic tasks demonstrates potential modular modeling approaches 
limited availability approaches may stem laborious nature user model construction absence standardizing framework 
belief feasibility generic user models encouraged general user modeling 
attempt provide unified approach framework describe inner behavior system software hardware interface offers users behavior system users 
system user models may built analyzed isolation keeping formal notation 
system user models may merged useful results may obtained formal analysis global model resulting merger 
language requirements choice particular lingua franca modeling important decision meet criteria formality 
semantics language precise models free ambiguity subjective interpretation 
approach mathematically defined semantics models may verified static analysis proving correctness testing implementation 
executability 
ability execute design provides insights system operation depends solid formal base 
graphical representation 
relative value graphical languages remains open research area offer certain benefits particularly animation simulation 
colored petri nets particular support range representational styles allow relatively smooth tradeoff graphical textual modeling elements 
parallelism non determinism 
ability properly describe parallelism concurrency synchronization necessary modern interactive systems users systems tasks parallel 
highly precise device models usually deterministic tasks representing free users non deterministic 
formalisms satisfy criteria satisfy 
led select colored petri nets formalism choice 
colored petri nets modeling petri nets system described terms state variables called places depicted ellipses state changing operators called transitions depicted rectangles connected annotated arcs 
state system marking net distribution tokens net places 
colored petri nets tokens assume values predefined types colors 
state changes result firing transitions yielding new distribution tokens 
transition firing involves steps tokens removed input places values bound variables specified input arcs new tokens deposited output places values determined emission rules attached output arcs 
transition enabled fire input places contain tokens value tokens satisfy optional boolean constraints attached input arcs 
depicts small petri net illustrate notational conventions 
different tokens reflect fact different domains value color 
petri net notational conventions transition enabled fire values tokens place bound variables place bound variable satisfy boolean condition 
firing input tokens removed places new tokens deposited places values new tokens place defined emission rules 
value new token place determined conditional rule true value value 
notation adapted language brevity 
note case number tokens remained constant general token cardinality conserved constraints fan fan transitions 
device model examples shall simple watch conventional stem control setting time unlabeled buttons mode phase 
mode button toggles states run set 
phase button toggles am pm displayed watch face mode set pressing phase button run mode effect 
simple wrist watch model concrete device watch transitions net model physical actuators offered device firing transition considered initiated user action 
depicts petri net model watch considering phase setting includes transitions corresponding phase mode buttons 
net places corresponding watch mode phase states 
pressing mode button alters state device removing token mode state place binding variable mode depositing new token mode state 
generic function toggle values place domain case run set 
phase button transition input arcs output arcs 
economy notation arcs mode state phase button collapsed single bidirectional edge annotation mode represents binding input arc transition emission rule output arc 
consolidation conceptual significance view bidirectional edge limiting operations non destructive inspection mode state 
value new token phase state determined annotation output arc mode button case simple conditional function toggles phase mode set 
mode state phase state marked initial token precise values tokens unspecified watch may states outset task 
presence tokens places sufficient enable button transitions boolean constraints attached input arcs 
phase setting simple wrist watch partitioned graph nodes bands reflect role visibility model places transitions 
positions labels arcs bands significant 
interaction band includes input affordances device provides user presentation band represents device state information visible user internal band contains places transitions user direct access 
permits distinguish example phase state visible watch face mode state 
modeling impatient user task develop model watch user wishes set phase pm 
different users course approach task different fashions model target user familiar watches anticipates modal operation unfamiliar particular watch 
user common strategy simply push buttons random display registered pm 
petri net model strategy shown 
place desired display marked token value pm indicating user desire set watch pm phase 
presence token enables firing transitions top button bottom button conditionally enables transition quit 
impatient user model watch device model added bands reflect affordances state visibility 
presentation band empty reflecting fact user presents sensible state information device act 
general places may exist 
interpretation band represents user expectation phase mode visible user interface 
features model worth emphasizing 
outset user know role buttons assume transition labels top bottom mode phase 
second pressing button may may enable quit transition enabled user may choose fire 
merging models models incomplete device operate user user complete task device 
certain questions model may answered isolation questions global system addressed able effect merger components models 
depicts global model resulting merger device user models simple watch 
single agent models bands reflect interaction affordances state visibility 
net place interpretation band user merged net place presentation band device form device presentation place global model 
bands merely cosmetic impose constraints topology global net 
arcs internal components agents prohibited inspection arcs allowed internal presentation transitions agent presentation places agent 
global model simple watch impatient user merging models requires matching operation device user interaction transitions device presentation user interpretation places 
table shows mapping construct shall discuss mapping takes place 
merging models affords opportunities analyze simulate global system 
assigning initial markings watch state places take advantage large body existing petri net theory prove certain properties global system 
global device model user model phase button top button mode button bottom button phase state phase display table device user model component matching suppose watch state initially run mode am phase difficult condition user confront 
formal proof apparent exists sequence transition firings allow user complete desired task guarantee happen 
example sequence action mode mode phase change phase watch 
modeling careful user strategy impatient user employed 
careful user adopt policy strict alternation buttons contrast impatient user strategy guaranteed reach goal state maximum button pushes 
worst case watch set mode user pushes mode button 
depicts global model incorporating strategy note device model remains unchanged 
turn modeled addition black token desired state contains tokens representing user desire turn black 
turn token hold different values top button pushed bottom button pushed 
order describe toggling buttons model arc annotations desired state place buttons changed 
precondition added arc condition turn indicating button pushed value turn token firing button transition toggles state turn token desired state leaving desire value unchanged 
analysis net reveals regardless initial markings net places user set phase pm transition firings 
replacing user model modifying device model produced global model analysis reveals distinct provable properties model 
global model simple watch careful user modeling learning user models previous section adequate describe strategy accomplishing task setting watch phase pm phase provide description user learns watch particular button 
effective models human computer interaction need support description learning specifics isolated task completion 
device model simple watch dictates user strategy guarantee watch phase set pm button presses 
bit reflection reveals button presses sufficient determine identity buttons 
depicts model reflects user strategy 
model number button pushes explicitly maintained place labeled grayed token domain value integer assigned initial marking 
turn enforced counter odd 
constraints arcs buttons symbol signify modulo operator 
global model simple watch learning user strategy represented net calls user inspect phase display latch result press button inspect phase display 
display changed presses result change token numeric value deposited know place dummy token deposited 
presence numeric token represents acquisition button identity knowledge part user 
expectation failure examples far illustrated perfect formal correspondence user interpretations device device presentation 
contrast depicts user model reflecting expectation phase changes depend strictly non modal button press 
merging model device model introduces classes expectation failures 
unmatched interaction mode button device model correspondent user model 
user knowledge existence mode button fired remains enabled device model 
global model represent discrepancy filling rectangle representing transition indicating transition dead 
user model expecting simpler watch second complication involves case inconsistent modeling relating phase button 
initial marking mode state set phase button transition enabled firing change contents phase display 
mode state run pushing phase button effect mode button pushed phase button transition dead 
dual personality phase button reflected articulated transition 
part transition unfilled acts normal transition dependent global inputs part filled depicted dead 
device place inputs transition attached parts transition 
better watch examples point employed simple watch model phase explicit interface mode hidden 
section consider watch mode explicit blinking phase display watch set mode buttons explicitly labeled 
device model watch shown nearly identical change mode state moved internal band presentation band reflect visibility user 
accessibility mode state user interface affords strategy requiring maximum button presses 
global model employing device model optimal user strategy user explicitly tests senses mode 
watch run mode user presses mode button confirms mode state change presses phase button complete task 
watch set mode user directly presses phase button 
modeling expectation failures limitation model distinction presence absence hard labels watch buttons represented net formalism 
way remedy explicitly model labels token values label places contained device model include label places inputs button transitions 
positioning label places presentation internal band device denote presence absence hard labels respectively 
solutions possible 
petri net model better wrist watch user model implicit reflects expectation mode state place interpretation band 
attempting merge user model simpler watch model resulted unmatched interpretation corresponding place available device presentation band 
resulted formation dead place analogous dead transitions previous section 
global model optimal user better watch important note identity buttons need resulted explicit labels user interface knowledge may come prior experience device 
attempted illustrate desirability common framework combining theories models knowledge various disciplines may relevant say global model may say different terms formalisms 
purpose framework define combinable unit modeling 
particular framework articulated indicates specific model define combinable form concerns separated boundaries unambiguously identified semantics 
task models represent instances early interactions skilled behavior embody theories sequences task models generated users task models device models composed 
general users existing task device knowledge experience evolve better models develop long term strategies 
framework provides formal representation fruits activities 
acknowledgments research funded part national science foundation cda centre etudes de la navigation toulouse 
anderson architecture cognition 
harvard press cambridge 
barnard wilson maclean approximate modelling cognitive activity expert system theory strategy interactive design tool 
computer journal pp 

barnard bridging basic theories artifacts human computer interaction carroll ed designing interaction psychology human computer interface 
cambridge univ press cambridge pp 

bibby payne 
internalization specificity device knowledge 
human computer interaction pp 

card moran newell psychology human computer interaction 
lawrence erlbaum associates 
carroll olson 
mental models human computer interaction helander ed handbook human computer interaction elsevier science publishers north holland pp 

coutaz bass developing software user interface 
addison wesley publishing 
foley second generation user interface design environment model runtime architecture 
proc 
interchi amsterdam april pp 

predicate transition nets jensen rozenberg eds high level petri nets theory application 
springer verlag berlin pp 

gray john atwood project validating goms analysis predicting explaining real world task performance human computer interaction pp 

gray 
program vcr 
poster chi conf 
human factors computing systems 
boston ma 
harel statecharts visual formalism complex systems 
science computer programming 
hix hartson developing user interfaces ensuring usability product process 
wiley professional computing 
jacob specification language direct manipulation user interfaces 
acm transactions graphics pp 

jensen coloured petri nets invariant method 
proceeding application theory petri nets springer verlag 
john vera goms analysis graphic machine paced highly interactive task 
chi conf 
human factors computing systems pp 

kass finin general user modeling facility support intelligent interaction sullivan tyler eds intelligent user interfaces 
publisher pp 

kieras bovair approach formal analysis user complexity 
international journal man machine studies pp 

searching unity diversity exploring interface concept 
proc 
interchi acm press pp 

moher mak blumenthal comparing comprehensibility textual graphical programs case petri nets 
empirical studies programmers fifth workshop 
ablex publishing pp 

moran command language grammar representation user interface interactive computer systems 
int 
man machine studies pp 
murata personal communication 
bastide design user driven interfaces petri nets objects proceedings th conference advanced information systems engineering caise 
lecture notes computer science springer verlag 
payne green task action grammars model mental representation task languages 
human computer interaction pp 

peck john browser soar computational model highly interactive task 
chi conf 
human factors computing systems pp 

anderson keystroke analysis learning transfer text editing 
human computer interaction pp 

tauber etag extended task action grammar language description user task language 

van extending petri nets specifying man machine dialogues 
international journal man machine studies woods roth cognitive systems engineering ed handbook human computer interaction elsevier science publishers north holland pp 

