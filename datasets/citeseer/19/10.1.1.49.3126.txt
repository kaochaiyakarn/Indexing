genetic algorithms explore pattern recognition immune system draft december comments welcome stephanie forrest dept computer science university new mexico albuquerque nm forrest cs unm edu brenda dept computer science university new mexico albuquerque nm cs unm edu robert smith dept engineering mechanics university alabama tuscaloosa ua edu alan perelson theoretical division los alamos national laboratory los alamos nm asp receptor lanl gov describe immune system model universe binary strings 
model directed understanding pattern recognition processes learning take place individual species levels immune system 
genetic algorithm ga central component model 
study behavior ga pattern recognition problems relevant natural immune systems 
compare model explicit fitness sharing techniques genetic algorithms show model implements form implicit fitness sharing 
immune system protects extraordinarily large variety bacteria viruses organisms 
constantly surveys body presence abnormal cells tumor cells infected cells destroys cells 
perform tasks immune system capable distinguishing self cells molecules destroy foreign cells molecules antigens destroy 
task fully quantified inman calculated immune system appears able recognize foreign molecules 
practical terms essentially foreign molecule immune system created laboratory having appeared evolutionary time recognized foreign 
human genome contains genes 
rule gene equals protein estimate human contains self proteins immune system needs distinguish possible foreign antigens 
called self nonself discrimination problem 
information processing perspective recognizing limitless number foreign cells molecules antigens distinguishing self molecules formidable tasks 
immune system pattern recognition abilities impressive considers system distributed bodies central immune organ controls antibodies produced 
individual cells molecules lymphocytes antibodies comprise immune system encode operate control mechanism parallel 
enormous diversity molecules employed immune system key pattern recognition capabilities 
underlying principle called clonal selection 
clonal selection related darwin theory natural selection applied cell populations immune system 
recognition immune system performed lymphocytes lymphocytes 
lymphocyte expresses receptor molecules particular shape surface 
elaborate genetic mechanism involving combinatorial association number gene segments underlies construction receptors animal genetic capability expressing different receptors cells different receptors cells 
mice humans thought resident population lymphocytes express repertoire different receptors time 
foreign molecule cell encountered high probability bind receptors lymphocytes 
event coupled lead lymphocyte activated growing clone cells responds antigen antibody cell variety factors cell 
antibody cell soluble form cell surface receptor shape selected ability bind antigen 
analogy natural selection fittest clones ones recognize antigen survive grow clones recognize antigen die replaced 
system adaptive clones grow turn mutation mechanism generates high frequencies point mutations genes code specifically antibody 
mechanism called somatic mutation coupled selection improved antigen binding results cells high affinity matches antigen 
clonal selection efficiently receptors lymphocytes need diverse recognize essentially antigen 
call repertoire complete exists receptor recognize antigen 
probablistic model perelson define precise conditions repertoire completeness show receptors repertoire random expect repertoire complete 
receptors entirely randomly 
clonal selection cells recognize antigens grow cells recognize antigen die 
biases develop repertoire express learning antigenic environment 
summarize immune systems need diverse need express biases repertoire represent antigenic world 
biases develop lifetime particular individual call learning 
particular biases maintained long periods called memory 
clonal selection operates individuals traditional type evolution operates genes determine specificity antibodies cell receptors 
genes called variable region genes 
hypothesis evolutionary time scales genes evolved biases recognizing common pathogens 
reason believe biases exist 
example cells generally require help cells order activated divide antibody 
certain antigens cell walls bacteria treated differently stimulate cells absence cell help 
appears immune system learned bacteria need recognized special way 
assuming type learning takes place natural selection genetic algorithm provides natural model studying evolution antibody cell receptor region genes 
developed model directed understanding pattern recognition processes learning takes place individual species levels immune system 
model universe antigens antibodies precisely receptors cells cells represented binary strings 
model uses genetic algorithms gas idealized computational model darwinian evolution principles genetic variation natural selection 
ga crossover reasonable model clonal selection ga crossover models genetic evolution 
formulate versions pattern recognition problems immune system appears capable solving 
solve problems ga goal research twofold understand real immune system information processing perspective ideas generated studying immune system construct new powerful parallel algorithms 
example show exploit insights gained studying operation immune system develop new algorithm maintaining diversity ga search procedures 
created simplified universe bit strings 
bit string universe specialized model closely clonal selection evolution regions 
study computational properties basic model expect general properties model hold specialized biologically faithful models 
bit string model explored ga maintain degree diversity required immune systems generalization context pattern recognition problem evolve ga order ga evolve set bitstrings property repertoire completeness need understand ga solves coverage type problem 
ga discover set pattern matching antibodies match set antigen patterns doing maintain diversity population 
typical applications gas process populations potential problem solutions evolve single population member specifies optimized solution 
majority ga analysis focused optimization applications 
pattern recognition perspective formulation antigen recognition problem viewed string matching problem task discover sets common substrings collectively cover population antigen strings antigen antibody string matches substring contained antigen 
learning task evolve set antibodies meets coverage requirement 
ecological settings set individuals needed problem generalization arises individuals population assign individual subpopulation task niche fitness peak 
immune system means system capacity produce antibody exact match antigen clonal selection problem store program specialized antibody possible antigen genetic evolution problem 
cases reasonable response evolve individuals cover antigen 
note traditional ga optimization generalist usually arise population tends pick fitness peak specialize optimizing 
settings coverage solutions important set cover problems recognition problems learning classifier system imperative capacity evolving 
ideally degree generality discovered solutions emergent property system depends certain characteristics environment parameters learning system 
section describe simple universe bit string antibodies antigens combined ga section describe immune system pattern recognition problems 
subsequent sections show ga solve problems 
analyze behavior model showing related earlier fitness sharing algorithms developed gas 
binary immune system model immune system model universe introduced farmer antigens antibodies represented binary strings 
certainly simplification real biology genes specified letter nucleic acid alphabet recognition antibodies antigens dimensional shapes physical properties 
universe rich allow formulate difficult pattern recognition problems 
experiments calculations strings length 
possible bit strings search space deal large 
model important simplification bit string represents genes code antibody phenotypic expression molecule 
example mutation operates bit string causes antibodies mutate 
model explicitly consider region genes construction antibody molecules joining set small gene segments recombination genes individuals population 
antibodies created directly genetic operations set gene segments 
approximation probably captures reality 
natural immune systems diversity gene segments large segments joined extra dna added randomly deleted joints 
gene segments called diversity placed molecule multiple copies seemingly random 
immune system place number mechanisms attempt randomize antibodies region genes 
bypass genetics initially antibodies randomly 
interested pattern antibody antigen complement length contiguous substrings scoring complementary matches antigens antibodies 
family matching functions defined lengths contiguous substrings 
recognition properties immune system model includes recognition idealized antigens antibodies consider immune system antigen recognized 
receptor antibody said match antigen bit strings complementary 
antibody match different antigens simultaneously require perfect bit wise matching 
degree match quantified matching function antigen theta antibody 
illustrates matching procedure 
possible match rules plausible physiologically 
example simply count number complementary bits identify contiguous regions complementary bitwise matches string 
introduced function computes lengths complementary regions combines long regions rewarded short ones 
basic idea different specific functions defined linear nonlinear studied different match functions including simple linear exponential threshold functions 
shall simplest functions simply counts total number bits differ antigen antibody 
bit string representation antibodies construct random populations antigens antibodies 
antibodies matched antigens scored fitness function evolved conventional ga illustrates basic immune model 
simple model study immune system learns antibodies useful 
evolutionary time scales information encoded genes somatic time scales information encoded lymphocyte repertoire 
cases desire coverage space foreign material desire foreign string matched antibody 
depending match rule trivial problem 
example suppose define successful match antibody complementary antigen bit need antibodies cover possible antigen means don care 
scheme antibodies match self molecules 
better require foreign antigen recognized antibody self molecule recognized 
explicitly consider problem 
approximate requirement matching self matching function antigens 
antibodies 
au gamma gamma gamma gamma gamma gamma gamma gamma gamma psi antibodies 
ga schematic illustration binary immune model 
antigens antibodies matched pairwise match function compute fitness antibody antibody population evolved ga match scores 
assigns higher fitness greater number matches occurs idea small number matches sufficient generate high fitness expect matches self molecules foreign molecules 
criterion matching specific avoid matching self time matching foreign molecules 
pattern recognition problems basic immune system model described section variations created changing details types antigens recognized method antibodies chosen matched antigens 
experimented variants order solve pattern recognition problems described subsections 
problem detection schemas immune system needs detect bacteria pathogens 
bacteria inherently different human cells 
example bacteria cell walls polymers occur humans 
expect immune system recognize bacteria partially basis existence unusual molecules 
motivation study ga ability detect common patterns schemas antigen population requiring model differentiate multiple incompatible solutions 
idea common schemas represent generic properties antigen population just described bacteria 
simple example consider antigen population constructed schemas means don care 
refer half length schemas 
example antigens half bits set remaining bits set randomly half bits set randomly second half set shown example population evolve antibody population solves problem algorithm described subsection compute antibody fitnesses 
fitness algorithm problem antigen population set described 
fitness calculated antibody procedure 
choose sample ae antigens randomly initial set antigens replacement note total antigen population sample chosen remains fixed run ga 
antigen sample compute match score 

fitness antibody average match score computed sample ae antigens 
number antigens ae chosen match typically 
illustrates algorithm ae 
principle ga able solve problem evolving population antibodies 
ga point view fitness function quite noisy antibody may receive different fitness different times sampling variance 
interested knowing effect noise bits filled randomly ga able determine optimal string 
difficulty problem increased subdividing antigen population 
example 
antigens 
antibodies 
qk xy schematic illustration problem random sample ae antigens 
matches antibody shown averaged yield fitness average complementary match score 
refer quarter length schemas 
second scenario quarter length schemas average fitness optimal individual lower half length schema case 
antigen match fewer defined bits optimum antibody match perfectly 
optimum fitness cases calculated follows half length schemas optimal antibody matches half bits probability remaining bits probability assuming bits chosen random 
fitness number bits matched 
quarter length schemas maximal fitness 
general bit string length schemas length generalist antibody fitness gamma note just biological system solutions specialists match single antigen extremely match antigens degree need match extremely 
antibody generalist 
specialist antibodies tend problem antigen specialist antibody recognizes antibody subsequent generations ae high 
ga detect common schemas 
genesis public domain software package modified accommodate fitness function studied ga solves problem antigens contain predefined schemas 
experiments population antibodies antigen antibody bits long sample size ae crossover mutation rates average antibody fitness measured antigens containing half length quarter length length schemas 
plotted point average runs 
respectively defined genesis 
antibodies chosen random average initially matched half antigen bits initial average fitness 
shows ga average fitness antibodies increases monotonically number generations ultimately reaches asymptote 
half length quarter length eighth length schemas graph 
note various asymptotes precisely fitness value predicted equation asymptotes decrease defined schema length decreases 
normalizing fitness values ratio average fitness maximum fitness allows plot progress ga different length schemas single plot 
shows fitness converges maximum value faster longer length schemas 
expected noise problems 
average fitness constant population antibodies converged shown 
experiment shows ga find common schemas presence considerable noise 
shown fig 
problem takes longer solve progressively harder ratio defined undefined schemas decreases 
immunological terms see antibody match different antigens long match need small portion schema antigen 
noise increases progressively difficult find common schemas 
suggests may limit small schema discovered distinct antigens single antibody recognize 
problem maintaining diversity second problem study antigen populations matched single antibody type 
experiments interesting immunological perspective ratio average antibody fitness maximum attained fitness measured half length quarter length length antigen schemas 
plotted point average runs 
simple example problem maintaining complete repertoire 
example simplest possible case suppose population antigens 
order antibody population match antigens need antibodies 
solution problem require ga maintain different solutions simultaneously 
problem difficult problem consistent solution 
simple example multiple peaks problem inconsistent solutions maximally different 
reason multiple peaks problems difficult ga strong convergence tendencies 
typically multiple peak problems genetic drift lead ga randomly converge peaks 
immune problem require resulting population antibodies representatives ones zeros 
note role crossover problem obvious hybrids solutions useless 
set antigens fixed antibodies initialized completely random see ga discover correct antibodies initially answer setting population ratio test solution stable time 
giving answer initially maintenance answer tested 
evolve population antibodies maintains diversity ga discovered needed fitness scoring scheme different solve problem 
considered properties immune system developing fitness measure 
antigens typically encountered sequentially 

immune system responds subset lymphocytes come contact antigen 

competition antigen cells bind highest affinity grow fastest 

antibodies improved point mutation process known somatic mutation 
property mimicked ga relies primarily mutation crossover 
turns fitness scheme similar best match strategy classifier systems described subsection 
diversity algorithm problem 
antigen chosen random 

sample antibody population size oe chosen randomly replacement 

antibody sample matched antigen 

antibody sample highest match score match score added fitness 
fitness antibodies remains unchanged 

process repeated antigens typically times number antibodies algorithm illustrated 
diversity algorithm address questions concerning ga performance setting ffl conventional ga maintain diversity population recognize different antigens 
conventional ga maintain subpopulations different parts space converge peak 
maintain diverse subpopulations ffl different peaks size population maintain carrying capacity 
ffl conventional ga discover multiple subpopulations random start 
ffl matter different peaks say measured hamming distance 
ffl specialists evolve conditions 
address questions genesis conduct series ga experiments diversity algorithm 
stated experiments antibody population size ran generations crossover mutation rates respectively 
number samples oe antigen antibody bits 
antigens antibodies 
phi phi phi phi phi hj oe max schematic illustration problem case antigens simplest possible case 
single antigen chosen random matched sample antibodies size oe example 
antibody sample highest fitness match score increased 
fitness antibodies remains unchanged 
ga maintain multiple subpopulations 
simplest experiment uses types antigens 
types antigens equal probability chosen match antibody 
types bit antigens 
matching function population antibodies initialized examples correct answers maintains answer 
show example initial antibody population 
due crossover antibodies lost peak initial distribution antibodies peaks maintained generations shown 
crossover rate reduced number hybrid antibodies reduced larger fraction antibodies maintain peaks shown 
initial population antibodies skewed antigens antigen population probability choosing probability choosing different initial ratio appropriate antibody types antibody population adjusts appropriate percentage 
shows phenomenon initial antibody distribution 
fewer generations antibody population adjusts back distribution 
indicates model strong tendency self regulate quite robust various kinds perturbations noise sampling error 
multiple peaks experiments axis shows number antibodies generation 
plotted point average runs antibody bits correct scored correct 
maintaining peaks initial bias antibodies maintaining peaks initial bias antibodies discovering peaks initial bias antibodies discovering peaks initial antibody bias 
legend labels antigen antibodies recognize 
discovering variable size peaks initial antibody bias 
runs averaged antibody bits match antigen scored correct 
legend labels antigens antibodies recognize 
ga discover multiple peaks 
experiment initial antibody population random seeded correct answer previous experiment 
initial population antibodies random samples discovered maintained shown population peaks discovered maintained 
sample size oe important control parameter 
example sample size resulting antibodies converged peak shown 
graphs number antibodies representing peak population evolves shown experiments shown suggest number peaks increased arbitrarily long population large 
fixed population size maximum carrying capacity happens peaks equal size 
peaks different biases discovered maintained antibodies representing higher biased peaks 
consider antigen population 
experiment peaks discovered number representative antibodies corresponds antigen bias 
antibody matched antigen prevalent 
antibody representatives population antigen identified 
carrying capacity population 
answer antigen population size types table estimated recognition capacity 
entries table mean number antibodies matching antigen standard deviation parentheses run success 
runs averaged entry table 
run antibody representatives antigen generation run considered success statistics counted table 
entry table zero runs unsuccessful 
antibody correct counted 
question important biologically defines recognition capacity immune system containing antibodies 
antibody population sizes considered 
sample size oe held constant antibody population size 
antigens randomly generated generated equally probable run 
average number correct antibodies peak reported table 
table see needs approximately antibodies antigen maintain peak 
antibodies attain peak 
fact seen multiplying number antibodies peak number peaks noticing get total population size 
means antibodies peak probably consequence cross 
statistics compare real immune system 
number antibodies recognize antigen known precisely vary antigen 
typically tens hundreds different antibodies match antigen sufficient strength important immune response 
perelson estimate antibodies random antibodies required cover space antigens 
immune system employs different antibodies expect average antibodies recognize antigen 
experiments different antigens shown responses employ tens thousands different antibodies 
average reasonable 
correct ga model efficient real immune system requires antibodies recognize antigen shown table 
distinguishing antigens different hamming distances 
runs antibody population size sample size oe performed hamming distance results averaged 
antibody bits match antigen counted correct 
similarity peaks matter 
set experiments ask important different peaks dissimilar order model discriminate 
ga searches space interested hamming distance peaks affects performance 
peaks equal size hamming distance peaks varied length string 
sample size oe 
initial antibody population completely random antibodies discover peaks 
antigens chosen type second type 
antigen types specified hamming distance away 
runs generations performed hamming distance peak discovered maintained 
resulting number correct antibodies generation versus hamming distance shown 
antibody counted correct complement exactly antigen match 
results indicate hamming distance affect discovery maintenance peaks 
surprising means ga maintain distinct subpopulations differ little bit 
expected hamming distance peaks reduced ga tend peaks 
turns effect occur sufficiently small oe see section 
explore relationship peak similarity ga ability discriminate different peaks peaks equal size 
distinction antigens hamming distance 
legend indicates antigen type line plot shows number antibodies match antigen type 
antibody correct counted 
runs averaged plot 
number third peak varied string length sixteen third peak approached second peak 
graphs resulting number antibodies match antigens versus time shown 
results indicate hamming distance affect ultimate discovery maintenance peaks 
note rate discovery peaks depend relative distance 
peaks close discovered simultaneously 
generalization section study effect varying sample size parameter oe 
discover size oe determines amount generalization antibody population 
idea experiments define antigen peaks way generalist antibody evolved partially match peak match peaks completely 
simple example idea consider antigens 
note antibody matches complementary sense antigens exactly bits 
real immune system fewer antibodies possible antigens antibody population recognize antigens find common patterns antigens generalize antigen population 
patterns analogous schemas described ga literature 
experiments conducted ga described problem 
experiments population antibodies initialized randomly ran ga generations crossover mutation rates respectively varied oe experiments 
antigen antibody string lengths extended antigen divided regions evenly 
number iterations step diversity algorithm equal number antibodies population size 
antigen population follows generalist antibody evolved look follows 
tested value oe runs performed 
run analysis took place intervals generations population antibodies converged generations reached 
generation analyzed counting number strings fit particular antibody pattern 
string counted string matched pattern 
means bits differ string pattern order string counted representative 
previous analyzed diversity algorithm theoretically predictions peaks case :10.1.1.37.1180
sample size oe number peaks generalization occur negligible representatives peaks 

sample size oe generalist antibody specific antibodies peaks maintained steady state 

sample size oe negligible number occur equal proportions specific antibodies peaks 
plots resulting antibody populations sample sizes shown 
results indicate oe item condition holds 
oe item condition holds oe generalist 
sample size antibody generalist shown antibody population size increased different runs generalist appeared shown 
theoretical predictions assumed infinite sized population account crossover experiments appear confirm theory 
summary study problem conclude diversity algorithm ga discover maintain multiple peaks 
antibody sample size relevant parameter carrying capacity approximately antibodies antigen 
surprisingly similarity peaks prevent antibody discrimination 
number specific general antibodies sample size 
sample sizes 
number specialists exactly equal lines coincident graph 
legend indicates antibody type plotted graphs 
plotted point average runs 
analysis immune system algorithm maintains diversity ga problems algorithm 
fitness sharing technique induces diversity population penalizing individuals presence similar individuals population gas interestingly theoretical basis related diversity algorithm 
explore relationship theoretical underpinning diversity algorithm 
fitness sharing causes population members cluster peaks search space reducing population member fitness account proximity individuals population distance metric 
authors calculate fitness individual shared fitness sh ij ij distance metric sh ij sharing function sh ij ij gamma ij oe ff ij oe number individuals population oe ff parameters depicts various sharing functions 
note distance individual ii term denominator eq 
equal 
individual contributes term sum having individuals close leads large denominator small fitness 
critical parameter fitness sharing technique oe dictates cutoff distance sharing occur 
deb considers case peaks wishes ga find maintain peaks equidistant terms distance metric search space 
shows set oe hyperspheres radius oe fill search space 
deb assumptions peak lies hypersphere radius oe show maintaining population diversity immune system model similar fitness sharing calculated antibody expected fitness diversity algorithm 
details calculation 
find expected fitness antibody ij ff oe gamma oe gamma summation considers possible distances antibody second summation considers antigens distance antibody condition sh ij ij implied previous fitness sharing studies 
included clarify limiting case oe 
sharing function sh ij various values ff 
note function zero ij greater oe distance antibody antigen called ij ij number bits antibody match complementary antigen distance metric antibody antigen said perfectly match ij 
maximum distance possible antibody antigen bit string length 
set antigens distance antibody ij 
match score assigned antibody matched antigen ij 
total number antibodies population number distance antigen ff probability selecting antigen matching 
probability antibodies exactly distance antigen sample size oe taken replacement population oe hypergeometric distribution oe gamma oe gamma oe oe ij ff term related fitness available antibody antibody share finite fitness resources available distant antigens 
just fitness sharing resources divided individuals share indicated divisor 
far correspondence fitness sharing relatively straight forward 
meaning bracketed hypergeometric terms oe gamma oe gamma explained 
term represents probability antibody distance gamma antigen selected sample 
second term represents probability previous condition copy antibody distance antigen sample 
clarify role hypergeometric terms fitness sharing examine special cases 
consider sample size oe 
case hypergeometric term gamma gamma gamma gamma gamma oe ij ff special case fitness sharing fitness values independent 
essentially relative expected fitness values equivalent expect standard ga conditions expect fitness proportionate selection converge single type antibody 
note corresponds fitness sharing oe set value spans entire search space 
second special case consider oe assumes perfectly matching antibody exists available antigen population expected fitness reduces ff score perfect match 
case antibody divided effective proportion population 
fitness sharing oe selection distribute population relative fitness step search peak antibodies 
special cases show limiting behavior oe similar limiting behavior oe investigate effects values oe consider term oe gamma oe gamma set 
simulates situation antibody distance selected antigen competing closer antibodies fitness resources available antigen 
shows plotted versus various values oe 
note zero 
gamma oe near zero range values lower gamma oe 
compare curves ff 
graph previous arguments imply hypergeometric terms correspond sharing function oe plays role immune system algorithm similar oe fitness sharing 
value essentially implies cutoff sharing occur 
important distinction drawn fitness sharing relative values fitness terms significant curves linearly scaled zero 
hypergeometric term eq 
versus various sample sizes oe 
note similarity sh ij ff various values oe see 
implicit sharing immune system simulations 
fitness sharing oe strict cutoff ij deb recommends setting volume hypersphere peak 
immune system algorithm oe dictates cutoff proportion population hypersphere radius gamma antigen 
proportion antibodies close antigen increases likelihood distant antibodies winning match competition decreases 
effective antibodies block sharing effective antibodies 
sample size oe control effect 
scheme boundaries sharing function proportion antibodies clustered antigens 
emergent sharing boundaries explain resilience shown ga immune system experiments 
described universe binary strings certain aspects immune system modeled interactions strings 
interactions binary strings defined matching function rewards specific matches specific ones constraint related immune system ability distinguish self recognition fairly specific order avoid trap recognizing self 
emphasized performance ga binary immune system model studying ability ga detect common patterns schemas noisy environment ability maintain diversity population 
capabilities important natural immune systems able recognize enormous number foreign molecules relatively resources 
studying problem showed ga evolve antibody type represented population identical antibodies matched multiple antigens identification common schema 
problem analogous problem immune system faces identifying bacteria different detail say may similar construction cell walls 
identifying immune system learn detect bacteria 
problem showed matching antigen multiple antibodies giving fitness score best matched antibody population evolved maintained contains representatives different antibodies 
multiple peaks discovered maintained population matching scoring scheme 
similarity antigens prevent distinction antibodies 
algorithm maintaining diversity ga closely related bidding mechanism commonly employed learning classifier systems success algorithm demonstrates simple bidding mechanism sufficient ga discover maintain multiple subpopulations 
experiments suggest ga needs fifteen individuals peak maintain subpopulations 
compared algorithm explicit fitness sharing shown sample size oe plays analogous role model oe fitness sharing model 
hope combine solutions problems scale simulation realistic ratios antigens antibodies 
need problem antigens antibodies need detect common regions 
likewise need problem maintain coverage complete repertoire 
expect role crossover important accomplish realistic ratios need understand fitness measures 
experiments reported conducted linear fitness function 
realistic measure reward contiguous matches nonlinear function 
noticed results highly sensitive particular nonlinear function selected 
hope understand better develop satisfactory fitness function biologically realistic robust 
center nonlinear studies los alamos national laboratory santa fe institute support 
forrest acknowledges support association western universities national science foundation iri 
perelson acknowledges support national institutes health ai 
lawrence allen david mathews prepared figures ran simulations numerous helpful comments manuscript 

dynamics nature antibody repertoire 

rev 

clonal selection theory immunity 
vanderbilt university press nashville tn 
davis 
cell receptor antigen genes cell recognition 
nature 
deb 
genetic algorithms multimodal function optimization 
technical report clearinghouse genetic algorithms department engineering mechanics university alabama tuscaloosa 
master thesis 
deb 
genetic algorithms multimodal function optimization 
tcga report university alabama clearinghouse genetic algorithms tuscaloosa 
deb goldberg 
investigation niche species formation genetic function optimization 
proceedings third international conference genetic algorithms pages 
farmer packard perelson 
immune system adaptation machine learning 
farmer lapedes packard editors evolution games learning pages 
north holland amsterdam 
reprinted physica 
forrest perelson 
genetic algorithms immune system 
schwefel editors parallel problem solving nature pages berlin 
springer verlag lecture notes computer science 
freund 
mathematical statistics 
prentice hall englewood cliffs nj 
goldberg 
genetic algorithms walsh functions part ii deception analysis 
complex systems 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
goldberg richardson 
genetic algorithms sharing multimodal function optimization 
proceedings second international conference genetic algorithms pages 
kaufmann san mateo ca 
grefenstette 
genesis system genetic search procedures 
proceedings conference intelligent systems machines pages 
hightower forrest perelson 
evolution cooperation immune system gene libraries 
technical report cs univ new mexico dept computer science university new mexico albuquerque oct 
submitted international conference distributed computing systems 
hines montgomery 
probability statistics engineering management science 
wiley new york nd edition 
holland 
adaptation natural artificial systems 
university michigan press ann arbor mi 
inman 
antibody combining region speculations hypothesis general 
bell perelson jr editors theoretical immunology pages 
dekker ny 
perelson 
predicting size antibody combining region consideration efficient self non self discrimination 
submitted 
perelson 
immune network theory 

rev 
perelson 
theoretical studies clonal selection minimal antibody repertoire size reliability self nonself discrimination 
theoretical biology 
smith forrest perelson :10.1.1.37.1180
searching diverse cooperative populations genetic algorithms 
technical report cs univ new mexico dept computer science university new mexico albuquerque mar 
submitted machine learning 
smith forrest perelson 
population diversity immune system model implications genetic search 
whitley editor proceedings workshop foundations genetic algorithms 
kaufmann appear 

schema recombination pattern recognition problems 
proc 
nd international conference genetic algorithms applications hillsdale 
lawrence erlbaum assoc 
