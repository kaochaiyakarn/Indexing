divergent term rewriting systems hermann centre de recherche en informatique de nancy cnrs inria lorraine campus scienti que bp nancy france mail hermann loria fr presents structural patterns detect divergence completion procedure followed detailed overview dioeerent examples divergent rewrite systems 
introduces different empirical methods avoid divergence applicable session rewrite rule laboratory 
applying knuthbendix procedure complete term rewriting system may result producing canonical term rewriting system failure halts diverging process trying generate nite set rewrite rules 
rst result concerning structural properties nite set rules generated knuthbendix completion procedure due huet 
attempts study reasons knuthbendix procedure divergence investigation structural properties generated rules initiated developed 
notion crossed term rewriting systems suoecient criterion proving divergence knuthbendix procedure emerged investigations 
complementary research focused nite descrip research report 
appeared es en journ es nice france volume january 
tion nite sets rules generated diverging knuthbendix procedure developing notion metarules due kirchner 
twofold purpose 
serves comprehensive collection examples divergent rewrite systems 
second presents possible instruction kit dealing divergent rewrite systems 
proposed remedies strictly empirical divided mainly categories 
changes ordering class obtain new particular ordering type class recursive path orderings change operator precedence order equation opposite direction 
choosing ordering class recursive path ordering choose recursive decomposition ordering polynomial ordering transformation ordering order get right direction rewrite rules 
separating rule causes divergence sequence complex equations constructor equational theory provided 
dividing rule causes divergence rules 
enriching system new rewrite rules avoid divergence originated underspeci cation 
actions taken account sessions rewrite rule laboratory decision met quickly order obtain canonical terminating rewrite system 
course suggestions need produce desired effect reason changed rewrite system correspond user ideas 
case user proposed upgrade formal methods developed kirchner 
completion term rewriting systems completeness notation term rewriting system theory introduced rst part section 
second part contains basic de nitions concerning term rewriting systems general related introduces review notions background papers frequently referred 
part contains de nition completion procedure general framework 
basic notation de nitions adopt notation 
nite enumerable set function symbols graded arity signature 
denotes constants 
enumerable set variables 
denote set terms free algebra variables symbols var denotes set variables term denote set ground terms function symbols set strings natural numbers special symbol empty string concatenation operation elements labels terms viewed labeled trees 
term partial function domain pos satis es properties 
pos fg 
pos fg fi pos pos set positions term subset non variable positions denoted fpos 
subterm position pos denoted tj tj tj ia denote new term obtained term replacing subterm sj properties replacement see article 
substitution function oe xoe holds nite number variables 
denote substitution oe 
xn 
terms substituted variables empty substitution denoted 
substitutions homomorphic extension terms 
denote dom oe ran oe var oe domain range variables substitution oe respectively 
substitution oe xoe xoe implies dom oe variable renaming substitutions need idempotent approach 
terms uni able idempotent substitution oe soe toe 
substitution oe called uni er substitution oe called general uni er variable renaming uni ers exists substitution oe 
substitution oe term substitution variables introduce new variables var toe var contain variable renaming 
notion enlarged set substitutions 
equation pair terms 
convenience equations written left right hand side 
rewrite rule ordered pair terms var var 
rules written term rewriting system rewrite system short nite set rules fs rewriting relation gamma 
gamma 
obvious smallest relation containing closed substitution replacement 
relation gamma 
denotes transitive closure gamma relation gamma denotes relation symmetric gamma equivalence relation 
denotes symmetric transitive closure gamma 
ordering compatible gamma 

term reducible rule exists position pos substitution oe tj loe 
term reducible reducible rule contrary term irreducible reducible rule term normal form term gamma 
irreducible 
rewrite system rules left hand side gamma fl rg irreducible right hand side irreducible 
term rewriting systems de nitions review basic notions term rewriting systems theory 
details related theorems see 
de nition term rewriting system rewriting relation gamma 
ffl terminating nite rewrite sequence gamma 
gamma 
ffl gamma gamma 
gamma 
gamma ffl convergent terminating ffl canonical convergent 
basic properties termination rewrite system undecidable general 
issues termination reduction orderings founded orderings terms closed term replacement substitution see review dershowitz 
issues concerning see article huet 
notion critical pairs overlap instances rewrite rules introduced knuth bendix 
production orientation new rewrite rules backbone completion procedure 
de nition rewrite rules oe oe holds general uni er oe nonvariable position fpos 
hs oe oe oei called critical pair terms 
denote set critical pairs generated rewrite system cp 
critical pair ht ti term called trivial 
construction originated lankford musser comes guttag kapur musser 
mentioned dershowitz 
de nition arbitrary set rules 
set overlap closures oc inductively de ned follows 
rule overlap closure xi 
xi xi overlap closures 
oe oe holds general uni er oe position fpos oe xi oe oe overlap closure 

xi xi overlap closures 
oe oe holds general uni er oe position fpos oe oe xi oe overlap closure 
overlap closure xi terms sides called 
notion related narrowing process de ned fay lankford superposition process de ned 
overlap closure provides essence speci method proving termination term rewriting systems 
survey related results 
de ne better divergence patterns introduce relation substitutions 
de ned 
de nition substitutions coherent denote dom var var dom 
completion procedure nite set equations presenting theory program possibly incremental computing reduction ordering completion procedure deduces consequences attempt nd convergent terminating rewrite system central idea completion limit attention critical pair deductions obtained left hand sides rules 
critical pair generate new rules 
rst completion procedure proposed knuth bendix completely proved correct huet 
bachmair dershowitz hsiang put completion framework notion inference rules see 
inference rule purpose binary relation pairs set equations set rewrite rules 
generalized knuthbendix completion procedure set kb inference rules 
completion procedure control strategy applying inference rules kb input equations rewrite rules reduction ordering compatible rewrite rules 
result possibly nite completion sequence kb kb delta delta delta set lim en persisting equations set lim rn persisting rules 
inference rule completion procedure fair processing critical pair postponed nitely times correct procedure nishes successfully produces convergent rewrite system sound smallest equivalence relation generated remains delete fs sg compose fs tg fs ug gamma 
simplify fs tg fu tg gamma 
orient fs tg fs tg collapse fs tg fu tg gamma 
ffl deduce fs tg cp gamma ffl denotes proper ordering 
inference rules completion procedure completion process 
formal de nitions concepts 
inference rules kb applied different ways fair correct sound 
choose 
rst general completion procedure complete huet sophisticated way lescanne second completion process nr complete generating critical pair consequences interreduction 
corresponding control strategies see 
summarizing possible performances completion procedure succeed generating nite convergent canonical rewrite system fail due equation reduction ordering diverge trying produce nite rewrite system divergent term rewriting systems section recalls theoretical notions results collection examples presenting divergence patterns 
rewrite rules equations completion procedure performance depends applied control expression input ordering 
hierarchically ordered types divergence observed 
de nition term rewriting system 
divergent ordering complete nite 
weakly divergent ordering nr complete nite 
inherently weakly divergent weakly divergent orderings including gamma 
rewrite system inherently divergent depends structure rules 
divergent rewrite system weakly divergent 
connection divergent weakly divergent rewrite systems established proposition 
fact weakly divergent rewrite system subsystem weakly divergent 
nr complete complete divergent 
establishing conditions detection divergence arises question large actual class divergent systems described covers possible divergent systems 
unfortunately divergence problem undecidable general contains monadic function symbols constants proved modi cation proof method narendran stillman 
undecidability divergence follows reasonable search suoecient conditions detect divergent rewrite systems 
rest section introduces suoeciently general conditions kind possible able describe largest class divergent systems 
attention oriented examples presenting divergence patterns 
forward crossed systems de nition describes divergence pattern class rewrite systems forward oriented critical pairs 
pattern represents generalization crossed rules notion de ned 
comprises divergence types fl crossed rules fl rule described purdom 
technical description refer 
presentation focused examples 
de nition rewrite rule overlap closure xi supposed disjoint variables form forward crossed rewrite system substitutions oe variables idempotent substitution oe positions fpos fpos 
oe oe 


oe second condition plus coherence relation de ne xi forward chain 
previous de nition supplies static part conditions detect forward divergent systems 
dynamic part conditions introduced de nition puts requirements ordering generated critical pairs 
de nition rewrite system ordering nontrivial critical pair terms hs oe oe oei cp follows oe oe oe 
pre lr indicates produced critical pairs oriented straight direction left right notions proposition proved guarantees previous conditions suoecient weak divergence 
course interreduction admitted examples fact applied divergence systems implied 
conditions interreduction divergence see 
theorem contains lr persistent forward crossed rewrite system weakly divergent 
consider examples belong forward crossed divergence pattern 
collection divergent systems observed real speci cations arti cial cases constructed nd complex conditions cover greater class divergent systems 
example common folklore example mentioned fribourg bel extract rules rewrite system specifying natural numbers addition try complete recursive path ordering rpo precedence left right status result divergent process 
rule forms forward chain positions substitutions oe 

oe 

completion procedure generates nite family rules 
reason proof consistency associativity rewrite system reduction ordering rpo precedence case results nite loop described dershowitz fribourg 
rewrite system gcd gcd gcd gcd specifying greatest common divisor natural numbers proved divergent 
contains forward crossed system consisting rules 
rule forms forward chain positions substitutions oe 

oe 
previous case 
completion procedure rpo precedence generates nite family rules gcd gcd rules plus nite family gcd gcd derived rst rule 
second nite family produced independently underlying overlap closure xi constructed consecutively rules form forward chain 
show divergence problems caused natural number speci cations consider algebraic structures 
example simple elegant example forward crossed system associativity endomorphism 
considered bellegarde lescanne martin 
rewrite system completion rpo precedence left right status produces forward crossed divergent system 
endomorphism rule forms forward chain positions substitutions oe 

oe 


completion procedure generates nite family rules 
similar previous system associativity distributivity studied lescanne mentioned martin purdom 
rewrite system completion rpo precedence left right status produces divergent system 
forward crossed system distributivity rule forming forward chain substitutions oe 

oe 


matter fact variation previous divergent system operation interpreted curried multiplication 
divergent system need consist rules previous examples 
cardinality divergent systems bound 
hand rule suoecient produce divergent system 
example exists rule forward crossed system introduced observed dershowitz marcus kirchner 
rule stands objects required de nition 
positions substitutions oe 
oe 

ambiguity variables resolved doubling rewrite rule splitting variables 
completion procedure generates nite family rules 
rule divergent system bears phenomenon 
want assure termination rewriting generated system rules ordered opposite direction 
divergence system inherent exists forward crossed rewrite system consisting number rules presence rules necessary maintain divergence 
proved rewrite system gamma gamma gamma gamma ordered rpo precedence divergent proper subset completed nite canonical system 
rst rule presents basis divergence rest forms forward chain fn gamma gamma xi gamma 
substitutions oe 
gamma oe 
gamma 
completion procedure generates nite family rules fn gamma gamma plus intermediate nite families rules participate forming forward chain 
looks properly previously examples may ask definition complicated 
de nition complicated examples easy 
satisfy simpler conditions 
analyze sophisticated systems conditions de nition applied conditions appear suoecient 
drawback examples arti cially constructed reasonable algebraic structure 
divergent covered de nition true case 
example general forward crossed rewrite system phi omega phi phi circled operators considered syntactic objects real operators 
try complete system rpo operator precedence omega phi omega get divergent process 
second rule forms forward chain 
substitutions oe 
omega 
oe 

omega 

completion procedure generates nite family rules phi 
similar case presents forward crossed rewrite system phi omega phi phi ff second type 
try complete rpo operator precedence phi ff phi left right status phi get divergent process 
second rule forms forward chain 
substitutions oe 

oe 
omega 

ff 
completion procedure generates nite family rules phi ff ff omega 
course systems clear analyze 
systems forward chain systems multiple overlap positions 
look system encountered practical case 
example rewrite system speci es signed binary trees theory 
extract canonical rewrite system specifying groups 
system try complete system rpo operator precedence get divergent process 
rules produced nite iterative process begins 
clue underlying rewrite system generates nite set independent forward chains 
nite set nite families rules produced 
little bit surprising coherent theories 
forward chain producing rewrite system canonical decidable computation modulo whichever forward chain decidable 
backward crossed systems de nitions describe divergence pattern class rewrite systems backward oriented critical pairs 
pattern introduced example treated formally 
de nition covers divergence types fl reverse crossed rules fl reverse self crossed rule described purdom compact 
technical description refer 
focus attention examples presenting divergence pattern 
de nition overlap closure xi rewrite rule supposed disjoint variables form backward crossed rewrite system variable substitutions oe variables idempotent substitution oe position fpos 
oe oe 


oe second condition plus coherence relation de ne xi backward chain 
previous de nition supplies static part conditions detect backward divergent systems 
static parts duality principle established forward backward crossed rewrite systems originating similar forward backward chains 
dynamic part conditions introduced de nition puts requirements ordering generated critical pairs main dioeerence notions de ned making completely dioeerent divergence patterns 
de nition rewrite system ordering nontrivial critical pair terms hs oe oe oei cp follows oe oe oe pre rl indicates produced critical pairs oriented opposite direction right left previously de ned notions proposition proved guarantees previous conditions suoecient weak divergence 
discussion concerning interreduction case forward crossed systems applies case 
theorem contains rl persistent backward crossed rewrite system weakly divergent 
consider examples belong backward crossed divergence pattern 
divergence type common previous real cases known 
example elegant example backward crossed system decidable theory bands idempotent semigroups studied siekmann connection divergence dershowitz kirchner 
associativity rule produces nite number independent backward chains depending multiple choice overlap positions 
marginal mentioned exists canonical unconditional rewrite system idempotent semigroups 
type exist multiple rule divergent systems rule divergent system 
rule system extract real example case 
example extracting rule nz yn nz rewrite system deciding groups left division studied lescanne ordering rpo precedence left right status presents backward crossed system 
nite number independent backward chains produced starting rule 
exists backward crossed rewrite system consisting number rules presence necessary maintain divergence 
rewrite system fn gamma gamma fn gamma oriented rpo precedence divergent proper subset completed nite canonical system 
rst rule presents basis divergence rest forms backward chain gamma xi gamma 
substitutions oe 
oe 

gamma 
completion procedure generates nite family rules gamma gamma plus intermediate nite families rules participate forming backward chain 
divergence type arti cially constructed systems conditions required de nition 
example consider rewrite system try complete system rpo operator precedence get divergent process 
rst rule forms backward chain 
substitutions oe 
oe 



completion procedure generates nite family rules 
similar case presents backward crossed rewrite system omega phi 
phi omega ff omega try complete system rpo operator precedence phi omega get divergent process 
rst rule forms backward chain 
substitutions oe 
ff oe 



phi 
completion procedure generates nite family rules ff phi phi phi phi omega 
phi phi phi phi 
undecidability crossed systems rewrite systems existence crossed subsystem shown immediately 
course may ask decidable complete contains crossed system 
unfortunately 
theorem undecidable general completion procedure generates crossed system 
proof result proved narendran stillman crossed pairs immediately applied forward crossed systems 
minor modi cation extends backward crossed ones 
result narendran stillman immediate implication divergence conditions cover case rule system undecidable 
avoiding divergence completion divergent term rewriting system unpleasant fact deal 
intention directed goal obtain nite canonical rewrite system 
done original system avoid divergence maintain semantics 
basically exist approaches theoretical empirical 
theoretical approach formally de ned exploited kirchner 
universal allows describing divergent systems metarules 
complete method allows cope directly inherently divergent systems 
hand necessary immediately divergent system encountered divergence rewrite systems result speci cation errors 
meta rule approach knowledge implemented existing rewrite rule laboratories 
convenient empirical methods course sophisticated theoretical approach applied existing rewrite rule laboratories 
parts describe empirical methods avoiding divergence rewrite systems graded complexity actions provided user 
matter fact exists method avoid divergence upgrading equational rewriting equational completion 
equational term rewriting provides powerful generalization eliminates abnormal failure divergent cases functionality premise existence complete nite equational uni cation algorithm rarely exists arbitrary set equations equational term rewriting method bears problem nite complete set uni ers presents type divergence 
needs broader space investigation 
reasons analyzed 
hand unfailing completion procedure avoid divergence problem 
prove easily completion procedure control complete diverges unfailing completion procedure diverges 
changes ordering class rst empirical method attack divergence consists changes ordering class obtain new concrete ordering 
change underlying operator precedence status recursive path ordering recursive decomposition ordering status related incremental ordering 
change underlying symbol precedence weight knuthbendix ordering change polynomial interpretation polynomial ordering 
basically relatively minor change underlying structure ordering class 
incremental orderings performed backtracking 
aim changes order equations opposite direction critical overlaps starting points divergence disappear 
method replaces objects satisfying de nition de nition 
equivalence relation generated rewrite system remains normal forms obtained rearranged system assumption completed nite canonical system may correspond initial intentions 
method limits need possibilities choose completion process 
example possibilities resolve divergence natural number rewrite system change precedence rpo obtain canonical system second rule ordered opposite direction 
possible solution satisfy requirement successor operator constructor rule added 
better possibility consists changing status right left 
case obtain canonical system 
rst rule ordered opposite direction 
successor operator declared constructor enlarged system 
divergent system associativity endomorphism resolved changing precedence producing canonical system second rule ordered opposite direction 
far acceptable solution want reduce number operators terms completed rewrite system 
arti cially constructed divergent systems orientation rules play signi cant role method fully applied examples 
get consecutively canonical systems phi phi 
omega phi changing precedence omega phi phi omega phi ff phi changing precedence phi changing precedence left right status phi omega 
omega phi ff omega changing precedence omega phi omega left right status phi 
possible changes precedence 
consider rewrite systems ordered ordering classes particular knuth bendix ordering polynomial ordering 
example pointed classical presentation group theory rewrite system ordered knuthbendix ordering precedence weight weight inverse operator causes divergence completion 
analyzed purdom completion procedure produces crossed subsystems 
forward crossed system backward crossed system rule second system real culprit indicated 
consequence rule generated 
achieved changing weight operator 
standard rule canonical rewrite system groups generated completion 
example associativity endomorphism rewrite system example ordered sense polynomial interpretation remains divergent producing nite family rules 
fortunately system proved terminating polynomial interpretation xy nice property interpretation possible complete rules canonical system number operators terms reduced completed system 
method avoid divergence limits 
changing precedence example bring rule systems exists choice precedence recursive path ordering 
recursive path ordering remains uniformly persistent orders critical pairs notoriously direction 
change underlying precedence closure chain 
changing ordering class second empirical method consist changing completely ordering class 
applied previous resolve problem divergence ordering class monotone completed canonical system correspond user intentions 
exist ordering hierarchies ordering class necessarily better termination rewrite systems undecidable general 
aim method break persistence inherent certain orderings 
proposed method attacks conditions de nition de nition 
equivalence relation 
remains 
user contribution method essential proposed ordering implemented rewrite rule laboratory 
hand method purdom ordering class checking set rules looping example consider associativity endomorphism rewrite system 
suppose costly operator rewrite system proposed optimize term expressions respect user decrease number uses minimum 
ordering rule forces precedence rpo 
causes divergence completion described 
just look rst generated rule see intentions decreasing number operators 
recursive path ordering recursive decomposition ordering suitable ordering rewrite system conditions 
shown example exists polynomial interpretation allows produce nite canonical rewrite system polynomial ordering 
nite canonical system obtained knuthbendix ordering set 
possibility transformation ordering 
separating closure chains method applicable enlarged completion procedure sense huet takes advantage explicit declaration constructors 
method proposes separation closure chain sequence complex equations 
described formally inference rule separate see 
seen inference rule separate transformation applicable closure chains common root symbol term sides 
chaining process supposed disappear transformation 
equivalence relation generated original system remains 
example consider rule backward crossed rewrite system ordered rpo precedence 
trying complete system results generation nite family rules declare constructor rule considered equation separated new equation ordered rule choosing precedence new rule presents canonical system 
dividing closure chains fourth empirical method rooted process proposed early pioneering article considered completely valid comparison standard completion term algebra changed signature extended completion new function symbol 
method consists dividing underlying closure chain dioeerent parts introducing new operation symbol breaking way chaining process 
formally expressed inference rule divide see 
method especially devoted inherently divergent rule crossed systems 
separate ff fs ng constructor divide fs tg fs xn xn new symbol var var fx xng additional inference rules example consider rule forward crossed system observed example inherently divergent 
divide rule reduced rewrite system enrich precedence complete previous system get canonical system successful applications method fragile 
applying example idempotent semigroup rule system nz yn nz bring desired eoeect 
enriching underspeci ed systems proposed probably powerful empirical method avoid divergence consists enriching systems new rewrite rules 
applied carefully original rewrite system compromised nite canonical rewrite system obtained correspond original rules 
accepted practical method underlying equational theory changed added rule 
method attacks conditions fact enriched system remains weakly divergent generally divergent 
new rule added interfere interreduction causes divergence object disappear completion step 
probably best way proceed method described steps 
remove divergence basis rule system producing 
complete residual set rules nite canonical rewrite system method proving inductive theorems proposed require underlying system ground terms 
step may skipped just mentioned method 
prove consistency inductive reducibility possible involvement fribourg method general bachmair inductive theorem derived structure generated nite family rules add rule existing system producing 
add rules removed step forming enriched system try complete 
cycle iteration previous steps may lead desired solution nite canonical system 
theoretical justi cation extend original rewrite system inductive theorems presents fact extended system ground consistent original system 
proposition ground terms equivalence re holds means rewriting ground terms basic extended systems yields result 
open question remains fact infer new rule proved inductive theorem original system extension done 
add inductive theorems original system interested initial model 
want prove inductive theorem initial model model nonempty 
requires existence constant 
just introduce dummy 

latten 
latten latten latten latten latten latten latten latten ordered rpo precedence latten left right status 
rewrite system operation example consider rewrite system specifying lists operators empty list element list append operator 
de ne latten operator transforms structured lists lists consisting simple elements 
rewrite system 
try complete system get divergent process 
rules form forward crossed rewrite system forward chain 
remove involution residual system canonical 
able prove endomorphism rule latten latten latten inductive theorem 
add system take back involution rule forming extended system 
extended system nite canonical system 
latten 
latten latten latten latten latten latten latten latten rule removed considered carefully 
remove wrong generated completion residual system dragon head 
example consider rewrite system example resolved example constructed divergent inductive theorem proof 
previous empirical methods 
remove rule try complete residual system just removed rule generated rules 
right way consists removing rules residual system canonical 
constant system introduce dummy denoted able prove associativity rule inductive theorem 
add system take back removed rules forming extended system 
try complete critical pair produced ordered disjoint variables left right hand side equation 
regarded request new operator 
divide critical pair rules introduced symbol neutral element extending precedence action rules standard rule canonical rewrite system groups 
admitted method limits especially case rule divergent systems 
removed rule removed virtually proved inductive theorem empty system 
proceed way 
operators decided non constructor rules de ne completely added 
example consider extracted rule nz yn nz group speci cation left division 
decide inverse operator non constructor add rules de ne completely 
possible ordering new rules proposed direction underlying precedence changed enriched system canonical 
add rule get nite canonical system nz yn nz described basic divergence patterns forward backward crossed rewrite systems lr rl persistence respectively de nition 
detail number examples de nitions understandable support 
necessary introduce neutral element constant 
divergence property undecidable general described divergence patterns suoecient cover large class divergent systems 
section introduced empirical methods avoid divergence completion applied user session rewrite rule laboratory 
express ne kirchner leo bachmair hsiang pierre lescanne comments suggestions helped ameliorate early versions 

data abstraction transformations 
technical report tr university maryland maryland usa 
bachmair 
proof consistency equational theories 
proceedings rd ieee symposium logic computer science lics edinburgh scotland pages july 
bachmair dershowitz 
commutation transformation termination 
siekmann editor proceedings th international conference automated deduction cade oxford england volume lecture notes computer science pages 
springer verlag july 
bachmair dershowitz 
completion rewriting modulo congruence 
theoretical computer science october 
bachmair dershowitz hsiang 
orderings equational proofs 
proceedings st ieee symposium logic computer science lics cambridge massachusetts usa pages june 
bachmair dershowitz plaisted 
completion failure 
kaci nivat editors proceedings resolution equations algebraic structures texas usa volume rewrite techniques pages 
mcc inria academic press 
bellegarde 
rewriting systems fp expressions reduce number sequences yielded 
science computer programming january 
bellegarde lescanne 
transformation ordering 
ehrig kowalski levi montanari editors proceedings caap pisa italy volume lecture notes computer science pages 
tapsoft volume springer verlag march 
lescanne 
termination rewriting systems polynomial interpretations implementation 
science computer programming october 
dershowitz 
termination rewriting 
journal symbolic computation 
special issue rewriting techniques applications 
dershowitz 
completion applications 
kaci nivat editors proceedings resolution equations algebraic structures texas usa volume rewriting techniques pages 
mcc inria academic press 
dershowitz 
jouannaud 
notations rewriting 
bulletin european association theoretical computer science february 
dershowitz marcus 
existence construction rewrite systems 
technical report atr aerospace el segundo california 
dershowitz marcus tarlecki 
existence uniqueness construction rewrite systems 
siam journal computing august 
fay 
order uni cation equational theory 
editor proceedings th workshop automated deduction austin texas usa pages february 
fribourg 
strong restriction inductive completion procedure 
journal symbolic computation september 
bel 
ground 
lescanne editor proceedings nd conference rewriting techniques applications rta bordeaux france volume lecture notes computer science pages 
springerverlag may 
guttag kapur musser 
proving uniform termination restricted termination rewrite systems 
siam journal computing february 
hermann 
chain properties rule closures 
monien cori editors proceedings th symposium theoretical aspects computer science stacs paderborn germany volume lecture notes computer science pages 
springerverlag february 
hermann 
crossed term rewriting systems 
research report centre de recherche en informatique de nancy 
included 
hermann pr vara 
nontermination knuth bendix algorithm 
research report ar ops institute socioeconomic information automation management bratislava czechoslovakia november 
hermann pr vara 
nontermination knuth bendix algorithm 
editor proceedings th icalp conference rennes france volume lecture notes computer science pages 
springer verlag july 
hofbauer 

proving inductive theorems term rewriting systems 
grabowski lescanne editors proceedings international workshop algebraic logic programming germany volume lecture notes computer science pages 
springer verlag november 
hsiang rusinowitch 
word problems equational theories 
ottmann editor proceedings th icalp karlsruhe germany volume lecture notes computer science pages 
springerverlag july 
huet 
reductions properties applications term rewriting systems 
journal association computing machinery 
huet 
complete proof correctness knuth bendix completion algorithm 
journal computer system science august 
rapport inria 
huet 

proofs induction equational theories constructors 
journal computer system science october 
huet lankford 
uniform halting problem term rewriting systems 
rapport de recherche institut de recherche en informatique en automatique le chesnay france 


canonical forms uni cation 
bibel kowalski editors proceedings th international conference automated deduction cade les arcs france volume lecture notes computer science pages 
springer verlag july 

jouannaud kirchner 
completion set rules modulo set equations 
siam journal computing november 

jouannaud kounalis 
automatic proofs induction theories constructors 
information computation 
kapur musser 
proof consistency 
arti cial intelligence february 
kapur narendran zhang 
suoecient completeness related properties term rewriting systems 
acta informatica august 
kirchner kirchner 
solution dans les alg les vari alg 
master thesis universit de nancy 
kirchner 
schematization nite sets rewrite rules generated divergent completion process 
theoretical computer science 
knuth bendix 
simple word problems universal algebras 
leech editor computational problems algebra pages 
pergamon press oxford 
lankford 
canonical inference 
research report atp department mathematics computer science university texas austin texas usa december 
lankford musser 
nite termination criterion 
unpublished draft information sciences institute university southern california marina del rey ca 
lescanne 
computer experiments term rewriting system generator 
proceedings th acm popl symposium austin texas usa pages january 
lescanne 
divergence knuth bendix completion procedure termination orderings 
bulletin european association theoretical computer science october 
lescanne 
completion procedures transition rules control 
az orejas editors proceedings tapsoft volume caap barcelona spain volume lecture notes computer science pages 
springer verlag march 
lescanne 
recursive decomposition ordering lexicographical status related orderings 
journal automated reasoning 
martin 
choose weights knuth bendix ordering 
lescanne editor proceedings nd conference rewriting techniques applications rta bordeaux france volume lecture notes computer science pages 
springerverlag may 

purdom 
divergence completion rewriting systems 
technical report dept comp 
science indiana university 
narendran stillman 
undecidable knuth bendix completion procedure generates crossed pair 
monien cori editors proceedings th symposium theoretical aspects computer science stacs paderborn germany volume lecture notes computer science pages 
springer verlag february 
purdom 
detecting looping simpli cations 
lescanne editor proceedings nd conference rewriting techniques applications rta bordeaux france volume lecture notes computer science pages 
springer verlag may 
rosen 
tree manipulating systems church rosser theorems 
journal association computing machinery january 
rusinowitch 
path subterms ordering recursive decomposition ordering revisited 
journal symbolic computation 
siekmann 
rewrite system idempotent semigroups 
semigroup forum 

automated theorem proving theories simpli ers commutativity associativity 
journal association computing machinery 
