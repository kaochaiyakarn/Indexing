universal plans reactive robots unpredictable environments schoppers advanced decision systems san antonio circle mountain view ca proc th ijcai ff 
date reactive robot behavior achieved manual programming 
describes new kind plan called universal plan synthesized automatically generates appropriate behavior unpredictable environments 
classical planning problems posed unique initial final world states approach problem specifies goal condition 
planner unable commit specific course events specify appropriate reactions anticipated situations 
alternative conception universal plan compactly represents classical plan 
part universal plan executed depends entirely environment behaves execution time 
universal plans constructed state space operator schemas nonlinear planner 
explicitly identify predicates requiring monitoring moment execution provide sabotage serendipity failure requiring replanning 


scope described continues efforts synthetic reactivity automatic synthesis robot programs capable realtime performance unpredictable dynamic world 
presents solution problem achieving satisfying integration goal directed advance planning sensor driven reaction resorting human programming 
problems called classical approach planning old news 
going tedious detail state space planning requires great deal information front time consuming delays arrival suitable actions plans eventually detailed may risk failure brittle unsuited temporal continuity uncertainty 
core problem commitment 
plans partial plans reactive procedures side steps early commitment problem interleaving plan refinement execution 
penalty acting incomplete plan may goal permanently unachievable planner may paint corner 
reported fruits larger project concerned integration planning executing sensing reacting 
step project drive robot arm environment cooperative blocks world 
focus robotics planning narrower concentrating plan representation interpreter developed 

blocks world solve benchmark problem 
cast problem terms blocks world clarify way contrast familiar issues involved 
blocks worlds blocks cubical unknown size block stacked usual stacking rules apply 
addition robot arm hand means moving blocks 
side table robot baby flatten block towers blocks robot hand throw blocks robot 
robot may blocks back may touch baby keep baby reach 
partial compensation unlimited set sensing devices 
robot achieve usual tower blocks devise plan execution software enabling robot cope efficiently domain 
problem highlights issues challenges state art ai robotics ffl robot knowledge incomplete lacking blocks sizes 
missing information mitigated hand pick blocks 
ffl problem specify current state world current locations blocks position hand 
ffl environment allowing failure sabotage serendipity 
actions may achieve intended effects effects achieved may persist 
items robot behavior face uncertainty due ignorance dynamic environment robot control 
reported example synthetic reactivity 

solution approach accurate prediction notoriously difficult moved extreme relying heavily reaction 
novel 
novelty approach arises fact representation encode robot behaviors specifies appropriate reactions possible situation domain synthesized automatically moderate computational cost 
universal plans convey highly conditional advice form situation satisfying condition arise trying achieve goal appropriate response action commitment particular sequence events fact universal plans contain little sequence kind 
task planner partition set possible situations basis reaction situation requires 
execution time actual situation classified response planned class situation performed 
behavior agent executing universal plans depends critically situations arise execution time 
reactivity allows universal plans generate appropriate behavior unpredictable environments 
behavior agents executing universal plans goal directed 
world cooperative long action expected effects net behavior indistinguishable generated linear plan 
matter environment behaves universal plan selects action cooperative world move current situation goal 
failure situation preds actions indexing planning action descriptions wanted situation plan failure initial situation sensing effecting planning effecting sensing plan actions current situation action descriptions wanted situation plan monitoring vs planned reaction 
difference classical planning approach universal plans summarized 
classical planning problems posed specific initial world state plans restricted particular set situations specific ordering situations 
predicates associated individual actions determine action completed successful 
action executed determined sequence imposed planner knowledge environment 
action fails produce go outcome recourse replanning newly produced situation 
approach problem specifies goal condition initial state unique final state planner commit specific course events 
planner anticipate possible situations reactions situations 
sensing module takes function previously served sequencing indexing set available actions 
planner commit particular replanning longer necessary matter serendipity sabotage failure takes place 
fact universal plans generated automatically allows novel perspective planning goal directed selection reactions possible situations 
view bridges chasm goal directed planning situation driven reaction 
behavior reactive allows rationality prior triangle tables restricted subset possible situations specific ordering 
see section 
speed limit amax vout min limit vmax aout amax arrived theta limit limit arrived 
op arrived limit speed slow arrived limit speed speed arrived 
slow slow speed arrived limit speed slow implementing arm motions feedback 
selection reactions 
notion action success irrelevant process plan execution reflects intuition plan foolproof succeeded 
just success known execution time actual course events known advance idea procedure abstraction practically applicable non real world environments 
realize plans procedures equate plan structure behavior time 
words particular sequence events inescapable execution time major commitment planning time 

inputs planner 
primitive actions planner drive real robot arm important consequences 
example longer pretend irrelevant big blocks 
fact consider cope positions distances general 
approach describe level abstraction adopted previous blocks world planners borrowed part rex project sri cf 
section 
readings returned sensors integers 
speed acceleration values sent robot arm integers 
primitive actions numeric functions 
example arm want shortest possible time define speed 
functions slow stage similar 
get new values arm speed acceleration adjusted suit 
course constantly changing 
computing new arm motion parameters current sensor readings establishes feedback loop 
specify stage 
relevant predicates arm destination 
moving right direction 
blocks worlds computer programming 
moving fast destination allow 
depending truth falsity predicates slowdown speed imposed sensors effectors 
notice primitive actions different traditional plan primitives represent conditions maintained unspecified length time conditions achieved world 
long constraint force depends entirely environment 
particular order speed slow executed determined environment 
point diverge rex project mentioned earlier 
design expressed universal plan 
synthesizer universal plans determine conditions feedback functions imposed achieve condition world 
necessary information communicated planner topic section proceeds actions level move 
main point section show lies level abstraction fact identical lies primitive sensorimotor feedback constraints controlled universal plans 

action descriptions task decomposing block transfers primitive actions reveals interesting ambiguity interpretation action 
hand robotics perspective immediately obvious physical motions suffice close hand far possible open hand completely lower hand vertically far possible raise hand vertically maximum height move hand horizontally target location 
motions implemented straightforwardly feedback functions described previous section 
blocks world domain requires physical actions 
hand lowering 
top wide 
holding table 
table holding block clear 
raising 
bottom 
mid holding table 
mid holding block 
mid clear opening hand empty 
closed holding 
closing 
wide 
holding top 
blocks world effect descriptions 
ing blocks world level actions requires strips operator schemas 
regard action actual motion identified function driving arm happens described operator schema 
contrary ai tradition chose conceive actions terms robotic functions realize regard operator schemas effect descriptions 
action produce multiple effects depending environment executed cp 
sridharan 
raising empty hand precisely action raising hand holding block effects different effect necessary different times 
problems benefits planning alternative effects detailed 
action described planner pre post conditions effects need complete planner utilizes extension logic ginsburg ginsberg infer missing pre post conditions lower hand block hand 

domain constraints discuss logic determines world states possible impossible intuitively obvious hand open holding crucial planner deal partially determined world states 
occasionally involves facts form block 
predicate logic previous blocksworld planners facts encoded existentially quantified formulae world state model give rise considerable difficulties ensuring consistent world description 
solve problem possible worlds tms mcallester encode compute world descriptions 
particular tms accept clauses form clear 
fact block encoded clear means true clause remain valid 
need explicit existential world description implicit existential restriction logic 
planner manipulates multiple tms instances sharing logic having different truth value assignments 
planner represent partial knowledge world point plan 
said section importance universal plan synthesis 

goal problem solved posed planner condition achieved particular world state 
problem discussed section goal top stack leave world states satisfy goal condition final location final state hand variable 
initial state world irrelevant planning time 

universal plans 
interpretation plan interpreter finds action relevant current state world completed universal plan decision tree 
pre post conditions operators evaluated current real world determine node branch traversed 
exactly decisions detailed 
eventually interpreter arrives currently appropriate action 
just action location tree specifies path necessary reach chosen appropriate specifies conditions true world 
long conditions remain true chosen action remains appropriate 
change interpreter search tree appropriate action 
universal plan shown plan stack block realizes block stacking action planners taken granted trivial 
extract plan series partial world descriptions specifications action appropriate worlds move top raise raise predicate action root subplan top raise open holding lower clear holding holding grasp lower clear wide clear raise holding wide open holding open holding table part universal plan stack 
top op top holding raise top holding open clear holding lower clear holding top lateral clear holding top raise clear holding 
clear 
world state partitions stack 
described 
procedure involves method assumed preconditions 
root node conditions assume true note action necessary 
proceed backwards root node conditions assuming false case see action necessary reverse falsified condition 
assume preconditions action satisfied 
generates partial world description action appropriate 
assume preconditions selected action false recursively 
result shown 
course efficiency sake interpreter tests world models individual conditions top 
op holding 
raise open clear holding 

lower top 
lateral raise 

decision tree form stack 
comprising 
partial world descriptions fact reorganized decision tree allows interpreter test conditions required select currently appropriate action conditions evaluated 
decision tree stack plan shown 
currently appropriate action determined executed continuously truth value predicate changes case decision tree traversed predicate determine new reaction 
simplest case false condition active path change true indicating current action achieved postconditions leading step classical sequential plan 
possible condition changes higher tree 
corresponds serendipity sabotage 
decision tree form obvious fact possible world state provided simply outcomes predicate classified eventually 
name universal plan 
immediate consequence universal plans preconditions apply 
kind composition produces universal plans different concatenation sequential plan fragments 
stack decision tree embodied data structure merely convenient description interpreter executes universal plan 
universal plan structure template sequence predicates simultaneously extracted evaluated pattern decision tree 

hierarchy recall section action expressed universal plan 
universal plans construct behaviors primitive levels 
equally importantly follows viewed action stack plan fact universal plan 
ability reuse universal plan primitive reaction higher level gives form abstraction planner remain ignorant conditions lateral 
easy see abstraction continue upwards stacking individual blocks 
plan build tower blocks translated decision tree table 

op stack stack unstack determining currently appropriate block transfer action currently appropriate arm motion currently appropriate feedback constraint plan achieve tower initial state matter serendipity sabotage occurs 
notice plan representation capable capturing intuition block towers built bottom 
sequential plan representations provide way express general heuristic forcing part planner domain specific knowledge 

competence principle universal plan goal holding ways achieve plan primitive action case grasp brings know goal subsequent planning 
problem artifact poor plan representations traditional sequential 
remember universal plan applicable initial situation 
particular universal plan achieve applies situations applies applicability remains restricted preconditions 
consequently means achieving completely superseded forgotten 
construction universal plan represents major increase competence 

plan synthesis planner builds universal plan back chaining goal condition effect descriptions goal reduction operators 
subtle difference ordinary back chaining precondition goal subsequent back chaining negation precondition true situations occurring subplan 
subplan achieve need consider worlds true 
planning time version execution time method assumed preconditions 
back chaining terminates accumulation goals current locus control forces satisfaction preconditions examined leads contradiction 
necessary consider possible world state individually planner may assign reaction groups states considered en masse form world state schema 
universal plan synthesis efficient synthesizing linear plans see section 
effect description multiple preconditions goal conflicts possible 
reasoning required resolve goal conflicts complicated new plan representation multiplicity effects action 
details left 
identifying preconditions goals planning time continued execution time 
decision tree version universal plan execution applies predicates environment false predicate failed precondition planning time goal 
locus control execution time explicitly determines goals pursued agent goals subject environment 

related experience georgeff procedural reasoning system prs georgeff georgeff control autonomous mobile robot georgeff seminal 
goal project reduce amount advance planning advance decomposing behaviors hand sequences goals selecting run time behavior achieve goal 
respects project succeeded navigating robot office building planner floor map connection graph containing advance knowledge widths hallways distances doorways 
information acquired en route sensory input 
respects progress satisfactory 
robot sensors saw doorway existed get stuck just measuring distance 
succeeded eliminating dead reckoning distance maps reappear dead reckoning connection graphs 
armed knowledge universal plans see prs go quite far attempt achieve reactivity experimented situation dependent selection means achieve goals adoption abandonment goals 
fundamental difficulty rigidity prs procedural control structure 
prs ability eliminate dead reckoning lower abstraction levels instructive subsequent analysis pointed importance having actions duration depends sensed environment view motion 
rex project rosenschein kaelbling equally influential behavior situated automaton contingent state environment 
contingency assumes precisely forms adopted universal plans continuously evaluated predicates determining numeric feedback function executed 
approach differs rex team universal plans produced automatically symbolic highly constrained structurally rex automata hand coded 
symbolic representation rex automaton knowledge considered superfluous undesirable automaton state function entire contents memory 
lack symbols somewhat disconcerting planning point view 
rex project emphasising analysis information content situated automata synthesized hand am emphasising automatic synthesis control reactive behavior 
triangle tables fikes nilsson synthesized extracting conventional linear plan set expected world states set needed operators reorganizing predicates involved form index set operators 
reorganization increases competence original plan coping specific set situations specific order coping set situations order 
triangle tables give environment hand selecting operator performed 
sufficient see comments prs quirk rigidity linear plans selecting operator instance selects control state 
triangle tables allow environment dictate interpreter apparent goals 
feature crucial am indebted ken dove advanced decision systems wording observation 
explicit universal plans 

critique 
computational complexity universal plans anticipate possible situation domain prescribe action initial state prescribed action usually optimal 
remarks suggest universal plans limited small problem spaces 
universal plan synthesis graph search problem 
blocks world solved possible world states planner predicates effect descriptions decompose problem space 
fact universal plan synthesis closer classification problem set possible situations appropriate reaction assigned situation complexity producing decision tree 
best case effort required classify distinct situations may log 
worst case possible situation classified different leaf node classification effort 
comparison total effort expended planner produced new plan initial situation best 

blocks world problems current planner relies strips effects representation restricting plans domains representable state spaces necessarily serious contemporary ai milieu think 
clearly case state space representation static predictable environment dead reckoning complete knowledge world state considered 
limitations artifacts reasoning engine problem representation 
instantaneous actions discrete worlds 
state spaces may inadequate reasoning continuous processes sensory information exploited control current action manner performance increased behavioral competence removes burden reasoning engine 
inability respond continuous stimuli artifact sensory deprivation 

sensing bottleneck sensing reliable means obtain feedback environment kinds sensor rate readings converted usable information relatively slow 
universal plan execution relies sensory feedback continuously needs predicates variety sources 
problems aggravated domains requiring knowledge objects robot locations blocks locations controlled 
predicate evaluated infrequently domain dependent considerations determine robot proceed 
may turn predicates near root universal plan crucial example effective temporarily ignore values predicates monitor closely 
decision tree form universal plans clear predicates relevant reaction may facilitate determination proceed point 
useful contribution 

summary shown integrate goal directed planning situation driven reaction case robotic motion redefining plans eliminate commitment inherent procedural representations particular course events 
suitable sensory input resulting plan representation generates appropriate behaviors unpredictable environments allowing environment determine robot current goals 
achievement encourages new perspective planning choosing reactions situations arise plans guaranteeing success 
universal plan structure replaces procedural indexing sensory indexing explicit conditions actions applicable renders notions success failure irrelevant execution time encourages hierarchy 
supported part internal advanced decision systems 
especially appreciate encouragement provided ideas emerging 
stan rosenschein mike georgeff amy lansky leslie kaelbling sri ai allowing participate progress john myers sri robotics constructive critic draft 
bratman 
intentions plans practical reason 
harvard university press forthcoming 

folk psychology 
harvard university press 
georgeff 
procedural expert systems 
proc th ijcai ff 
georgeff lansky 
procedural logic 
proc th ijcai 
georgeff lansky schoppers 
reasoning planning dynamic domains experiment mobile robot 
tech note ai center sri international 
ginsberg 
counterfactuals 
proc th ijcai 
fikes hart nilsson 
learning executing generalized robot plans 
ai journal ff 
nilsson 
triangle tables proposal robot programming language 
tech note ai center sri international 
rosenschein 
formal theories knowledge ai robotics 
new generation computing 
kaelbling 
architecture intelligent reactive systems 
proc workshop planning reasoning action aaai 
mcallester 
valued truth maintenance system 
memo mit ai lab 
sridharan 
representation actions side effects 
proc th ijcai ff 
