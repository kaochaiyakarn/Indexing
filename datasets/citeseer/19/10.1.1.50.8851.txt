domain theory samson abramsky achim jung contents overview origins approach overview domains individually convergence approximation topology domains collectively comparing domains finitary constructions infinitary constructions cartesian closed categories domains local uniqueness lattice domains finite choice compact domains hierarchy categories domains recursive domain equations examples construction solutions canonicity analysis solutions equational theories general techniques powerdomains domains logic stone duality equivalences logical viewpoint directions topics classical domain theory stability sequentiality reformulations domain theory axiomatic domain theory synthetic domain theory guide literature index overview origins problems gave rise domain theory 
fixpoints meanings recursive definitions 
recursive definitions procedures data structures computational entities abound programming languages 
recursion basic effective mechanism describing infinite computational behaviour finite terms 
recursive definition samson abramsky achim jung give non circular account meaning 
suppose working inside mathematical structure want find element substituting yields valid equation 
right hand side read function semantically see asking element fixpoint want uniform canonical method constructing fixpoints arbitrary structures functions framework 
elementary considerations show usual categories mathematical structures fail meet requirement sets topological spaces meet trivial fashion groups vector spaces 

recursive domain equations 
apart recursive definitions computational objects programming languages abound explicitly implicitly recursive definitions datatypes 
classical example type free calculus barendregt 
give mathematical semantics calculus find mathematical structure terms calculus interpreted elements way application calculus interpreted function application 
consider self application term xx 
usual condition type compatibility function argument see second occurrence xx type term xx type occurrence having type gamma 

led requirement gamma 
view gamma 
functor op theta suitable category mathematical structures looking fixpoint 
recursive datatypes lead requirement fixpoints lifted functorial level 
want fixpoints exist uniformly canonically 
second requirement realms ordinary mathematical experience 
collectively call novel mathematical theory serve foundation semantics programming languages 
step domain theory familiar result monotone function complete lattice generally directed complete partial order element fixpoint 
account history result see lassez 
early uses result context formal language theory arden ginsburg rice 
applications recursion theory kleene platek 
application semantics order recursion equations flowcharts established computer scientists de bakker scott bekic bekic park 
domain theory proper understand term began unambiguously creation man dana scott 
particular key insights identified 
domains types 
fact suitable categories domains cartesian closed give rise models typed calculi 
generally domains give mathematical meaning broad class data structuring mechanisms 

recursive types 
scott key construction solution domain equation gamma 
giving mathematical model type free calculus 
led general theory solutions recursive domain equations 
conjunction showed domains form suitable universe semantics programming languages 
way scott provided mathematical foundation christopher strachey denotational semantics milne strachey stoy 
combination descriptive richness powerful elegant mathematical theory led denotational semantics dominant paradigm theoretical computer science 

continuity vs computability 
continuity central pillar domain theory 
serves qualitative approximation computability 
words purposes detect construction computationally feasible sufficient check continuous continuity algebraic condition easier handle computability 
domain theory order give idea continuity smoothed version computability substance sufficient notion completeness convergence needs notion approximation justice idea infinite objects coherent way limits finite approximations 
leads considering arbitrary complete partial orders continuous ones 
scott early domain theory seminal subsequent extensive development theory continuous lattices drew heavily ideas topology analysis topological algebra category theory gierz 

partial information 
natural concomitant notion approximation domains form basis theory partial information extends familiar notion partial function encompass spectrum degrees definedness 
important applications semantics programming languages multiple degrees definition play key role analysis computational notions lazy vs eager evaluation call name vs call value parameter passing mechanisms procedures 
general considerations recursion theory dictate partial functions unavoidable discussion computability 
domain theory provides appropriately structural setting notions lifted higher types recursive types approach striking fact domain theory quarter century treatment published 
quite number books semantics programming languages incorporating substantial introductions domain theory necessary tool denotational semantics appeared stoy schmidt gunter winskel text devoted underlying mathematical theory domains 
analogy calculus textbooks available offering presentations basic analysis interleaved applications modelling physical geometrical problems textbook real analysis 
handbook chapter offer comprehensive coverage full length textbook written spirit presentation real analysis 
attempt give crisp efficient presentation mathematical theory domains excursions applications 
hope account useful readers wishing acquire familiarity domain theory including seek apply 
believe chances exciting new applications domain theory enhanced people aware full richness mathematical theory 
overview domains individually developing basic mathematical language domain theory central pillars theory convergence approximation 
put considerable emphasis bases continuous domains show theory developed terms 
give presentation topological view domain theory recurring theme 
domains collectively study special classes maps play key role domain theory retractions adjunctions embeddings projections 
look construction domains products function spaces sums lifting bilimits directed systems domains embeddings 
cartesian closed categories domains particularly important requirement categories domains cartesian closed closed function spaces 
creates tension requirement theory approximation domains category cont continuous domains category alg algebraic domains cartesian closed 
leads non trivial analysis necessary sufficient conditions domains ensure closure function spaces striking results classification maximal cartesian closed full subcategories cont alg 
material jung jung 
samson abramsky achim jung recursive domain equations theory recursive domain equations 
material formed starting point domain theory full clarification just canonicity solutions means translated proof principles reasoning canonical solutions emerged past years peter freyd andrew pitts freyd freyd pitts 
extensive insights presentation 
equational theories general theory construction free algebras inequational theories continuous domains 
results underlying constructions terms bases appear new 
apply general theory powerdomains give comprehensive treatment plotkin hoare smyth powerdomains 
addition characterizing free algebras certain inequational theories prove representation theorems characterize powerdomain certain space subsets results considerable topological methods 
domains logic develop logical point view domain theory domains characterized terms observable properties functions terms actions properties 
general framework provided stone duality develop stone duality generality specialize domains 
domain theory logical form abramsky metalanguage types terms suitable denotational semantics extended language properties axiomatically programming logic way lattice properties type stone dual domain denoted type prime filter properties proved hold term correspond stone duality domain element denoted term 
yields systematic way moving back forth logical denotational descriptions computational situation determining isomorphism 
jir ad amek reinhold heckmann michael huth mathias philipp paul taylor careful proof reading 
achim jung particularly people domain theory group darmstadt provided stimulating supportive environment 
major intellectual debts inevitably dana scott gordon plotkin 
learn domain theory appreciate depth insights 
domains individually introducing basic language domain theory 
topics deal section treated thoroughly pace davey priestley 
convergence posets preorders definition 
set binary relation called partially ordered set poset holds 
reflexivity 
transitivity 
antisymmetry small finite partially ordered sets drawn line diagrams hasse diagrams 
examples 
allow draw infinite posets showing finite part illustrates building principle 
examples 
prefer notation common order domains studying unrelated intrinsic order 
flat lazy natural numbers illustrate 
drop antisymmetry list requirements get known preorders 
change theory 
easily seen sub relation case domain theory flat booleans true false gamma gamma element lattice gamma gamma gamma gamma element chain fig 

posets drawn line diagrams 
ordinal flat gamma gamma lazy gamma gamma gamma gamma gamma gamma fig 

versions natural numbers 
equivalence relation elements equivalence classes related pair elements pass preorder canonical partially ordered set equivalence classes 
pictorially situation looks 
notions theory ordered sets sense reflexivity fails 
may sum considerations slogan order theory study transitive relations 
common way extract order theoretic content relation pass transitive closure defined nnf ordered sets turned upside proposition 
hp vi ordered set op hp wi 
consequence observation concepts introduced dual counterpart 
notation order theory concepts form core language order theory 
definition 
ordered set 

subset upper set implies denote set elements element confusion feared abbreviate fxg dual notions lower set 
element called upper bound subset element write situation 
denote ub set upper bounds dually lb denotes set lower bounds delta delta delta delta delta delta fig 

preorder canonical quotient element lattice 
samson abramsky achim jung 
element maximal element fxg 
minimal elements defined dually 
subset minimal elements ub called minimal upper bounds set minimal upper bounds denoted mub 

elements single element said largest element dually defined element poset called bottom commonly denoted 
presence element speak pointed poset 
subset set upper bounds element called supremum join 
write case 
direction speak infimum meet write 
partially ordered set semilattice semilattice supremum infimum pair elements exists 
semilattice called lattice 
lattice complete suprema infima exist subsets 
operations forming suprema resp 
infima basic properties text mentioning 
proposition 
poset suprema infima occurring formulae exist 
subsets 
implies 


similarly infimum 
proof 
illustrate order theoretic reasoning suprema showing 
element element upper bound set ig 
upper bound set 
conversely contained corresponding turn 
right hand side upper bound 
conclude subsection looking important family examples complete lattices 
suppose set family subsets call closure system closed formation intersections member family belongs allowed index set empty implies call members hulls closed sets 
arbitrary subset form fb bg 
superset belongs called hull closure proposition 
closure system complete lattice respect inclusion 
proof 
infima intersections supremum takes closure union 
monotone functions definition 
partially ordered sets 
function called monotone monotone really abbreviation monotone order preserving monotone order reversing maps opted shorter expression 
alternative terminology isotone vs antitone half full expression order preserving mapping 
set gamma 
monotone functions posets ordered pointwise gives rise partially ordered set monotone function space category poset posets monotone maps pleasing properties see exercise 
proposition 
complete lattice monotone map fixpoint 
fx xg largest fx domain theory proof 
fx xg infimum get follows 
hand implies monotonicity 
applying yields 
lattices converse true existence fixpoints monotone maps implies completeness 
proof harder relies axiom choice see markowsky 
directed sets definition 
poset 
subset directed nonempty pair elements upper bound directed set supremum denoted directed lower sets called ideals 
ideals form called principal dual notions filtered set principal filter simple examples directed sets chains 
non empty subsets totally ordered pair holds 
chain natural numbers natural order particularly simple subsets poset isomorphic usually called chains 
frequent type directed set set finite subsets arbitrary set 
proposition get useful decomposition general suprema 
proposition 
non empty subset semilattice exists 
join written finite non general directed sets hand may quite messy unstructured 
find behaved cofinal subset chain say cofinal 
cofinal subset supremum exists 
cofinal chains exist exercise shows 
directed set may thought equipped externally nice structure 
definition 
monotone net poset monotone function ff directed set set called index set net 
ff monotone net 
monotone function fi directed fi call ff ffi fi subnet ff 
monotone net ff supremum set fff ig supremum directed set viewed monotone net set index set 
hand image monotone net ff directed set nets 
answer proposition stated krasner 
lemma 
poset ff monotone net 
ff subnet ff ffi fi index set lattice principal ideal finite 
proof 
set finite subsets clearly lattice principal ideal finite 
define mapping fi induction cardinality elements fi oe element fi upper bound set ffi ae ag oe obvious fi monotone defines subnet 
lemma allows base induction proof arbitrary directed set 
applied settle long standing conjecture lattice theory see 
proposition 
directed ff theta monotone net 
assumption indicated directed suprema exist equalities hold ff ff ff ff samson abramsky achim jung directed complete partial orders definition 
poset directed subset supremum call partial order dcpo short 
examples 
ffl complete lattice dcpo 
instances powersets topologies subgroup lattices congruence lattices generally closure systems 
proposition shows lattice dcpo complete 
element may missing 
ffl finite poset dcpo 
ffl set natural numbers usual order form dcpo add top element done 
general difficult problem add points poset dcpo 
proposition markowsky defined completion chains markowsky 
luckily need worry problem domain theory usually interested algebraic continuous dcpo completion easily defined see section 
correct formulation constitutes completion course takes morphisms account 
general framework described poign sections 
ffl points locale form dcpo specialization order see vickers johnstone 
examples follow subsection 
discuss question directed sets chains define dcpo 
arbitrarily long chains full power directed sets despite exercise proposition shows 
proposition 
partially ordered set dcpo chain supremum 
proof uses axiom choice goes back lemma markowsky 
may markowsky complements proposition 
proposition 
pointed poset dcpo monotone map fixpoint 
continuous functions definition 
dcpo 
function scott continuous monotone directed subset 
denote set continuous functions ordered pointwise gamma 

function pointed dcpo preserves bottom element called strict denote space continuous strict functions gamma 

identity function set denoted id constant function image fxg preservation joins directed sets define continuous maps 
practice usually needs show directed 
equivalent monotonicity 
proposition 
dcpo 
gamma 
dcpo 
directed suprema gamma 
calculated pointwise 
proof 
directed collection functions function defined 
directed 
domain theory shows continuous 
class dcpo scott continuous functions forms category denote dcpo 
strong closure properties shall see shortly 
moment concentrate property continuous maps main reasons success domain theory fixpoints calculated easily uniformly 
theorem 
pointed dcpo 

continuous function fixpoint 


assignment fix gamma 


continuous 
proof 
set ff 
ng chain 
follows 
monotonicity continuity get 
clearly equal 
fixpoint get 
induction 
upper bound 
fix 
look fold iteration operator gamma 
maps 
show continuity induction 
th iteration operator equals shown 
induction step directed family continuous functions calculate definition ind hypothesis prop 
continuity 
prop 
pointwise supremum iteration operators form chain seen precisely fix continuous 
fixpoint operator mathematical counterpart recursive iterative statements programming languages 
proving property statement semantically employs proof principle known name fixpoint induction see tennent book denotational semantics 
call predicate subset dcpo admissible contains closed suprema chains 
easily established lemma 
dcpo admissible predicate scott continuous function 
true satisfies satisfies true fix satisfies note invariance property fixpoint operator 
fact characterizes fix uniquely fixpoint operators exercise 
lemma 
pointed dcpo commutative diagram continuous functions strict 
fix fix 
proof 
continuity commutativity diagram strictness turn calculate fix ffi ffi 
samson abramsky achim jung fix approximation subsection explained kind limits domain theory deals suprema directed sets 
said convergence spaces called dcpo 
topic easily esoteric lose connection computing 
example cardinality dcpo restricted didn tools sensibly exercise 
subsection introduce idea elements composed approximated simple pieces 
enrich theory immensely give desired connection semantics 
order approximation definition 
elements dcpo say approximates directed subsets implies say compact approximates 
introduce notation approximates fy xg fy yg fx relation traditionally called way relation 
smyth introduced expression order definite refinement smyth 
text refer order approximation relation reflexive 
common terminology compact finite isolated analogy finite sets strong covers finite set directed collection sets contained 
general approximation absolute property single points 
phrase lot simpler clearly depends depends element compact approximates element 
generally observe basic properties approximation 
proposition 
dcpo 
true 

bases dcpo definition 
say subset dcpo basis element set contains directed subset supremum call elements approximants relative may think rational numbers basis reals top element added order get dcpo choices possible dyadic numbers irrational numbers proposition 
dcpo basis 
set directed 
contains 

superset basis proof 
clear join equals point directedness 
definition know directed subset elements approximating elements respectively 
upper bound definition belongs domain theory show element belongs element equal 
immediate definition 
corollary 
dcpo basis 
largest basis 

smallest basis 
part direct consequence preceding proposition 
leave proof exercise 
continuous algebraic domains definition 
dcpo called continuous continuous domain basis 
called algebraic algebraic domain basis compact elements 
say continuous exists countable basis call algebraic countable basis 
word domain time 
structure qualifies domain embodies notion convergence notion approximation 
light proposition reformulate definition follows avoiding existential quantification 
proposition 
dcpo continuous holds 

algebraic holds 
word algebraic points algebra 
connection precise 
definition 
closure system cf 
section called inductive closed directed union 
proposition 
inductive closure system algebraic lattice 
compact elements precisely finitely generated hulls 
proof 
hull finite set directed family hulls contained hulls finite sets compact elements complete lattice hand closed set directed union finitely generated hulls form basis 
proposition compact elements 
group generally algebra sense universal algebra canonical inductive closure systems associated lattice subgroups subalgebras lattice normal subgroups congruence relations 
standard examples algebraic domains ffl set discrete order algebraic domain 
semantics usually adds bottom element standing divergence resulting called flat domains 
flat natural numbers shown 
basis case contain elements 
ffl set partial functions sets ordered graph inclusion 
compact elements functions finite carrier 
naturally isomorphic gamma 
gamma 

ffl finite poset 
continuous domains ffl algebraic dcpo continuous 
follows directly definition 
order approximation characterized exists compact element ffl unit interval continuous lattice 
plays central role theory continuous lattices see gierz chapter iv particular theorem 
way modelling real numbers domain theory take closed intervals finite length order reversed inclusion 
single element intervals maximal domain provide faithful representation real line 
countable basis set intervals rational endpoints 
samson abramsky achim jung delta delta delta delta delta delta fig 

continuous non continuous dcpo 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fig 

basis element witnesses ffl lattice open subsets sober space forms continuous lattice locally compact 
compact hausdorff spaces special case 
holds exists compact set meeting point topology domain theory discussed detail smyth vickers johnstone gierz addressed chapter 
point may helpful give example non continuous dcpo 
easiest explain depicted labelled 
show order approximation empty 
pairs belong order approximation related order 
points leg approximating directed set supremum containing element non continuous distributive complete lattice harder visualize line diagram 
said know topology sober space locally compact lattice 
exercise discusses detail 
pointed order approximation non empty bottom element approximates element 
basis gives approximations elements approximates order relation proposition 
continuous domain basis elements equivalent 
form usually apply proposition implies exists picture situation 
light proposition give intuitive reason dcpo continuous 
natural candidate basis collection certainly doesn approximate 
proposition expresses idea continuous domain information elements related contained basis 
fact holds precisely visible basis 
dcpo look algebraic domain 
bases allow express continuity functions form reminiscent ffl ffi definition real valued functions 
proposition 
map continuous domains bases respectively continuous exists domain theory proof 
continuity bx 
approximates exists monotonicity implies converse show monotonicity 
suppose holds 
proposition assumption get belongs contradiction 
directed subset join 
monotonicity implies 
converse relation hold choose approximates get contradicting choice cite result reduces calculation fixpoints basis 
point continuous function need preserve compactness order approximation sequence need consist basis elements 
proposition 
pointed continuous domain basis continuous map exists chain basis elements conditions satisfied 


fix 
proof may abramsky 
comments possible variations directed sets vs chains start observation 
proposition 
dcpo countable basis directed subset contains chain supremum 
raises question shouldn build theory chains 
basic definitions read poset chain supremum 
function continuous preserves joins chains 
element approximating implies continuous countable subset element join chain elements approximating 
similarly algebraicity 
approach adopted plotkin example 
main point definitions countability basis 
ensures complete harmony set show proposition 

continuous continuous dcpo 

algebraic algebraic dcpo 

continuous map continuous continuous 
proof 
nbe enumeration basis show continuous directed complete directed subset set basis elements element simplicity assume construct chain follows element basis element set upper bound proceed induction 
follow resulting chain cofinal true supremum supremum subsets dominate set basis elements 
construction shows approximation approximation continuous 
basis may show continuous domain 
directedness sets follows proposition 
follows proof remains show 
monotonicity function implied definition continuity 
directed set mapped directed set holds 
chain constructed proof 

drop crucial assumption countability basis theories opinion theory chains bizarre 
give just illustration samson abramsky achim jung observe simple objects powersets may fail algebraic domains 
remains question realm mathematical theory computation start chains 
arguments favor approach point pedagogy foundations 
pedagogical aspect somewhat weakened fact continuous sets happen directed 
glossing fact tend mislead student 
eyes right middle ground course domain theory start chains motivations semantics point probably ideal completion poset discussed switch directed sets general concept 
suggestion hardly original 
direct analogy way students introduced topological concepts 
turning foundations feel necessity choose chains directed subsets naturally available function spaces rely axiom choice need serious approach 
take foundational questions seriously implies deeper re working theory pointers literature section 
feel need say chains arbitrary cardinality 
adds strength proposition disadvantages pointed chains 
bases vs intrinsic descriptions 
definition continuous domain differs fact complicated standard proposition 
preferred approach concept approximation reasons 
firstly standard definition allow restriction size continuous domains 
respect cardinality domain minimal cardinality basis interest 
secondly wanted point strong analogy algebraic continuous domains 
proofs far continuous domains specialize directly algebraic case replaces 
far proofs algebraic domains shorter 
thirdly wanted stress idea approximation elements reason simpler 
notion simplicity exist continuous domains rational vs real numbers justification purely order theoretical see 
algebraic vs continuous 
brings question continuous domains 
important reasons depend definitions introduced text 
simplification mathematical theory domains stemming possibility freely retracts see theorem 
second observation algebraic domains fundamental concepts domain theory essentially coincide scott open set compact saturated set 
find advantageous able distinguish 
continuous dcpo vs continuous domain 
presently common practice start semantics domain theory defining subclass dcpo interest assigning name domain structures 
fully agree custom domain generic name 
article study full range possible definitions general dcpo 
avoided calling domains 
domain refers ideas essential theory idea convergence idea approximation 
useful properties start right away single important feature order approximation interpolation property lemma 
continuous domain finite set elements approximates exists holds 
basis may chosen 
say interpolates 
proof 
define set fa yg clearly non empty 
directed directedness directedness calculate supremum element approximating holds continuity elements fact equality holds domain theory gamma gamma gamma gamma fig 

meet compact elements compact 
remember started set elements approximate definition am am upper bound am definition take interpolating element proof remains allow basis elements enter corollary 
continuous domain basis directed subset element approximating approximates formula intersecting basis sides gives illustrate domain restrict attention principal ideals 
proposition 

continuous domain elements approximates directed sets 
order approximation continuous domain union orders approximation principal ideals 

dcpo continuous principal ideal continuous 

continuous domain 

dcpo algebraic principal ideal algebraic 
proposition 

continuous domain minimal upper bounds finite sets compact elements compact 

complete lattice sets sub semilattices 

complete lattice join finitely compact elements compact 
corollary 
complete lattice algebraic element join compact elements 
infimum compact elements need compact algebraic lattice 
example 
bases objects section seen bases order express properties ambient domain 
study question far reduce domain theory theory bases 
resulting techniques prove useful chapters hope deepen reader understanding nature domains 
samson abramsky achim jung start question additional information necessary order reconstruct domain bases 
somewhat surprisingly just order approximation 
define definition 
basis set transitive relation oe int oe oe oe holds elements finite subsets bases introduced smyth called structures 
examples bases concrete bases continuous domains course relation oe restriction order approximation 
axiom int satisfied lemma required bases domains directed sets approximants element 
examples partially ordered sets int satisfied reflexivity 
shortly identify posets exactly bases compact elements algebraic domains 
follows terminology developed chapter relation oe basis need reflexive antisymmetric 
convenient instances looks innocent ideal basis example property directedness element oe posets doesn mean important feature 
stressed expression round ideal 
note set form ideal int need contain 
refrain calling principal circumstances 
definition 
basis hb oei idl set ideals ordered inclusion 
called ideal completion furthermore idl denote function maps want stress relation equipped write idl oe ideal completion 
proposition 
hb oei basis 

ideal completion dcpo 

holds idl oe 
idl continuous domain basis idl 

oe reflexive idl algebraic 

hb oei poset idl isomorphic 
proof 
holds clearly directed union ideals ideal 
roundness implies idl written union directed directed 
proves 
fourth claim follows characterization order approximation 
clause holds basis compact elements algebraic domain 
defining product bases partially ordered sets proposition 
idl theta idl theta idl completion weak universal property proposition 
hb oei basis dcpo 
monotone function largest continuous function idl ffi 
idl assignment 
scott continuous map gamma 
idl gamma 

relation oe reflexive ffi equals domain theory proof 
check continuity directed collection ideals 
general associativity proposition calculate ff ff 
assumed monotone upper bound 
proves ffi hand idl continuous function property 
claim continuity assignment 
shown usual switch directed suprema 
oe preorder show ffi 
particular instance proposition case bases monotone 
extension idl mean map ffi idl idl 
maps ideal ideal 
proposition 
continuous domain basis viewing hb basis 
idl isomorphic isomorphism oe idl extension embedding inverse fi maps elements 
dcpo continuous function ffi fi restriction proof 
continuous domain elements oe ffi fi id composing maps way round need see approximates ideal hb belongs interpolate defining property order approximation find approximates belongs calculation straightforward fi 
corollary 
continuous function continuous domain dcpo completely determined behavior basis know reconstruct continuous domain basis recover continuous function restriction basis may wonder possible bases 
problem overcome fact continuous functions preserve order approximation 
way switch functions relations relate basis element basis elements approximating 
axiomatized follows 
definition 
relation bases called approximable conditions satisfied 
xry xry 
fin xry 
xry ry 
xry 
proved difficulties 
theorem 
category bases approximable relations equivalent cont category continuous dcpo continuous maps 
formulations chosen section allow immediately read corresponding results special case algebraic domains 
particular theorem 
category preorders approximable relations equivalent alg category algebraic dcpo continuous maps 
topology topology space understand system subsets called open sets closed finite intersections infinite unions 
amazing fact suitable choice topology encode information convergence approximation continuity functions points 
student mathematics appears immense abstraction samson abramsky achim jung intuitive beginnings analysis 
domain theory lucky situation tie open sets concrete idea observable properties 
done detail earlier handbook smyth may proceed swiftly mathematical side subject 
scott topology dcpo definition 
dcpo 
subset called scott closed lower set closed suprema directed subsets 
complements closed sets called scott open elements oe scott topology shall notation cl smallest closed set containing similarly int stand open kernel scott open set necessarily upper set 
contraposition characterized property directed set supremum lies non empty intersection basic examples closed sets principal ideals 
knowledge show proposition 
dcpo 

elements equivalent scott open set contains contains cl fyg 

scott topology satisfies separation axiom 

hd oe hausdorff topological space order trivial 
reconstruct order elements dcpo scott topology 
true limits directed sets 
proposition 
directed set dcpo supremum upper bound scott neighborhood contains element proof 
closed set separates supremum upper bounds proposition 
dcpo function scott continuous topologically continuous respect scott topologies proof 
continuous function open subset clear gamma upper set continuous functions monotone 
maps element definition mapped gamma open converse assume topologically continuous 
show monotone elements inverse image scott closed set contains contains directed 
look inverse image scott closed set 
contains scott closed 
contain monotonicity upper bound follows supremum 
theme convergence 
proceed see far approximation reflected scott topology 
scott topology domains subsection second primitive form open sets written start characterizing order approximation 
proposition 
continuous domain 
equivalent pairs 

int 
proposition 
continuous domain basis openness subset characterized ways 
domain theory 
read saying open set supported members basis 
may ask scott topology derived basis 
proposition 
oe basis subset set fa idl scott open idl open sets idl form 
nicely connects theory idea observable property 
assume elements basis finitely describable finitely recognisable strongly approve intuition clear observe property completion wait see element set basis elements 
sharpening proposition lemma 
scott open set continuous domain union scott open filters 
proof 
element open set proposition element approximates repeatedly interpolate gives sequence yn union scott open filter containing contained subsection laid groundwork formulation domain theory purely terms lattice scott open sets 
construe open sets properties brought logic picture 
relationship looked closely chapter 
section exhibit properties scott topology domains 
exercises 
formalize passage preorders quotient posets 

draw line diagrams powersets element set 

show poset suprema infima vice versa 

refine proposition showing fixpoints monotone function complete lattice form complete lattice 
sublattice 

show finite directed sets largest element 
characterize class posets true directed set 

show directed set finite subsets real numbers contain cofinal chain 

dcpo unit interval gamma negative integers 

monotone map complete lattices subset prove 

show category posets monotone functions forms cartesian closed category 

draw line diagram function space flat booleans see 

show ideal binary product posets seen product ideals individual posets 

show map dcpo continuous directed sets holds 

give example monotone map pointed dcpo 
fixpoint 
fixpoint exist proposition 

fixpoint induction prove 
continuous functions pointed dcpo 
ffi ffi fix fix 

dinaturality fixpoints pointed dcpo continuous functions 
prove fix ffi fix ffi 
show lemma uniquely characterizes fix fixpoint operators 

prove pointed dcpo continuous function theta continuous function ffi hid holds 
general definition category having fixpoints 
theorem follow 

show version natural numbers shown example countable dcpo function space uncountable 

characterize order approximation unit interval 
compact elements 

show finite posets element compact 
samson abramsky achim jung 
lattice open sets equipped ordinary metric topology 
show non empty open sets approximate 
conclude continuous 

prove proposition 

extend proposition way finite subset continuous dcpo basis exists 
order isomorphism element belongs 
prove proposition 

show elements basis approximate element may deleted changing ideal completion 

show non compact element basis continuous domain fxg basis 
hint interpolation property 

preceding exercise shows different bases generate domain 
show fixed basis different orders approximation may yield domain 
show definitely case orders oe oe satisfy equations oe ffi oe oe oe ffi oe oe 
ideal completion hq 
oe relation set oe ffi oe oe holds 
give example showing axiom int definition need satisfied 
idl oe continuous domain 
advantage axiomatization simpler concept 

spell proof theorem 

prove dcpo upper set intersection scott neighborhoods 

show order construct scott closure lower set continuous domain sufficient add suprema directed subsets give example non continuous dcpo fails 

subset dcpo smallest superset closed formation suprema directed subsets 
show cardinality greater jxj 
hint construct directed suprema closed superset adding existing suprema 
domains collectively comparing domains retractions reader background universal algebra may missed discussion quotient dcpo 
reason omission quite simple fully satisfactory notion sub object quotient domain theory general scott continuous functions 
formation directed suprema partial operation unbounded arity 
hope able employ tools universal algebra 
combine ideas sub object quotient picture looks quite nice 
definition 
posets 
pair monotone functions called monotone section retraction pair ffi identity situation call monotone retract dcpo functions continuous speak continuous section retraction pair omit qualifying adjective monotone respectively continuous properties functions clear context 
pair shorthand 
sees immediately pair retraction surjective section injective intuition sub object quotient justified 
situation inherits properties proposition 
posets monotone section retraction pair 

subset supremum supremum 
similarly infimum 
domain theory 
pointed dcpo semilattice lattice complete lattice proof 
ffi id monotonicity clear upper bound 
monotonicity upper bound 
get 
property pointed dcpo semilattice defined existence suprema infima certain subsets 
shape subsets preserved monotone functions follows 
turn continuous section retraction pairs 
lemma 
continuous section retraction pair dcpo basis basis proof 
approximant show approximates directed subset continuity hold 
implies 
continuity gives supremum 
theorem 
retract continuous domain continuous pair continuous 
analogous statement algebraic domains hold general 
constructing particular counterexample knowledge ideal completion get general positive result implies negative 
theorem 
continuous domain retract algebraic domain continuous pair 
detail proposition 
continuous domain basis maps idl 
idl 
constitute continuous section retraction pair idl 
proof 
continuity follows general associativity proposition fact directed suprema idl directed unions 
continuity interpolation property form proposition 
idempotents section part pair really subset inclusion 
case hide map ffi 
idempotent ffi ffi ffi ffi ffi ffi ffi proposition 
image continuous idempotent map dcpo dcpo 
suprema directed subsets im calculated im coincide calculated inclusion im scott continuous 

set continuous idempotent functions dcpo dcpo 
proof 
part follows proposition inclusion surely monotone 
second part directed set contained im 
need see belongs im 
holds continuous 
directed family continuous idempotents 
calculate ffi samson abramsky achim jung phi phi phi phi phi phi gamma gamma gamma oe oe ae oe ae fig 

right inverse problem surjective function supremum continuous idempotents idempotent function 
proved proposition continuous 
continuous idempotent map continuous domain know image continuous 
true order approximation im restriction order approximation example constant map continuous idempotent 
image algebraic domain element compact 
surely element continuous domain compact 
say nice scott topology image proposition 
continuous idempotent function dcpo scott topology im restriction scott topology im 
proof 
follows immediately continuous idempotent function gives rise continuous pair im useful examples idempotent self maps retractions ret principal ideals 
ret ae continuity follows fact scott closed 
dually define retraction principal filter scott continuous generator compact 
adjunctions easy way avoid writing subsection refer category theory translate general theory adjoint functors poset setting 
feel right way get idea adjointness start relatively simple situation domain theory 
fact adjoint functors really descriptive fashion 
start example surjective map poset poset natural ask sided inverse map ffi id holds 
illustrates situation 
map pick representative gamma set theoretically done point want monotone 
succeed form monotone section retraction pair 
nicer pick canonical representative gamma realm order theory means want gamma largest element 
case ensure assignment 
min gamma monotone 
solution suggested observation monotone element gamma gamma 
condition sufficient 
switch gamma gamma trick remember may allow construct partial right inverse surjective 
arrive tentative definition adjunction 
definition 
preliminary posets monotone functions 
say adjunction element gamma 
definition simple easy motivate 
brings just aspect adjoint pairs uniquely determined proposition 
posets monotone functions 
equivalent 
min gamma domain theory 
max gamma 
ffi id ffi id 

monotonicity needed 
proof 
pick element holds 
belongs gamma 
element gamma equivalently see happen holds 
largest element gamma 
converse proved analogously course 
immediately give 
get applying monotone map inequality ffi id assuming see immediately lower bound gamma 
belongs gamma 
get monotonicity follows holds transitivity 
get 
conclude despite definition situation described adjunction completely symmetric 
adjunctions usually introduced 
definition 
official posets functions 
say adjunction call lower upper adjoint write ff proposition 
ff adjunction posets 

ffi ffi ffi ffi 
image image order isomorphic 
isomorphisms restrictions im im respectively 

surjective ffi id injective 
surjective ffi id injective 
preserves existing suprema preserves existing infima 
proof 
proposition twice id ffi ffi ffi ffi ffi ffi id 
equations say precisely images ffi ffi respectively act identity functions 
surjective cancel right equation ffi ffi get ffi id follows injective 
monotonicity conversely upper bound 
upper bound turn holds equivalent 
property preceding proposition may define adjunction way prerequisite sets infimum supremum 
adjoint functor theorem posets 
proposition 
monotone function complete lattice poset 
equivalent 
preserves infima 
lower adjoint 
similarly preserves suprema upper adjoint 
proof 
know define candidate lower adjoint try gamma 
remains show belongs gamma 
follows preserves meets gamma gamma proposition gives way recognizing adjoint situation cases function explicitly 
useful notation missing mapping 
write upper lower adjoint high time come back domains see means setting 
samson abramsky achim jung proposition 
ff adjunction dcpo 

scott continuous 

scott continuous preserves order approximation 

continuous converse true 
proof 
continuity lower adjoint follows proposition 
elements directed subset holds 
implies continuity deduce 
going back means 
converse directed subset monotonicity yields 
order show inequality holds prove approximant 
assumption 

projections sub domains combine ideas section 
definition 
dcpo continuous functions 
say continuous embedding projection pair pair ffi id ffi id note section retraction pair continuous domain ideal completion constructed section really embedding projection pair 
general theory adjunctions retractions know quite bit ep pairs 
embedding injective surjective preserves existing suprema order approximation preserves existing infima continuous continuous embeddings projections uniquely determine 
property term embedding defined meaning injective function scott continuous upper adjoint 
injective lower adjoint reflects order approximation proposition 
ff pair dcpo elements holds approximates look associated idempotent ffi identity sense call function kernel operator maps just called projections 
denote set kernel operators dcpo gamma 

important note kernel operator preserves infima map image preservation properties map scott continuity 
say summarized proposition 
proposition 
dcpo 

gamma 
dcpo 

kernel operator im xg 

image kernel operator closed existing suprema 

im im theta im 

kernel operators im im 
proof 
proved proposition follows inclusion im form adjunction 
shows 
direct consequences 
explained idea order semantic domain models relation elements better semantics better may replaced precisely better termination 
view elements bottom domain desirable higher proto elements fully developed elements evolve go order 
embedding part pair ff places bottom line thought may think collection proto elements elements evolve 
projection part element exists primitive form 
contains information order order approximation may think preliminary version approximation domain level 
thought fruitful sections 
domain theory word convey fabric ideas name sub domain just case pair ff closures quotient domains sub domain relation domain theory course combine retractions adjunctions way 
arrive continuous insertion closure pairs pairs 
adjunctions symmetric far order approximation concerned proposition situation just order dual previous subsection 
know insertion preserves existing infima addition surjective part preserves order approximation algebraic associated idempotent called closure operator closure operators caveat applies kernel operators need preserve suprema 
worse functions longer automatically scott continuous upper adjoint 
price pay algebraicity image 
formulate precisely 
proposition 
algebraic domain monotone idempotent function id im algebraic domain closed directed suprema 
reader doubt recognize statement reformulation generalization example inductive closure systems chapter proposition 
consequent call quotient domain continuous domain exists pair omega finitary constructions section basic ways putting domains build complicated structures simple ones 
aspects constructions interested 
simply order theoretic definition proof stay dcpo scott continuous functions 
second question construction described terms bases principle approximation retained 
third question universal property construction 
categorical viewpoint 
handbook contains chapter category theory poign particular chapter need repeat arguments fruitful enlightening way looking type constructors 
categories interested construction may play different roles different settings 
list categories point suitable universe discourse 
dcpo category dcpo scott continuous functions introduced section 
restrict objects continuous special algebraic domains 
arrive full subcategories cont alg dcpo 
may restricted requiring objects bottom element theorem tells interested doing resulting categories dcpo 
cont 
alg 
presence distinguished point object suggests morphisms preserve 
really appropriate semantics strict functions tied particular evaluation strategy 
means cascade categories dcpo 
cont 
alg 
objects bottom elements morphisms strict scott continuous 
may bound size minimal bases continuous algebraic domains countable 
indicate prefix 
cartesian product definition 
cartesian product dcpo data theta fhx yi hx yi hx just usual product sets augmented coordinatewise order 
induction define cartesian product finite non empty collections dcpo 
product empty index set define result fixed element dcpo proposition 
cartesian product dcpo dcpo 
suprema infima calculated coordinatewise 
samson abramsky achim jung product theta associated projections theta theta projections surjective upper adjoints pointed 
slight mismatch section 
dcpo continuous functions denote mediating morphism theta hf gi 
maps hf proposition 
projections mediating morphisms continuous 
scott continuous mediating map hf ffi ffi theta theta common notation theta construction completely explicit defined functor variables dcpo 
proposition 
dcpo 

tuple hx yi approximates tuple hx theta approximates approximates 
bases respectively theta basis theta 
theta continuous 

theta theta 
categorical aspect cartesian product quite pleasing categorical product case 
say 
lemma 
full subcategory dcpo dcpo 
finite products 
isomorphic cartesian product 
restricted setting observed smyth 
general proof may jung 
useful property follow general categorical topological considerations 
lemma 
function theta continuous continuous variable separately 
proof 
assume theta separately continuous 
monotone fill coordinatewise monotonicity twice 
works continuity theta directed proves interesting direction 
function space introduced function space section 
consists continuous functions dcpo ordered pointwise 
know dcpo 
morphism connected construction apply gamma 
theta hf xi 

continuous continuous argument separately directed suprema functions calculated pointwise second gamma 
contains continuous functions 
second standard morphism operation rearranges function arguments combination unary functions 
maps theta curry gamma 
mapping assigns function assigns element 
curry continuous function lemma 
completely general reasons domain theory fig 

coalesced sum pointed dcpo 
curry continuous operation theta gamma 
gamma 
gamma 

derived operation composition continuous operation gamma 
theta gamma 
gamma 

shows continuous function space exponential dcpo 
cartesian products function spaces shown dcpo cartesian closed 
turn function space construction functor dcpo op theta dcpo dcpo setting delta gamma 
delta ffi ffi element gamma 

product show choice exponential object forced 
noticed smyth mentioned 
lemma 
cartesian closed full subcategory dcpo 
exponential objects isomorphic gamma 

turn theme approximation function spaces 
reader brace profound disappointment algebraic domains may case order approximation function space empty 
exercise discusses example 
fact lemmas implies cont alg cartesian closed 
way remedy situation move restricted classes domains 
topic chapter 
coalesced sum category sets coproduct disjoint union 
works equally dcpo isn really interesting prove 
denote disjoint union destroys property having element turn indispensable proving function fixpoint theorem 
looks substitutes disjoint union retain course expect clean categorical characterization cartesian product function space 
see exercise 
fact shown poign cartesian closure fixpoint property coproducts non degenerate category 
restrict attention pointed dcpo 
way putting family identify bottom elements 
called coalesced sum denoted phi illustrates operation 
elements phi different carry label indicates came 
write form 
proposition 
coalesced sum pointed dcpo pointed dcpo 
individual dcpo may injected sum obvious way inl ae inr ae universal property sum holds realm strict functions proposition 
coalesced sum pointed dcpo coproduct dcpo 
cont 
alg 
accept restriction bottom preserving functions clear turn coalesced sum functor 
samson abramsky achim jung smash product strict function space clear inside dcpo 
candidate exponential full function space set gamma 
strict continuous functions product dcpo 
seen cartesian product 
get match consider called smash product defined cartesian product tuples contain bottom element identified 
common notation omega leave reader check smash product strict function space turn dcpo 
monoidal closed category 
lifting set theoretically lifting simple operation adding new bottom element dcpo 
applied resulting structure denoted 
clearly continuity algebraicity don suffer harm 
associated map maps 
categorical significance lifting stems fact left adjoint inclusion functor dcpo 
dcpo 
morphism lifted mapping new bottom element 
new bottom element 
summary quick compile table constructions looked far 
indicates category closed respective construction says addition construction plays expected categorical role product exponential coproduct respectively 
observe constructions considered section difference restrict size minimal basis 
dcpo dcpo 
dcpo 
cont alg cont 
alg 
cont 
alg 
theta gamma 
omega gamma 
phi 
infinitary constructions product sum constructions previous section infinitary counterparts 
generally nicely long concerned questions convergence cause problems respect order approximation 
exemplified fact infinite power finite poset may fail algebraic 
case operations semantics 
interesting idea incrementally building domain limit process 
topic section 
limits colimits limit constructions understood categorically refer poign motivation general results 
basic definitions 
diagram category functor small category describe somewhat concretely diagram pair family objects family connecting morphisms 
shape diagram encoded index sets correspond objects correspond morphisms maps corresponds dom codom map lost information composition cases interest problem 
cone diagram object family morphisms ffi cone limiting cone exactly morphism ffi hd limiting cone called limit called limiting morphisms 
dual notions cocone colimit colimiting morphism 
domain theory ae ae ae ae pi delta delta delta delta pi delta delta delta delta delta delta xi xi fig 

expanding sequence finite domains 
theorem 
dcpo limits arbitrary diagrams 
proof 
proof follows general category theoretic principles 
describe limit diagram set particular elements product called commuting tuples 
fhx oi order limit object inherited product tuples ordered coordinatewise 
dcpo coordinatewise supremum commuting tuples commuting scott continuous 
proves projections restricted continuous 
give maps needed complement cone 
cone define mediating morphism hg oi 
obvious defined continuous possible choice 
dual theorem 
dcpo colimits arbitrary diagrams 
noted markowsky somewhat different setting meseguer 
simplest way prove reducing completeness la theorem herrlich strecker 
appears lehmann smyth 
detailed analysis colimits appears 
problem retaining algebraicity addressed 
theorem 
dcpo cartesian closed complete cocomplete 
theorem 
dcpo 
monoidal closed complete cocomplete 
dcpo 
objects elements morphisms need preserve 
truth completeness cocompleteness fail category 
hand right setting denotational semantics cases 
result mismatch quite resort detailed proofs element level simply apply general category theoretic principles 
write property dcpo 
theorem 
dcpo 
cartesian closed 
limit colimit coincidence theorems previous subsection fall apart completely pass domains cont alg 
get better results limits colimits restrict shape diagrams connecting morphisms 
motivation look chain domains dn sub domain dn sense section 
animated language section may think points dn growing points dn contain leaves flowers seen stages 
shows hopefully inspiring example 
intuition suggests situation structured limit adding limit points union dn algebraic dn 
definition 
diagram dn mn dn dm nm category dcpo called expanding sequence conditions satisfied 
mn dn dm embedding 
associated projection mn denote 
nn id dn samson abramsky achim jung 
kn km ffi mn note lower adjoints determine upper adjoints vice versa nk ffi turns contrast general situation colimit expanding sequence calculated easily associated projections 
theorem 
dn mn dn dm nm expanding sequence dcpo 
define ni dn xn xm pm dm ni 
xm dm 
kwn nk ffi km ni 
maps pm form embedding projection pairs ffi pn id holds 

hd limit diagram dn nm nm hc cone mediating map hg ni ffi gn 
hd colimit diagram dn mn nm cocone mediating map hx ni fn ffi pn proof 
shown theorem limit diagram dn nm hd mediating morphism postulated form 
rest start showing functions defined commuting tuple 
assume kwn pn ffi km kwn ffi pn ffi km kwn nk ffi km yn assignment 
general associativity scott continuous maps involved definition 
check pm form pair 
ffi pm hx ni kwn nk ffi km xm ni kwn nk ffi km ffi ni kwn nk ni ni pm ffi pm kwn nk ffi km ni ffi km closer analysis reveals ffi pm leave elements tuple hx ni unchanged pn ffi pm hx ni kn nk ffi km ffi kn ffi ffi km ffi kn ffi kn xn xn proves ffi pm add identity stated 
putting easily get second representation mediating map viewed limit id ffi ffi pm ffi ffi remains prove universal property colimit 
cocone expanding sequence 
check fn ffi pn defined sense supremum directed set 
get ffi pn fm ffi mn ffi ffi pm ffi pm commutes colimiting maps ffi nm fn ffi pn ffi domain theory nm fn ffi pn ffi ffi nm nm ffi nm nm show choice equation comes handy mediating morphism 
satisfy ffi fm ffi ffi pm fm ffi pm forming supremum sides gives fm ffi pm definition fact colimit expanding sequence canonically isomorphic limit associated dual diagram called limit colimit coincidence 
fundamental tools domain theory plays prominent role solution recursive domain equations chapter 
coincidence henceforth speak bilimit expanding sequence denote mn generalize theorem ways replace arbitrary directed set case speak expanding system general scott continuous adjunctions pairs 
generalization harmless need serious adjustments proofs 
freely 
second hand quite interesting 
passage embeddings longer injective lower adjoints allow domains grow shrink move index set 
points stage looked different may stage recognised 
interested reader find outline mathematical theory exercises 
main text remind generalization far application semantics 
part preceding theorem gives characterization bilimits lemma 
cocone expanding sequence dn mn dn dm nm colimiting firstly scott continuous functions dn gn pair secondly fn ffi gn id holds 
proof 
necessity part theorem 
sufficiency show bilimit constructed isomorphic maps bilimit 
commute limiting colimiting morphisms respectively 
check compose identities ffi hg ni fn ffi gn ffi ffi gn ffi fm ffi pm ffi gn ffi fn ffi pn ffi pn id note proof condition fn ffi id calculation 
get form pair 
proposition 
cocone expanding sequence dn mn dn dm nm embeddings 
bilimit sequence sub domain words corollary 
bilimit expanding sequence colimit limit restricted category dcpo embeddings projections morphisms 
samson abramsky achim jung bilimits domains theorem 
dn mn dn dm nm expanding sequence hd bilimit 

dn continuous bases dn basis 

dn algebraic dn 
proof 
element show pn directed 
sufficient show pn pm 
approximates pn embeddings preserve order approximation mn mn mn nm ffi pm pm 
pm pm pm mn 
implies mn 
set pn gives back ffi pn pn pn pn 
consists solely approximants lower adjoints 
exercises 

continuous domain idempotent scott continuous function 
show holds image exists 
case algebraic conclude element im compact 

kernel operator finite image 
show im contained compact gamma 


huth chain called order dense pair exists 
order dense chain algebraic domain construct continuous idempotent function im im algebraic continuous theorem 
conversely continuous idempotent function algebraic dcpo image algebraic 
show contains order dense chain 
algebraic domain called retraction stable idempotent algebraic image 
prove algebraic domain retraction stable contain order dense chain 
formulate similar result projection stable domains 

ff embedding projection pair semilattices 
show im lower set 
formulate prove generalization proposition arbitrary posets 

formulate analogue proposition infinite products 
proceed follows restrict pointed dcpo 
find example non pointed finite poset non algebraic infinite power 
give intuition try general case 

dcpo may seen topological space respect scott topology 
dcpo form product dcpo 
show scott topology product need product topology topologies coincide factors continuous domain 

construct example shows lemma hold infinite products 

derive curry composition maps arbitrary cartesian closed category 

cartesian closed full subcategory dcpo 
full subcategory dcpo objects retracts objects show cartesian closed 

gamma negative integers usual ordering 
show order approximation gamma gamma 
gamma empty 
find pointed algebraic dcpo similar effect takes place 

show dcpo 
coproducts 

show cont equalizers pairs morphisms 
hint convince limits cont exist underlying dcpo calculated dcpo 
domain theory 
complement table section infinitary counterparts cartesian product disjoint union smash product sum 
observe cardinality basis play role add columns cont 
show embeddings bilimit expanding sequence concretely ni xn ae nm find similar description expanding systems 

redo section directed index sets scott continuous adjunctions 
interesting points limit colimit coincidence theorem holds verbatim 
characterization bilimits lemma suffice 
states contain superfluous elements 
need say identify elements 
expanding system ji adjunctions pass quotient domains setting im ik ffi ki 
show original adjunctions restricted pairs define bilimit 

rd space scott continuous idempotents dcpo apply previous exercise show rd implies im im connecting adjunctions restricting retractions respective image 

prove scott topology bilimit continuous domains restriction product topology product individual domains 
cartesian closed categories domains chapter seen big ambient categories dcpo dcpo 
things cartesian closed pointed natural classes domains cont alg longer true 
problematic construction exponential know lemma set scott continuous functions ordered pointwise 
hand find full subcategory cont closed terminal object cartesian product function space cartesian closed necessary universal properties inherited dcpo 
study closely function spaces may fail domains 
fact order approximation may empty tells may natural candidates basis elements function space 
better somewhat requiring image domain contain bottom element 
definition 
dcpo element define step function ae 
generally function maps scott open set 
proposition 
step functions scott continuous 

dcpo pointed continuous 
approximates approximates 
addition continuous supremum step functions 
proof 
continuity follows openness respectively 
directed family functions suprema gamma 
calculated pointwise 
implies holds 
simple case distinction shows 
samson abramsky achim jung gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fig 

finding upper bound step functions 
show step function approximating maps get desired step function 
continuity implies get arbitrarily close way 
note supremum need directed shown gamma 
continuous 
mistake require directedness set approximants 
answer proved place 
problem joining finitely step functions build directed collections approximants comes case step functions approximate continuous function situation illustrated 
problem map scott open unstructured set done way resulting function approximates turn suffices special assumptions image domain topic section pre image domain topic section 
cases restrict attention pointed domains step functions joins 
pass general domains ways 
outlined briefly section 
question arises missed alternative way building cartesian closed category 
case see section 
basic tool fundamental result lemma nicely connect dichotomy distinguishing 
local uniqueness lattice domains idea adjusting image domain simple assume upper bound bounded 
mapping intersection results continuous function approximates seen follows suppose directed collection functions supremum 
construction upper bound fg fact need join exists globally suffices form join inside seen proposition considerations order approximation performed inside principal ideals 
list definitions 
definition 
pointed continuous domain 
say 
domain pair bounded supremum 
bounded complete domain bc domain bounded pair supremum 
repeated comparison continuous lattice pair supremum 
denote full subcategories cont 
corresponding definitions bc lat 
algebraic counterparts abc alat 
sense forget approximation surely point reader suffer lack variety far categories concerned 
point continuous lattices main objects study gierz mathematically oriented text objects abc domains choice semantics appear name scott domain 
typical examples depicted 
characterize domain theory alg gamma gamma gamma gamma gamma gamma ae ae ae ae ae ae bc gamma gamma gamma ae ae ae ae ae ae bc lat gamma gamma gamma fig 

separating examples categories lattice domains 
corresponding categories see exercise 
domains directed joins anyway see domains subset principal ideal supremum ideal 
know complete lattices alternatively characterized infima 
game played definitions proposition 
pointed continuous domain 
domain bc domain continuous lattice infima bounded non empty non empty arbitrary subsets respectively 
consideration infima may side issue light problem turning function spaces domains 
relevance clear remember upper adjoints preserve infima 
second half simple observation 
half follows proposition theorem 
proposition 
retracts bilimits domains bc domains continuous lattices domains bc domains continuous lattices 
treat continuous algebraic lattice domains nicely parallel ideal completion respects definitions proposition 
domain bc domain continuous lattice 
idl algebraic domain bc domain lattice 
bc lat contain precisely retracts objects abc alat respectively 
conclude section stating desired closure property lattice domains 
proposition 
continuous domain domain bc domain continuous lattice 
gamma 
domain bc domain continuous lattice 
corollary 
categories bc lat algebraic counterparts cartesian closed 
finite choice compact domains turn attention argument function space construction means general considerations chapter study open sets finite intersections 
step functions defined basic open sets form fact single generator crucial proof approximates approximates 
arbitrary open sets unions basic opens proposition general infinite union proof proposition longer 
time reached point exposition theory algebraic domains definitely simpler better understood continuous domains 
treat case 
bifinite domains step functions may algebraic case defined compact elements characteristic pre image equal line thought want algebraicity function space intersection generated finitely compact points note minimal upper bounds fd choose compact element new intersections samson abramsky achim jung come time different 
assume finitely iterations process stops 
easy exercise show function constructed way compact element 
hope provides sufficient motivation list definitions 
definition 
poset 
think basis algebraic domain 

say mub complete property upper bound finite subset minimal upper bound written formula fin mub 

subset mub closure mc smallest superset finite mc contains mub 

say finite mub property mub complete finite subset finite mub closure 
addition element call plotkin order 
algebraic domain basis compact elements plotkin order called bifinite domain 
full subcategory alg 
bifinite domains denote terminology formulate precisely finitely step functions combine determine compact element function space abramsky 
definition 
bifinite domain pointed algebraic 
finite subset theta called joinable mub function associate joinable family 
fe fg lemma 
bifinite domain pointed algebraic joinable subset theta gives rise compact element gamma 

joinable families corresponding functions related expected result dual proposition proposition 
bifinite domain pointed algebraic gamma 
algebraic 
compact elements gamma 
arise joinable families 
note strictly weaker proposition immediately get cartesian closed 
find alternative descriptions 
fact get algebraic function space making special assumptions argument domain target domain noted restricted form markowsky 
concept finite mub closure best explained illustrating go wrong 
classical examples algebraic domains bifinite basis mub complete second infinite mub set compact elements third mub sets finite occurs infinite mub closure 
positive note clear finite pointed poset plotkin order bifinite 
trivial example contains key true understanding prove bifinite domains precisely bilimits finite pointed posets 
proposition 
algebraic domain mub complete basis set compact elements 
kernel operator pa keeps fixed 
pa fc mc xg 
proof 
note pa defined supremum directed set 
follows mub completeness 
continuity follows corollary 
hand clear kernel operator fixes fix element mub closure mc pa clearly monotone function desired property 
bifinite domain finite sets compact elements finite mub closures 
preceding proposition implies kernel operators domain finite domain theory gamma gamma gamma gamma gamma gamma gamma gamma omega omega omega omega ae ae ae ae ae gamma gamma gamma phi phi phi phi phi phi phi phi phi phi fig 

typical non bifinite domains 
image 
fact get directed family order kernel operators completely determined images proposition 
sake brevity call kernel operator finite image idempotent deflation 
theorem 
pointed dcpo equivalent 
bifinite domain 

exists directed collection idempotent supremum equals id 
set idempotent directed yields id join 
proof 
said algebraicity follows existence idempotent 
observe inclusion image kernel operator lower adjoint preserves compactness 
implication fact idempotent case compact elements function space 
little step promised categorical characterization 
theorem 
dcpo bifinite bilimit expanding system finite pointed posets 
proof 
bifinite family idempotent generating identity 
construct expanding system objects images connecting embeddings inclusion images 
associated upper adjoint restricted im 
bilimit system lemma 
conversely hd bilimit finite posets clearly compositions ffi upper adjoint satisfy requirements theorem 
characterizations original may called internal description functional description theorem categorical theorem 
functional characterization handy proofs 
mention bifinite domains defined gordon plotkin plotkin expanding sequences 
taxonomy precisely countably bifinite domains 
acronym sfp continues quite popular 
theorem 
category bifinite domains closed cartesian product function space coalesced sum bilimits 
particular cartesian closed 
proof 
function space bilimit non trivial 
leave exercise 
function space bifinite families idempotent directed family idempotent gamma 
maps ij 
ffi ffi hi ji theta fs domains look continuous domains 
reasoning structure order ensure gamma 
continuous pretty algebraic domains 
samson abramsky achim jung point introduced mub closure finite set compact elements postulate existence finite finitely supported partitioning clearly increase logical complexity definition doubtful practical 
satisfactory generalise functional characterization 
definition 
dcpo scott continuous function 
say finitely separated identity exists finite set speak strong separation elements pointed dcpo called fs domain directed collection continuous functions finitely separated id identity map supremum 
relatively easy see fs domains continuous 
sense speak fs full subcategory cont objects fs domains 
exact parallels properties bifinite domains proofs trickier 
proposition 
fs domain pointed continuous gamma 
continuous 
theorem 
category fs closed formation products function spaces coalesced sums bilimits 
cartesian closed 
categorical characterization description fs domains retracts bifinite domains 
say 
proposition 

bifinite domain fs domain 

retract fs domain fs domain 

algebraic fs domain bifinite 
fully expose ignorance conclude subsection example structured fs domain know retract bifinite domain 
example 
disc collection closed discs plane plus plane ordered reversed inclusion 
checks filtered intersection discs disc disc pointed dcpo 
disc approximates disc neighborhood proves disc continuous 
ffl define map ffl disc follows 
discs inside open disc radius ffl mapped closed ffl neighborhood discs mapped plane bottom element disc 
closed discs contained compact set form compact space hausdorff subspace topology functions finitely separated identity map 
proves disc countably fs domain 
coherence opportunity continue exposition topological side domain theory began section 
need second tool complementing lattice oe scott open sets compact saturated sets 
compact understood classical topological sense word set topological space compact covering open sets contains finite 
saturated sets intersections neighborhoods 
dcpo equipped scott topology precisely upper sets easily seen opens form theorem 
continuous domain 
sets open neighborhoods compact saturated sets precisely scott open filters oe proposition special case hofmann mislove theorem 
denote set compact saturated sets dcpo ordered reverse inclusion refer families directed respect reverse inclusion concretely filtered families 
re formulation corollary 
proposition 
continuous domain 

dcpo 
directed suprema intersection 

intersection filtered family compact saturated sets contained scott open set element belongs 
domain theory 
dcpo 
proposition 
continuous domain 

continuous domain 

holds scott open set 
holds oe compact saturated set proof 
claims shown easily upper sets generated finitely points open neighborhood compact saturated set exists finite set points interesting point fs domains space compact saturated sets continuous lattice 
directed suprema form filtered intersections continuity boils property intersection compact saturated sets compact 
call domains true coherent domains 
intimate connection oe surprise read coherence lattice open sets 
proposition 
continuous domain coherent oe 
gave example showing condition true arbitrary continuous lattices 
result specializes algebraic domains follows proposition 
algebraic domain coherent mub complete finite sets finite sets minimal upper bounds 
proposition named sfp theorem plotkin coherence rules precisely non examples plotkin orders third 
topological characterization bifinite domains moment continuous function space see lemma 
observe algebraic coherent domains oe common sublattice compact open sets 
precisely sets form compact elements 
lattice generates oe form arbitrary suprema 
pleasant coincidence features prominently chapter 
theorem 
fs domains bifinite domains coherent 
reformulate idea coherence way 
definition 
lawson topology dcpo smallest topology containing sets sets form denoted proposition 
continuous domain 

lawson topology hausdorff 
lawson open set form scott open scott compact saturated 

lawson topology compact coherent 

scott continuous retract lawson compact continuous domain lawson compact continuous 
see fs domains bifinite domains carry natural compact hausdorff topology 
chapter 
hierarchy categories domains purpose section show ways constructing cartesian closed full subcategory cont alg exhibited previous sections 
idea result hold originated gordon plotkin plotkin 
particular class alg 
verified mike smyth smyth classes achim jung jung jung jung 
classification results depend axiom choice 
samson abramsky achim jung domains element start right away crucial bifurcation lemma section 
lemma 
continuous domains pointed gamma 
continuous 
coherent domain 
proof 
contradiction 
assume coherent domain 
proposition exist open sets hold directed collection open sets covering covers shall need interpolating sets assumption domain transformed special cases 
contains algebraic domain descending chain may generally ordinal retract 
left proof exercise 
note retract gamma 
retract gamma 
continuous prove cases gamma 
continuous 
case consider step functions 
clearly approximate defined 
approximating sets directed ought find upper bound impossible upper bound ff directed collection defined 
contain non empty piece strictly supremum equals contradiction 
case choose open sets previous case 
various functions giving contradiction defined 

remaining problem coherence imply fs domain algebraic case bifinite 
taken care passing higher order function spaces lemma 
continuous domain bottom element 
fs domain gamma 
coherent 
proof may jung 
combining preceding lemmas lemmas get promised classification result 
theorem 
cartesian closed full subcategory cont 
contained fs adding proposition get analogue algebraic domains theorem 
cartesian closed full subcategory alg 
contained domain theory forming function space domain may general increase cardinality basis exercise 
restrict cardinality case ruled theorem 
cartesian closed full subcategory cont 
alg 
contained fs 
domains element classification pointed domains just seen governed dichotomy coherent lattice structures 
expressed element level algebraic domains necessary information distinction finite mub closures locally unique suprema finite sets 
turns passing domains necessarily bottom elements implies study mub closure empty set 
get dichotomy 
coherence case means largest element oe compact element 
just compactness topological space 
property lattice boils requirement element unique minimal element really disjoint union pointed components 
lemma 
continuous domains gamma 
continuous 
compact disjoint union pointed domains 
proof cut version lemma 
surprising fact choice independently choice coherent domains domains 
state classification independence involve theta cases refine notion compactness just coherence full condition necessary cartesian closure 
definition 
dcpo finite amalgam union finitely pointed dcpo dn intersection union 
compare definition mub complete 
categories objects finite objects category notation 
similarly write objects disjoint unions objects proposition 
mub complete dcpo finite amalgam mub closure empty set finite 
lemma 
gamma 
compact continuous finite amalgam 
theorem 

maximal cartesian closed full subcategories cont fs fs 

maximal cartesian closed full subcategories alg point answer question may occurred diligent reader time ago defined bifinite domains terms pointed finite posets clearly needed bottom element characterizations 
answer wanted emphasize uniform way passing pointed general domains 
fact objects represented bilimits finite posets just pleasant coincidence 
exercises 

jung show dcpo continuous function space gamma 
continuous 

bounded complete domain 
show scott continuous function theta 
characterize lattice pointed domains forbidden substructures continuous mub complete domain retract 
mub complete domain domain retract 
domain bounded complete domain retract 
bounded complete domain lattice domain retract 
find poset pairs finite mub closures triple points exists samson abramsky achim jung infinite mub closure 

show algebraic domain basis mub complete necessarily mub complete 

show bifinite domain finite sets non compact elements may infinitely minimal upper bounds finite may infinite mub closures 

show subset domain mub mub closed 

prove bilimits bifinite domains bifinite 

prove statements retracts bifinite domains 
pointed dcpo retract bifinite domain directed family functions finite image id 
may want countably domains 
ideal completion retract bifinite domain need bifinite 
countably retract bifinite domain image projection bifinite domain 
countability open problem 
category retracts bifinite domains cartesian closed closed bilimits 

prove fs domains infima downward directed sets 
consequence fs domain binary infima bc domain 

show continuous domain lawson closed upper sets precisely scott compact saturated sets 

characterize lawson continuous maps bifinite domains 

seen bifinite domain bilimit finite posets 
thought subset product finite posets 
prove lawson topology bifinite domain restriction product topology finite poset equipped discrete topology 

prove coherent domain fs domain 

characterize domains domains fs domains 

characterize scott topology lawson topology domains fs domains ideal functions approximating identity 

jung domain gamma 
countably 
show fs domain 
recursive domain equations study recursive domain equations easily motivated mathematical structure theories 
shall allow deviate general philosophy spend time examples 
motivation examples represent different disjoint areas recursive domain equations arise serve particular role particular aspects solutions prominent 
astonishing fact domain theory aspects dealt unified satisfactory manner 
richness theory recursive domain equations beautiful may appear quite confusing encounter 
general guideline offer recursive domain equations domain theory solving comprise technique worth learning 
order understand meaning particular recursive domain equation know context came 
examples genuine equations prime example gamma 

solving equation cartesian closed category gives model untyped calculus scott barendregt know type distinction functions arguments 
setting interpretation terms values solves equation need isomorphisms oe gamma 
gamma 
explicitly 
conclude case genuine equation looking object object plus isomorphism 
hint shall need treat recursive domain equations categorical setting 
function space operator contravariant covariant second argument definitely obstacle domain theory overcome 
second problem example illustrates may solutions choose 
recognize canonical 
topic section 
classical example genuine equations rare 
come semantics confronted ability computers treat information program text data 
recursive definitions semantics need recursive definitions reasons need recursive function calls know body definition resp 
function needs repeated 
give example take definition space called resumptions gamma 
phi theta read follows resumption map assigns state final state intermediary state resumption representing remaining computation 
recursive definition shorthand infinite regular expression 
likewise loop replaced infinite repetition body 
analogy suggests way give meaning recursive definition seek limit repeated unwinding body definition starting trivial domain 
doubt accordance intuition shall solve equations general 
need able turn right hand side specification functor 
data types data types algebras sets operations 
study notion known algebraic specification ehrig mahr initial algebra semantics goguen 
choose formulation fits nicely general framework 
definition 
functor category algebra object map homomorphism algebras map diagram commutes example functor set assigns theta algebras precisely algebras nullary binary operation sense universal algebra 
lehmann smyth lehmann smyth discuss examples 
data types programming languages deal furthermore totally free algebras term algebras generators 
distinguished fact precisely homomorphism algebra signature 
categorical language express initiality 
term algebras alias initial algebras connected topic chapter observation lemma 
initial algebra isomorphism 
proof 
consider composition homomorphisms unique homomorphism guaranteed initiality 
initiality ffi id quadrangle get ffi ffi id id inverses 
samson abramsky achim jung order find initial algebra need solve equation 
get solution check initiality validate isomorphism right structure map 
category theory dualize definitions 
case get final algebras 
luckily concept equally meaningful 
map describes way new objects type constructed old ones map stands opposite process decomposition object constituents 
naturally want operations inverses 
words initial algebra require gamma final algebra 
peter freyd freyd reasoning basis axiomatic treatment domain theory 
axiomatizing known results treats contravariant mixed variant functors offers universal property encompassing initiality finality 
allow judge solution general recursive domain equations respect canonicity 
construction solutions suppose recursive domain equation right hand side defines functor suitable category domains 
suggested example section want repeat trick gave fixpoints scott continuous functions take bi limit sequence 
remember bilimits defined terms pairs 
necessary temporarily switch different category 
convention adopt chapter stand category pointed domains closed bilimits 
cartesian closed categories pointed domains mentioned chapter qualify 
denote corresponding subcategory morphisms embeddings results hold strict functions 
recall notation gamma 

categories 
despite unhappy unavoidable proliferation categories recall central limit colimit theorem corollary state close connection colimits expanding sequences colimits furthermore embeddings defining sequence replaced upper adjoints colimit coincides corresponding limit 
bear fruit analyze solutions get various angles suggested examples subsection 
start just assuming functor restricts continuous functors definition 
functor called continuous expanding sequence dn mn dn dm colimit hd hf colimit sequence dn mn dn dm obviously scott continuity expressed functors 
formulate terms expanding sequences expanding systems immaterial 
question allowed enter model check apply theorems chapter 
sequences needed 
central lemma domain theoretic technique solving recursive domain equations recall notation upper adjoint lemma 
continuous functor category domains 
embedding consider colimit hd expanding sequence gamma 
gamma 
gamma 
delta delta delta isomorphic maps fold ffi unfold ffi satisfy equations unfold ffi ffi fold proof 
know hd nnf colimit diagram domain theory gamma 
gamma 
delta delta delta clipping difference cocone hf colimiting continuity situation theorem provides unique mediating morphisms precisely stated fold unfold 
inverses cocones colimiting 
equations follow explicit description mediating morphisms theorem 
note restricted attention pointed domains initial embedding 

solution embedding call canonical denote fix 
local continuity continuity functor hard condition verify 
luckily property stronger easier check 
prove useful section 
definition 
functor categories domains called locally continuous maps hom gamma 
hom 
continuous objects proposition 
locally continuous functor restricts continuous functor soon generalize need proof point 
typically recursive domain equations built basic constructions listed section 
strategy check local continuity individually rely fact composition continuous functors yields continuous functor 
realize function space construction contravariant covariant second variable technique preceding paragraph immediately apply 
luckily strengthened cover case 
definition 
functor op theta contravariant covariant second variable called locally continuous directed sets hom hom objects objects hom 
proposition 
op theta mixed variant locally continuous functor defines continuous covariant functor theta follows objects embeddings 
upper adjoint 
proof 
pairs respectively 
calculate ffi ffi ffi ffi id id id ffi ffi ffi ffi id id id maps pairs embeddings embeddings 
continuity dn mn mn expanding sequences colimits hd hd respectively 
lemma implies ffi id ffi id local continuity ffi ffi ffi ffi ffi ffi id id id colimit dn mn mn may harmless restrict covariant functor embeddings order solve recursive domain equation clear philosophical justification step mixed variant functors question pressing explicitly change functor 
mentioned satisfactory answer freyd pitts 
peter freyd solution section 
samson abramsky achim jung take stock achieved far 
building blocks recursive domain equations constructors section theta phi readily seen define locally continuous functor 
translating embeddings preceding proposition get continuous functors variables 
need diagonal delta theta deal multiple occurrences body equation 
note colimits finite power calculated coordinatewise diagonal tupling continuous functors continuous 
include constant functors allow constants occur equation 
operators added bilimit section various powerdomain constructions chapter 
parameterized equations suppose locally continuous functor variables 
domain solve equation techniques preceding sections 
remember default mean solution lemma 
ambiguity 
concrete representation bilimits theorem fix delta defined respect 
want show extends functor 
notation bit problem 

theta 

functor variables 
set fd functor 
maps objects gamma 
id morphisms 
similarly fd embeddings canonical fixpoint fd resp 
fd denote unique strict function respectively 
proposition 

theta 

locally continuous functor 
defines locally continuous functor 

objects 
fix fd morphisms 
ffi fn ffi sequence defined recursively id fn fn 
proof 
objects 
gamma 
strict function 
solution bilimit fix fd gamma gamma gamma gamma gamma fd fd delta delta delta similarly corresponding objects expanding sequences connected fn gamma 

commute embeddings expanding sequences ffi ffi id ffi ffi strict map 
higher indices follow induction ffi fn id ffi fn ffi fn ffi ffi id fn ffi second cocone sequence defining fix fd fact colimits 
colimits 
get unique mediating morphism fix fd fix fd 
theorem postulated representation 
functoriality comes free uniqueness mediating morphisms 
remains check local continuity 
directed set maps easily get fn domain theory induction local continuity supremum brought front continuity composition general associativity 
note proof works just mixed variant functors 
application suppose system simultaneous equations xn 
xn fn xn solve viewing xn parameters equation substituting result second equation 
direct pass theorem results chapter remain true solve equations simultaneously tupling fact methods yield isomorphic results known bekic rule bekic 
canonicity seen section chapter recursive domain equations arise various contexts 
having demonstrated technique solving check solutions match particular requirements applications 
invariance minimality technique internalizing expanding sequence 
delta delta delta canonical solution 
allow proofs fix explicit defining expanding sequence 
lemma 
locally continuous functor category domains isomorphism 
exists homomorphism algebra equals fixpoint functional oe gamma 
defined oe ffi ffi gamma homomorphisms compose isomorphism ffi hb proof 
functional oe oe clearly continuous locally continuous composition continuous operation 
globally assumed elements function space gamma 
contains element 
fixpoint oe calculated supremum chain oe delta delta delta exists 
show induction homomorphism obvious 
induction step assume calculate oe ffi ffi gamma ffi ffi gamma follows fix oe holds 
hand fixpoint oe homomorphism ffi oe ffi ffi ffi gamma ffi ffi 
claim composition homomorphisms shown induction 
somewhat elegant invariance fixpoints lemma 
consider diagram gamma 
gamma 
gamma 
oe gamma 
oe strict operation assigns ffi hb gamma 

diagram commutes ffi oe ffi ffi gamma ffi hb ffi ffi hb ffi gamma hb homomorphism oe 
lemma gives desired equality fix oe fix oe fix oe ffi hb ffi hb specializing second algebra lemma deduce fixpoint locally continuous functor exists endomorphism identity samson abramsky achim jung endomorphism endomorphism identity idempotent kernel operator particular strict 
frequently 
theorem 
invariance part locally continuous functor category domains isomorphism 
equivalent 
isomorphic canonical fixpoint fix 
id endomorphism 
id fix oe oe gamma 
gamma 
defined oe ffi ffi gamma 
id strict endomorphism proof 
endomorphism fix calculated fixpoint oe 

usual notation embeddings get induction ffie oe oe oe gamma oe gamma ffie gamma gamma ffif gamma ffi equality follows fold unfold mediating morphisms 
lemma entails supremum oe identity 
equivalence reformulation lemma 
suppose gamma 
defines endomorphism algebra apply invariance property fixpoints lemma diagram oe stands oe gamma 
gamma 
gamma 
oe gamma 
oe maps gamma 
ffi strict operation assumed strict 
diagram commutes ffi oe ffi ffi gamma ffi ffi ffi gamma ffi ffi ffi gamma oe 
lemma id fix oe fix oe ffi id 
preceding lemma homomorphisms fix 
compose endomorphisms resp 
fix know strict 
equal identity just shown fix assumed third proof assume id strict endomorphism get embedding projection pair fix theorem 
minimality part canonical fixpoint locally continuous functor sub domain fixpoint 
shown canonical solution fixpoint relevant sense 
clearly canonicity result respect class examples 
pedagogical reasons restricted attention covariant case see section characterization true functors mixed variance 
initiality finality little refinement proofs preceding subsection get desired result canonical fixpoint fold initial algebra 
adjustments pass completely strict functions lemma guarantee existence strict homomorphisms prove unicity 
theorem 
initiality 

locally continuous functor category domains strict functions 
fold initial algebra canonical solution 
proof 
gamma 
strict algebra 
awe get lemma strict see inspecting definition 
shown proof theorem 
relevant diagram application lemma domain theory gamma 
gamma 
gamma 
oe gamma 
oe dualizing lemma proof theorem get final algebra theorem 
slightly stronger initiality holds algebras strict ones 
theorem 
finality locally continuous functor canonical fixpoint fix 
unfold final algebra 
mixed variance tackle case equation variable occurs positively negatively body example gamma 

assume separating negative occurrences positive ones functor variables contravariant covariant second 
reader remember solving equation required somewhat magical passage adjoints coordinate 
see far extend results previous subsections case 
note mixed variant functor concept algebra algebra longer meaningful homomorphisms 
idea pass pairs mappings 
lemma replaced lemma 
op theta mixed variant locally continuous functor isomorphisms 
exists pair functions commute 
composition pairs gives 
proof 
define scott continuous function oe gamma 
theta gamma 
oe ffi ffi gamma ffi ffi gamma fixpoint 
commutativity diagrams shown proof lemma 
equating lemma get satisfies ffif 
identity 
call endofunctions mixed endomorphisms 
theorem 
invariance part op theta mixed variant locally continuous functor isomorphism 
equivalent 
isomorphic canonical fixpoint fix 
id mixed endomorphism 
id fix oe oe gamma 
gamma 
defined oe ffi ffi gamma 
id strict mixed endomorphism proof 
proof course similar theorem spell parts mixed variance shows 
recall section expanding sequence defining fix looks delta delta delta colimiting maps form cocone local continuity colimiting 
equations lemma read unfold ffi samson abramsky achim jung ffi fold 
show th approximation mixed endomorphism equals ffi get ffi induction step oe oe oe oe ffi fold ffi ffi ffi ffi unfold fold ffi ffi ffi unfold ffi note contravariance argument shuffles just right way 
diagram lemma applied gamma 
gamma 
maps ffi ffi rest safely left reader 
theorem 
minimality part canonical fixpoint mixed variant locally continuous functor sub domain fixpoint 
experience mixed variance pretty clear deal initiality finality 
trick pass pairs strict functions 
theorem 
free mixed variant algebra 
op theta 

mixed variant locally continuous functor canonical solution 
pair strict continuous functions gamma 
gamma 
unique strict functions gamma 
gamma 
unfold fold commute 
mention passage covariant mixed variant functors carried concretely done categorical level demonstrated peter freyd freyd 
feature domain theory freyd uses sole axiom existence coincidence initial algebras final algebras endofunctors interpreted suitable enriched sense case locally continuous endofunctors 
freyd results striking contribution date axiomatic domain theory see 
analysis solutions worked hard section order show domain theoretic solutions canonical various respects 
reassuring advantage canonical solutions establish proof rules showing properties 
topic section 
structural induction terms technique analogy universal algebra 
control arbitrary algebras certain signature feel quite comfortable initial term algebra 
element described term identifications 
property carries setting quite easily 
finitary constructions section introduced notation basis elements constructed domain wit tuples hd ei variants element constant step functions 
canonical solutions built bilimits starting basis element bilimit shows finite iteration theorem denoted finite expressions 
proof structural induction length terms 
unicity hard achieve fault function space 
define domain theory normal forms prove conversion rules 
treatment lines abramsky chapter 
admissible relations domain theoretic formulation structural induction certain relations 
subject expanded re organized elegant way andrew pitts pitts 
follow treatment closely seek generality 
start admissible relations met shortly chapter 
definition 
relation pointed domain called admissible contains constantly bottom tuple closed suprema chains 
write set admissible ary relations ordered inclusion 
unary relations kind called admissible predicates 
tailored applications fixpoint theorem preferred slightly inclusive concept chain directed sets 
strict continuous function gamma 
apply relations pointwise usual way rel fhf xn hx xn rg proposition 
dcpo admissible ary relations set ff rel sg admissible predicate gamma 

need say admissible relations may transformed locally continuous functors 
matter definition equally useful possibilities 
definition 

op theta 

mixed variant locally continuous functor category domains strict functions 
admissible action ary relations function rel assigns pair hd ei map rel hd ei theta 
maps compatible strict morphisms 
follows gamma 
gamma 
rel rel rel rel hd rel hd admittedly bit heavy terms notation 
concrete examples simply case behaviour rel hd ei simple way related result applying functor viewed dcpo specializing identity mappings definition get proposition 
maps rel hd ei antitone monotone second variable 
theorem 

category domains mixed variant locally continuous functor 
op theta 

admissible action relations 
abbreviate fix admissible relations unfold rel rel fold rel rel holds 
proof 
know invariance theorem identity fixpoint oe oe fold ffi ffi unfold 
ff gamma 
rel sg know admissible predicate 
want identity belongs suffices show oe maps 
suppose oe rel fold rel ffi rel ffi unfold rel definition fold rel ffi rel rel assumption fold rel rel assumption oe belongs samson abramsky achim jung order understand power theorem study particular actions subsections 
taken pitts 
induction admissible relations definition 
mixed variant functor 
call admissible action ary relations logical objects rel hd ei specializing theorem removing assumption unfold rel rel choice satisfied logical action get theorem 
induction 
category domains 
op theta 

mixed variant locally continuous functor logical action admissible predicates 
canonical fixpoint admissible predicate rel implies fold equal reader take time recognize principle structural induction term algebras 
exhibit particular logical action admissible predicates functors built constructors section 
admissible predicates pointed domains set 
theta fhx yi theta sg gamma 
ff gamma 
sg phi inl inr phi analogously omega delta gamma 
delta 
quite accordance notational convention 
example correct expression gamma 
delta gamma 
delta rel hd ei 
definition action function space operator clear chose adjective logical 
get complicated functors composing basic constructors 
actions compose straightforward way mixed variant functors category domains define mixed variant composition setting objects similarly morphisms 
admissible actions define action setting rel rel rel rel 
easy exercise show action logical constituents 
induction admissible relations subsection canonical relation domains order relation 
require dominant put covariant position 
definition 
mixed variant functor 
call admissible action binary relations extensional objects rel hd ei theorem 
induction 
category domains 
op theta 

mixed variant locally continuous functor extensional action binary relations 
canonical fixpoint admissible relation hx yi unfold rel vd contained vd call admissible binary relation simulation satisfies hypothesis theorem formulate quite concisely corollary 
elements canonical fixpoint mixed variant locally continuous functor order relation related simulation 
show extensional actions exist 
proceed subsection give extensional actions primitive constructors rely fact compose 
admissible binary relations resp 
set 
fhx yi hx yi rg theta yi hx ii theta hx hy sg domain theory gamma 
fhf gi gamma 
hf sg phi fhx yi phi inl inl hx inr inr hx similarly omega delta gamma 
delta 
call family actions extensional definition case function space extensional order functions 
exercises 

find recursive domain equations characterize versions natural numbers 
ern find example demonstrates ideal completion functor locally continuous 
characterize solutions idl 

davies prove point poset satisfies gamma 


verify bekic rule dcpo case 
pointed dcpo theta theta continuous functions 
solve equations directly simultaneous fixpoint fix hf gi 
solve variable time defining fix setting fix verify holds fixpoint induction 

find example shows initiality theorem may fail non strict algebras 

theorem hold arbitrary non strict algebras 

initial algebra final algebra functor 
category sets 
show isomorphic algebras 

plotkin functor maps gamma 
canonical fixpoint 
gives rise model lazy lambda calculus see barendregt abramsky abramsky ong 
prove denotation combinator model fixpoint function fix 
proceed follows define multiplication delta unfold 
interpretation yf delta fold 
delta 
check fixpoint follows fix holds 
define subset gamma 
fe id 
delta fix theorem show id fix valid 

action relations functor variables contravariant covariant define action functor 
fix delta delta 
prove resulting action logical extensional original action logical extensional 
equational theories chapter saw build initial algebras domains 
natural question ask accommodate equations construct free algebras respect equational theories 
universal algebra done factoring initial term algebra respect congruence generated defining equations see proceed similar fashion domains 
bases play prominent role approach 
technique previous chapter generate desired algebra iterative process longer applicable 
formal proof statement may ad amek section iii result quite intuitive recall algebra ff encodes samson abramsky achim jung algebraic structure giving information basic operations sum input domains basic operation 
call equation flat equated terms contains precisely operation symbol 
example commutativity binary operation expressed flat equation associativity 
flat equations incorporated concept algebras including input operations agree 
non flat equations trick available 
need just basic operations description term operations case free algebra object wanted construct 
algebras appropriate categorical concept model equational theories 
correct formalization monads eilenberg moore algebras 
show existence free algebras dcpo continuous domains section chapter 
adjoint functor theorem see poign example construct basis free algebra quotient term algebra 
equational theories come semantics non deterministic languages studied 
typically contain commutative associative idempotent binary operation standing union possible branches program may take 
associated algebras known name powerdomains subject detailed studies 
shall theory second section 
general techniques free dcpo algebras recall basic concepts universal algebra fix notation chapter 
signature sigma omega ffi consists set omega operation symbols map ff omega assigning operation symbol finite arity 
sigma algebra ha ii carrier set interpretation operation symbols sense omega gamma map ff write fa interpreted operation symbol speak operation homomorphism sigma algebras map commutes operations omega fa ff fb ff denote term algebra set respect signature sigma sigma 
universal property map ha ii sigma algebra extended uniquely homomorphism sigma fixed countable set elements refer variables 
pairs elements sigma encode equations 
equation said hold algebra ha ii map 
pair called instance equation class sigma algebras equation set sigma theta sigma holds denoted set sigma 
interested dcpo algebras characterized property carrier set equipped order relation dcpo operation 
naturally require homomorphisms scott continuous 
order incorporate inequalities 
pair sigma theta sigma stand inequality notation dcpo sigma class dcpo algebras signature sigma satisfy inequalities proposition 
signature sigma set inequalities class dcpo sigma scott continuous homomorphisms forms complete category 
proof 
checked difficulties dcpo sigma closed products equalizers defined ordinary case 
proves ingredient adjoint functor theorem complete category dcpo sigma forgetful functor dcpo sigma dcpo preserves limits 
ingredient called solution set condition 
setup says dcpo generate set non isomorphic dcpo algebras 
case dcpo continuous map carrier set dcpo algebra construct generated stages 
ordinary subalgebra generated 
cardinality bounded expression depending cardinality omega gamma add suprema directed subsets get sub dcpo dcpo required operations scott continuous remains subalgebra 
domain theory crucial step argument cardinality bounded jsj asked show exercise 
sigma cardinality bound depending jdj room set different dcpo algebras 
shown theorem 
signature sigma set inequalities forgetful functor dcpo sigma dcpo left adjoint 
equivalently dcpo free dcpo algebra respect sigma exists 
technique subsection quite robust nelson proving existence free algebras general notions convergence 
direction interested shall turn continuous domains 
free continuous domain algebras categories approximated dcpo domains met far complete 
infinite products equalizers may fail exist 
rely adjoint functor theorem 
result technical proof clear advantage gain explicit information basis constructed free algebra may help find alternative descriptions 
case dcpo concrete representations quite complicated see nelson ad amek 
denote category dcpo algebras carriers form continuous domain cont sigma speak continuous domain algebras 
obvious forgetful functor cont sigma cont 
keep notation manageable shall try suppress mention particular write objects distinction morphisms 
write condition adjointness base proof cont ext ext cont sigma words suppose signature sigma set inequalities fixed 
continuous domain construct dcpo algebra carrier set continuous domain scott continuous function satisfies inequalities domain algebra scott continuous map unique scott continuous homomorphism ext ext ffi 
may instructive compare definition idea solving problem explicitly bases cf 
section 
assume fixed basis hb continuous domain construct basis hfb oei desired free domain algebra 
underlying set fb set sigma terms fb natural order relations 
denote induced defining set inequalities 
give precise definition form deduction scheme axioms fb 
instance inequality rules omega ary function symbol 
relation substitutive preorder terminology stoughton 
obvious generalization concept congruence relation preordered case hfb free preordered algebra associated equivalence relation denote 
factor set fb ordered free ordered algebra samson abramsky achim jung turn second relation fb arises order approximation set oe structure corresponding constants related 
formally oe deduction scheme axioms oe rules omega ary function symbol oe oe oe 
observation oe satisfies interpolation axiom proposition 
hfb oe basis 
proof 
oe relates terms structure quite obvious transitive relation 
interpolation axiom assume oe holds elements finite set fb 
occurrence constant set constants occur location terms finite holds definition oe find interpolating elements term constants replaced corresponding interpolating element 
term interpolates relation oe question combine oe guideline take proposition 
inequalities tell approximates case approximates define oe order approximation fb transitive closure ffi oe ffi somewhat technical properties instrumental free algebra theorem proposition 
oe ffi contained oe ffi ffi oe 
ffi oe ffi ffi oe ffi proof 
assume oe set constants appear derivation set constants appear place appears course may occur case empty 
occurs times contain element 
case finite holds 
interpolating element replace constant derivation corresponding constant get valid derivation formula 
catch instance inequality transformed instance inequality 
immediate construction oe oe holds 
reflexivity get ffi oe ffi ffi oe ffi ffi oe ffi oe ffi ffi ffi oe ffi general case follows induction 
lemma 
hfb oei basis 
proof 
transitivity built remains look interpolation axiom 
oe finite set definition oe get sequence terms oe gamma oe steps may replaced gamma oe oe shown preceding proposition 
collection finite find interpolating term proposition 
reflexivity oe oe take carrier set free algebra ideal completion hfb oei proposition know continuous domain 
techniques section help fill remaining pieces 
operations defined pointwise ideals omega ary function symbol ideal generated ff need know set directed 
follow operations fb monotone respect oe 
assume operation symbol omega pairs oe oe definition pair translates sequence domain theory oe oe proposition extend sequences length apply step step rules alternately oe oe proposition infer operations defined way scott continuous functions 
continuous domain algebra 
generating domain embeds extension monotone inclusion fb 
theorem 
free continuous domain algebra respect sigma proof 
show satisfies inequalities universal property 
inequalities map 
assigns variable ideal fb 
show subset 
just seen ideal generated terms form map fb variable 
suppose oe instance inequality term algebra fb sigma know oe holds 
term belongs operations defined pointwise 
desired 
universal property assume continuous map satisfies inequalities restriction set unique monotone extension preordered algebra hfb want show preserves oe axiom oe clear monotone hb rules homomorphism operations monotone says preserves order approximation oe fb extended homomorphism ext ideal completion 
uniqueness ext obvious 
show ext restricted equals proposition give extension best approximation 
prove arose restriction continuous map element represented ideal containing axioms second deductive system 
ext 
theorem 
signature sigma set inequalities forgetful functor cont sigma cont left adjoint equivalent restriction left adjoint theorem cont cont sigma respectively 
words free continuous domain algebras exist free respect 
action left adjoint functor morphisms obtained assigning continuous function homomorphism extends je ffi jd je want show locally continuous definition 
look passage maps extension 
proposition 
assignment 
ext map gamma 
gamma 

samson abramsky achim jung proof 
proposition sufficient show restriction basis directed collection monotone maps fb term constants occur 
calculate written term occurrence replaced restriction followed homomorphic extension followed extension ideal completion gives sequence continuous functions gamma 
gamma 
gamma 
gamma 
equals ext 
cartesian closed categories viewed categories hom functor internalized 
preceding proposition formulates similar closure property free construction free construction cut cartesian closed category associated monad natural transformations come internalized 
concept introduced anders kock kock kock 
interest name computational monads eugenio moggi moggi 
theorem 
signature sigma set inequalities composition ffi locally continuous functor cont 
proof 
action ffi morphisms combination composition je ext 
embedding describe action respectively ffi quite concretely 
basis element equivalence class term image equivalence class term get replacing constants image start algebraic domain choose basis set compact elements 
order approximation order relation inherited particular reflexive 
follows constructed order approximation oe fb reflexive ideal completion hfb oei algebraic domain 
gives theorem 
signature sigma set inequalities forgetful functor alg sigma alg left adjoint 
look maps generating domain free algebra study question injective 
say injectivity fails fails completely proposition 
equational theory canonical map dcpo free algebra order reflecting exists dcpo algebra theory carrier dcpo non trivially ordered 
proof 
assume exists dcpo algebra contains elements dcpo distinct elements 
define continuous map separating setting ae 
equals ext ffi ext unique homomorphism holds 
converse trivial monotone 
elements strict algebras come strict functions times 
worthwhile study problem free algebras context 
strict algebra 
possibilities require operations algebra domain theory 
operation applied arguments bottom returns bottom 

operation applied constantly bottom vector returns bottom 

operation arity greater applied constantly bottom vector returns bottom 
luckily leave open shall see shortly 
need definition 
strict dcpo algebra dcpo algebra carrier set contains element 
strict homomorphism strict algebras scott continuous homomorphism preserves element 
pointed dcpo existence free strict dcpo algebras established adjoint functor theorem 
pointed domains construction previous subsection adapted adding axiom deduction scheme fb 
theorem 
free strict dcpo domain algebras exist forgetful functors dcpo 
sigma gamma 
dcpo 
cont 
sigma gamma 
cont 
alg 
sigma gamma 
alg 
left adjoints 
return problem strict operations 
solution add nullary operation signature inequality changing free algebras 
axiom new inequality 
new operation interpreted bottom element 
advantage having bottom explicitly signature formulate equations strictness operations 
example possibility mentioned enforced adding inequality gamma ff operation symbols positive arity ff 
corresponding free algebras exist general theorem 
problematic situation dcpo 
respectively cont 
alg 
existence element generating dcpo imply existence element free algebra exercise 
local continuity domain equations 
furthermore free algebra element need case strict exercise 
phenomena appears restrict attention cartesian closed categories exhibited chapter 
reason require special structure objects category allow morphisms preserve structure 
interesting fact general construction particular algebraic theory restricted sub categories 
case general construction yield right objects may different construction needed 
tried plotkin powerdomain attempts karel satisfactory solution obtained cost changing morphisms continuous algebras see 
positive note say proposition 
free functor maps finite pointed posets finite pointed posets restricts bifinite domains 
powerdomains convex plotkin powerdomain definition 
convex plotkin defined signature binary operation equations 
commutativity 
associativity samson abramsky achim jung 
idempotence operation called formal union 
dcpo algebra respect theory called dcpo semilattice 
free dcpo semilattice dcpo called plotkin powerdomain denoted 
semilattice equipped order setting formal union join resulting ordered set 
dcpo semilattice order little domain ordering focus interest 
free semilattice set set non empty finite subsets formal union interpreted actual union sets 
gives half alternative description plotkin powerdomain continuous domain basis basis fb constructed term algebra partitioned equivalence classes equivalence relation derived defining equations 
equivalence classes correspondence finite subsets term fb re arrange associativity commutativity idempotence sure constant occurs just 
remember set order approximation oe fb transitive closure ffi oe ffi way ensured ideal fb contains full equivalence classes respect 
may replace fb set finite subsets associate term fb set constants appearing transfer order approximation new basis 
definition 
subsets set equipped relation egli milner relation written rem conditions satisfied talking finite subsets hb write em egli milner relation finite subsets establish connection em oe fb 
firstly oe definition constant matched constant approximates vice versa 
just conditions em 
em transitive find oe implies em general 
conversely finite subsets fa am fb ng related em build terms oe hold 
done follows 
element element set am proved theorem 
plotkin powerdomain continuous domain basis hb ideal completion hp em immediate consequence characterization plotkin powerdomain finite pointed poset finite pointed 
proposition plotkin powerdomain bifinite domain bifinite 
best result obtain 
plotkin power construction certainly destroys properties lattice see exercise 
hand completely haphazard sense finite poset sub domain powerdomain poset 
shown nu ler 
passage terms finite sets reduced size basis powerdomain drastically 
possible get representation 
algebraic domains 
continuous domains similar treatment possible intuitive 
remember bases algebraic domains preordered sets 
domain theory definition 
subset preordered set hb vi convex hull cx defined fa ng set coincides convex hull called convex properties easily checked proposition 
hb vi preordered set subsets 
cx 
cx 

cx cx cx 

cx cx 

em cx 

em cx cx 
hp vem preordered set parts preceding proposition suggests replace ordered set 
writing cx set finitely generated convex subsets proposition 
plotkin powerdomain algebraic domain isomorphic ideal completion hp cx vem explains alternative terminology convex powerdomain 
sharpen description 
examples plotkin powerdomain semantics refer hennessy plotkin abramsky 
sided powerdomains definition 
plotkin augmented inequality obtain hoare lower algebras theory called inflationary semilattices 
free inflationary semilattice dcpo called lower hoare powerdomain denoted 
similarly terminology concerning inequality upper smyth powerdomain semilattice 
consequence new inequality semilattice ordering domain ordering coincide case hoare 
smyth semilattice ordering reverse domain ordering 
forces powerdomains additional structure 
proposition 
hoare powerdomain dcpo lattice non empty suprema bounded infima 
sup operation formal union 

smyth powerdomain dcpo binary infima 
formal union 
unfortunately existence binary infima force domain cartesian closed categories chapter 
take question subsection 
study bases powerdomains derived basis hb continuous domain development proceeds lines plotkin 
equivalence relation induced equations new inequality changed may replace fb set finite subsets difference wholly associated preorder 
proposition 
finite subsets basis hb samson abramsky achim jung case hoare smyth 
restricted order approximation oe egli milner relation em prescribed general theory combine inclusion lower theory reversed inclusion upper theory respectively 
difficulties obtains connection oe oe sided theories characterized half egli milner ordering 
writing formulate theorem 
continuous domain basis hb 
hoare powerdomain isomorphic ideal completion hp 
smyth powerdomain isomorphic ideal completion hp algebraic domains replace preorders ordered set cases 
proposition 
subsets preordered set hb 



writing set finitely generated lower subsets set finitely generated upper subsets proposition 
algebraic domain 

hoare powerdomain isomorphic ideal completion hp 
smyth powerdomain isomorphic ideal completion hp 
description infer proposition smyth powerdomain bifinite domain bifinite 
semilattice binary infima anyway conclude smyth powerdomain bifinite domain bc domain 
general statement see corollary 
topological representation theorems objective subsection describe powerdomains seen far directly spaces certain subsets domain recourse bases ideal completion 
turn characterizations proposition proposition extended nicely allow topological methods 
theorem 
hoare powerdomain continuous domain isomorphic lattice non empty scott closed subsets formal union interpreted actual union 
proof 
hb basis establish isomorphism representation theorem 
ideal finite sets map oe cl scott closure union sets 
conversely non empty scott closed set set finite sets basis elements approximating element check ideal respect surely non empty assumed contain elements 
finite subsets apply interpolation axiom get finite subsets em em upper bound respect clear scott closure gives back element directed supremum basis elements 
oe ffi id starting domain theory ideal show get back oe 
roundness see discussion definition finite set elements contained oe belongs oe conversely element oe oe empty meet closed 
set fag element ordering 
monotonicity isomorphisms trivial representation proved 
formal union applied ideals returns ideal unions constituting sets 
isomorphism operation transformed union closed subsets 
theorem holds just continuous domains dcpo spaces 
see 
get full complete lattice closed sets add hoare nullary operation equations alternatively take strict free algebra respect hoare 
domain element adjustments necessary element hoare powerdomain homomorphisms preserve non empty suprema 
characterization smyth powerdomain builds material laid section 
particular recall scott compact saturated set continuous domain scott open filter open neighborhoods scott open filter oe arises way 
theorem 
smyth powerdomain continuous domain isomorphic set non empty scott compact saturated subsets ordered reversed inclusion 
formal union interpreted union 
proof 
hb basis show nf isomorphic idl 
ideal oe constitutes monotone map nf proposition 
direction assign compact saturated set set finite sets ideal 
open neighborhood find finite set basis elements contained compact proposition 
finite sets upper bound finite set clearly monotone equipped reversed inclusion 
show ffi oe identity 
ordering 
oe belongs ffi oe 
conversely neighborhood oe contains saw proposition 
oe contained finite set belongs composition oe ffi clearly identity just saw neighborhood compact set contains finitely generated saturated set intersection neighborhoods 
claim formal union follows powersets union intersection completely distribute oe oe oe 
theorem continuity indispensable 
characterization free semilattice arbitrary dcpo known 
interested reader may consult heckmann heckmann discussion open problem 
corollary 
smyth powerdomain coherent domain bottom bc domain 
proof 
compact saturated sets bounded simply means case empty 
compact saturated definition coherence 
turn plotkin powerdomain 
ideal finite sets ordered em generate ideals respect coarser orders associate scott closed set oe cl compact saturated set oe pair arises way plotkin powerdomain simply product sided powerdomains 
able characterize special cases countably samson abramsky achim jung domains coherent domains 
general situation quite hopeless illustrated exercise 
special cases want show faithfully represented intersection oe oe oe 
case need weakening egli milner ordering definition 
dcpo lens set non empty subsets arise intersection scott closed compact saturated subset 
elements lens call lenses 
lens define topological egli milner ordering tem cl proposition 
dcpo 

lens convex scott compact 

canonical representation lens cl 

topological egli milner ordering anti symmetric lens 
proof 
convexity clear lens intersection lower upper set 
open covering lens closed compact saturated may extended covering adding complement cover 
proves compactness 
sets upwards closed compactness set implies compactness convexity get cl boolean algebra calculate cl cl cl cl tem cl cl 
equality follows 
prove representation theorem need description lens oe 
lemma 
continuous domain basis ideal hp em oe directed ig 
proof 
elements set right clearly belong scott closure contained oe element conversely oe set scott open meet roundness get em set fag approximates contained furthermore em element oe holds theorem 
continuous domain 
plotkin powerdomain isomorphic formal union interpreted union followed topological convex closure 
proof 
hb countable basis defined map oe lens 
direction take function assigns lens set cl 
prove maps constitute pair isomorphisms need information reconstructing oe oe oe 

oe oe oe upper set contains oe inclusion doubt 
oe fm ig 
firstly set non empty secondly em calculating oe continuous domain oe gives non empty set contained lens oe 

oe cl oe inclusion needs argument 
show element oe belongs oe 
basis element approximating element oe know belongs set contains countability basis may assume extends cofinal chain proposition em em em konig lemma tells find chain elements supremum belongs oe 
oe monotone ideals hp em larger ideal results bigger lower set oe smaller upper set oe 
calculate corresponding lenses oe oe oe cl oe domain theory gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fig 

algebraic domain topological egli milner ordering ordinary egli milner ordering coincide 
oe oe oe oe oe tem oe desired 

monotonicity follows construction half topological egli milner ordering implies assume tem 
oe ffi id lens clearly oe continuity compactness infer oe equal basis element approximating element occurs set oe cl clear 
proposition implies oe ffi gives back 
ffi oe id ideal know covers lens oe sense oe 
contained oe 
contained cl oe 
conversely oe finite set basis elements contained oe hofmann mislove theorem 
hand element approximates oe belongs upper bound em shows belong 
representation theorems sided powerdomains shown formal union translates actual union 
combine convex setting oe oe oe oe oe oe oe cl oe cl oe oe oe cl oe oe oe oe 
note countability basis showing oe recovered oe 
general wrong 
exercise discusses example 
substitution topological closure downward closure necessary example shows 
set lens downward closure scott closed missing 
set fcg lens 
topological egli milner order plain egli milner order 
convex closure union lenses lens added 
better representation theorem obtained pass coherent domains section 
note example coherent set fc ag infinitely minimal upper bounds violating condition proposition 
observe lenses lawson closed sets 
domain coherent implies lawson compact 
compactness allow downward closure topological closure 
lemma 
lawson compact subset continuous domain 
proof 
element belong exists set lawson open contains compactness finitely sets cover upper bound associated basis elements approximating open neighborhood intersect closed 
corollary 
lenses coherent domain precisely convex lawson compact subsets 
topological egli milner ordering egli milner ordering coincide 
samson abramsky achim jung theorem 
coherent domain 
plotkin powerdomain isomorphic vem formal union interpreted union followed convex closure 
proof 
differences proof theorem taken care preceding corollary concern part 
show cl oe oe contains oe presence coherence done hofmann mislove theorem 
lower set oe continuous domain 
element oe look filtered collection upper sets ig 
non empty belongs compact saturated coherence 
non empty 
contained oe hyperspaces probabilistic powerdomains presentation powerdomains emphasized feature free algebras respect certain equational theories 
general existence theorem algebras derived concrete representations sets subsets 
approach realm domain theory suggested matthew hennessy gordon plotkin hennessy plotkin long tradition algebraic semantics see nivat reynolds 
viewpoint take 
may study certain sets subsets domains right 
topology study hyperspaces called long standing tradition starting felix hausdorff hausdorff leopold vietoris vietoris vietoris 
subject started semantics continues developed 
hyperspace interesting equational characterization restricted settings 
examples set domains introduced peter buneman buneman gunter heckmann heckmann heckmann connection general theory relational databases 
quite natural domain theoretic point view equational characterizations exist bizarre give insight 
hyperspace approach developed logical form section 
mention various attempts define probabilistic version powerdomain construction see main graham jones plotkin jones 
aside restricted algebraic domains wider concept continuous domain forced necessary unit interval 
equational description sense goes techniques chapter 
ask abstractly constitutes powerdomain construction build theory definition 
approach taken heckmann heckmann 
notable feature perspective known powerdomains turn canonical precise sense 
natural formulation canonicity connected concerns semantics unclear 
exercises 

proof theorem equip fb transitive closure oe ffi show relation oe satisfies interpolation axiom 
general oe different oe 
ideal completions hfb oei hfb oe isomorphic 
exercise 
advantage oe oe 
describe free domain algebra arbitrary domain arbitrary signature sigma case empty 

set algebraic theory dcpo algebras elements embeddings strict 

sigma ei usual equational theory groups boolean algebras 
show respect theory trivially ordered 
conclude free construction collapses connected component generating dcpo single point 

signatures sigma sigma sets inequalities call pair sigma ei reduct sigma sigma sigma case obvious forgetful functor sigma sigma categories considered chapter 
show general techniques theorem suffice prove functor left adjoint 
domain theory delta delta delta delta delta delta gamma gamma gamma ffl ffi fi fl ffl ffi fi fl ffl ffi fi fl ffl ffi fi fl fig 

part algebraic domain theorem fails 

likewise show partial domain algebras completed freely 

free domain algebra algebraic domain 
true operation applied compact elements returns compact element 


element lattice theta sets fh ai big fha hb ig elements plotkin powerdomain show bounds 
fh ig top element domain 

plotkin powerdomain closed category objects bilimits finite necessarily pointed posets 

define natural isomorphism 
gamma ffi gamma 
continuous domain complete lattice delta gamma ffi delta stands set functions preserve suprema ordered pointwise 

want construct algebraic domain theorem extended 
compact elements arranged finite sets form directed collection egli milner ordering generating ideal take finite set element finite powerset reals uncountable set ff em fi ff fi arrange ff layers cardinality ff 
ff contains white jffj 
black elements 
ff fi white element ff element fi order black elements look adjacent layers 
jfij subsets fi cardinality jfij gamma 
jfij 
black elements fi partition jfij classes cardinality jfij gamma 
black elements lower neighbor fi just equally black elements classes 
idea black elements upper bound 
shows tiny fraction resulting ordered set 
establish facts domain black element black white element white elements 
ideal contain black element set 
ii 
ideal contain black element layer 
iii 
ideal contain countably black elements 
ideal meeting sets contain white elements 
ii 
ideal contains black element contains black element iii 
ideal meeting sets contains contain upper bounds uncountably white elements layer 
upper bounds form uncountable set consist solely black elements 
contradiction iii iii conclude ideal meets sets ideal white elements 
oe contains precisely element say show equals fbg scott closed 
far containing elements 
go step farther prove lenses directed complete showing ideal started upper bound 

heckmann remove idempotence hoare study free domain algebras respect theory 
longer finite generating domain finite 
show free algebra element lattice bifinite domain 
samson abramsky achim jung domains logic ways idea function formalized 
algorithms computer science viewpoint 
second value tables learned words graphs 
invention mathematics 
third propositions take propositions function view function maps arguments satisfy oe values satisfy 
encoding case set pairs oe 
beauty subject lies interplay notions 
passage algorithms programs extensional description graphs called denotational semantics 
requires sophisticated structures precisely domains sense text example recursive definitions programs 
passage algorithms propositions functions called program logics 
take computer scientist point view primary denotational semantics program logics different ways describing behaviour programs 
purpose chapter lay connection forms semantics 
propositions allow formulae extensions domain consideration compact scott open sets 
choice justified argued propositions correspond properties detected finite amount time abramsky 
reader find lucid point smyth vickers 
mathematically study relation domains complete lattices scott open sets 
stated general topological spaces famous stone duality 
treat section 
restriction domains introduces extra features discuss fashion section 
actual domain logic syntactical theory laid section 
open set lattice big syntactically represented 
higher level employ ideas approximation bases 
wide range possibilities grouped heading information systems 
concentrate logic compact open subsets 
motivated general framework stone duality gives richest logic 
stone duality approximation distributivity start observations concerning distributivity 
far didn play role due poor order theoretic properties domains 
context open set lattices central theme shall see closely related concept approximation 
earliest account connection probably 
word notation shall try keep clear distinction spaces domains open set lattices 
shall emphasize relation speak lattices form special class domains may remember section 
recall lattice said distributive equality holds 
dual axiom satisfied 
infinitary version distributivity introduce notation choice functions family sets write fi gamma 
takes value complete distributivity expressed equation fi gamma implies order dual see exercise 
lot room variations shall meet section 
comes theorem 
complete lattice continuous domain theory fi gamma holds families directed subsets proof 
reader check supremum right hand side directed set 
element approximating left hand side equation 
choice function selects right hand side 
assuming continuous proves fi gamma 
reverse inequality holds complete lattice 
converse fix element family directed sets equality assume hold get fi gamma 
claim choice function fi gamma 
corresponding element approximating directed set look completely distributive lattices preceding theorem guaranteed continuous 
go express stronger distributivity approximation axiom 
definition 
complete lattice define relation call prime continuous fy xg holds 
note relation defined just way order approximation directed sets replaced arbitrary subsets 
fundamental results order approximation hold mutatis mutandis 
particular shall proposition lemma 
adapting previous theorem get george characterization complete distributivity 
theorem 
complete lattice prime continuous completely distributive 
turn attention approximation 
right concept definition 
complete lattice said generated subset holds 
dually speak generation 
study generation certain elements introduce somewhat greater generality needed purposes 
definition 
element lattice called irreducible finite set case say prime implies finite 
stating conditions arbitrary gives rise notions completely irreducible completely prime element 
dual notions obtained exchanging supremum infimum 
note irreducible prime elements equal top element lattice infimum empty set 
proposition 
prime element irreducible 
converse holds lattice distributive 
theorem 
continuous algebraic lattice generated set completely irreducible elements 
proof 
elements scott open filter contains closed scott topology generated open filters lemma 
employing axiom choice form zorn lemma find maximal element inductive set clearly irreducible 
algebraic lattice choose principal filter generated compact element 
maximal elements complement completely irreducible 
samson abramsky achim jung theorem 
complete lattice generated prime elements satisfies equations am fi gamma fi gamma sets finite 
dual statement holds lattices generated prime elements 
proof 
right hand side certainly left hand side assume prime element fi gamma 
surely fi gamma 
am prime claim set covers am assume contrary 
exists am am define choice function 
am contradicts construction know elements am am proof second equation similar simpler 
note equations derivable side condition finiteness 
equation equivalent stated choice functions 
form known frame distributivity law complete lattices satisfy called frames 
basic operations frame appear equation arbitrary join finite meet 
spaces lattices topology set consists certain subsets may think ordered set order relation set inclusion 
ordered set complete lattice arbitrary joins exist 
look continuous functions 
connection open set lattices right take inverse image operation continuous function required map opens opens 
set theoretically preserves unions intersections subsets joins finite meets opens 
motivates definition 
definition 
frame homomorphism complete lattices map preserves arbitrary suprema finite infima 
clat stand category complete lattices frame homomorphisms 
want relate top category topological spaces continuous functions 
half relation contravariant functor omega gamma assigns topological space lattice open subsets continuous map inverse image function 
alternative description element chain equipped 
open sets space correspondence continuous functions open set set map assigns element action omega morphisms expressed omega gamma ffi lattices topological spaces motivation look topological spaces 
element topological space naturally equipped pieces information 
associate filter open neighborhoods complement closure map element topological space filter example observe additional property union open sets belongs opens 
closure point property contained union closed sets contained 
map singles point translates frame homomorphism omega gamma omega gamma 
fix new piece notation domain theory gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fig 

point complete lattice 
definition 
filter called prime implies finite allowing arbitrary subset arrive notion completely prime filter dually speak completely prime ideals 
proposition 
complete lattice subset equivalent 
completely prime filter 

filter 
prime element 
frame homomorphism 
proposition shows ways characterizing points opens coincide see 
virtues take advantage coincidence 
official definition choose variant closest treatment topological spaces 
definition 
complete lattice 
points completely prime filters collection pt points turned topological space requiring subsets pt open form ff pt fg proposition 
sets form topology pt 
proof 
xm om xm finite points filters completely prime 
observe perfect symmetry setup 
topological space element belongs open set complete lattice point belongs open set assigning complete lattice topological space points frame homomorphism map pt assigns point point gamma readily seen completely prime filter get contravariant functor denoted pt clat top 
give alternative description characteristic functions 
fact object purpose complete lattice 
speaks schizophrenic object situation 
saw proposition completely prime filter gives rise frame homomorphism 
action functor pt morphisms expressed pt ffi basic adjunction topological space mapped space points open set lattice simply map completely prime filter open neighborhoods 
assignment denote jx pt omega gamma continuous open open set get simply unwinding definitions ou commutes continuous functions pt omega gamma omega gamma gamma jy ffi 
family jx constitutes natural transformation identity functor pt ffi omega gamma samson abramsky achim jung holds complete lattices 
omega gamma pt map assigns frame homomorphism seen proof proposition 
see natural transformation check commutes frame homomorphisms omega gamma pt pt gamma ffi essentially calculation ingredients formulate stone duality theorem theorem 
functors omega gamma top clat pt clat top dual adjoints 
units 
proof 
remains check triangle equalities omega gamma omega gamma omega gamma pt omega gamma pt pt pt omega gamma pt id id omega gamma omega gamma jx pt pt left diagram open set omega gamma jx omega gamma gamma oo fx jx oo fx oo fx fx og calculation right diagram verbatim exchange omega pt concrete representation open sets completely prime filters respectively allowed concise proof theorem instructive see units behave terms characteristic functions 
type right hand sides revealed second duals 
canonical mapping second dual course point evaluation 
ev ev 

equivalences sober spaces spatial lattices subsection look closely units ffl 
need concept definition 
closed subset topological space called irreducible non empty written union closed proper subsets 
clearly irreducible closed set corresponds complementation irreducible prime element lattice open sets 
proposition 
topological space 
jx pt omega gamma injective satisfies separation axiom 
surjective irreducible closed set closure element proof 
half just various equivalent definitions separation different elements different sets open neighborhoods 
second statement observe prime elements omega gamma correspondence completely prime filters open sets 
condition simply says filter arises neighborhood filter element definition 
topological space called sober jx bijective 
note jx bijective homeomorphism know section continuous open 
preceding proposition space sober irreducible closed set closure point 
intuitive meaning course space sober recovered lattice open sets 
domain theory proposition 
complete lattice unit omega gamma pt surjective monotone 
furthermore equivalent 
injective 

elements separated completely prime filters 

generated prime elements 

exists completely prime filter 
order reflecting 
proof 
seen proposition open sets pt form proves surjectivity 
monotonicity clear filters upper sets 
turning equivalent conditions injectivity note equivalent completely prime filters words injective elements separated completely prime filters 
infimum primes want show strictly exists completely prime filter containing equivalence proposition see existence prime element contradiction 
statements follow easily 
turn imply injectivity general order theoretic setting strictly weaker order reflection 
definition 
complete lattice called spatial bijective 
intuitive meaning case spatial lattice thought lattice open sets topological space 
direct consequence theorem theorem 
spatial lattice frame 
particular distributive 
theorem 
complete lattice topological space pt sober 
topological space lattice omega gamma spatial 
proof 
space points lattice certainly different completely prime filters belongs 
contains 
surjectivity pt irreducible closed set filters 
union filters non empty upper set unreachable joins 
complement principal ideal complement pt certainly contains claim prime 
covered complements covered say complement means follows contained closure point ln hand ln belongs closed set open neighborhoods contains element second statement easier argue 
different open sets element contained 
neighborhood filter completely prime separates corollary 
functors omega pt form dual equivalence category sober spaces category spatial lattices 
result may suggest reasonable universe topological spaces ought consist sober spaces prefers lattice theoretic side spatial lattices 
true far spaces concerned 
lattice side argued forcefully right choice larger category frames defined complete lattices satisfy frame distributivity law section 
basis arguments fact free frames exist see johnstone theorem ii property holds complete lattices spatial lattices 
information isbell johnstone johnstone 
choice frames doing topology support theoretical computer science precisely frame distributivity law expected hold observable properties processes 
connection large extent raison etre chapter refer abramsky abramsky vickers smyth depth discussion 
properties sober spaces application pt ffi omega space essentially idempotent operation best think pt omega gamma completion commonly called completeness samson abramsky achim jung particular kind heart hofmann mislove theorem met section able state full generality 
theorem 
sober space 
sets open neighborhoods compact saturated sets precisely scott open filters omega gamma 
proof 
pretty obvious neighborhoods compact subsets scott open filters omega gamma 
interested direction 
scott open filter omega gamma candidate corresponding compact set show open neighborhood belongs 
sake contradiction assume exists open neighborhood zorn lemma may assume maximal property 
filter prime element omega gamma tantamount saying complement irreducible closed set 
closure single point open sets contain precisely contained open set filter contains belongs contradicts assumption neighborhood appeared hofmann mislove 
proof taken keimel appear 
note relies chapter axiom choice 
saturated sets uniquely determined open neighborhoods reformulate preceding theorem follows corollary 
sober space 
poset compact saturated sets ordered inclusion dually isomorphic poset scott open filters omega gamma ordered inclusion 
corollary 
sober space 
filtered intersection family non empty compact saturated subsets compact non empty 
filtered intersection contained open set element family belongs 
proof 
hofmann mislove theorem switch freely compact saturated sets open filters omega gamma 
clearly directed union open filters 
proves statement 
intersection filtered family contained means belongs directed union corresponding filters 
contained 
claim intersection non empty sets follows directly take 
space equipped order relation called specialization order setting open sets implies may compare topology topologies defined ordered sets 
plays role context weak upper topology defined coarsest topology sets form closed 
proposition 
space topology finer weak upper topology derived specialization order 
proposition 
sober space dcpo specialization order topology coarser scott topology derived order 
proof 
equivalence sober spaces spatial lattices may think points complete lattice seen difficulties specialization order translates inclusion order completely prime filters 
directed union completely prime filters completely prime filter immediate 
directed union 
belongs open set shows scott open 
dcpo equipped scott topology hand necessarily sober see exercise 
record fact shall 
theorem 
category sober spaces complete cocomplete 
closed retracts formed ambient category top 
reader convenience sum considerations table comparing concepts topological spaces concepts pt complete lattice 
domain theory space pt point completely prime filter filter specialization order inclusion order open set filters containing saturated set filters containing upper set compact saturated set filters containing scott open filter locally compact spaces continuous lattices know sober spaces may seen dcpo order consistent topology 
move special kinds spaces aim characterize various kinds domains open set lattices 
step direction introduce local compactness 
lemma 
distributive continuous lattices spatial 
proof 
shown theorem continuous lattices generated irreducible elements 
distributive lattice prime 
recall topological space called locally compact element fundamental system compact neighborhoods 
imply ascending chain natural numbers equipped weak upper topology shows 
combination get beautiful result theorem 
functors omega pt restrict dual equivalence category sober locally compact spaces category distributive continuous lattices 
proof 
seen section holds omega gamma compact set proves open set lattice locally compact space continuous 
converse point open set completely prime filter scott open element lemma tells scott open filter contained contains know previous lemma distributive continuous lattice thought open set lattice space points furthermore guaranteed sober 
apply hofmann mislove theorem get set points supersets compact saturated 
summary contained subset subset spaces locally compact sober 
properties introduced subsections independent 
coherence introduced coherence section special case continuous domains 
general definition reads follows definition 
topological space called coherent sober locally compact intersection compact saturated subsets compact 
definition 
order approximation complete lattice called multiplicative imply distributive continuous lattice order approximation multiplicative called arithmetic 
generalization proposition theorem 
functors omega pt restrict dual equivalence category coherent spaces category arithmetic lattices 
proof 
arguments proposition apply clear open set lattice coherent space arithmetic 
converse may just proof theorem invoke hofmann mislove theorem 
tells compact saturated sets pt correspondence scott open filters 
order approximation just need prove pointwise infimum scott open filters scott open 
compact open sets spectral spaces passing continuous lattices algebraic ones get samson abramsky achim jung theorem 
functors omega pt restrict dual equivalence category sober spaces element fundamental system compact open neighborhoods category distributive algebraic lattices 
proof distributive continuous lattices theorem 
combine coherence 
definition 
topological space coherent element fundamental system compact open neighborhoods called spectral space 
theorem 
functors omega pt restrict dual equivalence category spectral spaces category algebraic arithmetic lattices 
having arrived level replace open set lattice sublattice subsets 
task reformulate stone duality bases open set lattices 
objects proposition 
algebraic arithmetic lattice 
completely prime filters correspondence prime filters 
topology pt generated set compact proof 
completely prime filter set compact elements contained 
clearly upwards closed set 
filter arithmetic 
follows fact scott open equal 
conversely filter generates filter complete subset join algebraic 
may replace hold 
scott open finite subset element gives element belongs 
statement topology pt follows fact element join compact elements 
frame homomorphism algebraic arithmetic lattices need preserve compact elements order represent bases need resort relations section definition 
additional axioms needed frame homomorphisms special scott continuous functions 
definition 
relation lattices called join approximable conditions satisfied 

fin 
fin 
fin fin 
easily established proposition 
category algebraic arithmetic lattices frame homomorphisms equivalent category distributive lattices join approximable relations 
proposition replace compound functor pt ffi idl direct construction topological space distributive lattice 
denote functor spec standing spectrum distributive lattice 
contract ffi omega omega gamma say theorem 
category spectral spaces continuous functions dually equivalent category distributive lattices join approximable relations contravariant functors omega spec 
supplement table section comparison concepts topological space concepts spectrum distributive lattice 
domain theory space spec point prime filter specialization order inclusion order compact open set prime filters containing open set union compact open sets saturated set prime filters containing upper set compact saturated set prime filters containing filter argued category spectral spaces right setting denotational semantics precisely finitary logical description distributive lattices compact open subsets see smyth example 
category cartesian closed fixpoints endofunctions provide adequate universe semantics computation 
intriguing question arises kinds spaces traditionally studied topology analysis best reconciled computational intuitions reflected different kinds spaces arise domain theory 
interesting development abbas edalat domain theory basis novel approach theory integration edalat 
domains see continuous domains come picture 
note longer needs assumed proposition 
continuous domains scott topology sober spaces 
proof 
irreducible closed set continuous domain show directed 
contain irreducibility cover scott open set 
gives desired upper bound plain proposition closure result lawson rudolf hoffmann lawson hoffmann demonstrates central role played continuous domains 
theorem 
functors omega pt restrict dual equivalence cont category completely distributive lattices 
proof 
scott open set continuous domain union sets form oe proves complete distributivity seen theorem 
converse completely distributive 
know points form dcpo order inclusion filters topology pt contained scott topology dcpo 
show completely prime filter approximants 
observe certainly holds cases element directed suprema points unions filters 
get prime continuity fy xg successively interpolating gives sequence elements just proof lemma 
set completely prime filter containing infimum directedness approximants clear filtered 
consequence holds belongs quite finished need show get scott topology back 
scott open set points implies implies supremum elements form claim just seen tantamount belongs proved 
conversely point contains contain completely prime 
belongs shown add coherence get dual equivalence coherent domains completely distributive arithmetic lattices 
add algebraicity get dual equivalence algebraic domains algebraic completely distributive lattices 
adding properties samson abramsky achim jung characterizes called bifinite domains light proposition 
prefer speak coherent algebraic domains 
spectral spaces may ask characterized lattice compact open subsets 
answer simple compact open set algebraic domain finite union sets form 
turn characterized irreducible prime 
theorem 
dual equivalence theorem cuts dual equivalence coherent algebraic domains lattices element join finitely primes 
proof 
need show lattice satisfies condition stated theorem ideal completion completely distributive 
trivial principal ideal generated prime completely prime ideal completion result follows theorem 
combined strength complete distributivity algebraicity order approximation restrict corresponding spaces far bring cartesian closed categories domains 
see add order characterize bifinite domains 
solution setting appears translation mub closures lattice compact open subsets say subset primes upside finite mub property definition 
sum considerations theorem theorem 
lattice isomorphic lattice compact open subsets domain definition firstly element secondly element supremum finitely primes thirdly finite set primes finite superset primes additional requirement largest element prime characterizes lattices compact open subsets bifinite domains 
extra condition finite mub closures order axiom replaced shown carl gunter gunter 
smaller class algebraic bc domains nicer description theorem 
lattice isomorphic lattice compact open subsets algebraic bc domain element element supremum finitely primes set primes plus element closed finite infima 
summary summarized results section table 
labels invented mnemonic names categories 
won outside subsection 
filled dots correspond categories characterization terms compact open subsets spectral spaces 
similar diagram appears gierz appears intersection categories really 
logical viewpoint material abramsky 
working lattices compact open subsets having established duality algebraic domains lattices compact open subsets ask extent domain theory lattices 
indicated approach offers new insights moment motivation simply working lattices lot easier working dcpo 
doing domain theory refers performing domain constructions sections approximation 
try 
suppose know omega gamma bifinite domain construct omega gamma 
lattice compact open subsets lifted domain 
answer simple just add new top element omega gamma 
omega gamma coalesced sum works fine omega gamma phi omega gamma fdg theta omega gamma feg fd phi domain theory abc alg spec cont alg coh cont sob top fig 

overview stone dualities domain theory 
encounter problems look cartesian product 
clear compact open subset theta finite union products compact open subsets factors simple criterion unions guarantee unique representation 
moral allow multiple representations compact open subsets 
lattices shall study certain preordered structures 
glance may unwanted complication soon see really programme smoothly 
lattices determined order structure algebraic structure equivalence longer holds preordered case 
mention preorder lattice operations 
explicit axiomatization 
reason want keep definitions inductive 
point clearer discuss function space construction 
definition 
coherent algebraic prelocale preordered algebra binary operations nullary operations unary predicate supremum fa bg infimum fa bg largest element 
preorder denoted corresponding equivalence relation 
predicate required hold prime 
element equivalent finite join primes 
distinguish prelocale underlying set 
set fa abbreviated 
essentially definition appears abramsky 
predicate included 
omit look coalesced sum construction 
expressions supremum infimum may contradictory exactly appropriate preordered universe 
seen difficulties coherent algebraic prelocale gives rise lattice generated primes distributive 
domain prelocale gotten incorporating extra conditions theorem samson abramsky achim jung top topological spaces 
stone dual 
sob sober spaces vs spatial lattices 
locally compact sober spaces vs continuous distributive lattices 
coh coherent spaces locally compact sober intersection compact saturated compact vs arithmetic lattices distributive continuous order approximation multiplicative 
sober spaces base compact open sets vs distributive algebraic lattices 
cont continuous domains scott topology vs completely distributive lattices 
spec spectral spaces vs algebraic arithmetic lattices vs distributive lattices 
cont coherent domains vs arithmetic completely distributive lattices 
alg algebraic domains vs algebraic completely distributive lattices 
alg coherent algebraic domains vs algebraic arithmetic completely distributive lattices vs distributive lattices element finite join primes 
domains definition bilimits finite posets 
stone dual described basis base compact open subsets distributive lattice extra properties stated theorem 
bifinite domains 
stone dual described basis compact open subsets distributive lattice extra properties stated theorem 
abc algebraic bounded complete domains 
stone dual described basis compact open subsets distributive lattice extra properties stated theorem 
table 
categories stone duals 
ffl fin fin ffl 
definition 
domain prelocales 
function oe called surjective order preserving order reflecting 
domain prelocale bifinite domain pre isomorphism deltak omega gamma say localic description deltak 
pre isomorphism oe preserve suprema infima largest element equivalence 
furthermore restricts surjective map oe 
look closely case pre isomorphism deltak omega gamma 
diagram may quite helpful domain theory ae dual omega gamma deltak ae omega gamma deltak remember omega gamma just compact open subsets form 
inclusion order principal filters dual usual order 
lift pre isomorphism domain level 
previous chapters natural approach apply ideal completion functor pre isomorphism op 
stone duality apply spec deltak 
yields isomorphism spec spec omega gamma 
composed inverse unit gives isomorphism spec spec spec omega gamma spec deltak gamma gamma concrete idea behaviour compact elements spec 
filters generated prime elements 

easily checked equals compact element compact open subset jak proposition 
exists map deltak omega gamma domain prelocale localic description bifinite domain spec isomorphic 
proof 
just described derive isomorphism pre isomorphism 
converse observe unit omega gamma spec surjective order preserving order reflecting proposition 
general functions domains translate join approximable relations language domain prelocales 
just slight extension theorem 
theorem 
category domain prelocales join approximable relations dually equivalent category bifinite domains scott continuous functions 
attempt mimic cartesian product construction forced pass preordered structures accepted go step farther prelocales syntactic objects identifications 
precisely loss generality assume underlying algebra term algebra respect operations 
example describe point domain fashion 
take term algebra generators term combination 
preorder smallest relation compatible requirements definition 
effect exactly equivalence classes respect terms equivalent terms equivalent 
precisely prime terms 
denote resulting domain prelocale 
syntactic approach suggests look relation domain prelocales definition 
domain prelocales 
say sub prelocale conditions satisfied 
subalgebra respect 
preorder restriction preorder 
equals 
write sub prelocale proposition 
sub prelocale defines embedding projection pair spec spec spec spec samson abramsky achim jung spec spec proof 
clear continuous directed joins elements spec resp 
spec just directed unions prime filters 
ffi id preorder restriction ffi id don need special assumptions 
crucial point functions defined sense produce prime filters 
filter part follows fact operations preorder restrictions assume finite means element supremum primes prime filter prime element required prime elements precisely prime elements lie hand follows easily suprema suprema corollary 
assume localic description deltak describes deltak defines embedding jak jak proof 
denote embedding spec spec defined preceding proposition embedding ffi ffi gamma course happens spec sub domain spec fact fully sufficient advantageous stronger relation comes solving recursive domain equations 
constructions general technique demonstrate function space plotkin powerdomain constructed prelocales outline general technique 
picture diagram 
explain get ingredients step step 
ae ft dual omega gamma ft deltak ae omega gamma deltak 
set 
want study construction bifinite domains 
table section bilimit powerdomain constructions section 
diagram illustrates binary construction 
assume understand action associated functor bifinite domains 
particular know compact elements ft compare acts embeddings proposition 
clear understanding bottom row diagram detail ffl ft effect functor objects ffl ft compact elements 
ffl omega gamma ft compact open subsets precisely upper sets form finite set compact elements 
ffl omega gamma ft prime elements omega gamma precisely subsets ft form compact element 
order inclusion dual usual order compact elements 
furthermore assume domain prelocales describe bifinite domains respectively 
descriptions encoded pre isomorphisms deltak omega gamma deltak omega gamma 
goal 
want define domain prelocale localic description ft 
achieved series steps 
domain theory 
definition 
creative part enterprise 
search description compact open subsets knowledge compact open subsets point directly compact elements 
immediate payoff gain understanding construction terms properties points 
treatment plotkin powerdomain illustrates convincingly 
definition proceed uniformly concrete instances 
set generators defined taken term algebra respect 
interpretation function deltak omega gamma defined interpretations deltak deltak extended lattice homomorphism ja bk jak jbk axioms rules govern preorder predicate 
check definitions 
task broken series steps follows 

soundness 
check axioms rules translate deltak valid statements compact open subsets 
usually quite easy 
soundness infer deltak monotone restricted map deltak omega gamma 

prime generation 
axioms rules prove element transformed effectively equivalent term finite supremum expressions asserted prime 
crucial step usually contains main technical 
allows prove remaining properties deltak deltak knowledge basis 

completeness primes 
show deltak order reflecting 

definability primes 
show deltak surjective 
point fill remaining pieces concrete construction consideration 

completeness 
interpretation function deltak order reflecting 
proof 
jak jbk 
replace expressions formal joins primes soundness ensures value interpretation function remains unchanged ja resp 
jb form resp 
compact elements 
inclusion order omega gamma ft translates formula completeness primes pulled back preordered lattice follow holds 

definability 
surjectivity deltak easy consequence surjectivity deltak know compact open subsets algebraic domain finite unions compactly generated principal filters 

definedness 
course omega gamma ft domain prelocale just shown preorder predicate preserved reflected deltak 
constitutes semantic proof satisfies extra conditions domain prelocales 
words defined operation domain prelocales 

stone duality 
point shown deltak pre isomorphism 
previous subsection lift isomorphism spec ft stone duality spec spec omega gamma ft spec deltak gamma gamma ft correspondence object level 
want see construction sub prelocale relation hand isomorphism hand 
assume prelocales localic descriptions bifinite domains hold 
corollary seen define embeddings proposition shown functors associated different constructions act embeddings may unambiguously write ft result action embedding ft 
embeddings preserve compact elements restricts monotone function samson abramsky achim jung 
diagram depicted subsection 
connect lower left corners gives rise map omega gamma omega gamma 
way defining immediate subset inclusion map connecting upper left corners 
technical step 

naturality 
show diagram ae omega gamma ft deltak omega gamma ft deltak commutes 
element level reads jak jak ft get remaining missing information general manner 

monotonicity 
show 
form construction clear subset axioms rules derived derived 
show larger prelocale extra proved elements 
argument semantic 
proof 
holds 
jak jak similarly correctness says naturality ft ft 
embeddings order reflecting follows 
completeness allows conclude holds 
way seen predicate restriction 

prelocale 
follows correctness construction holds 

naturality having established relation look embedding spec spec defined proposition 
claim diagram commutes spec spec ft ft words equals embedding derived general manner corollary 
proof 
diagram bifinite domains scott continuous functions 
suffices check commutativity compact elements 
compact element spec filter generated term 
image compact element generates compact open subset jak filter generated term applying gives compact element jak step ensures ft maps function space construction start preparatory lemmas 
notation helpful 
write set functions map lemma 
scott topology function space gamma 
bifinite domains equals compact open topology 
proof 
compact open gamma 
directed set continuous functions maps domain theory open collection open sets form gamma covers compactness true finitely gamma 
upper bound gamma holds equivalent scott open set gamma 

hand belongs scott open open set gamma 
true approximation ffi ffi idempotent deflation idempotent deflation element image set ffi ffi 
intersection belongs compact open topology contains contained lemma 
bifinite compact open 
compact open gamma 

proof 
know defines open set previous lemma 
get idempotent gn 
follows nm idempotent deflation gnm gamma 
maps ffi ffi domain prelocales describing bifinite domains outlined general scheme previous subsection 
lemmas justify choice generators interpretation function localic function space construction 
jak ja note elements just syntactic expressions 
axioms rules preorder predicate 
axioms 
gamma 
gamma gamma 
dist 
rules 
gamma gamma 
gamma 

gamma 
comments formulae place 
convention assume index sets finite expressions belong term algebra 
observe predicate rule 
gamma gamma 
difficult express property 
note enforce distributivity 
prerequisite prove prime generation 
clear rules sound interpretation particular 
gamma exact mirror image definition joinable families step functions definition 
immediately turn crucial step 
lemma directly encoded idempotent 
find minimal elements compact open subset explicitly 
illustrate general technique example 
suppose jak form ja form get minimal element choosing value value fc look intersection form coherence 
choose value fe 
argument domain ensures process stops finite number iterations result joinable family pairs hx coherence result domain guarantees finitely choices possible 
note happen set minimal upper bounds image domain empty 
case just unlucky choices 
ja empty minimal function exists 
samson abramsky achim jung mimic procedure prelocale follows 
simplicity analogy apparent stand terms similarly get 

gamma 


gamma gamma 
gamma gamma terms dist follow terms 
trick prime terms join equals 

gamma 

gamma gamma 
induction may job 
eventually transformed disjunction joinable families 
may inferred rule 
gamma 
note distributivity allows replace term equivalent term form term form transformation works illustrated 
show completeness primes 
assume terms predicate holds jak jbk 
case equivalent joinable families way deriving gamma 

order relation joinable families characterized lemma 
says jb ja ja jb 
assume completeness constituting prelocales may infer 
relation easily derived 
gamma 
definability primes immediate know compact functions arise joinable families lemma proposition 
properties follow constructions uniformly 
left proving naturality property 
see embedding gamma 
transforms step function 
gamma 
ffi ffi get step function 
element gamma 
holds 
interpretation jak gamma 
upper set generated joinable family step functions ja ja applying embedding gamma 
gives step functions just seen 
corollary rewrite ja ja supremum joinable family jak gamma 
proved 
spec spec express faithfulness localic construction quite concisely follows theorem 
domain prelocales 
spec gamma 
spec spec gamma 
isomorphism natural respect sub prelocale relation 
plotkin want describe lattice compact open subsets plotkin powerdomain bifinite domain theorem know concretely represented set lenses ordered egli milner ordering definition 
compact elements lenses convex closures finite non empty subsets proposition 
idempotent lifted functor 
map lens convex closure 
compact open subsets readily described 
problem half egli milner ordering refers closed lower sets upper sets 
domain theory follow logical pathway order theory axiomatization aiming 
efficient consult mathematical literature hyperspaces see vietoris vietoris smyth remind powerdomains introduced model non deterministic behaviour 
think compact open subsets observations outcomes computation pretty clear ways statements non deterministic programs case runs program satisfy property run satisfies 
check mathematics lemma 
bifinite domain compact open compact open subsets fl lens og fl lens furthermore range compact open subsets collection forms base scott topology 
proof 
compact open 
upper set finitely compact elements find idempotent deflation 
clear 
sets compact open 
compact lens form cx fin 
upper set written 
definition comes surprise definition 
domain prelocale localic description bifinite domain define plotkin term algebra generators gp fa ag sigmaa ag interpretation function deltak omega gamma defined jak jak jak generators extended lattice homomorphism 
preorder predicate defined follows axioms 
gamma gamma sigma gamma sigma sigmaa sigma gamma sigma gamma sigmab sigma gamma sigmab sigma dist 
rules 
gamma sigmaa sigmab gamma holds non empty sigmaa 
note require distributivity explicitly 
derivation scheme minimal combination rest gamma sigma gamma equivalent 
derived axioms useful gamma sigma gamma sigmab sigmab sigma 
leave interested reader check soundness pass straight central step generation prime elements 
samson abramsky achim jung proof 
expression transform disjunction conjunctions distributivity axiom 
suffices represent term form sigmab disjunction primes 
simplify 
gamma pack generators single term assume represent disjunction primes applying sigma gamma distributivity arrive disjunction terms form 
write disjunction primes doesn hurt add 
get dm apply rule gamma sets fc dm fd dm may fail coincide 
looking semantics moment see compact open subset described minimal lenses convex closures elements jd plus generators jc take term apart prime expression subset fc ng 

application plus distributivity yields gamma dm delta gamma dm delta picture obvious 
check deltak order reflecting 
proof 
assume sigmaa sigmab compact elements ja respectively jb fd jg vem fc ig assume deltak order reflecting get equation second sigmaa sigmab definability primes shown lemma 
left checking naturality step 
proof 
sigmaa prime element sub prelocale associated embedding element jtk convex closure set minimal elements ja applying gives convex closure fe ig argued theorem 
corollary tells element jtk case function space construction summarize theorem 
domain prelocale 
spec spec isomorphism natural respect sub prelocale relation 
domain theory prelocales hoare smyth powerdomain easier describe 
elide generators rules refer respectively sigma 
recursive domain equations subsection treat bilimits fashion studied finitary constructions 
assume domain prelocales describes bifinite domain dn corollary states sub prelocale relation am translates embedding mn dn dm seen easily dn mn nm expanding system kn km ffi mn holds 
claim directed union domain prelocale describes claim fairly obvious requirements prelocales refer finitely elements property inferred validity second claim need specify interpretation function 
embedding dm bilimit defined theorem 
set jak jak am contained am exact choice matter corollary jak ak km jak am applying yields jak ak ffi km jak am jak am 
interpretation function defined embeddings preserve order approximation proposition compact elements compact open subsets preserved 
order see deltak pre isomorphism proceed checking steps 
simple 
soundness holds monotone map compact elements compact elements 
prime generation holds holds am order reflecting get completeness completeness deltak am definability follows theorem compact elements images compact elements approximating dn second sequence prelocales describing bn clear bn holds 
naturality step relate embedding exact form extracted theorem kn ffi ffi kn embedding en dn en embedding derived bn prime jak kn ffi ffi jak am nm kn ffi jak am nm kn jak bm jak proof complete 
theorem 
chain domain prelocales spec spec observe simple limit operation prelocales compared bilimit 
comes full flower look recursive domain equations 
construction built treated seen function space plotkin powerdomain bilimit section included find initial fixpoint functor localic side simply union result describe canonical fixpoint step 
successively applying relation gives monotonicity step 
chain stated form union obviously fixpoint construction domain described fixpoint functor ft notice merely surprising may sight 
domain prelocales representations domains exploiting simple idea represent different samson abramsky achim jung interpretation functions 
address question canonicity 
suffices check embedding corresponding equal 
corresponds 
precisely naturality listed step 
follows bilimit constructed chapter 
languages types properties points define formal language type expressions grammar oe oe oe oe oe oe oe recx oe ranges set tv type variables 
constructions added list course strict function space smash product hoare powerdomain smyth powerdomain 
hand include expressions basic types integers booleans encoded language simple formulae 
seen ways interpret type expressions 
interpretation takes values directly category bifinite domains constructions sections 
type expression may contain free variables interpretation defined relative environment ae tv assigns type variable bifinite domain 
semantic clauses corresponding individual rules grammar follows id ae id ae ae id oe ae oe ae gamma 
id ae id recx oe ae fix ft id oe ae 
expression ae 
denotes environment maps coincides ae variables preceding subsections suggests interpret type expressions category domain prelocales 
call corresponding mappings il ae semantic clauses localic interpretation il ae il ae ae il oe ae oe ae il ae il recx oe ae il oe ae 
preceding subsections meant convince reader theorem 
ae ae environments tv domain prelocale ae localic description ae type expression oe holds il oe ae localic description id oe ae 
formula spec oe ae id oe ae step define type expression oe formal language oe computational observational properties 
done inductive definition true false oe oe oe oe oe oe oe oe oe oe oe oe oe theta oe theta domain theory oe oe oe oe phi false phi oe phi oe oe oe oe oe oe oe sigmaoe oe oe oe recx oe oe oe expression oe denote substitution oe 
usual caveat capture free variables applies dwell 
rules exhibited generate oe carrier set syntactical domain prelocale style previous subsections 
note don need special properties recursively defined type just properties approximating domains bundled theorem 
oe define preorder predicates needed coalesced sum construction inductive definition 
example axioms rules enforce oe preordered distributive lattice 
oe oe oe oe oe true oe oe oe oe oe oe false oe oe oe oe oe oe oe oe oe 
oe oe seen type specific axioms rules definition function space prelocale plotkin 
full list refer abramsky ff 
oe closed type expression domain prelocale oe describes intended bifinite domain theorem 
oe closed type expression spec oe id oe note special case theorem 
scheme deriving designed carefully finite positive information premise rule 
system seen monotone inductive definition technical sense aczel 
furthermore established close connections syntactical rules properties described domains 
basis result 
theorem 
language properties decidable 
proof 
statement trivial domain prelocale combinations true false occur 
composite types rely general development section concrete instances verified sections 
expression oe effectively transformed finite disjunction primes expressions satisfying predicate step prime generation 
soundness completeness ensure expressions satisfying predicate precisely primes preordered lattice oe 
decide preorder arbitrary expressions decide preorder primes 
note constructions accomplish stated far 
primes produced transformation algorithms explicit form occuring rules deriving predicate merely expressions happen equivalent primes 
preorder explicit primes construction easily characterized samson abramsky achim jung semantic interpretation function deltak task establishing preorder primes reduced establishing formula defined structural induction type oe 
expression oe derived true false finitely steps eventually reduced task checking preorder certain expressions 
introduce formal language speak points domains 
far done roundabout way trusting reader experience sets functions 
doing formally allow establish precise relationship expressions points expressions properties 
assume closed type expression oe denumerable set oe fx oe oe oe typed variables 
terms defined follows oe stands term type oe oe oe oe oe oe oe oe oe mn oe hm oe theta oe theta hx oe oe inl oe phi inr oe phi cases inl oe inr oe oe oe lift oe oe fjm jg oe oe extend fjx oe jg oe oe oe oe omega oe theta oe recx oe fold recx oe recx oe unfold oe recx oe oe oe oe fashion type expressions alternatives interpreting term type oe 
give direct denotational semantics bifinite domain id oe specify prime filter corresponding domain prelocale oe 
denotational semantics suffers fact order single particular element domain mathematical language looks embarrassingly similar formal language intend interpret 
semantic clauses follow appear circular 
need environments deal free variables 
maps ae oe oe oe id oe assume respect typing 
clauses suppress type information 
oe kae element id oe ae jx 
mn kae hx yi kae inl kae inr domain theory inl inr kae jn kae jn kae kae oe ae extend fjx oe jg cl jm jm omega ei kae fold kae unfold fix give localic justified saying logical interpretation 
sequent calculus style presenting domain logic 
problem free variables dealt time including finite list gamma assumptions variables 
write form oe assume gamma contains variable sequent takes form gamma oe read satisfies oe assumptions gamma 
gamma oe gamma oe oe oe gamma oe gamma oe gamma oe gamma 
oe gamma gamma oe oe oe gamma oe gamma oe gamma oe gamma oe gamma mn gamma oe gamma gamma hm oe theta gamma oe theta gamma oe gamma hx yi gamma oe gamma inl oe gamma oe gamma inr false gamma oe oe gamma oe gamma cases inl inr gamma false oe gamma oe gamma cases inl inr gamma oe gamma oe gamma oe gamma oe gamma lift oe gamma oe gamma fjm jg oe gamma oe gamma fjm jg sigmaoe gamma oe gamma oe gamma extend fjx oe jg samson abramsky achim jung gamma sigmaoe gamma oe sigma gamma extend fjx oe jg sigma gamma oe gamma oe gamma oe gamma sigmaoe gamma sigmaoe gamma sigmaoe gamma sigmaoe gamma sigmaoe gamma sigma gamma omega sigma oe theta gamma oe gamma gamma omega oe theta gamma oe gamma fold oe gamma oe gamma unfold oe gamma oe gamma oe gamma comments may help reading clauses 
rules guarantee set properties deduced term forms filter domain prelocale 
third rule expresses fact particular satisfy properties prime filter 
particular entails gamma false oe true 
fourth rule structural rules ordinary weakening 
need get started derivation 
rules cases construct predicate shows 
oe written oe false said want keep logic positive say want inductive definitions 
rules fold unfold may bit boring precisely point take advantage fact world domain prelocales solve domain equation equality 
rule applied finitely times starting gamma true order yield interesting 
may note regret system logic observable properties 
standard proof principle fixpoint induction admissible predicates lemma fit framework 
hand hopefully apparent canonical approach applications see abramsky abramsky boudol hennessy ong jensen jensen 
compare denotational logical semantics 
need say environments ae assumptions gamma fit 
assume ae maps variable oe spec oe 
secondly want ae belongs compact open subset described corresponding entry gamma 
environments functions defined set variables assumptions finite lists definition bit delicate 
write ae ffl gamma entries oe gamma ae 
convention formulate validity assertions terms gamma ffl oe ae ae ffl gamma final tie interpretations type expressions terms theorem 
domain logic sound complete 
formula gamma oe gamma oe gamma ffl oe exercises 

prove completely distributive lattice satisfies dual distributivity axiom fi gamma 
prove complete lattice completely distributive holds hint theorem 
show topological space sober irreducible closed set closure unique point 

find complete lattice pt empty 

show hausdorff space sober 
find space sober 
converse sober space ought easy find 
domain theory 
find dcpo sober scott topology 
johnstone 
example complete lattice see isbell 
known example distributive lattice 

describe topological space pt terms prime elements complete lattice 
continuous domain 
identify set prime elements omega gamma 
prove lawson topology restriction lawson topology omega gamma 
suppose lattice homomorphism 
show defined xry join approximable relation 
characterize continuous functions spectral spaces arise particular join approximable relations 

extend lemma classes domains 

try give localic description coalesced sum construction 
directions coverage domain theory means comprehensive 
years inception field remains extremely active vital 
shall try section give map parts subject covered 
topics classical domain theory mention topics reader encounter literature 
effectively domains mentioned domain theoretic continuity provides qualitative substitute explicit computability considerations 
order evaluate claim rigorously give effective version domain theory check key constructions domains product function space fixpoints solutions recursive domain equations lift effective setting 
purpose bases quite crucial say simplifying little thumbnail sketch continuous domain effectively basis oe numbered fb gn 
way oe recursive indices 
similarly continuous function effectively domains effective corresponding approximable mapping recursively enumerable 
refer smyth weihrauch chapter effective structures handbook developments effective domain theory lines 
sophisticated approaches aim making effectivity intrinsic working inside constructive universe set theory recursive realizability mccarty rosolini phoa 
shall return idea sub section 
universal domains cartesian closed category domains domain say universal embedding universality means effect replace category single domain precisely regard domain represented idempotent ffi projection corresponding gamma 
embeddable ultimately identify element ud think code constructions product function space induce continuous functions fun prod gamma 
act codes fun ud ue gamma 
way functorial level domain theory developed basis solution recursive domain equations section eliminated solve domain equations equality codes finding fixpoints continuous functions approach introduced scott scott followed textbook denotational semantics stoy 
said regards applications universal samson abramsky achim jung domains fallen 
main reason probably coding involved transition ud confusing unappealing attractive ways simplifying treatment domain equations information systems see 
developments interest 
firstly general approach construction universal domains tools model theory developed gunter jung droste gobel construct universal domains categories prove nonexistence cases gunter jung droste gobel droste gobel droste gobel 
secondly application universal domains play important role provide models type theories type types 
original idea goes back scott 
say domain admits universal type subdomain ud domain admits representation think code type types 
scott scott studied powerset 
domain categories category continuous lattices domains taken represented idempotents category algebraic lattices domains represented closures 
ershov ershov sato sato independently proved 
admit universe category hancock martin lof proved reported scott 
examples universal domains model type types see taylor coquand berardi 
domain theoretic semantics polymorphism seen continuity domain theory circumvent cardinality problems finding solutions domain equations gamma 
development equally impressive continuity give finitary semantics impredicative polymorphism second order lambda calculus girard system girard coquand coquand 
semantics essential functorial aspects domain theory 
semantics implicit polymorphism ideals macqueen partial equivalence relations abadi plotkin domains 
refer chapter volume handbook semantics types comprehensive coverage 
information systems scott introduced information systems bounded complete algebraic dcpo scott domains scott 
idea roughly represent category domains category bases approximable mappings theorems 
define constructions domains terms bases propositions 
gives natural setting effective domain theory 
bilimits unions information systems domain equations solved equality 
generally information systems correspond presenting just coprime elements domain prelocales 
information system representations various categories domains winskel zhang curien 
general theory information systems applicable wide class topological metric structures edalat smyth 
stability sequentiality recall ffl ffi style definition continuity proposition provides canonical choice order theoretic setting natural ask leads idea modulus stability exists 
say continuous function stable modulus exists define stable ordering functions think modulus specifying minimum information required input order function yields information output stable ordering refines usual pointwise order intensional information account 
domain theory turns definitions equivalent elegant algebraic notions setting lattice domains introduced completely different purposes 
section 
domains continuous function stable iff preserves bounded non empty infima exist cf 
proposition iff ug 
step extensive development stable domain theory stable functions stable ordering take place continuous functions play standard domain theory 
stable domain theory introduced berry berry berry 
girard coquand taylor ehrhard 
berry motivation introducing stable functions try capture notion sequentially computable function higher types 
theory sequential functions concrete domains refer kahn plotkin curien 
reformulations domain theory various points development domain theory see section referred need switch different versions 

category domains depending bottom elements required functions required preserve 
sense 
mathematically natural categories morphisms preserve matches structure objects required 
preferred category semantics endomorphisms need fixpoints fixpoints 
necessarily trivial 
suggests lacking mathematical framework order get really satisfactory tie applications 
shall describe number attempts deficiency 
definitive solution emerged proposals contributed important insights domain theory applications 
predomains partial functions proposal due gordon plotkin plotkin 
idea objects predomains domains requirement bottom elements change notion morphism partial continuous function say partial function continuous domain definition scott open subset restriction subset total continuous function 
resulting category denoted switch partial continuous functions carries change type structure expect categories domains partial cartesian closed categories defined robinson rosolini rosolini 
advantage approach brings usage domain theory closer recursion theory 
example hierarchy strict partial continuous functionals natural numbers 
gamma 
gamma 
gamma 
avoidance bottom elements leads simpler presentation product sum types 
example just notion sum disjoint union coproduct important point correspondence operational behaviour functions call value parameter passing mechanism partial function type 
example fit function type constructor standard ml milner tofte milner 
balance advantages complication dealing partially defined expressions partial cartesian closure straightforward treatment fixpoints 
case arbitrary partial continuous function defined fixpoint 
partial function type defined fixpoint 
accord computational intuition call value programming languages pleasant mathematically 
final note fact equivalent 
sense approach brings new 
distinct conceptual difference amenable constructive proof categorical axiomatization rosolini 
samson abramsky achim jung computational monads computational monads proposed eugenio moggi general structuring mechanism denotational semantics moggi 
computational monad cartesian category monad tensorial strength natural transformation theta tb theta satisfying equational axioms 
import strength monad internalised lines mentioned proposition 
category pre domains total continuous functions 
moggi proposal distinction values denotations computations 
element value element ta computation 
call value procedure denote morphism tb accepts input value type produces computation composition morphisms kleisli extension tb tc composition defined gamma 
tb tg gamma 
ttc gamma 
tc identities unit ja ta 
particular partiality captured way lifting monad see 
note particular example really just way presenting category previous subsection natural isomorphism gamma 
value monadic approach lies generality type distinction introduces values computations 
illustrate point note various powerdomain constructions section natural structure strong monads monad unit multiplication suitable versions singleton big union operations 
second point refer elegant axiomatization general recursion terms fixpoint objects crole pitts crole pitts strong monadic approach 
really belongs axiomatic domain theory return subsection 
linear types proposal gordon plotkin linear types sense linear logic girard metalanguage domain theory plotkin 
observation 
consider category 
domains bottom elements strict continuous functions 
category products coproducts cartesian products coalesced sums 
monoidal closed structure smash product strict function space mentioned 
lifting monad virtue adjunction mentioned dually comonad 
category comonad 
linear logic broader connections domain theory 
key idea linear logic linear decomposition function space gamma 
cardinal principles domain theory seen look cartesian closed categories domains convenient universes semantics computation 
linear logic leads look linear decompositions cartesian closed structures 
example cartesian closed category complete lattices continuous maps linear decomposition category complete lattices sup lattice homomorphisms maps preserving joins hoare powerdomain examples ehrhard huth 
axiomatic domain theory began account domain theory requirements interpret certain forms recursive definitions key structural features computable partial functions 
introduced quite specific structures convergence approximation 
elaboration domain theory resulting theory showed structures meet requirements began 
question remains class structures served better 
address question try axiomatize key features category domains suitable serve universe semantics computation 
exercise may expected yield benefits ffl making clearer essential structure lead improved meta language logic refinement scott logic computable functions scott 
ffl having clear axiomatization lead discovery different models convenient certain purposes suggest new applications 
hand lead representation theorem effect model axioms category domains fact embedded concrete categories studying chapter 
far limited amount progress programme 
step relatively cheaply generalize concrete categories domains categories enriched suitable subcategory dcpo 
force domain theory carries directly general setting smyth plotkin freyd 
additional generality spurious 
development semantics computation refinement traditional denotational paradigm reflect intensional aspects computational behaviour 
led considering semantic universes certain categories morphisms functions sequential algorithms curien information flows abramsky jagadeesan game theoretic strategies abramsky jagadeesan concurrent processes abramsky 
quite different concrete categories domains considering morphisms functions 
relevant properties categories domains notably existence fixpoints canonical solutions recursive domain equations 
promise axiomatic domain theory allow rich theory developed chapter transposed settings minimum effort 
impressive step axiomatic domain theory date peter freyd algebraically compact categories freyd freyd 
goes considerably covered section 
crole pitts fix categories mentioned crole pitts 
direction results show certain kinds structures serve categories domains 
result appeared exercise 
see hofmann mislove 
synthetic domain theory radical conceptual step try absorb structure convergence approximation computability ambient universe sets working inside suitable constructive set theory topos 
slogan domains sets 
leads programme synthetic domain theory analogy synthetic differential geometry kock smoothness effectivity structure absorbed ambient topos 
programme synthetic domain theory dana scott 
substantial steps programme taken rosolini rosolini subsequently phoa phoa freyd rosolini scott freyd 
axioms synthetic domain theory investigated hyland hyland taylor taylor subject currently active development 
guide literature mentioned book domain theory 
systematic accounts leading contributors subject refer lecture notes scott scott plotkin plotkin 
introductory exposition gunter scott gunter scott 
exhaustive account theory continuous lattices gierz superb account stone duality chapter continuous lattices johnstone davey priestley excellent quite gentle theory partial orders 
samson abramsky achim jung reading material covered chapter section davey priestley johnstone section plotkin gunter winskel section jung jung section smyth plotkin freyd freyd pitts pitts section plotkin smyth winskel heckmann section abramsky abramsky abramsky ong ong hennessy jensen jensen smyth 
applications domain theory enormous literature semantics programming languages substantial amounts domain theory 
simply list number useful textbooks schmidt tennent gunter winskel 
addition number applications domain theory arisen interpretation static program analysis abramsky burn abramsky jensen see article interpretation handbook databases buneman buneman computational linguistics pereira shieber pollard artificial intelligence rounds zhang fractal image generation edalat foundations analysis edalat 
central importance domain theory indicated number chapters handbook substantial domain theoretic ideas topology algebraic semantics semantics types correspondence operational denotational semantics interpretation effective structures 
abadi plotkin abadi plotkin 
model polymorphism recursive types 
fifth annual ieee symposium logic computer science pages 
ieee computer society press 
abramsky jagadeesan abramsky jagadeesan 
games full completeness multiplicative linear logic 
journal symbolic logic 
appear 
abramsky jagadeesan abramsky jagadeesan 
new foundations geometry interaction 
information computation 
appear 
abramsky jensen abramsky jensen 
relational approach strictness analysis polymorphic functions 
conference record th annual acm symposium principles programming languages pages 
acm press 
abramsky ong abramsky ong 
full abstraction lazy lambda calculus 
information computation 
abramsky abramsky 
domain theory logic observable properties 
phd thesis university london 
abramsky abramsky 
interpretation logical relations kan extensions 
journal logic computation 
abramsky abramsky 
generalized kahn principle asynchronous networks 
main melton mislove schmidt editors mathematical foundations programming semantics volume lecture notes computer science pages 
springer verlag 
abramsky abramsky 
lazy lambda calculus 
turner editor research topics functional programming pages 
addison wesley 
abramsky abramsky 
domain equation bisimulation 
information computation 
abramsky abramsky 
domain theory logical form 
annals pure applied logic 
abramsky abramsky 
interaction categories communicating sequential processes 
roscoe editor classical mind essays honour hoare chapter pages 
prentice hall international 
domain theory aczel aczel 
inductive definitions 
barwise editor handbook mathematical logic volume studies logic foundations mathematics pages 
north holland 
ad amek ad amek 
automata algebras categories 
kluwer academic publishers 
ad amek ad amek nelson 
tree constructions free continuous algebras 
journal computer system sciences 
arden arden 
theory computing machine design chapter delayed logic finite state machines 
univ michigan press 
barendregt barendregt 
lambda calculus syntax semantics 
northholland revised edition 
bekic bekic 
definable operations general algebras theory automata flowcharts 
technical report ibm laboratory vienna 
reprinted bekic programming languages definition volume lecture notes computer science pages 
springer verlag 
bekic bekic 
mathematical theory programs 
technical report tr ibm laboratory vienna 
berardi berardi 
retractions di domains model type type 
information computation 
berry berry 
stable models typed calculi 
proceedings th international colloquium automata languages programming volume lecture notes computer science pages 
springer verlag 
berry berry 
mod eles compl ement ad des lambda typ es 
th ese de doctorat etat universit paris vii 
boudol boudol 
lambda calculi strict parallel functions 
technical report inria sophia antipolis 
appear information computation 
buneman buneman davidson 
semantics complex objects approximate queries 
principles database systems 
acm 
buneman buneman jung ohori 
powerdomains generalize relational databases 
theoretical computer science 
burn burn hankin abramsky 
strictness analysis higher order functions 
science computer programming 
coquand coquand gunter winskel 
di domains model polymorphism 
third workshop mathematical foundations programming language semantics pages 
springer verlag 
coquand coquand 
categories embeddings 
theoretical computer science 
crole pitts crole pitts 
new foundations fixpoint computations fix logic 
information computation 
curien 
curien 
categorical combinators sequential algorithms functional programming 
progress theoretical computer science 
birkhauser second edition 
davey priestley davey priestley 
lattices order 
cambridge university press cambridge 
davies davies hayes rousseau 
complete lattices generalized cantor theorem 
proceedings ams 
de bakker scott de bakker scott 
theory programs 
notes ibm seminar vienna 
droste gobel droste gobel 
universal domains theory denotational semantics programming languages 
ieee symposium logic computer science pages 
ieee computer society press 
droste gobel droste gobel 
universal information systems 
international journal foundations computer science 
droste gobel droste gobel 
universal domains amalgamation property 
mathematical structures computer science 
samson abramsky achim jung edalat smyth edalat smyth 
categories framework solving domain equations 
theoretical computer science 
edalat edalat 
domain theory integration 
draft 
edalat edalat 
dynamical systems measures fractals domain theory extended 
burn gay ryan editors theory formal methods workshops computing pages 
springer 
ehrhard ehrhard 
strongly stable model linear logic 
mathematical structures computer science 
ehrig mahr ehrig mahr 
fundamentals algebraic specification volume eatcs monographs theoretical computer science 
springer verlag 
ern ern 
posets isomorphic extensions 
order 
ershov ershov 
theory spaces english translation 
algebra logic 

colimits category cpo 
technical report kansas state university 
freyd freyd rosolini scott 
extensional pers 
logic computer science pages 
ieee computer society press 
freyd freyd 
algebraically complete categories 
carboni rosolini editors como category theory conference volume lecture notes mathematics pages 
springer verlag 
freyd freyd 
remarks algebraically compact categories 
fourman johnstone pitts editors applications categories computer science volume lecture notes pages 
cambridge university press 
gierz gierz hofmann keimel lawson mislove scott 
compendium continuous lattices 
springer verlag 
ginsburg rice ginsburg rice 
families languages related algol 
journal acm 
girard 
girard 
system variable types fifteen years 
theoretical computer science 
girard 
girard 
linear logic 
theoretical computer science 
goguen goguen thatcher wagner 
initial algebra approach specification correctness implementation data types 
yeh editor current trends programming methodology iv data structuring pages 
prentice hall 
graham graham 
closure properties probabilistic powerdomain construction 
main melton mislove schmidt editors mathematical foundations programming language semantics volume lecture notes computer science pages 
springer verlag 
gunter jung gunter jung 
coherence consistency domains 
third annual symposium logic computer science pages 
computer society press ieee 
gunter scott gunter scott 
semantic domains 
jan van leeuwen editor handbook theoretical computer science volume formal models semantics pages 
elsevier science publishers amsterdam 
gunter gunter 
largest order axiomatizable cartesian closed category domains 
symposium logic computer science pages 
ieee computer society press 
gunter gunter 
mixed power domain 
theoretical computer science 
gunter gunter 
semantics programming languages 
structures techniques 
foundations computing 
mit press 
hausdorff hausdorff 
der mengenlehre 

heckmann heckmann 
power domain constructions 
phd thesis universitat des saarlandes 
heckmann heckmann 
power domain constructions 
science computer programming 
domain theory heckmann heckmann 
observable modules power domain constructions 
droste gurevich editors semantics programming languages model theory volume algebra logic applications pages 
gordon breach science publishers 
heckmann heckmann 
power domains second order predicates 
theoretical computer science 
hennessy plotkin hennessy plotkin 
full abstraction simple parallel programming language 
cvar editor mathematical foundations computer science volume lecture notes computer science 
springer verlag 
hennessy hennessy 
fully denotational model higher order processes 
eighth annual ieee symposium logic computer science pages 
ieee computer society press 
herrlich strecker herrlich strecker 
category theory 
allyn bacon 
hoffmann 
hoffmann 
continuous posets prime spectra completely distributive complete lattices hausdorff 

hoffmann editors continuous lattices volume lecture notes computer science pages 
springer verlag 
hofmann mislove hofmann mislove 
local compactness continuous lattices 

hoffmann editors continuous lattices proceedings bremen volume lecture notes mathematics pages 
springer verlag 
hofmann mislove hofmann mislove 
compact hausdorff lambda models degenerate 
technical report tulane university 

non stable models linear logic 
phd thesis university utrecht 
sato ch 
sato 
retracts 
form continuous lattice solution scott problem 
theoretical computer science 

convex powerdomains information computation 

powerdomain construction 
main melton mislove schmidt editors mathematical foundations programming semantics volume lecture notes computer science pages 
springer verlag 

convex powerdomains ii 
information computation 
huth huth 
cartesian closed categories domains space proj 
brookes main melton mislove schmidt editors mathematical foundations programming semantics volume lecture notes computer science pages 
springer verlag 
huth huth 
linear domains linear maps 
mislove editor mathematical foundations programming semantics lecture notes computer science 
springer verlag 
appear 
poign poign 
note inconsistencies caused fixpoints cartesian closed category 
theoretical computer science 
hyland hyland 
steps synthetic domain theory 
carboni rosolini editors conference category theory volume lecture notes mathematics pages 
springer verlag 
isbell isbell 
atomless parts spaces 
mathematica 
isbell isbell 
completion construction johnstone 
proceedings american mathematical society 

lemma directed sets 

japanese 
jensen jensen 
strictness analysis logical form 
hughes editor fifth acm conference functional programming languages computer architecture volume lncs 
springer verlag 
jensen jensen 
disjunctive strictness analysis 
seventh annual ieee symposium logic computer science pages 
ieee computer science press 
samson abramsky achim jung johnstone johnstone 
scott sober 

hoffmann editors continuous lattices volume lecture notes mathematics pages 
springer verlag 
johnstone johnstone 
stone spaces volume cambridge studies advanced mathematics 
cambridge university press cambridge 
johnstone johnstone 
point pointless topology 
bulletin american mathematical society 
jones plotkin jones plotkin 
probabilistic powerdomain evaluations 
logic computer science pages 
ieee computer society press 
jones jones 
probabilistic non determinism 
phd thesis university edinburgh edinburgh 
published technical report 
cst 
jung jung 
new results hierarchies domains 
main melton mislove schmidt editors mathematical foundations programming language semantics volume lecture notes computer science pages 
springer verlag 
jung jung 
cartesian closed categories domains volume cwi tracts 
centrum voor wiskunde en informatica amsterdam 
jung jung 
classification continuous domains 
logic computer science pages 
ieee computer society press 
kahn plotkin kahn plotkin 

technical report 
kahn plotkin kahn plotkin 
concrete domains 
theoretical computer science 
translation technical report 

fully effective solutions recursive domain equations 
cvar editor mathematical foundations computer science volume 
springer verlag 
lecture notes computer science 
keimel appear keimel 
direct proof hofmann mislove theorem 
proceedings ams appear 
kleene kleene 
metamathematics 
van nostrand 
kock kock 
monads symmetric monoidal closed categories 
archiv der mathematik 
kock kock 
strong functors monoidal monads 
archiv der mathematik 
kock kock 
synthetic differential geometry volume lms lecture notes 
cambridge university press 
krasner krasner 
un type ensembles semi es ses avec une hypoth ese de weil 
bulletin de la de france 
lassez 
lassez nguyen sonenberg 
fixed point theorems semantics folk tale 
information processing letters 
lawson lawson 
duality continuous posets 
houston journal mathematics 
lehmann smyth lehmann smyth 
algebraic specification data types synthetic approach 
mathematical systems theory 
macqueen macqueen plotkin sethi 
ideal model recursive polymorphic types 
information control 
main main 
free constructions powerdomains 
melton editor mathematical foundations programming semantics volume lecture notes computer science pages 
springer verlag 
markowsky markowsky 
chain complete sets directed sets applications 
algebra universalis 
markowsky markowsky 
categories chain complete posets 
theoretical computer science 
markowsky markowsky 
motivation generalization scott notion continuous lattice 

hoffmann editors continuous lattices volume lecture notes mathematics pages 
springer verlag 
domain theory mccarty mccarty 
realizability recursive mathematics 
phd thesis oxford university 
meseguer meseguer 
order complete universal algebra enriched functorial semantics 
nski editor fundamentals computation theory volume lecture notes computer science pages 
springer verlag 
milne strachey milne strachey 
theory programming language semantics 
chapman hall london 
milner tofte milner tofte 
commentary standard ml 
mit press 
milner milner tofte harper 
definition standard ml 
mit press 
moggi moggi 
notions computations monads 
information computation 
nelson nelson 
free continuous algebras 
hoffmann editors continuous lattices volume lecture notes mathematics pages 
springer verlag 
nivat reynolds nivat reynolds editors 
algebraic methods computer science 
cambridge university press 
nu ler 
nu ler 
fur nicht programmiersprachen 
phd thesis universitat gh essen 
ong 
ong 
nondeterminism functional setting 
eighth annual ieee symposium logic computer science pages 
ieee computer society press 
park park 
fixpoint induction proofs program 
meltzer michie editors machine intelligence volume pages 
edinburgh university press 
pereira shieber pereira shieber 
semantics grammar formalisms seen computer languages 
proceedings th international conference computational linguistics pages 
association computational linguistics 
phoa phoa 
domain theory realizability toposes 
phd thesis university cambridge 
pitts pitts 
induction principle recursively defined domains 
technical report university cambridge computer laboratory 
appear theoretical computer science 
pitts pitts 
relational properties recursively defined domains 
logic computer science pages 
ieee computer society press 
pitts pitts 
relational properties recursively defined domains 
technical report cambridge university 
platek platek 
new foundations recursion theory 
phd thesis stanford university 
plotkin plotkin 
powerdomain construction 
siam journal computing 
plotkin plotkin 
post graduate lecture notes advanced domain theory incorporating pisa notes 
dept computer science univ edinburgh 
plotkin plotkin 
lectures predomains partial functions 
notes course center study language information stanford 
plotkin plotkin 
type theory recursion 
eigth annual ieee symposium logic computer science page 
ieee computer society press 
poign poign 
basic category theory 
abramsky gabbay maibaum editors handbook logic computer science vol 
pages 
oxford university press 
pollard pollard 
unifying partial descriptions sets 
hanson editor information language cognition volume vancouver studies cognitive science 
university british columbia press 

powerdomain database semantics 
editors mathematical foundations computer science volume lecture notes computer science pages 
samson abramsky achim jung 
subdirect union representation completely distributive complete lattices 
proc 
ams 

tight galois connections complete distributivity 
trans 
ams 
robinson rosolini robinson rosolini 
categories partial maps 
information computation 
rosolini rosolini 
continuity effectiveness topoi 
phd thesis oxford university 
rounds zhang rounds zhang 
domain theory meets default logic 
journal logic computation 
appear 

cpo measures nondeterminism 
theoretical computer science 

algebras generalized power constructions 
doctoral thesis technische hochschule darmstadt 
pp 
schmidt schmidt 
denotational semantics 
allyn bacon 
scott scott 
type theoretic alternative iswim cuch 
manuscript university oxford 
scott scott 
outline mathematical theory computation 
th annual princeton conference information sciences systems pages 
scott scott 
lattice flow diagrams 
editor symposium semantics algorithmic languages volume lecture notes mathematics pages 
springer verlag 
scott scott 
continuous lattices 
lawvere editor toposes algebraic geometry logic volume lecture notes mathematics pages 
springer verlag 
scott scott 
data types lattices 
siam computing 
scott scott 
relating theories lambda calculus 
hindley seldin editors curry essays combinatory logic lambda calculus formalism pages 
academic press 
scott scott 
lectures mathematical theory computation 
monograph prg oxford university computing laboratory oxford 
scott scott 
domains denotational semantics 
nielson schmidt editors international colloquium automata languages programs volume lecture notes computer science pages 
springer verlag 
scott scott 
type theoretical alternative iswim cuch 
theoretical computer science 
reprint manuscript written 
smyth plotkin smyth plotkin 
category theoretic solution recursive domain equations 
siam computing 
smyth smyth 
effectively domains 
theoretical computer science 
smyth smyth 
powerdomains 
journal computer systems sciences 
smyth smyth 
largest cartesian closed category domains 
theoretical computer science 
smyth smyth 
powerdomains predicate transformers topological view 
diaz editor automata languages programming volume lecture notes computer science pages 
springer verlag 
smyth smyth 
finite approximation spaces 
pitt abramsky poign rydeheard editors category theory computer programming volume lecture notes computer science pages 
springer verlag 
smyth smyth 
topology 
abramsky gabbay maibaum editors handbook logic computer science vol 
pages 
oxford university press 
stoughton stoughton 
fully models programming languages 
research notes theoretical computer science 
pitman wiley 
domain theory stoy stoy 
denotational semantics scott strachey approach programming language theory 
mit press 
taylor taylor 
recursive domains indexed category theory polymorphism 
phd thesis cambridge university 
taylor taylor 
algebraic approach stable domains 
pure applied algebra 
taylor taylor 
fixed point property synthetic domain theory 
th lics conference pages 
ieee computer society press 
tennent tennent 
semantics programming languages 
prentice hall 

characterization congruence lattices lattices 
technical report technische hochschule darmstadt 
vickers vickers 
topology logic 
cambridge tracts theoretical computer science 
cambridge university press 
vietoris vietoris 

fur mathematik und physik 
vietoris vietoris 
ordnung 
fur mathematik und physik 
weihrauch weihrauch 
auf cpo 
technical report technische hochschule aachen 
winskel winskel 
powerdomains modality 
karpinski editor foundations computation theory volume lecture notes computer science pages 
springer verlag 
winskel winskel 
event structures 
de bakker editor linear time branching time partial order logics models concurrency volume lecture notes computer science pages 
springer verlag 
winskel winskel 
formal semantics programming languages 

mit press 
zhang 
zhang 
logic domains 
progress theoretical computer science 
birkhauser 
index generated lattice irreducible prime basis adjunction admissible action relations admissible predicate admissible predicates admissible relation algebraic dcpo algebraic domain approximable relation approximants relative arithmetic lattice basis bc domain bifinite domain bilimit bottom bounded complete domain cartesian product chain closure operator closure system coalesced sum cofinal subset coherent algebraic prelocale coherent domains coherent space compact element complete lattice completely irreducible completely prime completely distributive lattice completely prime filter continuous dcpo continuous domain continuous embedding projection pair continuous function continuous functor continuous insertion closure pairs continuous section retraction pair convex hull convex convex set dcpo dcpo algebras dcpo semilattice semilattice directed set directed complete partial order distributive lattice domain logic domain prelocale domain algebras pair effectively egli milner relation expanding sequence expanding system extensional action relations algebra filter filtered set finite amalgam finite element finite mub property finitely separated function flat domains formal union frame frame distributivity law frame homomorphism fs domain hasse diagrams hoare powerdomain hoare idl pairs ideal ideal completion idempotent deflation index set net inductive closure system infimum inflationary semilattices interpolation property irreducible closed set index isolated element join join approximable relation joinable family kernel operator domain largest element lattice lawson topology element lenses lifting limit colimit coincidence line diagrams localic description locally continuous functor logical action relations lower adjoint lower powerdomain lower lower set mub maximal element meet minimal upper bound monotone function monotone function space monotone net monotone retract monotone section retraction pair mub closure mub complete poset multiplicative order approximation partially ordered set plotkin powerdomain plotkin plotkin plotkin order point complete lattice pointed poset pointwise order poset pre isomorphism preorders prime filter prime continuous lattice principal filter principal ideal projection property quotient domain reduct round ideal pair saturated set schizophrenic object scott closed set scott domain scott open set scott topology semilattice smash product smyth powerdomain sober spatial specialization order spectral space spectrum step function strict dcpo algebra strict function strict homomorphism strongly separated function sub domain sub prelocale subnet supremum supremum net topological egli milner ordering upper adjoint upper bound upper powerdomain upper set weak upper topology 
