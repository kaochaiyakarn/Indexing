non determinism hierarchical control abduction resource oriented deductive planning ute sigmund fg intellektik fb informatik technische hochschule darmstadt darmstadt germany mail ute intellektik informatik th darmstadt de resource oriented approaches planning build key idea treat facts situation resources consumed produced actions 
approaches change facts caused application action modelled need state frame actions explicitly 
originally approaches restricted conjunctive planning problems initial situation goal situation conditions effects actions described restricted non idempotent conjunctions facts 
extend equational logic programming approach resource oriented planning able handle non determinism 
resource oriented approaches planning time memory required generate plans quite excessive 
able handle reasonably complex problems improve performance planning system 
propose ways achieve 
augmenting approach hierarchical control distinguishing properties critical success plan details 
restricting planning domains abduction part meta level search control 
advantages deductive approaches planning offer ability integrate arbitrary logical theories planning process 
logic possible reason actions change causality reason planning process intentions knowledge beliefs agents interactions dependencies actions goals furthermore deductive approaches exploit powerful search procedures domain independent heuristics developed field automated deduction logic programming 
deductive approaches planning deal difficulties 
logic model situations actions causality requires change knowledge author supported esprit basic research action ii 
time 
deductive planning situation state world certain instant time modelled collection facts believed hold situation 
important property facts truth values may change result application action 
precisely action causes transition world situation subsequent situation 
subsequent situation facts held initial situation may longer hold 
hand additional facts may caused action 
imagine situation blocksworld blocks table robot hand empty 
robot performs action picking result situation longer table robot hand longer empty 
facts removed description situation 
hand add fact hand holds model change describe dependency facts situations logic john mccarthy pat hayes proposed situation calculus :10.1.1.85.5082
predicates functions additional argument representing situation predicate holds function applicable 
manipulating additional argument john mccarthy pat hayes able reason change facts result application actions 
unfortunately situation calculus leads known frame problem formalize assumption certain fact situation change value explicitly caused action requires state additional called frame axioms non monotonic logic common sense law inertia 
resource oriented approaches planning offer efficient representation situations actions causality 
approaches change facts caused application action modelled need state frame axioms explicitly 
approaches built key idea treat facts situation resources consumed produced actions 
precisely situation corresponds multiset facts 
facts consumed deleted multiset conditions action satisfied 
produced added multiset effects application action 
multisets facts leads considerable gain efficiency representation situations 
practice concerned question resources type got resources got 
suppose planning domain contains quarters 
look purse distinguish quarters different possible situations 
care number quarters represent situations multisets facts possibilities just got quarters 
spending quarters result exactly situation possibly depending quarter spend 
new deductive approaches planning proposed formalize idea resources 
linear connection method equational horn logic multiplicative fragment linear logic 
turned conjunctive planning problems picking effect fact table context concept linearity refers property logical calculi linear non approaches essential equivalent 
equational logic approach reasoning situations actions causality 
section extend approach able handle non determinism describing actions alternative effects 
basic ideas extension 
introduce idempotent disjunction description situations pre postconditions actions 
able handle reasonably complex problems improve performance planning system 
section propose ways 
augmenting approach hierarchical control distinguishing properties critical success plan details 
restricting planning domains abduction part meta level search control 
handling non determinism equational logic programming approach originally equational logic programming approach planning restricted conjunctive planning problems initial situation goal situation conditions effects actions described approach restricted non idempotent conjunctions facts 
approach facts hold situation represented elementary terms situations described situation terms connecting elementary terms binary function symbol ffi associative commutative admits unit element 
look example blocksworld situation blocks table robot hand empty represented situation term table ffi table ffi empty hand function ffi interpreted conjunction contrast classical conjunction idempotent 
instance situation term table ffi table equal term table 
represents situation blocks type table 
actions described specifying preconditions effects situation terms ternary predicate action 
instance action picking block described clause action table ffi empty hand pick holding hand 
action applicable conditions action part description idempotent connectives modelling restricted resources 
confused similarly named concepts planning linear plans linearity assumption elementary terms non variable terms contain function symbol ffi constant constant represents empty situation facts central planning problem believed hold 
prolog syntax 
constants predicates represented lower case letters variables denoted upper case letters 
free variables assumed universally quantified 
current situation 
application action yields subsequent situation conditions replaced effects action 
causation planning process specified ternary predicate causes interpreted declaratively execution sequence actions causes transformation situation situation clauses describing planning process 
clause states empty sequence actions changes 
termination clause conjunctive planning programs 
causes second clause defines entailment predicate causes non empty list actions 
causes action ffi causes ffi predicate denotes equality equational theory 
conjunctive planning problems consists theory ac function ffi sequence actions causes transition initial situation goal situation conditions satisfied 
action conditions action part description initial situation 
variable body bound initial situation conditions addition sequence actions transforms subsequent situation viz 
effects action goal situation facts current situation part conditions action bound variable remain unchanged technical frame problem solved 
planning problem represent query causes initial situation goal situation planning program 
queries answered resolution 
modelling realistic examples sufficient able describe transitions situation subsequent situation 
application action tossing coin example may different alternative effects 
want develop plan solves certain goal matter result 
involves agent executes plan observes effects actions real world executes subplan depending observed effects 
extend approach able handle non determinism requires place represent sets alternative situations 
done help binary function symbol associative commutative idempotent admits unit element 
words represents aci function intended meaning connect alternatives 
instance term heads tails denotes set obtained action tossing coin executed term denotes set represents fact exactly alternative heads regard facts efficient unification procedure planning problems resources term form having resources resources natural require ffi distributes 
law distributivity ffi ffi ffi holds 
reader invited observe distribute ffi contradicts intended interpretation 
unit element function symbol interpreted impossible situation 
require axiom called law impossibility 
situation impossible situation yields impossible situation 
ffi 
rules express disjunctive planning problems form defined function symbol may form situation terms 
illustrate extension want formalize problem 
suppose room open window open door wind closes 
advance don know 
described clause action open door ffi open window wind closed door ffi open window open door ffi closed window want leave room door open just walk formalized action room ffi open door leave outside room ffi open door door closed open 
done executing action action closed door open open door question want leave room wind formalized planning problem causes room ffi open door ffi open window wind outside room ffi variable state goal situation fully specified just require outside room 
facts may hold goal situation 
queries answered resolution 
equational theory consists union equational theory ac operator ffi theory aci operator law distributivity law impossibility 
built unification procedure 
resolving goal clause rule fact yields resolvent causes room ffi closed door ffi open window open door ffi closed window outside room ffi wind may closed window door alternative situations 
intend model cautious agent looking plans goals achieved matter situation solve problem alternatives 
done splitting rule 
causes cond causes causes term cond conditional read agent observes plan solves problem agent observes plan solves problem 
noted splitting action wind leave open general rule added equational logic program allow alternative subplans 
resolving modulo yields substitution fp cond open window ffi closed door ffi room open door ffi closed window ffi room resolvent causes open window ffi closed door ffi room outside room ffi causes open door ffi closed window ffi room outside room ffi second subgoal query resolved rule leading binding fp 
leave solve subgoal resolve rule rule leads substitution fp 
open leave receive resolvent causes open window ffi open door ffi outside room outside room ffi causes closed window ffi open door ffi outside room outside room ffi subgoals resolved termination clause problem solved 
bound empty plan composing substitutions obtained refutation obtain computed answer substitution fp 
wind cond open window ffi closed door ffi room open leave open door ffi closed window ffi room leave reader invited observe bound situation term open window ffi open door resolving subgoal closed window ffi open door second 
composing substitutions bound disjunctive situation term open window closed window ffi open door 
precisely desired answer 
general cases termination clause immediately terminate refutation goal situation contains alternatives 
clause causes states disjunctive goal solved current situation alternatives described goal situation addition may need second termination rule viz 
causes gamma causes causes states problem solved solved alternative separately 
ways improve performance resource oriented planning resource oriented approaches planning time memory required generate plans quite excessive 
planning deductive approaches complex search problem viz 
find possible orderings actions agent perform planning environment result achieving specified goal 
general purpose search heuristics depth search backtracking general problem computationally intractable 
solution reasonably complex problems requires attention better guide search 
way achieve distinguish properties critical success plan details 
realized hierarchical approaches planning 
hierarchical planning idea construct plan details problem left unspecified refine components detailed subplans got completely elaborated solution original problem 
example want plan trip frankfurt london consider possibilities get 
choose going car ferry channel travelling train flying airplane probably take time 
instance decided fly take care get airport get tickets 
equational logic approach planning hierarchical planning formalized defining descriptions actions depending levels abstraction description 
course take care abstraction preserve structure original problem 
plan constructed level able composed plan elements solved independently lower levels abstraction 
ensures find solution ground level solution levels solution original problem 
instance resources hand produced actions planning domain hand consumed actions retained action description highest level 
different descriptions actions levels abstraction require change world model 
higher levels abstraction unimportant details simply ignored 
bound example unfortunately money normally spent different purposes 
situation variable remain unchanged 
order formalize levels abstraction representation actions extended argument level abstraction description 
possibility reduce search space resource oriented deductive approaches planning restrict planning domains 
examination actions applicable current situation consider actions directly related problem want solve 
instance want plan washing laundry reason get washing powder washing machine travel london instance 
may necessary apply action preconditions satisfied current situation produced application actions taken account 
example need coin rent washing machine got money 
assume preconditions probably satisfied solving planning problem corresponding preconditions different planning domain 
example reason possibilities change money 
requires record assumptions applying action preconditions satisfied 
done assuming current situation planning problem completely specified 
abduction determine facts contained situation necessary hold order find solution 
context important take care abduction principle 
possible facts violate integrity constraints planning domain 
possible soon needed facts goal situation abduced initial situation 
sense want determine missing current situation produced action domain 
possible facts contained effects action taken account 
underlying logic planning approaches resource logic situations correspond multisets facts possible facts contained description current situation 
example need coins rent washing machine possible fact second coin got current situation 
concepts abduction integrated approach planning specifying situations incompletely restriction unification situation variable discussion shown equational logic programming approach resource oriented planning extended handle non determinism 
introduced new aci function intended meaning connect alternatives 
rules express disjunctive planning problems form function symbol may form situation terms may need additional termination rules 
extension equational theory consists union equational theory ac operator ffi theory aci operator law distributivity law impossibility 
built unification procedure 
efficient unification algorithm restricted problems appear applications developed basis interpretative semantics situation terms containing function symbols ffi sets multisets elementary terms 
approach disjunctive planning equational horn logic admits standard semantics 
furthermore proposed ways improve performance resource oriented planning approaches 
augmenting hierarchical control distinguishing properties critical success plan details 
realized extending representation action descriptions 
restricting planning domains abduction 
elaborated formal description ideas 
allen hendler tate 
readings planning 
morgan kaufmann san mateo 

bibel 
deductive solution plan generation 
new generation computing 

gro holldobler sigmund thielscher 
disjunction linear logic programming 
miller editor proceedings workshop linear logic logic programming pages 
ms cis univ pennsylvania school engineering applied science computer information science department 

gro holldobler sigmund thielscher 
disjunction plan generation equational logic programming 
editor zum 
workshop und pages 
der gmd january 

holldobler sigmund thielscher 
disjunction resource oriented deductive planning 
miller editor proceedings international logic programming symposium ilps page vancouver october 
mit press 
poster 

gro holldobler 
linear deductive planning 
technical report aida fg intellektik fb informatik th darmstadt august 

gro holldobler sigmund thielscher 
equational logic programming actions change 
proc 
joint international conference symposium logic programming jicslp 

hayes 
frame problem related problems artificial intelligence 
jones editors artificial human thinking 
bass publishers 
published 

holldobler 
foundations equational logic programming volume lecture notes computer science 
springer verlag 

holldobler 
new deductive approach planning 
new generation computing 

lifschitz 
formal theories action 
international joint conference artificial intelligence pages 
morgan kaufmann publishers 


generating plans linear logic 
pr publication centre scientifique polytechnique universite paris nord december 

mccarthy 
situations actions causal laws 
stanford artificial intelligence project memo 

mccarthy 
applications circumscription formalizing common sense knowledge 
artificial intelligence 

mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence vol 
pages 
edinburgh university press edinburgh 


rosenschein 
plan synthesis logical perspective 
proc 
seventh int 
joint conf 
artif 
intell vancouver british columbia pages 

sacerdoti 
planning abstraction spaces 
proc 
third int 
joint conf 
artif 
intell stanford california pages 


plan generation linear deduction 
fg intellektik fb informatik th darmstadt 
darmstadt germany 

sigmund 
llp logische programmierung 
master thesis intellektik informatik th darmstadt 

sigmund 
hierachical control abduction resource oriented deductive planning 
technical report intellektik th darmstadt germany 
preparation 

sussman 
computer model skill acquisition 
elsevier publishing 
