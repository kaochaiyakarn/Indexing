intelligent agents intrusion detection guy johnny wong honavar les miller iowa state university ames iowa supported part applied mathematical sciences program ames laboratory department energy contract number eng 
focuses intrusion detection countermeasures respect widely operating systems networks 
design architecture intrusion detection system built distributed agents proposed implement intelligent system data mining performed provide global temporal views entire networked system 
starting point agent intelligence system research machine learning system call traces privileged sendmail program unix 
rule learning algorithm classify system call traces intrusion detection purposes show results 
experience managing networks computer systems known vulnerabilities resulted investigation problem detecting misuse computer systems 
effort required monitor systems networks manually easily detect attempts misuse successful attacks help intelligent intrusion detection systems 
propose artificially intelligent system intrusion detection countermeasures computer systems network environment data mining technology 
system built distributed intelligent agents apply data mining approach intrusion detection 
data gathering agents render system logs activity data common formats low level agents classify activities provide data current classification states higher level agents implement data mining entire knowledge data sources system 
related projects related intrusion detection project include dids computer immunology jam emerald 
distributed intrusion detection system dids uses combination host monitors local area network monitors monitor system network activities centralized director aggregating information monitors detect intrusions 
similar agent system intrusion detection countermeasures uses multiple monitors artificial intelligence algorithms determine severity events 
dids differs system intelligence purely centralized agent technology 
computer immunology project explored designs intrusion detection systems effectively detect defend intrusions networked computer system manner similar immune system animals 
portion project researched method provide component immune system computers 
developed sense self privileged programs creating database normal abnormal system call traces instances execution programs 
java agents meta learning jam project similar proposed agent system intrusion detection countermeasures intelligent distributed java agents learn models fraud intrusive behavior 
knowledge learned distributed java agents exchanged help train agents identify attacks combined knowledge 
jam project built done forrest area identifying attacks privileged programs 
portion derives idea detecting intrusions system call traces privileged programs :10.1.1.134.4855
sri emerald project addresses problems network intrusions tcp ip data streams 
emerald design similar dids network surveillance monitors observe local area network traffic submit analysis reports enterprise monitor correlates reports 
dids emerald appears concentrate intelligence central system incorporate agent technology 
design implementation agent system system intelligent agents collaborative information mobile agent technologies developed implement prototype intrusion detection system 
goals system design learn detect intrusions hosts networks individual agents targeted particular subsystems agent technologies intelligently process audit data sources mobile agents agents collaborate share information suspicious events determine relaxed apply data mining techniques heterogeneous data knowledge sources identify react coordinated attacks multiple subsystems 
notable feature intrusion detection system data mining support offers gathering operating data knowledge sources entire observed system 
system identify sources concerted multistage attacks initiate countermeasures response attack provide supporting documentation system administrators help procedural legal action taken attacker 
example attack involving subsystem combined nfs rlogin attack 
step attacker determine nfs rhosts file hosts equiv assuming appropriate filesystems exported unix system 
nfs attacker re write file give login privileges attacked host 
rlogin untrusted host attacker able login account attacked host attacked host mistakenly trusts attacker 
point attacker may able compromise system 
intrusion detection system data mining able correlate attacks help identify origin attack support system management responding attack 
system design components agent intrusion detection system shown 
distributed data cleaning agents process data obtained log files network protocol monitors system activity monitors heterogeneous systems 
lower level layer agents just data cleaning agents system architecture form level intrusion detection 
mobile agent technology agents travel associated data cleaning agents gather information classify data determine suspicious activity occurring 
jam system agents able variety classification algorithms choice depend data 
jam system agents level collaborate cooperatively set suspicion level determine suspicious action severe presence suspicious activity 
top level intelligent agents maintain data warehouse combining knowledge data lower layer agents applying data mining algorithms discover associations suspicious events occur frequency patterns 
data warehouse provide global temporal view knowledge activity monitored distributed system believe system help train system administrators spot defend attacks assist system administrators developing better protections countermeasures systems identifying new attacks 
user interface agent intrusion detection system directs operation agents system shows status reported lowlevel agents 
data warehouse portion system developed user interface provide user interface data warehouse low level agent system calls low level agent network low level agent authentication low level agents functions data cleaner system calls data cleaner network data cleaner authentication events data cleaners functions architecture intrusion detection system access features including managing knowledge warehouse applying mining functions discover associations correlations stored knowledge 
system call traces develop prototype intelligent agent intrusion detection system data available university new mexico containing system call traces normal abusive sendmail program run sunos 
shown system call traces identify anomalous privileged programs determine class attacks mounted system 
forrest developed databases system calls normal anomalous uses privileged programs sendmail lpr 
showed database known sequences developed reasonably sized set sendmail executions showed intrusive behavior determined comparing system call sequences database known sequences 
data forrest project show rule learning algorithm learn classify normal abnormal system call sequences :10.1.1.134.4855
university new mexico system call data simply set files consisting lines giving process id number pid system call number 
shows window length step size system call trace sequence varied different experiments determine best window length :10.1.1.134.4855
training data window classified normal matches window obtained proper operations sendmail window classified abnormal 
example system call windows training labels shown table 
system call sequences label normal normal normal abnormal abnormal table sample system call windows training labels duplicated jam approach grouping system calls sequences ripper learning algorithm classify system call windows :10.1.1.134.4855
jam approach quality learned classification rules determined gap normal sendmail testing traces abnormal trace lowest abnormal regions score 
experiment computed gap smaller seen experiment dangerous attacks sscp syslog local syslog remote clearly identified approach percentage abnormal regions order magnitude larger percent abnormal regions seen normal sendmail :10.1.1.134.4855
second experiment different technique assemble training data computed gap smaller seen lee experiment attribute discrepancies results due differences selection training data explain detail :10.1.1.134.4855
extending system call experiment feature vector technique proposed application system call traces single bit indicate particular sequence appeared sequence system calls 
feature vector number learning algorithms allowing easily compare performance algorithms ripper 
sequence window set normal sequences abnormal sequences seen sendmail system call data 
bit vector length feature vector sendmail traces 
feature vectors computed pid basis sendmail system call traces 
training data selection technique feature vector technique previous experiments 
pid files normal traces pid files selected anomalous traces training data 
set abnormal training data quite small records proportion set normal training data records set abnormal training data duplicated times abnormal records training data opposed normal records 
ripper quickly learned simple rule set consisting fairly simple rules opposed rules ripper learned previous experiments 
rule set learned ripper data produced results shown table total number feature vectors number vectors predicted abnormal ripper percentage predicted abnormal feature vectors shown 
feature vector computed process trace tends feature vectors 
trace name total feature vectors feature vectors predicted abnormal feature vectors predicted abnormal decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm sscp sscp sscp syslog local syslog local syslog remote syslog remote normal sendmail table results learning rules feature vectors idea feature vector approach predict processes involved intrusion abnormal 
experiment see possible tends clearly defined results previous experiments 
types learning experiments ripper system call data sendmail traces appeared 
classifying processes windows predictions feature vector approach provide desired capability determine intrusive sendmail program taken place 
distributed intelligent agent approach intrusion detection countermeasures described 
sendmail system call traces showed machine learning approach intrusion detection component distributed system 
portion jam project area duplicated different data representation feature vector approach 
includes study feature subset selection approach shows potential improving classification selecting influential features training set 
bibliography bradshaw software agents software agents bradshaw 
ed cambridge ma mit press 
cohen fast effective rule induction machine learning th international conference lake tahoe ca 
spafford 
defending computer system autonomous agents proceedings th national information systems security conference october 
dorothy denning intrusion detection model ieee transactions software engineering page february 
forrest hofmeyr somayaji longstaff sense self unix processes proceedings ieee symposium security privacy los alamitos ca pages 
forrest hofmeyr somayaji computer immunology communications acm vol 
pp 
november 
lee stolfo :10.1.1.134.4855
data mining approaches intrusion detection proceedings th usenix security symposium january 
mukherjee todd heberlein karl levitt network intrusion detection ieee network vol 
pp 
may june 
nwana software agents overview knowledge engineering review vol 
pp 
october november 
phillip porras alfonso valdes live traffic analysis tcp ip gateways networks distributed systems security symposium march 
stolfo prodromidis lee fan chan jam java agents metalearning distributed databases aaai workshop ai methods fraud risk management 
van doorn available online www com archive 
yang honavar feature subset selection genetic algorithm ieee intelligent systems special issue feature transformation subset selection 
