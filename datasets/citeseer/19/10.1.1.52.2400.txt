ants reinforcement learning case study routing dynamic networks subramanian peter druschel department computer science rice university houston texas johnny chen february investigate new distributed routing algorithms data networks simple biological ants explore network rapidly learn routes novel variation reinforcement learning 
algorithms fully adaptive topology changes changes link costs network space computational overheads competitive traditional packet routing algorithms generate routing traffic rate failures network low perform better higher failure rates 
algorithms resilient traditional algorithms sense random corruption routing state limited impact computation paths 
convergence theorems algorithms drawing theory non stationary stationary discrete time markov chains reals 
extensive empirical evaluation algorithms simulator widely computer networks community validating testing protocols 
comparative results data delivery performance aggregate routing traffic algorithm overhead degree resilience new algorithms traditional routing algorithms current 
show performance algorithms scale increase network size realistic topology 
efficiently routing data dynamic network difficult important problem computer networking 
dynamic mean network subject frequent unpredictable changes topology link costs due congestion 
widely solutions routing networks places substantial space time requirements routers guarantee effective performance limiting scalability 
investigate algorithms problem inspired dynamics ant colonies learn shortest routes food sources little state computation beckers 
algorithm call regular ant algorithm earlier holland call routing telephone networks 
regular ant algorithm single shortest path algorithm applicable networks symmetric path costs 
developed second algorithm called uniform ant algorithm natural multi path routing algorithm applicable data networks path cost symmetry 
provide summary theoretical properties ant algorithms empirical evaluation low level network simulator 
major reliability issue data networks resilience routing algorithms corruption router state 
current routing algorithms susceptible failures maintain network state router 
experimentally demonstrate ant algorithms far resilient 
routing traffic generated ant algorithms exceeds existing algorithms ants readily piggybacked data packets hop hop basis small fixed size 
piggybacking helps significantly routing overhead 
routing overhead ant algorithms independent rate change link recoveries failures link cost changes network making algorithms attractive highly dynamic networks 
organized follows 
section describe routing problem brief current solutions 
section describe ant algorithms prove convergence properties 
section detailed empirical evaluation ant algorithms 
routing problem challenge routing packet switched communication network need fully distributed algorithm able central coordination disseminate knowledge network find shortest paths robustly efficiently face changing network topologies changing link costs 
major classes adaptive distributed packet routing algorithms literature distance vector algorithms link state algorithms 
distance vector algorithms dynamic programming algorithms propagate cost information 
node time complete knowledge topology network 
link state algorithms require nodes know topology network computing shortest paths 
link state methods node periodically broadcast local topology costs entire network 
internet open shortest ospf protocol uses link state algorithm 
ant routing algorithms facilitate description algorithms distinguish types nodes network hosts routers 
hosts communication points initiate terminate data messages routers nodes forward data messages send receive routing messages 
key conceptual ideas underlying ant algorithms 
ants explore network hosts take active role gathering information costs various paths network 
periodically host network generates message randomly chosen host message form cost starts zero cost get message sent network forwarded routers encounters increment cost reflect cost reverse links traveled far 
message reaches destination cost cost sending message message destroyed host messages small size bytes refer ants 
general host represents network destination ant algorithms compute routes destination single computer attached network subnetwork internetwork routing domain hierarchical routing architecture 
message traverses link node node incremented cost link fact require message get hs hs inaccessible host 
host network absorb message message destroyed increases pre set threshold 
ants explore paths backward destination nodes network source nodes 
ants routed network rate generated generation rate hosts network key parameters definition ant routing algorithms 
probabilistic routing tables link state distance vector algorithms compute deterministic forwarding tables router forwarding tables probabilistic 
router maintains destination node network entry form point point link 
receives message destined host forwards neighbor probability probabilistic tables mechanism exploring alternate paths network keeping estimates lengths relative current best paths 
probabilistic updates routing tables ants ant generated host host probabilistically updates routing tables routers encounters path 
update rules similar spirit traditional reinforcement learning algorithms kaelbling key technical difference update rules non linear 
router receives ant link node updates adding cost traversing reverse updates entry follows deltap deltap deltap deltap non decreasing function update rules drawn 
constant called learning rate algorithm 
generally 
learning rate needs set high ant effect low guarantee convergence routing probabilities 
note router probabilities host generated ant updated 
ants perform form backward learning 
traditional adaptive algorithms context including littman boyan kaelbling extent reinforcement direct cost ant decreasing non linear function router forwards ant updating table discussed 
uses routing probabilities ant forwarding follows 
routing entry destination 
regular ant algorithm uses pr ant sent uniform ant algorithm uses pr ant sent regular ants learned forwarding tables route ants 
non congested route new ants forwarded route 
exploration desirable routes curtailed policy eventually ants converge single shortest route 
regular ants require path costs network symmetric cost getting node node cost getting node node uniform ants unbiased forwarding probabilities explore paths equal probability 
uniform ants natural multi path routers increase available bandwidth prone route oscillation problems single shortest path routing algorithms 
uniform ants simpler structure regular ants 
uniform ant form host generated initialized zero source cost get links traveled far 
uniform ants time live terminated 
uniform ants require destination fact great practical importance host network knows hosts 
normalize actual path costs deltap affected linear scaling link costs network 
simple example analysis example illustrate ant algorithms detail 
context example demonstrate convergence properties update rules regular uniform ants 
simple network hosts routers 
routing tables routers shown 
link cost link cost regular ants regular ants probabilities evolve simultaneously coupled stochastic discrete difference equations shown 
deltap deltap probability deltap probability gamma deltap deltap probability deltap probability gamma deltap deltap proposition regular ants network lim lim system equations form non stationary discrete time markov chain reals 
observe evolve part update rule increases second part decreases 
updated infinite sequence tend tend updated infinite sequence 
result updating sequence yields different result update sequence updates order dependent 
deltap deltap final values determined entirely transient behaviour system system exhibits deterministic chaos 
means traffic divided equal cost links arbitrary ratio 
hand deltap deltap arises asymmetric system converges limit values provided statement proposition 
reason asymmetry functions updating 
proposition generalized symmetric network show regular ants converge shortest path long unique shortest path network 
uniform ants uniform ants probabilities evolve simultaneously stochastic discrete difference equations shown 
note equations longer coupled 
deltap deltap probability deltap probability deltap deltap probability deltap probability allows establish convergence theorem readily stationary markov chains reals 
proposition uniform ants network lim lim provided deltap deltap positive constants close proof note expected value ep evolves recurrence deltap ep ep deltap deltap ep deltap solve recurrence obtain ep deltap deltap deltap deltap gamma deltap deltap term goes zero 
second term infinite series sums quantity shown 
lim ep deltap deltap deltap deltap note deltap deltap positive constant 
lim ep result generalized case loop free link disjoint paths nodes general network 
probabilities nodes evolve shown probability replaced 
determined network topology interpreted ratio fraction ants arriving node paths 
limiting values probabilities ac ac gammaa gammaa ac gammaa costs paths 
note uniform ants divide traffic paths inverse ratio path costs highly desirable traffic split optimize available bandwidth 
proposition proposition statements asymptotic convergence rates convergence depend ant generation rate topology network determined empirically section 
difficult obtain general results convergence rates systems equations 
property ls dv ants space nrl rh rh rh time ld ldh msgs rl ld ldh size msg table comparison resource requirements entire network 
sum number hosts network number routers network 
number point topoint links network 
diameter network average number links router 
improving adaptiveness regular ants reach steady state forwarding probabilities converge shown proposition 
topology changes link cost changes convergence regular ant policy forwarding ants learned probabilities prevent adapting new situation 
uniform ants immune problem paths network explored times equal probability 
changes network detected probabilities adapt pace dependent learning rate solution allow regular ants perform certain degree random exploration 
certain percentage time router forwards ants uniformly randomly uniform ant routing policy rest time gamma router forwards ants forwarding probability tables regular ant routing policy 
noise affects ant forwarding data packets 
probabilities single path reach 
guarantees primary route longer available update rules reinforce second best paths fairly quickly 
ants traveling second best path get reinforce forwarding probabilities source ants reinforce best path 
summarize phenomenon slogan bad news travels fast 
better path suddenly available ants available reinforce ones routed noise system takes longer switch better path 
characterize news travels slower bad news 
news travel faster crank noise levels increase learning rate 
table summarizes key resource requirements ant family algorithms link state algorithms 
table clear link state algorithm pays significant overhead terms state router terms time compute shortest paths 
investment state routers allows reduce number routing messages sent computation initial routes 
distance vector ant algorithms significantly lower router state comes expense increased routing message traffic 
distance vector ants roughly order bytes routing traffic ant algorithms factor number hosts messages method 
important note ant messages distance vector messages constant size piggybacked data packets 
high bandwidth networks virtually gives ant routing traffic free 
time secs regular ants time secs uniform ants time secs distance vector delay plots regular ants uniform ants distance vector algorithm simple network topology 
host sender host receiver 
delay plot link state protocol identical distance vector algorithm 
experimental results section results extensive simulations performed evaluate proposed algorithms compare behavior distance vector dv link state ls routing algorithms 
algorithms evaluated networks simple topology realistic topologies derived subset internet inter domain topology 
simple topology simple network topology unit ua ra dv ls msgs link second bytes link second table routing traffic link second uniform ant ua regular ant ra distance vector dv link state ls algorithms 
simple network simulations depicted 
network links equal unit cost 
instance shortest path cost simulations run seconds simulated time 
time chosen routing protocol reach steady state conditions successive changes state network 
host generates ants rate second 
time network started initial conditions 
link connecting fails time recovers time 
learning rate noise level 
experiment quantifies delivery latency important aspect routing algorithm performance perceived network application 
shows toend delivery delay number network hops measured simulation described 
host periodically sends messages rate bytes second host 
figures show results regular ants uniform ants distance vector algorithm respectively 
omit link state plot identical distance vector plot 
reported delay zero hops means packet lost delivered destination 
approximation algorithms achieve minimal delivery delay hops interval delay hops 
uniform ants split traffic multiple paths 
results jitter variance delay traffic split paths different costs seen graph 
traffic split traffic split equal cost path impact jitter 
splitting traffic way leads increase available bandwidth evident delay plot 
response failure shortest path link packets lost period seconds depending algorithm 
ant algorithms time determined transition time forwarding probabilities caused reinforcement alternate paths 
table shows amount routing traffic generated algorithms simulation 
routing message traverses link network message transmission recorded size message added number bytes routing traffic 
experiment amount routing traffic generated ant algorithms exceeds ls dv roughly factor terms messages data 
note ant routing messages small fixed size 
messages piggy backed data packets substantially cost network 
messages generated ls dv algorithms larger fixed size lend easily piggy backing 
subsequent section data quantifies dependence routing traffic network size rate change link costs 
time secs regular ants time secs uniform ants number nodes routing traffic uniform ants regular ants distance vector link state left plots show delay network regular uniform ants router corruption 
router probability tables randomly overwritten time 
plot right side shows routing traffic node star topology 
resilience state corruption set experiments attempt quantify behavior routing algorithms event failures 
specifically interested failure modes router internal state corrupted 
case great practical importance 
router state corruptions occur practice due intermittent software hardware faults configuration errors 
communication errors affecting routing messages errors difficult detect correct 
simulation router suffers intermittent fault causes routing state overwritten random values 
interested evaluating robustness various algorithms implementation routing state corrupted random plausible values 
ls recovery period bounded periodic link state broadcast interval 
practice broadcast interval tends quite long instance minutes ospf protocol 
recovery period router unable calculate correct routes may result routing loops associated loss connectivity 
dv router learned actual local topology eventually converge actual shortest paths number message exchanges proportional diameter network range path cost metric practice process expected take time order seconds 
recovery period routing loops may exist cause loss connectivity 
link host associated router included path cost calculations 
purely matter implementation convenience 
effect routing algorithm 
count infinity may occur loop routers involving failed router 
shows packet delivery delay 
evident uniform regular ants perform extremely event router corruption 
uniform ants small number packets suffer increased delay hops approximately seconds router failure 
packets lost algorithm 
comparison ls dv protocols expects loss connectivity packet loss router failure period time ranging seconds minutes 
scalable topology second topology experimental evaluation closely reflects structure realistic data networks 
topology loosely internet inter domain routing topology 
network roughly partial ary tree leaf nodes parent connected leaf node adjacent parent 
graphs levels total nodes 
size network measure routing traffic generated algorithms necessary achieve speed convergence seconds 
shows number routing messages generated algorithm networks nodes second simulation parameters equal earlier simulations 
realistic wide area network topologies characterized low degrees connectivity algorithms scale 
final simulation measure generated routing traffic function rate topological change algorithms 
topological change modeled number links fail recover simulation period seconds 
shows amount routing traffic generated algorithm level network various rates link failures recoveries 
predicted routing traffic generated ant algorithms remains nearly unaffected amount topological change network 
link state dv routing traffic increases linearly amount change 
demonstrates key advantages ant algorithms ls dv 
related routing ants routing littman boyan node keeps values form representing node cost estimate neighbor forwards data consults table forwards neighbor cost estimates receiving packet neighboring node immediately sends cost estimate back adjusts cost estimate message 
routing uses dynamic traffic dependent routing metric delay 
adapt changes topology traffic conditions 
ants ls dv simply choosing appropriate link cost metric routing differs regular ants key aspects 
ants routing guaranteed find shortest path 
second amount routing traffic routing directly proportional amount data traffic network routing traffic constant ants 
uniform ants additional capability routing packets multiple paths 
instance implement delay metric neighboring routers periodically exchange ping pong messages assign measured delay cost associated link 
rate failures second routing traffic uniform ants regular ants distance vector link state time secs routing time secs regular ants plot left side shows routing traffic function link failures node topology 
plots right show delay comparison regular ants routing 
network load increased time decreased time 
routing discover changes route cost delay case currently route 
currently route best known route increase cost currently route cause routing select different route 
decrease cost route currently route discovered causing routing potentially suboptimal route 
full echo variant routing overcomes deficiency special case better route currently route known neighbor message source 
full echo comes cost increased routing traffic guarantee convergence shortest path 
regular ant algorithm shown converge single shortest path 
illustrate point consider shows packet delivery delay routing regular ants irregular network littman boyan 
algorithms routing cost metric delivery delay 
background network load increases causing change optimal path source destination 
network restored original load 
evident routing adapts increasing load discovers new optimal path fail rediscover original path background traffic 
result delivery delay returns value 
ant algorithms hand able converge optimal path cases 
data packets forwarded times considered shown having delivery time zero 
evident graph substantial number packets delivered routing transition phases 
ant algorithms routing traffic independent data traffic 
rate ant generation determines fixed tradeoff amount routing traffic rate convergence 
routing number routing messages directly proportional number transmitted data messages 
means low network load routing slow adapt network changes 
high network load routing overhead increases limiting aggregate capacity network 
link state distance vector algorithms ant routing algorithms differ ls dv algorithms various aspects 
raw ant routing traffic exceeds ls dv small factor seen light facts 
absolute amount routing traffic node network modest bytes sec msgs sec traffic generated link 
small fixed sized bytes uniform bytes regular ant messages piggy backed data packets hop basis largely cost network 
ls dv ant routing traffic increase rate change network making algorithms suitable highly dynamic networks 
ant algorithms maintain minimal state routers meets needs networks scarce router resources 
particularly suitable instance mobile wireless networks personal communication networks topology load changes frequently resources routers scarce 
ant algorithms additional capabilities multi path improved resilience router state corruption ls dv 
beckers beckers goss 
trails turns selection path ant niger 
journal theoretical biology 

ospf internet routing protocol 
connexions 
kaelbling kaelbling littman moore 
reinforcement learning survey 
journal ai research 
littman boyan littman boyan 
packet routing dynamically changing networks reinforcement learning approach 
proceedings nips 
holland bruten rosenkrantz 
ants load balancing telecommunication networks 
technical report hpl hp labs bristol 
