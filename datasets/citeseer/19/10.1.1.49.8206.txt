trips integrated intelligent problem solving assistant george ferguson james allen department computer science university rochester rochester ny cs rochester edu discuss constitutes integrated system ai ai researchers interested building studying 
integrated systems ones integrate variety components order perform task start finish believe systems allow better ground theoretical actual tasks provide opportunity needed evaluation task performance 
describe particular integrated system developed supports spoken language dialogue collaboratively solve planning problems 
discuss integrated system provides key advantages helping natural language dialogue processing interactive planning problem solving consider opportunities approach affords 
content areas ai systems natural language understanding planning control problem solving user interfaces interesting time ai researcher 
computer speeds capacities increased point tasks take days done seconds 
pervasive role computers everyday life emphasized need people computers exist hopes complement hinder 
field ai solid understanding core issues 
ai concepts search planning learning natural language mature theoretical underpinnings extensive practical histories 
cases understand just hard problems solve cases understanding approximate solutions tradeoffs 
supported trends possible build ai systems perform tasks people find difficult require intelligence exactly define reasonable amounts time 
example deep blue hamilton despite controversy certainly counts highly successful working ai system leverages trends described 
smaller scale researchers starting report copyright fl american association artificial intelligence www aaai org 
rights reserved 
experiences building ai systems solve task start finish answering questions database large scale planning scheduling autonomous robots robotic assistants 
argues utility building toend systems integrate variety capabilities performance task 
discuss dimensions integration take place different aspects integrated systems interact design implementation operation system 
describe detail particular implemented integrated system trips rochester interactive planner system 
system integrates speech recognition natural language understanding discourse processing planning plan recognition order provide human user interactive intelligent problem solving assistant transportation logistics domain 
trips fully functional demonstrated aaai intelligent systems demonstrations program 
integrated systems start means integrated ai system 
ai part straightforward system perform task tasks people find require intelligence 
integration feel important dimensions consider 
system integrate functionality multiple specialized components performance task 
integrated ai system components things planners natural language parsers learning algorithms speech recognizers temporal reasoners logic engines 
ai technologies solve task provide services necessary 
second obvious dimension consider integration ai system person people 
fielded ai systems interact people time 
interests interaction natural people possible increase acceptance ai technology leverage people skills performance task 
integrated system integrates multiple capabilities service task integrates functions human users 
ai researchers want build integrated ai systems 
benefit gets cal mass system toy programs toy domains 
huge advantages 
task grounds research 
example natural language understanding planning 
second performance allows evaluation task metrics 
ai systems notoriously difficult evaluate isolation mean nlu system understand sentence task metrics allow compare different approaches components architectures 
allow compare system performance people task surely ultimate test intelligent system 
second benefit building integrated ai systems just significant 
need integrate disparate components forces broaden perspective add functionality increase robustness 
ad hoc solutions shortcuts serve different components equally 
example planner prefer reason time nlu system absolutely require 
integration requires clear understanding representations clear specification component interfaces issues ai community positioned address 
integrated ai systems desirable research goals build 
definitive point course 
methodological principle useful research described 
need clearly define task system perform 
crisp task definition definition means better evaluation impossible 
task support range incrementally difficult problems allowing bootstrap system building process building simple system simple task increasing complexity task improving system 
task evaluation provides guide working isn 
corollary choose hard tasks big problems 
integrated systems current ai technologies fact capable performing challenging tasks 
trips rochester interactive planning system describe particular integrated ai system developed previous observations 
trips rochester interactive planning system latest series prototype collaborative planning assistants 
research plan design build series progressively sophisticated systems working progressively realistic domains 
trips builds experiences trains system ferguson allen ferguson allen miller functions complicated logistics domain compared trains simple route planning domain supports construction complex plans trains produce understand embodies complex model col delta exodus forest corners high junction south delta ocean beach overlook map problem solving trains 
developments required significant analysis redesign reimplementation extension domain se straightforward part 
trips build directly trains reusing components infrastructure directly 
trips assistant human manager 
collaborate construct plans crisis situations 
example scenario involves island see path approaching hurricane 
hurricane population cities safe city presumably safety 
manager task plan evacuation variety vehicles varying capabilities disposal 
may variety constraints placed final plans time cost weather related factors 
important features scenario research environment clear task completed easily describe tasks people know re done verify relative quality solution easily measured terms time violated constraints measure robustness example easy vary complexity task trivially solvable problems people difficulty solving fact trips solve increase numbers people change numbers types vehicles modify road network 
aspects evaluation possible final aspect lets incrementally progressively harder problems 
hello 
hi 
show map 
ok displays large map island people 
groups people exodus group people 
displays bar chart showing numbers people cities 
chart updated conversation progresses show state world plan consideration 
transports 
trucks helicopter delta 
displays chart showing vehicle status contents updated conversation truck get people delta 
wish command 
displays construction window timeline view plan development vehicles vertical axis time horizontally 
map updated show route taken back 
long take 
take hours minutes 
went coast 
option take hours minutes 
displays construction window showing option alongside original plan 
forget 
ok deletes second construction window display 
truck get people exodus delta 
ok adds new task original construction window different color updates map 
case task clearly seen take hours 
helicopter 
ok changes construction window view task updates map display 
send truck 
wish command 
adds third task construction window third color updates map 
pick people 
ok updates displays go 
ok updates displays take people delta 
ok updates displays looks 
glad service 
suppose manager learns change road status external source informs system plan adjusted 
delta bridge crosses inlet delta south delta 
delta bridge 
ok highlighted actions may need revised 
flashes delta bridge red highlights actions routes bridge red construction window 
send truck coast 
ok displays new route back map updates construction window longer trips 
truck south delta 
ok display new route coast south delta updates construction window 
unload people 
ok updates displays helicopter get people south delta delta 
problem 
multiple flights helicopter added third task construction window map updated show 
example dialogue example dialogue example dialogue 
verbatim transcript actual session annotated describe graphical displays generated trips 
times shown wall time actual time utterance 
exact times important note utterances understood seconds including speech recognition processing 
level responsiveness session run sun ultra workstations mhz sparc processors 
required maintain effective dialogue user 
trips system architecture organization trips shown 
modules communicate exchanging kqml messages finin central message passing input manager shown 
modules fact separate unix processes trips run combination machines run individual modules 
trips infrastructure allows program read standard input write standard output exchange messages 
display manager speech recognition speech synthesis spelling correction mouse menu map displays keyboard natural language parsing conversational agent problem solving manager microphone speakers communicative acts input communicative acts output realization generation discourse context ps context domain planner route finder temporal kb scheduler simulator modality processing dialogue management specialized reasoners trips system architecture shown components trips divided groups 
modality processing includes speech recognition generation graphical displays gestures typed input 
modalities treated uniformly 
input words gestures parsed meaning representations treating communicative acts 
output communicative acts generated system realized speech graphics 

dialogue management components core trips responsible managing ongoing conversation interpreting user communication context requesting coordinating specialized reasoners address needs conversation selecting communicative actions perform response 

specialized reasoners components provide brains trips sense able solve hard problems planning courses actions scheduling sets events simulating execution plans 
goal provide form plug play interoperability new improved specialized reasoners including example network sources agents easily added suite resources trips disposal 
space obviously precludes discussing components 
robust speech recognition described allen 
descriptions approach robust language understanding allen 
approach planning interesting emphasis plan modification expressive temporal world model described ferguson allen 
rest section concentrate dialogue management components trips conversational agent problem solving manager really effect integration trips 
cases contexts shown support incremental specification development necessary effective integration 
interaction conversation conversational agent coordinates system activity interacts user 
key idea integrating various different input output modalities user interaction viewed communicative acts generalization speech acts 
consequence communication conversational agent modality processing modules terms possible communicative acts performed 
trips supports wide range speech acts ranging direct requests show map questions transports assertions bridge suggestions helicopter acceptances rejections ok range social acts including apologies greetings 
addition limited range gestural acts pointing dragging screen objects mouse 
modality processing modules typically produce set possible surface acts form act 
conversational agent combines interpretations discourse context order determine intended acts coordination problem solving manager determines system response expressed terms communicative acts 
task trips interactive problem solving acts performed relate different problem solving operations 
operations common trips include introducing new task subtask plan modifying deleting existing task defining part solution task modifying existing solution evaluating part plan 
common human human problem solving person system create alternate solutions options comparison purposes remove option consideration adopt particular option 
note problem solving operation involved orthogonal communicative act communicate 
example request modification plan suggest modification accept reject modification promise modification 
conversational agent driven set rules identify possible interpretations intended user plan system response 
interpretation response pairs ranked system response selected 
currently selection process static ranking strength reliability rules 
complex deliberation processes introduced allow system generate wider range responses including initiative conversation desired 
integration collaborative problem solving conversational agent coordinates interpretation communicative acts chooses system responses direct knowledge task current state problem solving process 
information handled problem solving manager maintains representation task current solution solutions consideration coordinates reasoning specialized reasoners necessary 
key idea supporting psm general representation information including hierarchical task structure explicit representation possible solutions consideration temporal knowledge base represents world time relative different solutions 
plan representation general purpose wide range purposes including providing context recognition user intentions driving displays summarize state world plan answering queries plan building commands context required specialized reasoners integrating managing results specialized reasoners 
note supports wide range purposes representation typically directly planning process 
psm converts general representation specific commands specialized reasoner representation reasoner understands 
converts results returned back general representation components 
key feature representation allows system represent reason plans generated 
allows user incrementally develop plans complex trips planner generate 
support interpretation processes conversational agent psm conversational agent interact propose evaluate confirm protocol 
conversational agent suggests possible problem solving action say modify certain subtask different vehicle 
psm evaluates interpretation coherence operation sense current problem solving context feasibility requested operation performed 
evaluations ca chooses particular set interpretations informs psm update context interaction 
order evaluate interpretation psm may invoke specialized reasoners necessary perform actual reasoning required 
consider brief example sample dialogue user says helicopter 
surface form utterance interpreted suggestion helicopter unspecified part plan unspecified vehicle 
ca uses coherence heuristics explore possibility modification apply subtask discussed getting people exodus delta 
asks psm evaluate modifying plan replacing helicopter 
psm uses representation plan find objects helicopter replace task case truck mentioned previous interaction 
calls planner task replace truck helicopter task 
planner performs operation returns revised plan 
plan quite different previous solution 
making trip truck plan involves making trips helicopter due different vehicle capacities 
psm calls router instantiate routes helicopter trips invokes scheduler produce nominal plan generate display 
operations performed successfully psm returns ca evaluation saying interpretation ranks high coherence feasibility 
ca viable options notifies psm interpretation selected 
psm updates problem solving state reflect new plan updates world model drive plan display 
ca executes response corresponding interpretation causing display updates spoken confirmation 
related integrated systems constructed robustness depth trips 
interface system highly constrained task system performs highly constrained 
example speech query systems atis systems darpa may handle wide range questions thing answer queries trip 
system explicitly reason needs done task fixed advance remains constant interaction 
systems fit criteria laid integrated system extent truly handle task person obtaining travel information 
systems provide richer back task limit interface 
circuit fix shop smith hipp biermann instance handles complex task diagnosing repairing circuits user fixed set sentences 
collagen system rich sidner involves architecture strong similarities approach interface quite constraining cumbersome person support natural language supports plan modification chronological backtracking 
systems trips treating interaction dialogue system user provides context required integrate system functions coordinate system behaviours 
fact earliest integrated systems richest date 
basic agent vere bickmore person interact natural language submarine robot simulated world 
system lacked compelling task accomplished interactions flavor demonstrating capabilities system 
basic agent integrated wide range capabilities system effectively person 
integrated systems trips take time effort build 
gained experience 
evaluate performance having people solve problems 
trips predecessor trains developed methodology testing groups naive users solving set predefined problems sikorski allen stent allen 
results encouraging sessions resulting success reflection simplicity trains task 
evaluated trips complex task domain applying methodology expect able show people solve problems faster trips person 
hope report results near 
point experiment conceived integrated system 
second emphasis integrating multiple specialized reasoners problem solving level benefits 
drive integration resulted general shared representation plans objectives domain objects 
representation range components natural language understanding planning simulation 
course integration multiple specialized reasoners allows plug new technologies trips interact external agents 
key making generally effective specification component agent capabilities meta reasoners trips psm task understand responses 
specifying capabilities active area current research 
close intuitive integration person computer trips benefits 
viewing interaction conversation far natural person learning arcane command languages guis 
translate effective performance training hope show evaluation experiments 
closely integrated mixed initiative interaction easier computer possible indicate solve problem literally ask help 
generality representations described ensures system understand suggestions come 
emphasis specialized reasoners changes complete impractical reasoning flexible expressive certainly incomplete forms reasoning 
integrated system greater sum parts 
trips allows human system collaboratively solve harder problems solve 
trips development team includes eric donna byron amanda stent addition authors 
neal lesh developed trips simulator 
due big picture group rochester especially len schubert members original trains group trips emerged 
trips funded part arpa rome laboratory contract 
onr 
nsf 
iri 
allen schubert ferguson heeman hwang kato light martin miller poesio traum 
trains project case study defining conversational planning agent 
journal experimental theoretical ai 
allen miller sikorski 
robust system natural spoken dialogue 
proceedings annual meeting association computational linguistics acl 
darpa 

proceedings darpa speech natural language workshops san mateo ca morgan kaufmann 
ferguson allen 
planners plan management hybrid planning architecture 
appear university rochester cs dept technical report 
ferguson allen miller 
trains mixed initiative planning assistant 
ed proceedings third conference artificial intelligence planning systems aips 
ferguson allen miller 
design implementation trains system prototype mixed initiative planning assistant 
trains technical note department computer science university rochester rochester ny 
finin weber wiederhold genesereth fritzson mckay mcguire shapiro beck 
specification kqml language 
draft 
hamilton 
deep blue synergy 
ieee computer 
rich sidner 
collagen agents collaborate people 
international conference autonomous agents 
allen 
error correction post processor continuous speech recognition 
proceedings ieee international conference acoustics speech signal processing icassp 
allen 
fertility channel model post correction continuous speech recognition 
proceedings international conference speech language processing icslp 
sikorski allen 
task evaluation trains dialogue system 
proceedings ecai workshop dialogue processing spoken language systems 
smith hipp biermann 
architecture voice dialog systems prolog proving 
computational linguistics 
stent allen 
trains system evaluation 
trains technical note department computer science university rochester rochester ny 
vere bickmore 
basic agent 
computational intelligence 
