languages perception dastani languages perception illc dissertation series institute logic computation information illc publications please contact institute logic language computation universiteit van amsterdam tv amsterdam phone fax mail illc uva nl languages perception ter van de van doctor aan de universiteit van amsterdam op van de rector prof dr van een door het college voor het te de der universiteit op december te uur door mohammad mehdi dastani te iran prof dr ir 
scha der universiteit van amsterdam vb amsterdam dr peter van emde boas wiskunde informatica en universiteit van amsterdam tv amsterdam prof dr indurkhya department computer science tokyo university agriculture technology tokyo japan copyright fl dastani cover design sophie van der contents acknowledgments ix gestalt perception structural information theory gestalt tradition 
structural information theory 
coding system sit 
partial computational model sit 
limitations sit 
coding languages gestalts patterns coding language string patterns 
sl language gestalts string patterns 
extending string algebra domain relations 
gestalts dimensional visual patterns 
attribute structure 
attribute regularity 
coding system visual patterns 
iteration structure 
symmetry structure 
unit structure 
alternation structure 
composition structure 
vreg language visual regularities 
vii example vreg expressions 
extension coding language 
information complexity vreg expressions 
computing gestalts visual patterns coding rules vreg expressions 
coding rules vreg expressions 
coding rule vreg expressions 
complexity parsing process 
computing unit gestalts 
parsing unit hierarchical representations 
computing proximity gestalts 
methods computing proximity structures 
proximity representation visual patterns parsing unit proximity representations context effect perception interaction perception analogy 
formalizing proportional analogy sit 
introducing constraints correspondences 
computational model proportional analogy 
computation perceptually motivated correspondence 
examples solving proportional analogy problems string patterns 
comparison approaches 
analogy 
copycat 
limitations analogy copycat 
role perception data visualization automatic data visualization 
input data 
projecting data visual patterns 
layout visual patterns 
effective data visualization 
formal classification domain structures 
perceptual classification visual attributes 
hierarchy domain structures 
formal framework data visualization 
viii structures data visual patterns 
structure preserving mapping 
role gestalts data visualization 
visualization systems visual languages 
research bibliography index samenvatting ix acknowledgments am grateful supervisors scha peter van emde boas indurkhya invaluable advice guidance encouragement support 
working closely scha enjoyable 
inspiring stimulating sound criticisms clear ideas enthusiasm artistic social cultural views 
played key role developing ideas thesis 
peter van emde boas generous giving time discuss mathematical issues thesis 
felt comfortable go ask comments 
expertise detailed feedback indispensable research 
indurkhya encouraged carry doing scientific research proved invaluable source inspiration 
expertise analogy context issues showed different perspectives research 
patient supervision intense mail correspondence japan 
special goes henk supported obtaining research position computational linguistic department 
appreciate numerous discussions kinds related issues 
acknowledge available willing provide kinds background knowledge practical details 
really pleasure room inspiring discussions 
xi meetings discussions van leeuwen jos de bruin wang yuri engelhardt stimulating productive 
enjoyed discussions 
really fun time sharing working space mark van de berg van jos 
course family friends great support research period 
backing emotionally times crisis 
parts thesis previously published bdp dos id das das das dis di dt 
amsterdam november 
xii chapter everyday life confronted visual information provided environment 
visual information may originate scenes cities forests television images computer interfaces natural artificial sources 
general difficulties recognizing meaningful entities visual information receive organizing coherently 
example look urban neighborhood seen perceive individual buildings separate continuously bounded 
natural environment easily perceive individual flowers plants trees discriminate partially hidden 
ability effortless direct far trivial understand describe model 
understanding human visual system great impact various scientific technological fields 
importance theoretical study human mind growing practical interest computational models visual system 
models example essential autonomous robots receive visual information environment camera analyze real world situations construct hypotheses objects situations interact objects 
upcoming multimedia systems image databases great need automatic systems analyze classify annotate images way humans perceive 
model human visual system useful analyzing im chapter 
ages great interest graphical design generation images human 
fields information design information visualization goal generate images represent information human viewer understand extract information looking images 
case image generator human designer automatic image design system understanding human visual system ensure generated images perceived intended 
order understand model human visual system analyze visual information human visual sensors human eyes describe information mapped meaningful entities names place conceptual framework 
assume steps mapping visual information meaningful entities 
step concerns low level structuring visual information 
step provides constituent structure visual information determines constituents visual information composed build larger wholes 
second step visual constituents resulting step interpreted conceptual framework 
interpretation visual constituents factors reasoning past experiences 
noted steps interact structured visual information step placed conceptual framework coherently low level structuring step provide alternative constituent structure visual input 
thesis concentrate step structuring visual information investigate principles basis visual constituents composed form larger wholes 
discuss primitive visual constituents determined 
ultimate theory probably pixels line segments edges contrastive areas 
moment avoid commitments issue focusing classes pictures particular type higherlevel units may assumed primitives 
focus thesis problem gestalt perception assuming set primitive elements try account phenomena pictures built elements perceived humans having particular hierarchical constituent structure 
study gestalt perception primitive elements assumed composed structured unconsciously directly innate principles believed underlie human visual system 
century formulations suggested innate principles 
start formulation innate principles human visual system develop mathematical model gestalt perception 
discuss various aspects gestalt perception application model human visual system indispensable 
organization thesis follows 
chapter briefly explain gestalt approach originally formulated wertheimer discuss construction rules claimed innate principles human visual system 
wertheimer fundamental general principles proposed 
overview development gestalt tradition 
particular focus approach developed leeuwenberg 
leeuwenberg proposed theory called structural information theory notions regularity complexity play essential roles 
theory visual information perceived having different structures perceived structure regular 
regularity perceptual structures measured complexity descriptions regularities captured description complex way structural information theory claims preferred perceptual structure visual information simplest structure 
leeuwenberg van der helm defined notions regularity complexity formally precise way 
notions proposed coding system represent visual patterns perceptual structures 
criticize coding system showing powerful represent certain classes visual information 
chapter introduce formal coding languages consisting expressions represent perceptual structures dimensional visual information 
consider dimensional string patterns 
examples patterns abba looking string patterns describe various ways 
people usually describe pattern consisting followed second pattern consisting ab followed mirror image third pattern consisting abc klm pattern consisting individual letters string patterns described way string chapter 
pattern usually described terms larger chunks subpatterns 
order represent string patterns perceptual structures formally precise way algebraic coding language specified 
expressions coding language quite similar proposed leeuwenberg van der helm 
difference consider expressions terms algebra leeuwenberg van der helm algebraic framework 
continue extending algebraic coding language 
extension coding language intuition knowledge accessibility relations defined constituents perceptual patterns general string patterns particular influences perceptual structures string patterns 
example fact western alphabet successor turn successor fact successor turn successor effects perception string pattern 
result string pattern perceived consisting abc klm 
coding language dimensional string patterns specified proceed studying dimensional visual patterns discuss patterns perceptual structures represented 
particular consider dimensional visual patterns terms visual attribute values claim perceptual structures described terms regularities visual attribute values 
subsequently coding language dimensional visual patterns introduced 
expressions coding language represent perceptual structure dimensional visual patterns 
contribution chapter summarized development algebraic framework importantly specification coding language large class dimensional visual patterns covered coding system proposed leeuwenberg van der helm 
chapter explained perceptual structure dimensional visual patterns represented expressions coding language computed 
computation perceptual structures dimensional visual patterns considered parsing process 
specification coding language define set parsing rules means possible structures visual patterns analyzed 
terminology leeuwenberg van der helm parsing rules called coding rules 
order parse dimensional visual pattern start unstructured representation visual pattern proceed applying coding rules repeatedly 
repeated application coding rules unstructured representation dimensional visual pattern results structured representations visual pattern express possible perceptual structures parsed visual pattern 
preferred perceptual structure dimensional visual pattern determined selecting simplest structures 
chapter computational complexity parsing process discussed 
show parsing process deterministic exponential size unstructured representation input patterns 
discuss proximity structure dimensional visual patterns 
proximity structure dimensional visual patterns perceptual grouping visual elements relatively close visual elements form proximity cluster 
coding system proposed leeuwenberg van der helm proximity structure visual patterns disregarded 
order integrate factor proximity approach existing cluster methods determine proximity clusters involved dimensional visual pattern 
proximity clusters involved pattern integrated initial representation pattern subject parsing process 
parsing process starts proximity representation pattern resulting perceptual structures express proximity structure 
cases visual patterns perceived certain context 
context may simultaneously visual patterns application visual patterns certain way past experience human viewer 
chapter possible effects context perceived structure visual patterns discussed 
argue visual pattern certain context may perceived differently pattern perceived isolation context 
context effect discussed dimensional visual patterns 
illustrate effect consider proportional analogies containing dimensional visual patterns 
proportional analogy consists perceptual patterns elements follows scheme represented perceptual patterns 
particular consider proportional analogy context perceptual patterns involved 
context requires related way related example proportional analogy consists dimensional string patterns 
analogical chapter 
relation posited string patterns context effects perceptual structures string patterns 
example string pattern isolation may perceived consisting mirroring string patterns abc cba 
context effect created analogical relation string pattern perceived consisting string patterns ab cc ba perceptual structures satisfy requirement imposed context proportional analogy 
elaborate proportional analogies propose algebraic model 
model preferred perceptual structure visual patterns context proportional analogy determined 
noticed model human visual system interesting analyzing visual input images determine perceptual structures essential generating visual output images human 
example visual images bar charts pie charts graphs maps represent communicate information 
generating images purpose fact design way desired information easily perceived human viewers 
order guarantee human viewer correctly perceives represented information model human visual system necessary 
chapter concentrate data visualization define inverse interpretation visual patterns 
interpretation process visual patterns includes process visual perception data visualization involve inverse process visual perception 
way model human visual system generate images parsing 
visualizing data quantitative qualitative relations represented means different visual attributes position color size shape texture attributes may induce quantitative qualitative perceivable relations visual elements 
example visual elements different saturation values hue value different blue perceived ordinal relation qualitative relation perceives visual element saturated 
ordinal relation represent data relation older relation 
fact core idea data visualization perceivable relations represent data relations 
study various visual attributes discuss perceivable relations may induce visual elements 
visual relations differ constituent relations gestalts represent grouping visual elements quantitative qualitative visual relations 
way chapter covers broader class perceptual relations covered previous chapters 
furthermore shown certain data may represented various ways different images images represent data effectively 
argue effectivity visual representations partially related structural matching data structure hand perceptual structure representing images hand 
view effective data visualization modeled algebraic framework 
chapter gestalt perception structural information theory human sensory systems acquire information surrounding environment transform experiences understanding environment 
process transforming sensory inputs structured experiences called perception 
particular perception considered parsing process stimulus pattern transformed structured representation pattern 
chapters thesis develop formal model visual gestalt perception takes point departure leeuwenberg structural information theory 
chapter briefly explain theory background 
gestalt tradition gestalt tradition initiated wertheimer 
observed environment theoretically interpreted composed arbitrary elements experience usually composed certain elements certain arrangements number stimuli rule experience number individual things 
larger wholes separated related experience arrangement division concrete definite wer 
wertheimer demonstrated idea experiment subjects look light spots flashed alternately 
certain time interval flashes motion perceived fact 
factual physical chapter 
gestalt perception structural information theory constituents light spots perceived 
example illustrated visual pattern 
pattern may different organizations pattern described having different organizations shown 
perceived organization preferred perceptual description pattern shown implies pattern perceived consisting squares formed shapes 
idea wertheimer led psychological school known gestalt school known slogan sum parts 
important agenda gestalt research define laws explain relation patterns perceptual organizations 
wertheimer wer proposed number laws known proximity similarity constant direction continuity closure habit past experience 
law proximity states elements positioned close tend perceived members perceptual group 
example spatial distribution dots results perceptual groups dots 
law proximity 

gestalt tradition law similarity states similar elements tend perceived forming perceptual group 
example pairs circles pairs black dots perceived perceptual groups 
law similarity 
law constant direction continuity states line linear arrangement elements supposed change direction continuous fashion 
dot pattern continuous change direction induced position successive dots left right schematically illustrated 
law constant direction 
continuous change direction dots left right results groups dots forms curve 
example continuity law illustrated pattern 
pattern theoretically curves meet point 
may basic curves specific intersecting curves perceived 
intersecting curves consists basic curves follow continuously 
law closure implies self enclosed subpatterns closed curves determine elements grouped related 
example enclosed shapes shown determine perceptual organization pattern shown 
chapter 
gestalt perception structural information theory law closure 
contrast alternative grouping structure shown perceived organization pattern shown 
law concerned influence habits past experiences 
law implies patterns interpreted consisting certain set elements occurred past known human perceiver 
example experience written language arabic script influences perception character groups form words script 
person familiar script grouping characters definite different perceptual groupings characters perceived 
want analyze particular pattern different gestalt laws may support predicting perceptual organization pattern may conflict sense different laws predict different perceptual organizations pattern 
example pattern shown different gestalt laws proximity similarity predict different perceptual organizations 
pattern law similarity clearly stronger effect law proximity similarity grouping wins proximity grouping 
think strength ordering relation different gestalt laws perceptual organization patterns determined unambiguously gestalt laws mutual strength ordering 
simple ordering defined 
example consider pattern shown 
pattern similarity law loses dominance proximity law spatial distance non similar elements small 
wertheimer emphasizes interaction various laws propose model may describe 

structural information theory proximity law similarity law dominates perceptual grouping 
tried account interaction various gestalt laws 
claimed gestalt laws introduced wertheimer reflect basic principles human perception 
postulates principle simplicity regularity 
different gestalt laws assign different structures pattern law predicts simplest regular structures perceived 
van der helm leeuwenberg noticed formulation law states kind pattern descriptions generated provide measure determines simplicity regularity pattern descriptions 
leeuwenberg van der helm attempted answer questions proposing coding language complexity measure 
coding language supposed generate possible structural descriptions patterns 
pattern may various structural descriptions reflects possible organization pattern 
complexity measure select preferred perceptual organization pattern possible organizations 
structural information theory language complexity measure proposed leeuwenberg van der helm lee theory pattern perception called structural information theory henceforth sit 
aim sit explain patterns perceived pattern perceived having certain structure different 
explanation assumption human perceptual system sensitive certain kinds structural regularities patterns 
structural chapter 
gestalt perception structural information theory regularity pattern certain hierarchical arrangement identical pattern parts 
example regularity string pattern abab may defined terms identity third second fourth identity second substrings ab 
note identities hierarchical structure identities substrings ab higher hierarchical level implies identities lower hierarchical level 
sit certain kinds structural regularities perceptually relevant 
structural regularities determine perceptual organizations gestalts patterns specified means set operators conjectured reflect innate principles mental representation 
operators called isa operators stands iteration symmetry alternation operators 
pattern parsed encoded different descriptions means isa operators 
resulting descriptions express different gestalts encoded pattern 
order disambiguate set alternative gestalts decide preferred perceptual description pattern complexity measure introduced 
complexity measure defined pattern descriptions indicates lack perceptual regularity pattern lowest complexity value corresponds largest number perceptually motivated regularities 
claimed description pattern minimum complexity value describes pattern simple cognitively economical way description minimum complexity value captures maximum amount regularity pattern expresses preferred perceptual structure pattern 
idea simplest description pattern expresses preferred perceptual structure pattern called simplicity principle 
way sit relates descriptive simplicity simplicity pattern descriptions phenomenal simplicity simplicity perceptual organizations distinguishes sit description coding theories kind pattern regularity potentially encode patterns compact way claiming resulting codes express phenomenal simplicity encoded patterns 
example computer technology compression systems reduce amount bits needed store memorize binary data 
compression systems employ various kinds regularities binary data involve claim 
structural information theory simpler compressed codes reflect meaningful structures encoded data 
sit differs kinds description coding theories defined basis empirically motivated compression operators isa operators specific complexity measure 
set isa operators complexity measure originally proposed lee undergone revisions van der helm leeuwenberg put isa operators complexity measure formal psychological basis 
introduced criterion called accessibility implies regularity hierarchy induced isa operators preferred description patterns correspond directly perceived regularity hierarchy patterns 
accessibility criterion formal analysis regularity hierarchy justify complexity measure perceptual relevance regularities specified isa operators 
years leeuwenberg workers reported number experiments tested predictions simplicity principle 
experiments concerned disambiguation ambiguous patterns 
predictions simplicity principle confirmed experiments bos bw blr 
coding system sit structural information theory intended general theory pattern perception coding system introduced represent patterns perceptual structures fact designed dimensional sequential patterns character strings 
class patterns coding system specifies set coding rules motivated isa operators 
coding rules parse dimensional patterns generate perceptual descriptions 
rules called iteration symmetry right alternation left alternation defined way 
chapter 
gestalt perception structural information theory symbol sequence integer 
coding rule iteration operator specified xx 
sequence xx consisting occurrences symbol sequence replaced 
symbol sequences 
second coding rule symmetry operator specified sequence symbol sequences sides symbol sequence reflections replaced 
symbol sequences 
third coding rule right alternation operator specified xy xy xy 

sequence symbol sequence left symbol sequence alternated symbol sequences replaced 


symbol sequences 
fourth coding rule left alternation operator specified xy 

sequence symbol sequence right symbol sequence alternated symbol sequences replaced 


examples illustrate application rules sequential patterns 
iteration rules aaa 
symmetry rule bc right alternation rule 

cd efg symmetrical pattern may pivot element odd symmetry symmetry 
cases covered symmetry rule second argument symmetry operator stands pivot element may empty non empty element 
example corresponds pattern aba pivot element 
structural information theory corresponds pattern abba pivot element absent 
parentheses occur arguments isa operators express constituents called units isa arguments 
fact isa operators defined terms constituents patterns necessarily primitive elements 
example bc elements considered constituent argument symmetry operator 
bc correspond respectively different symmetrical patterns 
symmetry non mirror symmetry primitive elements considered unit second symmetry mirror symmetry primitive element considered unit 
parentheses units primitive elements 
example write abc 
expressions resulting applications isa rules patterns called isa forms 
isa coding rule applicable pattern pattern divided subpatterns coding rules applied resulted subpatterns 
subpatterns called chunks 
example pattern may analyzed bc ef means pattern divided chunks bc ef 
furthermore isa rules applied recursively patterns arguments isa operator patterns 
recursive application coding rules patterns results embedding structure patterns 
embedding structure pattern claimed represent perceived hierarchical organization pattern 
example possible chunking embedding structure pattern may specified way 
hierarchical level pattern analyzed symmetry rule considered chunk 
argument symmetry operator pattern analyzed 
structure argument determines chunks lower embedding level 
pattern chapter 
gestalt perception structural information theory analyzed isa operator divided chunks 
second embedding level pattern analyzed chunks 
consequently complete embedded description pattern follows recursive application isa rules patterns encodes pattern regularities reduces number primitive elements pattern descriptions 
isa rule applicable pattern reduction possible resulted pattern description assumed possess regularity anymore 
resulting structured code called final code 
application different sequences isa rules pattern different final codes pattern may result 
different final codes express different gestalts encoded pattern 
example abs ab ab ba express different gestalts pattern 
order decide preferred gestalts patterns complexity measure called information load introduced 
information load defined final codes patterns measures complexity final codes computing adding quantities 
quantity number occurrences primitive elements final code second quantity number occurrences units contain primitive element final code 
example pattern may described ab final code contains primitive elements unit ab contains element 
information load description ab 
similarly pattern may described ab cd primitive elements units contain element ab cd 
information load description 
note united elements need primitive elements 
example pattern may analyzed ab non primitive element ab forms unit 
description primitive elements 
structural information theory units contain element ab ab 
information load description 
detailed definition calculation complexity measure explained 
information load provides measure ordering final codes pattern 
final code pattern lowest information load called minimum code pattern 
exists unique minimum code pattern minimum code considered preferred perceptual description pattern 
example ab possible final codes pattern abab information loads respectively 
final code ab preferred final code 
pattern may lead different final codes information load may minimum code pattern 
case unique preferred description assigned pattern 
pattern different final codes information load ambiguous pattern pattern definite perceptual structure 
example illustrates ambiguous pattern ab ba abs ab summary explicit claim sit preferred description pattern simplest 
way structural information theory formalizes aspect notion gestalt psychology viz 
descriptive economy information load perceived lower information load perceived alternatively 
partial computational model sit problem structural information theory claim sit computational intractable 
algorithms calculating simplest structural descriptions thought involve combinatorial explosion 
van der helm leeuwenberg polynomial algorithm computes preferred perceptual description sequential patterns 
starting sequential pattern step algorithm chapter 
gestalt perception structural information theory construction directed acyclic graph pattern 
nodes graph positions elements pattern 
special nodes start node final node represent pattern respectively 
link graph points node node corresponds contiguous subpattern starting position position pattern 
note constructed graph sequential pattern represents possible subpatterns pattern 
subsequently subpattern corresponds link graph best way describe subpattern just isa operator recursively determined 
results new graph link labeled isa code describing preferred organization subpattern associated link 
link length equal information load corresponding isa code 
example acyclic graph illustrated represents possible subpatterns string pattern abab 
determination isa codes subpattern results graph illustrated 
start node final node start node final node bab aba abab ab ab ba ab ab ab ba graph represents possible subpatterns pattern abab 
graph subpatterns described isa code 
graph paths start start node 
paths represent possible final codes different perceptual original pattern 
path length sum lengths links constitute path 
second step algorithm simplifies graph 
done removing links represent subpattern length longer analyzed isa rules links contain 
structural information theory element covered isa code 
links disregarded equivalent paths shorter equal length remain 
notice links corresponding element length removed reduced graphs contain paths maximum complexities 
reduced original graphs pattern equivalent respect set alternative organizations generated pattern structurally non identical paths original graph non identical organizations pattern occur reduced graph 
example original reduced graphs corresponding pattern abab respectively 
path starting start node final node corresponds different final code 
final node start node start node final node ab ab ba ab ab graph representation pattern abab reduced version 
problem calculating minimum code replaced calculating shortest path graph shortest path algorithm introduced dijkstra dij 
notice shorter path mean path smaller number links 
example consider pattern 
paths representing different organizations pattern shown 
path links shortest length equal path links length equal 
path links indicates preferred organization pattern 
chapter 
gestalt perception structural information theory shortest path lowest number links 
graph corresponding final code specifies chunking highest organizational level 
approach recursive structure graphs 
example preferable path corresponding single link representing chunk preferable path corresponding path containing links representing chunks respectively 
recursive structure graphs thought represent possible hierarchical organizations represented patterns 
limitations sit fundamental assumption sit may called encoding hypothesis 
hypothesis perceptual patterns encoded dimensional string patterns regularities encoding string patterns reflect perceptual regularities corresponding encoded patterns 
perceptual structure patterns assumed invariant encoding process 
encoding string patterns called primitive codes 
perceptual regularities encoding string patterns determined explained previous section 
sit general theory pattern perception applied various domains perceptual patterns lee 
domains perceptual patterns encoded sequences discrete symbols 
example monophonic music consisting uninterrupted sequence tones equal durations encoded sequence numbers representing pitches uninterrupted dimensional line pattern consisting connected line segments encoded sequence letters representing lengths line segments angles 
line segments interrupted connected invisibility operator applied generate invisible line segments 

limitations sit dimensional line patterns angles enriched dimensional directions 
sit mainly applied uninterrupted dimensional line patterns consisting straight line segments turtle graphics 
primitive code visual line pattern constructed choosing appropriate starting point tracing line segments concatenating symbols assigned successive lengths relative angles 
example encoding illustrated 
aa aa aa aa encoding line pattern string pattern 
doubts encoding hypotheses sit 
structural information theory computational model isa reduction process partially implemented subjects analysis primitive codes string patterns visual line patterns 
step needed encode arbitrary visual line pattern primitive code trivial step 
fact arbitrary visual line pattern primitive codes may possible 
primitive codes may result different set gestalts 
example visual line pattern lines cross considered graph possible path graph represents possible primitive code 
tracing line segments different paths results different primitive codes 
important note different primitive codes visual line pattern necessarily provide set gestalts pattern 
reason primitive code visual line pattern may provide actual perceived gestalt pattern minimum code computed primitive code visual line pattern represents gestalt chapter 
gestalt perception structural information theory preferred gestalt pattern 
implies wrong choice primitive code results wrong prediction preferred gestalt 
order illustrate phenomenon consider primitive codes figures 
primitive code provide preferred gestalt describes visual line pattern consisting straight line triangle second primitive code provide gestalt 
start point start point possible encodings line pattern 
process finding appropriate primitive code arbitrary visual line pattern trivial process 
fact process done hand leeuwenberg tradition included algorithm essential limitation 
related problem concerns definition computation perceptual regularities 
perceptual regularities defined applied primitive codes dimensional string patterns 
example alternation regularity defined different occurrences substring alternated substrings sequential order 
means clear theory applied visual patterns consist unconnected visual elements utilizing kinds visual attributes 

limitations sit problems problem patterns unique primitive code problem regularities onedimensional patterns domain visual patterns properly analyzed sit limited line patterns primitive code plausible 
restrictions result class line patterns call linear line patterns 
linear line patterns turtle line drawings turtle starts moves way line segments connected cross 
examples patterns shown 
examples linear line patterns 
serious shortcoming sit concerns limited range perceptual structures covers 
particular important sorts perceptual structures covered sit 
sort structures characterized regularity different visual spatial attributes visual elements second sort structures constitute proximity gestalts 
sit perceptual grouping pattern elements determined isa reduction rules defined terms equality pattern elements 
sit equality visual elements defined terms equality attribute values position value visual elements equal equal attribute values position value 
visual elements differ attribute value position value considered equal form perceptual group 
may clear serious limitation visual elements different shapes equal texture values form definitely perceptual group 
proper coding system allow perceptual grouping different attributes 
chapter 
gestalt perception structural information theory visual elements different shape values equal texture value form group 
sit covers structural regularities symmetry iteration terms gestalt phenomena continuation foreground background explained 
influence proximity covered 
proximity gestalt pattern perceptual grouping constitutive pattern elements determined relative distances pattern elements relatively close elements tend perceptually grouped 
proximity gestalt neighboring elements grouped local organizations detected global ones constructed 
example consider pattern shown 
relatively close visual elements form group 
pattern consists number visual elements constitute structural regularity means attribute 
involved visual elements constitute structural regularity pattern perceived having random structure perceived having certain grouping structure 
proximity gestalts differ structural gestalts selected means reduction information complexity 
words proximity gestalts reduce information needed describe patterns 
information complexity resulting proximity gestalt pattern may equal information com 
limitations sit plexity resulting structural gestalt describes pattern having random grouping structure 
fact gestalts reduce amount information needed describe pattern 
may case proximity gestalt pattern wins preferred structural gestalt gestalt higher information complexity second gestalt 
order illustrate point consider pattern 
pattern shows situation proximity analysis pairs circles single circles wins structural analysis pairs circles analysis results higher complexity value complexity second analysis complexity 
preferred gestalt patterns possible proximity gestalts determined measuring information complexity 
proximity structural analysis pattern 
may think structural regularities occur proximity group proximity groups 
example consider patterns 
patterns structural regularities proximity group proximity groups 
unfortunately heuristic quite valid patterns tend perceived having structural gestalts constituted proper subsets elements different proximity groups 
perceptual chapter 
gestalt perception structural information theory interaction proximity structural analyses 
preference structural gestalts depends relative number elements involved proximity groups constitute structural gestalts 
fact number elements proximity groups constitute structural regularity lower number elements proximity groups constitute structural regularity structural regularity loses perceptual preference 
phenomena called goodness structural regularities goodness gestalts 
example consider patterns illustrated 
patterns figures symmetry iteration regularities respectively 
patterns illustrated perceived having similar structural regularities illustrated respectively perception regularities 
notice patterns proximity effect responsible goodness structural regularities 
example consider influence proximity effect pattern 
perception groups dots form rectangles say disturbed proximity effect caused closely positioned dots 
order perceive need perceive 
limitations sit proximity factor effects goodness patterns 
dots 
perceive proximity effect enforces perception second dot 
means perceived group dots goodness perceptions decreased 
focus goodness structural regularities note disturbance regularities goodness perception regularities 
structural information theory discusses proximity gestalt claims cover may suggest proximity gestalt structural gestalts explained means minimum principle 
suggestion proximity gestalts pattern descriptions describe patterns terms groups pattern elements terms individual pattern elements 
way assumed human perceiver perceive individual elements patterns groups 
information needed describe pattern information groups elements pattern information individual elements 
fewer groups elements individual elements pattern proximity gestalts considered pattern descriptions reduce amount information needed describe patterns 
suggestion implies abstraction pattern descriptions minimum principle applied 
proposing abstraction pattern descriptions introduce chapter method accounts interaction structural proximity gestalts 
chapter 
gestalt perception structural information theory chapter various coding systems 
introduce coding systems designed represent dimensional string patterns possible gestalts 
introduce coding systems designed represent dimensional visual patterns possible gestalts 
gestalts dimensional visual patterns defined terms visual spatial attributes 
coding system need translate visual patterns dimensional string patterns compute gestalts 
chapter coding languages gestalts patterns previous chapter discussed structural information theory sit general predictive theory pattern perception theory predicts preferred gestalts perceptual patterns 
argued proposed coding system sit designed represent possible gestalts perceptual patterns represent gestalts string patterns gestalts small subclass line patterns 
particular showed proposed coding system powerful represent gestalts important classes perceptual patterns class dimensional visual patterns 
chapter introduce various algebraic coding languages 
coding language consists algebraic expressions represent possible gestalts certain class perceptual patterns 
order specify coding language certain class perceptual patterns consider class perceptual patterns universe algebra set operators motivated structural operators sit isa operators 
set algebraic terms expressions generated algebra defines coding language class perceptual patterns 
section specify coding language dimensional string patterns 
coding language algebraic reformulation original version coding system proposed van der helm leeuwenberg 
coding language specified considering class chapter 
coding languages gestalts patterns dimensional string patterns universe algebra 
gestalts patterns defined structure algebraic terms represent patterns 
section generalize notion gestalt 
generalization assumption acquaintance accessibility certain operators defined patterns certain domain influence gestalts patterns 
elaborate dimensional string patterns illustrate influence string operators successor predecessor gestalts 
section dimensional visual patterns gestalts discussed 
dimensional visual patterns defined terms values visual attributes position color size shape orientation texture gestalts dimensional visual patterns defined terms structures visual attribute values 
section view dimensional visual patterns gestalts formalized specifying algebraic coding language dimensional visual patterns 
coding language consists algebraic expressions represent possible gestalts dimensional visual patterns 
expressions terms algebra universe consists tuples visual attribute values universe consists representations dimensional visual patterns 
show coding language cover gestalts dimensional visual patterns 
order cover broader range gestalts dimensional visual patterns coding language extended 
coding language string patterns section algebraic coding language dimensional string patterns introduced 
coding language consists algebraic expressions represent gestalts dimensional string patterns 
order specify coding language introduce algebra henceforth string algebra 
universe objects string algebra domain dimensional string patterns set natural numbers set isa operators 
domain onedimensional string patterns defined follows 
coding language string patterns 
definition 
domain dimensional string patterns set finite strings generated grammar fs ag set non terminal symbols fa zg set terminal symbols start symbol set rewrite rules aa order represent gestalts patterns original coding system sit introduces operators called iteration symmetry right alternation left alternation 
original coding system sit contain explicit operator express pattern concatenation concatenation patterns expressed concatenation representations 
algebraic version coding system sit structures expressed explicitly operator 
additional operator called concatenation operator con included algebraic version coding system 
original coding system sit symmetry operator introduced 
symmetry operator arguments argument stands symmetrical part second argument stands possible pivot element 
symmetry operator generates symmetrical patterns pivot element assuming empty element second argument symmetry operator empty element generated symmetrical pattern contain pivot element 
alternatively algebraic version coding system assume empty element empty element perceptual relevance 
introduce distinct symmetry operators called symmetry sym odd symmetry sym generates symmetrical patterns contain pivot element second generates symmetrical patterns contain pivot element 
chapter 
coding languages gestalts patterns 
definition 
delta delta delta string pattern fa zg ym belong domain string patterns set isa operators defined follows iter delta delta delta times sym delta delta delta delta delta delta sym delta delta delta delta delta delta alt ym 
xy delta delta delta alt ym 
xy xy delta delta delta con ym delta delta delta ym derivations illustrate algebraic expressions gestalts string patterns represented 
iter con iter abc 
sym con iter sym con aa sym aab alt sym 
alt aba 
set isa operators powerful generate gestalts covered original coding system sit 
limitation related symmetry operator 
original coding system symmetry operator defined primitive elements fa zg defined groups elements considered units 
symmetry operator supposed preserve sequential order united elements 
example pattern symmetrical pattern elements considered unit 
order express kind symmetry structures original coding system sit employs parentheses indicate united elements 
original coding system sit structure pattern expressed ab 
order extend algebraic version coding system cover 
coding language string patterns unit symmetry structures may define symmetry operators string patterns constituted merely primitive elements pre structured string patterns units elements explicitly expressed 
domain dimensional string patterns extended set dimensional string patterns 
extended domain simply specified introducing parentheses additional terminal symbols grammar adding extra production rule generates units elements 
rule defined follows 
consequence including units set isa operators extended 
fact isa operators defined primitive elements united elements 
note definition isa operators defined string patterns constituted terminal symbols fa zg 
order redefine isa operators define notion string objects encompassing terminal symbols fa zg units elements 

definition 
set dimensional string patterns specified extended grammar set string objects subset defined follows fa zg delta delta delta isa operators defined string patterns consist string objects 
definition isa operators element string pattern delta delta delta string object primitive element fa zg 
order express unit structure patterns explicitly new operator called unit operator added set algebraic operators unit structure string patterns expressed parentheses unit operator may superfluous 
unit operator advantage pattern structures expressed explicit operators 
string objects xm unit operator may defined follows unit delta delta delta xm 
delta delta delta xm chapter 
coding languages gestalts patterns version string algebra derivations illustrate algebraic expressions gestalts string patterns represent 
sym con unit con sym con unit ab sym con ab sym ab cd 
ab ab 
sym con unit con sym con unit con sym con unit con sym con unit ab sym con unit con sym con ab sym con unit con sym ab sym con unit con ab cc ab sym con unit ab cc ab sym con ab cc ab sym ab cc ab ab cc ab ab cc ab structural description pattern gestalts shows pattern built patterns 
corresponds called term algebra 

definition 
class structural descriptions string algebra denoted recursively defined follows order allow descriptions classes patterns descriptions individual patterns may introduce variables standing terms 
way gestalts considered templates structures different individual patterns common 
extend universe string algebra denumerably infinite set variables recursive definition algebraic terms extended clause 
coding language string patterns ffl terms string algebra primitive complex 

definition 
primitive term single element set fa zg isa operator applied finite number terms builds complex term 
sl language gestalts string patterns definition string algebra definition algebraic terms define algebraic coding language onedimensional string patterns henceforth string language sl class terms string algebra sl 
definition 
string sl specified string algebra recursively defined follows ffl sl ffl sl iter sl ffl sl sym sl ffl sl sym sl ffl sl alt sl alt sl ffl sl con sl ffl sl unit delta delta delta sl 
sl expressions refer elements set string patterns sl expressions may contain variables variables stand elements define assignment function assign elements variables interpretation function sl expressions defined 
chapter 
coding languages gestalts patterns 
definition 
string algebra set string objects assignment function defined 
denotation sl expressions defined interpretation function bottom fashion follows ffl ffl ffl form iter delta delta delta times ffl form sym delta delta delta delta delta delta delta delta delta ffl form sym delta delta delta delta delta delta delta delta delta ffl form alt xy delta delta delta ffl form alt xy xy delta delta delta xy ffl form con delta delta delta ffl form unit 
interpretation function extensional equality structural identity sl expressions defined 
sl expressions extensionally equal interpreted string pattern 
variable free sl expressions represent gestalts dimensional patterns 
consequently extensionally equal expressions may constitute different gestalts pattern 
result structural information theory described terms sl language complexity function assigns natural number sl expression sl 

extending string algebra domain relations 
definition 
primitive sl expression arbitrary sl expressions isa operator unit operator 
empirically motivated suggestion proposed leeuwenberg van der helm complexity function defined follows unit minimum principle states preferable gestalt pattern sl expression extensionally equal sl expressions pattern assigned interpretation function lowest complexity value 
gestalt considered relation hand set dimensional string patterns hand set sl expressions 
relation indicates alternative gestalts may assigned string patterns 
pattern minimum principle selects algebraic sl expressions represent preferred gestalts 
extending string algebra domain relations perceptual structures patterns covered sit certain kinds regularities 
regularities defined terms identities pattern constituents 
example regularity string pattern defined terms identity relations second occurences ab second occurences identity relations reflected description pattern sym unit 
certain domain perceptual patterns relations may applicable pattern constituents 
instance domain string patterns order alphabet characters relates means relations successor predecessor claim identity relation domain specific relations may induce perceptually motivated pattern regularities 
particular claim pattern regularity descriptive simplicity defined terms chapter 
coding languages gestalts patterns domain specific relations related perceptual regularity phenomenal simplicity 
issue explicitly addressed van der helm leeuwenberg 
argue operators cognitive perceptual incorporated perceptual coding principles 
way suggest strict perception cognition 
follow idea strict perception cognition feel operators requiring addition complex operations may left simple operators successor predecessor playing critical role perception ought included gestalts 
idea observation domain string patterns patterns abc different perceptual status pattern 
patterns special perceptual status pattern preferably perceived consisting substrings abc arbitrary substrings 
special status patterns explained terms regular structures defined terms domain relations 
case string pattern abc regular structure successor turn successor words regularity pattern abc domain specific successor relation holds second elements second third elements 
similarly string pattern perceived regular pattern predecessor turn predecessor kinds regularities called domain specific regularities 
conjecture acquaintance domain relations may influence perception patterns relations may reveal regularity 
coding system proposed leeuwenberg van der helm account role visual attributes size color texture play gestalts perceptual patterns 
important constituents perceptual patterns may related various visual attributes 
example string pattern pg individual non identical letters related size values size relation individual letters effects gestalt pattern 
believe visual attributes play important role gestalts perceptual patterns ignore effect attributes gestalts string patterns discuss issue detail study gestalts 
extending string algebra domain relations dimensional visual patterns 
point follow van der helm leeuwenberg claim perceptually motivated structures identity structures described isa operators suggest extension perceptually motivated structures 
instance example structure pattern abc analysed iteration successor relation pattern elements 
consequently extend string algebra cover domain specific regularities modifying iteration alternation operator 
modified version isa operators generate perceptually motivated regularities respect certain predefined empirically selected set domain specific relations call set admissible relations 
assume domain specific relations specified place functions 
term admissible function admissible relation 
modify iteration operator covers domain specific regularities redefine operator take admissible function additional argument 
order modify left right alternation operators follow original idea operators proposed sit 
sit alternation operators express structures comprise interspersed structures iteration structure 
fact regularity alternation structure regularity iteration structure involved 
modify iteration operator including admissible function arguments modify alternation operators way including admissible function arguments 
additional argument extend domain embedded iteration structure domain alternation structures 
incorporate domain specific regularities algebraic framework set admissible place domain specific functions may play role construction gestalts augment iteration alternation operators extra argument element note isa operators second order operators 
define extended version string algebra define admissible functions 
argued admissible functions selected empirical studies believe identity id successor succ predecessor pred included set admissible chapter 
coding languages gestalts patterns functions 
admissible functions defined follows id id id yz yz succ succ succ xy yz pred pred pred axt extended string algebra called extended string algebra consists universe defined set isa defined follows 

definition 
delta delta delta string pattern string object ym arbitrary string patterns fid succ pred write indicate place function applied times set extended algebraic isa operators defined contain operators iter delta delta delta gamma sym delta delta delta delta delta delta sym delta delta delta delta delta delta alt ym 
delta delta delta ym gamma alt ym 
delta delta delta gamma ym con ym delta delta delta ym unit delta delta delta ym 
delta delta delta ym defined example extended isa algebra generate descriptions string patterns aaa abc bc bc 
aaa iter id abc iter succ iter iter id pred sym iter succ bc bc sym con unit con alt succ con expressions extended string algebra specify perceptual string patterns 
modified version isa 
extending string algebra domain relations operators string abc iteration regularity abc considered single chunk 
note modified version iteration operator specify regularity pattern perceptual chunking consists note symmetry operators considered special case modified iteration operator considered times iteration symmetry half respect reflection function 
modification isa operators symmetry operator superfluous exclude extended string algebra 
reason describe symmetry operator terms iteration operator avoid generation algebraic terms form iteration times respect reflection relation extended string algebra generate algebraic terms form iter ref lection 
algebraic terms violate claim sit states descriptive regularities related phenomenal regularities 
extension string algebra admissible functions changes structure algebraic terms structural complexities 
assume admissible functions increase complexity algebraic terms patterns preferably perceived terms identical parts 
general assume different admissible functions different perceptual relevance 
way different admissible functions increase complexity value expressions extended string algebra differently 
assumption reflects prediction preference ordering admissible functions terms string patterns described 
assume application admissible functions complex expressions increase information complexity applications primitive expressions 
idea observation string pattern preferably perceived con iter succ iter succ iter iter succ pred 
exact order complexity values admissible functions applications established empirical research 
computational model sit modified order compute domain specific regularities 
original version computational model see chapter section graph gener chapter 
coding languages gestalts patterns ated represents possible substrings string pattern 
fact edge generated graph represents possible substring string pattern 
substring edge graph tested substring described terms isa operators 
recall test examines various constituents substring identical 
order modify computational model cover domain specific regularities string patterns test substring represented graph edge described terms modified version isa operators 
difference original modified versions isa operators consists iteration alternation operators computational complexity influenced complexity operators 
difference original modified version operators additional tests domain specific functions 
describe substring terms operators test various constituents substring identical tested constituents tested identity relation domain specific relations 
effects computational complexity linearly number domain specific relations means order complexity remains 
gestalts dimensional visual patterns follow sit idea pattern may potential structures perceptual structure selected applying simplicity principle 
believe encoding system introduced sit satisfactory covers small subclass line patterns represented unambiguously linear dimensional strings 
order define system analyzing computing gestalt visual patterns sit problems limitations avoided larger class visual patterns covered describe gestalts terms regularities attribute values dimensional primitive visual elements 
emphasize primitive visual elements gestalts dimensional visual patterns may regularities values characteristic attributes compound visual elements group primitive 
gestalts dimensional visual patterns visual elements 
characteristic attribute compound visual element indicates property element property constitutive primitive visual elements 
thesis ignore gestalts regularities values characteristic attributes compound visual elements 
attributes dimensional primitive visual elements divided visual spatial attributes 
example color texture classified visual attributes position orientation classified spatial attributes 
classification attributes visual spatial clear attributes shape size classified visual spatial 
write visual attribute indicate attribute dimensional primitive visual elements 
attribute structure section primitive visual elements points lines circles considered terms visual attributes 
perceptual grouping visual patterns defined terms certain kinds regularities may exist values different attributes constitutive primitive visual elements 
perceptual grouping defined terms regularities values attributes said induced attributes 
example primitive visual elements randomly positioned regularity position values different shapes sizes may texture value 
equality texture values results similarity primitive visual elements induces grouping 
grouping said induced texture attribute 
similarly primitive visual elements randomly positioned different sizes circle square shapes may texture value 
shape equality texture equality result possible perceptual groupings 
perceptual grouping induced shape attribute results perceptual groups consists primitive visual elements circle shapes consists primitive visual elements square shapes 
perceptual grouping induced texture attribute results perceptual groups consists primitive visual elements texture value 
example perceptual grouping induced position attribute consider visual pattern illustrated 
visual pattern shape chapter 
coding languages gestalts patterns elements may perceived perceptual group 
example texture grouping 
example shape texture grouping 
shape element form perceptual group 
visual attributes may perceptually interact 
interactions different visual attributes influence perceptual grouping visual elements gar 
order study interaction attributes psychological notions called separability integrality stimuli dimensions 
dimensions called separable perceptual grouping elements induced dimension 
example considering shape texture attributes primitive visual elements perceptual grouping may induced shape attribute texture attribute 
case attribute supports perceptual grouping separately 
contrast dimensions called non separable integral perceptual grouping induced dimension separately similarities primitive visual elements 
gestalts dimensional visual patterns caused combination integral dimensions 
example hue saturation brightness attributes primitive visual elements induced grouping attributes induced similarities elements caused hue saturation brightness attributes 
similarly dimensional space horizontal vertical dimensions non separable positional gestalts constituted primitive visual elements differ positions supported horizontal dimension vertical dimension 
order illustrate integrality horizontal vertical dimension consider visual patterns 
integrality horizontal vertical dimensions black dots perceptually grouped due regularity positions black dots perceptually grouped due regularity positions positions regular 
regularities position values induce perceptual grouping elements visual pattern illustrated regularity position values induce perceptual grouping elements visual pattern illustrated 
general concluded integral attributes induce perceptual grouping exists regularity values integral attributes 
assume combination non separable dimensions defines complex space elements determined combined values dimensions 
perceptual grouping regularity elements complex space chapter 
coding languages gestalts patterns regularity certain combination values non separable dimensions 
resulting perceptual groupings induced combinations non separable attributes 
combinations non separable attributes may considered additional complex attributes 
order cover grouping effects induced combinations non separable dimensions identify combinations introducing additional complex attributes determine perceptual grouping induced 
rest chapter mainly focus perceptual groupings induced horizontal vertical dimensions integral dimensions dimensional space assume integral dimensions analyzed similar way 
attribute regularity visual patterns illustrated primitive visual elements claimed perceptual group identical values attributes 
consider visual pattern illustrated 
perceptual grouping visual pattern induced position attribute 
position values shape primitive elements visual pattern identical form perceptual group 
section argue primitive visual elements may form perceptual groups regularities may exist attribute values 
consider regularity attribute values terms functional dependencies 
functional dependency attribute values characterized terms certain admissible transformations 
admissible transformation may transform subset attribute values subset values attribute 
accordingly subset attribute values described terms second subset attribute values admissible transformation 
set attribute values may represented terms subset values admissible transformation 
way explained shape elements form perceptual group position shape element results applying translation transformation position shape element position shape element results applying translation transformation position shape element 

gestalts dimensional visual patterns distinguish parameterized non parameterized transformations 
parameterized transformation transforms subset values attribute subset values attribute parameter value 
consequently different parameter values transform subset values attribute different subsets values attribute 
contrast non parameterized transformation depend parameter values transforms subset values attribute subset values attribute 
example parameterized transformation 
att transforms value attribute att adding parameter value 
att applications 
att 
att value attribute att result different values attribute att respectively 
hand non parameterized transformation att transforms value attribute att multiplying constant value att theta application transformation value attribute att results value theta attribute att 
order illustrate transformations consider visual pattern 
positions primitive visual elements black dots involved pattern described terms xand position left black dot 
fact positions right black dots described terms position left black dot parameterized position transformations xpos ypos note positions right black dots result applying transformations position parameter values 
basic euclidean transformations called translation rotation reflection dimensional position chapter 
coding languages gestalts patterns tribute 
distinguish kinds rotation transformations 
rotation transformations kind called rotate transformations rotate primitive visual elements respect center positions rotate shape primitive visual elements 
rotation transformations second kind called rotate transformations rotate primitive visual elements respect positions shapes 
example visual patterns illustrated result rotate rotate transformations respectively 
examples rotation rotation transformations 
distinction parameterized non parameterized transformations introduce second distinction transformations orthogonal 
second distinction admissible transformations divided kinds concrete transformations 
transformation intensional description functional dependencies values attribute concrete transformation extensional description functional dependencies values attribute 
transformation represented formal expression expresses functional dependencies attribute values terms mathematical operations relations concrete transformation represented set tuples relates attribute values expresses functional dependencies 
example mentioned parameterized transformation 
att non parameterized transformation att transformations represented formal expressions theta respectively 
example non parameterized concrete shape transformation set rectangle circle square triangle triangle line example parameterized concrete shape transformation set 
coding system visual patterns circle rectangle circle circle circle square distinction concrete transformations reasons explain rest chapter 
note speak admissible transformations discussing criteria determine transformation admissible 
general assume admissible transformations empirically selected known 
coding system visual patterns previous section considered dimensional visual patterns consisting primitive visual elements points lines circles explained primitive visual elements defined terms visual attribute values 
regularity visual patterns analyzed terms regularity attribute values constitutive primitive visual elements 
regularity attribute values considered terms functional dependencies 
functional dependencies characterized admissible transformations 
section represent visual pattern set tuples 
tuple consists values different visual attributes represents primitive visual element 
example considering position shape attribute primitive visual element circle shape placed position represented 
circle 

brackets position indicate integrality attribute values 
perceptual regularity dimensional visual patterns defined terms functional dependencies values identical attributes tuples represent primitive visual elements pattern 
functional dependencies characterized admissible transformations transform values identical attributes 
primitive visual elements represented means values attributes functional dependencies tuples characterized tuple admissible transformations 
transformation tuple defined values attribute 
example non parameterized position transformation xpos non parameterized position transformation ypos non parameterized concrete shape transformation shape respectively defined follow chapter 
coding languages gestalts patterns xpos ypos shape circle circle square non parameterized transformation tuple defined 
xpos ypos shape 
transformation characterizes functional dependencies primitive visual elements represented tuples 
circle 
square second tuple results applying tuple 
xpos ypos shape 
circle 
xpos ypos shape circle 
square 
note application tuple transformations tuple attribute values 
general att attn values att att respectively transformations att attn defined attributes application att attn att attn defined follows att attn 
att attn 
att att attn att 
define perceptual regularities dimensional visual patterns functional dependencies visual attribute values described terms isa operators 
discuss different classes regularities dimensional visual patterns 
class regularities gives rise certain structure described specific isa operator 
iteration structure kind perceptual structures visual patterns covers iteration structures 
visual pattern iteration structure representation consists subsets tuples described terms successive applications admissible parameterized transformation tuples contained subsets 
admissible parameterized transformation defined natural number parameter value 
coding system visual patterns successive applications tuples contained subset generate subsets tuples 
idea order successive natural numbers parameter values successive applications admissible transformation imposes ordering generated subsets tuples 
example consider pattern position shape attributes taken account 
position iteration structure 
pattern iteration structure 
positions pairs similar primitive elements generated successive applications parameterized transformations positions square pair translation transformation 
xpos position attribute identity transformation 
ypos position attribute 
shape transformation 
shape concrete parameterized transformation 
transformations respectively defined follows xpos gamma ypos shape square square square square circle square triangle square oval 
square 
square tuples represent squares illustrated 
xpos 
ypos shape defined 
visual pattern illustrated represented set 
xpos 
ypos 
shape 
square xpos 
ypos 
shape 
square chapter 
coding languages gestalts patterns general visual attributes att att tuple admissible parameterized transformations 
att 
attn consisting parameterized transformations defined attributes att att tuples 
att attn consisting values attributes att att set represents visual pattern iteration structure 

kg 
application transformation 
tuple defined 
symmetry structure second kind perceptual structures visual patterns covers symmetry structures 
visual pattern symmetry structure representation consists subsets tuples position values tuples contained subset reflections position values tuples contained second subset relative reflection axis 
values non positional attributes tuples contained subset identical values attributes reflected tuples contained second subset 
way subset tuples described terms second subset tuple transformations 
position transformations non parameterized euclidean reflection transformations non positional transformations non parameterized identity transformations 
example visual pattern shown pattern symmetry structure 
note symmetrical pattern primitive visual elements reflection identical attribute values position value 
structure kind dimensional symmetrical patterns called strict symmetry 
concept symmetry structure generalized cover larger class symmetrical patterns 
generalization idea symmetry structure dimensional visual patterns perceived values non positional attributes reflected primitive visual elements identical positions primitive visual elements reflections 
visual patterns strict symmetry structure visual pat 
coding system visual patterns visual pattern strict symmetry structure 
terns general case symmetry structure represented terms subsets tuples position values tuples contained subset reflections position values tuples contained second subset relative reflection axis 
visual patterns strict symmetry structure values non positional attributes tuples contained subset may differ values identical non positional attributes reflected tuples contained second subset 
way subset tuples described terms second subset tuple transformations including euclidean reflection transformation 
consider strict symmetry special case symmetry structure 
example general case symmetry structure consider visual pattern illustrated 
visual pattern size primitive visual element right side symmetry half twice size reflected visual element left side symmetry half 
considering position position shape size attribute pattern represented subsets consisting tuples 
position values tuples contained subset determined applying euclidean reflection transformation relative reflection axis position values tuples contained second subset 
implies non parameterized transformations xpos ypos respectively position defined follows xpos gamma xpos sizes different primitive visual elements compared comparing sizes rectangles contain primitive visual elements 
chapter 
coding languages gestalts patterns visual pattern symmetry structure 
shape values tuples contained subset subset represents right side symmetry half determined applying non parameterized concrete transformation shape shape values tuples contained second subset 
shape transformation shape defined follows shape hexagon triangle circle parallelogram square oval size values tuples contained subset subset represent right side symmetry half determined applying non parameterized transformation size size values tuples contained second subset 
size transformation size defined follows size theta 
square 
circle 
hexagon tuples represent primitive visual elements left side symmetry half visual pattern illustrated non parameterized transformations xpos ypos shape size defined 
visual pattern illustrated represented set 
coding system visual patterns 
square 
circle 
hexagon 
xpos ypos shape size 
square 
xpos ypos shape size 
circle 
xpos ypos shape size 
hexagon general visual attributes att att tuple admissible non parameterized transformations 
att attn consisting non parameterized transformations defined attributes att att tuples 
att attn consisting values attributes att att set represents visual pattern symmetry structure fe unit structure notion unit introduced define special kind symmetrical patterns individual primitive elements units primitive elements reflected 
reflection unit primitive visual elements preserves spatial relation united elements reflection unit elements similar translation united elements relative reflection axis 
example shape elements united elements mutual spatial relation preserved reflection transformation 
note graphics programs kind grouping operation common 
spatial relation united shape elements preserved symmetrical halves 
notion unit sense artificially constructed chapter 
coding languages gestalts patterns symmetrical patterns visual patterns parts primitive visual elements symmetrical halves intended mirror images 
parts primitive visual elements may text objects human face natural pictures 
symmetrical pattern illustrated text object considered unit reflected 
text text symmetrical pattern text object considered unit element 
assume units primitive visual elements placing representing tuples brackets 
note difference brackets tuples 
considering position position shape attribute 
circle 
square 
ext 
ext 
square 
circle tuples represent primitive visual elements visual pattern illustrated set tuples represents visual pattern text elements unit elements 
circle 
square 
ext 
square 
circle 
ext alternation structure original version sit domain patterns restricted domain sequential string patterns additional perceptually motivated structure called alternation structure 
explained alternation structure sequence string elements string element alternating string elements 
example string pattern considered having alternation structure represented expression alt kp csg 

coding system visual patterns important note alternation structure patterns perceived sequence order constitutive elements 
case string patterns neighborhood string elements element neighbors imposes sequence order 
case dimensional visual patterns pre defined sequence order constitutive primitive visual elements may think alternation structure defined twodimensional visual patterns 
order show suggestion valid consider visual pattern illustrated 
example dimensional visual pattern may considered having alternation structure 
visual pattern iteration regularity defined position values imposes sequence order primitive visual elements 
sequence order shape values considered inducing alternation structure primitive visual elements 
consequently reformulation perceptual structures terms regularities values different attributes suggests alternation regularity special case iteration regularity position values described parameterized euclidean transformation values non positional attributes described alternation transformations 
alternation transformation parameterized transformation uses sequential order parameter values specifies transformation values subset values attribute alternated subsets values attribute 
left right alternation operators original version sit subset attribute values alternated subsets attribute values define odd alternation transformations follows chapter 
coding languages gestalts patterns gamma alternation gamma gamma ig odd gamma alternation gamma ig considering position position shape attribute odd alternation transformations visual pattern illustrated represented way visual patterns iteration structures represented 
difference parameterized transformations non positional attributes alternation transformations 
case visual pattern illustrated alternation transformation shape attribute 
shape defined follows shape triangle circle oval gamma 
composition structure primitive visual elements regularity kinds attribute values assumed composition structure 
composition structure corresponds concatenation structure original version sit 
visual pattern composition structure consists unrelated primitive visual elements 
example visual pattern illustrated composition structure 
note arbitrary set primitive visual elements considered having composition structure 
visual pattern composition structure represented set tuples visual attribute values 
example dimensional visual pattern described having composition structure 
important note visual pattern described 
coding system visual patterns having iteration structure transformations attributes inclusive positional attributes concrete transformations 
explain chapter discuss information complexity expressions represent gestalts dimensional visual patterns description visual pattern terms iteration structure concrete transformations results higher information complexity alternative description terms composition structure 
general claim information complexity disambiguate possible descriptions visual pattern select represent preferred gestalts visual pattern 
vreg language visual regularities previous sections explained dimensional visual patterns represented set tuples represents primitive visual element means values different visual attributes 
argued regularities values identical attributes tuples described specific isa operators 
regularities give rise perceptually motivated structures determine gestalts twodimensional visual patterns 
section proposed view regularities dimensional visual patterns define formal coding language expressions represent gestalts dimensional visual patterns 
coding language defined terms set tuples represent primitive visual elements set structural rules specifies gestalts dimensional visual patterns 
att att domains values different visual attributes 
set representations possible primitive visual elements determined cartesian product domains attribute values att theta fe 
att att regularities attribute values iteration structures characterized admissible parameterized transformations define attribute set admissible parameterized transformations 
general assume omega att omega attn sets typed parameterized admissible transformations 
type att indicates domain attribute values chapter 
coding languages gestalts patterns parameterized transformations 
att omega att applicable 
primitive visual elements represented tuples values mutually distinct visual attributes parameterized transformations applied tuples admissible parameterized transformations having mutually distinct types 
set omega possible tuples admissible parameterized transformations cartesian product mutually distinct typed sets admissible parameterized transformations omega omega att theta theta omega attn define additional set psi psi att theta theta psi attn set possible admissible non parameterized transformations positional transformations admissible reflection transformations 
set specially defined symmetry structures 
define formal language called vreg language visual regularity language generates expressions represent gestalts dimensional visual patterns 
call expressions vreg expressions 

definition 
language vreg defined primitives omega psi iter sym comp unit ffl set primitive visual elements ffl omega set admissible parameterized transformations omega 

pos 
size 
att omega att 
pos parameterized euclidean transformation ffl psi set admissible reflection transformations psi 
pos size att psi att pos euclidean reflection transformation ffl iter sym comp unit functor names corresponding iteration symmetry compose unit visual patterns respectively vreg expressions defined basis primitives follows vreg expression am vreg expressions 
omega psi omega psi expressions vreg expressions 
coding system visual patterns iter 
sym unit comp am note specify specific set visual attributes 
way may consider set vreg languages differ visual attributes primitive visual elements 
vreg language generates gestalt expressions visual patterns characterized certain set attributes 
expressions vreg language refer visual patterns may define semantics vreg language model theoretic sense set possible visual patterns domain set admissible transformations domain elements visual patterns domain elements 
visual pattern considered set primitive visual elements domain visual patterns considered set sets primitive visual elements want allow unit symmetry structures visual patterns may include unit visual elements 
assume domain visual patterns pre structured united primitive visual elements 
done assuming united primitive visual elements visual patterns indicated brackets 

definition 
model vreg language consists domain domain visual patterns domain admissible transformations interpretation function defined tuples attribute values represent primitive visual elements tuples transformations 
assume fixed coordinate system model positional values constitutive primitive visual elements defined coordinate system euclidean transformations defined respect origin coordinate system 
omega psi interpretation function property 
tuple admissible transformations chapter 
coding languages gestalts patterns interpretation function semantics vreg expressions recursively defined follows 
definition 

model vreg language am vreg expressions ffl indicate application transformations domain elements 

omega psi omega psi semantic interpretation vreg expressions defined follows iter 

ffl sym ffl comp am unit ffl 
note semantics vreg expressions indicates visual pattern model constituted visual patterns indicates constituent structures visual patterns 
constituent structure visual patterns expressed union relation visual patterns 
noticed application reflection transformation unit primitive visual elements trivial 
fact spatial relations united primitive visual elements invariant reflection transformation 
order preserve spatial relations united primitive visual elements reflection transformation define application reflection transformation united elements double reflection united elements reflected actual reflection axis subsequently resulting united elements reflected reflection axis parallel actual reflection axis goes center united elements 

coding system visual patterns double reflection guarantees spatial relations united primitive visual elements preserved 
double reflection process illustrated 
process reflecting patterns containing united elements 
pattern consists united shape elements 
pattern reflected actual reflection axis reflected united elements reflected reflection axis parallel actual reflection axis goes center united elements 
general application transformations united elements defined follows 
definition 
mid reflect pos generates reflection transformation reflects visual pattern reflection axis parallel axis reflection transformation pos goes center 
pos 
pos respectively positional reflection transformation positional parameterized transformation translation rotation reflection 
application transformations united elements indicated ffl operator defined follows 
pos size ffl hj 
pos size ffl mid reflect pos ffl 
pos 
size ffl hj hj 
pos 
size ffl note clause definition visual pattern hj considered unit reflected twice 
results visual chapter 
coding languages gestalts patterns pattern similar translation hj exactly wished achieve reflection units primitive visual elements 
important note transformation expression ffl obeys distribution law ffl ffl ffl 
example vreg expressions example gestalt corresponding vreg expression consider dimensional visual pattern consists arrows primitive visual elements 
visual pattern letters attached individual arrows considered representations arrows tuples attribute values 
letters visual elements included visual pattern order indicate primitive visual elements represent 
letters vreg expressions describe gestalt visual pattern 
visual pattern having iteration structure 
visual pattern illustrated described consisting chunks 
chunks contains arrows 
second chunk arrows represented results applying transformation consisting translation direction axis translate degree rotation gamma rotate chunk arrows represented third chunk arrows represented resulted applying transformation twice chunk 
gestalt preferred perceptual structure represented vreg expression 
coding system visual patterns iter iter translate translate ffi gamma rotate expression ffi transformation composition operator 
semantics vreg language semantics expression determined follows iter iter translate translate ffi gamma rotate translate ffi gamma rotate ffl iter translate translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl translate ffi gamma rotate ffl translate ffl 
expression transformations defined respect origin assumed coordinate system 
semantic description indicates visual pattern regularly constructed means arrow represented arrows involved visual pattern determined different compound transformations defined respect origin coordinate system 
chapter 
coding languages gestalts patterns extension coding language vreg language supposed generate expressions represent perceptually motivated structures dimensional visual patterns 
perceptually motivated pattern structures represented expressions vreg language 
section consider new class perceptually motivated structures dimensional visual patterns propose extension vreg language cover pattern structures 
vreg language pattern structures represented embedded expressions 
particular iteration expression defined terms embedded expression admissible parameterized transformation 
index semantics iteration expression defined terms application sequence transformations 
expression iter 

ffl 
semantic definition iteration expression pattern represented expression considered single organized structure successively transformed sequence admissible transformations 
way internal organization structure pattern represented preserved applied transformations different occurrences transformed identical internal organizations 
example example visual pattern represented embedded expression iter translate consists arrows straight line 
pattern transformed successively parameterized transformation translate ffi gamma rotate resulting patterns successive transformations consist arrows straight line internal organization pattern iter translate preserved 
class visual patterns regular perceptual structure considered general case iteration structure contrast special case iteration structure proposed far 
henceforth call patterns general case iteration structure structure patterns special case iteration structure patterns 
structure patterns structure patterns described terms subpattern sequence admissible parameterized transformations 
structure patterns internal organization subpattern structure patterns 
extension coding language preserved successive transformations 
example consider visual pattern consisting arrows primitive visual elements 
example general case iteration structure 
visual pattern visual pattern left vertical subpattern translated direction axis pattern internal organization subpattern arrows straight line preserved 
fact individual arrows vertical chunk locally rotated 
consider left subpattern single object translated direction axis 
structure patterns considered consisting subpattern successively transformed kinds parameterized transformations local global transformations 
local transformations successively applied embedded parts subpattern global transformation successively applied subpattern 
local transformations responsible internal changes different occurrences subpattern 
example visual pattern illustrated left vertical subpattern consisting arrows successively transformed global translation transformation individual arrows successively transformed local rotation transformation 
example structure pattern illustrated 
pattern rectangle circle considered subpattern transformed times 
subpattern translated horizontal direction means global transformation translation transformation direction axis applied circle rectangle 
application global transformation local transformation applied circle subpattern trans chapter 
coding languages gestalts patterns structure pattern 
circle direction axis 
note translation transformation applied rectangle subpattern 
global transformation responsible perception iterating subpattern 
fact global transformation identity transformation structure patterns merely determined terms local transformations guarantee perception subpattern successively transformed 
example consider visual pattern shown 
absence global transformation suppresses perception subpattern consists circle rectangle 
visual pattern perceive rectangle circle forming perceptual subpattern successively transformed 
visual pattern described having structure subpattern consisting rectangle circle 
structure description circle transformed local diagonal translation rectangle transformed local horizontal translation transformed global transformation may consider global transformation identity transformation 
order avoid descriptions reflect perceptual structure visual patterns exclude structure descriptions 
extension coding language global transformation absent identity transformation 
examples structure visual patterns defined single local transformation 
structure patterns defined local transformations 
example consider visual pattern illustrated 
structure visual pattern defined local transformations 
visual pattern structure described terms left subpattern consisting vertical groups triangles iteratively transformed global horizontal translation transformation local transformations 
local transformation ffi left rotate transformation applied individual triangles left subpattern vertical group triangles second local transformation ffi right rotate transformation applied individual triangles second left subpattern second vertical group triangles 
general structure patterns defined described terms local transformations 
believe structure visual patterns defined local transformations perceptually relevant descriptive simplicity related phenomenal simplicity claim perceptual relevance structure patterns defined arbitrary number local transformations 
issue subject empirical studies 
expressions represent structure visual patterns defined terms iteration expression consisting embedded expression index global transformation local transformations 
local transformations applied particular parts embedded expression level embedding assume expression contains transformation variables lower embedding chapter 
coding languages gestalts patterns levels 
transformation variables stand local parameterized transformations 
parameter local transformations defined index iteration expression lambda operator change iteration expression function applied parameterized local transformations 
parameter transformations determined index embedding iteration expression resulting transformations assigned transformation variables occur embedded expression vreg language extended cover general case iteration regularities adding set transformation variables ar set primitive elements 
subsequently definition vreg expressions extended cover general case iteration lambda operator transformation variables 
particular may introduce clause employs lambda operator change iteration expression functional expression clause introduces function application 
function application specifies application functional expression parameterized local transformation 
extended version vreg language called vreg language extended vreg language 
vreg language defined adding additional clauses definition vreg language definition 
vreg language covers general case iteration structures introduce clauses 

definition 
vreg expression contains transformation variables expressions vreg expressions iter 
vreg expression ar transformation variables occurring expression iter 
functional vreg expression functional vreg expression iter 
parameterized transformations vreg expression 
model vreg language consisting domain domain visual patterns 
extension coding language domain transformations semantics clauses defined standard way assignment function assigns transformations transformation variables ar 
definition 
model vreg language assignment function semantics vreg expressions defined rules iter 
function gamma 
maps parameterized transformations element ffl functional expression iter 
parameterized transformations 
expressions general case iteration visual pattern represented function application expression 
iter iter translate ffi translate gamma rotate 
semantics lambda expression function maps parameterized transformations visual patterns 
function specified follows iter iter translate ffi translate translate ffl iter translate ffi translate ffl translate ffi ffl chapter 
coding languages gestalts patterns translate ffl translate ffi ffl translate ffi ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl translate ffl translate ffi ffl function applied parameterized local transformation gamma rotate semantic function application defined assigning transformation gamma rotate variable expression 
information complexity vreg expressions chapter introduced coding language called vreg language dimensional visual patterns 
expressions coding language called vreg expressions defined tuples attribute values representing primitive visual elements tuples transformations applicable 
vreg expressions represent gestalts dimensional visual patterns 
visual pattern may gestalts represented vreg expression 
order disambiguate gestalts visual pattern select preferred gestalts visual pattern follow gestalt disambiguation idea sit considering information complexity vreg expressions 
reformulation gestalts terms vreg expressions suggests information complexity defined terms information complexities tuples 
information complexity vreg expressions attribute values tuples transformations 
information complexity tuples attribute values depends perceptual dominance ordering visual attribute values 
perceptual dominance ordering different attributes studied 
empirical study position orientation attributes important perceptual status attributes color shape attributes 
way color attribute important perceptual status shape size attributes illustrate perceptual dominance ordering consider patterns figures 
perceptual grouping induced position attribute dominates grouping induced shape size texture attributes 
similarly grouping color attribute dominates grouping shape attribute 
position attribute dominates grouping structure 
color attribute dominates grouping structure 
order integrate effect dominance ordering attributes definition information complexity follow original definition information complexity number occurrences primitive elements units gestalt description patterns 
approach primitive elements represented terms attribute values information complexity number attribute values gestalt description visual patterns 
original definition information complexity sit primitive element assumed information complexity 
attribute values information complexity different attributes different dominance effect 
way assumed reduction number position values decreases information complexity chapter 
coding languages gestalts patterns reduction shape values 
information complexity values attribute determined relative empirical studies 
information complexity tuples transformations depends information complexities individual transformations 
order define information complexity individual transformations consider concrete transformations separately 
case concrete transformations reasonable assume information complexity determined number attribute values constitute transformation 
example suppose perceptual dominance ordering visual attributes implies information complexity shape attribute value 
information complexity concrete shape transformation rectangle circle square triangle triangle line information complexity concrete parameterized shape transformation rectangle rectangle rectangle circle rectangle square second argument constant value counted 
course way measuring information complexity intuition verified empirical studies 
trivial determine information complexity transformations 
classes transformations relation attribute values expressed polynomials may intuitive define information complexity basis lengths degrees polynomials believe perceptually motivated information complexity transformations established empirical studies 
original definition information complexity considering additional complexities attribute values transformations vreg expressions information complexity vreg expressions defined follows 

definition 
att value attribute att att transformation defined values attribute att vreg expressions xm vreg expression contains transformation variables xm 
omega psi omega psi information complexity vreg expressions recursively defined follows 
information complexity vreg expressions att att att att unit comp am sym iter 

xm iter xm 

claimed tendency prefer perceptual grouping consists small number perceptual groups ima 
claim aspect perceptual preference automatically achieved applying simplicity principle possible perceptual groupings preferred perceptual grouping lowest information complexity 
argue claim note lower number perceptual groups means placing elements perceptual group vice versa 
placing elements perceptual group implies reduction information complexity lowest number perceptual groups implies lowest information complexity vice versa 
chapter introduced formal languages expressions represent gestalts dimensional visual patterns 
chapter discuss preferred gestalts dimensional visual patterns computed 
chapter computing gestalts visual patterns previous chapter introduced various languages languages consist expressions represent gestalts onedimensional string patterns languages consist expressions represent gestalts dimensional visual patterns 
language defined denoting relation expressions perceptual patterns refer denoting relation perceptual patterns gestalts 
explained gestalts string patterns computed computational model introduced van der helm leeuwenberg 
chapter investigate gestalts dimensional visual pattern computed 
order compute gestalts twodimensional visual pattern start unstructured initial representation visual pattern proceed analyzing structuring representation successive steps 
unstructured representation visual pattern taken set representations primitive visual elements constitute visual pattern 
successive step unstructured part subset pattern representation coded terms vreg vreg expression 
resulting vreg expression perceptually motivated structured representation coded pattern part 
gestalt visual pattern generated representation visual pattern coded single vreg expression 
process analyzing unstructured representation visual pattern perceptually motivated structured chapter 
computing gestalts visual patterns representation parsing process 
parsing process consists successive steps replaces unstructured representation pattern part structured representation 
partially structured representation visual pattern called parse state 
parse state transformed parse state means coding rule 
parse state contains vreg expression parsing process terminates 
resulting vreg expression represents gestalt visual pattern parsed 
section define parse state set vreg expressions 
introduce coding rules motivated vreg expressions explain application parse states 
computational complexity parsing process briefly discussed 
section hierarchical sets introduced represent parse states hierarchical unit structure visual patterns reflected hierarchical structure parse states 
additional coding rule proposed applied hierarchical parse states 
application rule hierarchical parse states generates unit expression necessary cover non mirror symmetrical patterns 
previous chapters explained vreg expressions ignore proximity factor 
section chapter notion hierarchical set extended integrate proximity structure visual patterns initial parse states 
compute proximity structure unstructured visual patterns 
proximity structure visual pattern hierarchical clustering constitutive visual elements 
hierarchical clustering visual pattern initial hierarchical parse state constructed hierarchical proximity structure visual pattern reflected hierarchical structure initial parse state 
additional coding rule introduced cover effects hierarchical proximity structure parse states 
coding rules applied hierarchical parse states bottomup fashion 
resulting parse states provide vreg expressions represent gestalts visual patterns influence simplicity proximity taken account 
coding rules vreg expressions dimensional visual pattern represented set tuples visual attribute values 
tuple visual attribute values represents primitive 
coding rules vreg expressions visual element visual pattern consisting arrows oval 
pos shape representation primitive visual element visual pattern represented set fe 
pos shape set representations primitive visual elements constitute visual pattern unstructured representation visual pattern 
unstructured representation constituent relation constitutive visual elements gestalt structure represented 
example consider dimensional visual pattern illustrated 
pattern consists primitive visual elements arrows oval 
visual pattern labels attached primitive visual elements just refer parts elements visual pattern 
assuming canonical way represent primitive visual elements uniquely arrow start points oval left middle lower middle points considering position shape attributes unstructured representation visual pattern set 

arrow 

arrow 

arrow 

oval order parse visual pattern compute gestalts consider pre defined set primitive visual elements assumed 
fact primitive visual elements defined respect application domains 
example may define line segments primitive elements may define points primitive elements 
chapter 
computing gestalts visual patterns representation visual pattern initial parse state 
general consider parse state set vreg expressions 
note initial parse state set primitive vreg expressions represents primitive visual element 
initial parse state state represent structure pattern parsed set tuples visual attribute values 
contrast final parse state state represents gestalt visual pattern parsed set contains vreg expression 
intermediate parse states partially structured representations visual patterns set vreg expressions represents pattern part 
parse state transformed subsequent parse state coding representing subset vreg expressions parse state single vreg expression 
transformation parse state accomplished coding rule 
coding rule designed replace subset vreg expressions parse state represents non structured subset visual elements structured representation subset provides structured description pattern part 
different coding rules may applied parse state 
application different coding rules parse states results different final parse states consequently assign different gestalts visual pattern 
preferred gestalt selected applying minimum principle set final states 
constraints associated coding rule 
constraints determine applicability coding rule particular subset vreg expressions parse state 
coding rule applied subset vreg expressions constraints associated rule satisfied vreg expressions contained subset 
application coding rule subset vreg expressions generates vreg expression represents pattern part original subset vreg expressions 
note application coding rules successive parse states results hierarchical structuring vreg expressions 

coding rules vreg expressions coding rules vreg expressions introduce coding rules construct coding structures covered vreg language coding rules generate expressions vreg language 
expressions represent special case iteration symmetry composition structures 
subsection discuss coding rules vreg extended vreg language 
vreg language vreg language covers additional general case iteration structure introduce additional coding rule constructs coding general case iteration structure 
subsections account unit structure symmetry rule cover mirror symmetry structure 
section chapter discuss non mirror symmetry structures covered integrating unit structure visual patterns representations 

definition 
parse state vreg expressions model vreg expressions psi set reflection transformations omega set parameterized transformations coding rules defined follows iteration rule omega 
gamma 
fa symmetry rule psi gamma 
fa chapter 
computing gestalts visual patterns composition rule gamma 
fa coding rules transforms parse state contains certain subset vreg expressions state subset replaced vreg expression 
application coding rules parse state reduces number vreg expressions successive parse states contain fewer vreg expressions 
coding rule vreg expressions definition coding rule constructs coding iteration structures 
iteration rule applicable sequence ordered subset vreg expressions visual patterns represented vreg expressions described terms visual pattern represented parameterized transformation 


transformation transform visual pattern internal structure changed iterative steps 
iteration rule constructs coding special case iteration structures patterns introduced previous chapter 
section consider general case iteration structure introduce coding rule constructing 
constructed coding rule general case iteration structure coding rules vreg expressions introduced previous subsection considered coding rules expressions vreg language 
accordingly term vreg expressions mean vreg expressions plus expression represents structure visual patterns 
visual pattern structure described subpattern successively transformed local global parameterized transformations 
local transformations applied parts subpattern internal structure successive transformed subpatterns changes 
visual pattern general case iteration structure illustrated 

coding rules vreg expressions consequently sequence visual patterns forms structure pattern described terms global transformation local transformations 
global transformation applied case structure patterns transformation applied 
global transformation local transformations applied parts representation visual pattern hierarchical vreg expression local transformations applied embedded sub expressions 
example consider visual pattern structure illustrated 
initial parse state visual pattern set contains twelve primitive vreg expressions represents arrow oval 
initial parse state parsed proposed coding rules successive parse states result 
possible parse results parse state contains vreg expressions 
vreg expressions represents vertical chunk arrows oval 
structure pattern 
parse state called may represented set comp iter translate comp iter translate comp iter translate note tuples attribute values represent primitive visual elements 
vreg expressions represent visual patterns form structure pattern represented terms vreg expression global parameterized chapter 
computing gestalts visual patterns translation direction axis 
transformation local parameterized ffi rotation transformation 
local transformation applied embedded vreg expression vreg expression 
successive applications local global transformations vreg expression follows comp iter translate comp iter translate comp iter translate 
vreg expressions represent visual patterns identical represented vreg expressions parse state order determine sequence vreg expressions represents structure visual pattern vreg expression modified inserting transformation variables 
transformation variables applied embedded expressions stand local parameterized transformations 
modification vreg expression inserting transformation variables results vreg expression 
define insert function maps vreg expression set vreg expressions 

definition 
hierarchical vreg expression consisting embedded expressions insert function generates set vreg expressions 
generated vreg expression identical vreg expression embedded expressions replaced transformation variables applied arguments embedded vreg expression replaced argument transformation variable 
note embedded vreg expression embedded embedded vreg expression way look insert function considering tree structure vreg expressions 
tree structure vreg expression insert function may add node root subtree tree structure 
node represents transformation variable applied subtree 
definition insert function implies maximum number embedded vreg expressions determines maximum 
coding rules vreg expressions number transformation variables inserted vreg expression 
vreg expression number non trivially distinct vreg expressions generated insert function cardinality output set insert function depends number embedded vreg expressions identified 
particular set embedded vreg expressions number non trivially distinct vreg expressions resulted applying transformation variables different embedded expressions number different sets contain embedded vreg expressions 
embedded expressions insert function generates 
gammal 
nontrivially distinct vreg expressions 
component sum determines number distinct vreg expressions resulted inserting transformation variables 
instance vreg expression comp iter translate consisting embedded vreg expressions iter translate insert function generates 
gammal 
vreg expressions 
possible vreg expressions contain transformation variable comp iter translate comp iter translate comp iter translate coding rule special case iteration structures defined introduce rule constructs coding general case iteration structures 

definition 
parse state vreg expressions consists embedded expressions model vreg expressions ar assignment function assigns transformations transformation variables ar omega set parameterized transformations insert fa kg defined 
rule constructs coding general case iteration structures defined follows chapter 
computing gestalts visual patterns iteration rule insert omega 
gamma 
iter summary representation visual pattern considered initial parse state may parsed coding rules proposed 
step parsing process single vreg expression replace subset vreg expressions 
single vreg expression specifies perceptual structure pattern part covers 
parse state achieved contains vreg expression perceptual structure pattern generated 
course pattern may parses pattern 
parse provides preferred perceptual structure original pattern selected applying simplicity principle parses pattern parse minimum information load provides preferred perceptual structure pattern 
complexity parsing process linguistic grammars proposed coding rules involve specific non terminal start symbol determines success parse process 
successful parse process ends parse state contains single vreg expression 
application coding rules initial parse state provides parse possible apply repeatedly compose rule construct parse 
gestalt visual pattern represented vreg expression constructed initial parse state applying coding rules parse state 
preferred gestalt visual pattern determined constructing proper parses initial parse state applying minimum principle parses 
see short construct possible parses result reasonable information complexities 

coding rules vreg expressions computational complexity process determines preferred gestalt visual pattern computational complexity constructing proper parses initial parse state visual pattern plus computational complexity selecting preferred 
computational complexity selecting preferred parse linear number proper parses check information complexities proper parses select lowest information complexity 
number proper parses parse state depends number proper codings successive parse steps 
subsequently number proper codings parse state determined number possible subsets vreg expressions parse state number coding rules applied 
consider computational complexity coding rule separately 
iteration rule iteration rule special case iteration structure applied sequences ordered sets consist vreg expressions 
parse state contains vreg expressions exists 
gammam 
possible sequences vreg expressions iteration rule applied 
order apply iteration rule sequence vreg expressions parameterized transformation chosen transforms expression sequence gamma vreg expressions sequence 
pre defined parameterized transformations principle infinite number compound parameterized transformations possible 
compound parameterized transformation proper candidate interested transformations information complexity higher concrete transformation set pairs assign attribute values parameter values 
example consider visual pattern illustrated 
primitive visual elements represented position middle point position fixed orientation shape values 
possible parse state visual pattern contains vreg expressions comp comp comp chapter 
computing gestalts visual patterns visual pattern iteration structure 
suppose sequence comp comp comp iteration rule applied 
decide parameterized transformation transforms visual pattern represented vreg expression visual patterns represented second third vreg expressions 
concrete parameterized transformation possible transformation iteration rule iteration rule applied sequence vreg expressions means concrete transformation information complexity concrete transformation iteration rule determines maximum upper bound information complexity alternative transformation may 
sequence iteration rule applied information complexity concrete transformation depends information complexities upper bound information complexity alternative transformation defined information complexity fact information complexity compound transformation greater information complexity constitutive transformations ffi trans 
coding rules vreg expressions formations assume pre defined transformation identity transformation information complexity greater zero 
identity transformation play role construction compound transformations transformation id ffi ffi id pre defined transformations id upper bound information complexity sequence vreg expressions 
ffl lowest information complexity pre defined transformation may composition ffl transformations information complexity greater maximum information complexity compound transformation may 
implies pre defined transformations compound transformation constructed combination transformations 
pre defined transformations exists possible transformation compositions provide compound transformations information complexities lower implies finite number pre defined parameterized transformations application iteration rule sequence vreg expressions decided deterministic way 
pre defined transformations parse state contains vreg expressions number possible pre defined compound parameterized transformations determined computational complexity iteration rule special case iteration structure determined follows 
gammam 
theta symmetry rule parse state contains vreg expressions symmetry rule applied subsets cardinality 
results possible pairs vreg expressions symmetry rule applied 
order apply symmetry rule pair vreg expressions reflection transformation chosen 
reflection transformation position attribute decided computing reflection axis 
reflection axis easily computed positions mirroring chapter 
computing gestalts visual patterns primitive visual elements represented pair vreg expressions decide middle line 
mirroring visual elements easily assuming vreg expressions form symmetry structure structurally similar expressions 
structural similarity vreg expressions determines primitive visual elements mirror images easy compute reflection axis vreg expressions 
transformation non positional attributes may predefined set transformations composition 
finite set pre defined transformations infinite number compound transformations possible 
transformation proper candidate interested transformations information complexity higher concrete transformation transformation assigns attribute values visual elements symmetry half values attributes visual elements second symmetry half 
argumentation iteration coding rule number proper transformations depends pair vreg expressions finite number 
maximum number proper transformations may exists possible pairs vreg expressions taken pre defined transformations determined iteration coding rule 
computational complexity symmetry rule determined follows ii theta composition rule parse state contains vreg expressions compose rule applied subsets cardinality computational complexity composition rule determined follows jj iteration rule iteration rule special case iteration structure iteration rule general case iteration structure applied sequences consist vreg expressions 

coding rules vreg expressions parse state contains vreg expressions 
gammam 
possible sequences vreg expressions iteration rule general case iteration structures applied 
order apply general case iteration rule sequence vreg expressions global parameterized transformation local parameterized transformations decided 
computational complexity deciding global transformation depends special case iteration rule maximum number proper transformations determined vreg expressions parse state pre defined parameterized transformations consider computational complexity deciding local transformations note visual patterns represented sequence expressions differ terms internal organizations 
successive insertion local transformations certain embedded expressions supposed generate vreg expressions represent visual patterns identical represented computational complexity deciding local transformations depends factors 
sequence vreg expressions factor depends number local transformations determination embedded expressions local transformations applied 
second factor depends number local transformations decided 
noted previous section insert function generates expression possible vreg expressions applies number local transformations number embedded expressions sequence factor computational complexity deciding local transformations determined number vreg expressions insert function generates vreg expression maximum number embedded expressions argued previous section number possible non trivially distinct vreg expressions determined follows 
gammal 
chapter 
computing gestalts visual patterns sequence factor computational complexity deciding local transformations determined formula 
second factor computational complexity deciding local transformations determined number local transformations decided 
vreg expression containing transformation variables need decide local parameterized transformations assigned transformation variable 
note variables transformation variables variables standing elements assignment arbitrary local transformations result vreg expressions represent visual patterns number constitutive primitive visual elements 
implies concrete transformation possible transforms vreg expression assigning attribute values involved visual elements parameter values 
transformations special case iteration rule consider information complexity concrete local transformations vreg expressions maximum information complexity alternative local transformations may 
information complexities compound parameterized transformations depends information complexities composed pre defined parameterized transformations pre defined parameterized transformations finite number compound transformations information complexity lower maximum information complexity 
gt maximum number local parameterized transformations pre defined compound vreg expressions predefined parameterized transformations 
parse state contains vreg expressions maximum number embedded expressions vreg expressions computational complexity iteration rule general case iteration structure determined follows 
gammam 
theta theta theta gt note finite number pre defined transformations application coding rules decided deterministic way 

computing unit gestalts computing unit gestalts proposed coding rule symmetry structure applied vreg expressions represent visual patterns mirror images 
words proposed approach account non mirror symmetrical patterns 
example non mirror symmetrical pattern illustrated 
order cover non mirror symmetrical patterns introduce notion units visual elements approach 
unit visual elements primitive visual element group primitive visual elements internal position structure preserved reflection transformation 
recall unit structure visual patterns hierarchical structure 
order construct coding unit structure visual patterns modify notion parse states units visual elements explicitly represented 
modification may compared preprocessing parenthesis introduced indicate units pattern constituents defined section chapter 
modified parse states hierarchical sets 
hierarchical sets element may vreg expression hierarchical set 
element vreg expression called terminal element 
element hierarchical set called non terminal element 
way parse state hierarchical set considered non terminal element 
unit initial parse state visual pattern hierarchical set hierarchical unit structure visual pattern reflected hierarchical structure set 
initial hierarchical parse state non terminal element certain hierarchical level corresponds unit visual elements corresponding level hierarchical unit structure visual pattern 
important note unit structure visual patterns assumed parsing process starts pre structured initial parse states hierarchical unit structure reflected hierarchical structure initial parse state 
example consider visual pattern illustrated 
visual pattern dashed boxes indicate units visual elements 
initial parse state visual pattern hierarchical set fa fc dg fe fg hg 
note embedded sets fc dg fe fg contain elements represent united visual elements 
chapter 
computing gestalts visual patterns unit visual pattern 
parsing unit hierarchical representations order compute unit gestalts dimensional visual pattern initial hierarchical parse state parsed 
non terminal elements sets vreg expressions proposed coding rules applied lowest level embedded sets contain merely terminal elements vreg expressions 
suggests bottom parsing process embedded sets contain vreg expressions parsed higher level sets contain non terminal elements parsed 
result parsing vreg expressions embedded set represent visual elements belong unit single vreg expression 
single vreg expression represents gestalt visual elements belong unit 
embedded set containing vreg expression singleton set represents unit structure 
order construct coding unit structure introduce coding rule replaces singleton set unit expression argument vreg expression contained singleton set 

definition 
embedded set certain hierarchical level parse state vreg expression 
coding rule constructs coding unit structure defined follows unit rule fag gamma 

computing proximity gestalts unit rule proposed coding rules vreg expressions parse hierarchical unit representation bottom fashion 
example consider visual pattern illustrated initial hierarchical parse state fa fc dg fe fg hg 
possible gestalt visual pattern provided applying compose rule lowest level embedded sets fc dg fe fg 
results singleton sets unit rule applied resulting singleton sets generates expressions unit comp unit comp 
subsequently compose rule applied twice generates vreg expressions comp unit comp comp unit comp 
symmetry rule applied vreg expressions generates gestalt visual pattern sym comp unit comp 
note vreg expression represents gestalt visual pattern non mirror symmetry structure 
unit structure visual elements explicitly represented embedded structure representing sets parser check level element singleton set 
unit rule applied 
embedded representation visual pattern consisting primitive visual elements embedded sets computational complexity unit rule linear number primitive visual elements number embedded sets 
computing proximity gestalts proposed coding rules designed compute gestalts twodimensional visual patterns 
gestalts constituted perceptually motivated structural regularities involved visual patterns 
fact coding rule detects certain kind structural regularities visual patterns 
gestalt information complexity indicates amount structural irregularity regularity information complexity 
different gestalts visual pattern compete amount structural regularities cover information complexities 
chapter 
computing gestalts visual patterns chapter introduced proximity structure visual patterns explained compete structural regularity means information complexity 
recall proximity structure visual pattern cluster hierarchy constitutive visual elements 
order integrate structural regularities proximity factors assumed structural gestalts defined proximity cluster structural gestalts defined terms proper subsets elements different proximity clusters 
showed violation assumption results gestalts low degree perceptual goodness see chapter 
assumption structural gestalts may defined proximity cluster excludes gestalts low degree goodness 
influence proximity factor gestalts visual patterns integrated approach introducing proximity parse state visual patterns 
proximity parse state visual pattern hierarchical set hierarchical structure set reflects hierarchical proximity structure visual pattern 
bottom application coding rules proximity parse state visual patterns generate structural gestalts proximity cluster 
introduce method compute hierarchical proximity structure visual patterns 
define proximity parse state explain initial parse state visual pattern represented proximity structure pattern 
explain application coding rules proximity parse states show generated gestalts cover structural regularities proximity structures 
gestalts structural regularities occur proximity cluster 
methods computing proximity structures various methods compute proximity structure visual patterns jd dub 
examples methods partitioning kmeans hierarchical clustering divisive agglomerative clique optimization additive similarity trees general methods designed compute clusters elements necessarily visual elements basis proximity measure 
methods compute proximity structure visual patterns considering spatial 
computing proximity gestalts distances visual elements euclidean space proximity measure 
section briefly explain agglomerative hierarchical clustering method 
reason elaborate method simplicity clear mathematical definition 
noted mentioned clustering methods compute proximity structure visual patterns evidence preferring psychological model 
agglomerative clustering method starts assuming single primitive element visual pattern cluster iteratively generates compound clusters clusters contain primitive element merging existing clusters 
process clustering terminates compound cluster remains 
agglomerative clustering method clusters merged various strategies distance matrices 
columns rows distance matrix indicate clusters value matrix entry indicates distance clusters specify entry 
example consider visual pattern illustrated 
visual pattern consists primitive visual elements form clusters 
visual elements provide proximity clusters 
distance matrix visual pattern 
distance matrix visual pattern illustrated 
note symmetrical structure values relative diagonal axis consists zero distances 
symmetrical structure due fact distance clusters distance distance matrix visual pattern agglomerative clustering chapter 
computing gestalts visual patterns method merges step clusters smallest distance 
instance distance matrix illustrated clustering method merges primitive elements generates new compound cluster ab 
note matrix smallest distance unique distance primitive elements distance primitive elements smallest distance 
pair clusters smallest distance chosen randomly 
existing distance matrix agglomerative clustering method proceeds generating new distance matrix distances newly constructed cluster case ab existing clusters computed 
various strategies compute distance newly constructed cluster existing clusters 
examples strategies single linkage complete linkage average linkage strategies 
clusters merged existing cluster 
mentioned strategies compute distance clusters xy basis distance distance single linkage strategy takes minimum distances complete linkage strategy takes maximum distances average linkage strategy takes average distances single gamma linkage distance xy minimum distance distance complete gamma linkage distance xy maximum distance distance average gamma linkage distance xy distance distance instance distance matrix illustrated newly constructed cluster ab single linkage average linkage strategies result new distance matrices illustrated figures respectively 
symmetrical structure values distance matrix mention values symmetrical halves 
distance matrices 
computing proximity gestalts distance cluster ab existing clusters represented 
distances existing clusters remain 
ab ab single linkage strategy 
ab ab complete linkage strategy 
ab ab average linkage strategy 
note average linkage strategy associative elements distance clusters ab necessarily distance clusters bc 
implies order clustering elements may result different cluster structures 
newly generated distance matrix agglomerative clustering method reiterates previous steps proceeds merging clusters smallest distance 
step example smallest distance clusters 
assuming single linkage strategy merge results new distance matrix illustrated 
smallest distance clusters df merge clusters results distance matrix illustrated 
subsequently distance ab smallest distance 
merge ab results distance matrix illustrated 
remaining clusters ab df merged results single cluster chapter 
computing gestalts visual patterns ab df 
ab df ab df distances respect cluster df 
ab df ab df distances respect cluster df 
ab df ab df distances respect cluster ab 
important note clustering step clusters merged distance smallest distance step 
hierarchical structure clusters distances basis clusters merged represented dendrogram 
example dendrogram illustrated represents cluster hierarchy ab df length subhierarchy indicates distance basis clusters subhierarchy merged 
hierarchical agglomerative clustering method results single cluster 
order decide perceptually motivated proximity clusters needs specify criterion cut dendrogram certain hierarchical level 
way cluster contains elements belong resulting 
various measures determine level provides perceptually motivated proximity clusters 
basic idea measure determine significant increase distances basis clusters merged 
instance example clusters merged basis distances 
significant increase distances example 
significant increase determines level provides clusters 
ab df 
note measure applied subclusters determine 
computing proximity gestalts dendrogram representing cluster hierarchy visual pattern illustrated 
assigned numbers indicate distances basis clusters merged 
perceptually motivated subclusters 
rest chapter assume perceptually motivated measure determines perceptually motivated hierarchical proximity structure visual patterns 
proximity representation visual patterns order integrate proximity factor approach existing cluster method example agglomerative method single method strategy generate hierarchical cluster structure dimensional visual patterns 
hierarchical cluster structure visual pattern consider initial proximity parse state hierarchical set hierarchical structure set reflects hierarchical cluster structure visual pattern 
construction initial proximity parse state visual pattern accomplished processing hierarchical cluster structure visual pattern bottom fashion 
level cluster hierarchy direct children non terminal node form elements set 
process results hierarchical set 
way non terminal elements different hierarchical levels parse state represent parse state clusters different hierarchical levels proximity structure 
non terminal elements represent units visual chapter 
computing gestalts visual patterns elements 
order represent unit structure proximity structure visual elements hierarchical structure parse states consider units visual elements special clusters 
fact common idea units proximity clusters proper subsets elements different units different proximity clusters grouped constitute structural gestalt 
non terminal elements represent unit clusters proximity clusters adding label non terminal elements 
way label non terminal element indicates non terminal element represents unit cluster proximity cluster 
reason introduce labels indicate unit proximity clusters respectively 
write fa fa represent unit cluster proximity cluster contains elements 
hierarchical unit structure hierarchical cluster structure visual pattern determine initial unit proximity parse state visual pattern method 
initial proximity parse state computed hierarchical set hierarchical proximity structure represented hierarchical structure set 
embedded set non terminal element labeled assigning label 
hierarchical proximity structure generated determine units elements hierarchical level 
done selecting hierarchical level elements correspond united visual elements 
subsequently non terminal element introduced level contain selected elements 
introduced non terminal elements labeled assigning label 
way proximity hierarchical set extended unit structure 
note method correctly implies united elements belong proximity cluster 
example generating initial unit proximity parse state visual pattern consider visual pattern shown 
visual pattern clustering method provide cluster hierarchy shown 
cluster hierarchy unit structure visual elements indicated dashed boxes explained hierarchical unit structure dimensional visual patterns 

computing proximity gestalts visual pattern cluster hierarchy 
initial parse state generated set ffa fc dg fe fg fg hg parsing unit proximity representations initial parse state visual pattern constructed basis unit proximity structures hierarchical set terminal elements vreg expressions 
hierarchical unit parse states propose bottom parsing method unit proximity parse states lowest level embedded sets parsed higher level sets parsed 
unit proximity parse states non terminal element label determines represents unit proximity cluster 
modify proposed unit coding rule introduce additional coding rule construct coding proximity structure 
chapter 
computing gestalts visual patterns parsing process bottom process non terminal element represents unit contain vreg expression certain stage parsing process 
case non terminal element replaced unit expression argument vreg expression contained non terminal element 
similarly non terminal element represents proximity cluster contain vreg expression certain stage bottom parsing process 
non terminal element replaced vreg expression contained 
section chapter introduced coding rule unit structure 
coding rule replaced unit coding rule proposed definition 

definition 
embedded set certain hierarchical level parse state vreg expression fg fg indicate non terminal elements represent unit proximity cluster respectively 
unit proximity rules construct codings unit proximity structures visual patterns defined follows unit rule fag gamma 
ffag proximity rule fag gamma 
ffag fag recall function non terminal elements represent proximity clusters avoid construction gestalts proper subsets elements different proximity clusters 
non terminal element contains vreg expression function fulfilled replaced terminal element contained 
note structural regularity elements cluster structural regularity cluster constitute gestalt parse states elements cluster contained set 
similarly structural regularity clusters constitute gestalt 
computing proximity gestalts parse states non terminal elements represent parse state higher order clusters contained set 
order illustrate bottom application coding rules unit proximity parse state consider initial parse state visual pattern illustrated ffa fc dg fe fg fg hg parse step embedded set contains terminal elements vreg expressions parsed 
parse results vreg expression comp 
second parse step set contains terminal elements parsed results vreg expression comp 
unit rule applied non terminal elements contain derived vreg expressions 
application unit rule non terminals results vreg expressions unit comp unit comp 
subsequently compose symmetry rules successively applied set contains derived vreg expressions terminal elements result single vreg expression sym comp unit comp 
similarly non terminal element contains vreg expressions parsed applying compose rule 
vreg expression comp results 
resulting vreg expressions contained non terminals proximity label 
parse step applications proximity rule non terminals generate vreg expressions contained non terminals 
remained vreg expressions sym comp unit comp comp parsed applying compose rule 
generates vreg expression provides gestalt parsed visual pattern comp sym comp unit comp comp 
mentioned parse steps illustrated follows ffa fc dg fe fg fg hg gamma 
ffa fe fg fg hg gamma 
ffa fg hg gamma 
ffa unit comp unit comp fg hg gamma 
comp unit comp fg hg gamma 
comp unit comp gamma 
chapter 
computing gestalts visual patterns comp unit comp comp gamma 
sym comp unit comp comp note vreg expression describes gestalt parsed visual pattern structural regularities proximity factor taken account covers structural gestalts proximity clusters 
unit proximity structure visual elements explicitly represented embedded structure representing sets parser check level element singleton set 
unit proximity rule applied label singleton set 
embedded representation visual pattern consisting primitive visual elements embedded sets computational complexities unit proximity rules linear number primitive visual elements number embedded sets coding rule computational complexity 
representing visual patterns hierarchical sets implies computational complexity coding rules vreg expressions defined number primitive elements constitute visual pattern 
reason coding rules applied elements included embedded set elements different embedded sets 
means computational complexities coding rules remain defined maximum number visual elements worst case included embedded sets 
concentrated gestalts perceptual patterns considering context effect 
fact assumed visual pattern perceived isolation 
chapter consider influence context factors gestalts perceptual patterns 
chapter context effect perception gestalt psychologists wertheimer noted sensory stimulus allows gestalts attempted explain certain gestalts preferred 
previous chapters various languages introduced provide possible gestalts various classes perceptual patterns 
showed preferred gestalt perceptual pattern possible gestalts selected means perceptually motivated complexity measure called information load preferred gestalt perceptual pattern lowest information load 
approach determine preferred gestalt isolated perceptual patterns 
perceptual processes encounter new stimulus pattern integrate larger involves simultaneously input patterns internal representations past experiences called intentional setting perceiver 
factor past experiences emphasized helmholtz vh formulated perceptual principle wertheimer 
intentional setting perceiver conscious intention perceiver perceive input pattern certain way 
instance intentional setting may perceptual pattern certain purpose 
factors influence perception input patterns called context factors 
structure cognitive system fact assigns particular input pattern largely dependent context takes consideration input pattern certain context may perceived chapter 
context effect perception differently different context 
integrating new input pattern cognitive system may deliberately unconsciously analyze components stimulus structurally analogous components context 
capability analogical projection plays crucial role perception 
particular metaphor cognitive analogy exercise capability level 
defined class problems involves analogical projection interaction perception constituted proportional analogy problems perceptual patterns 
focus problems chapter show model particular context effect approach 
chapter organized follows 
section introduce proportional analogy problems show gestalts patterns change perceived context proportional analogy problems 
fact solving proportional analogy problems perceptual patterns consists modeling interaction analogical projection perception 
section algebraic systems introduced chapters model proportional analogy problems perceptual patterns 
fact proportional analogy problem modeled considering gestalts patterns terms algebras define analogical projection gestalts means correspondence algebras 
proportional analogy problem correspondences possible 
different correspondences may define different analogical relations may relate different gestalts 
order define proper correspondence proportional analogy problem introduce section various constraints possible correspondences 
constraints motivated perceptual preference ordering related gestalts complexity analogical relations 
section algebraic framework introduce computational model solving proportional analogy problems perceptual patterns 
proportional analogy problem perceptual preference ordering gestalts involved patterns attempt compute proper correspondence specifies analogical projection gestalts 
proper correspondence computed proportional analogy problem solved 
proper correspondence computed attempted compute proper correspondence preferred gestalts involved perceptual patterns 
interaction perception analogy section consider alternative computational systems designed solve proportional analogy problems perceptual patterns 
systems analogy eva copycat hm 
compare systems approach discuss shortcomings 
interaction perception analogy analogies perceptual patterns demonstrate complexity gestalt disambiguation perceived structure pattern influences perceived structure pattern making analogy 
particular requirement analogy perceptual patterns implies structure patterns analogous 
example consider visual patterns illustrated 
analogy context influences gestalts line patterns 
example making analogy line patterns implies preferred gestalts line patterns consist concave shapes shapes requirement context effect preferred gestalt line pattern consists convex shapes squares 
important note convex concave property shapes expresses perceptual grouping constitutive line segments gestalts line patterns 
analogical relation characterizes analogy line pattern consists connected concave shapes disconnected line pattern chapter study model interaction analogy making context factor perception patterns proportional chapter 
context effect perception analogies 
proportional analogies follow scheme represented abbreviated elements verbal descriptions concepts fish lungs humans perceptual patterns letter strings hofstadter copycat domain hof illustrated line drawings illustrated 
fact proportional analogy consists identical analogies second example consider proportional analogy illustrated 
characterizing analogical relation patterns connected concave shapes disconnected characterizing analogical relation exists patterns 
identity sign proportional analogy scheme expresses analogies identical 
abba abab abba examples proportional analogies defined letter strings 
examples proportional analogies defined line drawings 
worth noticing arithmetical metaphor suggested notation taken literally 
instance case elements scheme interchanged elements respectively changing validity analogy 

interaction perception analogy similarly may interchange elements example proportional analogies abc abd ijk ijl proportional analogies abd abc ijl ijk abc ijk abd ijl valid analogies 
proportional analogy problem constructed omitting element proportional analogy relation 
write task find related way related solving proportional analogy problem requires perceptually preferred gestalts construction mapping gestalts generalizes broader domain includes applying mapping gestalt particular structures construed analogous structure construed way domain function articulates analogy 
proportional analogy problems fairly complex patterns perceived structures mutually influence analogical mappings 
interaction perception analogy making proportional analogies occur simple domains demonstrated hofstadter hof 
example term proportional analogies shown 
context influence caused terms forces different gestalt decompositions term case 
view similar interaction analogy making possible descriptions elements exemplified proportional analogies illustrated responsible conceptual proportional analogies illustrated metaphors derived 
life progress death stagnation life day death night examples proportional analogies defined concepts 
chapter 
context effect perception formalizing proportional analogy sit chapter proposed algebraic framework structural information theory defined gestalts patterns algebraic terms 
gestalts formalized algebraic terms turn problem characterize analogies different gestalts 
obvious approach notion structural identity gestalts 
example iter succ structure iter pred 
formalized term unification sie algebraic terms gestalts 
ways 
define notion structural template essentially term containing variables algebraic terms say gestalts algebraic terms analogous exists structural template st substitutions ffi st ffi st equivalent definition allow inverse substitutions substitution replacing certain variables terms gamma replace terms corresponding variables say gestalts analogous exist substitutions gamma ffi gamma ffi different approach characterize analogies gestalts algebraic framework ind ind 
source domain target domain formalized algebras analogical relations terms may characterized correspondences algebras 
gestalts patterns generated algebraic systems easily adopt algebraic framework characterize proportional analogy relations model interaction gestalts proportional analogy relations 
rest chapter approach detail 

definition 
correspondence algebras relation preserves algebraic structures 
words algebras sets ary operators respectively correspondence pair delta omega delta theta omega gamma theta delta oe omega gamma oe delta 
formalizing proportional analogy sit correspondence algebra 
elements algebra pairs elements initiating algebra operators algebra pairs operators initiating algebra 
algebraic framework applied directly algebras generate gestalts perceptual patterns 
chapter introduced algebras generate gestalts string patterns string algebra extended string algebra gestalts dimensional visual patterns vreg algebra vreg algebra 
rest chapter specific algebra term gestalt algebra indicate algebra generates gestalts certain class perceptual patterns 
gestalt algebra generates large class structural descriptions gestalts detailed complex 
context may want restrict small subset universe small class operators 
need notion subalgebra 

definition 
algebra subalgebra algebra require subalgebras finitely generated 
means set operators finite objects domain generated finite subset domain repeated application operators 
call finitely generated subalgebra representation algebra 
need concept isomorphic correspondence show model proportional analogies 

definition 
algebras 
correspondence delta omega isomorphic omega function delta function definitions model proportional analogies form consisting subalgebras gestalt algebra representation algebras generating terms generating terms isomorphic correspondence subalgebras 
example consider proportional analogy abc ijk abd ijl 
subalgebra fab cg generates descriptions chapter 
context effect perception abc abd 
descriptions con ab con ab succ respectively 
similarly subalgebra fij kg generates descriptions con ij con ij succ respectively ijk ijl 
proportional analogy represented isomorphic correspondence subalgebras ab ij con con succ succ 
introducing constraints correspondences gestalt algebra possible representation algebras subalgebras representation algebra possible structural descriptions representation algebras may possible isomorphic correspondences 
section context factors constrain generation gestalts proportional analogy problems 
structural information theory complexity measure called information load il henceforth assigned gestalt description 
chapter discussed information load gestalt descriptions different classes perceptual patterns computed 
example gestalt descriptions string patterns generated extended string algebra count isa operators count embedded domain specific operators identity operator 
string pattern gestalt sym iter succ il gestalt sym ab iter id il 
applying minimality principle states preferable gestalt pattern extensionally equivalent terms evaluating lowest complexity value predicts chosen minimality principle ignores mutual contextualization effect proportional analogies 
lowest complexity gestalts taken isolation individual patterns may result lowest complexity patterns 
effect seen analogy 
just saw pattern considered 
introducing constraints correspondences context preferred gestalt symmetry structure context analogy preferable see odd symmetry structure higher information load 
reason shares common substructures preferred gestalt sym iter id sym ab 
domain geometric patterns contextualization effect illustrated 
context influence geometric patterns 
gestalt consists squares front providing foreground background interpretation gestalt consists square shaped visual objects providing mosaic interpretation 
part gestalt part gestalt second 
order incorporate feature patterns common substructure adds il 
effect achieved defining complexity ordering representation algebras determined number elements elements higher complexity 
underlying idea patterns gestalts overlap representation algebra generates gestalts lower complexity 
instance minimal representation algebra generates gestalts patterns proportional analogy relation men chapter 
context effect perception tioned fa ab cg elements 
notice mention count isa operators 
consider gestalt generated representation algebra fab cg elements 
perceptually preferred representation algebra may proper length generated gestalt descriptions long 
note information load complexity measure depend length descriptions number elements descriptions 
description constituted small number elements long description rich structure uses large number operators 
perceptual models proportional analogies consider constraint imposing empirically established maximum length descriptions 
obviously maximum length implies sharp distinction appropriate inappropriate pattern descriptions claim existence sharp distinction consider maximum length artificial gross approximation 
perceptually motivated constraints called simplicity criteria 
proportional analogy additional constraint refer criterion possible construct analogical mapping corresponding terms analogy relation 
lowest complexity gestalts patterns may appropriate constructing analogical relations 
example consider analogy relation 
term example preferred gestalt sym iter succ il form analogical mapping preferred gestalt second term sym pp qr il 
discover mapping underlying analogy consider higher information load gestalt term sym ab cc il 
existence analogical mapping preferred gestalts patterns proportional analogy problems 
fact mapping preferred gestalts may complex mapping complex mapping preferred gestalts 
recall analogical mapping gestalts represented algebraic correspondence initiating representation 
introducing constraints correspondences algebras generate gestalts 
algebraic correspondence consists set domain elements set operators set domain elements relates maps domain elements initiating representation algebras set operators relates maps operators initiating algebras 
analogical mapping consists mappings mapping relates perceptual components domain elements correspondence mapping relates operators operators correspondence 
define complexity analogical relation complexity algebraic correspondence represents 
correspondence assumed simpler extent mappings constitute identity mappings 
number mappings identity non identity mappings constitute correspondence may influence complexity correspondence assume identical mappings increase complexity correspondence 
way may define complexity correspondence number non identical mappings constitute 
note complexity measure intuition need tested adjusted empirical research 
suggested complexity measure correspondence succ succ pred pred considered simpler correspondence succ pred pred succ 
complexity measure order possible correspondences representation algebras 
may case possible correspondences initiating representation algebras complex 
perceptual models proportional analogy take constraint consideration 
order account complexity issue may introduce empirically established maximum complexity value indicate plausibility correspondence 
maximum complexity value implies sharp distinction plausible implausible correspondences claim existence sharp distinction consider maximum complexity value indicating artificial gross approximation plausibility correspondences 
summary preferred gestalts patterns occurring proportional analogy relation ought low complexity ought generated simpler representation algebra ought satisfy condition 
notice saying ought constraints interfere 
see heuristic approach tries find optimal balance 
chapter 
context effect perception computational model proportional analogy previous section defined preference orderings gestalts representation algebras generate analogical relations 
section define preference ordering combinations gestalts analogical relations context proportional analogy problems 
subsequently define computational model finds preferred gestalt fourth pattern proportional analogy problems efficient way 
step solving proportional analogy problems perceptual patterns computation gestalts involved patterns 
chapter introduced computational models generating gestalts string patterns gestalts dimensional visual patterns 
assume sets algebraic terms provided computational models 
set contains possible gestalts patterns involved proportional analogy problem 
computed sets algebraic terms turn actual task select term pattern order define preferable representation algebras correspondence 
second step solving proportional analogy problems understood determining representation algebras correspondence basis perceptually ordered descriptions patterns involved proportional analogy problems 
noted criteria deciding appropriate representation algebras simplicity criterion 
criterion states selected representation algebras correspondence generates pairs patterns consists third pattern second pattern consists second fourth pattern third fourth pattern 
noticed previous section may case possible correspondences selected representation algebras complex correspondences 
correspondences indicate complex analogical relations may appropriate 
reasonable introduce experimentally established upper bound complexity value analogical relations 
representation algebras possi 
computational model proportional analogy ble correspondences complex considered representation algebras proper correspondence 
means representation algebras satisfy criterion 
second criterion follows leeuwenberg perceptual preference principle 
preferred representation algebras addition satisfying criterion result lowest collective complexity 
second criterion reformulation gestalt interaction 
assume perceptual patterns proportional analogy problem goal find pattern utilize criteria order direct search process possible gestalts patterns determine appropriate representation algebras decide fourth pattern top level structure algorithm solving proportional analogy problems follows 
perceptual patterns separately generate set possible gestalts algebraic terms 

order triples gestalts collective information load 

iterate sequence triples order increasing information load minimal representation algebras founded representation algebra generate gestalts 
representation algebra generate gestalt 
isomorphic correspondence exists maps 
choose simplest representation representation algebra 
compute apply correspondence representation particular sets contain possible algebraic terms perceptual patterns generated 
sets subset triples set triples lowest collective information load curr min load computed 
note chapter 
context effect perception subset triples subset cartesian product sets triple selected randomly computed subset 
criterion checked selected triple 
done constructing minimal representation algebras basis selected triple gestalts appropriate isomorphic correspondence specified 
appropriateness isomorphic correspondences related complexities discussed 
fourth term generated basis specified correspondence 
fact correspondence generates term consists preferred gestalt pattern second gestalt 
second gestalt assumed preferred gestalt fourth pattern fourth pattern directly generated basis gestalt 
selected triple gestalts satisfy criterion triple gestalts set triples checked 
set empty new subset triples computed 
triples new subset lowest collective information load 
way examine triples gestalts order increasing collective information load 
order search space perceptual preference involved gestalts 
approach represented flow chart illustrated 
correspondence specified basis gestalts discussed subsection 
notice select possible triples simplicity criterion criterion 
obviously inverse order applying criteria possible 
take ordering applying criteria assume descriptions represent salient features patterns best chance intended descriptions context proportional analogy 
heuristic enhances efficiency process 
note descriptions patterns outside proportional analogy context appropriate descriptions descriptions changed order create similarity constitute analogical relation 
model constructs creative non creative analogies indurkhya ind calls 

computational model proportional analogy set algebraic terms pattern set algebraic terms pattern set algebraic terms pattern compute curr min load set triples get triples curr min load increment curr min load curr min load add min load min load min load remove triple set triples triple select triple set triples empty set triples main process solving proportional analogy problems 
computation perceptually motivated correspondence section explain perceptual descriptions patterns involved proportional analogy order define correspondence generating representation algebras 
noted perceptual description patterns hierarchical description 
assume analogical relations relate perceptual entities elements operators similar positions perceptual hierarchies 
assumption implies identical elements identical operators different positions hierarchy considered different elements operators 
means proportional analogies occurrence elements hierarchy determines identity 
order distinguish perceptual entities different positions chapter 
context effect perception perceptual hierarchies assign perceptual entity index 
index consists integers 
integer indicates depth level entity corresponds level embeddedness entity 
second integer indicates latitude position entity certain level hierarchy corresponds sequential order 
assigning indices perceptual entities description con iter con id represented con iter con id 
way elements considered different elements 
indexing hierarchical descriptions illustrated drawing trees assigning node horizontal vertical position 
example indexing hierarchical description illustrated 
con iter con con iter con example indexing hierarchical descriptions 
notice index entities criterion wellformedness descriptions generated correspondence 
example generated description con may considered ill formed description con may considered wellformed description 
indices encode position elements sequential patterns 
position elements may needed identify 
identification elements subsequently necessary specification application analogical relations 
proportional analogies indices needed avoided order solve proportional analogy problems 
cases position elements sequential patterns play role analogical relations 
example proportional analogy abc ijk indices description involved string patterns 
computational model proportional analogy analogical relation abc ijk applicable 
indexed element mapped indexed element specification analogical relation indexed element third element analogical relation applied 
indices cases positions disambiguate different occurrences element sequential pattern 
order cover cases proportional analogies specify criteria decide assignment indices descriptions involved patterns 
general analogical relations functions map entities pattern description entities second pattern description 
pattern descriptions analogical relation specified function need assign indices descriptions 
analogical relation specified relation function different occurrences similar elements distinguished assigning indices 
indices possible specify analogical relation function 
order specify correspondence delta omega defines analogical relation hierarchical descriptions specify delta theta omega theta recursively basis hierarchical descriptions express gestalts patterns involved proportional analogy problem 
initially delta omega empty sets 
specifying correspondence distinguish cases basic cases recursive case 
case applies description pattern description pattern identical 
case induced analogical relation identity relation relates description 
second case applies description pattern description pattern distinct description pattern description pattern identical 
case induced analogical relation particular relation particular description related particular description third case applies description pattern description pattern distinct outermost operators description pattern description pattern outermost operator 
case induced relation relation outermost operators description patterns arguments descriptions assumed identical 
chapter 
context effect perception fourth case applies description pattern description pattern identical outermost operators 
case induced relation consists identity relation operators relation argument description pattern argument description pattern relation arguments recursively specified applying cases 

definition 
class algebraic terms generated gestalt algebra 
string algebra vreg algebra 

write 
delta state algebraic descriptions induce correspondence delta 
correspondence induced triple descriptions specified follows ffl 
ffl 
ffl gamma gamma gamma 
gamma gamma gamma ng ffl gamma gamma gamma 
delta gamma fg gamma gamma gamma 
delta gamma descriptions involve indices definition indices specify correspondence descriptions 
examples solving proportional analogy problems string patterns section examples proportional analogy problems specifying analogical relation algebraic descriptions denote involved patterns 
consider proportional analogy problem abc abd 
selected preferred descriptions con ab id con ab succ con id kk respectively 
correspondence induced descriptions recursively specified follows 
computational model proportional analogy con ab id con ab succ con id kk 
delta 
delta delta con con ab ab 
delta 
id succ id kk 
delta 
delta id succ kk 
delta 
kk kk delta 
kk kk id succ delta 
kk kk con con id succ note application rules third fourth rules definition suggests induced correspondences include possible pairs identical terms third terms possible pairs identical operators fourth term 
expressed universal quantifier definitions 
example example include identical pairs terms operators simplicity reason 
fact information expressions specify correspondences far generate fourth term 
correspondence delta generates pair consisting third fourth descriptions follows con id kk con succ kk 
pair descriptions denotes pair consisting third fourth patterns respectively 
second example consider proportional analogy problem 
preferred triple descriptions follows iter ab id con iter cd id ab con iter ab id ef 
descriptions recursive procedure introduced previous section correspondence 
examine preferred triple perceptual descriptions example triple chapter 
context effect perception con iter ab id ab con iter cd id ab con iter ab id ef 
correspondence induced descriptions recursively specified follows con iter ab id ab con iter cd id ab con iter ab id ef 
delta 
delta delta con con iter ab id iter cd id iter ab id 
delta 
iter ab id iter cd id ab ab ef 
delta 
ef ef delta 
iter ab id iter cd id ef ef con con correspondence delta generates pair consisting third fourth descriptions follows con iter ab id ef con iter cd id ef 
pair descriptions denotes pair consisting third fourth patterns respectively 
comparison approaches remarks comparing approach existing approaches solving proportional analogy problems 
noteworthy computational systems solve proportional analogy problems perceptual patterns analogy eva copycat hm 
briefly introduce systems discuss shortcomings 
analogy analogy designed solve called geometric analogy problems proportional analogy problems concern geometric figures 
system works multiple choice version problem employs figures 
problem formulated find rule changed apply rule indicate figures results process 

comparison approaches class geometric figures analogy deals limited line drawings generated applying operators set primitive visual elements consisting dots straight line segments circle segments 
operators connect compose operators connect operator literally connect visual elements letting share points compose operator collects visual elements list 
analogy kinds figures distinguished connected figures 
connected figures primitive visual elements generated applying connect operator connected figures 
figures generated applying compose operator connected non connected figures 
furthermore classes connected figures distinguished dots dot simple closed curves scc connected figures regular distinction scc reg connectivity line segments 
order distinction notion vertex introduced 
vertex endpoint curve point line segments meet 
connected scc contain vertex reg contain vertex 
furthermore figures may properties small shaded thin may spatial relation left note expressions vreg language introduced chapter describe figures covered analogy 
fact vreg language includes compose operator composition structure figures described represented compose expressions vreg language 
vreg language include connect operator connect structure figures described represented single linkage strategy compute proximity structure introduced chapter section demand visual elements proximity cluster closest distance zero visual elements proximity group share point 
way proximity group considered connected 
analogy consists parts 
input part primitive descriptions figures 
example triangle point non connected represented chapter 
context effect perception dot scc primitive description figures subject decomposition process 
decomposition process divide connected connected parts non connected figures represented divided elements 
note decomposition process applied meaningfully reg figures dot scc figures decomposable 
decomposition process able find occurrences arbitrary simple closed arbitrary connected divide occurrences rest step set properties relations objects resulted decomposition process computed 
example inside relation dot polygon expressed inside dot scc 
important step part set similarity calculations 
certain class transformations change size change texture rotate similarity calculations determine pair objects transformations map object pair second object pair 
decomposition figures objects computed properties relations similarity transformations form input part analogy 
step part generates transformation rule transforms transformation rule similarity transformations part specifies objects removed added altered properties relations objects generate subsequently transformation rules generalized addition transforming transform exactly solution figures 
rules general choose answer figures specific choose 
generalized rule property numbers parts added removed matched answer 
possibility best rule selected called strength function 
function assigns value rule sorts possible transformation rules 
best strongest rule achieved alteration original rule maps exactly answer 

comparison approaches notion strongest rule understood little alteration needed extend theory new situation copycat copycat solves proportional analogy problems strings letters 
string letters individual letter western alphabet generated concatenating strings letters 
copycat string patterns may related means number predefined relation called concepts left right successor predecessor note terms extended string algebra introduced chapter descriptions strings 
dealing proportional analogy problem form copycat conducts non deterministic parallel search structuring letter strings finds mappings order solve analogy 
structures copycat builds descriptions bonds substrings string neighboring substrings groups substrings string correspondences substrings different strings rule specifying transformation string string translated rule transforms string answer string 
structural description strings analogical mapping constructed basis concept related system parameters 
parameters instance strength various relations conceptual depth strength transformations relations slippage 
values parameters determine appropriateness descriptions analogical mappings 
instance activation value assigned relation indicates importance relation generated structural description string 
system parameters pre assigned values process solving proportional analogy problems 
values may change process 
copycat descriptions strings built highly activated relations 
partially constructed descriptions provide proper analogical relation activation values may change order create different descriptions strings 
appropriateness analogical relations notion called slippage concepts 
chapter 
context effect perception copycat predefined relations conceptually close far 
conceptual distance pairs relations called conceptual proximity determined 
idea closer relations slipped farther relations 
example successor relation may slip predecessor relation reflect relation 
analogical relations defined terms transformations relations transformations conceptually close relations transformations conceptually far relations analogical relations transformations considered appropriate 
general system attempts integrate important relations order build proper description strings appropriate analogical relation constructed 
point computed description strings mappings structures may change order create stable state system 
stability system measured global parameter called temperature turn computed values system parameters 
note temperature parameter copycat independent parameter basis change activation values system parameters amount change system determined 
fact temperature parameter copycat way activation values system parameters temperature value determine activation value temperature parameter stability system state 
state system stable temperature value lower temperature value second 
system stops probabilistic decision value temperature parameter 
state system stops provides description strings mapping 
copycat activation values assigned run change run 
activation values fixed 
values pre assigned run chosen combination intuition trial error arbitrariness 
activation values changed mutual influence probabilistic way causing change description strings mapping 

comparison approaches limitations analogy copycat analogy copycat shortcomings tried overcome 
shortcomings related methods decompose perceptual patterns subpatterns 
noted chapter proper decomposition crucial description involved perceptual patterns analogical relation defined terms resulting subpatterns 
particular assume decomposition perceptual patterns involved proportional analogy problem appropriate interaction perception context effects modeled properly 
analogy computes decomposition figures descriptions separate initial module 
descriptions computed analogy generates analogical relation 
evans aware context sensitivity gestalt phenomena generating description involved figures analogical relation system dealt limited way ind pp 

gestalt phenomenon deals connectivity reg decomposed simple closed curves possible 
gestalt phenomena continuity foreground background proximity embeddedness symmetry ignored 
decomposing reg figures analogy deals context effect limited way 
modeling context effect related fact analogy able find occurrences arbitrary simple scc arbitrary reg divide reg occurrences simple closed curve rest 
ability decompose reg figures involved proportional analogy problem 
explicitly mentioned context effect modeled assuming reg proportional analogy problem involved figures unambiguously consist simple closed curves 
implies mutual contextualization effects modeled analogy properly decompose decompose analogy involved figures may gestalt ambiguity 
order demonstrate mutual contextualization effect consider proportional analogy problem illustrated 
proportional analogy problem figures gestalt ambiguity decomposition method analogy chapter 
context effect perception mutual contextualization effect involved line patterns 
unambiguous gestalt decompose figures 
fact solve proportional analogy problem illustrated way determine proper decomposition figures initial module 
possible decompositions possible descriptions figures disambiguated trying construct analogical relation 
fact analogy computes description figures initial module analogy system capable solving creative analogies ind 
non creative analogies descriptions source target elements computed assumed descriptions contain similarity constitute basis analogical relation 
creative analogies conventional descriptions source target may provide needed similarities 
fact similarity created building descriptions 
system hand main goal model contextualization effect system structural information theory considerable empirical support feel ad hoc 
copycat system expressly designed model creativity phenomenon proportional analogies 
consequently copycat representations terms constructed hand hand mappings mutual contextualization effect fully taken account 
features copycat clearly formally specified 
clear copycat approach applied domains domain visual patterns 
example consider concept temperature plays key role copycat architecture 
intuitively idea deeper 
comparison approaches cognitively appealing analogy lower temperature analogy thermodynamics 
copycat architecture discussion finds principles rules explicit description computing temperature analogy relation 
fact concept information load structural information theory considered analogous copycat temperature reveals contrast approaches focus research explicating principles constrain gestalts pattern isolation context 
point emphasize algebraic model aimed modeling input output functionality human perceptual process 
claim people carry algebraic descriptions heads algorithm previous section mirrors anyway humans solve proportional analogy 
contrast copycat implicitly claims model human perceptual processes 
scientific reason evidence support claim offered authors intuitions 
previous chapters concentrated modeling gestalt perception determine gestalts perceptual patterns 
noted chapter may model human visual perception generate visual patterns 
way guarantee generated visual patterns certain perceptual structures 
chapter discuss role model data visualization visual patterns certain perceptual structures generated 
chapter role perception data visualization chapter discuss application domain perception plays important role 
application domain called data visualization ber 
aim data visualization generate visual patterns represent data 
visual representations denote data relations means perceivable relations exist constitutive visual elements 
example number cars produced different factories visualized bar chart 
bar represents car factory length represents number produced cars factory 
perceivable length relation bars denotes relation numbers cars produced different factories 
data course represented ways instance means natural language expressions order predicate sentences advantage representing data visual patterns claimed effectiveness mode representation 
attempted articulate effectiveness property formally precise way 
argue effectiveness visual representations related perceptual structures represent structure data 
fact argue data effectively represented intended structure represented data perceived structure representing visual pattern coincide 
previous chapters focused gestalts visual patterns perceived constituent structure visual patterns determines chapter 
role perception data visualization compound visual elements built primitive visual elements 
argued gestalt visual pattern constructed regularity perceivable relations constitutive visual elements relative closeness elements proximity 
explained perceivable relations visual elements induced involved visual attributes 
chapter consider broader class perceptual structures visual patterns includes perceived constituent structure visual patterns gestalts additional perceived structures 
additional perceived structures determine involved visual elements related qualitatively quantitatively topologically 
particular study part relation perceivable relations qualitative quantitative topological induced visual attributes primitive visual elements 
emphasize primitive visual elements ignore perceivable relations induced characteristic visual attributes compound visual elements 
characteristic attribute compound visual element indicates property compound visual element property constitutive primitive visual elements 
fact admit ignore characteristic visual attributes compound visual elements 
chapter term domain structures perceptual structures visual patterns perceived constituent structure term gestalt 
gestalt defined set visual elements related part relation domain structure defined set visual elements related set relations part relation 
purpose chapter twofold 
hand study important domain structures analyzing different classes perceivable relations induced visual elements visual attributes 
hand examine practical application model perception indispensable 
application data visualization 
show effectiveness visual representations guaranteed perceptual structure visual representations modeled appropriately 
section concentrate data visualization defining class data structures want visualize projection data structures perceptual structures layout visual patterns perceptual structures effectiveness criterion 

automatic data visualization approach data visualization formalized sections chapter 
section formally define data visual attributes relations attribute may induce data visual elements 
general types attributes important data visualization introduced 
type visual attribute indicates class perceivable relations induces visual elements 
section introduce formal framework effective data visualization 
framework data visual patterns defined relational structures 
relation structures defined means formal mapping data visual relational structures 
effective data visualization mapping represented data representing visual patterns structure preserving mapping 
structure preserving condition guarantees structural properties data relations structural properties perceivable relations coincide 
condition guarantees exists regularity relations data side exist identical regularity corresponding perceivable relations visual side vice versa 
property important visualizations data mining 
elaborate data visualization consider various visualization systems visual languages 
way consider various types maps diagrams graphs flow charts different visual languages 
visual pattern map diagram considered expression visual language 
automatic data visualization section focus application domain structures gestalts visual patterns play essential roles 
application called automatic data visualization visual patterns generated effectively represent data mac kam mit pg 
define effectiveness visual representation follows visual pattern represents data effectively intended structure represented data perceptual structure representing visual pattern coincide 
particular consider process data visualization inverse interpretation process data represented visualization process generates visual pattern interpretation results original data 
view assume process model data visualization consists number components mapping 
model schematically illustrated chapter 
role perception data visualization 
rest section briefly explain components mappings 
analysis data visual pattern perceptual structure data generation visualization interpretation data perception layout structural mapping data structured model data visualization 
model input data nested relational database 
nested relational database table attribute values 
model table attribute values analyzed determine intended structure 
process data analysis results structured data 
way data considered terms data elements tuples attribute values related means number relations 
process data analysis determines tuples attribute values data table related means explicitly represented relations 
visualization systems process avoided assuming relations starting point annotated table attribute values plain table 
annotated table table attribute values structure domain values attribute explicitly specifying relations applicable domain 
structured data annotated table visualization process proceeds specifying visual attribute data attribute 
automatic data visualization specifying mapping data elements visual elements 
visual element tuple variables stands value specified visual attributes 
fact mapping data elements visual elements consists number mappings maps values data attribute set variables stands values specific visual attribute 
assume specification visual attributes specification mapping results set related visual elements 
relations visual elements determined selecting visual attributes selected visual attribute induce relations visual elements 
stage visualization process perceptual structure generated visual pattern known actual values visual attributes needed draw visual pattern known 
case effective data visualization perceptual structure coincide data structure 
reason claim stage effective data visualization process results structure preserving mapping structured data perceptual structure 
order generate visual pattern specified perceptual structure variables stand visual attribute values instantiated concrete attribute values 
process constraint satisfaction process generating visual attribute values generating visual elements accordance perceptual structure imposed visual elements previous step 
important note visual element drawn values certain visual attributes specified 
explained data attribute mapped visual attribute 
may case visual attributes values necessary draw visual elements constructed mapping 
instance position attribute mapping visual elements receive position values order 
unused visual attributes called undecided attributes contrast decided attributes data attributes mapped 
determination values decided undecided visual attributes called layout process 
noted instantiation values decided visual attributes usually considered part layout process values determined data 
reasons considering determination chapter 
role perception data visualization decided undecided visual attributes values functions layout process 
reason fact instantiation actual values kinds decided undecided visual attributes constrained specified perceptual structure 
particular values undecided visual attributes chosen randomly random choice visual attribute values may induce perceptual structures represent data structure 
phenomenon called unwanted visual implicatures bs 
second reason specified perceptual structure leaves spectrum possible values decided undecided visual attributes 
particular constraints imposed perceptual structure determine values decided visual attributes uniquely 
example color hue attribute decided data attribute choice actual color hue values visual elements open choice 
visual elements identical color hue values different color hue values constraint imposed specified perceptual structure may decide red green yellow color hue values may decide brown orange black color hue values 
reasons consider determination decided undecided attribute values functions layout process 
decisions determine visual attribute data attribute mapping data elements visual elements previous step instantiation values variables step result called interpretation function visual representations 
noted consider process effective data visualization inverse interpretation process 
particular interpretation process starts visual pattern interpretation function 
object interpretation process visual pattern visual pattern perceived understood denoting data step interpreting visual pattern perception 
process perception determines perceivable relations visual elements basis visual attribute values 
visual attribute values assigned visual elements layout process may conclude perception inverse layout process 
subsequently 
automatic data visualization visual elements related perceivable relations mapped related data elements 
mapping accomplished means interpretation function determines correspondence visual data attributes correspondence visual data values 
case effective data visualization relation data elements structurally identical perceivable relations representing visual elements 
structured data table attribute values trivially generated 
process called data generation 
rest section elaborate different stages data visualization process 
input data section focus important class input data nested relational data bases 
input data nested table constructed means data attributes 
column table consists values data attribute row consists values belongs data attribute row forms tuple attribute values 
nested tables values attribute may row nested table constructed means data attributes 
rows nested table may consist data attribute values may consists data attribute values attribute value single value consisting attribute values called atomic value 
row table tuple attribute values certain nesting level called data entry 
attribute value assigned data entry means involved data attributes 
consequently nested tables values assigned data entries attribute may data entries nested table 
example consider car state data table illustrated 
data table describes operation degree pairs car companies 
data table operating operated data attributes 
values operating operated attribute assign data entry rows nested data table 
nested rows indicated key values nested data table 
nested data table constructed data attributes called state data table 
state data table illustrated 
table describes number sold cars chapter 
role perception data visualization operating operation degree operated best best normal normal car state data table 
car type sold number production country vw germany toyota japan opel germany mazda japan nested data table 
certain type produced certain country 
nested data table car type sold numbers production country data attributes 
values attributes assign nested data entry atomic values 
distinguish kinds data structures important data visualization 
structures kind constituted relations defined values individual data attributes relations defined set values column data table 
structures second kind constituted binary relations defined values different attributes range relations defined columns data table contain values set 
order cover kind data structures assume set possible values data attribute structured set 
assume structure set attribute values assigning constitutive relations structure attribute 
instance values sold number attribute domain integers integers related arithmetical relations 
arithmetical relations assigned sold number attribute 
set relations exist values attribute called type attribute 
data attribute type called typed attribute 
data table defined typed attributes called typed data table 
data table relations defined values individual attributes type attributes induced data entries 
way data entries related values individual attributes re 
automatic data visualization lated 
induced relations data entries constitute structures kind 
relations data entries may induced different data attributes 
instance data entries state data table may considered equivalent non equivalent depending value car type attribute may quantitatively related sold number attribute number sold twice number sold mazda number sold toyota equal number sold mazda opel 
data table binary relations defined values attributes range relate data entries 
resulting relations data entries constitute structures second kind 
instance binary relation defined values operating operated attributes range represented binary relation relates data entries car state data table 
binary relations characterized structural properties functional injective surjective bijective transitive symmetric reflexive example car state data table values operating operated attribute define binary relation nonfunctional symmetric non reflexive non transitive 
projecting data visual patterns main step visualizing data projection structured data typed nested tables derived data analysis step perceptual structure 
perceptual structure typed nested table constituted means typed visual attributes 
type visual attribute determined relations perceived values attribute 
typed table constructed typed visual attributes called typed visual table 
rows visual table called visual entries 
projection structured data perceptual structure consists defining map typed data attributes typed visual attributes map rows data table data entries rows visual table visual entries 
way number visual attributes number visual entries number data attributes number data entries respectively 
chapter 
role perception data visualization assume projection specify actual attribute values visual entries specifies visual entries means variables stand visual attribute values 
projection specifies visual entries related perceptual relations 
fact resulting typed visual table represents perceptual structure drawn deciding actual values variables involved 
example car state data table may decide connecting visual attribute operating data attribute connected operated size operation degree pos car type pos sold number color hue visual attribute production country data attribute 
visual entries specified data entries 
projection typed data attributes data entries typed visual attributes visual entries results typed visual table illustrated 
connecting size connected size size size size size size visual table car state data table 
pos pos color hue seg pos hue seg pos hue seg pos hue seg pos hue visual table nested state data table 
different typed visual attributes decided typed data attribute 
similarly different visual entries specified data entry 
different ways deciding visual attributes specifying visual entries result different visualizations data 
set decisions basis visual attributes entries related data attributes entries called interpretation function 
interpretation functions usually expressed legends attached visual patterns integrated visual patterns inserting textual information 

automatic data visualization layout visual patterns previous section explained typed data table projected typed visual table visual entries constituted variables 
generation actual attribute values visual entries accomplished layout process 
number visual attributes determined number data attributes layout process generate values decided visual attributes generate values undecided visual attributes 
fact undecided visual attributes represent data values specified order draw visual patterns 
example consider visual patterns illustrated 
normal relation relation best relation vw mazda opel toyota sold numbers normal best car types vw japan germany mazda small normal relation big best relation middle relation opel germany japan visualizations car state data table 
visualization illustrated shape size visual elements undecided attributes shape size visual elements represent data attributes 
similarly visualization illustrated position shape attributes undecided visual attributes 
visualization position attribute undecided visual attribute 
visualization label attribute decided car type sold number production country attributes 
note textual information inserted visualizations may values visual label attribute may part interpretation function 
order distinguish kinds textual information capital letters indicate textual information value visual label attribute part chapter 
role perception data visualization interpretation function 
example visualization illustrated interpretation function partially expressed legend attached upper right corner visualization partially expressed inserting textual information 
way textual information toyota opel mazda interpretation values different segment values 
similarly textual information car type sold number numbers attached vertical axis interpretations horizontal axis vertical axis positions vertical axis respectively 
effective data visualization nested data table visualized different ways deciding different visual attributes data attribute specifying different visual entries data entry 
different visualizations car state data table illustrated 
vw opel mazda toyota normal relation relation best relation japan germany normal relation relation best relation germany japan vw mazda opel toyota sold numbers car types alternative visualizations car state data 
visualization illustrated horizontal axis visualizes car type attribute vertical axis visualizes sold number attribute color hue attribute visualizes production country attribute 
links visual elements defined connecting connected attribute visualize car attributes 
thickness links visualizes degree operations 
visualization illustrated shape attribute visualizes sold number attribute color hue attribute visualizes production country attribute label attribute visualizes attribute 
visualization illustrated links 
automatic data visualization thickness visualize operations degrees car companies respectively 
note visualization inserted numbers interpretation values 
visualizations illustrated represent data visualization illustrated effective visualization 
notion effective visualization studied ber mac 
studies visual pattern claimed represent information state effectively human perceiver easily cognitive effort extract represented information means interpretation function 
consider effectiveness visualizations data related intended relations data visualized 
pragmatic issues visualizations cas purpose visualizations considered specification importance ordering intended data relations visualized 
accordingly visualization data considered effective intended data relations visualized structurally identical perceivable relations 
instance intends visualize number sold cars exact number sold cars proportional relations absolute difference relations perceived decide sold number attribute visual attribute induces structurally similar perceivable relations 
visualization illustrated shape attribute decided sold number attribute 
perceivable relation induced shape attribute identity relation 
implies may perceive numbers sold cars equal 
intention visualize quantitative relations data entries visualization considered non effective visualization intended quantitative relations data entries visualized structurally similar perceivable relations corresponding visual elements 
important note may deduce intended quantitative relations indirectly means interpretation values inserted visualization 
example may interpretation values attached visual elements deduce second twice 
reasoning knowledge perceiver structure real numbers perceivable relations 
effectiveness chapter 
role perception data visualization visualization ability perceive data relations directly structurally similar perceivable relations 
order illustrate direct perception relations consider visualizations 
normal relation relation best relation japan germany opel toyota mazda vw normal relation relation best relation germany japan vw mazda opel toyota sold numbers car types visualizations interpretation values 
visualizations visualizations visualizations interpretation values left 
knowing shape attribute visualizes sold number attribute impossible perceive quantitative relation visual elements impossible conclude quantitative data relation 
knowing vertical axis visualizes sold number attribute easy perceive quantitative relations visual elements easy conclude quantitative data relations 
rest chapter refer perceptual structure visualizations mean structure visualizations interpretation information 
examples discussed effectiveness data visualizations influenced deciding different visual attributes data attributes 
specifications visual entries layout process may influence effectiveness visualizations 
noted layout process specify values decided undecided visual attributes 
context effective data visualization generation values decided attributes visual elements constrained perceivable relations 
fact values decided attributes visual elements induce perceptual relations structurally similar intended data relations 

automatic data visualization example visualization illustrated attribute decided production country attribute circle shaped visual elements specified state data entries 
values production country attribute induce classification relation data entries state relation 
layout process generated values color hue attribute circle shaped visual elements identical color hue values corresponding data entries identical production country values 
values decided visual attributes values undecided attributes visual elements chosen arbitrarily effectiveness visualization guaranteed anymore 
example consider visualization 
visualization represents information visualization figures claimed diagram represents information effectively 
reason human perceiver may perceive classification relation visual elements induced undecided shape attribute conclude classification relation may represent data relation 
noted phenomena called unwanted visual implicatures 
drawing visual patterns values decided undecided visual attributes specified order avoid unwanted visual implicatures values undecided visual attributes specified way induce identity relation visual elements 
words may avoid unwanted visual implicatures grouping involved visual elements undecided visual attributes perceptual group 
way visual elements classified undecided visual attributes belonging perceptual group 
chapter argued gestalts visual patterns determine perceptual groupings visual patterns 
accordingly layout process generate values undecided visual attributes gestalts visual patterns undecided visual attributes reflect perceptual group 
note gestalts diagram illustrated reflects perceptual group shape attribute undecided attribute 
chapter 
role perception data visualization formal classification domain structures section study perceivable relations induced primitive visual elements means visual attribute values 
noted chapter admit ignore perceivable relations induced means values characteristic visual attributes compound visual elements 
values characteristic visual attributes compound visual elements values constitutive primitive visual elements 
example different groups visual elements compound visual element may label 
labels induce equivalence relation compound visual elements compound visual elements identical labels considered equivalent different labels considered non equivalent 
perceivable relations induced means visual attributes primitive visual elements constitute domain structures visual patterns 
example color saturation values color hue value induce ordering relation primitive visual elements primitive visual element certain saturated color value perceived equal saturated primitive visual element 
different visual attributes may induce different perceivable relations primitive visual elements 
implies different visual attributes may result different domain structures 
domain structures subdivided different types 
order study different types domain structures define attributes visual non visual formally introduce general types attributes 
type attribute defined terms relations may induced involved primitive elements attribute 
visual attributes classified introduced attribute types 
way relations define type visual attribute characterize perceptual relations visual attribute may induce primitive visual elements 
order define attributes formal way notions measurement theory 
theory measurement provides classification attributes mathematical definitions introducing different types measurement scales ste pfa 
fact measurement scale map structured set elements structured set 
formal classification domain structures values set real numbers set integers set strings measurement theory relational systems represent structured sets 

definition 
relational system pair set elements relations defined chapter consider attributes measurement scales attribute maps structured set primitive elements structured set values called set attribute values 

definition 
attribute homomorphism relational system relational system 
set set primitive elements set set attribute values may set real numbers set integers set strings case visual attribute set primitive visual elements perceptual relations induced primitive visual elements visual attribute set values characterizing relations defined characterizing relations mathematical relations homomorphism guarantees perceivable relations attribute induces primitive visual elements identical structural properties characterizing relations exist attribute values 
characterizing relations particular perceivable relations darker smaller left define types relations type perceptual structures visual attributes induce primitive visual elements 
rest chapter types attributes distinguished qualitative quantitative 
qualitative attributes subdivided nominal ordinal attributes 
quantitative attributes defined considering different sets arithmetical relations 
introduce types quantitative attributes important data visualization interval ratio 
nominal attributes nominal attribute homomorphic map relational system 
relational system 
note homomorphic map assigns real number string elements chapter 
role perception data visualization ordinal attributes ordinal attribute homomorphic map relational system 
relational system 
homomorphic map matches ordinal relation attribute values ordinal relation elements interval attributes interval attribute homomorphic map relational system ffi relational system phi phi quaternary metrical relation defined real numbers 
note interval attribute quantitative attribute set attribute values context visual representations may quaternary metrical relation phi defined ab phi cd ja gamma bj jc gamma dj 
attribute called absolute interval attribute interested absolute difference pairs elements 
ratio attributes ratio attribute homomorphic map relational system ffi null relational system 
ff ff binary metric operator defined real numbers zero place operator identifying zero element real numbers 
note zero element property ff 
zero place operator identifies absolute origin element 
ratio attribute quantitative attribute set attribute values context visual representations may binary metrical operator ff defined ff absolute origin element 
interval ratio attributes introduced may quantitative attributes uses different sets arithmetical relations properties real numbers 
perceptual classification visual attributes define visual attribute attribute maps relational system set primitive visual elements relational system set values 
example color saturation attribute set color saturation values color hue color hue red set relations consists ordering relation 

formal classification domain structures elements set objects human visual system 
interested perceptual characteristics visual attributes relations reflect characteristics 
example human visual system identify equality shape values perceives red square green square shapes identify ordering red circle red square 
contrast human visual system identify order different color sizes 
way perceive red square bigger green square 
perceptual characteristics constitute basis type visual attributes defined 
rest section study important visual attributes perceptual point view classify types attributes introduced 
claim visual attributes analyzed way 
study visual attributes subsection divide successive subsections non spatial spatial topological nested segmentation 
subsections meant classify visual attributes systematic meaningful way 
may intuitive study size shape attributes non spatial attributes 
non spatial visual attributes non spatial visual attributes studied bertin ber 
attributes include hue saturation brightness size shape label texture color hue attribute defined homomorphic map relational system consisting set primitive visual elements equivalence relation relational system consisting set color hue values equality relation 
way equality color hue values matters primitive visual elements color hue value considered belong equivalence class 
note definition color hue attribute assumes human visual system identify equality color hue values book graphics graphic information processing uses term visual variables visual attributes 
chapter 
role perception data visualization order 
course narrow characterization color hue attribute 
fact color hue values cases perceived ordered 
example rainbow colors certain sequence color hue values perceived ordering structure 
ordering structure characterized ring structure constituted mathematical relation modulo relation 
characterization color hue attribute difficult consider fact people especially visual artists know purple hue value blue red orange red yellow awareness may orange blue 
assume properties color hue attribute specified mathematical relations define attribute homomorphic map relational systems 
rest section define various visual attributes considering minimal characterizations may ignore complex properties 
color saturation attribute homomorphic map relational system consisting set primitive visual elements ordered equivalence relation relational system consisting set color saturation values ordering relation set color saturation values assumed set color saturation values single color hue value different color saturation values equal relations 
assumed identity ordering color saturation values matters 
color brightness attribute homomorphic map relational system consisting set primitive visual elements ordered equivalence relation relational system consisting set color brightness values ordering relation set color brightness values assumed set color brightness values single color hue value different color brightness values equal darker relations 
assumed identity ordering color brightness values matters 
shape attribute defined similar way color hue attribute 
range shape attribute pair consisting set shape values equality relation defined 
assumed perceive equality shapes perceive shape related 
note consider specific set 
formal classification domain structures shapes perceive orderings 
instance case polygons shapes ordered number edges nodes involved 
way range size attribute defined pair consisting set possible size values order relation defined 
equality size values perceived human visual system special cases set size values small finite set 
argue size attribute quantitative attribute perceive square twice big second square 
case domain range size attribute contain metric relation defines quantitative structure set primitive visual elements set attribute values respectively 
label texture attribute defined homomorphic maps ranges consist set label texture values respectively 
relation relational systems equality relation 
section studied type perceivable relations non spatial attribute may induce primitive visual elements separately 
explained section non spatial attributes color hue color saturation color brightness attributes integral non separable attributes 
implies attributes may constitute complex attribute color attribute may induce additional perceptual structures primitive visual elements 
complex attributes leave specifications structures induce research 
spatially visual attributes different kind visual attributes concerns various uses properties space 
properties depend dimensions space 
spatial attributes employ properties multidimensional spaces integral attributes 
implies spatial attributes multidimensional spaces may employ complex properties spaces defined properties individual dimensional spaces 
consider spatial attributes multidimensional spaces employ properties individual dimensional spaces leave specification complex attributes perceivable relations may induce research 
chapter 
role perception data visualization way consider multidimensional spaces defined terms dimensional spaces considering properties multidimensional spaces defined properties identical dimensional spaces 
study different spatial attributes dimensional space henceforth space consider spatial attributes space space defined spatial attributes space 
space dividing subspaces called segmentation 
way total space divided finite number segments 
segmentation attribute defined homomorphic map relational system consisting set primitive visual elements equivalence relation relational system consisting set real numbers names identifies certain segment equality relation defined 
assumed human visual system perceive space consisting number perceptually distinguishable segments 
ordinal property space consider space ordered set subspaces 
consideration results ordered segmentation attribute defined homomorphic map relational system consisting set primitive visual elements ordered equivalence relation relational system consisting set real numbers names identifies certain segment order relation defined set 
space viewed terms quantitative properties 
quantitative properties space different ways quantitative properties space considering space relative space consisting positions origin defined 
case space positions interval quantity perceived meaningfully 
resulting visual attribute called relative space attribute 
attribute defined homomorphic map relational system consisting set primitive visual elements necessarily include element origin position set relations consisting equivalence relation ordering relation metrical relation example absolute distances primitive visual elements 
range map relational system consisting set real numbers 
formal classification domain structures identifies position equality relation ordering relation absolute difference relation pairs real numbers defined 
second quantitative properties space considering space absolute space position explicitly implicitly defined origin space 
case position space quantity proportionality positions perceived meaningfully 
resulting visual attribute called absolute space attribute 
visual attribute defined homomorphic map relational system consisting set primitive visual elements may placed origin space set relations consisting equivalence relation ordering relation metrical relation example proportion distances primitive visual elements 
range map relational system consisting set real numbers identifies position equality relation ordering relation proportionality relation defined real numbers 
separate analysis dimensional spatial attributes implies spatial attributes dimensional spaces defined consisting dimensional spatial attributes 
spatial attributes defined space sixteen possibilities dimensional spatial attributes 
course combinations may yield identical results 
example twodimensional spatial attribute consisting absolute space attribute ordered segmentation attribute may dimensional spatial attribute consisting ordered segmentation attribute absolute space attribute 
cases order combination spatial attributes may result differences orders combination considered different 
perceptual structure visual patterns induced combination visual attributes 
example combination visual attributes dimensional bar chart illustrated 
bar chart space axis structured dividing segments second space axis structured metrical quantities 
color hue primitive visual elements bars dimensional space reflects nominal structuring 
chapter 
role perception data visualization axis axis perceptual structure visual pattern induced combination visual attributes 
topological attributes special type domain structures concerns various uses topological properties space 
domain structures constituted perceivable topological relations inside outside overlap connectedness topological relations visual patterns family trees flow charts network diagrams path diagrams subway maps venn diagrams 
visual patterns perceivable topological relations explicitly represented primitive visual elements line arrow connections shaded areas implicitly represented placing primitive visual elements relations inclusion exclusion overlap example graph illustrated arrow connections represent explicitly topological relation circles diagram illustrated shaded areas represent explicitly topological relation closed curves euler diagram illustrated overlap disks represents implicitly topological relation 
rest section consider topological relation binary relation defined subset cartesian product set primitive visual elements 
ary topological relation described terms binary topological relations 
domain structures constituted topological relations called topological structures 
domain structures proposed previous subsections constitutive perceivable relations primitive visual elements defined means structurally similar relations attribute values topological structures constituted topological 
formal classification domain structures examples explicitly implicitly represented topological relations 
relations primitive visual elements 
binary topological relations assumed induced primitive visual elements means topological attributes values set primitive visual elements 
topological relations explicitly represented primitive visual elements line shaded areas topological attributes considered attributes primitive visual elements 
primitive visual elements may attributes size color texture case implicitly represented topological relations attributes generate set binary tuples relates primitive visual element 
binary tuples represent visual elements 
example graph illustrated arrow connections primitive visual elements defined basis topological attributes start gamma link gamma link assign circles primitive visual elements arrow connection relate circles 
similarly diagram illustrated shaded areas defined basis topological attributes included included th element 
way shaded area relates closed curves 
euler diagram illustrated attributes overlap element second overlap element generate set binary tuples relating disk 
set binary tuples represents overlap relation disks 
primitive visual elements explicitly represent topological relations related terms relations defined primitive visual elements values topological attributes involved 
example arrows visual pattern illustrated chapter 
role perception data visualization related means relations exist circles connect 
considering positional relation connected circles visual pattern arrow related arrow connecting circles left side circles connected second arrow 
visual pattern illustrated shaded area related included higher closed curves second shaded area included 
consequently define topological attribute homomorphic map relational system consisting set primitive visual elements explicitly represent topological relations set relations relational system consisting set primitive visual elements values topological attributes set relations relation defined terms relation primitive visual elements explicitly represent topological relations related means defined terms defined primitive visual elements values topological attributes involved 
note explicitly represented relations lines arrows shaded areas primitive visual elements defined means non topological visual attribute values color shape size texture attribute values may induce additional perceivable relations explicitly represented relations 
example arrow connections circles graph illustrated primitive visual elements different sizes thickness 
size values arrows induce ordinal relation perceives arrow thicker thinner arrow 
situation quite different topological relations explicitly represented primitive visual elements 
explained relations sets binary tuples consists primitive visual elements 
argued set generated topological attributes 
call topological attributes induce implicitly represented topological relations implicit attributes contrast explicit attributes induce topological relations explicitly represented primitive visual elements 
order deal implicit attributes way explicit attributes consider set binary tu 
formal classification domain structures ples domain relational system equivalence relation defined 
words consider binary tuple invisible element defined terms values topological attributes 
case implicit attributes assume primitive visual elements values implicit topological attributes induce relations equivalence relation invisible elements invisible elements related equivalence relation 
define implicit topological attribute homomorphic map relational system consisting set invisible elements tuples primitive visual elements equivalence relation relational system consisting set primitive visual elements equivalence relation 
treatment implicit topological attributes intuitive advantage modeling visual attributes uniformly visual attributes induce perceivable relations defined domain values primitive visual elements 
topological relations may various structural properties functional injective surjective bijective transitive reflexive symmetry topological structures subdivided tree structures cyclic acyclic graph structures detailed classification topological relations structures kam 
nested segmentation attribute special space recursive division space nested subspaces 
nested subspaces called nested segments 
fact recursive division space provides nesting structure segments 
example nested segmentation space illustrated 
visual pattern space divided segments subdivided nested segments 
subsequently nested segments space represent dimensional bar charts 
nesting structure segments assumed induced nested segmentation attribute 
nested segmentation attribute defined homomorphic map relational system consisting set perceptually distinguishable subspaces segments equivalence relation relational system consisting set nested elements equality relation defined 
note nested elements range attribute may segments nested segmentation attribute defined 
chapter 
role perception data visualization ny ny nx nx example nested segmentation dimensional space 
hierarchy domain structures previous subsections different types domain structures introduced 
type domain structure subdivided specific types 
subdivision domain structures provides hierarchical scheme illustrated 
tree structures graph structures structures acyclic structures structures cyclic quantitative structures interval structures ratio structures nested segment structures nominal structures structures ordinal qualitative structures structures domain structures spatial non spatial type hierarchy domain structures 
hierarchical scheme links structure types isa links indicate lower level structure type specific type higher level connected structure type 
hierarchical scheme extended including specific types domain structures 
example specific spatial structures specified considering different quantitative arithmetic relations 
sim 
formal framework data visualization may extend hierarchy adding specific topological structures 
example topological structures classified structural properties constituting relations 
elaborate classification relations structural properties discussed kam 
formal framework data visualization section chapter process model effective data visualization described 
argued effective data visualization intended structure data perceptual structure representing visual pattern structurally coincide 
intended structure data perceptual structure visual patterns constituted data relations perceivable relations respectively 
data relations perceivable relations induced data primitive visual elements means involved data visual attributes respectively 
section chapter formally defined data visual attributes introduced classification 
classification attributes type relations structures induce data visual elements 
section build definitions section provide formal description model effective data visualization outlined section 
particular define relational systems constructed data attributes visual attributes respectively 
relational system specifies structure data second relational system specifies perceptual structure visual patterns 
effectiveness condition data visualization modeled demanding structure preserving mapping relational systems 
explain role gestalt data visualization conclude section defining notion visual language 
structures data visual patterns section nested table data attribute values presents nested relational database considered set data entries tuple data attribute values 
data attribute value atomic data value nested data entry 
similarly visual pattern chapter 
role perception data visualization represented nested visual table 
nested visual table set visual entries tuple visual attribute values 
visual attribute value atomic visual attribute value nested visual entry 
example car state data table tuple data entry nested data entries germany toyota japan respectively 
data entries involved defined terms second third 
similarly visual data table tuple size visual entry representing link nested visual entries representing circles seg pos hue seg pos hue respectively 
data entries visual entries related means attribute values 
data visual entries different nesting levels defined terms different tuples attribute values relations data visual entries different nesting levels may disjoint relation defined data visual entries certain nesting level need defined data visual entries different nesting level 
previous sections argued visualization nested data table effective intended structure represented data perceptual structure representing visual pattern coincide 
order define structural correspondence define annotated data tables annotated visual tables relational systems consisting set entries set relations defined set entries 
noted relations defined entries certain nesting level 
relations partial relations means defined entries certain nesting level undefined entries nesting levels 
defining data visual tables relational systems expresses relations data visual attributes induce data visual entries explicitly 

definition 
de set data entries tuples data attribute values dr drm partial relations defined de means data attributes involved 
annotated data table defined relational system de dr drm 
relational system called data system 
similarly set visual entries tuples visual attribute values rm partial perceivable relations defined means visual attributes involved 
annotated visual 
formal framework data visualization table defined relational system rm 
relational system called visual system 
example consider data tables illustrated figures 
year student study state data table 
subject nr stud mathematics physics computer mathematics physics computer mathematics physics computer nested data table 
data tables indicate number students nr stud study certain subject subject different years year 
particular study state data table defined attributes year student 
values student attribute nested tuples set defines nested data table illustrated 
nested data table called student state defined attributes subject stud 
de set data entries consisting values year student attribute nde set nested data entries consisting values subject nr stud attribute subject relation defined nde lower number relation defined nde quantitative relation defined nde expresses proportional relation data entities zero place operator identifies data entry nde represents absolute origin element ede earlier relation defined de state relation defined de 
attributes study state data table attributes nested student state data table defined homomorphic maps chapter 
role perception data visualization subject nde 
physics computer nr gamma gamma stud nde 
ff ff ear de ede 
student gamma state de 
nde data attributes constitute data system de nde ede relational system expresses structure data represented study state data table explicitly 
relational system data attributes may assign different attribute values elements data entries relational system 
different assignments attribute values elements relational system considered different instantiations relational system 
note different instantiations relational system result structurally identical data tables 
similar way may define relational system basis visual data table 
example consider visual data tables illustrated figures 
set visual entries consisting visual values horizontal segmentation attribute pos topological attribute include nv set nested visual entries consisting visual values nested horizontal segmentation attribute nx pos nested vertical segmentation attribute ny pos 
position relation defined nv shorter relation defined nv quantitative length relation defined nv perceive length visual element times shorter length second visual element zero place operator identifies visual element length perceived 
formal framework data visualization pos include seg seg seg seg seg seg seg seg seg visual data table 
nx pos ny pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos gamma seg pos nested visual table 
left relation defined si inclusion relation defined involved visual attributes visual data illustrated figures defined homomorphic maps nx gamma pos nv 
fx segment gamma axis ny gamma pos nv 
fy position gamma axis ff ff gamma pos 
fx position gamma axis include si 
nv visual attributes constitute visual system nv si relational system visual attributes may assign different attribute values elements visual entries relational system 
results different instantiations relational system 
case visual data different instantiations relational system provide different visual patterns 
different instantiations chapter 
role perception data visualization relational system illustrated 
different instantiations relational system 
note second visualization generated smaller format 
nested positions determined non ordered segmentation attribute nx pos order bars visualizations different 
second visualization design errors 
design errors result unwanted visual implicatures 
design error related instantiation nested position values determined decided nx pos attribute 
nested positions bars identify different segments random choices cause different distances bars 
different distances bars may suggest positions determined nominal attribute case segmentation attribute ordinal interval ratio type attribute 
second design error related instantiation texture values determined undecided texture attribute 
random choices nested positions random choices texture values may suggest differences texture values different bars express semantic differences 
noted section chapter instantiation values decided undecided visual attributes considered function layout process 
subsection chapter idea 
formal framework data visualization perceptual grouping gestalt formulate conditions instantiation visual values layout process mentioned design errors avoided 
formulate structure preserving condition data system visual system 
structure preserving mapping explained visual patterns data defined visual data systems respectively 
interpretation visualization relation visual patterns data defined mapping relational systems 
mapping relational systems consists mapping domain elements relational systems mapping relations 
mapping visual system data system provide visualization subset claimed guarantee effective visualizations 
effectiveness visualizations achieved demanding structure preserving mapping intended structure data perceptual structure representing visual patterns 
order define effective mapping structure data perceptual structure visual pattern structure data coincides perceptual structure visual pattern require isomorphism structure preserving map corresponding data visual systems domain elements visual system constituted values decided visual attributes 

definition 
isomorphism relational systems delta delta mapping delta delta mapping relations satisfies condition relation holds elements delta corresponding relation holds corresponding elements delta hold elements delta hold corresponding elements delta isomorphic mapping guarantees data entry corresponds represented visual entry exists intended relation data entries corresponding visual entries related structurally identical relation 
chapter 
role perception data visualization necessary sufficient isomorphism requires correspondence data relations visual relations types 
condition partial reformulation effectiveness criteria effective visualization data attributes visualized visual attributes attribute types 
role gestalts data visualization mainly discussed domain structures visual patterns represent information structures 
section explain role gestalts visual patterns visualizing information 
gestalts visual patterns proximity structure involved visual elements defined regularity perceivable relations 
gestalts represent perceptual grouping visual elements 
visual elements perceptually grouped structural regularity visual elements perceptually grouped proximity example illustrated number visual elements positioned circumference circle equidistant positions perceived belonging perceptual group 
similarly visual elements positioned relatively close perceived belonging perceptual group proximity effect 
perceptual grouping visual elements considered classification structure providing perceptually motivated equivalence classes visual elements 
way visual elements belong perceptual group considered perceptually equivalent visual ele isomorphic mapping sufficient condition design factors cultural conventions play role effectiveness visualizations 

formal framework data visualization ments belong different perceptual groups considered perceptually non equivalent 
implies perceptual grouping visual elements imposes nominal structure visual elements 
data visualization gestalt nominal structures represent nominal data structures 
explained different decided visual attributes color size segmentation may induce nominal type structure visual elements 
instance segmentation attribute considered nominal type attribute defining equality relation perceptually equivalent positions visual elements 
explain conditions actual attribute values visual elements perceptually equivalent 
order determine perceptually equivalent attribute values gestalt idea regularity proximity attribute values explained chapter 
chapters explained regularity proximity attribute values result visual elements belong perceptual group 
may idea define perceptually equivalent attribute values 
particular consider subset values visual attribute perceptually equivalent instantiation attribute values subset visual elements resulted belong perceptual group 

definition 
set values visual attribute ff sit equivalence relation defined equivalence relation sit defined basis regularity proximity gestalt analysis attributes values sit iff instantiation visual elements resulted belong perceptual group 
visual attribute ff nominal attribute defined homomorphic map relational system set visual elements relational system sit 
way gestalts nominal structures induced visual elements different decided visual attributes 
note essential inducing nominal structure basis position values 
different visual elements different position values perceptual equivalence visual elements position values defined perceptually equivalent positions actual equivalent positions 
similarly fact different colors shapes sizes may perceived equivalent treated similar way 
chapter 
role perception data visualization may case visual attributes represent data attributes undecided attributes may involved 
previous sections explained arbitrary assignment values undecided attributes visual elements result unwanted visual implicatures 
order avoid unwanted visual implicatures undecided attributes assign attribute values visual elements gestalt induced undecided attributes represents perceptual group perceptual group contains visual elements involved 
example node link diagrams illustrated positions represent information 
nodes diagram cause unwanted implicature nodes diagram 
diagram illustrated perceives positional irregularity nodes may conclude semantic difference node hand nodes hand 
unwanted visual implicature avoided diagram position gestalt nodes nodes perceived perceptual group semantically equivalent respect positions 
visualization systems visual languages representation system consisting relational systems data system visual system mapping specifies visual language 
mapping relational systems represents denoting relation visual patterns data 
different pairs relational systems specify different visual languages 
pair 
formal framework data visualization relational systems mappings possible results different visual language 

definition 

delta 
delta data system visual system respectively psi mapping 
triple 
psi specifies visual language 
visual language mapping isomorphic called effective visual language 
note visual language may generate different visual patterns expressions visual language different number elements visual systems involved different range values attribute values visual attributes 
means visual expressions visual language employ identical relations structure change signature set relations involved implies change identity language 
way various kinds maps diagrams graphs flow charts considered different visual languages 
different bar charts differ number bars visual attribute values considered different expressions visual language bar chart language 
observation implies partial order visual languages order determined signatures languages 
partial order determines expressive power visual languages terms richness signatures 
assuming finite number visual attributes partial ordering represented lattice determines expressiveness hierarchy visual languages 
note visualization system characterizes certain visual language formal analysis visualization systems applied visual languages 
chapter research far precise encompassing model human visual cognition 
model limited small subset phenomena specific mechanism sacrifice preciseness 
done address stylized caricature actual phenomena 
choosing caricature approach inspired competence performance distinction linguistics completely artificial fruitful 
certain complexity status model proposed 
model schematic 
discussed plausibility certain instantiations hope structures conjectured cases generally applicable 
extent model specified open ended 
go investigate various domains perceptual patterns may represented terms input structures vreg system presupposes admissible functions may invoked complexity measure defined 
thesis developed various formal languages represents certain class regularity gestalts certain class perceptual patterns 
languages designed dimensional string patterns designed dimensional visual patterns 
feel languages need developed cover different classes regularity gestalts various perceptual patterns 
considered gestalts regularity relations subsets attribute values primitive visual chapter 
research elements 
argued gestalts visual patterns regularity relations subsets attribute values compound visual elements attribute values constitutive primitive visual elements 
kinds regularity gestalts elaborated left research 
vreg language deals visual structures characterized partial mappings euclidean plane finite sets nonrecursive feature structures 
shown subsumes leeuwenberg languages analyze structure finite sequences discrete symbols 
emphasized open closed line patterns euclidean plane adequately represented finite sequences discrete symbols reason perceptual structure correctly analyzed terms existing leeuwenberg style coding languages 
admit completely clear vreg language stands allows adequate treatment dimensional line patterns 
follow leeuwenberg focusing relatively simple artificial case line pattern consisting exclusively straight line segments relatively straightforward represent line pattern set length direction pairs positioned plane set pairs positions 
case leeuwenberg languages question observations regularities representation allows derive high level description pattern captures gestalt structures people perceive 
demonstrated algorithm computes simplest codes basis regularities representation takes continuity lines account proper way 
may get continuation free general version vreg encoding algorithm certainly imagine version algorithm acknowledges notion line segment special kind object prefers gestalts unnecessary line breaks shifts direction 
remains worked 
difficult issue design proper finite representation curved lines 
computer generation visual forms commonly done means th order polynomials characterized instance certain points pass angles 
clear kind representation value cognitive perspective 
clear concerned experimental assessment predictions models 
linguistics served role model time accounting obvious uncontroversial intuitions researcher may perception constituted challenge 
extent come notions initial plausibility desirable complement systematic experimentation 
example argued class admissible transformations certain subclass mathematical transformations perceptually relevant 
subclass mathematical transformations identified 
identification perceptually relevant admissible transformations remained open experimentation 
aspect model intuition needs verified experimentation definition information load 
fact developed new formal languages express gestalts perceptual patterns information load defined expressions languages redefine notion information load languages 
tried stay close possible latest experimentally verified definition information load think proposed definition information load newly developed languages verified experimentation 
noted system described dimensional patterns analyzed terms dimensional regularities 
humans tend project dimensional interpretations input patterns 
phenomena related tendency ignored current algorithm 
include projection ground ambiguity 
described gestalts determined solely proximity regularity ignoring role recognizing previously experienced patterns 
clear factored 
may done interpreting complexity measure information theoretic fashion 
allow complex patterns treated units get lower complexity value full description anyway recurring patterns receive lower complexity value expected 
analyzing gestalts static codes preliminary step direction cognitively realistic description 
gestalt characterized code stable group transformations map codes alternative compatible codes 
bibliography bdp bod dastani scha 
hci discourse perspective 
technical report esprit basic research action human communication research center edinburgh august 
ber bertin 
graphics graphic information processing 
walter de gruyter berlin newyork 
blr leeuwenberg 
coding theory visual pattern completion 
journal experimental psychology human perception performance 
bos 
local versus global minima visual pattern completion 
perception psychophysics 
bs bod scha 
deriving optimal network diagrams means structural information theory 
technical report esprit basic research action human communication research center edinburgh august 
bw 
minimum principle visual pattern completion 
psychological research 
cas casner 
task analytic approach automated design graphic presentations 
acm transactions graphics volume pages 
bibliography das dastani 
computing perceptual structure visual expressions 
artificial intelligence design aid workshop visual representation reasoning interaction design 
june stanford university california 
das dastani 
algebraic approach data visualization 
dutch graduate school logic 
das dastani 
formal framework visual representations 
nd international workshop theory visual languages capri italy september 
di dastani 
algebraic approach similarity categorization 
interdisciplinary workshop similarity categorisation edinburgh scotland november 
dij dijkstra 
note problems connexion graphs 
numerische mathematik 
dis dastani indurkhya scha 
algebraic method solving proportional analogy problems 
mind ii computational models creative cognition dublin ireland september 
dos dastani oberlander stenning 
marks spot drawing euler circles 
semantic issues graphical representation esprit report hcrc edinburgh university 
dt dastani tan 
representation systems video annotations 
object foundation classes esprit report sentient machine research amsterdam 
dub dubes 
cluster analysis related issues 
chen pan wang editors handbook pattern recognition computer vision 
world scientific 
engelhardt de bruin janssen scha 
visual grammar information graphics 
artificial intelligence design aid workshop visual repre bibliography sentation reasoning interaction design 
june stanford university california 
eva evans 
program solution class geometric analogy intelligence test questions 
minsky editor semantic information processing pages cambridge mass 
mit press 
gar garner 
processing information structure 
lawrence erlbaum associates md 
hm hofstadter mitchell 
conceptual slippage analogy making report copycat project 
proceedings tenth annual cognitive science society conference hillsdale new jersey 
lawrence erlbaum associates 
hof hofstadter 
copycat project experiment nondeterministic creative analogies 
memo artificial intelligence laboratory cambridge mass 
mit 
id indurkhya dastani 
algebraic model context effect analogy 
european conference cognitive science pages manchester uk 
ima imai 
classification sets stimuli stimulus characteristics numerical properties 
perception psychophysics 
ind indurkhya 
role interpretive analogy learning 
new generation computing 
ind indurkhya 
metaphor cognition interactionist approach 
kluwer academic publishers dordrecht netherlands 
jd jain dubes 
algorithms clustering data 
prentice hall new 
kam thomas kamps 
constructive theory diagram design algorithmic implementation 
ph thesis 
bibliography 
principles gestalt psychology 
harcourt brace world new york 

concurrent pitch segregation theory indispensable attributes 
editors perceptual organization hillsdale new jersey 
lawrence erlbaum associates 
lee leeuwenberg 
perceptual coding language visual auditory patterns 
american journal psychology 
mac mackinlay 
automating design graphical presentations relational information 
acm transactions graphics volume pages 
mit mitchell 
computational view design creativity 
gero maher editors modeling creativity knowledge creative design pages hillsdale new jersey 
lawrence erlbaum associates 
marks reiter 
avoiding unwanted conversational implicatures text graphics 
proceeding aaai menlo park ca 
pfa 
theory measurement 
physica verlag 
wien 
pg petre green 
learning read graphics evidence seeing information display acquired skill 
journal visual languages computing 
kamps golovchinsky 
generative theory diagram design 
gershon eick editors ieee proceedings information visualization pages atlanta georgia october 
ieee computer society press 
shepard 
integrality versus separability stimulus dimensions early convergence evidence proposed theoretical basis 
bibliography antz editors perception structure pages washington dc 
american psychological association 
sie siekmann 
unification theory 
journal symbolic computation 
ste stevens 
theory scales measurement 
science 
van leeuwen 
context influence perception figures condition perceptual organization strategies 
perception psychophysics 
tufte 
visual display quantitative information 
graphics press cheshire ct 
tufte 
envisioning information 
graphics press cheshire ct 

schema study graphic language 
bouma editors processing visible language volume new york 
plenum press 
van der helm 
dynamics 
psychological research 
van der helm leeuwenberg 
avoiding explosive search automatic selection simplest pattern codes 
pattern recognition 
van der helm leeuwenberg 
accessibility criterion regularity hierarchy visual pattern code 
journal mathematical psychology 
vh von helmholtz 
treatise psychological optics vol iii translation rd german ed 
dover publications original published ny 
van leeuwen 
facilitation retrieval perceptual structure 
psychological research 
bibliography van leeuwen van der 
sequence influence organization meaningless serial stimuli economy 
journal experimental psychology human perception performance 
wer wertheimer 
untersuchungen zur von der gestalt 
forschung 
index regular structure visual pattern transformation accessibility admissible function admissible relation admissible transformation algebraic correspondence algebraic term complex primitive alternation dimensional dimensional analogical projection analogy analogy attribute chunk closure law cluster agglomerative coding rule constraint complexity measure composition parse rule concatenation concrete transformation context factors continuity law copycat creative analogy data analysis data entry data system data table data visualization decided attribute domain regularity domain relation domain structure dominance ordering effectiveness encoding hypothesis index euclidean transformation extended string algebra computational model expression information complexity final code structure parse rule gestalt gestalt algebra gestalt law goodness hierarchical set homomorphism information load insert function instantiation integrality interval attribute isa form isomorphism iteration dimensional dimensional layout measurement scale measurement theory minimum code nested segmentation attribute nominal attribute non parameterized transformation non spatial attribute ordinal attribute rotate transformation parameterized transformation global local parse complexity state past experience law perception primitive code criterion proportional analogy computational model proximity parse rule proximity law parse rule ratio attribute regularity dimensional dimensional representation algebra rotate transformation structure parse rule separability index similarity law simplicity simplicity criteria spatial attribute string algebra string language expression information complexity string object structural information theory structure preserving mapping symmetry dimensional symmetry odd symmetry dimensional general symmetry parse rule strict symmetry topological attribute explicit implicit typed attribute typed visual table undecided attribute unification unit dimensional dimensional parse rule unwanted visual implicature visual attribute visual entry visual language visual system vreg language information complexity semantics syntax samenvatting visuele een van 
visuele tot het niet te hoe deze wordt 
het van visuele een wel het van en hun tot grote 
deze wordt ook wel gestalt 
het zijn dat het nu om een een verschillende kan hebben 
en van een worden andere 
het van de en dus de van visuele kan worden als een 
wij aan dat zo aan het visuele systeem 
dit van visuele de theorie sit het 
de van sit dat het visuele systeem de gestalt van een andere van dat 
sit de van van en van visuele 
een gestalt van een dan een andere gestalt van de meer dan de 
samenvatting om de van te een 
een gestalt dan een andere gestalt de van de dan die van de 
het model van sit 
dit model wordt een een 
de dat de van het visuele de worden 
deze wordt en van deze 
een kan op verschillende worden 
elke een van de en een gestalt van het visuele 
de gestalt van het visuele wordt door de van deze te 
de die de de gestalt van dat 
zien dat dit model van sit niet om de van een klasse van visuele te 
wordt een model de visuele van deze klasse kunnen worden 
dit model worden visuele van visuele en 
de van visuele worden dan van van de visuele 
een van wordt als deze kan worden door het van een op een van de van die 
de voor de zijn 
om de van visuele te kunnen een 
deze wordt het engels visual regularity language vreg 
de en de van vreg worden 
voor de van deze wordt een 
deze door de van sit 
wordt een de gestalt van visuele kan worden 
dit wordt een door een samenvatting ing van visuele 
deze wordt dan door een de van vreg kunnen worden 
voor een kunnen verschillende worden 
de wordt dan om de en de gestalt van het visuele te kunnen 
zien dat de van dit model de grote van het 
de van de van visuele 
met visuele het van visuele voor een de van andere visuele kunnen de van een 
de rol van visuele wordt aan de hand van een context de context van 
deze context vier visuele de tot het een tot het en het tot het 
zien dat de van deze en de context kunnen zijn 
de wordt door een tussen de van de visuele te eisen 
tussen kunnen verschillende 
de van door het op deze toe te 
de context van de worden de van visuele als de een algebra 
de methode wordt aan hand van verschillende 
wordt een visuele een rol 
deze worden visuele om te 
het van deze de die de gestalt van visuele andere visuele die en van zijn worden om uit het uit te 
deze visuele tot stand op basis van van visuele 
een en een samenvatting zijn met tot het hun met tot het van de tussen deze kan worden om een uit het dan warmer dan uit te 
op verschillende kan worden zijn niet alle 
wij dat de van aan de van visuele 
wij een uit het worden visuele die hebben 
op dit een model voor 
dit model worden als visuele als 
het wordt door een tussen deze systemen te eisen 
dit wordt met een en van het 
worden open en en 
titles illc dissertation series illc ds paul dekker ups downs dynamic semantics illc ds harry buhrman resource bounded reductions illc ds efficient metamathematics illc ds maarten de rijke extending modal logic illc ds herman hendriks studied flexibility illc ds john tromp aspects algorithms complexity illc ds harold schellinx noble art linear decorating illc ds jan willem generating uniform user interfaces interactive programming environments illc ds johanna process theory equation solving illc ds jan calculi constructive communication study dynamics partial states illc ds arie van deursen executable language definitions case studies origin tracking techniques illc ds domenico chapters bounded arithmetic provability logic illc ds yu 
adventures algebras illc ds makoto kanazawa learnable classes categorial grammars illc ds wan fokkink clocks trees stars process theory illc ds huang logics agents bounded rationality illc ds jacob modular algebraic protocol specification illc ds investigating bounded contraction illc ds maarten marx algebraic relativization arrow logic illc ds wang study formal semantics pictures illc ds frank tip generation program analysis tools illc ds jos van verification techniques elementary data types retransmission protocols illc ds transformation analysis constraint logic programs illc ds frames labels 
modal analysis categorial inference illc ds tools psf illc ds studies dynamic logic illc ds meyer viol logic 
investigation reasoning instances illc ds taming logics illc ds marianne meta logics logic programming illc ds bod enriching linguistics statistics performance models natural language illc ds computational pitfalls tractable grammatical formalisms illc ds sophie fischer solution sets local search problems illc ds michiel contexts metaphor illc ds willem logical investigations dynamic semantics illc ds erik aarts investigations logic language computation illc ds modal quantifiers illc ds lex hendriks computations propositional logic illc ds angelo montanari metric layered temporal logic time granularity illc ds martin van den berg aspects internal structure discourse dynamics nominal anaphora illc ds jeroen bruggeman formalizing organizational ecology illc ds ronald cramer modular design secure practical cryptographic protocols illc ds common sense time special relativity illc ds arthur logic 
inquiries justification deduction illc ds seeking explanations abduction logic philosophy science artificial intelligence illc ds harry stein fiber fabric inquiry wittgenstein views rule linguistic illc ds de mass plural quantification 
case french des du np 
illc ds computability measure illc ds approach truth illc ds peter grunwald minimum description length principle reasoning uncertainty illc ds agostino modal logic non founded set theory translation bisimulation interpolation illc ds mehdi dastani languages perception 
