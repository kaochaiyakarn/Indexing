conceptual data modeling categorical perspective ter hofstede department information systems university nijmegen toernooiveld nl ed nijmegen netherlands cs kun nl published ter hofstede 
conceptual data modeling categorical perspective 
technical report csi computing science institute university nijmegen nijmegen netherlands december 
successful information systems development conceptual data modeling essential 
nowadays techniques conceptual data modeling exist 
depth comparisons concepts techniques difficult mathematical formalizations techniques exist different 
need unifying formal framework providing sufficiently high level abstraction 
category theory purpose addressed 
known conceptual data modeling concepts relationship types generalization specialization collection types constraint types total role constraint uniqueness constraint discussed categorical point view 
important advantage framework configurable semantics 
features null values uncertainty temporal behavior added selecting appropriate instance categories 
addition features usually requires complete redesign formalization traditional set approaches semantics 
keywords conceptual data modeling category theory meta modeling er ifo niam classification ams 
cr conceptual data modeling imperative successful information systems development 
currently different conceptual data modeling techniques exist see hk pm 
examples er che variants functional modeling techniques fdm shi called object role modeling techniques niam nh 
complex application domains meta modeling hypermedia cad cam led advanced modeling concepts various forms extended er see egh ifo ah object role modeling extensions form ho psm hw 
plethora techniques reflects general situation field information systems development 
af situation described term methodology jungle 
bub estimated past years hundreds thousands information system development methods introduced 
organizations research groups defined methods 
hardly formal syntax formal semantics 
discussion numerous examples pictures popular style definition new concepts behavior 
led fuzzy artificial concepts information systems development methods 
extent observation true field conceptual data modeling 
depth comparisons concepts various techniques complicated fact techniques involved formal semantics completely different formalizations 
unifying framework conceptual data modeling techniques imperative 
framework formal order avoid ambiguities offer sufficiently high level abstraction order concentrate meaning concepts representational aspects sufficiently expressive 
goal define unifying framework conceptual data modeling techniques 
framework clarify precise meaning fundamental data modeling concepts offer sufficient level abstraction able concentrate meaning avoid distractions particular mathematical representations sense known conceptualization principle gri applied mathematical formalizations 
requirements suggest category theory see bw excellent candidate 
category theory provides sound formal basis abstracts representational aspects 
framework embedded category theory 
conceptual data modeling techniques formal foundation framework described may may suggest natural generalizations expose similarities seemingly different concepts 
interesting application category theory opportunity consider different interpretations modeling technique considering different categories semantic target domains 
example wants study null values relationship types particular data modeling technique natural consider category sets partial functions target category 
partial functions allows certain components relation undefined 
sense approach outlined general approaches described tui bsw specific types categories topoi possible target categories 
idea configurable semantics essential feature unifying framework 
addition new dimension null values uncertainty time existing conceptual data modeling technique implies complete redesign existing formalization 
case formalization involved technique terms framework addition imply choice appropriate target category 
organized follows 
section contains brief category theory historical background 
section describes essential data modeling concepts relationship types generalization specialization collection types category theoretic point view 
section important constraint types total role constraint uniqueness constraint categorical semantics 
section presents identifies topics research 
category theory section contains definition categorical constructs notations needed rest order self contained possible 
depth treatment category theory reader referred bw 
background brief history origin category theory mcl eilenberg mac lane created categories way relating systems algebraic structures systems topological spaces algebraic topology 
spread applications led general theory tool handling structures means defining 
grothendieck students solved classical problems geometry number theory new structures including topoi constructed sets categorical methods 
lawvere began give purely categorical definitions new old structures developed styles categorical foundations mathematics 
led new applications notably logic computer science 
category theory relatively young branch mathematics designed describe various structural concepts different mathematical fields uniform way 
category theory offers number concepts theorems concepts form abstraction concrete concepts diverse branches mathematics 
pointed hoare hoa category theory quite general branch pure mathematics 
seventies eighties category theory way computer science 
applications category theory diverse fields automata systems theory formal specifications data types type theory domain theory constructive algorithmics 
pointed gog category theory provide help ffl formulating definitions theories 
computing science difficult formulate concepts results give proof 
stated ahs category theory provides language convenient symbolism allows visualization quite complex facts means diagrams 
ffl carrying proofs 
basic concepts correctly formulated categorical language proofs just happen step natural thing try works 
ffl discovering exploiting relations fields 
sufficiently formulations reveal surprising connections 
ffl formulating conjectures research directions 
connections fields suggest new questions field 
ffl unification 
computing science fragmented different having different schools 
kind conceptual unification category theory provide badly needed 
ffl dealing abstraction representation independence 
computing science viewpoints useful need achieve independence overwhelmingly complex details things represented implemented 
item particularly relevant context 
category theory allows study essence certain concepts focuses properties mathematical structures representation 
illustrate point consider example possible definitions ordered pair known wiener kuratowski definition ordered pair ha bi fa fa definition derive element ordered pair involved second element 
assuming deal sets natural numbers definition property ha bi clearly definitions definition ordered pair encompass essence 
clear 
speak implementations ordered pairs 
definitions prescribe particular representations focus underlying essence 
precisely kind definition category theorists 
say category theory applies conceptualization principle mathematical formalizations 
despite popularity category theory fields computing science applications field information systems literature 
changing 
categorical formalizations aspects object orientation see es fsms css object oriented data models see sie tui er see djm relational model see ip bsw proposed 
categorical framework axiomatization conceptual modeling concepts described notion institution 
tui remarked uniformity category theory provides basis interesting generalizations context data modeling offers insight known operators allows definition new operators far trivial formalisms 
basics section presents definitions basic concepts category theory far important rest 
definitions adapted bw 
directed multigraph directed graph may multiple edges direction nodes 
definition directed multigraph consists set nodes set edges source target edge application functions source target respectively 
notation implies edge source target definition defines category special kind multigraph 
definition category directed multigraph nodes called objects edges called arrows 
pair arrows associated arrow ffi composition furthermore ffi ffi ffi ffi side defined 
object arrow id identity arrow 
ffi id id ffi gf id bc oo id oo simple example category simple example category shown 
example assumptions meaning objects arrows 
category choice composites forced ffi id id ffi category theory customary omit identity arrows drawings categories serve particular purpose 
adopt convention rest 
objects arrows category may concrete interpretation 
example objects may mathematical structures sets partially ordered sets graphs trees arrows denote functions relations paths graph concrete example category context information systems consider set instantiations data base possible updates instantiations 
instantiations may serve objects updates arrows corresponding category 
object identity arrow considers neutral update update change instantiation normal update 
easily verify constitutes category 
arrow composition associative update composition associative 
neutral update serves neutral element respect arrow composition update composed neutral update simply yields update 
context set oriented categories important 
elementary frequently category category set objects sets arrows total functions 
objects set necessarily finite 
category objects finite sets arrows total functions called finset 
category concerns sets partial functions category rel sets objects binary relations arrows 
arrows special properties 
consider important kinds arrows monomorphisms epimorphisms isomorphisms definition arrow monomorphism object category arrows ffi ffi gf ed ffix bc ffiy illustration definition monomorphism illustrates definition monomorphism 
monomorphism category set captures idea injective function 
category monomorphism describes total injective function 
definition arrow epimorphism object category arrows ffi ffi illustrates definition epimorphism 
category set epimorphism corresponds surjective function 
epimorphism monomorphism dual category dual category category denoted op objects arrows arrows inverted arrow op arrow op result composition arrows dual category defined inverted arrows 
concept duality category theory important reduces proof obligations dual theorem theorem 
oo oo ed gf fflffl bc oo oo illustration definition epimorphism category theoretic equivalent set theoretic concept bijective function called isomorphism 
mathematical context isomorphism means indistinguishable form 
remarked rb isomorphisms important category theory arrow theoretic descriptions usually determine object isomorphism 
isomorphisms degree sameness wish consider categories 
definition arrow said isomorphism arrow exists ffi id ffi id arrow called inverse arrow vice versa 
pair arrows exists objects isomorphic denoted identity arrows trivial isomorphisms 
objects special properties 
definition object category called terminal object exactly arrow object terminal objects denoted 
dual notion object category unique arrow object including called initial object denoted 
terminal initial objects isomorphic usually speaks terminal initial object certain category 
initial object set empty set 
terminal objects set singleton sets 
category rel empty set initial terminal 
diagrams categorical definitions proofs employ diagrams 
remarked quite complex facts visualized diagrams 
definition defines diagram definition graphs 
diagram shape homomorphism graphs 
called shape graph diagram example taken bw illustrates subtleties involving concept diagram 
example graph objects arrows diagram formally defined shape graph homomorphism diagram just shape goes goes diagram different shape graph diagrams considered 
oo formally corresponds diagram shape graph defined oo notion commutative diagram plays central role category theory 
categorical proofs definitions diagrams prove require commute 
commutative diagrams way expressing equations 
definition diagram said commute path nodes determines composition arrow 
example diagram commutes composite ffi products coproducts disjoint union number sets elements originating different sets distinguished 
disjoint union sets defined ways 
possible definition disjoint union sets fha ag bg canonical injections ha hb 
categorical definition coproduct referred sum generalizes definition 
particular prescribe representation 
definition coproduct objects en category consists object arrows arrows unique arrow denoted hhf gii diagram commutes oo hhf gii oo gg definition coproduct straightforwardly generalized applicable number objects category 
coproducts defined arrows 
category set coproduct arrows function function applied element disjoint union yields depending originates respectively 
definition coproduct arrows arrow diagram commutes fflffl fflffl fflffl oo sums category sets special properties categories 
property sums set disjoint categorical formalization notion refer bw 
disjoint sum coproduct arrows monomorphisms 
category disjoint sums monomorphisms definition arrow iff exists isomorphic coproduct arrows 
case complement object frequently denoted gamma dual notion coproduct product category set product corresponds notion cartesian product associated projection functions 
definition product objects category consists object theta arrows theta theta arrows unique arrow denoted hhf gii theta diagram commutes theta oo hhf gii coproducts definition straightforwardly extended arrows 
definition product arrows arrow theta theta theta diagram commutes fflffl theta fflffl thetag oo fflffl theta oo limits colimits limits colimits dual notions 
concepts general category theory 
limit categorical version concept equationally defined subset product 
product special kind limit 
colimit categorical version quotient sum equivalence relation 
coproduct special kind colimit 
definition colimit general notion limit important context 
definition graph category 
diagram shape cocone base object fl apex family fff arrows indexed nodes ff fl node arrow ff component cocone cocone written fff fl simply ff fl cocone commutative arrow diagram commutes 
fl ff aa ff ff fl ff fl cocones arrow second arrow fl fl node diagram commutes 
fl fl ff ff commutative cocone diagram called universal unique arrow commutative cocone diagram 
universal cocone exists called colimit diagram data modeling type constructors section number important conceptual data modeling concepts category theoretic foundation 
necessary define uniform syntax conceptual data models general possible 
section conceptual data models defined means type graphs semantics data model set possible populations instantiations structure 
populations formalized notion type models defined section 
definition type models various data modeling constructs category theoretic definition 
constructs defined terms restrictions type models 
type graphs data models represented type graphs see sie tui 
various object types data model correspond nodes graph various constructions discerned labeling arrows 
relationship types example correspond nodes 
object type participating role relationship type target arrow labeled role source relationship type 
object type may participate roles relationship type type graph multigraph 
definition type graph directed multigraph label set spec gen elt role clt cycles consisting solely subtype edges edges label spec gen bijective function clt edges label clt role edges label elt role related edges identical sources 
function type yields label edge 
edge labeled role node node indicates relationship type plays role 
labeled spec specialization labeled gen generalization possibly object types 
edge labeled clt role edge labeled elt role clt collection type element type definition type graph liberal cyclic inheritance structures obviously excluded 
definition allows node collection type notion explained depth section relationship type binary relationship type subtype ternary relationship type collection type element types excluding peculiarities data models turns unnecessary theoretical point view possible give data models formal semantics 
restrictions cyclic inheritance structures imposed 
example data models represented type graphs consider shows type graph niam data model 
object types niam represented circles roles boxes arrows circles represent subtype relations complete overview graphical conventions niam refer nh 
writing capability recorded recorded written written member member band song person band membership death instrumentation composer musician instrument plays played dead comprises niam data model type models semantics data model set possible instantiations referred populations approach population defined model type graph category 
model graph homomorphism graph category interpreted graph 
death fflffl role role fflffl role song oo role fflffl role composer spec person oo role role band musician oo spec instrumentation oo role fflffl role oo role role instrument type graph schema definition category type model type graph model referred instance category model 
type model maps object types type graph objects instance category edges arrows category 
avoid notational clutter model homomorphism omitted clear context 
example product object types written theta theta 
definition implies semantics data model depends instance category chosen 
categories provide meaningful semantics data models 
instance categories required members class categories fund 
categories class fulfill number requirements 
firstly allow certain categorical constructions coproducts defined 
secondly certain special categorical properties coproducts disjoint thirdly category finset consisting finite sets total functions act bottom element fund member fund able represent population representable finset 
requirements discussed section 
examples categories fund shown 
label arrow denotes feature exists category target arrow category source arrow 
example category functions total contrary category set 
shown section category considered interested study null values relationship types 
categories ffl category objects sets arrows total relations 
ffl category bag objects bags multisets arrows total functions 
ffl category poset objects partially ordered sets arrows monotonous order preserving functions 
belief disbelief rel finset set infinity bag partiality poset order multiple images occurrences multiple partiality multiple images class categories fund ffl category objects fuzzy sets arrows special total functions sets 
fuzzy set pair hs oei set oe total function assigning element degree membership 
arrow hs oei ht function oe ffi specific constructions may impose extra requirements type models 
requirements discussed rest section summarized section 
relationship types central concepts conceptual data modeling concept relationship type 
relationship type represents association object types may ary data modeling techniques play role relationship types 
yourdon refers relationship types associative object type indicators niam relationship types participating relationship types called objectified fact types relationship type consists number roles capturing way object types participate relationship type 
past relationship types formalized viewing subsets cartesian product 
commonly referred tuple oriented approach 
example consider 
population relationship type represented tuple oriented approach pop fha ha ig simple er schema disadvantages tuple oriented approach obvious representation instances overly specific 
instances relationship type considered elements product pop theta pop pop theta pop 
cartesian product imposes ordering various parts relation 
consequently algebraic operators important properties commutativity associativity 
observation led mapping oriented approach mai relationship instances treated functions involved roles values 
approach sample population represented pop ffp 

fp 

gg clearly approach suffer drawbacks tuple oriented approach 
ordering imposed time various parts relation remain distinguishable 
oo role role type graph may argue mapping oriented approach imposes unnecessary restrictions 
instances represented functions 
isn sufficient access various parts 
categorical approach pursues line thought 
actual representation relationship instances irrelevant components available access functions 
example consider interpretation sample population category finset 
type graph schema shown 
category theoretically population corresponds mapping type graph instance category 
sample population represented note alternatives ff 

ff 

approach relationship instances identity functions applied retrieve respective components 
note approach possible different relationship instances consist exactly components 
difference situation key specified relationship type situation key specified niam cases equivalent instances relationship types uniquely determined components 
apart finset possible choose instance categories 
remarked category allows certain components relationship instances undefined ff 
ff 

population relationship instance corresponding object playing role possible choice instance category category rel 
rel components relationship instances correspond sets roles mapped relations 
relationship instance may related objects components 
sample population ff 

ff 


subtype relationships conceptual data modeling techniques offer concepts expressing subtype relations 
subtype relations capture inheritance properties 
literature types inheritance relations exist terminology far standard 
section important types inheritance relations considered specialization generalization 
conceptual data modeling techniques contain relations probably different name 
concepts specialization generalization correspond large extent specialization generalization defined ifo ah 
specialization specialization specific facts recorded specific instances object type 
specialized object type inherits properties supertype may additional properties 
specialization corresponds notion subtyping niam 
example specialization consider ifo schema adapted ah 
schema boxes represent concrete types diamonds represent types circles represent subtypes 
double arrows denote specialization relations 
diagram student subtype person object type teaching assistant subtype student employee subtype hierarchy created express certain types certain facts recorded employees salary relevant 
remarked properties inherited downward employees name persons 
set theoretic terms general formalization subtype relation treat injective function 
general requiring pop pop case subtype instances may different representation object types particularly object oriented data models 
category theoretically subtype relation correspond monomorphism recall category set name name person course course salary dept department student employee teaching assistant example subtype hierarchy ifo monomorphism corresponds injective function 
sufficient adequate formalization specialization relations 
consider example partial population schema pop person pop student fst pop employee fem pop teaching assistant fta subtype relations see fta 
em fta 
st fem 
fst 
sample population instance category set instance ta object type teaching assistant corresponds instances person richards jones clearly undesirable 
avoid problems subtype diagrams diagrams consisting solely subtype edges required commute 
terms subtype diagram imply function composition identical function composition ta ta 
student employee person spec spec spec spec ffl em ta ffl ffl st ffl ffl richards teaching assistant jones non commutative diagram subtype diagram required commute subtypes inherit properties supertypes unique way 
example teaching assistant inherits name supertype person 
generalization generalization mechanism allows creation new object types uniting existing object types 
contrary name suggests generalization inverse specialization 
specialization generalization originate different axioms set theory hw 
population generalized object type union populations participating object types referred specifiers example generalization consider 
schema graphical conventions psm hw dashed lines represent generalization relations 
psm schema models construction simple formulas formula may variable constructed function simpler formulas 
example demonstrates generalization specification recursive types 
generalization useful identical properties relevant different existing types properties related generalization types 
application coproducts yields possible categorical formalization generalization 
generalized object type mapped coproduct instance category generalization arrows correspond canonical injections 
course coproduct formula variable var name argument argument example generalization psm represents disjoint sum set formalization implies specifiers disjoint 
data modeling techniques including psm necessarily true 
problem solved general notion colimit 
solution starts observation collection instances generalized type set specifiers completely determined subtype relationships subtypes elements definitions give formal description diagram contains relevant subtype relations subtypes elements definition graph set nodes dominated equal subgraph defined follows edges edges occur directed path ends node nodes nodes occur edges 
definition diagram set nodes dominated dominated equal functionally restricted instance universe represents collection instances set object types model instance universe generalization set specifiers 
definition instance universe determined set object types type model denoted apex universal cocone base subtype diagram dominated lh proven category disjoint sums colimit diagram consisting monomorphisms true subtype diagram definition exists 
associated arrows monomorphisms 
result important categories disjoint sums colimits rel 
requiring instance categories colimits required finite sums exist disjoint restrictive 
pointed result definition subtype diagrams commutativity requirement imposed diagrams applies generalization 
collection types collection type object type instances correspond nonempty sets object type referred element type 
sets identical contain elements instances collection type identified elements need external identifications 
collection types correspond grouping ifo association ecr egh grouping classes sdm hm power types psm 
code name name name convoy ship example collection type psm simple example application collection types consider schema shows psm schema called convoy problem hm 
schema object type convoy collection type element type ship 
ships identified code code identified constituent ships 
alternatives categorical formalization collection types 
alternative require instance category special kind category called topos 
approach serious disadvantages 
firstly topos complex type category easily understood 
secondly seriously interesting categories topoi 
topoi imply extra restrictive requirement class instance categories fund 
alternative sketches order allow general specification algebraic types bw 
unfortunately turns solution imposes restrictions fund 
approach adopted suffer problems outlined previous paragraph alternative treatment collection types hw 
pointed collection types superfluous new type constraint uniqueness constraint new identification scheme 
example consider 
uniqueness constraint schema expresses may associated role set ships 
constraint captures extensionality property sets 
object type convoy may identified role object type ship 
illustrate uniqueness constraint consider schema 
sample population schema violates uniqueness constraint related role correspond set fb contains participation convoy ship eu translation convoy problem eu population violating uniqueness constraint solution categorical formalization uniqueness constraint follows observation constraint violated non trivial permutation set instances exists application population involved relationship type yields population 
words changing members sets received identity 
lead loss information obviously sets identical representations 
sample population interchange instance lead change population relationship type gf bc oo oo clt role gf bc oo elt role solution collection types category theoretically requirement states uniqueness constraint schema violated arrows mapped arrows instance category non trivial isomorphisms isomorphisms equal identity objects corresponding collection type involved relationship type respectively equalities hold see ffi ffi ffi edges said fulfill extensionality property obviously definition impose requirement instance category involved 
example application definition consider sample population 
suppose instance category involved category set 
choices permutations satisfy imposed requirements non trivial isomorphisms satisfy equalities fa 

ff 



valid type models full definition valid type model type graph definition type model type graph category valid type model iff 
edge type spec monomorphism 

edge type gen ff source equal subtype diagram dominated specifiers target 

subtype diagram commutes 

edges clt fulfill extensionality property 
example type graph describes simple conceptual data model 
oo role role oo clt role elt role oo spec oo role type model type graph set 
value set elements object equal elements occur corresponding arrows omitted 
oo ha ha ha hf hf hf oo hd hd oo hc hc oo hc hc hc type model valid type model 
specialization arrow injective function set injective functions monomorphisms 
obviously subtype diagram commutes contains specialization arrow 
collection type instance represents set fc difficult see fulfill extensionality property 
valid instance categories important advantages categorical approach semantics conceptual data modeling techniques different instance categories 
requirements instance categories satisfy listed illustrations 
instance categories support constructions previous sections 
means member fund properties ffl finite sums products exist 
ffl sums disjoint 
ffl initial object exist 
requirement redundant initial object sum zero objects 
set requirements modest implies large set possible instance categories 
categories trivial interesting instance categories example category object arrow 
classical formalizations conceptual data modeling techniques correspond formalization results choice finset instance category 
reasonable require instance categories expressive power 
intuitively model finset counterpart instance categories 
formalization requirement useful define homomorphism type models 
definition type model homomorphism type models functor graph homomorphism preserving identities composition diagram commutes fflffl valid type models homomorphisms form category 
definition type model homomorphism inspired definition valid instance category 
definition category valid instance category iff finite products sums exist sums disjoint functor finset exists finset holds ffi ffi categories valid instance categories finset set rel 
description various category theory constructs proofs categories lh 
example object oriented databases kl zm objects multivalued set valued attributes 
means value attribute possibly empty set attribute values 
models category rel model behavior 
example models model uncertainties 
object type equipped function oe describes probability element member object type 
arrows total functions arrow hold oe oe 
probability individual element object type greater equal probability individual element subtypes object type 
intuitively sensible individual element object type certainly element supertypes type 
addition probabilities instances relationship types probabilities parts 
considers example relationship type band membership data model finds probability person member band probability person exists probability band exists 
models allow uncertainty conceptual data models natural way 
constraints schema associated constraints 
constraint restricts set valid type models schema 
important kinds constraints frequently conceptual data modeling techniques total role constraint uniqueness constraint 
constraint types large extent cardinality constraints er 
general relationship type may involved 
semantics constraint types described sections 
total role constraint intuitive semantics total role constraint instances set object types participate set roles 
total role constraint type graph determined set edges simplest example total role constraint consists single edge total role constraint means elements target participate model category set implies surjective function 
generally require epimorphism 
example total role constraint role name member schema implies person member band 
slightly complicated example fe cases distinguished depending edges target 
case arrows target target target 
intuitive meaning constraint element participate edges 
example context schema total role constraint roles names member written implies person member band written song 
semantics type constraint construct sum arrow source source intuitively speaking element target disjoint sum element represented twice 
arrow needed maps element corresponding element achieved follows 
definition coproduct follows injection arrows unique arrow hhid id ii diagram commutes 
id oo hhid id ii oo ff id meaning total role constraint hhid id ii ffi epimorphism 
source source epi fflffl hhid id ii target target possible subtype types common supertype 
case inject elements subtype supertype follow procedure previous case 
note supertype equal target example example type total role constraint consider schema 
total role constraint roles names receives earns salary imply person student employee owns scholarship amount money person employee student earns salary receives sample schema scholarship earns salary 
clearly different situation student owns scholarship employee earns salary 
students may different representations employees necessary colimit construction identify identical persons 
full definition semantics total role constraint 
definition valid type model total role constraint involved type graph definition instance universe implies arrow target exists 
target coproduct determine unique arrow theta target satisfies total role constraint iff theta ffi epimorphism 
source epi target fflffl theta example example take total role constraint fp ug 
fa cg sum function ff 





theta fa 




composition theta ffi ff 





epimorphism set surjective function 
total role constraint fp ug satisfied model 
total role constraint fpg satisfied model range function total role constraint fqg total role constraint seen generalization types constraints conceptual data modeling techniques collection cover constraint subtype cover constraint 
collection cover constraint collection type specifies instances element type participate instances 
subtype cover constraint specifies instances object type instances set subtypes object type 
uniqueness constraint uniqueness constraint closely related concept key relation 
uniqueness constraint type graph determined set edges trivial case consists single edge intuitive semantics element target determines element source 
model category set implies injective function 
generally monomorphism 
example uniqueness constraint role name written schema implies song written person 
interesting case fe source source case intuitive semantics combination element target element target determines element source 
example consider ternary relationship person duration project capturing hours certain person worked certain project 
uniqueness constraint roles attached object types person project expresses person project combination associated duration 
formally start constructing product arrow theta theta target theta target 
definition product follows projection arrows theta theta unique arrow hhid id ii theta diagram commutes 
theta oo aa id oo hhid id ii id meaning uniqueness constraint theta id ii monomorphism 
hhid id ii mono theta target theta target case fe source source simple equivalent combination uniqueness constraints fe fe full definition semantics uniqueness constraint 
definition valid type model uniqueness constraint involved type graph arrow source 
definition product follows determine unique arrow delta source 
satisfies uniqueness constraint iff ffi delta monomorphism 
delta mono source fflffl target remarked section relationship types behave default multisets tuple represented multiple times 
undesirable avoided adding uniqueness constraint roles relationship type 
example take instance example uniqueness constraint fp qg 
intuitively speaking constraint satisfied combination determines element arrow delta theta ff 
hf 
hf 
hf ig 
product theta theta theta hf 
ha hf 
ha hf 
ha hf 
ha hf 
ha hf 
ha hf 
ha hf 
ha hf 
ha composition theta ffi delta ff 
ha 
ha 
ha ig monomorphism injective function 
uniqueness constraint fp qg satisfied 
separate uniqueness constraints fpg fqg satisfied monomorphisms 
example models give way handle missing values 
suppose persons identified names 
different persons identical names receive additional number distinguish 
person yy name nr string integer arrow nr partial function persons unique name number 
suppose want express person uniquely identified combination name number 
achieved putting uniqueness constraint fname nrg 
person hhid person id person ii mono person theta person fflffl name string theta integer arrow hhid person id person ii fp 
hp pi 
arrow name theta nr interesting maps tuple hp pi person nr undefined tuple uniqueness constraint holds name theta nr ffi hhid person id person ii monomorphism total injective function 
implies persons name different numbers requirement tried express 
conceptual data modeling techniques niam allow uniqueness constraints relationship type 
uniqueness constraint expresses key derived relationship type join relationship types involved 
semantics type uniqueness constraint completely determined way join condition computed 
joins specified categorically pullbacks consider uniqueness constraints explicitly 
remarked categories pullbacks rel 
words type uniqueness constraint leads restriction fund 
research presents unifying framework conceptual data modeling techniques 
framework category theory due formality high level abstraction 
pointed mathematical formalizations impose representational choices focus essence concepts 
framework contains important concepts existing data modeling techniques seen generalization techniques 
framework compare different conceptual modeling techniques 
limitations imposed type graphs restrictions exist techniques lifted 
example ternary relationship type may subtype binary relationship type categorical semantics requires subtype instances corresponding supertype instances 
important property framework configurable semantics 
features null values uncertainty temporal behavior added models selecting appropriate instance category 
addition features traditional set logicbased semantics usually requires complete redesign formalization 
property useful experimenting features traditional data modeling techniques mapping techniques framework automatically defines semantics features 
compared approaches category theory tui bsw current framework simpler uses basic categorical notions 
framework easier understand 
furthermore range possible instance categories wider usually limited topoi cartesian closed categories 
model described similar object oriented data models 
subtypes approach analogous subclasses 
attributes modeled roles 
attribute inheritance incorporated explicitly type model adding attribute defined type subtypes 
value subtype attribute arrow type model composition original attribute arrow subtype arrow subtype supertype 
resulting model similar tui 
extensions current framework topic current research 
possible define relational database operators current framework 
appears straightforward incorporate types constraints exclusion equality subset constraint 
authors denis verhoef comments earlier version 
af fitzgerald 
information systems development methodologies techniques tools 
blackwell scientific publications oxford united kingdom 
ah abiteboul hull 
ifo formal semantic database model 
acm transactions database systems december 
ahs ad amek strecker 
concrete categories 
pure applied mathematics 
john wiley sons new york new york 
bsw white 
categorical approach database semantics 
mathematical structures computer science 
bub bubenko 
information system methodologies research view 
olle sol stuart editors information systems design methodologies improving practice pages 
north holland amsterdam netherlands 
bw barr wells 
category theory computing science 
prentice hall englewood cliffs new jersey 
che chen 
entity relationship model unified view data 
acm transactions database systems march 
css costa sernadas sernadas 
object inheritance subtyping 
acta informatica january 
djm johnson monro 
illustrated mathematical foundation era 
rattray clark editors unified computation laboratory pages oxford university press 
institute mathematics applications 
egh engels gogolla richter saake 
ehrich 
conceptual modelling database applications extended er model 
data knowledge engineering 
es 
ehrich sernadas 
object concepts constructions 
saake sernadas editors proceedings core workshop pages braunschweig germany 
technische universitat braunschweig 
fsms fiadeiro sernadas maibaum saake 
proof theoretic semantics object oriented specification constructs 
meersman kent khosla editors object oriented databases analysis design construction pages amsterdam netherlands 
north holland 
gog goguen 
categorical manifesto 
mathematical structures computer science 
gri van editor 
concepts terminology conceptual schema information base 
publ 
nr 
iso tc sc 
hk hull king 
semantic database modelling survey applications research issues 
acm computing surveys september 
hm hammer mcleod 
database description sdm semantic database model 
acm transactions database systems september 
ho halpin orlowska 
fact oriented modelling data analysis 
journal information systems april 
hoa hoare 
notes approach category theory computer scientists 
broy editor constructive methods computing science volume nato advanced science institute series pages 
springer verlag 
ter hofstede proper th van der weide 
formal definition conceptual language description manipulation information models 
information systems 
hw ter hofstede th van der weide 
expressiveness conceptual data modelling 
data knowledge engineering february 
hw ter hofstede th van der weide 
fact orientation complex object role modelling techniques 
halpin meersman editors proceedings international conference object role modelling orm pages australia july 
ip islam phoa 
category models relational databases formulation schema integration 
hagiya mitchell editors theoretical aspects computer software international symposium tacs volume lecture notes computer science pages sendai japan april 
springer verlag 
kl kim lochovsky editors 
object oriented concepts databases applications 
acm press frontier series 
addison wesley reading massachusetts 
lh ter hofstede 
category theory approach conceptual data modeling 
technical report csi computing science institute university nijmegen nijmegen netherlands december 
mai maier 
theory relational databases 
computer science press rockville maryland 
mcl 
elementary categories elementary toposes volume oxford logic guides 
clarendon press oxford united kingdom 
nh nijssen halpin 
conceptual schema relational database design fact oriented approach 
prentice hall sydney australia 
pm 
semantic data models 
acm computing surveys september 
rb rydeheard burstall 
computational category theory 
prentice hall englewood cliffs new jersey 
sernadas fiadeiro meersman sernadas 
proof theoretic conceptual modelling niam case study 
editors information system concepts depth analysis pages amsterdam netherlands 
north holland ifip 
shi shipman 
functional data model data language 
acm transactions database systems march 
sie siebes 
complex objects 
phd thesis university twente enschede netherlands 
tui 
data modeling categorical perspective 
phd thesis university antwerpen antwerpen belgium 
yang fry 
logical design methodology relational databases extended entity relationship model 
acm computing surveys 
yourdon 
modern structured analysis 
prentice hall englewood cliffs new jersey 
zm zdonik maier editors 
readings object oriented database systems 
morgan kaufmann san mateo california 
contents category theory background basics diagrams products coproducts limits colimits data modeling type constructors type graphs type models relationship types subtype relationships specialization generalization collection types valid type models valid instance categories constraints total role constraint uniqueness constraint research 
