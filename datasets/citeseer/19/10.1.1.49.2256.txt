normalised rewriting normalised completion claude march lri ura du cnrs inria inria rocquencourt bat 
bp le chesnay cedex france introduce normalised rewriting new rewrite relation 
generalises notions rewriting modulo dropping conditions example theory identity idempotency theory abelian groups theory commutative rings 
give new completion algorithm normalised rewriting 
contains instance usual ac completion algorithm wellknown buchberger algorithm computing standard bases polynomial ideals 
investigate particular case completion ground equations case prove uniform method completion modulo terminates interesting consequence obtain decidability word problem classes equational theories 
give implementation results shows efficiency normalised completion respect completion modulo ac 
equational axioms common sciences including computer science 
equations reasoning leibniz law replacing equals equals 
equational proof may equations ways 
contrast rewrite proofs restrict way rewriting founded ordering terms strategy amounts orient equations rewrite rules ordering 
transforming equational proof rewrite proof needs replacing undesirable patterns partly supported gdr programmation du cnrs esprit working group compass esprit basic research action types 
mail claude inria fr appropriate rewrite proofs 
achieve purpose key step compute called critical pairs overlapping left hand sides rules rewriting obtained term rules 
critical pairs enjoy rewrite proof may simplified oriented added new rules 
rules may simplified order obtain reduced set 
process called knuth bendix completion 
completion axioms constant state flux changes usually expressed inference rules add dynamic character establishing existence rewrite proofs 
basic assumption technique rewriting terminates input term 
set equations contains associativity commutativity axioms denoted ac assumption fulfilled 
lankford peterson stickel shown resolve difficulty building associativity commutativity ac rewriting process ac pattern matching computation ac critical pairs ac unification 
generalised arbitrary theory split part part provided unification finitary sub term ordering modulo noetherian 
technique excludes important sets axioms identity law denoted ac group theory idempotency denoted aci part set cases rewriting terminate general 
example rewriting modulo ac yields infinite derivation rule gamma 
gammax gammay computing inverse sum gamma ac gamma 
gamma gamma ac gamma gamma possible overcome difficulty constrained rewriting 
unfortunately ap proach theories mentioned rule aci yields aci aci ag abelian groups theory yields ag gammal gammal ag gammal gammal cases rewriting congruence classes terminates 
new rewriting technique called normalised rewriting assumes theory ac convergent set rules 
main idea rewriting term reduce normal form show rewrite relation generalises ac constrained rewriting allows rewrite modulo idempotency groups theory organised follows section define normalised rewriting show termination new rewrite relation checked reduction ordering compatible ac ac theory ordering exist general 
give section general scheme completion procedure instantiated completion procedure modulo arbitrary second completion procedures modulo particular groups commutative rings efficient general 
prove section particular completion procedures modulo theories terminate input set equations ground variables 
obtain alternative proof decidability word problem finitely abelian groups finitely commutative rings results fact general need generators constants case finitely groups rings 
result extended non constant generators proved ground theories modulo ac arbitrary number ac operators 
give section example normalised completion show particular interesting benchmarks normalised completion compute standard bases polynomial ideals 
summarise main results ffl equational theory possesses convergent system completion algorithm set equations computes set rules normalised rewriting decides equality modulo gamma gamma 
gamma gamma ffl equational theory set ground equations ac ac aci ac ag cr br ff decidable word problem precisely possesses normalised rewriting system 
omitted proofs results proved completely author phd thesis 
normalised rewriting section introduce new notion normalised rewriting 
recall usual notions rewriting particular modulo ac 
basic definitions recall briefly basic definitions rewriting 
notations definitions consistent survey dershowitz jouannaud 
denote short set terms signature variables denote pos fpos respectively set positions non variable positions term denote top position 
sub term term position denoted sj term obtained putting position denote substitutions greek letters soe application oe equation pair terms denoted equation valid algebra morphism 
equation consequence set equations valid algebra validates set consequences denoted equational theory equality modulo generated set equations smallest congruence containing denoted birkhoff theorem consequence may usually confuse important example associative commutative theory denoted ac 
signature contains subset fac binary symbols ac set ff 
usually ac operators infix notation 
congruences classes modulo ac represented flat terms 
representation usually preferred implementations useful representation theoretical point view example ac unification algorithms 
article consider terms flattened respect ac symbols signature 
formal complete definitions flattening rewriting flat terms 
terms equal modulo ac flat forms equivalent modulo permutation congruence denoted equivalence modulo permutation direct sub terms ac symbols 
say terms unifiable modulo theory exists substitution oe soe toe 
main results unification may survey edited kirchner 
denote complete set unifiers rewriting flat terms say rewrites position fpos denoted gamma gamma 
exists substitution oe sj loe roe sj oe oe head fac var 
way defining rewrite relation builds extended rules la peterson stickel flat rewriting need introduce extended rules greatly simplifies proof completeness completion 
adding extension rules prevents new variables essential completing set ground equations 
generalise notion overlapping rules ac symbol top overlap overlap standard way extensions overlap 
example critical pair rewritten denote cpe set critical pairs modulo corresponding generalised notion overlapping assuming contains ac 
set rules said convergent modulo ac gamma 
noetherian confluent 
definition normalised rewriting assume theory convergent set rules modulo ac 
definition ac convergent rewrite system 
denote normal form term normalised rewrite relation denoted gamma gamma gamma gamma 
defined gamma gamma 
example assume ac fx xg 
assume rewrite gamma 
gammax gammay gamma gamma gamma gamma 
gammaa gammab rewrite gamma gamma gammab normal form gamma gammab instance gamma 
see example idea normalised rewriting captures notion ac constrained rewriting 
example assume convergent rewrite system commutative rings theory gammax gamma gamma gammax gamma 
gammax gammay 
gammay gamma assume fx constants 
gamma gamma gamma 
gamma gammax rewritten normal form gamma gammax gammax reducible see case normalised rewriting captures notion polynomial reduction standard basis computation distributivity law applied rules 
termination normalised rewriting proving termination usual rewriting modulo requires ordering compatible ordering exist general 
example reduction ordering compatible idempotency shown 
interesting property new definition rewriting need reduction ordering compatible ac 
ordering defined various ways 
general notions orderings termination refer 
definitions orderings see 
assume ac reduction ordering set rules convergent modulo ac termination modulo ac proved 
proposition straightforward proposition set rules normalised rewrite relation gamma gamma gamma 
noetherian 
section trying complete set ground equations need prevent failure cases 
assume ac ordering total ground terms 
easy define ordering possible 
normalised completion give section set inference rules completing set equations normalised rewrite system 
completeness proved customary normalisation proof method 
need introduce notion normalising pairs sense replace usual notion orientation completion procedures 
normalising pairs assume convergent set rules reduction ordering gamma 

proof reduction ordering algebra proofs 
definition algebra equational proofs generated elementary proofs gamma gamma 
ac step oe gamma gamma 
equational step oe gamma gamma 
rewrite step gamma 
normalising step concatenation proofs denoted term assumed equal say proof equations resp 
rules resp 

ordering algebra equational proofs proof reduction ordering satisfies ffl monotonicity property ffl noetherian 
assume proof ordering conditions exactly ones need prove completeness theorem 
definition function maps pair terms pair theta psi theta set equations psi set rules called normalising pair ffl elementary irreducible equational proof form gamma gamma 
gamma gamma gamma 
exists smaller proof theta psi ffl psi theta theta psi psi 
inference rules normalised completion customary describe completion process set inference rules 
ac reduction ordering set equations set rules 
rule deduce computes critical pairs modulo equational theory choose arbitrarily ac important point reasons ffl may finitary respect unification 
example may contain distributivity law know unification modulo acd undecidable 
case may ac 
ffl known ac unification ac lead complete sets unifiers usually smaller ac unification 
ac unification efficient ac unification unitary theory 
definition normalised completion algorithm algorithm takes input set equations ac reduction ordering produces finite infinite sequence en rn respectively sets persisting equations set persisting rules 
say algorithm fails empty succeeds diverges sequence infinite 
fairness completeness fairness fundamental completion procedures expresses completeness search strategy 
orient fu vg theta psi deduce fu vg cp normalize fu vg fu delete fu vg ac compose fu vg fu gamma gamma 
simplify fu vg fu vg gamma gamma 
collapse fu vg fu vg gamma gamma gamma gamma 
renaming renaming inference rules normalised completion definition derivation fair persisting critical pairs computed cp completion algorithm fair sequences produces fair 
practice worth simplification rules possible 
yields sets rules inter reduced important property far uniqueness completion result concerned 
set inference rules induces set reduction rules proofs omitted space limitation 
assume proof reduction ordering rules decrease respect theorem assume normalising pair theta psi 
assume completion fair succeeds 
ac gamma gamma gamma gamma 
gamma gamma gamma gamma result proved proof normalisation method 
general normalising pair show subsection define normalising pair arbitrary result normalising position sj multi set fsg fs 
proof ordering complexity proof multi set complexities elementary subproofs defined gamma gamma 
hf fsg oe gamma gamma 
hfs fs tg oe gamma gamma 
fsg gamma 
hf fsg new minimal element elementary complexities compared lexicographic extension orderings mul second components third fourth 
proofs compared multi set extension ordering 
ordering noetherian built noetherian orderings functionals lex mul preserve foundedness 
definition theta gen set equations fpos uj irreducible equations theory convergent system theta ac fu 
wg aci voe oe ac theta ac theta aci ac fu 
wg voe oe set theta simple theories fpos lj irreducible psi gen fu vg 
proposition pair theta gen psi gen normal ising respect proof ordering defined ac convergent set rules example assume fz zg 
compute theta gen gamma gammax gammay unify modulo ac terms 
leads general unifiers 











reducible ignore 
theta gen gamma gammax gammay contains equations gammax gammax gamma gammay gamma gammay 
obtain set set forbidden instances ac constrained completion 
optimised normalising pairs simple theories normalised rewriting modulo fixed optimise definition general normalising pair 
particular rules left linear avoid ac unification 
shows definitions theta ac aci ac ac cases psi fu vg 
proposition ac aci ac ac defined mappings theta psi normalising 
optimised normalising pair commutative groups rings contains abelian groups theory optimise normalising pair 
idea equation delta delta delta un delta delta delta vm may move term side changing sign 
notion inspired 
abbreviation nt delta delta delta times definition pair obtained way delta delta delta delta delta delta ju sym gamman gamma delta delta delta gamma delta delta delta 
maximum sym undefined 
definition pair psi ag fns gammas 
gamma gammat theta ag theta ac ns sigma ns sigma ns sigma gammax sigma voe oe 
gamma 
equation considered orientable 
proposition term ordering rpo precedence gamma symbols greater gamma pair theta ag psi ag defined ag normalising 
technique improves lot standard ac completion set equations complete contains abelian groups theory 
example completion commutative rings theory modulo ag equation generated 
orientation produces rule 
see case technique includes particular cancellation 
equation generated completion gammay 
gives directly rule gammay gamma computing ac critical pair usual ac completion 
possible apply technique normalised completion modulo commutative rings theory boolean rings theory theories defining finite fields 
unfortunately convergent system fields theory conditional equation gamma 
decidability word problem classes equational theories investigate termination issues completion process 
known ac completion terminates initial set equations ground 
see result extended normalised completion interesting general results look general results true arbitrary assume ordering total ground terms initial equations ground prevents completion failure 
define notion generator set term 
extends narendran rusinowitch definition 
set symbols appear definition flat term 
generator set defined fl fug head fl fl un set equations set rules 
generator set denoted gf union generator sets members equations rules prove derivation completion process gf en rn increase steps en rn completely simplified 
proposition set equations 
assume sequence derivations starting longer normalise delete simplify compose collapse applied 
gf mul gf definition say strategy simplifies simplification rules normalise delete simplify compose collapse priority orient deduce 
condition strategy essential 
completion diverge finite 
proposition assume strategy simplifies 
completion terminate infinite infinitely rules top symbol left hand side termination proven showing inference rules orient deduce increase gf 
assuming completion terminate deduce infinitely rules left hand side built symbols terms gf 
termination completion show define total ordering case interested 
case simple theories ac aci ac ac total ac ordering narendran rusinowitch nieuwenhuis rubio condition order orient 
case abelian groups recursive path ordering total precedence form gamma multi set status operators lexicographic status totality 
case commutative rings bit complicated total ac ordering orient distributivity wrong way 
solution lexicographic extension modified associative path ordering precedence gamma total ac compatible ordering 
ordering boolean rings finite fields theories 
theorem initial set equations ground normalised completion terminates ac ac aci ac ac ag cr br ff 
consequence equational theory set ground equations previous theories normalised canonical rewriting system particular decidable word problem 
ac ac ag ag ac rrl reveal computation time number critical pairs generated commutative rings theory modulo ac ac ag implementation results commutative rings modulo ac ac ag show happens completing commutative rings theory modulo ac ac ag ag ac 
shows practical results compares ac completion systems rrl reveal 
see completion modulo ac ag efficient ac completion 
implementation optimised rrl reveal ac completion efficient completing modulo ag efficient 
example shows normalised completion optimised ac completion equations built new equations inferred faster 
orienting equation gammax ac normalised completion equation gamma theta obtain rule gamma 
ac completion need compute critical pairs obtain equation say need ac unification infer new rule ac completion 
note happens ac unification ac case moment implementation 
case ag normalised completion improvement spectacular example 
canonical rewriting system finitely generated abelian group consider abelian group gamma gamma gamma 
give set equations ag normalised completion algorithm result fb gammaa ag 
ag normalised completion system implementation takes computes critical pairs ac completion ag rrl takes computes critical pairs reveal takes computes critical pairs 
course shows crucial role 
computation standard basis polynomial ideal show example standard basis computation normalised completion 
polynomials integer coefficients computing standard basis amounts normalised completion modulo commutative rings theory 
example compute standard basis ideal gammay xy gammax give completion set equations gamma xy gamma constants precedence 
completion produce gammax xy gamma gammax xy gamma xx gamma xx xxx gammay gamma xx gammay gamma xxx xxx xxxx xx gammax xx xxx gamma gammax xxx xxxx gamma xx corresponds standard basis gamma gamma gamma gamma xg 
polynomials coefficients finite field done ff normalised completion ff presents finite field cardinal remarked computation standard basis done ac completion 
problem embedding computation standard basis polynomial ideal coefficients infinite field normalised completion chosen remains open 
interesting termination result known algorithms computing standard bases particular cases termination result 
shows various known results decidability undecidability word problem decidable undecidable sub theory ac groups ac aci abelian groups ac ac acd commutative rings finite fields boolean rings hj phi phi phi hj qs xxxxx xz gamma gamma psi au decidability word problem ground theories modulo classes equational theories defined arbitrary set ground equations 
cases word problem decidable consequence termination normalised completion result stronger ground theory normalised rewrite system 
undecidability word problem ground theories modulo associativity proved independently post markov groups theory result ground theories modulo acd result 
obtained theoretical results unification generalisation decidability results new completion algorithm generalises known completion modulo theory 
enjoys practical advantages needs ac compatible ordering compatible allows choose efficient unification algorithm allows particular cases precomputed optimised normalising pairs theta psi equations rules 
interesting property unifies knuth bendix completion extensions ac completion ac constrained completion buchberger algorithm computing standard bases 
find interesting particular theories non commutative groups 
solve problem fields theory may interesting see conditional rewrite system practical point view remains check ac aci unification really interesting implementation uses ac unification 
study known critical pair criteria applied normalised completion 
jean pierre jouannaud hubert comon useful comments preliminary version 
anantharaman 
reveal users guide 
rapport de recherche laboratoire informatique orl 
bachmair 
canonical equational proofs 
birkhauser boston 
bachmair dershowitz 
completion rewriting modulo congruence 
theoretical comput 
sci oct 
bachmair dershowitz hsiang 
orderings equational proofs 
proc 
st ieee symp 
logic computer science cambridge mass pages june 
bachmair plaisted 
termination orderings associative commutative rewriting systems 
journal symbolic computation dec 
baird peterson wilkerson 
complete sets reductions modulo associativity commutativity identity 
proc 
rd rewriting techniques applications chapel hill lncs pages 
springer verlag apr 
ben lescanne 
actual implementation procedure mechanically proves termination rewriting systems inequalities polynomial interpretations 
proc 
th int 
conf 
automated deduction oxford england lncs pages 
springer verlag july 
birkhoff 
structure algebras 
proc 
cambridge phil 
society 

simulating buchberger algorithm knuth bendix completion procedure 
book editor proc 
th rewriting techniques applications lncs como italy apr 
springerverlag 

extension associative path ordering chain associative commutative symbols 
proc 
th rewriting techniques applications montr eal lncs 
dershowitz 
termination rewriting 
journal symbolic computation feb 
dershowitz 
jouannaud 
rewrite systems 
van leeuwen editor handbook theoretical computer science volume pages 
northholland 

pour la eduction automatique dans les th 
th ese de doctorat de universit de nancy 

jouannaud kirchner 
completion set rules modulo set equations 
siam comput 

jouannaud march 
termination completion modulo associativity commutativity identity 
theoretical comput 
sci 
kapur 
algorithm computing grobner basis polynomial ideal euclidean ring 
technical report crd crd general electric newyork dec 
kapur musser narendran 
prime superpositions need considered knuthbendix procedure 
journal symbolic computation 
kapur zhang 
overview rewrite rule laboratory rrl 
proc 
rd rewriting techniques applications chapel hill lncs pages 
springer verlag 
kirchner editor 
unification 
academic press 
kirchner kirchner 
constraint equational reasoning 
proc 
th int 
symp 
symbolic algebraic computation portland oregon 
knuth bendix 
simple word problems universal algebras 
leech editor computational problems algebra pages 
pergamon press 
lankford butler 
progress report new decision algorithms finitely abelian groups 
proc 
th int 
conf 
automated deduction napa lncs 
springer verlag may 
lankford 
decision procedures simple equational theories commutative associative axioms complete sets commutative associative reductions 
research report memo atp department mathematics computer science university texas austin texas usa aug 
le 
canonical forms finitely algebras 
pitman london 
march 
ground ac completion 
book editor proc 
th rewriting techniques applications lncs como italy apr 
springer verlag 
march 
word problem acd ground theories undecidable 
international journal foundations computer science 
march 
modulo une th eorie pr ee par un syst eme convergent des probl emes du mot dans certains classes de th 
th ese de doctorat universit de france 
markov 
impossibility certain algorithms theory associative systems 
dokl 
akad 
nauk sssr 
russian english translation acad 
sci 

narendran rusinowitch 
ground associative commutative theory finite canonical system 
book editor proc 
th rewriting techniques applications lncs como italy apr 
springer verlag 
nieuwenhuis rubio 
precedence total ac compatible ordering 
kirchner editor proc 
th rewriting techniques applications montr eal lncs 
springer verlag june 

algorithmic unsolvability word problem group theory 
mat 
inst 

russian 
peterson stickel 
complete sets reductions equational theories 
acm apr 
post 
recursive unsolvability problem thue 
journal symbolic logic 

word problem isomorphism problem groups 
bulletin american mathematical society jan 
