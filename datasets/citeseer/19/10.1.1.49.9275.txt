multidimensional morphable models michael jones tomaso poggio center biol 
comp 
learning center biol 
comp 
learning mass institute tech 
mass institute tech 
cambridge ma cambridge ma ai mit edu tp ai mit edu describe flexible model representing images objects certain class known priori faces introduce new algorithm matching novel image performing image analysis 
call model multidimensional morphable model just morphable model 
morphable model learned example images called prototypes objects class 
introduce effective stochastic gradient descent algorithm automatically matches model novel image finding parameters minimize error image generated model novel image 
examples demonstrate robustness broad range applicability matching algorithm underlying morphable model 
approach provide novel solutions vision tasks including computation image correspondence object verification image synthesis image compression 
important problem computer vision model classes objects 
model created image analysis done matching model views new objects class novel image terms known model 
approaches proposed 
represent objects models represented different ways review see 
describes research done artificial intelligence center biological computational learning department brain cognitive sciences massachusetts institute technology 
research sponsored arpa onr contract onr contract national science foundation contract asc award includes funds arpa provided hpcc program muri 
tomaso poggio supported helen whitaker chair mit whitaker college 
models typically quite sophisticated difficult build hard applications image matching particular 
different approach suggested results science biological vision 
convincing psychophysical physiological evidence suggesting human visual system uses strategies flavor object representations models 
motivation explored approach object models learned prototypical images 
idea synthesizing model class objects faces cars quite attractive far clear model represented matched novel images 
papers introduced flexible model object class linear combination example images represented appropriately 
image representation key issue order linear combination images sense represented terms elements vector space 
particular adding image representations yield element space 
turns possible solution set example images pixelwise correspondence 
approach correspondences image example images obtained preprocessing phase 
correspondences computed image represented shape vector texture vector 
shape vector specifies shape example differs image 
analogously texture vector specifies texture differs texture term texture mean simply pixel intensities image 
morphable model object class linear combination example shapes textures values parameters rendered image 
morphable model generative model synthesize new images objects linear class 
analyze novel images 
provide answer terms novel algorithm matching morphable model novel image 
organized follows 
discuss related 
section explain detail model 
section describes matching algorithm 
section shows example models object classes presents experiments matching novel images 
section concludes summary discussion 
related linear class idea poggio vetter image representation pixelwise correspondence beymer see main motivation 
poggio vetter introduced idea linear combinations views define model classes objects 
inspired turn results ullman basri shashua showed linear combinations views single object may obtain views object barring self occlusion assuming orthographic projection 
poggio vetter defined linear object class set views objects cluster small linear subspace number feature points object 
showed case linear object classes rigid transformations learned exactly small set examples 
jones poggio sketched novel approach match linear models novel images visual analysis tasks including recognition 
develop approach detail show performance line drawings gray level images 
aware papers dealing various forms idea linear combination prototypical images 
choi 
see suggest model represented face images separate shape texture components model provide correspondences example face images 
study illumination invariant recognition techniques hallinan describes deformable models similar general flavor 
taylor coworkers active shape models probably closest 
idea linear combinations prototypes model non rigid transformations classes objects 
sparse set corresponding points model dense pixelwise correspondences handle texture differently 
image representation relying shape texture vectors obtained pixelwise correspondence significant extension allows incorporate texture shape seamlessly single framework 
modeling classes objects ullman basri poggio vetter representation images vectors positions small number labeled features left open question find reliably accurately 
starting attempted avoid computation sparse features keeping possible representation ullman basri conditions algebraic structure vector space 
images considered bitmaps hand basic vector space operations addition linear combination meaningful 
argued better way represent images associate image shape vector texture vector see review 
shape vector example image associates pixel image coordinates corresponding point example image 
texture vector contains pixel image color gray level value corresponding pixel example image 
refer operations associate shape texture vectors image vectorizing image 
separate vectors consider full vector dimensionality number pixels image gray level value pixel displacement pixel 
term shape vector refers shape 
relative image 
shape texture vectors form separate linear vector spaces specific properties 
shape vectors resulting different orthographic views single object features visible constitute linear vector subspace low dimensionality spanned just views see 
fixed viewpoint specific class objects similar structure faces induce texture vector space relatively low dimensionality shown indirectly results directly 
pixelwise correspondence showed approximation new face image obtained base faces suggesting low dimensionality shape texture spaces 
reviewed correspondence resulting vector structure underlie view approaches recognition detection 
certain special object classes cuboids symmetric objects proved exactly linear classes see 
show classes objects images similar view angle imaging parameters represented satisfactorily linear combination relatively small number prototype images 
formal specification model section formally specify model refer multidimensional morphable model 
image viewed mapping intensity value point image 
range possible gray level values 
bit images 
considering gray level images color images handled straightforward manner 
practice images discrete bounded considering continuous unbounded simplicity notation 
define model set example images called prototypes 
denote prototypes image 
pixelwise correspondences example image denoted mapping maps points point corresponds refer correspondence field interchangeably shape vector vectorized define ffi warping image image words ft set prototype images shape free sense shape shape image 
idea model combine linearly textures prototypes warped shape image correspondence 
resulting texture vector warped shapes defined linear combination prototypical shapes 
formally morphable model defined set images model parameterized model ffi summation describes shape model image linear combination prototype shapes 
similarly summation describes texture model image linear combination prototype textures 
note coefficients shape texture parts model independent 
order allow model handle translations rotations scaling shearing global affine transformation added 
equation model images written model ffi ffi affine transformation constraint imposed avoid redundancy parameters affine parameters allow changes scale 
linear combinations shape texture respectively set prototype images different sets coefficients 
parameters model 
generative model values model image rendered computing model equation 
analysis goal novel image novel find parameter values generate model image similar possible novel section describes 
matching model analysis problem problem matching morphable model novel image 
general strategy define error novel image current guess closest model image 
try minimize error respect linear coefficients affine parameters strategy define sum squared differences error theta novel gamma model sum pixels images novel novel gray level image matched model current guess model gray level image 
equation suggests compute model working coordinate system image 
simply apply shape transformation estimated values novel compare shape free model novel ffi ffi gamma minimizing error yields model image best fits novel image respect norm 
norm norms may appropriate robust statistics 
order minimize error function standard minimization algorithm 
chosen stochastic gradient descent algorithm fast avoid remaining trapped local minima 
summation equation pixels model image 
means gradients computed gradient descent minimization algorithm 
idea stochastic gradient descent randomly sample small set pixels image compute gradient pixels 
gives estimate true gradient 
experiments typically choose points iteration stochastic gradient descent 
results large speedup minimization methods conjugate gradient compute full gradient image 
derivatives required stochastic gradient descent algorithm calculated straightforwardly 
concern gradient descent minimization algorithm getting stuck local minima 
algorithm susceptible difficulty occur problem 
stochastic nature matching algorithm allows escape local minima cases 
matching algorithm uses coarse fine approach improve robustness creating pyramid images level pyramid containing image fourth size 
correspondence fields subsampled coordinates divided level 
optimization algorithm fit model parameters starting coarsest level 
resulting parameter values starting point level 
translational affine parameters multiplied passed pyramid account increased size images 
useful technique implemented model principal components analysis 
eigenvectors shape space texture space computed independently 
shape space texture space representations effectively compressed eigenvectors largest eigenvalues linear combinations model shape texture 
emphasize technique performs eigenvectors provide additional computational efficiency 
matching algorithm pseudo code describes matching algorithm 
model learned set prototypes 
matching takes place novel image analyzed 
learning phase prototype images 
compute pixelwise correspondences prototype images image optical flow algorithm semi automatic technique yields 
compute texture vectors matching phase novel image model texture vectors 
create image pyramids novel 
initialize parameters typically set zero identity transformation 
level pyramid coarsest 
estimate parameters iterating basic step stochastic gradient descent fixed number times error stops decreasing significantly 
multiply constant affine parameters 
go level pyramid 
output parameters examples results model described previous sections tested different classes objects 
class frontal views human faces 
face prototype images create model human faces 
prototype top left corner image average face case 
database david beymer mit ai lab create model class faces 
second face model see 
beymer face database consisted faces 
second example object class set side views cars contained car images 
matching algorithm described section run parameters 
number samples randomly chosen stochastic gradient descent algorithm iteration run iterations pyramid level 
levels image pyramids 
running time matching algorithm beymer faces minutes sgi indy 
cars running time minutes indy 
faces face model built beymer face database shown 
images pixels high pixels wide 
face upper left corner face average face 
correspondences face faces computed input image output matching algorithm examples matching face model novel face image 
automatically algorithm bootstrapping idea 
algorithm described detail 
bootstrapping algorithm computes average face terms shape texture 
results testing model ability match novel faces shown 
faces including average face model left novel image 
hair modelled due ambiguity correspondence faces cropped appropriately 
see matching algorithm produced matches novel faces 
cars example morphable model chose side views cars 
car images pixels high pixels wide 
database car images prototypes 
bootstrapping algorithm described compute pixelwise correspondences 
due lack space show prototype cars similar shown 
model defined prototypes correspondences tested ability match number novel cars 
faces example car left model input image output matching algorithm examples matching car model novel car image 
novel car 
shows results testing novel cars way 
results show model job matching novel car 
described flexible model represent images class objects particular analyze new images represent terms model 
morphable model need handcrafted directly learned small set images prototypical objects 
key idea underlying morphable model representation images relies computation dense correspondence images 
representation set images endowed algebraic structure linear vector space 
model spans space natural coordinates defined efficient linear combination provided karhunen loeve transformation 
main contribution solve analysis problem apply morphable model far generative model image analysis 
key analysis step matching new matching algorithm main focus 
matching algorithm shown robust changes position rotation scale novel input image 
match partially occluded input images 
described detail previous model obtain learn images pixelwise correspondence 
analysis coupled synthesis offers number significant applications morphable model including recognition image compression correspondence learning visual tasks top way specific object classes estimation contours shape color 
applications discussed detail implementation left 
point morphable model framework show matching algorithm performs 
currently investigating extensions 
question handling different lighting conditions adding prototypes taken different illuminations 
investigating hierarchical models divide example images components eyes nose mouth case faces 
preliminary solution problem automatically computing pixelwise correspondences prototype images uses bootstrapping algorithm 
algorithm experiments reported 
extensions discussed 
authors thomas vetter amnon shashua federico girosi paul viola tony helpful comments discussions 
michael oren suggested notation section addition useful comments 
paul besl ramesh jain 
threedimensional object recognition 
computing surveys 
beymer shashua poggio 
example image analysis synthesis 
memo mit 
david beymer 
pose invariant face recognition real virtual views 
phd thesis massachussetts institute technology 
david beymer tomaso poggio 
face recognition example view 
memo mit 
david beymer tomaso poggio 
image representations visual learning 
science june 
bulthoff edelman tarr 
dimensional objects represented brain 
cerebral cortex 
peter burt 
pyramid structure efficient computation 
multi resolution image processing analysis pages 
springerverlag 
chang choi toru hiroshi 
system analyzing synthesizing facial images 
ieee pages 
cootes taylor 
active shape models smart snakes 
british machine vision conference pages 
cootes taylor 
grey level models improve active shape model search 
international conference pattern recognition pages 
peter hallinan 
deformable model recognition human faces arbitrary illumination 
phd thesis harvard university 
michael jones tomaso poggio 
model matching line drawings linear combinations prototypes 
proceedings fifth international conference computer vision pages 
michael jones tomaso poggio 
model matching linear combinations prototypes 
memo mit 
kirby sirovich 
application karhunen loeve procedure characterization human faces 
ieee transactions pattern analysis machine intelligence january 
lanitis taylor cootes 
unified approach coding interpreting face images 
iccv pages cambridge ma june 
logothetis poggio 
shape representation inferior temporal cortex monkeys 
current biology 
tomaso poggio 
theory brain 
memo mit 
tomaso poggio david beymer 
learning see 
ieee spectrum pages 
tomaso poggio roberto brunelli 
novel approach graphics 
memo mit 
tomaso poggio thomas vetter 
recognition structure model view observations prototypes object classes symmetries 
memo mit 
robbins 
stochastic approximation method 
annals mathematical statistics 
amnon shashua 
projective structure uncalibrated images structure motion recognition 
memo mit 
sinha 
perceiving recognizing forms 
phd thesis massachussetts institute technology 
ullman basri 
recognition linear combinations models 
ieee transactions pattern analysis machine intelligence 
thomas vetter michael jones tomaso poggio 
bootstrapping algorithm learning linear models object classes 
ieee conference computer vision pattern recognition pages 
thomas vetter 
linear object classes image synthesis single example image 
memo mit 
paul viola 
alignment maximization mutual information 
mit technical report mit 
