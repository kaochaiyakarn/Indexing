slice profiles metrics software maintenance linda ott dept computer science michigan technological university houghton mi email linda cs mtu edu slice profiling tool developed aid determining cohesion software module 
slice profiles slice metrics maintenance phase software project facilitate understanding system 
slice profiles slice metrics 
show example ways utilizing tools initially oneself software system maintained 
preserving increasing reliability software maintenance requires software engineers assigned system understand various components code interact 
general maintainers software systems developers software essential tools facilitate understanding code data interactions 
slice profiling tool developed aid determining cohesion software module 
show slice profiles slice metrics maintenance phase software project 
profiles metrics indicate quickly maintenance programmer new project portions code may require extra attention order understood 
slice profiles aid maintainer determining data interactions modules 
may indicate inappropriate modularization may lead difficulties maintenance 
information perform preventive maintenance aid maintenance programmer correctly identifying areas program need considered making modifications code 
part reviews slicing introduces variation slicing called metric slices 
slice profiles introduced 
example shows profiles maintenance programmer facilitate understanding complex code 
followed discussion slice metrics indicators complex modules 
background program slicing slicing method program reduction introduced weiser 
starting subset program behavior called slicing criterion slicing process results minimal form program reflects subset program behavior 
slices proposed potential debugging tools program understanding aids 
broader class applications :10.1.1.39.1532
slices defined follows 
definition 
slicing criterion tuple denotes specific statement number module subset variables definition 
slice module slicing criterion executable module properties 
obtained deleting zero statements ii 
input execution behavior points slice observed module respect variables statement example consider module 
distinct tasks performed module computations sum product integers 
relationships tasks common input value control structure compute sum product 
module obtained slicing criterion 
statements deleted effect value computed sumn 
slice product computation obtained criterion 
line statement procedure integer var sumn integer var prodn integer var integer sumn prodn sumn sumn prodn prodn module computes functions sum product integers 
line statement procedure integer var sumn integer var prodn integer var integer sumn sumn sumn slice obtained slicing criterion 
metric slices slices originally defined capture uses relationship traditional flow analysis 
new form slicing defined takes account uses relationships sliced variable 
intention define slices effectively identify cohesion module 
slices called metric slices 
metric slices defined variation definition slices 
definition weiser notion statement relevance 
definition extends weiser notion statement relevance variables definition identifies set relevant variables statement module 
definition 
variable module relevant variable module value dependent value definition 
relevant variable set variable module defined rvs fw relevant point just module terminates 
rvs determined statement relevant slices capture uses relationship obtained definition 
definition 
relevant slice module respect variable consists statements execution changes value variable rvs ii 
control statement affects value variable rvs 
example computing relevant slices approach see 
slices containing statements affected value variable slicing criterion determining set variables dependent variable slicing criterion statement module 
sets called dependent variable sets determine statement inclusion dependent slices capture relationship 
definition 
dependent variable set respect variable module defined dvs fw value dependent value definition 
dependent slice module respect consists statements execution changes value variable dvs ii 
control statement involving variable dvs fvg 
example see 
represent uses data relationships relevant variables considered basis slice inclusion 
defined terms dependent data relationships 
metric slice definition incorporates data relationships 
definition 
metric slice variable module defined slice profiles slice profiles developed facilitate visualizing relationships slices generated module 
slice profile procedure 
line column contains line number statement module 
column variable name heading slice profile corresponds slice variable criterion length 
rows profile marked vertical bar statements included slice particular variable row blank 
statement column contains source statement 
example column heading sumn corresponds slice 
slice consists statements containing vertical bar column sumn statements 
shown slice profiles visually indicate cohesion level module 
order effectively slices computed set variables outputs module 
slices restricted emerson calls vres variable referent executable statements 
statements variable 
note slices restricted vres executable 
agreement weiser original definition 
remainder slice profiles indicate metric slices outputs module restricted vres 
example consider module computes separate functions sum numbers product numbers 
clearly seen slice profile 
see examples 
slices maintenance form slice called decomposition slice restrict portion program maintainer need consider making change 
focus types activities programmer engage initial process assigned new project 
slice profiles slice profiles aid understanding data interactions maintenance 
previous discussion looking slices 
intermodule slices obtain information code 
instance slices indicate level cohesion module 
example slice profile indicative module low cohesion 
slices overlap indicating independent functions computed 
computed slice profile module see statement contained slices loop statement 
module depending terminology control procedural communication 
information maintenance programmer desired perform preventive maintenance improve modularity system 
situations studying software maintenance interested intermodule slices 
intermodule slice profiles provide information interaction module rest system 
include slices variables globals modified modules called currently examined 
compute intermodule slice profiles extending definitions earlier 
discussion algorithms computing intermodule slices weiser original definitions see 
remainder slice profile module indicate intermodule metric slices variables outputs module 
includes variables globals modified called modules intermodule slice profile give information regarding extent effects executing module 
instance intermodule slice profile includes variable local module apparent called module modifies nonlocal variable 
hand intermodule slice profile function includes function variable clear functional module side effects 
intermodule slice profiles maintenance determine potential effects change 
likewise profiles indicate areas poor modularization candidates enhancement 
illustrate slice profiles maintenance tool examining pascal program 
program line interpreter written years ago experienced computer science faculty member systems software course 
small program industry standards sufficient size illustrate ways slice profiles aid maintenance programmer 
programs currently undergoing maintenance concepts data abstraction information hiding somewhat affected design system 
situations due language implementation 
may occurred concepts fully appreciated understood time development 
illustration examine simple procedure computes just output 
see slice profile 
see slice profile computes exactly output computation requires statements procedure 
functional module 
maintenance programmer quickly determine need put undue effort analyzing procedure 
examine larger procedure 
contains slice profile initialize procedure 
slice profile see procedure initializing numerous global variables 
array accounts long slice 
notice pages related module affect value memory 
see global variables initialized 
easily observed slice profile temporally cohesive module function initializing global data structures 
deduce procedure obtains values input file calls modules included slice input 
contains slice profile final example examine 
see module affecting global variables 
line sumn prodn statement procedure integer var sumn integer var prodn integer var integer sumn prodn sumn sumn prodn prodn slice profile 
statements included slice 
indicated column sumn profile 
slice 
indicated column prodn 
line sumn prod statement procedure integer var sumn integer var prodn integer var integer sumn sumn sumn prodn prodn prodn metric slice profile module slices restricted vres 
line statement procedure int var byte var bit bit downto bit mod div intermodule metric slice profile 
line optable pages input memory pc sp statement procedure initialize var optable adc adc optable ann ann optable asl asl optable eor eor optable lsr lsr optable ora ora optable sbc sbc optable inx inx optable dex dex optable nop nop optable pha pha optable bcc bcc optable bcs bcs optable bne bne optable beq beq optable brk brk optable clc clc optable pla pla optable sec sec optable jmp jmp optable jsr jsr optable php php optable rts rts optable cmp cmp optable optable sta sta optable lda lda optable tax tax optable optable optable optable plp plp readln pages pages sp pc hi pc lo memory intermodule metric slice profile module initialize 
output file global variable ir obviously modified procedure 
global variable mar modified call procedure apparent local code variables mbr pc modified procedure procedure indicates variables 
examples observe slice profiles allow see variables affected module tightly interrelated module components 
slice metrics introduced section see way getting overview system providing unfamiliar system indication modules may require extra effort understand breadth effects 
slice metrics original slicing weiser proposes metrics 
metrics shown relate module cohesion 
look subset metrics studied 
notational convenience vm set variables module subset vm containing variables considered metric computations 
case considering output variables 
symbol sl corresponds slice obtained intersection sl jv sl length module denoted length number vres variable referent executable statements tightness measures number statements included slice 
high tightness values indicate high degree data relationships module possibly indicating highly functional module 
tm expressed ratio number statements intersection slices module length length parallelism measures number slices statements common 
may reflect number unrelated processing elements module 
pm expressed number slices having pairwise overlap slices equal threshold jsl sl min measures length shortest slice ratio module length 
high min values indicate shortest slice requires statements module 
indication slices interact may indicate modular functionality 
min length min jsl values min range assumption higher values indicate tightly cohesive modules 
values range case higher values assumed indicate module contains multiple unrelated slightly related tasks 
table shows slice metrics modules program 
see table program consists short modules 
total modules lines long 
note length module reported table number vres variable referent executable statements 
total module lengths reported length lines code 
examining table form hypotheses program 
example show functionally cohesive modules tend metric values near equal 
table see modules appear functionally cohesive modules compute single output 
indication table number modules single slice metric values equal 
conjecture easily verified quickly examining appropriate code 
hand table indicates modules may require greater effort understand function 
example examine metrics see module short vres statements relatively large value values min quite low 
indicates likelihood multiple tasks combined procedure 
noticed perform multiple tasks including writing output file modifying global variables 
similarly deduce table initialize discussed performs operations apparently unrelated data 
case examining code shows operations similar initializations 
metrics indicate data operated unrelated 
example look push 
metrics module may appear somewhat surprising push sounds fairly standard function assume highly cohesive 
examining see modification global variables 
case metrics alerted examine section code may require greater anticipated amount effort comprehend total effect 
example provides indication slice profiles useful tool maintenance environment 
empirically evaluating usefulness line output mbr ir mar pc statement procedure write pc hi pc hi write pc lo pc lo ir mbr write optable decode intermodule metric slice profile 
line mbr memory mar sp statement procedure push byte mbr sp mar store sp intermodule metric slice profile push 
tool concepts necessary order determine actual effectiveness 
beneficial know conditions benefits achieved benefit provided programmer 
may large systems slice profiles complex significant benefit may conditions programmers truly benefit 
particular advantage approach slices underlying data flow analysis multiple ways software development maintenance environment 
cost providing information maintenance programmer minimal 
pointed data flow analysis necessary compute slices deliverables development team maintenance team tools computing slices incremental techniques built 
allow quick relatively inexpensive updates slicing profiler 
addition determining usefulness tool exact form tool needs explored 
questions need answered include metric slices weiser original slices useful aid understanding program 
sufficient benefits justify intermodule slices 
set variables slices computed particular difficulty confronted set variables include input output file variables 
avenue research pursuing analytical evaluation metrics 
analysis provide clearer understanding information metrics providing 
am grateful department computer science colorado state university providing facilities environment resulted productive sabbatical year including completion 

choi miller netzer 
techniques debugging parallel programs 
technical report univ wisconsin madison 
constantine yourdon 
structured design 
prentice hall 
emerson 
discriminant metric module cohesion 
proc 
th international conference software engineering pages 
keith brian gallagher james lyle 
program slicing software maintenance 
ieee trans 
software engineering 
matthew hecht 
flow analysis computer programs 
north holland 
horwitz prins reps integrating non interfering versions programs 
acm trans 
programming languages systems 
horwitz reps binkley 
interprocedural slicing dependence graphs 
acm trans 
programming languages systems 
table intermodule metric slice metrics interpreter 
length module computed number variable referent executable statements 
sl set slices computed module 
min print initialize fetch store decode push pop branch interpreter korel laski 
dynamic program slicing 
information processing letters 
korel laski 
stad testing debugging user perspective 
proc 
nd workshop software testing verification analysis 
arun lakhotia 
computing module cohesion 
technical report cacs tr university southwestern louisiana november 

slice program metrics 
master thesis michigan technological university 
ottenstein smith 
relationship program complexity slice complexity debugging tasks 
proc 
ieee compsac pages 
linda ott james bieman 
effects software changes module cohesion 
technical report cs dept computer science michigan technological univ march 
published technical report cs dept computer science colorado state univ linda ott jeffrey 
relationship slices module cohesion 
proc 
th international conference software engineering pages 
linda ott jeffrey 
slice metrics estimating cohesion 
technical report cs dept computer science michigan technological univ november 
published technical report cs dept computer science colorado state univ ottenstein ottenstein 
program dependence graph software development environment 
proc 
acm sigsoft sigplan software eng 
symp 
practical software development environments 
see sigplan notices 
jeffrey 
investigation slice cohesion metrics 
master thesis michigan technological university 
weiser 
program slicing 
proceedings th international conference software engineering pages 
weiser 
programmers slices debugging 
communications acm 
weiser 
program slicing 
ieee trans 
software engineering 
