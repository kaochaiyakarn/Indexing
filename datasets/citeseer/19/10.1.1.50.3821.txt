proc 
vldb conference pages deriving production rules incremental view maintenance stefano ceri jennifer widom ibm almaden research center harry road san jose ca ceri cs stanford edu widom ibm com 
widely recognized production rules database systems automatically maintain derived data views 
writing correct set rules efficiently maintaining view difficult ad hoc process 
provide facility user defines view sql select expression system automatically derives set oriented production rules maintain materialization view 
maintenance rules triggered operations view base tables 
generally rules perform incremental maintenance materialized view modified sets changes base tables accessible logical tables provided rule language 
operations substantial recomputation may required 
give algorithms key information perform syntactic analysis view definition determine efficient maintenance possible 
relational database systems view logical table derived physical base tables 
views useful presenting different levels abstraction different portions database different users 
typically view specified sql select expression 
retrieval query view written view physical table query answer logically equivalent evaluating view select expression performing query result 
known approaches implementing views 
approach views virtual queries views modified queries base tables sto 
second approach views materialized computed base tables stored database blt kp si 
different applications favor approach 
consider problem view materialization 
production rules database systems allow specification data manipulation operations executed automatically certain events occur conditions met de md wf 
clearly production rules maintain materialized views base tables change rules triggered modify view 
writing correct set rules effi permanent address dip 
di elettronica politecnico di milano piazza da vinci milano italy production rules implement virtual views shown 
view editor user view definition key information feedback view analyzer final view analysis information rule generator view maintaining rules oe rule derivation system ciently maintaining view difficult process 
rules simply view base tables inefficient 
efficiency achieved incremental maintenance changed portions base tables propagated view full recomputation 
developed method automatically derives incremental maintenance rules wide class views 
rules produced executable rule language starburst database system ibm almaden research center 
shows structure system invoked compile time view created 
initially user enters view sql select expression information keys view base tables 
system performs syntactic analysis view definition analysis determines things view may contain duplicates base table referenced view efficient view maintenance rules possible operations table 
user provided results analysis 
results may indicate order improve efficiency view maintenance interaction system necessary prior rule generation 
particular key information essential view analysis show 
functional dependencies specified assume keys easily understood specified user normalized tables functional dependencies captured keys anyway 
ffl views duplicates maintained efficiently explained section 
system detects view may contain duplicates user add distinct view definition 
sql distinct eliminates duplicates 
ffl system detects efficient maintenance rules possible base table operations may indicate user key information included user may choose modify view definition 
changes view analysis repeated 
practice discovered efficient rules possible views operations key information provided 
cases certain base table operations supported efficiently 
operations expected occur frequently view materialization may inappropriate 
responsibility considering trade offs lies user system provides necessary information 
user satisfied view definition properties system generates set view maintaining rules 
rules produced insert delete update operations base table referenced view 
rule language meaning rules triggered arbitrary sets changes database section 
operations system determined efficiency possible maintenance rules modify view incrementally changes base tables 
changes accessible rule system transition table mechanism section 
operations efficiency possible performed 
note view computed entirety maintained automatically 
frequency view maintenance depends frequency rule invocation flexible see section 
method directly applicable simultaneous maintenance multiple views see section 
related incremental view maintenance differs ways takes algebraic approach considering restricted class views operations 
contrast consider practical class views specified standard query language consider arbitrary database operations 
suggests view maintenance mechanisms built database system 
contrast propose view maintenance application existing mechanism 
addition system provides interaction user modify view system guarantee efficient maintenance 
blt views specified relational algebra expressions 
algorithms determining base table changes irrelevant view differentially reevaluating view set insert delete operations 
han extends exploit common subexpressions proposes alternative approach rete networks han includes algorithms incremental aggregate maintenance 
algebra delta relations described including changes operator applied views 
suggested connection production rules md rule derivation included 
sp incremental maintenance single table views considered emphasis issues distribution 
loosely related reported cw gave method deriving production rules maintain integrity constraints 
solutions problems differ considerably approaches similar cases describe general compile time facility user provides high level declarative specification system uses syntactic analysis produce set lower level production rules certain properties relative user specification 
outline section defines sql syntax view definition section provides overview production rule language 
section motivates approach gives informal overview view analysis explains incremental maintenance describes certain difficulties encountered duplicates updates 
subsequent sections contain core technical material formally describing methods view analysis rule generation 
consider top level table section positively nested subqueries section negatively nested subqueries section set operators section 
sections describe view analysis guarantee certain properties show properties determine efficient maintenance possible 
section addresses system execution showing generated rules behave correctly run time 
section conclude discuss 
due space constraints details omitted 
details additional examples see cw 
view definition language views defined subset sql syntax select expressions 
grammar self explanatory readers familiar sql ibm 
examples subsequent sections 
view definition language quite powerful brevity approach presentable language include certain restrictions note dealing view update problem addresses updates views propagated updates base tables 
considering updates base tables propagated updates views 
include multi column grammar productions standard sql implementations 

view def define view col list view exp 
view exp select exp set exp 
select exp select distinct col list table list predicate 
set exp select exp union distinct select exp union distinct select expn 
select exp intersect select exp intersect select expn 
col list col 
col var 
table list var tn varn 
predicate item comp item 
exists simple select 
exists simple select 
item simple select 
item simple select 
item comp simple select 
predicate predicate 
item col constant 
comp 
simple select select col list table list simple pred 
simple pred item comp item 
simple pred simple pred grammar view definitions ffl disjunction predicates omitted 
little loss expressive power usually simulated union 
ffl subqueries limited level nesting 
ffl set operators union intersect may mixed set operator minus omitted 
ffl comparison operators omitted 
reader see method certainly extended eliminate restrictions details lengthy 
note omitted aggregates 
incremental methods maintaining aggregates han techniques adapted framework 
production rule language provide brief self contained overview set oriented sql production rule language remainder 
details numerous examples appear wf 
describe subset rule language view maintenance rules 
rule facility fully integrated starburst database system 
usual database functionality available addition set rules may defined 
rules notion transitions database state changes resulting execution sequence data manipulation operations 
consider net effect transitions blt wf 
syntax defining production rules create rule name transition predicate action precedes rule list transition predicates specify operations tables inserted deleted updated rule triggered transition specified operations occurred net effect transition 
action part rule specifies arbitrary sequence sql data manipulation operations executed rule triggered 
optional precedes clause induce partial ordering set defined rules 
rule specifies precedes list higher ordering 
ordering specified rules order arbitrary deterministic acl 
rule action may refer current state database top level nested sql select operations 
addition rule actions may refer transition tables 
transition table logical table reflecting changes occurred transition 
transition transition table inserted refers tuples table current state inserted transition transition table deleted refers tuples table pre transition state deleted transition transition table old updated refers tuples table pre transition state updated transition transition table new updated refers current values tuples 
transition tables may referenced place tables clauses select operations 
rules activated rule assertion points 
assertion point transaction may additional user specified assertion points transaction 
describe semantics rule execution arbitrary assertion point 
state change resulting user generated database operations executed assertion point start transaction create relevant transition set rules triggered transition 
triggered rule chosen set triggered rule higher ordering 
action executed 
execution action rules triggered transition predicate holds respect composite transition created initial transaction subsequent execution action 
rules consider action executed part initial transition 
rule rules may contain conditions clauses needed view maintenance 
currently assertion points transaction commit 
soon extend system flexible mechanism supports additional points 
processed initial transition triggered transition predicate holds respect transition created action 
new set triggered rules rule chosen triggered rule higher ordering action executed 
arbitrary time rule processing rule triggered transition predicate holds respect composite transition time action executed action executed considered respect transition rule assertion point start transaction 
set triggered rules empty rule processing terminates 
view maintenance necessary rule consider entire pre transition value table see section 
currently direct mechanism rule language obtaining value derived transition tables 
action part view maintenance rules old refer value table start transition triggering rule 
old translated minus inserted minus new updated union deleted union old updated expression may complex observe cases transition tables small empty 
motivation view analysis initially user defines view language section user specifies set single keys view base tables 
known keys table specified provides important information view analysis 
key information view analysis system considers list table view definition 
list computes bound columns table 
bound columns determines table safe 
table safe incremental view maintenance rules generated operations table described section 
system uses bound columns top level tables determine view may contain duplicates 
formal definitions bound columns safety context table sections 
incremental maintenance definition view interpreted expression mapping base tables table exp tn tn base tables appearing definition 
efficient maintenance achieved changes tn propagated incrementally substantial recomputation 
consider table assume moment appears definition 
view analysis determines safe changes propagated incrementally formally changes sets insertions deletions updates denoted deltat produce changes denoted deltav computed deltat base tables deltav exp deltat tn exp expression derived exp table modified inserting deleting tuples deltav appropriate 
assume deltat small respect deltav small respect safe table result efficient maintenance rules 
appears definition separately analyze 
safe changes propagated incrementally unsafe changes may cause 
duplicates method support efficient maintenance views duplicates 
main difficulty lies generating rule actions sql manipulate exact numbers duplicates 
example sql delete operation truth predicate table contains copies tuple say sql operation delete exactly copies 
correctly maintain views duplicates partial deletions necessary 
blt considers problem duplicates views proposing solutions 
solution extra column added view table count number occurrences tuple 
choose approach rule generation quite complex result transparent user 
user duplicates view extra column 
second solution proposed blt ensures view contain duplicates requiring include key columns base tables 
essentially taken approach devised algorithms allow loosen key requirement considerably guarantee view contain duplicates 
update operations update operations performed view base tables consequently perform update operation view 
cases semantic effect 
simple example consider tables contains tuples contains tuples 
consider view define view select initially contains tuple 
suppose update operations performed table update set update set effect update remove tuple view effect second update add tuples way reflect update operations base table update operation view updates reflected delete insert operations exist cases update operations base tables reflected updates views 
general automatic rule derivation approach update operations base tables result delete insert operations view 
top level table assume user defined view specified key information view base tables 
assume view include set operators union intersect views set operators covered section 
system analyzes top level table generated table list grammar production 
analysis reveals view may contain duplicates efficient maintenance rules possible operations top level tables 
consider view general form define view col list select cn tm tm top level table cn columns tm predicate 
bound columns view analysis relies concept bound columns 
bound columns top level table view denoted computed follows definition bound columns top level table 
initialize contain columns cn projected view definition 

add columns tm predicate includes equality comparison column constant 

repeat unchanged add columns tm predicate includes equality comparison column column 
add columns table includes key bound columns computed syntactic analysis guarantee useful property lemma tuples cross product toplevel tables tm satisfy predicate differ bound columns tuples differ view columns cm proj denote projection tuple set columns lemma bound columns lemma toplevel tables tuples tm satisfy definition columns 
additional columns clarity loss generality omit table variables 
guaranteed differ cn proj cn proj cn guaranteed differ cn proj cn proj cn 
proof suppose sake contradiction proj cn proj cn 
proj proj 
show impossible 
consider column recursive definition satisfy predicate value column 
satisfy equality constant 
satisfy equality column cn 
functionally dependent constant column 
case added key table recall columns table functionally dependent key table 
case constant proj proj equal functionally dependent constant proj proj 
case column proj proj supposition proj proj 
duplicate analysis definition include distinct system performs duplicate analysis 
analysis reveals may contain duplicates user notified maintenance rules generated definition modified include distinct 
system add distinct automatically may change view semantics 
bound columns top level table computed duplicate analysis straightforward theorem duplicates includes key top level table contain duplicates 
proof different tuples cross product top level tables satisfy predicate show produce duplicate tuples proj cn proj cn 
theorem assumption additional columns cn include key top level table 
differ cn consequently lemma proj cn proj cn 
safety analysis safety top level table similar duplicate analysis definition safety top level table top level table safe includes key theorems show table safe insert delete update operations reflected incremental changes theorem insertion theorem top level tables safe top level table suppose tuple inserted tuple cross product top level tables tuple satisfies predicate proj cn view insertion proj cn insertion 
proof suppose sake contradiction tuple insertion proj cn proj cn 
additional bound columns cn includes key 
know columns exist safe 
include different tuples proj cn proj cn 
lemma proj cn proj cn 
practical consequence theorem set tuples deltat inserted tuples deltav inserted derived cross product top level tables deltat exactly corresponds definition incremental maintenance section implemented rules 
similar theorems similar consequences apply delete update operations 
proofs omitted similar cw 
theorem deletion theorem top level tables safe top level table suppose tuple deleted tuple cross product top level tables tuple satisfies predicate proj cn view deletion proj cn deletion 
theorem update theorem top level tables safe top level table suppose tuple updated vo tuple cross product top level tables old value tuple vo satisfies proj cn view update 
vn tuple cross product top level tables new value tuple satisfies proj cn update 
tuple cross product top level tables satisfies update 
proj cn proj cn proj cn proj cn 
rule generation describe maintenance rules generated top level tables 
consider safe table unsafe 
initially table generate rules triggered inserted deleted updated 
subsequently explain rules combined entire rule set ordered 
safe top level table view defined 
tuples inserted want insert tuples produced view definition inserted ti ti toplevel table list 
theorem insertions create duplicates view 
similar rule applied tuples inserted different top level table duplicates appear 
inserting new tuple rule ensure tuple inserted different rule 
checked efficiently transition table inserted rule inserted create rule ins ti inserted ti insert select cn inserted ti tm cn 
inserted tuples deleted want delete tuples produced view definition deleted ti ti top level table list 
theorem know tuples longer view 
remember tables top level table list may modified 
identify correct tuples delete consider pre transition value tables obtained old feature described section 
predicate old denote table replaced old rule deleted create rule del ti deleted ti delete cn 
select cn old deleted ti old tm old explained section update operations base tables cause delete insert operations views 
fact generate separate rules triggered updated perform deletions perform insertions 
similar rules deleted inserted correctness follows theorem create rule old upd ti updated ti delete cn 
select cn old old updated ti old tm old create rule new upd ti updated ti insert select cn new updated ti tm cn 
inserted table appears top level table list rules generated 
rules identical triggering operations actions perform operation insert delete merged rule sequencing combining actions 
entire set rules generated including nested table described ordered adding precedes clauses rules performing deletions precede rules performing insertions 
consider case top level table unsafe properties guaranteed theorems may hold 
insertions incremental maintenance possible difference safe case new tuples checked guarantee duplicates produced 
indexed performed efficiently 
create rule ins ti inserted ti insert select cn inserted ti tm cn 
delete update operations difficult recomputation occur 
tuple deleted theorem determine corresponding tuples deleted tuples may produced base table tuples deleted similar problem occurs update 
solution reevaluate view expression 
equivalent view choose create single distinguished rule performs 
rule triggered operations efficient maintenance impossible 
mentioned operations expected occur frequently materialization may inappropriate view 
rule triggering operations create rule deleted ti updated ti delete insert select cn tm deactivate rules rule precedence rules execution rule actions entirely rule final action deactivates rules rule assertion point 
note triggering operation appears rule rules triggered operation eliminated 
examples draw examples simple airline reservations database schema merge rules action operation create separate rules updated ordering generate rule actions perform deletions insertions 
feature included current rule system easily simulated rule conditions see wid 
intend add feature near 
flight flight id flight date res res id psgr id flight id seat psgr psgr id name phone meal ffn ff ffn miles schema self explanatory res denoting reservation ff denoting frequent ffn denoting frequent number 
primary keys table capitalized keys flight date 
table flight psgr id flight id flight id seat 
table res ffn table psgr 
consider view provides seat numbers meal preferences passengers flight fid ordered special meals define view special meals seat meal select res seat psgr meal res psgr res flight id fid res psgr id psgr psgr id psgr meal null definition determine bound columns top level table res psgr projected columns res seat psgr meal column res flight id equated constant predicate remaining columns res flight id seat 
key psgr psgr id equated bound column res psgr id bound columns include keys top level tables view contain duplicates incremental maintenance rules generated tables 
rules triggered operations table res rules table psgr similar create rule ins res special meals inserted res insert special meals select res seat psgr meal inserted res psgr res flight id fid res psgr id psgr psgr id psgr meal null seat meal 
inserted special meals create rule del res special meals deleted res delete special meals seat meal 
select res seat psgr meal deleted res old psgr res flight id fid res psgr id psgr psgr id psgr meal null create rule old upd res special meals updated res delete special meals seat meal 
select res seat psgr meal old updated res old psgr res flight id fid res psgr id psgr psgr id psgr meal null create rule new upd res special meals updated res insert special meals select res seat psgr meal new updated res psgr res flight id fid res psgr id psgr psgr id psgr meal null seat meal 
inserted special meals second example consider view provides frequent numbers passengers currently holding reservations define view ff res ffn select psgr ffn psgr res psgr psgr id res psgr id bound columns columns table psgr ffn key column res psgr id bound columns include key table res view may contain duplicates distinct added 
table psgr safe rules operations psgr similar previous example 
table res unsafe rules generated create rule ins res ff res inserted res insert ff res select distinct psgr ffn psgr inserted res psgr psgr id res psgr id ffn ff res create rule ff res deleted res updated res delete ff res insert ff res select distinct psgr ffn psgr res psgr psgr id res psgr id deactivate rules ff res positively nested subqueries positively nested subquery nested select expression preceded exists comp comp comparison operator 
describe safety analysis rule generation table exists subqueries 
similar methods apply positively nested subqueries explained section 
consider view follows table consideration define view col list select cn tm exists select cols bound columns safety analysis analyze nested table introduce concept columns bound correlation bound columns top level tables 
assume set top level bound columns computed 
correlated bound columns denoted exists computed follows definition correlated bound columns exists 
initialize contain columns predicate includes equality comparison column column 

add columns predicate includes equality comparison column constant 

repeat unchanged add columns predicate includes equality comparison column column 
add columns table includes key correlated bound columns exists guarantee property lemma bound columns lemma exists consider tuples cross product tm cross product satisfy predicate satisfies nested predicate top level satisfies top level cross product 
columns guaranteed differ proj proj 
guaranteed differ cn proj cn proj cn 
proof suppose sake contradiction proj cn proj cn 
supposition proj proj 
recursive definitions satisfy satisfy predicate value column 
satisfy equality constant 
satisfy equality column cn 
functionally dependent constant column bound columns lemma cases proj proj 
safety analysis rule generation positively nested subqueries similar top level tables definition safety table exists table exists subquery safe includes key theorems show safe insert delete update operations reflected incremental changes include proof insertion theorem proofs follow analogy 
theorem insertion theorem exists safe table exists subquery suppose tuple inserted tuple cross product top level tables satisfies tuple cross product nested tables satisfies proj cn view insertion 
proj cn insertion 
proof suppose sake contradiction proj cn insertion 
tuple cross product nested tables insertion tuple top level cross product proj cn proj cn satisfies satisfies correlated bound columns includes key different tuples proj proj 
lemma proj cn proj cn 
theorem deletion theorem exists safe table exists subquery suppose tuple deleted tuple cross product top level tables satisfies tuple cross product nested tables satisfies proj cn view deletion 
proj cn deletion 
theorem update theorem exists safe table exists subquery suppose tuple updated vo tuple cross product top level tables satisfies tuple nested tables old value satisfies vo proj cn view update 
tuple cross product top level tables satisfies tuple nn cross product nested tables new value nn satisfies proj cn update 
proj cn proj cn proj cn update proj cn update 
rule generation consider safe table 
properties guaranteed theorems allow incremental maintenance performed just safe top level table replaced inserted ni inserted rule deleted ni deleted rule old updated ni new updated ni updated rules 
rules perform insertions check tuples inserted rule rules perform deletions old value tables 
table appears table appears view definition rules merged previously described 
unsafe table handled similarly top level tables nested table unsafe triggering operations deleted ni updated ni included distinguished rule inserted rule similar safe rule added predicate inserted 
positively nested subqueries safety analysis rule generation subqueries preceded identical exists 
method equivalent identical exists set correlated bound columns may larger 
consider view form define view col list select cn tm hd select definition correlated bound columns modified include case ffl add column corresponding column reader may note view equivalent view define view col list select cn tm exists select expected correlated bound columns view definition exists equivalent correlated bound columns extended definition 
example airline reservations database introduced section view provides id passengers frequent miles define view miles id select psgr id psgr psgr ffn select ffn ff miles columns top level table psgr bound psgr id key 
extended definition ff ffn correlated bound column 
ffn key nested table ff safe 
inserted deleted rules table ff follow updated rules similar 
reader may note select expressions positive subqueries transformed equivalent select expressions subqueries cg kim 
considering actual transformations see maintenance rules produced transformed view equivalent maintenance rules produced original view 
create rule ins ff miles inserted ff insert miles select psgr id psgr psgr ffn select ffn inserted ff miles psgr id inserted miles create rule del ff miles deleted ff delete miles psgr id select psgr id old psgr psgr ffn select ffn deleted ff miles negatively nested subqueries negatively nested subquery nested select expression preceded exists 
describe safety analysis rule generation table exists subqueries 
similar methods apply negatively nested subqueries see cw 
consider view form define view col list select cn tm exists select cols negatively nested subqueries insert operations nested tables result delete operations view delete operations nested tables result insert operations view 
safety analysis negatively nested table define notions safety safety indicates insert operations reflected incremental changes du safety indicates delete update operations reflected incremental changes definition safety somewhat different previous safety definitions correlated bound columns nested table considered 
assume set top level bound columns computed 
definition safety table exists table exists subquery safe predicate refers columns columns constants 
notion safety prove theorem insertions theorem insertion theorem exists safe table exists subquery suppose tuple inserted tuple cross product top level tables satisfies top level predicate tuple cross product nested tables satisfies nested predicate proj cn insertion 
proof suppose sake contradiction proj cn insertion 
tuple cross product top level tables proj cn proj cn satisfies tuple cross product nested tables satisfies show definition satisfy proj cn proj cn equivalent columns 
safe satisfies definition safety satisfies deletes updates combine new notion safety previous notion safety keys 
correlated bound columns negatively nested table defined positive definition bound columns lemma holds 
definition du safety table exists table exists subquery du safe safe includes key theorem deletion theorem exists du safe table exists subquery suppose tuple deleted tuple cross product top level tables satisfies tuple cross product nested tables satisfies proj cn deletion 
proj cn deletion 
proof proof analogous proof insertion theorem 
suppose sake contradiction proj cn deletion 
tuple cross product nested tables satisfies correlated bound columns includes key different tuples proj proj 
lemma proj cn proj cn impossible 
theorem update theorem exists du safe table exists subquery suppose tuple updated tuple cross product top level tables vo satisfies tuple cross product nested tables old value satisfies tuple cross product top level tables vn satisfies tuple nn nested tables new value nn satisfies proj cn proj cn proj cn update 
proj cn update 
proj cn update 
proof analogous theorems 
rule generation nested table safe theorem incremental rule generated create rule ins ni inserted ni delete cn 
select cn tm exists select cols inserted ni nl notice subquery exists converted exists conversion occurs deleted updated rules 
safe view expression need reevaluated determine tuples deleted 
unsafe case inserted ni included rule du safe theorems incremental rule deleted generated 
rules updated correspond inserted deleted rules previously 
create rule del ni deleted ni insert select cn tm exists select cols old deleted ni old nl cn 
inserted table du safe updated ti included rule deleted incremental maintenance performed previously unsafe case rule modified inserted 
example airline reservations database introduced section view provides id reservations flight id table flight define view bad flight res id select res id res exists select flight flight flight id res flight id definitions nested table flight safe du safe 
inserted deleted rules table flight follow updated rules similar 
create rule ins flight bad flight inserted flight delete bad flight res id select res id res exists select inserted flight flight flight id res flight id create rule del flight bad flight deleted flight insert bad flight select res id res exists select deleted flight flight flight id res flight id res id inserted bad flight set operators consider views set operators 
view definition may include union distinct intersect 
views view analysis rule generation initially performed independently component select expression 
rules modified incorporate set operators 
union views consider view form define view col list select cols tables union distinct union distinct select pk duplicate analysis performed select expression section select expression may contain duplicates user required add distinct select expression 
select expression initial set view maintaining rules generated methods preceding sections 
rules actions modified incorporate union 
actions perform insert operations inserted added predicate due safe table changed ensures duplicates added different select expressions 
rule includes due unsafe table remains unchanged 
modifications delete operations complicated 
tuple longer produced select expressions deleted produced select expressions 
loss generality consider delete operation action rule generated select expression conjunct added delete operation clause cols 
select cols tables cols 
select pk clearly conjuncts may cause considerable recomputation depending complexity select expressions 
rules recomputation cost appears large user may choose move triggering operation rule usual rules common triggering action operations merged rules triggering operations appear rule eliminated 
intersect views view intersect operators handled similarly views union operators 
rule modification rules performing delete operations remain unchanged 
tuple deleted select expression deleted modifications insert operations similar modifications delete operations union views tuple newly produced select expressions inserted produced select expressions 
consider insert operation action rule generated select expression conjunct added clause insert operation select expression cols 
select cols tables cols 
select pk select expressions sufficiently complex user may decide appropriate 
system execution far described compile time aspects facility 
view definition view analysis rule generation occur prior database system execution 
ensure run time derived rules behave desired views maintained correctly 
suppose facility derive sets maintenance rules views 
system orders set rules view delete operations rule actions precede insert operations 
ordering necessary rules different views action part rule modifies view rules different views effect 
consider set rules view suppose arbitrary set changes base tables 
rule triggered view certainly maintained correctly recomputed base tables rules deactivated modified base tables change 
suppose rule triggered 
rule processing rules delete tuples rules insert tuples consider deletions 
type table theorems guarantee generated delete operations delete tuples remain furthermore operations delete tuples longer consider insertions 
notice generated insert operations nested select expressions view definition 
know view definition produce duplicates set tuples insert operations includes duplicates 
furthermore theorems inserted clauses guarantee tuples inserted 
case insert operations produce tuples added consider production rules addition view maintaining rules may defined system 
rules modify views modify base tables 
view maintaining rules behave correctly presence rules additional rule ordering necessary 
recall semantics rule execution section rule considered respect transition time action executed action executed considered respect transition rule assertion point start transaction time view maintaining rule triggered rule processing processes base table changes assertion point 
suppose subsequently rule processing base tables changed non view maintaining rule 
triggered modify view new set changes 
rule processing terminates rules triggered view maintaining rules processed relevant changes base tables 
described facility automatically derives set production rules maintain materialization user defined view 
approach frees view definer handling view maintenance guarantees view remains correct 
analysis techniques key information incremental maintenance rules generated possible 
facility allows user interact system view definitions key information modified guarantee system produces efficient maintenance rules frequent base table operations 
practice efficient rules possible wide class views efficiency relies safe table seen criteria safety table routinely fall class 
cases efficiency possible user desired view system provides recognition fact user may rules produced automatic may decide query modification appropriate 
plan implement facility starburst rule system conduct experiments evaluate run time efficiency approach variety views 
want extend view analysis rule generation full power sql select statements view definitions 
started expect tedious difficult 
currently biggest drawback approach views duplicates handled consider ways remove restriction 
add automatic rule optimization post rule generation component system 
rules produced method standard form cases optimized cw 
addition rules different views merged common subexpressions exploited han 
properties guaranteed algorithms useful areas query optimization intend explore connection 
guy lohman laura haas helpful comments initial draft 
acl agrawal cochrane lindsay 
maintaining priorities production rule system 
proceedings seventeenth international conference large data bases pages barcelona spain september 
blt 
larson tompa 
efficiently updating materialized views 
proceedings acm sigmod international conference management data pages washington june 
cg ceri gottlob 
translating sql relational algebra optimization semantics equivalence sql queries 
ieee transactions software engineering april 
cw ceri widom 
deriving production rules constraint maintenance 
proceedings sixteenth international conference large data bases pages brisbane australia august 
cw ceri widom 
deriving production rules incremental view maintenance 
ibm research report rj ibm almaden research center san jose california march 
de delcambre 
relational production language production language relational databases 
kerschberg editor expert database systems proceedings second international conference pages 
benjamin cummings redwood city california 
han hanson 
efficient support rules derived objects relational database systems 
phd thesis university california berkeley august 
ibm ibm form number sc 
ibm systems application architecture common programming interface database october 
kim kim 
optimizing sql nested query 
acm transactions database systems september 
kp koenig paige 
transformational framework automatic control derived data 
proceedings seventh international conference large data bases pages cannes france september 
md mccarthy dayal 
architecture active database management system 
proceedings acm sigmod international conference management data pages portland oregon may 
rosenthal chakravarthy 
situation monitoring active databases 
proceedings fifteenth international conference large data bases pages amsterdam netherlands august 
si shmueli itai 
maintenance views 
proceedings acm sigmod international conference management data pages boston massachusetts may 
stonebraker goh potamianos 
rules procedures caching views data base systems 
proceedings acm sigmod international conference management data pages atlantic city new jersey may 
sp segev park 
updating distributed materialized views 
ieee transactions knowledge data engineering june 
sto stonebraker 
implementation integrity constraints views query modification 
proceedings acm sigmod international conference management data pages san jose california may 
widom cochrane lindsay 
implementing set oriented production rules extension starburst 
proceedings seventeenth international conference large data bases pages barcelona spain september 
wf widom finkelstein 
set oriented production rules relational database systems 
proceedings acm sigmod international conference management data pages atlantic city new jersey may 
wid widom 
deduction starburst production rule system 
ibm research report rj ibm almaden research center san jose california may 
