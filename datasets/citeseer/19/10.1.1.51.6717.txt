vic flexible framework packet video steven mccanne university california berkeley lawrence berkeley laboratory mccanne ee lbl gov van jacobson network research group lawrence berkeley laboratory van ee lbl gov deployment ip multicast fostered development suite applications collectively known mbone tools real time multimedia internet 
tools nv xerox parc ivs inria provide video transmission codecs 
describe new video tool vic extends nv ivs flexible system architecture 
flexibility characterized network layer independence support hardware codecs conference coordination model extensible user interface support diverse compression algorithms 
propose novel compression scheme called 

created hybrid nv ivs codecs 
provides factor improvement compression gain nv encoder db psnr substantial improvement run time performance ivs coder 
keywords conferencing protocols digital video image video compression processing multicasting networking communication 
past years collaborative effort network research community produced suite tools multimedia conferencing internet 
driving force tools deering ip multicast technology extends traditional ip routing model efficient multipoint packet delivery 
incremental deployment ip multicast realized building temporary virtual multicast network top existing internet casner dubbed multicast backbone mbone 
copyright fl association computing machinery permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage new copies bear notice full citation page 
copyrights components owned acm honored 
abstracting credit permitted 
applications provide video mbone xerox parc network video tool nv inria video conferencing system ivs 
systems share goal supporting low bit rate multicast video internet approaches markedly different 
ivs integrated audio video conferencing system relies exclusively video compression 
adopting standardized algorithm ivs interoperate large installed base video codecs compliant bit stream easily generated packet stream introducing framing software 
contrast nv video application utilizes custom coding scheme tailored specifically internet targeted efficient software implementation 
low computational complexity nv codec run faster codec 
better compression performance nv nv mbone community better runtime performance 
inevitably pioneering nv ivs restrictions imposed design process facilitate experimentation 
example ivs design assumes video represented decimated yuv nv assumes decimation 
extending nv support ivs support nv style compression require nontrivial design changes 
systems software compression video capture models designed uncompressed video 
extending support hardware compression engines relatively difficult 
describe third model packet video application realized ucb lbl video conferencing tool vic 
vic builds lessons learned ivs nv focusing flexibility 
extensible object oriented application framework supports ffl multiple network abstractions ffl hardware codecs ffl conference coordination model ffl extensible user interface ffl diverse video compression algorithms 
combined frederick insights nv codec compression advantages standards acm multimedia november san ca compliance novel scheme call 

intra gives significant gain compression performance compared nv substantial improvement run time performance packet loss tolerance compared ivs 
vic originally conceived application demonstrate tenet real time networking protocols simultaneously support evolving lightweight sessions architecture mbone 
driven evolution real time transport protocol rtp 
rtp evolved tracked implemented protocol changes fed back implementation experience design process 
experience implementing rtp payload specification led improved scheme macroblock level fragmentation resulted revised protocol 
rtp payload specification jpeg evolved vic implementation 
section describe design approach mbone tools 
discuss essentials vic network architecture 
network architecture shapes software architecture discussed section 
discuss signal compression issues deployment implementation status 
composable tools vs toolkits cornerstone unix design philosophy avoid supplying separate application possible user task 
simple function filters grep sort easily dynamically combined pipe operator perform arbitrarily complex tasks 
similarly modular configurable applications specialized support particular media easily composed conference bus support variety conferencing styles needed support effective human communication 
approach derives framework proposed ousterhout claims large systems easily composed small tools glued simple communication primitive tk send command 
simply replaced send primitive defined restrictive conference bus protocol 
restricting protocol prevents evolution sets tools rely specifics internal implementations 
addition vic conferencing applications include visual audio tool vat audio whiteboard wb shared workspace slide distribution session directory sd session creation advertisement 
composable tools approach networked multimedia contrasts common toolkit framework adopted multimedia systems 
toolkits provide basic building blocks form code library application programming interface api library providing high level abstractions manipulating multimedia data flows 
distinct conferencing style requires different application applications typically simple write consisting api calls style dependent glue control logic 
toolkit approach emphasizes programming model elegant programming mechanisms resulted toolkit related research 
simplify programming model toolkits usually assume communication application independent offer generic network interface built traditional transport protocols 
clark tennenhouse pointed multimedia applications simplified application network performance enhanced network protocol reflected application semantics 
model application level framing alf difficult implement toolkits application semantics deliberately factored natural way implement composable tools 
alf media specific tools offer simple solution multimedia biggest problem high rate high volume continuous media data streams 
tools directly involved processing multimedia data flows alf tune performance data paths application network 
addition performance flexibility gained composing simple tools monolithic application built top api 
tool deals directly media stream sends low rate reports started stopped sending conference bus coordination agent necessary implement particular conferencing scenario written simple interpreted language tcl 
allows volatile part conferencing problem piece audio video coordinated unit meets particular human needs expectations simple easy evolve 
ensures coordination agents designed orthogonal media agents enforcing mechanism policy separation media tools implement mechanism coordination tools impose policy structure appropriate particular conferencing scenario open meeting moderated meeting class seminar network architecture freedom explore communications protocol design space fosters innovation precludes interoperability 
mbone created study multicast scaling issues interoperability especially important 
multicast interesting scale requires large group people spread large geographic region reason send receive data group 
way achieve develop interoperable applications encourage widespread 
rtp promote interoperability audio video transport working group internet engineering task force ietf developed rtp application level protocol multimedia transport 
goal provide thin transport layer overly restricting application designer 
protocol specification states rtp intended malleable provide information required particular application integrated application processing implemented separate layer 
alf spirit semantics sev acm multimedia november san ca udp rmtp aal ip atm rtp rtp protocol stack eral fields rtp header deferred rtp profile document defines semantics application 
example rtp header contains generic marker bit audio packet indicates start talk spurt video packet indicates frame 
interpretation fields refined payload format specification 
example audio payload define rtp timestamp audio sample counter mpeg rtp specification defines presentation time stamp mpeg system specification 
alf model rtp natural match composable tools framework serves foundation vic network architecture 
rtp independent underlying network technology vic simultaneously support multiple network protocols 
illustrates fits protocol stacks 
ip ip multicast rtp layered udp tenet protocols runs rmtp 
similarly vic run directly atm adaptation layer 
cases rtp realized application 
rtp divided components data delivery protocol control protocol rtcp 
data delivery protocol handles actual media transport rtcp manages control information sender identification receiver feedback cross media synchronization 
different media conference level session distributed distinct rtp sessions 
complete details rtp specification provided 
briefly mention feature protocol relevant rest 
media distributed independent rtp sessions vic implemented independently multimedia applications protocol provide mechanism identifying relationships media streams audio video synchronization media sources identified bit rtp source identifier guaranteed unique single session 
rtp defines cname identifier globally unique sessions 
cname variable length ascii string algorithmically derived user host names 
rtcp control packets advertise mapping source variable length cname 
receiver group distinct rtp sources cname single logical entity represents session participant 
summary rtp provides solid defined protocol framework promotes application interoperability alf philosophy overly restrict application design particular lends efficient implementation 
software architecture principles alf drove vic network architecture determined software architecture 
central goal achieve flexible software framework easily modified explore new coding schemes network models compression hardware conference control abstractions 
basing design objected oriented alf framework achieved flexibility compromising efficiency implementation 
alf leads design data sources sinks application highly aware data represented network transmission 
example software encoder produce bit stream turn packetized rtp agent 
encoder builds packet stream fragmented boundaries optimized semantics 
way compressed bit stream robust packet loss 
macroscopic level software architecture built event driven model highly optimized data paths glued controlled flexible tcl tk framework 
set basic objects implemented coordinated tcl tk 
portions object hierarchy mirror set object oriented tcl commands 
base classes permit tcl manipulate objects orchestrate data paths uniform interface derived subclasses support specific instances capture devices display types decoder modules division low overhead control functionality implemented tcl performance critical data handling implemented allows rapid prototyping sacrifice performance 
similar approach independently developed 
decode path roughly illustrates receive decode path 
elliptical nodes correspond base classes implementation rectangular nodes represent output devices 
tcl script responsible constructing data paths performing band control result network events local user interaction 
tcl tk contains user interface easy control functionality user single interface element invoke primitive control functions implement functionality 
data flow receive path indicated solid arrows 
packet arrives network network object dispatches implements bulk rtp processing 
packet appropriate source object represents specific active transmitter multicast session 
source object exists incoming packet upcall tcl instantiate new data path source 
data path established packets flow source object decoder object 
hardware soft acm multimedia november san ca window window window network tcl decoder external video state source decoder hardware decoder hardware software source state receive decode data path 
ware decoding multiple compression formats simultaneously supported class hierarchy 
decoder object decodes complete frame invokes rendering object display frame output device window external video output port 
note line alf packets flow way decoder object intact 
decoder modules isolated network issues 
fact exactly modules know best faced packet loss reordering 
inheritance provides convenient mechanism implementing alf model sacrificing software modularity 
architecture appears straightforward implement practice decode path challenging revised aspects design 
core difficulty managing combinatorics possible configurations 
input compression formats supported deciding best way decode stream depends user input capabilities available hardware parameters video stream 
example dec adaptor supports hardware decompression decimated jpeg window external output port 
board multiplexed capture decoding window capture decoding external port 
incoming jpeg stream decimated hardware 
jpeg compressed streams displayed video output port system software support direct path uncompressed video 
devices exhibit similar peculiarities 
coping hardware peculiarities requires building rule set describing legal data paths 
rules depend intimately application complicated user configuration 
tcl combination provides flexible solution problem 
implementing bare essentials exporting tcl interface allows easy creation deletion configuration objects difficulty managing complexity data paths greatly reduced 
capture path applied similar architectural decomposition video capture compression path 
decoder objects encoder objects perform compression rtp packetization 
example encoder fragments bit stream packets macroblock boundaries minimize impact packet loss 
different compression schemes require different video input formats 
instance requires decimated cif format video nv encoder requires decimated video arbitrary geometry 
implementation approach capture device export common format subsequently converted format desired encoder 
unfortunately manipulating video data uncompressed domain results substantial performance penalty optimized capture path supporting format 
performance gain realized carrying conditional replenishment step early possible 
compression schemes utilize block conditional replenishment input image divided small blocks blocks change coded sent 
send decision block depends small dynamically varying selection pixels block 
send decision folded capture process read memory traffic write memory traffic avoided block coded 
acm multimedia november san ca rendering performance critical operation converting video yuv pixel representation compression schemes format suitable output device 
rendering operation performed decompression uncompressed video bottleneck carefully implemented 
profiles vic match experiences reported patel image rendering accounts execution time 
video output rendered output port external video device window 
case window need dither output color mapped display simply convert yuv rgb true color display 
alternatively hp server supports yuv visual designed specifically video write yuv data directly server 
class hierarchy support modes operation special case handling decimated video scaling operations maximize performance 
color mapped displays vic supports modes dithering trade quality computational efficiency 
default mode simple error diffusion dither carried yuv domain 
approach described table lookups computing error terms improved algorithm distributing color cells yuv color space 
color cells chosen uniformly feasible set colors yuv cube uniformly entire cube saturation find closest feasible color 
approach effectively doubles number useful colors dither 
additionally add extra cells region color space corresponds flesh tones better rendition faces 
error diffusion dither produces relatively high quality image computationally expensive 
performance critical cheap ordered dither available 
vic ordered dither optimized version ordered dither nv 
cheaper approach direct color quantization 
color gamut optimized statistics displayed video pixel quantized nearest color gamut 
approach produce banding artifacts quantization noise quality reasonable color map chosen appropriately 
vic computes color map static optimization explicitly invoked user 
user clicks button histogram colors computed active display windows fed heckbert median cut algorithm 
resulting color map downloaded rendering module 
median cut compute intensive operation take seconds runs asynchronously separate process 
approach qualitatively matched lcd color displays laptop pcs 
heckbert color map optimization tandem error diffusion algorithm 
concentrating color cells input distribution dither color variance reduced quality increased 
optimized true color rendering case 
problem simply convert pixels yuv color space rgb 
typically involves linear transforma vic ct vat wb conference bus 
tion requiring scalar multiplications conditionals 
inspired approach vic uses algorithm gives full bit resolution single table lookup chrominance pair performs saturation checks parallel 
trick leverage fact coefficients term linear transform 
precompute conversions tuple kb lookup table linearity conversion simply 
final rendering optimization dither regions image change 
decoder keeps track blocks updated frame renders blocks 
pixels rendered buffer shared server application single data copy needed update display new video frame 
copy optimized limiting bounding box computed updated blocks new frame 
privacy provide confidentiality session vic implements endto encryption rtp specification 
rely access controls scope control ip multicast model assumes network easily tapped encryption prevent unwanted receivers interpreting transmission 
private session vic encrypts packets step transmission path decrypts step reception path 
encryption key specified session participants external secure distribution mechanism 
vic supports multiple encryption schemes class hierarchy 
default data encryption standard des cipher block chaining mode employed 
weaker forms encryption linear feedback shift registers efficient implementations des give performance current hardware measurements 
computational requirements compression decompression far outweigh cost encryption decryption 
conference bus various media conference session handled separate applications need mechanism provide coordination separate processes 
conference bus abstraction illustrated provides mechanism 
concept simple 
application broadcast typed message bus applications registered receive message type get acm multimedia november san ca copy 
depicts single session composed audio vat video vic whiteboard wb media orchestrated developed coordination tool ct 
complete description conference bus architecture scope 
provide brief overview mechanisms vic support model 
voice switched windows 
feature mbone video tools vic voice switched windows 
window voice switched mode uses cues vat focus current speaker 
focus messages broadcast vat conference bus indicating rtp cname current speaker 
vic monitors messages switches viewing window person 
multiple voice switched windows speakers video streams shown 
focus messages broadcast conference bus applications purposes 
example network supports different qualities service qos tool focus message give video bandwidth current speaker dynamic rsvp filters 
floor control 
lbl mbone tools ability mute ignore network media source disposition mute control controlled conference bus 
simple mechanism provides means implement floor control external application 
possible model participant session follows direction known session defined moderator 
moderator give floor participant multicasting takes floor directive participant rtp cname 
locally receiver participants holds floor 
note model rely cooperation remote participants session 
misbehaving participant cause problems muted participants follow protocol 
synchronization 
cross media synchronization carried conference bus 
real time application induces called playback point adapt packet delay variations 
playback point adjusted synchronize media 
broadcasting synchronize messages conference bus different media compute maximum advertised playout delays 
maximum delay adaptation algorithm 
order assure accurate synchronization semantics advertised playback points delay offset source timestamp time media analog domain 
receiver buffering delay capture local delay variability codecs 
device access 
active session separate conference bus coordinate media session 
coordination operations device access require interaction different sessions 
global conference bus shared media 
applications sharing common device issue claim device release device messages global bus coordinate ownership exclusive access device 
conference buses implemented multicast datagram sockets bound loopback interface 
local machine ip multicast provides simple efficient way process send information arbitrary set processes needing destinations wired 
user may participating conferences simultaneously transport address udp destination port create separate bus active conference 
simplifies communication model tool knows sends receives bus refers conference participating improves performance tools awakened activity conference 
application conference handed address port bus startup command line argument 
global device access bus uses reserved port known applications 
user interface screen dump vic current user interface illustrating display active video streams shown 
main conference window upper left hand corner 
shows thumbnail view active source various identification reception information 
viewing windows opened clicking respective thumbnails 
control menu shown lower right 
buttons window turn transmission select encoding format image size give access capture device specific features selection input ports 
bandwidth frame rate sliders limit rate transmission generic quality slider trades quality bandwidth fashion dependent selected encoding format 
user interface implemented tcl tk script embedded vic 
easy prototype changes evolve interface 
interface extensible run time user include additional code modify core interface home directory dot file 
serious deficiency current approach vic user interface completely independent media tools session 
modularity fundamental system architecture detrimental user interface uniform presentation needed 
example vat vic wb employ user interface element display members session 
better model single instance list tools 
participant listing annotated show media active participant may audio video 
intend evolve tools direction merging user interfaces different tools integrated interface 
tools reduced bare application performs network media processing 
integrated tool orchestrate session structure configuring bare tools conference bus 
different application styles arrangements easily implemented separate programs scripting language realize user interface orchestration 
decomposition tools dependent environment 
example bare vic process need window system specific code draw pixels display window 
forthcoming port tcl tk windows bare application framework readily migrate pc environment 
acm multimedia november san ca vic user interface signal compression flexible software architecture previous section suited experimentation new signal compression schemes 
especially important video compression algorithms traditionally designed constant bit rate channels new approaches required transmission heterogeneous packet networks internet 
current form internet relatively harsh environment compressed video signals 
packet loss rates significant loss patterns bursty 
compression schemes rely low bit error rate channel coding techniques effectively reduce bit error rate operate conditions 
compression algorithms mpeg packet loss causes sustained degraded quality 
due method removing temporal redundancy motion compensating predictor predict blocks current frame previous frames code residual prediction error 
prediction decoded signal model assumes decoder shares identical state 
packet loss occurs decoder state mismatched quality degrades new frame 
mpeg rely intra mode updates eventually resynchronize low bit rates resynchronization intervals tens hundreds frames probability error interval high decoded bit stream virtually error free 
solution reduce resynchronization interval extreme case single frame 
model motion jpeg frame coded transmitted independently approach results low compression efficiency transmission redundant 
conditional replenishment 
solution problem forego motion compensation employ rudimentary form prediction 
frederick insight nv aggressive block conditional replenishment scheme 
model video frame partitioned small blocks blocks change threshold transmitted 
furthermore block updates intra coded dependent current block avoid persistent errors predictor loop 
low rate background process continuously refreshes blocks image guarantee lost blocks eventually retransmitted 
conditional replenishment works practice reasons 
block updates self correlated sense block usually transmitted motion scene 
block transmitted spatial locality motion 
lost block update retransmitted immediately side effect conditional replenishment 
second class video currently sent internet primarily video conferences large static backgrounds dominate scene conditional replenishment highly effective 
third replenishment acm multimedia november san ca decision carried pixel domain step processing encoder computation shed coding small portions image 
computational complexity reduced fact copy decoder need run encoder prediction carried 
nv codec 
high level compression model utilized nv decomposed follows threshold image blocks haar transform run length coder haar coef 
image blocks conditional replenishment stage transformed haar wavelet decomposition 
threshold applied coefficient coefficients magnitude threshold set zero 
process creates runs zeros coded stage 
haar transform requires additions subtractions threshold step requires conditionals algorithm low computational complexity 
unfortunately compression performance suffers haar transform provides relatively poor energy compaction signal entropy coder exclusively fixed size run length codes 
performance nv coder substantially improved changes replace haar transform discrete cosine transform dct energy compaction images 
ii replace coefficient threshold stage uniform quantizer reduce entropy quantized coefficients 
iii follow run length coder huffman coder compress symbol stream 
modified encoder structure dct huffman rl image blocks quantizer uniform coder intra 
changes amount applying compression advantages dct approaches jpeg mpeg nv coder 
scheme closely matches sense create variant leverages ideas nv 
fact turns get advantages aggressive conditional replenishment intra coded blocks fully compliant syntax 
vic technique call intra 
intra uses intra mode macroblock types uses macroblock addressing skip blocks 
encoder uses small simple subset specification implementation straightforward lines 
achieve reasonable computational performance folding quantization dct computation efficient multiply dct 
experimented vector radix separable row column approach having asymptotically higher complexity performed better case reduced memory traffic 
furthermore 
sends inter coded blocks algorithm need compute prediction error signal 
prunes computation eliminates need run copy decoder encoder eliminates inverse quantization inverse dct encoded block 
performance 
intra nv compression schemes similar conditional replenishment algorithms evaluate relative compression performance simply ignoring temporal dimension comparing image compression performance 
shows performance approaches canonical bit grayscale lena image 
encoders modified omit block addressing codes allow encoder operate non standard image size 
modification little impact results block addressing accounts small fraction bit rate 
peak signal noise ratio psnr plotted rate bits pixel 
multiple points obtained varying scalar quantizer nv dead zone threshold 
note nv algorithm intended operate non configurable fixed threshold explored thresholds complete rate distortion curve 
seen graph consistently outperforms nv coder db 
transmissions typically consider fixed distortion compare corresponding bit rates 
perspective nv bit rate times 
rate limited transmission translates factor decrease frame rate 
unfortunately compression advantages come cost increased computational complexity 
modern workstations handle computational burden typical mbone rates kb 
performance problems lower workstations reported 
believe problems solved gracefully shedding load adapt available cpu resources 
currently underway 
compared run time performance encoders vic ivs 
vic version ivs version tested sgi indy mhz mips sc built vino video device 
applications compiled gcc flag 
ran programs individually giving application cif sized high motion input low motion input 
order measure maximum sustainable compression rate disabled bandwidth controls tools ran test unloaded machine 
measured resulting frame rates decoding streams separate machines 
results follows high motion low motion cpu 
util 
ivs vic high motion case blocks frame coded gives worst case 
low motion scene vic ran full ntsc frame rate acm multimedia november san ca rate bits pixel psnr db nv relative compression performance nv intra 
operating utilization cpu 
measured utilization adjusts measure heterogeneous formats 
vic supports 
scheme discussed backward compatible nv supports formats 
philosophy bit stream produced sender decodable receiver 
sender employs hardware codec receivers able decode compressed stream software 
means implement software decoder supported compression format 
vic currently supports nv format sun format motion jpeg 
motion jpeg 
prevalence motion jpeg hardware widespread interest medium high speed testbeds motivated support hardware jpeg codecs vic 
vic additionally able decode jpeg streams software 
high data rates temporal redundancy motion jpeg lead computationally intensive decode process perform poorly tuning 
applied standard optimizations decoder efficient dct inverse quantization folded dct table driven huffman decoding minimization memory traffic dramatic speedup due novel computational pruning technique conditional replenishment 
maintain cache lowest frequency dct coefficients block 
decode new block compare coefficients newly decoded coefficients distance configurable threshold skip block entirely 
jpeg carry conditional replenishment compression algorithm apply conditional replenishment receiver prune unnecessary computation 
similar thresholding algorithm described different purpose motion detection encoder 
implementation status deployment source code vic publicly available november 
retrievals software release date march 
common workstation platforms supported vic rapidly ported unsupported systems user community 
vic put production environments 
early version vic research community carry distributed meetings fall 
bandwidth plentiful site transmit continuous video placing bottleneck vic 
experience led voice switched window feature model streams fully decoded displayed 
vic class projects berkeley external research projects 
test application study tenet real time protocols sequoia network 
fall vic berkeley campus distribute course lectures campus network 
equipped seminar room mbone transmission broadcast berkeley multimedia graphics seminar spring 
ftp ftp ee lbl gov conferencing vic acm multimedia november san ca november live surgery performed san francisco medical school transmitted medical conference europe vic intra 
surgical demonstration surgeon medical students hospitals london gothenburg sweden 
vic broadcast standard mbone events including nasa live space shuttle coverage ietf meetings usenix keynote addresses 
architecture firmly place features implemented unfinished pieces remain 
network delay adaptation algorithm vat implemented vic 
frames rendered soon frame packet arrives 
small amounts frame jitter tolerated problem severe lack playout schedule precludes cross media synchronization 
plan implement playback point algorithm vic port vat rtp order employ rtp synchronization vic vat 
disadvantages software compression schemes reliance computational resources local host 
hardware codec high workstation sources high rate video stream low host able decode render frame stream 
case packets dropped operating system due input buffer overflows quality degrade dramatically 
address problem working scheme application adapts gracefully available cpu resources shedding load 
mechanisms shedding load place control algorithms adapt load fluctuations implemented 
conference bus place evolving 
needed coordination protocols user interfaces different media tools move integrated model 
intra coder step better compression schemes internet video merely scratched surface problem 
particular single layer algorithm uniform quality video delivered receivers multicast transmission presence heterogeneous link bandwidths processing capabilities 
currently vic framework explore new approach heterogeneous multicast video transmission problem jointly design video compression algorithm network transport protocol 
developing layered video codec subband wavelet decomposition conditional replenishment tandem adaptive congestion control scheme 
striping compression layers different multicast groups receivers locally adapt fluctuations network capacity adding dropping layers 
summary described network software architectures vic 
building design applicationlevel framing achieved highly flexible decomposition sacrificing performance 
key benefit flexible framework ability experiment new video coding algorithms exploited development intra 
applying elements nv codec design traditional compression algorithm produced new coding scheme balances tradeoff compression gain robustness packet loss inherent internet 
described approach building networked multimedia configurations composable tools mechanisms deployed vic support composable architecture conference bus 
acknowledgments domenico ferrari originally proposed development video application provided support project 
hui zhang elan amir offered pointed advice structure 
grateful elan amir domenico ferrari sally floyd ron frederick amit gupta goldsmith vern paxson michael thierry turletti martin vetterli hui zhang providing helpful comments drafts 
anonymous reviewers excellent thorough feedback 
steven mccanne martin vetterli raj yavatkar encouraging write 
users mbone community provided valuable feedback contributed implementation fixed reported bugs ported vic numerous platforms provided tangible motivation 
sponsored lawrence berkeley national laboratory tenet group university california berkeley international computer science institute 
support provided graduate fellowship lawrence berkeley national laboratory director office energy research scientific computing staff department energy contract 
de ac sf ii sun microsystems iii digital equipment tenet research group national science foundation advanced research projects agency arpa cooperative agreement ncr national research initiatives ii digital equipment iii silicon graphics privacy enhancement internet electronic mail part iii algorithms modes identifiers 
arpanet working group requests comment ddn network information center feb 
rfc 
ferrari mah moran verma zhang tenet real time protocol acm multimedia november san ca suite design implementation experiences 
appear ieee acm transactions networking 
knightly zhang experiments tenet real time protocol suite sequoia wide area network 
proceedings acm multimedia san francisco ca oct 
bolot 
packet delay loss behavior internet 
proceedings sigcomm san francisco ca sept acm pp 

braden zhang estrin herzog jamin resource reservation protocol rsvp version function specification july 
internet draft expires 
casner deering ietf internet 
connexions 
cor comparative performance evaluation algorithms fast computation dimensional dct 
proceedings workshop circuits systems signal processing mar 
clark tennenhouse architectural considerations new generation protocols 
proceedings sigcomm philadelphia pa sept acm 
compton tennenhouse collaborative load shedding media applications 
international conference multimedia computing systems may 
fong skinner lang object oriented toolkit multimedia collaboration 
proceedings acm multimedia oct acm pp 

deering multicast routing datagram internetwork 
phd thesis stanford university dec 
fall pasquale mccanne workstation video playback performance competitive process load 
proceedings fifth international workshop network os support digital audio video durham nh apr 
fenner frederick mccanne rtp encapsulation jpeg compressed video 
internet engineering task force audio video transport working group mar 
internet draft expires 
ferrari verma scheme real time communication services wide area networks 
ieee journal selected areas communications apr 
floyd jacobson mccanne liu zhang reliable multicast framework lightweight sessions application level framing 
proceedings sigcomm boston ma sept acm 
frederick network video nv 
xerox palo alto research center 
software line frederick experiences real time software video compression 
proceedings sixth international workshop packet video portland sept 
ftp ftp parc xerox com net research garrett vetterli joint source channel coding statistically multiplexed real time services packet networks 
ieee acm transactions networking feb 
layer coding video signals vbr networks 
ieee journal selected areas communications june 
handley ucl codec controller dec 
line html document heckbert color image quantization frame buffer display 
proceedings siggraph 
hoffman fernando goyal rtp payload format mpeg mpeg video 
internet engineering task force audio video transport working group june 
internet draft expires 
jacobson session directory 
lawrence berkeley laboratory 
software line jacobson sigcomm tutorial multimedia conferencing internet aug 
jacobson mccanne lbl whiteboard 
lawrence berkeley laboratory 
software line jacobson mccanne visual audio tool 
lawrence berkeley laboratory 
software line jacobson mccanne floyd privacy architecture lightweight sessions sept 
arpa network pi meeting presentation jain fundamentals digital image processing 
prentice hall international 
wetherall house programming system visual processing digital video 
proceedings acm multimedia oct acm pp 

mccanne vetterli joint source channel coding multicast packet video 
ieee international conference image processing oct 
mines friesen yang dave plug play model distributed multimedia application development 
proceedings acm multimedia oct acm pp 

mounts video encoding system conditional picture element replenishment 
bell systems technical journal sept 
ousterhout toolkit tcl language 
proceedings winter usenix technical conference nashville tn jan usenix 
ousterhout tcl tk toolkit 
addison wesley 
patel smith rowe performance software mpeg video decoder 
proceedings acm multimedia aug acm pp 

www cs ucl ac uk mice codec manual doc html ftp ftp ee lbl gov conferencing sd ftp ftp ee lbl gov conferencing wb ftp ftp ee lbl gov conferencing vat ftp ftp ee lbl gov talks lws privacy ps acm multimedia november san ca pennebaker mitchell jpeg image data compression standard 
van nostrand reinhold 
roseman greenberg groupkit groupware toolkit building real time conferencing applications 
proceedings conference computer supported cooperative oct 
rowe patel smith liu mpeg video software representation transmission playback 
high speed network multimedia computing symp 
elec 
imaging sci 
tech 
san jose ca feb 
schulzrinne voice communication internet network voice terminal 
technical report tr dept computer science university massachusetts amherst massachusetts july 
schulzrinne casner frederick ja rtp transport protocol real time applications 
internet engineering task force audio video transport working group mar 
internet draft expires 
zakhor multi rate subband coding video 
ieee transactions image processing sept 
turletti inria videoconferencing system ivs 
connexions oct 
turletti bolot 
issues multicast video distribution heterogeneous packet networks 
proceedings sixth international workshop packet video portland sept 
turletti huitema rtp payload video streams 
internet engineering task force audio video transport working group july 
internet draft expires 
video codec audiovisual services kb 
recommendation 
