ai communications 
computing cognition information compression gerard wolff january school electronic engineering computer science university wales dean street bangor ll ut uk 
telephone 
fax 
mail gerry sees bangor ac uk 
article develops idea storage processing information computers brains may understood information compression 
article reviews meant information particular meant redundancy concept fundamental methods information compression 
principles information compression described 
major part article describes principles may seen range observations ideas computing cognition phenomena adaptation inhibition nervous systems neural computing creation recognition objects classes perception cognition stereoscopic vision random dot stereograms organisation natural languages organisation grammars organisation functional structured logic object oriented computer programs application de referencing identifiers computing retrieval information databases access retrieval information computer memory logical deduction resolution theorem proving inductive reasoning probabilistic inference parsing normalisation databases 
theme article storage processing information computers brains may understood information compression 
brains nervous systems may governed kind principle economy new idea 
currently fashion notion attracted intermittent interest long ago zipf human behaviour principle effort attneave pioneering ideas information processing visual perception 
studies tradition referenced appropriate points 
economy may significant feature computing widely recognised 
prominent course literature data compression features specialised aspects computing discussed 
intimate connection appears exist information compression familiar aspects computing widely understood 
previous article developed idea proposed theory computing wolff drawing earlier research inductive learning wolff 
prototypes developed new generation computing system theory wolff wolff chapter submitted 
purpose article complement relatively narrow focus broader perspective ways information compression may seen diverse areas computing cognition 
article aims show variety established ideas may seen information compression illustrate broad scope principles information systems kinds man natural 
section reviews meant information particular meant redundancy concept fundamental methods information compression 
principles information compression reviewed 
major part article survey range observations ideas computing cognition may understood terms information compression 
information redundancy article discussion assumes information dimensional string comprising sequence atomic symbols 
symbol token drawn replacement set available symbol types 
sets symbol types may binary digits alphanumeric characters convenient set 
ideas described generalized cases information takes form continuously varying signal 
analogue cases approximated digital terms desired level precision varying granularity 
ideas probably generalized cases information distributed dimensional higher dimensional pattern 
say dimensional stream atomic symbols subject discussion 
sub sections describe distinct views information redundancy appear complement 
shannon information theory claude shannon defined information terms probabilities discrete symbol types string shannon weaver 
shannon information theory originally called communication theory average quantity information conveyed symbol string defined log probability ith symbol type set available symbol types 
base logarithm information measured bits 
probabilities members set symbol types equal location string symbol types information conveyed string theoretical maximum 
string sequence symbols random 
probabilities symbol types equal position string information conveyed string maximum difference theoretical maximum information contained string called redundancy 
existence redundancy string symbols means string random 
redundancy information correlate subjective impression organisation structure information 
redundancy relatively frequent repetition patterns term probability section covers absolute probability symbol type contextual probability meaning probability symbol type context 
absolute probability symbol type derived straightforward way frequency symbol type string 
true contextual probability provided notion context adequately defined 
way dealing problem context convert contextual probabilities absolute probabilities 
done notion symbol type generalized atomic symbols sequences atomic symbols 
sequence atomic symbols may regarded composite symbol type pattern 
case previously regarded context symbol part larger pattern 
shannon definition information says effect pattern repeats string possible patterns size string contains redundancy 
possible patterns size occur equally string random contains redundancy 
just said imply atomic symbols pattern necessarily contiguous coherent 
sequence symbols repeats sequences size represents redundancy pattern discontinuous fragmented interspersed symbols 
significance point considered relevant points 
view redundancy relatively frequent repetition patterns reflects everyday meaning redundancy surplus requirements 
information repeats information unnecessary terms communicative value 
repeated information may course useful purposes error correction increasing speed responses computer systems 
algorithmic information theory algorithmic information theory ait redundancy defined terms compressibility information see example chaitin 
string generated computer program shorter string information random contains redundancy 
program information regarded random contains redundancy 
randomness redundancy ait different appear shannon theory views probably complementary conflict 
discussion help clarify may relate 
compression principles variety methods compressing information purpose article review exhaustively 
useful descriptions held storer 
main interest principles underly available methods sections article ways principles appear diverse areas computing cognition 
principles described appear valid simpler standard techniques information compression 
suitable interpretation analysis may prove true elaborate techniques linear predictive coding see example fractals becker vectors representing graphical information compressed form 
establishing scope principles matter research 
basis techniques information compression removing redundancy information 
frame kinds information compression distinguished storer lossless compression 
kind technique redundant information redundant information removed 
non redundant information preserved possible principle usually practice restore original information complete fidelity 
lossy compression 
lossy compression techniques redundant information removed non redundant information 
cases loss non redundant information means original perfectly restored 
penalty outweighed benefit extra compression achieved cases reduction amount processing needed achieve compression 
lossless lossy compression techniques aspects need considered compressed information organised coded 
redundancy information discovered removed 
coding information compression idea redundancy relatively frequent repetition patterns discussed appears key methods encoding information compressed form redundancy information reduced decreasing repetition patterns repeat patterns size 
see link shannon theory ait 
information contains relatively frequent repetition patterns contains redundancy shannon terms 
fact relatively frequent repetition means information compressible means information redundant terms ait 
idea reducing redundancy reducing repetition patterns comes main forms chunking tags run length coding schema plus correction 
chunking tags pattern contiguous symbols repeated identically locations body information multiple instances may merged unified single chunk 
merging patterns way reduces redundancy provision loses non redundant information patterns located original information 
information locations preserved necessary give chunk kind name label tag place instance tag chunk locations chunk removed 
course chunk tags sense terms information saving information cost tags saved merging patterns 
connection redundancy removing formation chunks tags rigid repeating instances pattern may merged form chunk tags 
compression case lossy information locations chunk discarded 
tags useful reasons compression tagged object 
happen referencing books articles discussed briefly 
variations refinements chunking tags idea 
known refinement huffman coding assigns shorter tags commonly occurring chunks longer tags rare ones see storer discussion 
run length coding symbol pattern contiguous symbols forms repeating sequence symbol pattern may recorded show repeats 
example sequence ones binary coded information may reduced 
lossless case number repetitions recorded original sequence may recreated 
second lossy case fact repetition marked non 
main term unification article mean simple merging multiple instances pattern 
idea related simpler concept unification logic discussed article 
redundant information number repetitions discarded 
schema plus correction patterns similar identical parts patterns identical may recorded schema parts different may coded corrections schema 
schema recurrent pattern may discontinuous fragmented way mentioned earlier 
negation operator normally seen logical primitive may context schema plus correction idea seen aid compression 
today shopping list week item omitted economical shortest list specify today list week soap write full 
finding redundancy technique encoding information reduced redundancy necessary find redundancy removed 
discussed redundancy understood recurrent patterns finding redundancy means comparing patterns see match 
information compression want merely find redundancy information want find possible practically possible reasonable amount effort 
maximising amount redundancy means maximising frequency ith member set patterns size bits 
patterns big frequent best 
formula applies irrespective patterns coherent fragmented 
maximising means searching space possible unifications set big frequent patterns gives best value 
string containing atomic symbols number possible patterns symbol order preserved including single atomic symbols composite patterns coherent fragmented number possible comparisons patterns number possible pairings patterns smallest values value large corresponding value huge 
short space possible comparisons patterns space possible unifications normally extremely large 
space typically large processing costs searching degree normally significant needs weighed benefits compression maximising amount redundancy 
connection main tactics relevant restricting search space 
search costs may kept bounds searching sub set set possible comparisons 
restrictions kind seen practical techniques information compression comparisons may sub strings size maximum size chunks may restricted constraint may imposed 
metrics guide search 
costs searching may minimised undue sacrifices effectiveness applying measure redundancy guide search 
search techniques hill climbing beam search best search branch search search effort curtailed parts search space proved sterile concentrated areas indicated metric 
coding reduced redundancy computing cognition section describe variety observations ideas fields artificial computing natural cognition plausibly seen examples information compression 
concepts cognate fields theoretical linguistics included discussion 
earlier examples relate mainly brain nervous system examples come mainly computing 
separation rigid similar ideas appear areas 
adaptation inhibition nervous system familiar observation sensitive changes stimulation constant stimulation 
notice sound new environment hum motor switched sound continues adapt cease aware 
motor switched notice change conscious new adapt giving attention 
kind adaptation level conscious awareness seen lower level way individual nerve cells respond stimulation 
studies described nerve cells horseshoe crab kinds effects observed creature observed single studies mammals appear widespread kinds animal including humans 
complex modes responding existence invalidate general proposition nervous tissue relatively sensitive changes stimulation relatively insensitive constant stimulation 
shows rate firing single receptor eye changes onset offset light miller 
receptor responds burst spike potentials light switched 
light stays bright time rate firing quickly settles background rate 
light switched brief dip rate firing followed resumption background rate 
please insert 
variation rate firing single response changing levels illumination miller 
relative sensitivity changes stimulation relative insensitivity constant stimulation seen spatial dimension 
shows sets recordings single 
sets recordings eye crab illuminated rectangular area bordered dark rectangle size 
cases successive recordings taken pair rectangles successive positions eye line right angles boundary light bright areas 
achieves effect easier implement keeping rectangles position recordings range receptors bright dark areas 
please insert 
sets recordings single 
top set recordings triangles recordings taken masked receiving light 
case target receptor responds frequent impulses light bright sharply lower rate light dark 
bottom set recordings circles mask removed exposed pattern bright dark rectangles 
situation target receptor fires near background rate areas evenly illuminated bright dark near border bright dark areas positive negative responses exaggerated 
spatial dimension temporal dimension changes stimulation significant constant stimulation 
widely recognised sensitivity temporal spatial discontinuities stimulation due action inhibitory pathways nervous system counteract excitation nerve cells 
way inhibition may explain observations just described range phenomena mach bands simultaneous contrast motion sensitivity described discussed von sy 
recognised time phenomena may understood terms principles economy neural functioning see example barlow 
terms discussed earlier adaptation inhibition nervous functioning effect similar run length coding technique data compression 
economy achieved cases coding changes information reducing eliminating redundancy represented sequences areas uniform von sy 
neural computing idea principles economy may apply neural functioning recognised theory associated artificial neural computing hopfield nets hopfield simulated annealing hinton sejnowski 
notable exceptions mead little attempt development artificial neural networks exploit kinds mechanisms real nervous systems apparently achieve information compression 
objects classes perception cognition seeing world objects things everyday experiences familiar realise remarkable 
automatic unconscious way see world composed discrete objects 
imagine film taken fixed camera tennis ball crossing field view 
successive frames show ball sequence positions constant background 
taken frames contain large proportion redundancy background repeats frame apart part background hidden ball ball repeats frame assume spinning 
uniform areas frame represent redundancy 
simple record information cinema film digitised images insensitive redundancy frames frames concept ball background 
people automatically collapse images ball coherent concept likewise see background sequence frames 
remarkable piece information compression especially performed real time nerve cells electronic standards exceedingly slow 
point mead referenced throws useful light kind compression may achieved simulated mammalian retina necessary speed achieved slow components 
keeping said earlier neural functioning inhibitory pathways processes significant 
course concepts real world objects normally complicated example suggests 
appearance typical object varies significantly depending orientation view point 
cases concept form accommodate distinct related views 
normally think unitary entity regarded accurately class inter related snapshots views classes 
notwithstanding complexities everyday notion object similar previously described concept chunk 
chunks objects names tags chunks object name 
object name may chunk seen product processes extracting redundancy information 
stereoscopic vision random dot stereograms animal visual fields eyes overlap extensively cat monkey man obvious type redundancy messages reaching brain nearly exact eye message eye 
barlow 
stereoscopic vision phenomenon random dot stereograms provides evidence information compression nervous systems 
provides striking illustration connection redundancy extraction tendency see world discrete objects 
images random pattern black white pixels 
image contains little redundancy 
images taken substantial redundancy designed quite 
difference square area left image shifted pixels right compared corresponding square area right image illustrated 
please insert 
random dot julesz 
please insert 
diagram show relationship left right images julesz 
images viewed left image seen left eye right image right eye brain fuses images areas squares seen square areas merged single square object appears stand front background 
random dot stereograms normally illustrate study human abilities perceive depth stereoscopic vision 
examples ability extract redundancy information merging matching patterns 
central square background chunks sense described earlier owes perceptual existence merging matching patterns 
redundancy exists images coupled ability find gives coherence objects see 
vivid boundary see square background product search processes successfully find maximum possible unification images 
everyday vision tennis ball example discussed recognition object may owe redundancy frame 
images random dot contains little redundancy ability see coherent objects stereograms demonstrates depend redundancy image derive object concept exclusively redundancy images 
classes sub classes commonly recognised objects may grouped classes classes may grouped higher level classes 
cross classification overlapping classes woman doctor seen 
class may defined extensionally listing constituent objects classes 
may defined intensionally terms attributes members class common 
commonly classes single attribute need necessarily shared members class similarity members class degree sharing attributes gives natural classes coherence 
grouping things similarity gives means compressing information describes 
attribute shared members class case set alternative attributes shared members class need recorded repeated member 
shared attributes class constitute schema sense discussed earlier may corrected member addition specific information member 
widespread classes subclasses thinking language coupled obvious value compressing information strongly suggests store classes attributes way 
difficult obtain direct confirmation idea 
attempts verify idea experimentally collins quillian proved inconclusive 
probably difficulties making valid inferences experimental studies human cognition intrinsic defect idea 
natural languages samples natural language english french normally redundant miller friedman 
redundancy serves useful purpose helping listeners readers correct errors compensate noise communication certainly reason natural languages developed way 
despite existence redundancy natural languages provide example economical coding cognition 
content word natural language noun verb adjective adverb may regarded tag label meaning 
meaning typical word relatively complex chunk knowledge associated word 
convenient brief label table concept horizontal platform vertical supports normally feet high normally long repeated relevant context slow language ents lord rings 
sentence normally highly coded compressed representation meanings 
obvious example tags natural language books articles 
zipf example appears second paragraph article paragraph fuller details article 
details may seen label book 
tag circumvent need repeat information redundantly contexts 
convenient device reasons consistency style appears book article 
leaving section natural language relevant comment zipf extensive studies distribution words natural languages zipf principle effort zipf mentioned earlier proposed explain observations 
zipf arguments interesting quite persuasive mandelbrot pointed phenomena described zipf law due profound random process creating words boundaries words natural languages 
george miller words impossible believe guide choice letter sequences random processes control monkey choice highly plausible arguments zipf puts forward relevance 
vii 
jury 
grammars grammar may regarded compressed version language represents 
accurately notational conventions grammars may regarded set devices may normally encode information economical form 
necessarily effect grammar 
context free phrase structure grammars compression illustrated grammar shown 
grammar written notational conventions context free phrase structure grammar cf psg simple type grammar essentially backus normal form bnf commonly represent syntax computer languages 
np np np boy girl likes meets 
context free phrase structure grammar 
grammar represents set terminal strings sentences include boy meets girl girl likes boy redundancy represented repeated instances individual words boy girl noun phrase groupings boy girl repeating elements chunks information sense described earlier 
symbols np tags identify corresponding chunks contexts occur 
notice grammar just shown says order sentences may appear says sentence may appear 
grammar typically lossy compression sample language represents 
chunks tags device permits encoding recursion seen form run length coding 
fragment grammar shown generates phrases tall girl short boy notice number instances phrase specified recursion represents lossy compression finite set terminal strings 
np null tall short boy girl 
cf psg recursion 
powerful grammars recognised time pointed notably chomsky cf powerful represent structure natural languages effectively 
shown examples just cf represent simple sub sets english succinct form 
full complexity english natural language accommodated cf psg cost large amounts redundancy grammatical description 
phenomenon discontinuous dependencies highlights shortcomings 
sentence winds west strong number dependency winds plural noun followed plural verb likewise 
dependency discontinuous jumps intervening structure west example intervening structure arbitrarily large 
represent kind dependency cf psg requires set rules singular sentences set rules plurals sets rules similar 
consequent redundancy grammar multiply substantially dependencies kind included 
problem largely overcome powerful kind grammatical system definite clause grammar pereira warren transformational grammar see example radford 
kind system may seen superset cf psg additional mechanisms things allow discontinuous dependencies represented undue redundancy 
appropriate discuss systems detail 
general seen variations schema plus correction idea described 
provide means representing sentence structure schema may example earlier corrected addition singular plural components appropriate points structure 
computer programs functions computing mathematics defined intensionally terms rules operations required perform function 
functions defined extensionally specifying outputs input combination inputs 
idea applies functions various kinds total partial multi programs information systems general 
wolff submitted discussed computer program mathematical function may seen compressed representation inputs outputs process designing programs functions may seen largely process information compression execution programs functions may seen terms information compression 
section view computer programs conventionally set operations discuss principles compression may seen way programs organised 
way notational conventions grammars may regarded means compressing linguistic information conventions computer programs may seen devices representing computing operations succinct form 
grammars provision facilities guarantee best effect 
compression techniques may seen functional structured logic programming fortiori object oriented programming 
functional structured programming chunking tags 
set statements repeated parts program natural declare function procedure sub routine program replace sequence call function part program sequence occurred 
example compression function may regarded chunk name function tag 
programmer chooses create function situation leave repeated sequences macros depends things sequence big justify cost giving name run time overhead typically associated functions conventional computers acceptable application hand 
run length coding 
body code repeated location program may declared function marked block fact repetition may marked familiar conventions showing iteration repeat 
form run length coding 
recursion available procedural programming languages means showing repetition program operations 
essentially recursion grammars 
schema plus correction 
happens software design sets statements similar identical 
cases natural merge parts provide conditional statements case statements select alternative paths software 
complete set statements including conditional statements may regarded schema describing set behaviours program grammar describes set terminal strings 
specify particular path program necessary supply information needed conditional statements relevant choices 
additional information correction schema represented program code 
program statements encapsulated function corrections program schema normally supplied arguments parameters function 
logic programming similar ideas appear logic programming languages prolog 
example chunking tags idea seen structure prolog horn clause 
predicate head clause may seen label tag body clause may seen chunk labels 
functional structured programs prolog program may seen schema represents set possible behaviours program 
information supplied prolog query serves correction schema reduces range possible behaviours program 
repetition prolog programs coded recursion 
object oriented programming object oriented programming oop originated simula developed smalltalk languages embraces kinds mechanisms just described includes additional set ideas may understood terms information compression 
important idea oop introduced simula correspondence objects real world objects software 
example oo program managing warehouse software object person employed warehouse software object shelf bay software object item stored 
oo terms software object discrete piece program data structures associated procedural code 
example object person program respond messages request person name instruction move item location 
superficially redundant way design software mean code repeated object type 
course things done 
real world objects economy achieved classes sub classes 
oo programming languages object belongs class oo languages object assigned class code class stored program inherited instance class 
hierarchy classes inheritance code level individual objects 
individual objects recognised principle oop classes defined oo program correspond classes recognise real world 
warehouse example class person shelf item 
class person example may divided sub classes manager foreman operative ideas described software objects classes inheritance examples way information compression pervades organization computer programs discussed earlier objects classes see real world may understood terms subjective compression perceptual information received world 
similar devices software design structure software reflect patterns redundancy real world brains apparently efficient exploiting 
program code class hierarchies inheritance code powerful mechanisms information compression 
instances class may multiplied creating corresponding redundancy data structures procedural code common inherited class definition 
likewise sets classes common attributes may inherit attributes higher level class 
mentioned connection natural classes mechanisms class hierarchies inheritance may seen example schema plus correction technique information compression class definition schema information supplied new instance class created name object correction schema 
similar way high level class may seen relatively schema refined corrected specific information contained lower level classes 
pertinent comment passing advantages designing software way advantage psychological software reflects structure established concepts easier understand software 
subtle important advantage software designed way normally easier modify fact structures reflected software persistent repeating patterns world means new versions software refinements rearrangements established objects classes radical code 
third advantage software designers mechanisms information compression piece information recorded program change information needs need check correctly repeated parts program aspects computing seen uses identifiers tags computing names functions procedures sub routines names oop objects classes objects identifiers rules grammars 
examples tags computing include names tables records databases 
names fields tuples records 
names files 
names variables arrays data structures computer programs 
labels program statements go statements 
names directories unix ms dos similar operating systems tags sense article 
hierarchical directory structure may seen simple form class hierarchy may seen restricted form schema plus correction 
name directory name applies files sub directories directory files sub directories lower levels 
redundantly repeat name file sub directory applies name recorded effect inherited objects lower levels 
searching redundancy computing cognition far reviewed variety ways redundancy extraction appears computing cognition focusing mainly ways coding techniques relate fields 
shall look dynamic side coin things computing cognition may understood searching redundancy may removed coding techniques 
seen searching redundancy understood search patterns match seen normally need circumscribe search guide search measure redundancy 
sections follow describe ways kind search appears computing cognition 
section coding earlier examples mainly natural information processing examples computing 
random dot stereograms particularly clear example search problem brain enable see kinds random dot described earlier 
case assuming left image number pixels right image size search space number possible patterns image calculated way 
fact images dimensional needs special provision original formula covers combinations atomic symbols 
realistic number pixels space large 
large processing power represented neurones brain space searched seconds effect searching kind described earlier probably restriction comparisons patterns 
david marr chapter describes algorithms solve problem 
line just said algorithms rely constraints search space may seen incremental search guided redundancy related metrics 
recognition objects patterns seen perceptual objects understood chunks promote economy storage processing perceptual information 
create chunks perceptual experience flexible efficient ability recognise objects patterns stored 
recognise objects patterns course subject research certainly understood 
complexities subject problem mentioned earlier recognise objects despite variations appearance due variations orientation 
likewise recognise patterns handwriting despite variations style 
despite complexities reasonably clear general terms phenomenon recognition understood information compression 
recognition object pattern means partial complete unification perceptual input corresponding pattern memory reduction information jointly contain 
grammar discovery language acquisition kinds learning suggested earlier view grammar compressed version terminal strings natural see process discovering inferring grammar examples largely matter discovering redundancy examples removing coding devices provided chosen grammatical notation 
grammar normally incomplete representation sample corresponding language process inferring grammar normally mean loss non redundant information 
line expectations practical techniques grammar discovery largely search repeating patterns data unification repeating patterns assignment tags quite discard portion non redundant information samples wolff 
principles economy recognised field years cook rosenfeld 
learning language children clearly richer complex process grammar discovery normally understood 
computer models language learning developed earlier research principles information compression show remarkable correspondences learning behaviour documented phenomena way children learn language wolff unsupervised induction grammatical structure including segmental structure words phrases disjunctive structure parts speech classes 
generalisation rules correction external error correction 
way rate acquisition words structures varies learning proceeds 
order words acquired 
brown law cumulative complexity 
episodic semantic shift 
learning semantic structures integration syntax 
word frequency effect 
evidence lends support proposition language learning may understood large measure information compression 
kinds learning analysed terms economical coding 
pioneering learning classifications wallace boulton followed related economical description data wallace freeman rissanen cheeseman pednault forsyth 
significant strand thinking close connection compact coding probabilistic inference 
query example section follow discuss areas computing pattern matching search kinds described earlier seen 
unification corresponding compression information obvious recognised cases 
commonly technique retrieving records database provide query form incomplete record example kind complete record retrieved 
illustrated query example general form complete records contains asterisks information missing 
search mechanisms database match query records database retrieve zero records fit 
example query name john address new street records database name susan smith address new street chicago name john jones address new street edinburgh name john black address long street london name david baker address avenue des pins paris 

query database records illustrate query example 
systems kind driven kind redundancy related metric 
degree matching query records shown 
john jones new street edinburgh preferred choice gives better fit records 
retrieval record may seen unification record query corresponding extraction redundancy 
compression normally appearing temporarily operator screen 
query operation completed records database normally preserved original form unification query normally deleted system 
de referencing identifiers computing identifiers names labels tags kinds described earlier names functions procedures sub routines names oop objects classes objects names directories files psychological function providing convenient handle objects thinking talking writing 
name important computing systems aid finding particular information object objects typical system 
finding object means name de referencing identifier means searching match appears associated object call program function pattern appears attached object identifies function name function declaration 
finding object means name simple form query example 
name incomplete record constitutes query object name corresponds complete record retrieved 
query example normally kind redundancy related metric applied search 
conventional computing systems full match including termination marker accepted partial matches rejected 
character character search algorithm may seen simple form hill climbing search 
seemingly direct technique hash coding exploits memory access mechanisms described may understood terms metrics guided search 
query example unification compression obvious pattern matching search 
certainly computer program normally modified de referencing identifiers contains 
unification compression confined data structures created course program execution 
memory access computing systems mechanisms accessing retrieving information computer memory operate lower level computing systems may seen similar terms 
information contained computer memory data statements program accessed sending address cpu computer memory address bus 
address bit pattern decoded logic circuits computer memory 
effect directing pattern part memory required information stored 
logic circuits memory decode bit pattern kind effect labelling parts memory individual addresses 
accessing part memory means address may seen process finding match access pattern address represented computer memory unification patterns 
search process driven metric leads full match successively improving partial matches 
logical deduction logical deduction appears systems prolog robinson resolution principle 
key resolution unification sense different related 
unification resolution sense means giving values variables structures 
unification sense embraces simpler sense word article 
significant part logical deduction appears systems prolog comparison matching patterns effective merging unification 
wide scope unification sense logic recognised useful review knight 
case query example de referencing identifiers memory access systems resolution theorem proving normally look full match patterns reject partial matches 
feature search techniques normally find matching patterns may seen crude effective application metrics pattern matching unification 
modus ponens similar ideas may seen traditional treatments logic 
consider example modus ponens form logical deduction may represented logical notation example ordinary language today tuesday tomorrow wednesday 
today tuesday 
tomorrow wednesday 
implication today tuesday implies tomorrow wednesday may seen pattern record database 
proposition today tuesday may seen incomplete pattern kind database query discussed earlier 
logical deduction may seen unification incomplete pattern larger pattern consequent marking tomorrow wednesday 
course lot said logic 
wolff chapter discussed associated issues including notions true false negation chaining logical deductions 
inductive reasoning probabilistic inference logicians philosophers traditionally sharp distinction deductive reasoning follow certainty premises inductive reasoning uncertain inferences premises apparent certainty deduction missing 
popular example inductive reasoning way low latitudes expect sun rise morning done experience past 
past experience proposition night time premises lead conclude sun rise hours 
expectation strong possibility may proved wrong 
countless examples expectations governed experience 
expect spring spring leaves fall fall 
expect fire see smoke 
expect water freeze low temperatures 
expect broke christmas 
way mentally merge repeating instances pattern experience may seen evidence chunking human cognition evidence human cognition geared extraction redundancy information 
query example de referencing identifiers memory access logical deduction inductive reasoning may seen matching unification pattern larger pattern part 
experience day night sequential pattern night sunrise 
observation night time pattern night 
second pattern unify part pattern effect mark remainder pattern expectation 
noted earlier significant body economical description connection probabilistic inference 
connection topics topics pattern matching unification properly recognised 
possible integration deductive inductive reasoning deductive inductive reasoning may seen matching unification pattern larger pattern contains suggests distinct traditionally thought 
example modus ponens reasoning earlier may seen inductive reasoning way wednesday follows tuesday frequently repeated pattern experience observation today tuesday leads inductive expectation tomorrow wednesday 
possible integration deductive inductive reasoning discussed fully wolff wolff submitted 
normalisation databases process normalisation applied design relational databases essentially process removing redundancy framework tables columns database date 
example database contains tables buildings sites containing columns location value date acquired date disposal columns may extracted placed table property 
suitable provision linkage tables information may inherited tables buildings sites sub classes property manner object oriented design 
parsing process parsing string kind analysis computer program done front compiler syntactic analysis natural language text process relating grammar text analysed 
large extent means searching match terminal elements grammar corresponding patterns text unification patterns 
means de referencing identifiers rules grammar discussed means matching unification search 
parsing guided kind redundancy related metric apparent ambiguous grammars relatively sophisticated parsers associated natural language processing see example sp rk jones wilkes 
cases alternative analyses may graded grammar fits text 
supposedly unambiguous grammars simple parsing techniques associated computer languages implicit metric distinction successful full parse text failed alternatives way identifiers normally recognised computing 
article tried show information compression pervasive feature information systems natural artificial 
accepted pertinent ask observation significant merely incidental feature systems 
significance information compression natural artificial mechanisms storage processing information free expect find principles economy maximise ratio benefits costs 
may argued information compression information systems reasonable response need get systems 
considerations suggest information compression significant gather information store brains computers expect useful 
natural artificial information processing founded inductive reasoning principle past guide 
stored information useful new information related 
stored patterns information possible recognize patterns new information 
recognition means matching stored patterns new information unification patterns 
means information compression ways discussed 
inductive principle past guide may stated precisely expectation patterns occurred relatively frequently past tend recur 
relatively frequent repetition patterns means redundancy 
possible see pattern having repeated relatively frequently past implicit unification instances means extraction redundancy compression information ways discussed 
arguments point information compression incidental feature information systems 
intimately related principle inductive reasoning provides foundation raison tre kinds system storage processing information 
implications readers pragmatic turn mind may say 
benefits may interpretation phenomena information processing puts information compression centre stage 
new theory computing cognition discussed view may developed general theory computing cognition wolff submitted 
potential idea radical simplification integration concepts fields 
theory offers new insights suggests new directions research 
simplified view computing mean benefits concerned application computers development computer systems 
substantial benefit teaching computer skills 
new generation computing concrete terms view described mean new better kinds computer 
conventional computers information compression 
new improved methods information compression central feature proposals new generation computer dubbed sp wolff wolff chapter wolff submitted 
prototype systems developed described publications just referenced demonstrate logical deduction probabilistic inference inductive learning information retrieval capabilities may derived information compression 
evidence date suggests fully developed sp system provide benefits advantages compared conventional computers storage retrieval knowledge software engineering artificial intelligence wolff chapter 
ideas developed fronts developing sp system running varied examples provides forcing ground theory applications 
parallel studying range established concepts computing cognition related fields mathematics linguistics see may interpreted terms information compression 
area research promises fruitful field investigation 
contributions researchers welcome 
am grateful chris tim porter department mathematics university wales bangor advice formulae 
am grateful graham stephen constructive comments earlier draft article correction errors 
reported article supported part uk science engineering research council gr 
attneave 
informational aspects visual perception 
psychological review 
barlow 
trigger features adaptation economy impulses 
ed information processing nervous system 
new york springer pp 
becker 
dynamical systems fractals cambridge cambridge university press 
brown 
language early stages 
penguin 
chaitin 
algorithmic information theory 
cambridge cambridge university press 
chaitin 
randomness arithmetic 
scientific american 
cheeseman 
finding probable model 
langley eds computational models scientific discovery theory formation 
san mateo ca morgan kaufmann 
chomsky 
syntactic structures hague mouton 
collins quillian 
experiments semantic memory language comprehension 
gregg ed cognition learning memory 
new york wiley pp 

logic 
london macmillan 
cook rosenfeld 
experiments grammatical inference 
simon ed computer oriented learning processes pp 
date 
database systems vol reading mass addison wesley 
pfaff 
computer graphics programming berlin springer verlag 
forsyth 
ockham razor gardening tool simplifying discrimination trees entropy min max 
milne eds research development expert systems ix cambridge cambridge university press pp 
held marshall 
data compression techniques applications hardware software considerations second edition chichester wiley 
hinton sejnowski 
learning relearning boltzmann machines 
rumelhart mcclelland eds parallel distributed processing vol cambridge mass mit press pp 
hopfield 
neural networks physical systems emergent collective properties 
proceedings national academy science usa 
julesz 
foundations perception chicago chicago university press 
knight 
unification multidisciplinary survey 
acm computing surveys 
mead 
silicon retina 
scientific american 
mandelbrot 
linguistique statistique 
mandelbrot logique langage theorie de information paris presses de france pp 
marr 
vision computational investigation human representation processing visual information 
san francisco freeman 
miller 

zipf 
miller friedman 
reconstruction english texts 
information control 
pednault 
minimal length encoding inductive inference 
piatetsky shapiro frawley eds knowledge discovery databases cambridge mass mit press 
pereira warren 
definite clause grammars language analysis survey formalism comparison augmented transition networks 
artificial intelligence 
radford 
transformational grammar course cambridge cambridge university press 

response optic nerve fibres patterns illumination receptor mosaic 
journal general physiology 
miller 
spatial temporal aspects retinal inhibitory interaction 
journal optical society america 
rissanen 
stochastic complexity 
journal royal statistical society 
robinson 
machine oriented logic resolution principle 
journal association computing machinery 
shannon weaver 
mathematical theory communication urbana university illinois press 
boyd coleman 
low bit rate speech coding practical applications 
eds speech language processing london chapman hall 
sp jones wilkes eds 
automatic natural language parsing chichester ellis horwood 
storer 
data compression methods theory rockville maryland computer science press 

languages machines theory computer science reading mass addison wesley 
von sy 
sensory inhibition princeton nj princeton university press 
wallace boulton 
information measure classification 
computer journal 
wallace freeman 
estimation inference compact coding 
journal royal statistical 
wolff submitted publication 
new concept software 
wolff submitted publication 
computing compression sp 
wolff 
theory cognition computing chichester ellis horwood 
wolff 
integration learning logical deduction probabilistic inductive inference 
invited international workshop inductive logic programming vienna costello portugal 
wolff 
unifying computing inductive learning logic 
proceedings expert systems muir eds research development expert systems vii cambridge cambridge university press pp 
wolff 
simplicity power unifying ideas computing 
computer journal 
reprinted chapter wolff 
wolff 
learning syntax meanings optimization distributional analysis 
levy schlesinger eds categories processes language acquisition hillsdale nj lawrence erlbaum 
reprinted chapter wolff 
wolff 
cognitive development optimization 
ed computational models learning heidelberg springer verlag pp 
wolff 
language acquisition data compression generalization 
language communication 
reprinted chapter wolff 
zipf gk 
human behaviour principle effort cambridge mass addisonwesley 
zipf 
psycho biology language dynamic boston houghton mifflin 
reprinted mit press cambridge mass 
captions 
variation rate firing single response changing levels illumination miller 

sets recordings single 

random dot julesz 

diagram show relationship left right images julesz 

context free phrase structure grammar 

cf psg recursion 

query database records illustrate query example 
