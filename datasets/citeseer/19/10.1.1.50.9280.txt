model object pose lines code daniel dementhon larry davis computer vision laboratory center automation research university maryland college park md describe method finding pose object single image 
assume detect match image feature points object know relative geometry object 
method combines algorithms algorithm pos pose orthography scaling approximates perspective projection scaled orthographic projection finds rotation matrix translation vector object solving linear system second algorithm posit pos iterations uses iteration loop approximate pose pos order compute better scaled orthographic projections feature points applies pos projections original image projections 
posit converges accurate pose measurements iterations 
posit feature points added insensitivity measurement errors image noise 
compared classic approaches making newton method posit require starting initial guess computes pose order magnitude fewer floating point operations may useful alternative real time operation 
speed issue posit written lines mathematica code provided appendix 
computation position orientation object object pose images feature points geometric configuration features object known model important applications calibration cartography tracking object recognition 
fischler bolles coined term perspective point problem pnp problem type problem feature points 
researchers formulated closed form solutions feature points considered coplanar configurations 
pose computations numbers feature points larger dealt closed form solutions may robust measurement errors image noise average feature points pose information content highly redundant 
straightforward method described roberts consists finding elements perspective projection matrix expresses mapping feature points object image projections homogeneous coordinates solutions linear system 
unknown elements matrix matchings image points object points known 
notable pose computations methods proposed tsai lowe yuan papers provide critical reviews photogrammetric calibration techniques 
methods proposed tsai especially useful focal length camera lens distortion image center known 
parameters calibrated techniques proposed lowe yuan may sufficient 
techniques rely newton raphson method presents significant drawbacks approximate pose provided initiate iteration process second iteration step pseudoinverse matrix jacobian dimensions theta lowe number feature points theta yuan computationally expensive operation 
method described relies linear algebra techniques iterative methods lowe yuan require initial pose estimate require matrix inversions iteration loop 
iteration step method finds approximate pose multiplying object matrix depends distribution feature points object precomputed vectors depend coordinates images feature points 
resulting vectors normalized constitute rows rotation matrix norms vectors equal scaling factor projection provides translation vector 
show operations amount assuming involved image points obtained scaled orthographic projection sop 
refer part algorithm pos pose orthography scaling 
works tomasi ullman basri apply related techniques see related points 
iterations apply exactly calculations corrected image points 
basic idea pos algorithm requires sop image perspective image produce accurate pose compute sop image points pose previous iteration 
process consists shifting feature points object pose just lines sight belong pose correct obtain scaled orthographic projection shifted points 
call iterative algorithm posit pos iterations 
iterations typically required converge accurate pose 
posit algorithm requires order magnitude fewer computations techniques mentioned matchings object points image points posit requires arithmetic operations square root calculations iteration 
feature points iteration steps arithmetic operations square roots needed 
comparison roberts method solve linear system equations pseudoinverse matrix requires arithmetic operations adds multiplies divides total count times posit 
lowe method iteration operations required feature points iteration steps total count arithmetic operations times posit 
yuan method expensive arithmetic operations set iteration loop operations iteration feature points iteration steps total count operations times posit 
comparisons believe proposed method definite advantages previous approaches real time applications 
sections test accuracy stability method considering large set simulated situations increasing amounts random image perturbation 
situations algorithm appears remain stable degrade gracefully image noise increased 
notations fig 
show classic pinhole camera model center projection image plane distance focal length axes ox oy pointing rows columns camera sensor third axis oz pointing optical axis 
unit vectors axes called vectors written bold characters 
object feature points positioned field view camera 
coordinate frame object centered 
call point object 
object points shown fig 

shape object assumed known coordinates point object coordinate frame known 
images points called image coordinates known 
coordinates points camera coordinate system unknown pose object camera coordinate system unknown 
show find rotation matrix translation vector object directly solving explicitly coordinates 
problem definition goal compute rotation matrix translation vector object 
rotation matrix object matrix rows coordinates unit vectors camera coordinate system expressed object coordinate system 
purpose rotation matrix transform object coordinates vectors coordinates defined camera system dot product delta row matrix vector correctly provides projection vector unit vector camera coordinate system coordinate gamma long coordinates row vector expressed coordinate system coordinate system object 
perspective projection scaled orthographic projection object point point rotation matrix written kw coordinates coordinate system object 
compute rotation need compute object coordinate system 
vector obtained cross product theta translation vector vector om center projection point origin object coordinate frame 
coordinates translation vector point chosen visible feature point image point translation vector aligned vector om equal om compute object translation need compute coordinate object pose fully defined find scaled orthographic projection perspective projection analytical definition scaled orthographic projection sop approximation true perspective projection 
approximation object front camera assumes depths different points object camera coordinates different set depth points object example depth point object see fig 

sop image point object point image plane coordinates fx fy perspective projection image point obtained coordinates fx fy ratio scaling factor sop 
point image coordinates sop perspective projection 
image coordinates sop projection written fx gamma gamma gamma geometric construction sop geometric construction obtaining perspective image point sop image point shown fig 

classically perspective image point intersection line sight image plane sop draw plane parallel image plane plane distance center projection point projected orthographic projection 
projected image plane perspective projection 
vector parallel scaled scaling factor equal eq 
simply expresses proportionality vectors 
fundamental equations perspective consider equations characterize true perspective projection relate unknown row vectors rotation matrix unknown coordinate translation vector known coordinates vectors object coordinate system known coordinates image points solving equations unknowns provide information required define object pose seen section 
equations delta gamma delta gamma terms defined deltak defined theta proof fig 
consider points object plane parallel image plane line sight intersects plane projects plane vector sum vectors vector image proportional ratio vectors cm proportional similar triangles cm ratio equal ratio coordinates corresponding vectors triangles oc 
ratio delta sum vectors expressed delta cm take dot product expression unit vector camera coordinate system 
dot product delta zero dot product delta coordinate gamma vector dot product cm delta coordinate cm definition delta obtains eq 

similarly obtains eq 
dot product expression unit vector fundamental equations pos show right hand sides fundamental equations terms fact coordinates points scaled orthographic projections feature points fig 
consider points projection plane image call coordinates image plane vector sum vectors vector image proportional ratio consequently take dot product vector unit vector camera coordinate system dot product delta zero dot product delta coordinate gamma vector obtain delta gamma similarly delta gamma comparing equations eqs 
sees coordinates written 
pos posit equations written delta gamma delta gamma basic idea proposed method values eqs 
provide linear systems equations unknowns respectively coordinates computed normalizing obtained norm call algorithm finds pose solving linear systems pos pose orthography scaling 
finding pose object fixed values eq 
amounts finding pose points scaled orthographic projections image points coordinates seen previous section 
solutions pos algorithm approximations values exact 
unknowns computed exact values computed equations solved better values 
call iterative algorithm posit pos iterations 
algorithm generally values converge values correspond correct pose iterations 
initially set 
assuming null implies amounts assuming coincide 
fig 
describes configuration 
note definition terms eq 
coordinates vectors object points divided distance object camera ratios small ratio object size distance small pose iteration may acceptable case 
tracking object initial values terms preferably chosen equal values obtained iteration pose computation previous image 
initial loop posit looks pose object points scaled orthographic projections points object 
solving systems equations pos algorithm iterative algorithm described previous section solve eqs 

rewrite equations somewhat compact form delta delta gamma gamma terms known values computed previous iteration steps algorithm 
express dot products equations terms vector coordinates object coordinate frame jw exponent expresses fact consider transposed matrix column vector 
linear equations unknowns coordinates vector vector parameters known known coordinates images camera coordinate system known coordinates point object coordinate frame 
writing eq 
object points images generate linear systems coordinates unknown vectors aj matrix coordinates object points object coordinate frame vector th coordinate vector th coordinate generally visible points points matrix rank solutions linear systems square sense bx pseudoinverse matrix call object matrix 
knowing geometric distribution feature points precompute pseudoinverse matrix operation gamma decomposing matrix singular value decomposition svd 
find discussion showing solutions computed eq 
systems eq 
minimize norms residual vectors ja gamma jaj gamma singular value decomposition advantage giving clear diagnosis rank condition matrix useful photogrammetric applications sure feature points terrain considered applying algorithm extension algorithm coplanar points matrix rank see 
obtained square solutions unit vectors simply obtained normalizing mentioned earlier elements row rotation matrix object coordinates vector obtained fashion 
elements second row rotation matrix coordinates vector elements third row coordinates vector axis camera coordinate system obtained cross product vectors translation vector object obtained 
vector om center projection origin object coordinate system 
vector om aligned vector om equal om om scaling factor obtained norm vector vector seen definitions vectors terms provided eqs 

terms eqs 
accurate rotation matrix translation matrix just computed considered accurate representations pose compute accurate values process repeated explained greater details 
geometric interpretation system solutions geometrically eq 
states tail taken head projects point xi defined algebraic measure jm words head belong plane perpendicular feature points points chosen completely defined vector tail head intersection planes perpendicular respectively 
analytically solve system equations matrix system rank 
matrix inverse matrix pseudoinverse 
feature points corresponding planes generally intersect exactly single point choose head point minimizes sum squares distances planes 
analytically system equations overdetermined matrix system equations rank solution square sense obtained pseudoinverse matrix eq 

pseudocode posit algorithm summarize description posit algorithm feature points including point pseudocode ffl step preliminary step executed set simultaneously visible feature points write matrix dimension gamma theta row vector vector connecting feature point feature point compute theta gamma object matrix pseudoinverse matrix ffl step gamma ffl step loop compute compute image vector gamma coordinates form gamma gamma image vector gamma coordinates form gamma gamma multiply theta gamma object matrix image vectors gamma coordinates obtain vectors coordinates bx compute scale projection average norms delta delta compute unit vectors ffl step compute new compute unit vector cross product compute coordinate translation vector camera focal length compute deltak ffl step gamma gamma threshold go step 
ffl step output pose values iteration full translation vector om om om rotation matrix matrix row vectors applications rotation matrix perfectly orthonormal renormalize matrix compute jkj theta output matrix row vectors geometric interpretation algorithm iterative algorithm described analytically previous section described geometrically follows ffl step preliminary step compute object matrix pseudoinverse matrix ffl step 
assume scaled orthographic projections superposed image points ffl steps compute approximate pose assuming projection model scaled orthographic projection 
ffl step shift object points approximate positions positions depth lines sight deformation object 
find images shifted points scaled orthographic projection model 
ffl step scaled orthographic image points previous iteration go back step image points original image points 
ffl step exact pose approximate pose 
proof goal show steps geometric description algorithm equivalent analytic description provided pseudocode 
steps seen section finding pose eqs 
calculated values analytical description amounts finding pose points project points coordinates scaled orthographic projection geometric description 
step assuming zero analytical description implies amounts assuming coincide fig 
step object points shifted lines sight original image points constant depth projected points scaled orthographic projection geometric description 
coordinates shifted points just seen delta eq 
dot product term affected shift direction perpendicular vector terms obtained accounting shift simply multiplying defined object frame vector defined frame third row rotation matrix analytical description 
step terms don change iteration analytic description expressions coordinates points don change geometric description test 
geometric description artificial threshold needs introduced definition change exits loop quantized positions points pixels moving 
intuitive interpretation posit algorithm process object pose posit algorithm seen third somewhat intuitive viewpoint ffl known distribution feature points object images points perspective projection 
ffl build sop images object feature points perspective image apply pos algorithm sop images obtain exact object pose 
ffl computing exact sop images requires knowing exact pose object 
apply pos actual image points obtain approximate depth feature point position feature points lines sight depths 
compute sop image 
step apply pos sop image find improved sop image 
repeating steps converge accurate sop image accurate pose 
deformation measure pos algorithm uses feature point strictly necessary find object pose 
points including required algorithm points principle constraints equal length orthogonal applied 
constraints pos verify posteriori close vectors provided pos orthogonal equal length 
alternatively verify properties vectors proportional scaling factor construct deformation measure example ji delta jj ji delta gamma delta jj posit algorithm finds translation vector transformation matrix transform object camera coordinate system feature points fall lines sight image points 
transformation matrix may exactly orthonormal rotation matrix may comprise deformation component slightly deforms object adjust lines sight 
deformation measure zero transformation matrix rotation matrix 
deformation measure generally large course wrong correspondence established image points object points measure solve correspondence problem small number correspondence ambiguities exist applying pos algorithm various correspondence permutations choosing correspondence permutation yields minimum deformation measure preliminary step completing posit algorithm see systematic analysis type approach 
possible causes finding nonzero deformation measure correct correspondence permutation 
ideal case object correct pose image noise eqs 
exactly verified 
returning geometric interpretation section planes perpendicular points xi defined gamma jm exactly meet single point head corresponding correct pose planes perpendicular points yi defined gamma jm exactly meet head corresponding correct pose 
vectors deformation measure zero 
iteration process posit algorithm terms set zero computed reach values corresponding correct pose 
accordingly points xi yi initially different correct points move points iteration 
initially planes generally cut single points little chance vectors minimum added squared distance planes equal perpendicular resulting deformation measure zero 
points xi yi move correct positions successive iteration steps resulting deformation measure tends zero 
scenario assumes perfect image detection camera 
practice coordinates coordinates ideal geometric perspective projections planes obtained convergence generally meet single points 
final deformation measure generally zero iteration may go value slightly smaller final value accordingly final resulting matrix exactly orthogonal comprises deformation component slightly warps object better fits noisy image assumed camera model 
applications orthonormal transformation matrix useful 
output matrix easily corrected instance normalizing vector obtained cross product replacing cross product 
illustration iteration process posit illustrate iteration process posit example synthetic data 
object cube cube size cm image theta focal length pixels corners cubes distance times cube size center projection camera 
cube assumed transparent feature points corners cube 
full cube experiment simulating hidden faces interesting see converging projections parallel edges perspective image transformed parallel projections sop image fact difficult actual experiments corners cube light emitting diodes mounted cubic arrangement transparent frame 
projection left fig 
perspective image cube 
enclosing square boundary theta pixel image area 
projections cube edges drawn algorithm useful studying evolution scaled orthographic projections cube 
distance size ratio cube small cube edges show strong convergence image 
get idea success posit algorithm computing iteration perspective image cube transformation iteration 
projections top fig 
perspective projections iterations 
note left right projections getting closer closer original image 
posit compute images 
posit computes sop images actual image corners depths computed corners 
images shown bottom row fig 

notice left right images cube edges parallel indication algorithm getting closer correct scaled orthographic projection cube parallel lines project parallel image lines 
protocol performance characterization section attempt follow recommendations haralick performance evaluation computer vision 
compute orientation position errors pos algorithm iteration loop approximation assumes perspective perspective images upper row scaled orthographic projections lower row poses computed iterations left right posit algorithm cube image left 
image scaled orthographic projection posit algorithm converged 
synthetic images created objects poses objects computed pos posit images compared actual poses produce images 
objects consider distances camera random orientations distance levels image noise combination 
objects objects 
configuration points tetrahedron line segments joining point points equal cm perpendicular fig 
left 
corners cm cube 
corners point fig 
right 
object positions points objects positioned optical axis 
distance camera center point expressed ratio characteristic dimension object dimension cm objects 
distances considered distance camera random rotations object ize random rotations object ize distance camera definition objects parameters estimating rotation translation errors posit algorithm 
times times object size 
distance size ratios horizontal coordinates orientation position error plots 
point positions objects rotated random orientations 
rotation matrices defining orientations computed euler angles chosen random number generator range 
image generation obtain images perspective projection focal length pixels 
clip image order allow large offsets images 
point cube cm image plane optical axis cube completely side optical axis point diagonal cube may cm image plane image pixels image center 
wide angle camera total angular field degrees able see cube position 
specify levels random perturbation noise image 
noise level real numbers computed coordinates perspective projections rounded integer pixel positions 
noise level integer positions lowest level disturbed vertical horizontal perturbations sigma pixel integer positions 
created uniform random number generator 
noise level amplitude perturbations sigma pixels 
objects cm camera image may small pixels perturbation pixels side image produces perturbation image size 
orientation error degrees orientation error degrees orientation error degrees orientation error degrees orientation error degrees distance camera object size distance camera object size distance camera object size distance camera object size distance camera object size higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit tetrahedron image ith quantization tetrahedron image ith perturbations cube image ith quantization cube image ith perturbations cube image ith perturbations tetrahedron image ith perturbations aaa aaa aaa aa aa orientation error degrees distance camera object size higher points pos lower points posit aa aa aa angular orientation errors tetrahedron left cube right distances camera image noise levels quantization sigma pixel sigma pixels 
distance camera object size distance camera object size distance camera object size distance camera object size distance camera object size distance camera object size higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit higher points pos lower points posit relative position error relative position error relative position error relative position error relative position error relative position error tetrahedron image ith quantization tetrahedron image ith perturbations cube image ith quantization cube image ith perturbations cube image ith perturbations tetrahedron image ith perturbations relative position errors tetrahedron left cube right distances camera image noise levels quantization sigma pixel sigma pixels 
orientation position errors synthetic images orientation position object computed pos algorithm iteration loop posit algorithm iterations 
orientations positions compared actual orientation position object obtain image 
compute axis rotation required align coordinate system object actual orientation coordinate system object computed orientation 
orientation error defined rotation angle degrees axis required achieve alignment 
details computation appendix position error defined norm translation vector required align computed point position actual point divided distance actual point position camera 
position error relative error orientation error measure degrees 
combining results multiple experiments mentioned distance size ratio rotations considered 
compute average standard deviation orientation position errors rotations plot averages standard deviation error bars function distance size ratios 
plot shows results pos posit iterations 
plots orientation error shown fig 
plots position errors shown fig 

figures plots left column tetrahedron plots right column cube 
top diagrams lowest image noise level middle diagrams medium noise level bottom diagrams highest noise level 
analysis pose error diagrams comparison pos posit short medium range low medium noise posit gives poses degree rotation errors position errors 
errors increase linearly proportion object range pixel quantization camera displace point twice twice far camera image point jumps pixel 
effect image noise increases range distance ratio image points grouped pixel regions perturbations pixels significantly modify relative geometry image points resulting pose computation 
effects described far caused imaging process probably characteristic algorithms computing pose single image obtained ccd camera 
iterations posit provide clear improvements initial estimate provided pos objects close camera hand provide improvement objects far camera 
objects close camera called perspective distortions large scaled orthographic projection poor approximation perspective performance pos poor 
shortest distance size ratio errors orientation evaluation degree region errors position evaluation region 
objects far difference sop perspective 
seen analytically terms eq 
negligible objects far perspective equations identical sop equations 
pos gives best possible results iterations posit improve 
pos gives best performance distances times object size low image noise times high image noise half way large errors perspective distortion short distances large errors pixel quantization large distances orientation errors degree region position level region 
comparison cube tetrahedron long error bars short range pos due fact apparent image size different depending orientation 
example cube looks object size cm face parallel image plane dimension larger cube diagonal parallel image plane 
configuration point projects image center opposite corner pixels large resulting perspective distortion 
tetrahedron large apparent size changes may explain fact short viewing distance average error standard deviation produced pos smaller shape cube 
artifact problem defining object size single number specific advantage tetrahedron cube 
high noise level long range performance cube twice tetrahedron pos posit probably square method averages random errors points averaging improves points available method 
convergence analysis posit distance size ratios rotation translation error evaluations posit algorithm converge iterations 
convergence test consists quantizing pixels coordinates image points sop images obtained successive steps terminating successive sop images identical see appendix 
apply posit images world case analytically show quantities determining algorithm convergence ratios image coordinates focal length tangents angles optical axis lines sight 
ratios smaller algorithm converges 
feature points seen view angle degrees 
camera degree total field view algorithm converge possible image points 
view angles degrees algorithm diverges 
object image points periphery field degree camera algorithm diverge 
mixed situations small large angles mixed results obtained image points close image center contribute convergence balance negative effect peripheral image points 
mathematical analysis conditions convergence interesting case posit applied images world far simulations convergence appears similarly dependent angles lines sight 
cube displaced camera optical axis fig 

face kept parallel image plane shorter ranges considered cube rotated intersecting image plane 
distance calculate distance size ratio plots distance center projection cube 
noise sigma pixels added perspective projection 
cube cm iterations required convergence cube cm center projection 
number gradually climbs iterations cube reaches cm center projection iterations cm 
number increases sharply iterations distance cm center projection 
prior observations position images close corners focal lengths away image center images far corners half focal length away image center probably contribute preserving convergence 
point convergence monotonic 
closer ranges mode convergence changes nonmonotonic mode sop images successive steps subjected somewhat random variations step step hit close final result converge rapidly 
number iterations ranges mode worse monotonic case different results small variations object distance 
label mode chaotic convergence fig 

cube gets closer cm away center projection differences images increase rapidly algorithm clearly diverges 
note order see close corners cube range camera require total field degrees focal length mm mm ccd chip improbable configuration 
preliminary convergence analysis simulations previous section indicate ordinary cameras posit algorithm converge problems iterations 
know specific configurations feature points shown produce ambiguous images isolated positions object 
call image ambiguous distinct poses object space produce image correspondences 
words rigid transformation positions feature points line sight image point second rigid transformation moves feature point position line sight 
examples configurations 
posit algorithm configuration points produces single pose 
feature points object happen located space configuration produces ambiguous image posit algorithm compute possible poses chances pose may occupied object 
note defense numerical algorithms relying newton raphson method behave differently case 
hand roberts number iterations number iterations distance camera object size monotonic convergence chaotic convergence monotonic convergence distance camera object size number iterations posit function distance camera 
top definition distance object size 
middle convergence results short ranges 
convergence occurs cm cube cm away camera 
bottom number iterations wider range distances 
method finds perspective projection matrix maps world points image points expressed homogeneous coordinates 
ambiguous images mapping unique fact detected fact matrix linear system method singular 
roberts method preferable applications detecting pathological configurations important 
analysis geometry configurations 
ambiguous image occur object points camera center projection belong twisted cubic curve space 
curve defined points sure event happen choosing feature points object points belong cubic curve 
fewer points considered ambiguous images occur probably remain 
posit algorithm tracking moving object fewer points principle detect fact algorithm computed wrong pose ambiguous image noticing discontinuity sequence poses 
real time experiments video mouse 
signal camera sent black box right computer 
box detects images light sources mouse transmits coordinates computer 
computer runs driver posit 
originally developed posit algorithm purpose providing pose computations second video mouse system able run personal computer 
fig 
general view prototype 
mouse comprises small infrared sources 
camera positioned computer display faces user 
camera equipped filter blocks visible light spectrum transmits wave lengths longer images light sources appear bright spots dark background easy detect 
black box right side computer contains microcontroller computes centroids bright spots image field transmits centroid coordinates serial port computer 
latest implementation integrated camera microcontroller functions small smart camera receive image processing code serial line send simple image processing results serial line camera may useful applications range scanning robot navigation 
centroid coordinates received serial port computer calculates pose mouse times second computes corresponding perspective image cursor displayed screen 
cursor allows intuitive interaction objects represented screen 
find pose calculation create problems provided matching object light sources image spots correct 
mouse alignments light sources easily detected matched image 
alternatively tetrahedron light sources arranged line segments source equal mutually perpendicular 
configuration simplifies pose calculation object matrix theta identity matrix 
mouse choose matching minimizes combination deformation measure section difference previous pose 
matching nontrivial conditions 
particular tetrahedron configuration find matchings correspond poses symmetric respect plane parallel image plane 
poses close difficult choose better pose 
user attempts point mouse maneuver chances resulting hand occluding light source anyway pose rejected 
image spots close matching may difficult conditions 
image spots get closer may merging occurs single centroid detected 
keep track spots close merge assign image centroid line sources 
precautions obtain reasonably robust usable system cursor responds smoothly predictably rotations translations mouse space 
details system 
experiments fast algorithm posit video approach may attractive alternative growing field interactive graphics mechanical magnetic acoustic optical pose trackers developed 
summary discussion algorithm posit compute pose object image containing feature points object 
described pseudocode form steps required computation explaining role step analytical geometrical points view 
algorithm computes approximate pose method pos assumes image obtained scaled orthographic projection 
step multiplies precomputed object matrix image vectors normalizes resulting vectors computes cross product complete rotation matrix multiplies vector norm normalization just mentioned obtain translation vector 
step posit algorithm computes corrected image points scaled orthographic projections approximate object pose previous step 
steps repeated improvement detected 
simulations show algorithm converges iterations domain useful configurations camera object 
characterized performance algorithm number experiments synthetic data increasing levels image noise 
posit algorithm appears remain stable degrade gracefully increasing image noise levels 
posit may useful alternative popular pose algorithms advantages 
require initial pose estimate 
code easy implement 
compact languages mathematica lines code necessary appendix 
run times faster algorithms typically requires order magnitude fewer arithmetic operations objections may raised posit full fact rotation matrix orthonormal bound accurate algorithms account fact 
probably case minimum number feature points considered difference disappear number points increased pose information available image redundant 
comparative experiments useful deciding issue 
algorithms shown provide advantage accuracy considered application requires additional accuracy advantages posit mentioned may useful producing initial pose algorithms 
going lengths remember intrinsic limitations pose calculation single images algorithm single images may able overcome 
example object displacements direction optical axis move feature points lines sight object size distance decreases large object displacements occur translate jumps neighboring pixels image 
methods line features problems detecting displacements 
applications possible obtain greater accuracy combining information obtained cameras optical axes large angle ideally degrees expense added complexity calibration computation 
photogrammetric applications feature points coplanar coplanar 
situations method described significantly modified matrix describing positions feature points scene rank 
extension posit algorithm planar scenes described 
assigning proper correspondence object points images required preliminary step posit algorithm problem addressed briefly 
section suggest algorithm run different point correspondences correct correspondence corresponds minimal deformation factor 
mouse experiments section combined technique comparisons successive pose solutions produce robust correspondence assignments feasible technique correspondence permutations examined 
methods depend exponentially number points combine search correct pose search correct correspondence proposed find search painfully slow takes place high dimensional transformation space 
methods attractive novel criteria pruning search tree discovered 
thor valuable discussions rosenfeld comments earlier drafts express reviewers useful insights led particular develop analytical formulation posit 
support defense advanced research agency contract gratefully acknowledged 
shorter version considering geometric interpretation algorithm published proceedings european conference computer vision 
appendix mathematica program implementing pos posit compute pose object list image points list corresponding object points object matrix pseudoinverse matrix list object points 
point image point list taken point 
outputs pose computed pos image points pose computed posit 
module ij row row row scale scale scale translation rotation count converged false loop difference sop images pixel 
converged count get image vectors image point pos map count compute sop image posit row translation apply plus abs round flatten round flatten map count transpose ij scale scale sqrt row row scale scale row row row row row cross product rotation row row row scale scale scale scaling factor sop translation append scale converged count count return rotation translation example input output cube pseudoinverse cube cube appendix angular error performance evaluation object coordinate system known orientation pos posit algorithms compute image object coordinate system different orientation 
want compute far computed orientation actual orientation 
find axis rotation required align coordinate system object actual orientation coordinate system object computed orientation 
angular error rotation angle degrees axis required achieve alignment 
axis rotation angle alignment readily quaternions propose direct method 
unit vectors axes coordinate systems axis rotation belong plane respect mirror images 
plane perpendicular vector gamma similarly axis belongs plane perpendicular gamma plane perpendicular gamma axis direction perpendicular gamma gamma gamma coordinates satisfy homogeneous system composed equation gamma gamma gamma similar equations gamma gamma system solved singular value decomposition 
required angle rotation angle brings plane plane angle cross product theta cross product theta angle angle may slightly different compute average angles 
abidi chandra new efficient direct solution pose estimation targets algorithm evaluation dept electrical computer engineering university tennessee july published ieee trans 
pattern analysis machine intelligence 
basri weinshall distance metric models images recognition classification mit memo 
breuel fast recognition adaptive subdivisions transformation space proc 
ieee conf 
computer vision pattern recognition champaign il pp 

dementhon de la vision artificielle la synth etique syst eme interaction avec un ordinateur analyse images vid eo doctoral thesis universit joseph fourier grenoble laboratoire imag october 
dementhon recognition tracking objects search proc 
arpa image understanding workshop washington dc pp 

dementhon davis new exact approximate solutions perspective problem ieee trans 
pattern analysis machine intelligence vol 
pp 

dementhon davis model object pose lines code computer vision eccv lecture notes computer science sandini ed pp 
springer verlag 
dementhon computer vision system position monitoring dimensions non coplanar light sources attached monitored object patent june application august dementhon fujii dimensional pointing device monitored computer vision patent march application may 
dementhon computer vision system accurate monitoring object pose patent application december 
rives determination attitude objects single perspective view ieee trans 
pattern analysis machine intelligence vol 
pp 

egli miller method apparatus determining location orientation objets patent june 
faugeras dimensional computer vision geometric viewpoint mit press fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography comm 
acm vol 
pp 

haralick performance characterization computer vision university washington technical report july performance characterization image analysis thinning case point pattern recognition letters vol 
pp 

horaud analytical solution perspective point problem computer vision graphics image processing vol 
pp 

huttenlocher ullman recognizing solid objects alignment proc 
darpa image understanding workshop pp 

lowe perceptual organization visual recognition kluwer academic publishers 
lowe fitting parameterized dimensional models images ieee trans 
pattern analysis machine intelligence vol 
pp 

maybank projective geometry ambiguous surfaces phil 
trans 
soc 
lond 
pp 

meyer anf survey position trackers presence vol 
pp 
spring 
dementhon davis iterative pose estimation coplanar feature points ieee conf 
computer vision pattern recognition pp 
new york full version center automation research technical report car tr university maryland july 
press flannery teukolsky numerical recipes cambridge university press cambridge uk 
roberts machine perception dimensional solids optical information processing eds mit press 
sutherland dimensional input tablet proceedings ieee vol pp 

tomasi shape motion image streams factorization method technical report cmu cs carnegie mellon university september 
tsai versatile camera calibration technique high accuracy machine vision metrology shelf tv cameras lenses ieee robotics automation vol 
pp 

ullman basri recognition linear combinations models ieee trans 
pattern analysis machine intelligence vol 
pp 

yuan general photogrammetric method determining object position orientation ieee trans 
robotics automation vol 
pp 

