experimental results crossover point random sat james crawford computational intelligence research laboratory university oregon eugene jc cs uoregon edu larry auton bell laboratories mountain ave murray hill nj lda research att com august determining propositional theory satisfiable prototypical example np complete problem 
large number problems occur knowledge representation learning planning ares ai essentially satisfiability problems 
reports extensive set experiments date location nature cross point satisfiability problems 
experiments generally confirm previous results notable exceptions 
functions previously proposed accurately models location cross point 
second evidence hard problems underconstrained region 
fact hardest problems underconstrained region times easier easiest unsatisfiable problems neighborhood cross point 
offer explanations apparent contradictions previous results 
supported air force office scientific research number arpa rome labs numbers 
done author bell laboratories 
large number problems occur knowledge representation learning planning ares ai known np complete general form 
commercially important problems scheduling configuration planning appear instances np complete problems 
best known algorithms solving problems known require exponential run time size problem worst case 
worst case result tells relatively little nature problem practice 
turn practical problem requires exponential run time virtually 
similarly exponential factor large variable problem unsolvable small problems intractable practice problem size larger write 
alternatively problem parameter hardest problems tend parameter particular range 
experimental evidence indicates satisfiability problems fall class 
problems relatively small number constraints appear easy generally solutions 
problems large number constraints appear easy intelligent algorithm generally able quickly close branches search tree 
problems solutions lots partial solutions quite hard 
interestingly randomly generated sat problems hard problems occur near point half randomly generated problems satisfiable mitchell 
refer point crossover point 
shows crossover effect graphically 
line shows percent satisfiable shows problem difficulty 
notice problem difficulty peaks region percent satisfiable suddenly falls percent zero 
crossover point divides space satisfiability problems regions constrained region crossover point critically constrained region neighborhood crossover point constrained region crossover point 
regions interesting different reasons 
generally commercially important satisfiability constraint satisfaction problems optimization problems wants minimize costs subject set constraints 
cost threshold set high constrained problem results 
cost threshold set just right critically constrained problem results 
similarly constrained problems 
optimization problem solve sufficiently powerful algorithms solve critically constrained region usually case realistically complex problems choice loosen cost threshold move problem constrained region 
constrained region important practice optimization problems usually solved 
clearly critically constrained region important solve optimization problems exactly 
constrained region important showing constrained problem unsolvable corresponds showing optimality percent satisfiable difficulty percent satisfiable problem difficulty variable random sat function clause variable ratio 
problem difficulty normalized hardest problem difficulty 
solutions optimization problems showing unsatisfiability essential task theorem prover priori reason expect theorem proving problems fall particular regions 
investigate location cross point behavior modern systematic satisfiability algorithm regions 
experiments done randomly generated sat problems 
choice deserves explanation 
question asked random problems 
immediate answer random problems readily available size virtually numbers 
example experiments reported required problems hard imagine collecting problems way 
argument randomly generated problems represent core hard satisfiability problems 
certainly real problems structure regularity symmetries algorithms structure simplify problems 
structure squeezed remainder problem requires search structure remainder presumably random problem 
clearly techniques developed squeeze structure fact remains random problems get basic domain independent aspect hardness np complete problems 
interested randomly generated problems various choices 
possible distributions constant probability model random sat focus random sat simplicity past experimental results indicated sat model generates problems difficulty critically constrained region grows exponentially known algorithms 
distributions constant probability model problem difficulty grow slowly mitchell 
focus primarily limit scope manageable size 
sense simplest interesting case clauses length polynomial algorithms known theory clauses longer converted equivalent theory clauses length linear increase length theory 
rest organized follows 
experimental results broken results location cross point results difficulty problems cross point 
give detailed description satisfiability algorithm generate results 
experimental results section series experimental results location cross point difficulty solving satisfiability problems constrained constrained regions 
formal definitions satisfiability random sat 
propositional satisfiability problem garey johnson instance set clauses finite set variables 
question truth assignment satisfies clauses clearly determine assignment exists trying possible assignments 
unfortunately set size assignments 
known approaches determining propositional satisfiability computationally equivalent asymptotically worst case complete search differ may take time constant expected case time complexity different classes problems 
experiments generate random sat theories method mitchell generate clause picking different variables random negating probability 
check clauses repeated theory 
clause disjunction variables negated variables 
truth assignment mapping ftrue falseg 
location cross point location cross point theoretical practical importance 
theoretically interesting number constraints required achieve cross intrinsic property language express constraints particular independent algorithm find solutions 
case sat number constraints required cross appears exactly linear function number variables problem 
leads expect theoretical method explaining location cross point satisfactory method proposed 
cross point practical interest reasons 
empirically hardest problems near cross point sense test candidate algorithms hard problems 
similarly encounters practice problem near cross point expect difficult avoid plan devote extra computational resources 
algorithms proposed selman minton find solutions constraint satisfaction problems show problem unsolvable simply give number tries 
accurate knowledge location cross point provide method testing algorithms larger problems complete methods methods show problems solvable unsolvable 
problem size increases transition satisfiable unsatisfiable increasingly sharp 
means knows location cross point random problems problems structure number clauses predictor satisfiability 
point reasonable expect take satisfiability problems drawn sources satisfiability encodings scheduling problems expect derive meaningful information comparing clause variable ratio results 
crossover point algorithm independent heavily distribution dependent problems drawn distributions crossover point clause variable ratio point bear little relationship clause variable ratio crossover point random sat 
experiments section look generally percent satisfiability changes function clause variable ratio 
shall see near crossover point percent satisfiability curve nearly linear 
slope line fairly gentle small numbers variables gets progressively steeper number variables grows see 
past tsuji suggested percent satisfiable curve rotates point clause variable ratio 
words clause variable ratio fixed number variables increased percent satisfiable remain approximately constant 
true suggest limit percent point approach 
show percent satisfiable clauses variable fixed appears roughly parabolic 
know explanation phenomenon 
focus deriving best estimate location percent point 
data variables 
turns simple linear function past crawford auton finite scaling model selman kirkpatrick kirkpatrick selman fit particularly 
show variant kirkpatrick selman equation gamma fits data fairly 
experiment shape crossover region aim experiment provide view dimension surfaces defined percent satisfiable function number variables clause variable ratio 
experimental method varied number variables incrementing 
varied clause variable ratio incrementing 
point ran experiments recorded percent satisfiable difficulty measured number leaves search tree 
percent sat percent satisfiable function number variables clause variable ratio 
results results shown graphically 
hard get feel threedimensional curves dimensions show projections figures 
projection shows percent satisfiable function clause variable ratio 
line represents different number variables 
second projection show percent satisfiability function number variables 
line corresponds different clause variable ratio 
discussion percent satisfiable number variables function clause variable ratio 
figures see slope percent satisfiable curve steeper number variables increased 
notice cross region stays clauses variable moving slightly higher clause variable ratios number variables increased 
crossover region moves dramatically lower clause variable ratios number variables grows 
effect seen 
lower lines curve upwards number variables increased 
lines represent high clause variable rations percent satisfiable increases dramatically small numbers variables 
upper lines curve small clause variable ratios percent satisfiable decreases small numbers variables 
nearly stationary line clauses variable 
examine line closely experiment 
experiment behavior percent satisfiable clauses variable goal experiment determine behavior percent satisfiable curve clause variable ratio held fixed clauses variable 
experimental method varied number variables fixed number clauses times number variables 
point ran experiments variables percent satisfiable clause variable ratio function number variables 
ran experiments point 
results results shown 
discussion past tsuji suggested percent satisfiable curve rotates point clause variable ratio 
words number variables number clauses percent satisfiable approximately constant 
tsuji experiments covered region variables involved experiments point 
observed percent satisfiable stayed percent percent 
data shows variables percent satisfiable constant 
random sat model experiments sure clause contains unique variables check clauses repeated theory 
argue percent satisfiable increases variables duplicate clauses generated 
test hypothesis re ran experiment making sure generate duplicate clauses 
results show 
percent satisfiable variables slightly lower curve basic shape 
percent satisfiable function number variables clauses variable 
understand shape notice variable problems show analytically percent satisfiable clauses variable percent 
percent point clauses 
number variables increased percent point moves smaller clause variable ratios 
variables percent point occurs approximately clauses clauses variable 
variables percent point clauses clauses variable 
percent point moving clause variable point 
tends decrease percent satisfiable clauses variable 
effect dominate variables 
variables effect take 
recall percent satisfiable curve gets steeper number variables increases 
causes percent satisfiable clauses variable increase 
conjecture approaches percent limit number variables approaches infinity 
experiment location crossover point aim experiment characterize precisely possible exact location crossover point determine varies size problem 
experimental method explanation due david mitchell 
percent satisfiable unique clause model function number variables clauses variable 
varied number variables incrementing 
case collected data near expected find crossover point 
data point ran tableau randomly generated sat problems variables 
raw data points appendix 
results results variables shown 
set points shows percentage theories satisfiable function clause variable ratio 
notice relationship percent satisfiable clause variable ratio nearly linear neighborhood crossover point 
derive estimate percent point number variables fit line data number variables interpolated get number clauses percent point 
resulting points shown 
discussion data appears quite linear 
square fit data yields eye appears quite fit fact residuals clause 
close look residuals shown reveals definite pattern 
variables variables variables variables percent satisfiable function clause variable ratio 
suggests non linearities data captured fit suggests projecting fit larger numbers variables successful 
different equation suggested kirkpatrick selman kirkpatrick selman 
finite size scaling methods statistical physics derive equation form ff ff gammau estimate ff ff 
residuals fit experimental data shown 
stay equation form better fit data appears ff ff 
residuals fit shown 
judging residuals equation gamma best current estimator projecting values crossover point 
give significant figures equation significant figures leads significantly worse behavior part residuals 
deriving meaningful bounds constants non trivial exercise fit crossover point data result interpolating square fit experimental data certain uncertainty 
residuals reveal additional correction term needed small values certainly skewing constant values amount 
experimental results experimental results number clauses required crossover plotted linear model 
detailed discussion relationship data theory rescaling scope note parameters ff rescaling parameters 
ff rescaling parameters write kirkpatrick selman parameter function recover equation form location crossover point 
problem difficulty crossover point experiment problem difficulty underconstrained region generally speaking problems underconstrained region quite easy 
researchers rare problems harder problems crossover region gent walsh hogg williams 
goal experiment look extremely hard problems 
experimental method gent walsh fixed number variables varied clause variable ratio 
experiments took number variables gent walsh variable problems 
gent walsh took problems ratio 
cp fit linear residuals gnu residuals fit 
results show mean median maximum number branch points function clause variable ratio 
comparison set problems crossover region experiment mean median number branch points maximum number branch points 
minimum number branch points crossover region satisfiable problem presumably corresponds case tableau happened go directly model 
minimum number branch points unsatisfiable problem 
discussion results show tableau hardest problems underconstrained region times easier easiest unsatisfiable problems crossover region 
appears contradict results gent walsh show davis putnam algorithm rare problems underconstrained region harder problems crossover region 
primary difference davis putnam algorithm tableau tableau dynamic variable ordering explanation difference avoid possible ambiguity measure size search tree counting branch points 
branch point point tableau recursively called twice setting variable true false 
count number pairs recursive calls sense root exponential complexity algorithm 
algorithm gent walsh refer davis putnam picks branch variables cp fit bart residuals gnu residuals fit results gent walsh tableau variables selection heuristics working equivalently scarce extremely large davis putnam search trees result bad choices branch variables 
certainly possible increased number instances increased number variables find underconstrained problems hard tableau 
speculation dangerous expectation increasing number instances lead hard underconstrained instances current set instances just tightly clustered 
number variables increased amount information available tableau heuristics top search tree decreases 
number variables increased possible hard underconstrained problems emerge 
priority scheme fixed essentially randomly search begins 
tableau uses variety heuristics described section choose branch variables 
gent walsh show branch variable selection heuristics tableau fail prevent occurrence hard problems underconstrained region constant probability model 
results relevant results constant probability model leads different distribution instances particular constant probability model mean difficulty problems crossover region higher mean difficulty problems underconstrained region mitchell 
residuals fit gamma experiment problem difficulty crossover region crossover region appears hold hardest test cases tableau problems size sense compare algorithms instances drawn region 
experiment compute rate growth number branch points run time tableau crossover region 
experimental method freeman freeman varied number variables choose number clauses give approximately percent satisfiability 
ran instances point 
results results shown table 
mean number branch points plotted 
run times sparc user times reported usr bin time 
discussion shows growth rate number branch points exponential number variables 
fit data equation form branches av get branches comparison algorithm described previous crawford auton number branches grows freeman freeman gets branches gamma mean median maximum hardness underconstrained region number branch points function clause variable ratio 
run times tableau quite competitive 
fact large problems near crossover point tableau fastest algorithm aware tableau slightly faster freeman posit tableau run times appear growing slowly 
experiment problem difficulty overconstrained region experimental method experiment fixed clause variable ratio varied number variables incrementing 
point ran instances 
results results shown table 
mean number branch points plotted 
run times sparc 
discussion region number branch points grow exponentially number variables rate growth considerably slower 
fit data equation form branches av get branches branch points cpu time sec 
mean var 
max 
mean var 
max 
number branch points run time tableau neighborhood crossover point 
run times seconds sparc 
tableau algorithm basic algorithm underlying tableau depth search unit propagation 
combination traced back far davis logemann loveland davis 
basic framework tableau adds highly optimized unit propagation algorithm set special purpose heuristics selecting branch variables 
section describes basic algorithm sections respectively describe algorithm heuristics 
sections fairly detailed probably primarily interest building satisfiable constraint satisfaction algorithms 
basic algorithm theory theory contradiction discovered return false variables valued return true unvalued variable return theory theory unit propagation consists repeated application inference rule cp branches gnu hardness crossover region number branch points function number variables 
number branch points shown log scale 
branch points cpu time mean var 
max 
mean var 
max 
number branch points run time tableau overconstrained region 
run times seconds sparc 
branches gnu hardness overconstrained region number branch points function number variables 
number branch points shown log scale 
similarly 
complete unit propagation takes time linear size theory dowling gallier 
fast unit propagation computational bottlenecks tableau unit propagator machinery needed save state search backtracking 
tableau data structures designed simultaneously allow efficient unit propagation inexpensive backtracking 
key inexpensive backtracking able describe state search concisely possible freeman concise description copying needed state saved memory 
current version tableau maintains arrays recording variable current assignment number binary clauses occurs positively negated number binary clauses occurs negatively 
binary clause counts critical heuristics described 
speed unit propagation maintain variable list clauses variable occurs 
variable valued walk list 
clause list operations perform value variable clause update binary clause counts variables straightforward enumerate possible conditions actions necessary condition 
clause form 
assigned false unassigned increment binary clause counts 
unassigned set similarly unassigned set 
assigned true unassigned decrement binary clause count 
turns efficient unit propagate breadth relatively high cost procedural calls stack recursion 
breadth introduces additional technical complication 
assume assigned clauses form assign values push unit resolution queue 
assume clause form unit propagate decrement binary clause count case 
unit propagate assignment create binary clause 
binary clause count zero originally may 
problem skipped intermediate state contained binary clause unassigned 
seen state incremented binary count count ended zero 
possible fixes problem 
current version tableau explicitly examines unit resolution queue check conditions kind 
case propagating tableau see queue realize clause really binary clause valued propagated decrement binary clause count heuristics choices recursive call find model routine 
decide variable branch second decide value true false try 
basic davis logemann loveland procedure simply branches variables pre determined order independent problem 
simple variable selection heuristics significant difference average size search tree random sat find useful heuristics deciding value try 
primary preference criterion prefer variables cause large number unit propagations 
heuristic similar zabih mcallester dubois 
cost effective compute number unit propagations result valuing variable 
approximate number unit propagations counting number non redundant binary clauses variable appears 
cases binary clauses simply choose variables occurring theory 
similar heuristic dubois preference variable occurs shortest clauses theory 
question combine counts number positive negative occurrences variables 
freeman freeman equation score pc nc pc nc pc nc number positive negative occurrences binary clauses 
metric gives preference variables lead significant numbers unit propagations branches search tree 
suggested dubois collect list top variables metric explicitly compute effect valuing variables unit propagating 
setting value black art 
freeman currently gamma vars valued vars valued number variables assigned current assignment 
dubois freeman count number new binary clauses produced number variables valued 
believe gives accurate picture impact valuing variable 
equation combine count valuing variable true false 
break ties counting number occurrences theory combining number positive negative occurrences equation 
experimental results show hardest satisfiability problems critically constrained constrained solutions constrained search tree small 
confirms past results cheeseman mitchell 
randomly generated problems problems narrow band near crossover point 
empirically number clauses required crossover best modeled equation gamma predict asymptotic value clause variable ratio near 
giving clause variable ratio crossover variables shows existing experimental data consistent prediction 
crossover point failed find hard problems tableau 
crossover point size tree searched tableau grow large random sat problems near crossover point run time tableau slightly faster best previously published times 
crossover point run time appears grow slower growth rate allowed solve variable overconstrained problems 
crossover point clause variable ratio crossover point function number variables 
acknowledgments experiments reported possible sgi silicon graphic power challenge systems purchased university oregon computer science department nsf sti 
early tableau done bell labs 
people participated discussions material particularly haym hirsh bart selman henry kautz david mitchell 
tableau completely rewritten help advice matt ginsberg john freeman 
andrew parkes contributed heavily analysis crossover point data 
anonymous reviewers useful comments 
broder broder frieze upfal 

satisfiability maximum satisfiability random cnf formulas 
fourth annual acm siam symposium discrete algorithms 
cheeseman cheeseman kanefsky taylor 

really hard problems 
ijcai pp 

chv atal szemer edi chv atal szemer edi 

hard examples resolution 
jacm pp 

crawford auton crawford auton 

experimental results crossover point satisfiability problems 
aaai pp 

davis davis logemann loveland 

machine program theorem proving cacm 
dowling gallier dowling gallier 

linear time algorithms testing satisfiability propositional horn formulae 
journal logic programming 
dubois dubois andre carlier 

sat versus unsat 
second dimacs challenge cliques coloring satisfiability 
rutgers university nj 
freeman freeman improvements propositional satisfiability search algorithms 

doctoral dissertation university pennsylvania philadelphia pennsylvania 
garey johnson garey johnson 

computers intractability 
freeman new york 
gent walsh gent walsh 

easy problems hard 
aij 
hogg williams hogg williams 

hardest constraint problems double phase transition 
aij 
kirkpatrick selman kirkpatrick selman critical behavior satisfiability random boolean expressions 
science 
tsuji tracy tsuji 

evidence satisfiability threshold random cnf formulas 
working notes aaai spring symposium ai np hard problems 
stanford university stanford ca 
minton minton johnson philips laird 

solving large scale constraint satisfaction scheduling problems heuristic repair method 
aaai pp 

mitchell mitchell selman levesque 

hard easy distributions sat problems 
aaai pp 

mitchell mitchell 

empirical study random sat 
master thesis department computing science simon fraser university 
selman selman levesque mitchell 

new method solving hard satisfiability problems 
aaai pp 


order logic 
springer verlag new york zabih mcallester zabih mcallester 

rearrangement search strategy determining propositional satisfiability 
aaai pp 

appendix raw data experiments location crossover point 
experiments run sgi silicon graphic power challenge machines 
run times user times reported command usr bin time 
load machines varied course experiments may noise run times 
vars 
clauses percent sat branches run time instances vars 
clauses percent sat branches run time instances vars 
clauses percent sat branches run time instances vars 
clauses percent sat branches run time instances 
