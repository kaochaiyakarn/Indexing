semantic domains gunter dept computer information sciences univ pennsylvania philadelphia pa usa scott dept computer science carnegie mellon univ pittsburgh pa usa handbook theoretical computer science volume edited van leeuwen north holland pp 

contents 
recursive definitions functions 
cpo fixed point theorem 
applications fixed point theorem 
uniformity 
effectively domains 
normal projections 
effectively domains 
operators functions 
products 
church notation 
smash products 
sums lifts 
isomorphisms closure properties 
powerdomains 
intuition 
formal definitions 
universal closure properties 
bifinite domains 
plotkin orders 
closure properties 
recursive definitions domains 
solving domain equations closures 
modelling untyped calculus 
solving domain equations projections 
representing operators bifinite domains 
carl gunter dana scott 
theory domains established order appropriate spaces define semantic functions denotational approach programming language semantics 
needs spaces different types available mirror type distinctions languages allow different kinds semantical constructs especially dealing languages side effects second theory account computability properties functions theory going realistic 
need complicated fact types compound types recursive self referential high level language types suitable semantics types required explain going 
second need complicated complications semantical definitions fact checked level abstraction reached allows precise definition computability 
degree abstraction partly served state recursion theory senior author report started working denotational semantics collaboration christopher strachey 
order fix mathematical precision took definitions recursion theorists kleene nerode davis platek gave approach simple type theory higher type functionals 
giving characterization spaces obtained construction bases realized recursive definitions types accommodated recursive definitions incorporate function spaces 
original intention find semantics called untyped calculus semantics emerged ways interpreting large variety languages 
large number people essential contributions subsequent developments shown particular domain theory monolithic theory different kinds constructions giving classes domains appropriate different mixtures constructs 
story fact far finished today 
report able touch possibilities give pointers literature 
attempted explain foundations elementary way avoiding heavy prerequisites category theory maintaining level abstraction hope aid reader going theory 
chapter divided sections 
second section introduce simple class ordered structures discuss idea fixed points continuous functions meanings recursive programs 
third section discuss computable functions effective presentations 
fourth section defines operators functions semantic definitions describes distinguishing characteristics 
special collection operators called powerdomains discussed fifth section 
closure problems respect convex powerdomain motivate class bifinite domains describe semantic domains sixth section 
seventh section deals important issue obtaining fixed points certain operators domains 
illustrate method showing find domains satisfying isomorphisms theta 
domains models mentioned untyped calculus 
proofs results sketched omitted 
exceptions enthusiastic reader able fill proofs great difficulty 
exceptions provide warning pointer literature 
recursive definitions functions 
essential purpose theory domains study classes spaces may give semantics recursive definitions 
section discuss spaces having certain kinds limits useful fixed point existence theorem holds 
briefly indicate theorem semantic specification 
cpo fixed point theorem 
partially ordered set set binary relation reflexive anti symmetric transitive 
usually write pair hd vi abbreviate phrase partially ordered set term poset 
subset directed finite set upper bound poset complete cpo directed subset upper bound element understood context subscript usually dropped 
hard see finite poset element cpo 
easiest example point poset easy example come poset distinct elements 
truth value cpo poset distinct points true false true false see 
get example infinite cpo consider set natural numbers discrete ordering 
get cpo need add bottom element result cpo 
pictured 
simple example interesting directed subsets 
consider ordinal cpo directed subset upper bound 
get cpo needs add top element get cpo pictured 
subtle class examples cpo ps set subsets set ordered ordinary set inclusion ps forms cpo upper bound operation just set inclusion 
example consider set rational numbers usual ordering 
course lacks bottom top elements problem causes fail cpo lacks example square root 
unit interval real numbers form cpo 
carl gunter dana scott ffi ffi ffi gamma gamma gamma gamma gamma 
ffi ffi ffi ffi delta delta delta theta theta theta theta theta gamma gamma gamma gamma gamma ffi ffi ffi 
ffi examples cpo 
cpo function monotone monotone directed said continuous 
function said strict 
usually write ffi 
indicate strict 
say ordering poset continuous functions cpo 
similarly poset strict continuous functions ffi 
cpo 
warning notation indicate function domain codomain usual set theoretic sense 
hand means continuous 
similar convention applies ffi 
get examples continuous functions note monotone finite continuous 
fact true infinite ascending chains 
example monotone function 
continuous 
hand function 
sends elements sends monotone continuous 
sets function define extension function ps pt ff xg subset function monotone collection subsets semantic domains particular continuous 
readers know bit functions real numbers worth noting function unit interval may continuous cpo sense continuous usual sense 
central theorem may stated follows theorem fixed point cpo continuous point fix fix fix fix 
words fix fixed point proof note 
induction monotonicity easy see 

set fix 
continuity easy see fix fixed point see note fixed point 
applications fixed point theorem 
factorial function 
illustration fixed point theorem consider define factorial function fact 
usual approach say factorial function strict function satisfies recursive equation number fact fact gamma 
gamma theta multiplication subtraction respectively 
know function fact satisfies equation 
define function ffi 

ffi 
setting gamma 
ffi 
definition recursive appears left side equation certainly exists 
easy check continuous strict 
fixed point theorem fixed point fix solution satisfy equation fact 
context free grammars 
familiar kind recursion equation context free grammar 
sigma alphabet 
uses context free grammars specify subsets collection sigma finite sequences letters sigma 
easy examples superscripted asterisk entirely different ways chapter 
unfortunately usages standard 
fortunately usually easy tell meaning correct context 
carl gunter dana scott 
ffl ea defines strings including empty string ffl 

beb defines strings consisting letter string followed followed 

ffl aa ee defines strings length 
may fixed point theorem provide precise explanation semantics grammars 
operations 
ffflg 
fag 
ffflg xx continuous variable follows fixed point theorem equations 
ffflg 
fag 
ffflg xx corresponding grammars mentioned solutions 
solutions languages defined grammars 
schroder bernstein theorem 
set theoretic application fixed point theorem offer proof theorem schroder bernstein sets 
injections bijection proof function 
gamma pt pt easily seen continuous respect inclusion ordering 
fixed point theorem subset gamma particular gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma semantic domains define sense injection 
injection injections 
see surjection suppose gamma bijection 
uniformity 
question naturally arises take fixed point order get meaning 
instances choices 
answers question 
intuitively reasonable take defined function satisfying recursive equation 
importantly fixed point yields canonical solution 
possible show cpo function fix fix 
continuous 
operators fix 
definition helpful definition fixed point operator class continuous functions fd cpo continuous function fd fd 
say fixed point operator uniform pair continuous functions strict continuous function ffi 
diagram commute fd fe 
leave reader show fix uniform fixed point operator 
obvious somewhat surprising theorem fix unique uniform fixed point operator 
proof see case cpo suppose continuous 
set fx fix carl gunter dana scott cpo order inherits order particular restriction fix unique fixed point 
inclusion map diagram commutes uniform fixed point operator fd fd 
fd fixed point equal fix 
hope results go distance convincing reader fix reasonable operator semantics recursively defined functions 
effectively domains 
significant problem full class cpo far theory computation goes 
reasonable way define general notion computable function cpo 
easy see ideas perfectly sense noteworthy collection examples 
consider strict function 
ffi 
take mean undefined viewed partial function wish concept computability functions class cpo computable just case corresponds usual notion partial recursive function 
definition applies functionals functions may take functions arguments return functions values 
encountered functional earlier defined factorial 
illustrate point concept computability applies operators consider example functional ffi 
ffi 
takes function 
ffi 
computes value number 
functional continuous intuitively computable 
intuition comes fact compute argument needs know compute argument 
goal define class cpo notion finite approximation sense 
cpo 
element compact directed subset point denote set compact elements cpo said algebraic set fx xg directed words algebraic cpo element directed limit finite compact approximations 
algebraic countable say domain 
semantic domains exception unit interval real numbers cpo mentioned far domains 
compact elements domain 
ffi 
functions finite domain definition continuous functions 
ffi 
fn finite 
example collection pn subsets ordered subset inclusion domain compact elements just finite subsets thing domains particularly nice way may describe continuous function domains compact elements 
set pairs 
may recover value fy xg allows characterize example continuous function pn pn uncountable cpo countable set significance fact theory computability hard see say function computable just case computable sense precise 
normal projections 
give formal definition computability domains continuous functions digress briefly introduce useful relation 
poset ha vi fy xg 
definition poset suppose said normal write set directed 
lemma lists useful properties relation 
lemma poset element suppose subsets 



hp cpo element 
intuitively normal approximation notion normal closely related central concepts theory domains 
pair continuous carl gunter dana scott functions said embedding projection pair embedding projection satisfy ffi id ffi id id id identity functions respectively drop subscripts clear context composition functions defined ffi 
show uniquely determines 
sense refer projection determined refer embedding determined quite lot said properties projections embeddings provide space chapter full discussion concepts deserve reader may consult chapter ghk 
observations essential follows 
provide simple example example continuous function strict continuous function strict 
ffi 
strict 
function strict projection corresponding embedding inclusion map incl ffi 


discussion try distinction ffi 
incl example may write id ffi 
id incl id 
equations define relationship projection embedding easy see projection surjection embedding injection 
may think image embedding special kind sub cpo shall especially interested case embedding inclusion case ffi 
cpo 
say continuous function finitary projection ffi id im fp dg domain 
note particular inclusion map im embedding image corresponding projection 
possible characterize basis im follows lemma domain finitary projection set compact elements im just im 
im 
suppose hand 
easy check function fy xg semantic domains finitary projection 
correspondence 
inverse correspondence 
im theorem domain isomorphism cpo normal substructures poset fp finitary projections particular fp directed im domain 
fact significant 
notions projection normal come rest discussion 
effectively domains 
returning topic computability say domain effectively ordering basis decidable possible effectively recognize finite normal basis definition domain suppose surjection 
effective presentation 
set dm effectively decidable 
finite set decidable fd ug 
hd di ei effectively domains continuous function said computable respect set fm recursively enumerable 
unfortunately full class domains serious problem 
domains cpo domain return topic section 
wish defining computability higher types need restriction domains insure domain 
restrictions 
presenting relatively simple 
discussed 
definition poset said bounded complete element bounded subset upper bound 
bounded complete domains closely related familiar class cpo arise places classical mathematics 
domain countably algebraic lattice subset upper bound 
hard see domain bounded complete cpo results adding new top element algebraic lattice 
poset pn example algebraic lattice 
hand bounded complete domain 
ffi 
lacks top element fails algebraic lattice 
domains discussed far bounded complete 
particular carl gunter dana scott theorem bounded complete domains bounded complete domain 
effective presentations effective presentation 
similar facts hold ffi 
proof sketch hard see bounded complete cpo prove domain demonstrate basis 
suppose finite monotone 
function step step ff xg continuous compact ordering called step functions possible show form basis proof poset step functions decidable ordering finite normal tedious difficult effective presentations proof facts ffi 
essentially strict step functions form basis 
remaining sections chapter discuss great operators delta delta delta ffi 
delta 
leave reader convince operators preserve property having effective presentation 
discussion computability domains may smy kt 
hoped research theory domains provide general technique incorporate computability logic reason existence operators 
eliminate need provide demonstrations effective presentations 
central idea current investigations scope discuss 
operators functions 
host operators domains needed purposes semantic definitions 
section mention 
essential technique building new operators introduced discuss solutions recursive equations 
products 
posets product theta set pairs ordering coordinatewise 
define functions fst theta snd theta fst snd subset theta directed fst fx lg snd fy lg semantic domains directed 
particular cpo course theta cpo 
domains theta domain theta theta 
property bounded completeness preserved theta 
cpos show function theta continuous continuous arguments individually 
words continuous iff conditions holds 
function 
continuous 

function 
continuous 
leave proof equivalence exercise reader 
easy see functions fst snd continuous 
cpo continuous functions continuous function hf gi theta fst ffi hf gi snd ffi hf gi continuous function theta hfst ffi snd ffi hi function hf gi hf gi 
pictorial way stating equational properties operator delta deltai commutative diagram 
desired property stated manner cpo continuous functions unique continuous function hf gi completes diagram theta snd fst hf gi phi phi phi phi phi phi phi phi phi hy oe referred universal property operator theta 
operators describe universal properties satisfy form basis system equational reasoning continuous functions 
virtually functions needed describe semantics wide variety programming languages may built expressing universal properties 
carl gunter dana scott continuous functions may define continuous function theta takes setting theta hf ffi fst ffi theta theta easy show id theta id id theta ffi theta ffi theta ffi note overloaded symbol theta works pairs domains pairs functions 
sort overloading quite common mathematics 
case follow example mathematicians call functor 
important relationship operators theta 
cpo 
function apply theta apply function element function apply continuous 
function theta continuous function curry 
curry 
curry unique continuous function diagram commute theta curry theta id apply theta gamma gamma gamma gamma gamma gamma uniqueness condition equivalent equation curry apply ffi theta id see suppose equation holds satisfies apply ffi theta id curry curry apply ffi theta id uniqueness condition satisfied 
hand curry uniquely determined diagram equation follows immediately commutativity diagram semantic domains theta theta id apply theta gamma gamma gamma gamma gamma gamma apply ffi theta id 
useful notation products 
write theta theta theta gamma theta define projections theta snd ffi fst gammai similarly defines version pairing operation identity point domain defining hf hhf gamma versions projection pairing satisfy universal property similar binary product 
church notation 
wish define function say natural numbers natural numbers typically describing action function generic number variable previously defined functions 
example squaring function action 
multiplication function 
may define functions example function takes function ffi continuing way may construct increasingly complex function definitions 
useful notation functions alleviates necessity introducing intermediate names 
purpose served terminology known notation originally due church 
idea 
introducing term describing action function simply gives function name basically description argument 
case writes ffi notation define introducing defining function ffi carl gunter dana scott expression says function computed argument substituting variable expression ffi greek letter operator binds variables primarily historical accident 
various programming languages incorporate essentially equivalent notation names 
mathematics textbooks common avoid notation assuming conventions variable names 
example may write gamma function takes real number argument produces result square number double 
expression denote function takes numbers arguments values produces square number plus square plus product 
provide name function writing function takes pair numbers produces number 
notation function takes number argument produces function 
example function 
hard see closely related function curry discussed 
modulo fact defined curry domains written curry 
define directly write definition need differently takes pair argument 
write impediment notation describe higher order functions 
example takes function evaluates number ffi takes function composes 
definitions highlight critical issue 
note definitions ambiguous stand 
function take example functions numbers reals argument take function numbers semantic domains sets numbers argument 
sense 
need indicate expression types variables constants types understood 
write operator real valued function argument pn operator pn valued function 
far said applies class spaces functions products operator curry defined 
purposes programming semantics need semantic theory includes concept fixed point 
fixed points guaranteed stay realm cpo continuous functions 
crucial fact process abstraction preserves continuity 
curry continuous may notational tools described complete freedom sure recursive definitions notation sense 
demonstrating typed calculus system notations describing informally really useful explaining semantics programming languages objective chapter 
see provides considerable latitude writing function definitions simple mathematically perspicuous manner 
smash products 
product theta cpo elements form 
distinct members theta programming semantics occasions desirable identify pairs 
purpose collapsed version product called smash product 
cpo smash product omega set theta omega omega new element pair 
ordering pairs coordinatewise stipulate omega omega continuous surjection smash theta omega smash omega carl gunter dana scott function establishes useful relationship theta omega fact projection corresponding embedding function omega theta pair omega say function theta 
theta continuous ffi unique strict continuous function completes diagram theta omega smash strict continuous functions omega smash ffi theta ffi unique strict continuous function completes diagram omega theta omega theta smash smash omega theta product theta function space relationship smash product omega strict function space ffi 
particular strict continuous function strict apply strict function unique strict function strict curry diagram commutes omega strict curry omega id strict apply ffi 
omega gamma gamma gamma gamma gamma gamma sums lifts 
cpo define coalesced sum phi set gamma theta gamma theta semantic domains gamma gamma sets respective bottom elements removed new element pair 
ordered phi strict continuous functions inl ffi phi inr ffi phi inl inr ffi 
ffi 
strict continuous functions unique strict continuous function completes diagram phi inr inl phi phi phi phi phi phi phi phi phi hj function 
continuous functions ffi 
ffi 
define phi inl ffi inr ffi phi ffi 
phi product useful notation coalesced sum 
define phi phi phi gamma phi inr ffi inl gammai may define prove universal property 
carl gunter dana scott ffi delta delta delta delta delta oe 
ffi ffi delta delta delta delta delta lift cpo 
cpo define lift set 
theta new element pair partial ordering stipulating 
short 
poset obtained adding new bottom see 
easy show 
cpo define strict continuous function 
ffi 
non strict continuous function 

functions related ffi id ffi id 
inequations reminiscent gave embedding projection pairs second inequation discuss pairs functions 
cpo continuous function unique strict continuous function completes diagram 
continuous function define strict continuous function ffi 
ffi 
semantic domains cpo define separated sum cpo 
phi 
universal properties phi delta know unique strict continuous function completes diagram inr ffi inl ffi phi phi phi phi phi phi phi phi phi hj may continuous function completes diagram 
continuous functions define phi isomorphisms closure properties 
quite interesting relationships operators implied definitions commutative diagrams 
list lemmas 
lemma cpo 
theta theta 
theta theta theta theta 

theta theta 

theta lemma cpo 
omega omega 
omega omega omega omega 
phi ffi 
ffi 
theta ffi 

ffi ffi 
omega ffi 

omega phi omega phi omega carl gunter dana scott 
ffi 
remarked ffi 
bounded complete domains 
difficult see similar closure properties hold operators defined section lemma bounded complete domains cpo ffi 
theta omega phi 
discussion operators defined section may sco sco 
powerdomains 
turn attention collection operators domains 
just defined computable analog function space define computable analog powerset operation 
produce operators 
domain theory literature called powerdomains 
domain write ffl upper powerdomain ffl convex powerdomain ffl lower powerdomain names operators come concepts upper lower semi continuity interested reader consult smy detailed explanation 
commonly appear names 
convex powerdomain introduced gordon plotkin plo referred plotkin powerdomain 
upper powerdomain introduced mike smyth smy called smyth powerdomain 
reasons discuss briefly powerdomain corresponds total correctness interpretation programs 
tony hoare done study partial correctness properties programs remaining powerdomain corresponds partial correctness interpretation bears name 
intuition 
basic intuition underlying powerdomain concept explained concept partial information 
keep things simple assume finite poset asked form poset finite non empty subsets guess take non empty subsets order subset inclusion 
operation ignores semantic domains order structure 
think collection partial descriptions data elements just case partial description mean non empty subset partial description 
reasonable philosophies adopt attempting answer question 
suppose example hold bag fruit wish give information bag 
description fruit bag yellow fruit red fruit 
description basic pieces data yellow fruit red fruit 
restrict kinds fruit bag 
informative description kind provide restrictions 
consider example fruit bag yellow fruit cherry 
pieces data yellow fruit cherry 
data provide restrictions contents bag ruling possibility apple example informative statement bag contents 
hand fruit bag yellow fruit red fruit purple fruit 
informative description permissive instance rule possibility bag holds grape 
suppose subsets poset previous paragraph 
way seeing things say restrictions imposed refinements restrictions imposed basic idea upper powerdomain returning bag fruit analogy view piece information contents bag yellow fruit red fruit bag 
information pieces data yellow fruit red fruit 
data 
restrict possibilities offer positive assertion contents bag 
informative description kind provide enumeration refinement contents banana cherry purple fruit bag 
refined description rule possibility bag holds apple insure cherry 
yellow fruit bag 
carl gunter dana scott informative mention presence red fruit 
suppose subsets poset way seeing things say positive assertions provided extended refined basic idea lower powerdomain convex powerdomain combines forms information 
example assertion pull fruit bag yellow cherry pull yellow fruit bag pull cherry bag 
combined kind information 
pair assertions means bag holds yellow fruit cherry 
refined description pull fruit bag banana cherry pull banana bag pull cherry bag 
refined description pull fruit bag yellow red pull yellow fruit bag pull red fruit bag 
reader may curious bags fruit programming semantics 
powerdomains model non deterministic computations wishes speak set outcomes computation 
wishes describe outcomes determine powerdomains 
attempt illustrate idea section formal definitions 
formal definitions 
order give definitions powerdomains helpful little information representation domains concept pre order definition pre order set binary relation reflexive transitive 
conventional think relation indicating larger mathematical logic oe means formula follows hypothesis oe 
course poset pre order 
hand pre order may fail poset satisfying anti symmetry axiom 
words may identifying elements satisfy obtain induced partially ordered set pre order called pre orders 
shall particularly interested special kind subset pre order definition ideal pre order ha subset semantic domains 
finite 
short ideal subset directed downward closed 
pre order set fy yg ideal called principal ideal generated induce poset pre order take poset principal ideals set inclusion 
poset ideals pre order somewhat interesting theorem countable pre order ha poset consisting ideals ordered set inclusion 
element domain set principal ideals proof clearly ideals form poset set inclusion principal ideal element 
see poset complete suppose show ideal certainly upper bound suppose finite 
element contained element finite collection ideals directed element ideal element follows ideal 
see domain show set principal ideals basis 
suppose directed compact suppose finite collection elements ideal element follows principal ideals form directed collection 
obvious upper bound union collection arbitrary follows algebraic cpo principal ideals basis 
countable countably principal ideals domain 
set set finite non empty subsets write set finite subsets including empty set 
poset ha vi define pre ordering follows dually define pre ordering carl gunter dana scott define domain domain ideals hp call convex powerdomain similarly define domains ideals hp hp respectively 
call upper powerdomain lower powerdomain example compute lower powerdomain 

lower powerdomain 
set ideals pre order hp see ideal look note 
fact possible see usually pre order poset 
contain iff may identify ideal union elements isomorphic domain pn subsets subset inclusion 
compute upper powerdomain 
note finite non empty subsets 
particular ideal contains finite subsets 
say set non trivial contain ideal non trivial non trivial non trivial iff ideal non trivial principal ideal generated intersection non trivial elements 
smaller set larger ideal non trivial ideals powerdomain ordered subset inclusion correspond finite subsets ordered superset inclusion 
throw unique trivial ideal see isomorphic domain sets fng ordered superset inclusion 
look convex powerdomain 
iff 

ideal set principal ideal generated distinct principal ideals comparable 
hand ideal arbitrary ideal iff convex powerdomain 
corresponds set finite non empty subsets unioned set arbitrary subsets 
contain 
ordering sets pre ordering extended include infinite sets 
universal closure properties 
define binary operation fw tg semantic domains set ideal function theta continuous 
similar facts apply defined way define fxg fu fx compact xg forms ideal deltag continuous function 
replaces definition similar facts apply 
strictly speaking decorate symbols deltag indices indicate types notation somewhat 
context determine intended 
operators delta delta delta may obvious choices computable analog powerset operator 
attempt provide motivation choosing remainder section 
operators deltag may say point domain element set powerdomain fxg lie powerdomain subset care taken confuse sets powerdomain sets usual sense 
relations element subset described different properties different powerdomains 
may case subset case 
get idea powerdomains related semantics non deterministic programs discuss non deterministic partial functions noted correspondence partial functions strict functions 
ffi 
may thought meanings deterministic programs output program uniquely determined input meaning partial function 
suppose dealing programs permit finite non determinism discussed section non determinism chapter peter mosses 
may wish think program having meaning function 
powerdomains 
example program may give output input want meaning program satisfy 
different powerdomains reflect different views relate various possible program behaviors case divergence 
upper powerdomain identifies program behaviors may diverge 
example program give output diverge inputs identified program diverges program gives output inputs meaning 
hand lower powerdomain interpretation programs meaning meaning divergent program lower powerdomain 
convex powerdomain programs meaning distinct derive properties powerdomains discussed previous section operators need introduce concept domain binary operator 
carl gunter dana scott definition continuous algebra signature cpo continuous binary function theta refer collection axioms theory 
associativity 
commutativity 
idempotence 
known semi lattice axioms 
homomorphism continuous algebras continuous function easy check domain algebras satisfies free continuous algebra satisfies theorem domain 
suppose continuous algebra satisfies continuous unique homomorphism ext completes diagram deltag ext proof hint fx principal ideal generated define ext delta delta delta 
function unique continuous extension ext sg 
consider axiom set axioms obtained adding axiom axioms similarly obtained adding axiom axioms point theorem holds replaced respectively respectively 
case smash product lift operators diagram theorem gives rise important operation functions 
continuous function unique homomorphism completes diagram semantic domains deltag deltag defines ext deltag ffi 
course functions similar definitions 
powerdomains preserve property bounded completeness lemma bounded complete domain proof leave reader exercise showing domain bounded complete finite bounded subset basis upper bound 
see bounded complete just note pair sets ideal generated union upper bound ideals generated see bounded complete suppose set elements elements upper bound fx yg 
set non empty fu vg bounded 
hard see ideal generated upper bound ideals generated bifinite domains 
operators discussed far convex powerdomain delta take bounded complete domains bounded complete domains 
see simple example consider finite poset theta elements theta fh truei hfalse ig truei hfalse falsei hfalse hard see minimal upper bounds fu vg respect ordering upper bound fu exists theta bounded complete 
section introduce natural class domains operators discussed including convex powerdomain closed 
class defined follows definition cpo 
set finitary projections finite image 
said bifinite countable directed id carl gunter dana scott bifinite cpo motivated part considerations category theory definition restatement categorical definition 
defined plotkin plo called sfp objects term bifinite due paul taylor 
bifinite domains various closely related classes cpo discussed names strongly algebraic smy gun gun domains 
plotkin orders 
suggested earlier image finitary projection domain viewed approximation bifinite domain directed limit finite approximations 
really saying structure 
follows properties finitary projections mentioned earlier finitary projection im finite im 
fact set directed id possible show domain fim mg basis 
may correspondence noted theorem provide condition basis domain characterizes domain bifinite 
recall posets directed definition poset plotkin order finite subset finite set theorem equivalent cpo 
bifinite 

domain plotkin order 
get idea plotkin order looks helps definition 
poset finite set upper bound minimal upper bound implies set minimal upper bounds said complete upper bound plotkin order suppose finite 
finite set contain complete set minimal upper bounds 
shows fact plotkin orders finite subset complete set minimal upper bounds 
rules configurations pictured pair points indicated closed circles complete set minimal upper bounds 
set finite second fact finite subset finite complete set minimal upper bounds 
rules configurations pictured pair points indicated closed circles complete set minimal upper bounds finite 
having finite complete sets minimal upper bounds finite subsets sufficient condition characterizing plotkin orders 
see semantic domains ffl ffl ffl ffl ffl ffl ffi ffi ffi ffi ffi ffi ffi ffi ffi delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta gamma gamma gamma gamma delta delta delta delta delta delta delta delta delta delta delta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma phi phi phi phi phi phi phi phi phi phi phi phi phi gamma gamma gamma gamma gamma gamma theta theta theta theta theta theta theta theta theta theta theta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma posets plotkin orders 
poset finite complete sets minimal upper bounds finite subsets 
finite fx minimal upper bound ug finite 
third fact plotkin orders finite finite 
see go wrong note infinite pair points indicated closed circles 
closure properties 
proposition bounded complete domain bifinite 
proof suppose bounded complete finite subset basis fx upper bound finite subset note finite claim 
suppose upper bound finite set 
algebraic directed subset elements compact 
directed upper bound compact 
shows 
suppose bounded upper bound upper bound set fx vg upper bound bounded 
upper bound apparently lies conclude directed 
carl gunter dana scott theorem bifinite poset fp finitary projections algebraic lattice inclusion map fp 
embedding 
proof sketch uses theorem show fp algebraic lattice 
suppose continuous 
fx show set 
set determines finitary projection discussion theorem 
hand finitary projection im remaining steps required verify 
projection straight forward 
lemma bifinite domains cpo ffi 
theta omega phi 
proof outline proofs sample cases 
function space operator 
suppose finitary projections 
continuous function define theta ffi ffi function theta defines finitary projection finite images theta 
set functions theta finitary projections finite image easy see id bifinite 
encounter function theta section 
see bifinite shows set fp fp im finiteg directed identity upper bound 
functions finitary projections finite images bifinite 
may conclude lemma bifinite domains robust closure properties 
bifinite domains special 
largest class domains closed operators listed lemma 
fact theorem domains bifinite 
theorem due smyth proof may smy 
carried analyzing cases pictured showing domain bifinite 
similar result bounded complete domains gun 
semantic domains recursive definitions domains 
data types arise semantics computer programming languages may seen solutions recursive domain equations 
consider example equation course isomorphism equality distinction moment 
go finding domain solves equation 
suppose start point domain approximation desired solution 
proof fixed point theorem guide build domain second approximation 
unique embedding gives precise sense approximates approximation solution domain embedding continue path build sequence gamma 
gamma 
gamma 
delta delta delta approximations full simple binary tree 
get domain add limits branches 
resulting domain full simple binary tree limit points added solution informal idea mathematically precise time sufficiently general 
solving domain equations closures 
section discuss technique solving recursive domain equations relating domains functions image map im ideas previous section solve equations 
closely related ways doing illustrate 
concept definition cpo 
continuous function closure continuous function ffi id ffi id analogy notion finitary projection say function finitary closure ffi id im domain 
event domain requirement im domain unnecessary lemma domain satisfies equation ffi id im domain 
lemma proved showing fr forms basis im 
say domain closure isomorphic im finitary closure fc poset finitary closures lemma domain fc cpo 
carl gunter dana scott definition say operator cpo representable cpo continuous function completes diagram isomorphism fc cpo fc cpo im im im im closure idea extends operators 
example function space operator delta delta representable cpo continuous function fc theta fc fc fc im im im operator hf defined representable operators note composition representable operators representable 
theorem operator representable cpo domain 
proof suppose represents fixed point theorem fc 
im im im im desired domain 
know solve domain equations 
example solve need find domain continuous function represents operator left problem finding domain operations may represented 
step look simple structure represent operations interested 
sets set functions cpo cpo pointwise ordering 
hard see domain equation theta point lattice solutions cpo fact cpo isomorphic algebraic cpo pn subsets discussed section 
particularly interesting theorem countably algebraic lattice closure pn semantic domains proof enumeration basis fl sg 
fn lg 
leave reader easy demonstration continuous ffi id ffi id structures pn referred universal domains rich collection domains retracts 
remainder section discuss similar constructions show may provide representations operators 
unfortunately representation operator pn 
interesting operators representable pn 
particular lemma function space operator representable pn 
proof consider algebraic lattice functions pn pn 
theorem know continuous functions phi pn 
pn pn psi pn pn pn phi ffi psi id psi ffi phi id suppose fc pn ffi id ffi id 
continuous function pn pn theta ffi ffi define 
psi ffi theta ffi phi see function finitary closure take pn compute 
ffi 
psi ffi theta ffi phi psi 
ffi phi 
ffi psi ffi theta ffi phi ffi psi ffi phi 
ffi phi ffi theta ffi phi 
ffi psi 
ffi ffi phi 
ffi ffi psi 
ffi phi 
ffi 

psi 
ffi phi 
ffi psi 
phi 
defined function 
fc pn theta fc pn fc pn demonstrate representation function space operator 
fc pn show isomorphism im im im carl gunter dana scott fc pn 
evident isomorphism continuous functions im im continuous functions pn pn ffi ffi claim psi cuts isomorphism functions sets image 

phi ffi psi id need show psi ffi phi 

psi 
ffi phi 
ffi psi ffi phi psi ffi phi ffi psi ffi phi 
ffi psi 
ffi phi 
ffi im 
im im may conclude 
represents pn 
similar construction carried product operator 
suppose phi theta pn 
pn theta pn psi theta pn theta pn pn phi theta ffi psi theta id psi theta ffi phi theta id fp pn define theta psi theta ffi theta ffi phi theta leave reader demonstration sense theta represents product operator 
suppose algebraic lattice 
continuous functions phi pn pn psi pn pn phi ffi psi id psi ffi phi id function rl psi ffi phi represents constant operator 
im psi ffi phi similar argument show constant operator 
representable domain closure modelling untyped calculus 
tempting try solve domain equation methods just discussed 
unfortunately equation corresponding fact point set semantic domains possible self map shows guarantee result interesting 
way build structure wiped fixed point process 
methods described sco sco sco sco direct general 
lemma non trivial cpo 
product function space operators represented non trivial domains theta proof represent theta theta closure theta theta theta theta theta theta theta theta theta 
theta non trivial theta closure representable cpo cpo non trivial theorem non trivial domain represents products function spaces non trivial domain theta image closure proof domains lemma 
theta theta 
theta 
theta note fact pn represented closure get non trivial solution theta take theorem pn 
domain 
answer satisfying isomorphisms model strong calculus 
expand syntax calculus section chapter mosses allow pairings pair fst snd mosses points semantic function defines different expressions mapped values 
say model satisfies certain equations 
particular isomorphisms obtained theorems equations satisfied 
provided free 

provided free carl gunter dana scott 
fst pair 
snd pair 
pair fst snd equations third sixth especially emphasize isomorphisms theta models represented closure theta isomorphism 
follows special equations independent 
question brought add equations relating functional abstraction pairing 
particular interesting pair pair equation identifies primitive pairing called pointwise pairing 
equation independent model obtained model introducing new pairing application operation things pointwise suitable sense 
kinds models relate functional structure constructs 
suppose domains satisfy just equations 
primitive operations defined 
operation abstraction sure variable binding operator somewhat quantifier algebraic nature 
stated application binary operation pair fst snd constants 
define binary ternary unary operations pair pair pair fst snd pair snd fst 
words domain model kinds algebras 
general algebra set operations defined values set 
simplest situation consider finitary operations operations fixed finite number arguments 
giving algebra sequence arities fundamental operations called signature algebra 
ring just binary operations addition multiplication making signature 
subtraction definable order logic addition definition equational 
may better consider ring algebra signature subtraction taken primitive 
course minus operation unary 
signature popular 
strictly speaking different signatures correspond algebras different types 
algebra signature equivalent signature rings algebras special properties 
continuous algebra mean domain various continuous operations singled 
particular calculus model considered continuous algebra signature 
binary operation operation functional application 
indicates ary operation semantic domains just constant 
know constants pair fst snd 
popular constants literature calculus called terms abstraction defined follows enjoy equations algebra see example bar fact equation involving operator rewritten purely algebraically terms application 
call expression notation applicative algebra variables combination 
combination defines ary operation delta delta delta remarking algebras obtained combinations rich 
series papers eng eng discussed just rich algebras 
representative result exhibited 
theorem signature combinations defining operations arities continuous algebra signature domain retract isomorphic subalgebra fixed algebra structure proof retract regarded subset continuous operations naturally extended continuous operations arities 
solve problem operations depend choice say start subalgebra wrong algebra 
call operations going define representation subalgebra means continuous function ae defined means fixed point equation ae pair pair ae fst fst pair ae fst fst 
pair sn ae fst fst sn delta delta delta way build ae elements operations 
question read coded information 
carl gunter dana scott consider combinations fst snd fst snd snd 
fst snd snd delta delta delta snd rewritten terms fst snd 
calculate ae ae delta delta delta ae ae means consider algebra hd find means definition ae algebra ha isomorphic subalgebra algebra 
solving domain equations projections 
mentioned earlier slightly drawback pn domain solving recursive domain equations fact represent sum operator 
try overcome problem operator delta delta substitute representable pn 
added top element gets way 
probably possible find cpo represent operators theta 
sake variety discuss slightly different method solving domain equations 
say operator cpo representable cpo continuous function completes diagram isomorphism fp cpo fp cpo im im chance confusion just term representable remainder section 
fp cpo solve domain equations way provided find domains necessary operators represented 
construction suitable domain somewhat involved case pn 
describing basis domain set rational numbers form basis domain take finite non empty unions half open intervals fs tg 
typical element look jh jh jh jh jh jh semantic domains order sets superset interval element 
top element ordering 
adjoin emptyset say get boolean algebra 
note complement finite union intervals empty 
particular interval contains proper sub interval boolean algebra atomless 
countable isomorphism countable atomless boolean algebra free countably generators 
boolean algebra property countable boolean algebra isomorphic subalgebra 
suppose countable bounded complete poset 
boolean algebra subsets generated subsets form fy yg order collection superset largest element 
map 
monotone injection preserves existing upper bounds 
subset bounded just case non empty 
maps subalgebra composition ffi cuts isomorphism normal letting domain ideals may conclude theorem bounded complete domain projection see equation 
solution 
proof representable identical proof gave representable pn 
get representation take pair continuous functions phi 
psi phi ffi psi id psi ffi phi id take psi ffi ffi phi representation 
constant operator 
operator 
represented function 


fact lemma operators representable ffi theta omega phi delta delta delta means solutions bounded complete domains quite substantial class recursive equations 
discussion may sco sco sco 
carl gunter dana scott representing operators bifinite domains 
convex powerdomain delta representable preserve bounded completeness 
construct domain operator represented follows 
poset define pairs theta define pre ordering setting domain define domain ideals hm theorem bifinite bifinite domain projection full proof theorem may gun 
attempt offer hint desired fixed point obtained 
step take domain containing single point 
second step elements third step elements fag fbg fbg form partially ordered set pictured 
note element fa bg satisfies fag fa bg fa bg fag identified elements picture 
step elements equivalence sense just mentioned pictured 
leave task drawing picture exercise reader 
noted stage construction embedded map 
fxg 
closed circles intended give hint embedding looks 
technique build domain generalized classes gj 
lemma operators representable ffi theta omega phi delta delta delta delta operators get representation delta take pair continuous functions phi psi phi ffi psi id psi ffi phi id psi ffi ffi phi representation convex powerdomain operator 
semantic domains ffl ffi ffl ffl ffi ffi ffi ffl ffi ffl ffi ffl ffi ffl ffi ffi ffi ffi ffi ffi ffi ffl ffi ffi ffi ffi ffi domain representing operators 
carl gunter dana scott hope reader begun note pattern way operators represented 
operators theta omega phi delta delta delta delta may handled straight corresponding action operators functions 
slightly care taken dealing function space strict function space operators function theta 
stock operators defined chapter quite powerful wide range denotational specifications 
methods show facts representability finitary closures finitary projections apply large class operators satisfy certain sufficient conditions 
understand phenomenon pass general theory operators basic topic study 
theory categories 
people find difficult gain access theory domains described categorical terminology 
hand difficult explain basic concepts domain theory extremely useful general language category theory 
exposition relevance category theory theory semantic domains may sp 
small number categories spaces having properties described known exist 
special traits categories possess 
product function space functors satisfy relationship described section 
property known cartesian closure known characteristic categories sets functions 
cartesian closed categories fixed points morphisms fixed points functors 
feature adapted task acting classes semantic domains 
additional property categories special existence domains representing functors 
say categories desired properties 
particularly interesting example stable structures berry ber space discuss 
interesting new examples categories uncovered researchers time writing chapter 
reader find leads examples published literature listed expect quite different approaches put forward years 
semantic domains bar barendregt 
lambda calculus syntax semantics volume studies logic foundations mathematics 
elsevier revised edition 
ber berry 
stable models typed calculus 
international colloquium automata languages programs pages 
lecture notes computer science vol 
springer 
eng 
combinatory representation varieties universal classes 
algebra universalis 
appear 
eng 
algebra combinators 
algebra universalis 
ghk gierz hofmann keimel lawson mislove scott 
compendium continuous lattices 
springer 
gj gunter jung 
coherence consistency domains 
journal pure applied algebra 
gun gunter 
largest order axiomatizable cartesian closed category domains 
meyer editor logic computer science pages 
ieee computer society june 
gun gunter 
sets semantics bounded nondeterminism 
manuscript 
kt tang 
effectively spaces 
theoretical computer science 
plo plotkin 
powerdomain construction 
siam journal computing 
ev 
rule semantics extended lambda calculus 
main melton mislove schmidt editors mathematical foundations programming language semantics pages 
lecture notes computer science vol 
springer april 
sco scott 
data types lattices 
siam journal computing 
sco scott 
logic programming languages 
communications acm 
sco scott 
lambda calculus models philosophy 
barwise editor kleene symposium pages 
north holland 
carl gunter dana scott sco scott 
relating theories lambda calculus 
seldin hindley editors curry essays combinatory logic lambda calculus formalism pages 
academic press 
sco scott 
ordered sets computer science 
rival editor ordered sets pages 
reidel 
sco scott 
domains denotational semantics 
nielsen schmidt editors international colloquium automata languages programs pages 
lecture notes computer science vol 
springer 
sco scott 
lectures mathematical theory computation 
broy schmidt editors theoretical foundations programming methodology pages 
nato advanced study institutes series reidel 
smy smyth 
effectively domains 
theoretical computer science 
smy smyth 
power domains 
journal computer system sciences 
smy smyth 
largest cartesian closed category domains 
theoretical computer science 
smy smyth 
power domains predicate transformers topological view 
diaz editor international colloquium automata languages programs pages 
lecture notes computer science vol 
springer 
sp smyth plotkin 
category theoretic solution recursive domain equations 
siam journal computing 
