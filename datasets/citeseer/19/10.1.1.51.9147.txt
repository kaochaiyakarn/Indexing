replication role experimental computer science rr brooks daly miller roper wood empirical foundations computer science role replication experimental computer science discussed 
various kinds internal external replication differentiated 
confirming power external replications results experimental computer science provisionally accepted 
extension basili framework experimentation software engineering proposed fully differentiate various kinds replication powers confirmation 
guidance level reported detail required better enable perform meaningful replication 
concluded external replications experiments computer science vital part play realisation generalizable results 
keywords empirical experimental external repeatable replication experimentation computer science exact process 
experimental design difficult experimental process error prone 
consequence experimental results external agency 
external replication cornerstone modern scientific ideology provides supporting evidence questions validity original experiment 
researchers repeating individual empirical confidence built procedure result 
result best regarded limited importance worst suspicion dept computer science university strathclyde livingstone tower richmond street glasgow xh andy cs strath ac uk mistrust 
replication takes forms internal external 
internal replication undertaken original experimenters external replication undertaken independent researchers critical establishing sound results 
unfortunately numerous empirical studies software engineering literature lacking respect experimental methods poorly reported impossible perform external replication study 
example instructions task materials subjects may fully reported may unobtainable 
various authors criticised poor reporting example basili may case required quality completeness reporting theses higher degrees highly detailed technical reports 
generally speaking feel regarded research advocacy managed support idea lacks rigour characteristic empirical studies established areas modern scientific disciplines 
papers published respected journals proceedings escape criticism example see brooks provide critical commentary empirical study recursion iteration sinha vessey 
sections follow provide motivation researchers address role replication experimental computer science general discussion role replication scientific ideology practice 
various kinds internal external replication differentiated 
noted article concerned notion replication applies individual experimental design 
article concerned programs research involving research team may reported individually collectively independent research research teams seeking check improve findings research teams 
notion various kinds replication carry different powers confirmation developed 
confirming power external replications argued principles guidelines software engineering arising experimental computer science treated caution 
framework categorising various kinds replication extends basili framework experimentation software engineering section discusses examples various types replication study 
penultimate section presents guidance level reported detail better enable perform meaningful replication 
conclude external replications vital part play realisation generalizable results 
background empirical study replicable usually reasons need wary devoting resources necessary performing replication study 
background may properly researched empirical study may addressing wrong issue 
inappropriate methods may example people involved strictly controlled laboratory experiments usually useful qualitative ethnographic forms experimentation 
errors commission omission may experimental variables may incorrectly classified 
example scanlan shneiderman making time measurable dependent variable subjects time required claims result significant difference may washed 
experimental result shneiderman called question utility detailed flowcharts stating conjecture detailed flowcharts merely redundant presentation information contained programming language statements 
flaw identified scanlan classified error omission scanlan seen decline flowcharts way represent algorithms 
scanlan went design new experiment test hypothesis time dependent measure claimed experiment shows significantly time required comprehend algorithms represented flowcharts 
missing details may prevent reader forming view worth data example error estimates may provided critical measures raw data may crudely summarised full 
statistical procedures may 
alternative interpretations may people involved interpretation placed data 
agree collins regards experiment performed alternative explanation data overlooked 
example comparative study development times involving subjects moreau concluded significant difference favour 
subjects took longer third task 
experimenters simply attributed debugging difficulty appeared checked real cause problem 
failure discuss alternative interpretations data prevent reviewer performing meaningful meta analysis research area 
brooks example providing reader alternative interpretations 
may poorly expressed simply justified analysis 
takes effort performing replication study order able critically appreciate piece 
doubts need software engineers principles guidelines professional community high confidence application safety critical 
doubts need solve problems software maintenance improve software economics 
doubts need solid empirical foundations claims software 
stated excerpts report computer science technology board called system maintenance may constitute percent system cost lifetime absence stronger scientific engineering foundation complex software systems produced brute force 
generation software engineering research generation educating students foundation strong serious software problems persist 
view fundamental fully justified 
real import learned original conference 
potts cast similar harsh doubts practical difference software engineering research years 
established principles guidelines regarding imperative programming written page jones 
surprised order principles guidelines wanting 
gained critical examination previous empirical studies replicating experiments external replications course performing new experiments modern software technologies 
huxley noted science common life confidence law exact proportion absence variation result experimental verifications 
greater number experimental verifications better time additional verifications carry power confirmation 
human component rich variety software hardware technologies surely community perform verifications 
exceptional circumstances shot studies relied example criteria met large number subjects ii large effect size iii peer review criticism 
strongly agree curtis says results far impressive emerge program research shot studies 
said written quality control software development card 
ironic say quality control mechanism replication especially external replication little practiced doing science engineering 
additional irony current state software development practice version programming suggested fault recovery mechanism see example 
know little doing right replicating system functionality programs 
concerning particular flawed study psychology accepted valid long time broad wade wrote helping raise generations undergraduates replicate study 
question equally addressed educators computer science students regarding numerous studies results communicated apparently quite students 
replication ideology subjecting theory experimental test crucial scientific activity 
popper explains researchers sure results reporting stating take observations quite seriously accept scientific observation repeated tested 
coupled advice modern scientific ideology demands experimental results replicable external agency 
example lewis rightly claim precise repeatable experiments hallmark mature scientific engineering discipline 
furthermore goldstein goldstein take step stating take granted observation determination fact reputable competent scientist 
may necessary repeat observation confirm reject 
science limited call public facts 
anybody able check experimental observations repeatable 
researcher repeatable regard scientific community execute replications just verify experimental results 
example huxley stated scientific inquiry matter duty expose supposed law possible kind verification 
broad wade description scientific ideology consider replication third check verifying scientific claims peer review system awards research journal takes place prior publication 
describe ideal reporting experiments follows scientist claims new discovery way verify claim 
describing experiment researcher list type equipment procedure followed chef recipe 
important new discovery sooner researchers try replicate laboratories 
replication concerned way original hypothesis expressed 
smith stated replication things tests linguistic formulation hypothesis second tests sufficiency explicit conditions occurrence phenomena 
example criteria subject participation software engineering experiment may insufficiently specific result replication yields different results due variability unaccounted subjects 
original hypothesis may linguistically expressed encourage expressed wrong meaning 
example henry humphrey state hypothesis follows hypothesis study systems designed implemented object oriented manner easier maintain designed implemented structured techniques 
order test subjects asked modifications object oriented system functionally equivalent procedure oriented system 
data analysis henry humphrey concluded experiment supports hypothesis subjects produce maintainable code object oriented language procedure oriented language turns meaning original hypothesis subjects maintain different systems produce code tested maintainability 
replication practice frequency replication studies schools colleges universities replication studies performed daily 
studies usually scaled versions performed students act learning confirming power 
collins notes known area confirmatory power similar looking experiments 
experiments performed day schools universities part scientific training students confirming power way tests results supposed reveal 
employed research rarely perform replication studies 
collins notes vast majority science replicability axiom matter practice 
broad wade draw attention lack replication stating erroneous science turned replication regularly practiced self policing imaginary mechanism 
broad wade simpson traction replication probably occasions history science philosopher ideal replicability attained 
broad wade simpson traction watched traction unsuccessfully tried repeat biochemistry experiment concerned protein synthesis 
course broad wade saga cold fusion 
laboratories world tried repeat cold fusion experiment see close amato 
ordinarily scientist trying replicate poorly reported experiment 
lure cheap relatively pollution free energy abundance exceptional motivation 
regarding frequency external replication software engineering research know reviews mention external replication studies sharpe investigation characteristics empirical software maintenance studies roper selected annotated bibliography software testing 
defining replication care taken clarify meant replication 
universe forever changing 
human observers subjects unique brooks curtis report empirically discovered programming ability differences ranging 
number measurements describe experimental setting 
art experimental science making errors commission omission 
accuracy observations improved time uncertainty principle important 
strictly speaking correct talk partial replication goal performing near exact replication possible 
exact replication unattainable 
broad wade exact replication impractical undertaking recipe methods incompletely reported resource intensive credit science won performing original 
draw attention important activity improving experiments 
state scientists repeat experiments rivals colleagues large ambitious repeat recipes purpose improving 
adaptations improvements extensions 
process course experiment corroborated 
baroudi orlikowski qualify note study fails reject null hypothesis due low power phenomenon possible 
replications study greater power may resolve indeterminacy 
replication framework stated earlier concerned replication applies individual experimental design 
mean internal replication experimenter research team carried series similar experiments reported individually collectively example korson claimed succeeded providing internal replicability stated study demonstrated carefully designed empirical study programmers lead replicable unambiguous 
internal replications involving evolutionary series experiments confirmatory power 
curtis stated basic finding replicated different tasks convincing 
course internal replications carried design part program research sensitivity results required improving relatively commonplace external replication mean published experiments carried researcher research team independent originally carried empirical 
greater confirmatory power inevitably comes external replications 
exact replication unattainable important consider categorise differences 
firstly researchers decide scale recipe improving 
scale represents situation effort perform exact replication possible 
scale substantial improvements experimental recipe extent matter debate study counts replication 
experiments involving human subjects substantial improvement far subjects probably cases integrity replication compromised 
secondly researchers decide study task domain related task domain 
basic finding replicated different tasks domains carries weight may important confirm results task domain 
required reported detail experiment performed analysed time comes writing findings researcher provide detail surrounding empirical possible order allow replicate 
previous article authors reported problems details missing making replication difficult 
reporting inadequacies replicated 
experimenter employed monitors time subjects sort problems arise hardware failure 
reported monitors controlled subject ready move experimental phase simply just noted phase time 
information prevented speculation monitor variability studies 

subject selection criteria subjective computer science student completed practical pascal programming course met 
example criterion amount programming experience 
objective stating minimum experience required example years programming experience college level 
may reduced subject variability 

expert times testing program published 
separate ways test program way longer 
comparison results required order explain variability arisen 

pretest results published 
important reading subjects performed task allowed direct comparison subjects times direct comparison ability subjects original subjects 
timings collected published 

clear verbally communicated subjects prior experiment additional information points instructions highlighted said 
original researcher went researchers gone reporting experimental details 
published code experiments pretest experimental code instructions pretest experiment 
published individual subject timings just averages statistical tests results 
experimenter major issues surrounding experiment unfortunately omitted details preventing fullest possible replication 
recommend major technical report thesis presenting empirical report seemingly minor details better enable attempt meaningful replication 
discussion basili established experimental framework software engineering replication recognised internal experimental scope example particular experiment may programming team tackling project scope examination increases teams convincing study 
internal replication experimenters results reported replications confirmatory power 
basili framework extended incorporate external replication various forms scale recipe improving large gaps exist literature comes providing empirical evidence specific claims example object oriented development advertised panacea software engineering problems accompanying empirical evidence stand scrutiny 
firm view exists route computer science follow substantial experimentation properly reported allow replications 
conclude external replications experiments computer science vital part play realisation generalizable results 
computer scientists behave conventional scientists 
amato 
redux 
science may 
jack baroudi orlikowski 
problem statistical power mis research 
mis quarterly march 
basili selby 
experimentation software engineering 
ieee transactions software engineering 
william broad nicholas wade 
truth page 
oxford university press 
brooks miller roper wood 
criticisms empirical study recursion iteration 
research report department computer science university strathclyde glasgow 
brooks 
inductive analysis applied evaluation cal tutorial 
interacting computers interdisciplinary journal human computer interaction 
brooks 
studying programmer behavior experimentally problems proper methodology 
communications acm april 
card 
software quality engineering 
information software technology 
close 
hot handle story race cold fusion 
allen publishing 
collins 
changing order replication induction scientific practice pages 
sage publications 
curtis 
measurement experimentation software engineering 
proceedings ieee 
daly brooks miller roper wood 
external replication korson experiment 
research report department computer science university strathclyde glasgow 
excerpts report computer science technology board 
scaling research agenda software engineering 
communications acm 
martin goldstein goldstein 
know exploration scientific process page 
plenum press new york london 
henry matthew humphrey 
controlled experiment evaluate maintainability object oriented software 
proceedings ieee conference software maintenance pages 
huxley 
scientists 
shapley rapport wright editors new treasury science page 
collins london glasgow 
kelly yamamoto 
implementing design diversity achieve fault tolerance 
ieee software 
korson 
empirical study effects modularity program modifiability 
phd thesis college business administration georgia state university 
korson 
empirical study effects modularity program modifiability 
soloway iyengar editors empirical studies programmers workshop pages 
ablex publishing 
volume ablex human computer interaction series 
john lewis henry dennis kafura robert schulman 
empirical study object oriented paradigm software reuse 
oopsla pages 

rigor software complexity measurement experimentation 
journal systems software 
moreau 
programming environment evaluation methodology object oriented systems part ii test case application 
journal object oriented programming 
naur randell editors 
software engineering report conference sponsored nato science committee 
nato 
held germany th th october 
page jones 
practical guide structured systems design 
prentice hall international second edition 
popper 
logic scientific discovery 
hutchinson london revised edition 
potts 
software engineering research 
ieee software 
marc roper 
software testing selected annotated bibliography 
software testing verification reliability 
david scanlan 
structured flowcharts outperform pseudocode experimental comparison 
ieee software september 
sharpe hale characteristics empirical software maintenance studies 
journal software maintenance research practice 
shneiderman mayer mckay heller 
experimental investigations utility detailed flowcharts programming 
communications acm 
sinha vessey 
cognitive fit empirical study recursion iteration 
ieee transactions software engineering 
smith 
problems reduction replication practice scientific method 
annals new york academy sciences 
