storage resource managers middleware components grid storage arie shoshani alex sim gu lawrence berkeley national laboratory berkeley california shoshani lbl gov tel fax amount scientific data generated simulations collected large scale experiments reached levels stored researcher workstation local computer center 
data vital large scientific collaborations dispersed wide area networks 
past concept grid infrastructure mainly emphasized computational aspect supporting large distributed computational tasks managing sharing network bandwidth bandwidth reservation techniques 
discuss concept storage resource managers srms components complement support storage management large distributed datasets 
access data main bottleneck data intensive applications data replicated sites 
srms designed dynamically optimize storage resources help bottleneck 

term storage resource refers storage system shared multiple clients 
term client refer user software program runs behalf user 
storage resource managers srms middleware software modules purpose manage dynamic fashion resides storage resource time 
srms perform file movement operations interact operating systems mass storage systems msss perform file archiving file staging invoke middleware components gridftp perform file transfer operations 
types srms disk resource managers drms tape resource managers hierarchical resource managers 
explain 
storage system allocates space users static fashion administrator interference necessary change allocation srms designed allocate reuse space dynamically 
essential dynamic nature shared resources grid 
disk resource manager drm manages dynamically single shared disk cache 
disk cache single disk collection disks raid system 
disk cache available client operating system provides file system view disk cache usual capability create delete directories files open read write close files 
space pre allocated clients 
amount space allocated client managed dynamically drm 
function drm manage disk cache client resource management policy set administrator disk cache 
policy may restrict number simultaneous requests client may give preferential access clients assigned priority 
addition drm may perform operations get files srms grid 
capability clear describe drms data grid 
drm multiple clients provide added advantage file sharing clients repeated files 
especially useful scientific communities overlapping file access patterns 
cache management policies minimize repeated file transfers disk cache remote grid sites 
cache management policies history anticipated requests 
tape resource manager trm middleware layer interfaces systems manage robotic tapes 
tapes accessible client fairly sophisticated mass storage systems msss hpss unitree systems usually disk cache stage files temporarily transferring clients 
msss typically provide client file system view directory structure allow dynamic open read write close files 
provide way transfer files client space transfer protocols ftp various variants ftp parallel ftp called hpss 
trm function accept requests file transfers clients queue requests case mss busy temporarily apply policy mss resources 
case drm policy may restrict number simultaneous transfer requests client may give preferential access clients assigned priority 
hierarchical storage manager hrm trm staging disk cache 
viewed combination drm trm 
disk cache pre staging files clients sharing files clients 
functionality useful data grid request client may files 
client process file time hrm cache pre stage files 
furthermore transfer large files shared wide area network may sufficiently slow file transferred staged tape 
robotic tape systems mechanical nature latency mounting tape seeking location file 
pre staging help mask latency 
similar file sharing drm staging disk hrm file sharing 
goal minimize staging files robotic tape system 
hrm design experience previous project reported 
concept srm generalized management multiple storage resources site 
cases site srm may site file names directory path file names reflect physical location file names 
gives site flexibility move files storage device site file names changing 
client accesses file site file name may response physical location file name 
client physical file name execute file transfer 
general best srms shared community users access files 
designed monitor file access history maximize sharing files keeping popular files disk cache longer 

role srms data grid suppose client runs analysis program site wishes get data stored files located various sites grid 
client way determining files needs access 
checking file catalog index database system containing information files accomplish step 
refer step request interpretation 
information step referred metadata catalog 
result step set logical file names need accessed 
second step find logical file physically resides replicated 
note single logical file replicated multiple sites 
files pre replicated multiple sites expected system administrator replicated dynamically accessed clients sites 
grid environment information locations replicated files exists replica catalog catalog maps single logical file name multiple site specific files 
site specific file name includes name machine possibly port site directory path system file name 
grid environments today burden thrust clients 
recognized tasks delegated middleware components provide services 
request manager term refer services 
request manager performs request planning strategy request execution plan 
terminology grid projects notably ppdg griphyn esg 
options consider request planning move client program site file move file client site move program data site processing 
possibilities valid middleware development addresses issue 
cases srms play important role 
case program moves site file exists necessary pin file site request file remains site program executed file cache 
program completes file released 
case file needs transferred source site target site client site site necessary pin file source site reserve space target site maintain state till transfer target site complete 
pin released 
srm source site role managing pinning srm target site role allocating space making space removing files necessary reserving space till transfer completes 
srms need deal various failures space reservations persist forever pins persist case release performed 
concept pinning file central srms discussed document 
authors describe layers needed support grid applications fabric connectivity resource collective application layers 
purpose layered approach services layer rely services layers 
fabric layer consists computational resources storage resources network resources catalogs code repositories connectivity layer consists communication authentication delegation resource layer consists components protocols managing various resources computing storage network catalog inquiry see srms belonging resource layer 
collective layer consists services replica catalog replica selection request planning request execution 
request management generic term uses services layer services 
application layer consists application specific services 
request interpretation mentioned belongs layer finding logical files needed application specific application 

practical case analysis scenario describe analysis scenario computation performed client site needed files sites grid 
common special case grid resource usage scientific communities 
schematic diagram analysis scenario shown 
shown client site may multiple clients sharing local disk cache 
clients issues logical request typically consisting logical predicate condition wish analyze 
typical example request high energy physics domain atomic particles accelerated collide high speeds find collisions called events energy gev produced particles 
similar request climate model analysis may get temperatures wind velocity summer months pacific ocean region years 
requests may produced graphical user interface composed client query language 
request interpreter component accepts logical query produces set logical file names contain desired data 
request planner may check replica catalog network services network weather service provides estimate current network availability determine replica site get file 
request executes plan 
example request called dagman directed acyclic graph manager developed condor project 
request communicate various srms grid requesting space allocation file pinning making requests file transfers 
decided delegate task making requests file transfers srms 
drm disk cache disk cache client site specific files requests pinning file transfer requests hrm tape system logical query request interpreter request client 
schematic diagram analysis scenario specifically request set files srm responsibility dynamically allocate space files negotiate remote srms pinning files remote site invoke file transfer services get files sites release files 
making fundamental design choice simplify request task permit clients communicate directly srms making multi file requests 
ability clients request files directly srm basic requirement guided design general assume existence request managers 
furthermore clients able direct requests srms choose 
secondary advantage design logical files site specific files request planning drm disk cache client site property file index replica catalog network weather service network choice facilitates file sharing srms 
clients multi file requests srm choose serve files clients order maximizes file sharing minimizing repeated file transfers network 
analysis scenario shown files brought local disk cache request file requests local drm 
local drm checks file cache 
cache pins file 
communicates srms get files 
implemented versions drms hrm interfaces hpss mass storage system 
hrm implemented combination trm deals reading writing files hpss drm managing disk cache 
drm trm capable queuing requests storage systems interface busy 
example trm interfacing hpss may limited perform staging request concurrently may asked stage hundreds files 
requests queued performed fast hpss perform 
srms grid enabled secure file transfer services provided globus project called gridftp 
drm hrm components process experiments particle physics data grid ppdg earth science grid esg perform grid file replication functions 
hrm demo supercomputing part infrastructure get files multiple locations earth science grid application esg 
described 
evaluating cache replacement policies drms conducting simulations setting real testbeds 

implementation analysis scenario analysis scenario described implemented part demo supercomputing conference 
application demo high energy physics hep 
shows actual setup demo 
client point view system accepts logical query request takes care details figuring files transferred get 
client observe graphical display progress file transfers time 
shows progress transfer file managed client drm 
partially filled bars represent transfer progress 
file arrives processed released client may removed automatically drm needs space additional files 
order illustrate usefulness srms describe detail steps processing logical query grid environment 
bit map index specialized index request interpreter developed part project 
gets input logical request logical conditions range predicates 
example request hep application find files contain collisions events condition holds np average momentum np number produced collision total number particles produced collision 
result bit map index set logical file names star simul tracks star simul tracks chicago berkeley livermore gridftp disk cache logical request bit map index gridftp disk cache drm drm request manager 
setup processing logical analysis requests grid star name experiment national laboratory simul means simulation data date data generated tracks refers type data file number file id set logical file names component request manager 
request manager consists request planning request execution components component chooses site get file execution request 
file may replicated multiple locations chooses appropriate location 
file assigned site file name form url dg mcs anl gov homes sim star simul tracks protocol transferring file dg mcs anl gov machine name homes sim directory path gridftp file transfer monitoring ftp disk cache denver client disk cache gridftp disk cache legend control path data path berkeley server server server server hrm star simul tracks file name 
similarly site file managed srm protocol say hrm drm 
example accessing file hpss tape system url hrm dm lbl gov home dm srm data star simul tracks dm lbl gov name machine hrm running port hrm home dm srm data directory hpss system file resides star simul tracks file name 
note files reside systems may may srm managing storage system 
set demo illustrate srm systems managed srms systems grid middleware gridftp systems middleware software ftp transfer files 
demo set types nodes drm managing storage system lbnl hrm managing access hpss system nersc lbnl srm gridftp available anl ftp available llnl 

display dynamic progress file transfers request manager assembled set urls files needed invokes local drm supercomputing conference floor denver 
local drm checks file cache file contacts site requesting pinning files invoking appropriate file transfer service gridftp ftp demo 
file transferred sends release file notice source site 
srms multi threaded components support simultaneous file transfer requests multiple clients 
request multiple files client drm initiate coordination space reservation pinning files multiple file transfer requests multiple sites 
number concurrent processing file transfer requests policy decision 
multiple clients may share local drm drm may policy restrict amount space number files client hold simultaneously 
display file transfers designed show dynamic progress 
local disk cache checked seconds parameterized choice size files transferred display updated 
horizontal bar file progress display shows total bytes transferred fraction total bytes requested 
moving file bars provides information source location size transfer rate 
shown lower section display 
message section bottom inform client events occur including failures access files reasons system 
scenario limited cases files moved client location 
generalization scenario request planner generates plan execution analysis partitioned run multiple sites sites data reside minimize file transfer traffic 
general scenario data programs move locations best suited execute request efficient manner possible 
general scenario includes moving results computations client storing results storage systems archives grid 
general srms invoked multiple locations single client satisfy request plan 

advantages srms deduced discussion main advantage srm provides smooth synchronization shared resources pinning files releasing files allocating space dynamically needed basis 
reasonable question srms possible gridftp ftp directly done demo 
recall srms perform main functions dynamic space allocation dynamic file pinning 
space pre allocated files permanently locked source site need srms 
grid environment resources need reused dynamically srms essential 
srms perform management quotas queuing requests resources tight clients exceed quota freeing space files allocated released clients similar garbage collection providing management buffers mass storage systems 
pre staging buffering important network bandwidth available client may vary unpredictable fashion 
second advantage srms eliminate unnecessary burden client 
storage system busy srms queue requests refuse request 
client trying till request accepted srm queue request provide client time estimate length queue 
especially useful latency large reading file tape 
wait long client choose access file site wait turn 
similarly shared disk resource temporarily full waiting clients finish processing files queuing requests better alternative simply refusing request 
third advantage clients srms insulate storage systems failures 
important capability especially useful msss complex systems fail time time may temporarily unavailable 
long lasting jobs accessing files typical scientific applications prohibitive abort restart job 
typically burden dealing mss temporary failure falls client 
hrm insulate clients failures monitoring transfer hrm disk failure occurs hrm wait mss recover re stage file 
client perceives slower response 
experience capability shown quite useful real situations 
fourth advantage srms transparently deal network failures 
srms monitor file transfers failures occur re try request 
provide clients information failures clients find alternatives getting file original archive transfer replication site failed 
interest managing inherent unreliability network part extended middleware file transfer service called reliable file transfer 
intended service layer top gridftp try re transfer files case temporary failures network queue requests provide status requests 
services available srms take advantage 
case systems grid middleware software ftp srms need protect clients unreliable network behavior 
fifth advantage srms enhance efficiency grid eliminating unnecessary file transfers sharing files 
mentioned typical scientific investigations multiple clients site overlapping sets files 
presents opportunity srm site choose keep popular files disk cache longer providing clients files disk cache 
managing behavior referred replacement policy deciding dynamically file replace space needed 
problem akin caching algorithms studied extensively computer systems web caching 
caching disk main memory replacement cost grid quite high files replaced remote locations tertiary storage 
deploying efficient replacement policies srms lead significant reductions repeated file transfers grid 
important advantages srms provide streaming model client 
provide stream files client programs files 
especially important large computing tasks processing hundreds thousands files 
typically client space hundreds files brought 
making request srm srm provide client files time streaming files released 
managed srm enforcing quota client amount space allocated number files allocated 
soon files client released srm brings files processing streaming fashion 
advantage streaming model clients set long running task srm manage streaming files pre staging files dynamic allocation space transferring files efficient way possible 

pinning phase pinning concept pinning similar locking 
locking associated content file coordinate reading writing pinning associated location file insure file stays location 
lock released pin temporary time period associated pin automatically released time period 
action pinning file results soft guarantee file stay disk cache pre specified length time 
length pinning time policy determined disk cache manager 
pinning provides way share files permanently assigned location replicated files 
permits dynamic management coordination shared disk caches grid 
count pins released pinning time way avoid pinning files forever 
phase pinning akin known phase locking technique extensively database systems 
phase locking successfully synchronize writing files avoid deadlocks phase pinning especially useful synchronize requests multiple files concurrently client needs files time attempt incrementally pin files execute transfers files releasing soon transferred 
note file replicas read deadlock pin lock result pinned files occur allow requests multiple files concurrently 
assume file requests asynchronous time outs release files enforced pin locks eventually resolved pinned files released time 
phase pinning useful technique avoid system thrashing repeatedly pinning pre emptying pins 
requires coordination srms 

design read write functionality srms request read file srm srm may file cache 
case pins file returns location file cache 
client read file directly disk cache access permission copy transfer file local disk 
case srm expected pin file cache client period time 
behaved client expected release file done 
case applies drms 
file disk cache srm expected get file source location 
drm means getting file remote location 
hrm means getting file mss 
capability simplifies tasks client perform 
return client file srm provides service getting file source location 
getting file remote location tape system may take relatively long time possible client non blocking request 
accommodate possibility srms provide callback function notifies client requested file arrives disk cache location file 
case client called back srms provide status function call client find file arrives 
status function return estimates file arrival time file arrived 
maintain queue scheduling file staging tape disk mss 
especially needed mss temporarily busy 
request stage file hrm checks queue 
hrm queue empty schedules staging immediately 
hrm take advantage queue stage files order optimized mss 
particular schedule order file staging tape id minimize tape mounts described 
drm hrm needs notify client file staged issuing callback client find status 
request write file requires different functionality 
case drm file size provided space allocated client write file 
file size provided large default size assumed available space adjusted file written 
case hrm file written disk cache exactly way drm description 
hrm notifies client file arrived disk callback schedules archived tape mss 
file archived mss srm notifies client callback 
hrm disk cache serving temporary buffer files written tape 
advantage functionality hrm writing file remote mss performed stages transferring file disk cache fast network permits archiving file tape background task 
way hrm eliminate burden client deal busy mss dealing temporary failures mss system 
practical implementation problems srms deal incorrect missing file size 
cases getting putting file srm space srm needs allocate space transfer file disk cache 
file size provided assigned default smaller actual file size cause various failures writing files overflowing total space srm manages 
various methods dealing problem interrupting transfer permitting incremental growth allocated space require dynamic monitoring file transfers ability terminate transfer process necessary 
srms terminate transfer process initiated client case puts file srm disk cache problem presents special challenge 
solution problem usually requires modifications file transfer server program 
srms coordinate third party file movement 
essentially srm site asked pull file form site request client third location 
srms sites coordinate space allocation file pinning file release 
actual transfer file regular way file transfer usefulness functionality clients produce files store temporarily location request movement archive site inverse functionality provided srm site asked push file site 
discussed concept storage resource managers srms argued important role streamlining grid functionality making possible storage resources managed dynamically 
static management resources possible requires continuous human intervention determine file replicas reside 
srms possible manage grid storage resources actual access patterns 
addition srms impose local policies resources allocated resources grid clients 
introduced concept pinning mechanism requesting files stay storage resource file transfer computation takes place 
pinning allows operation coordinated transfer multiple files performed phase pinning process pin files transfer release pins 
developed versions prototype srms test cases part particle physics data grid ppdg earth science data grid esg projects 
prototype hrm developed fermi national accelerator laboratory interfaces mss 
addition efforts underway coordinate srm functionality projects including development hrm thomas jefferson national accelerator facility interface mss european data grid interface castor mss 
emerging concepts interfaces nicely complement grid middleware services developed various grid projects providing efficient reliable file transfer replica catalogs allocation compute resources 
colleagues john wu vijaya natarajan provided bit map index monitoring tool display program sc demo 
acknowledge useful interactions people involved ppdg esg projects european data grid project 
supported office energy research office computational technology research division mathematical information computational sciences department energy contract 
de ac sf 
grid blueprint new computing infrastructure edited ian foster carl kesselman morgan kaufmann publishers july 
access coordination tertiary storage high energy physics application bernardo shoshani sim mss 
particle physics data grid ppdg www ppdg net grid physics network griphyn www griphyn org earth science grid esg www org ian foster carl kesselman steven tuecke anatomy grid enabling scalable virtual organization international journal high performance computing applications 
dagman part condor project www cs wisc edu condor manual inter job dependencies html globus project www globus org allcock chervenak deelman foster kesselman lee sim shoshani williams high performance remote access climate simulation data challenge problem data grid technologies proceedings supercomputing conference 
shoshani bernardo rotem sim multidimensional indexing query coordination tertiary storage management statistical scientific database management conference 

