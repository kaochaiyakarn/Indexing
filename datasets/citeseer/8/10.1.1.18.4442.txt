massachusetts institute technology artificial intelligence laboratory memo december systematic nonlinear planning david mcallester david rosenblitt presents simple sound complete systematic algorithm domain independent strips planning 
simplicity achieved starting ground procedure applying general independently verifiable lifting transformation 
previous planners designed directly lifted procedures 
ground procedure ground version tate nonlin procedure 
tate procedure required determine prerequisite step unfinished plan guaranteed hold linearizations 
allows tate procedure avoid chapman modal truth criterion 
systematicity property plan partial plan examined 
systematicity achieved simple modification tate procedure 
copyright massachusetts institute technology report describes research done artificial intelligence laboratory massachusetts institute technology 
support described provided part electric research laboratories support laboratory artificial intelligence research provided part advanced research projects agency department defense office naval research contract 
strips planning introduced fikes nilsson model kind planning problems people appear solve common sense reasoning 
strips planning corresponds certain formal graph search problem 
john canny observed formal strips planning problem pspace com plete canny 
means essentially sound complete planner search 
known certain np complete pspace complete problems solved efficiently vast majority problems arise practice 
controversial strips planning practical large problems clear certain methods search optimization dramatically improve performance planning algorithms 
planning procedures basic techniques optimize required search process 
earliest planning systems lifted 
means expressions involving variables represent large number different possible ground instances 
earliest planners resolution theorem proving inherited lifted nature lifting lemma resolution fikes nilsson robinson 
addition lifted modern planners nonlinear maintain partial order plan steps total order 
partial order gradually refined planning process sacerdoti sacerdoti tate chapman 
planners abstraction spaces planning done high level abstraction low level details filled high level plan sacerdoti korf yang tenenberg 
nonlinear planners called commitment planners 
gen eral informal principle commitment states low commitment choices making high commitment choices 
lifting example general principle commitment 
searching plan select step plan 
high commitment choice 
lower commitment choice state step plan expression form 
nonlinearity example principle commitment 
select expression form step plan state appear plan committing 
low commitment choice 
presents simple sound complete systematic planning algorithm 
previous planners algorithm uses lifting nonlinearity optimize required algorithm novel features justify simplicity systematicity 
planner simple abstraction easily incorporated algorithm described section 
reasons 
procedure constructed combining independent components simple ground procedure general lifting technique 
previous planning algorithms designed directly lifted procedures 
ground procedure simplified ground version tate nonlin procedure 
observe ground version tate procedure sound complete 
true spite absence subroutine determining prerequisite step incomplete plan guaranteed linearization 
chapman shown subroutine evaluate certain complex modal truth criterion chapman 
algorithm involve subroutine modal truth criterion 
addition simple procedure performs systematic search plan partial plan examined 
systematicity achieved simple modification ground version tate procedure 
strips planning formally define strips planning problem 
initial formulation consider ground case allow variables appear propositions specification operators 
definition strips operator consists operator name plus prerequisite list add list delete list 
elements prerequisite add delete lists proposition expressions 
example blocks world planning operator name move read move block block block prerequisites clear fin clear delete list fin clear add list clear fin 
state world modeled set proposition expressions 
give standard definition result performing strips operation state world definition strips planning problem 
definition strips operator set proposition expressions prerequisites list subset result performing operation state minus delete list plus add list prerequisite list subset result performing state empty set 
definition strips planning problem triple ft set strips operators set initial propositions ft set goal propositions 
definition solution strips planning problem sequence operations member result consecutively applying operations starting initial state results set contains goal set mentioned determining arbitrary strip planning problem solution pspace complete problem 
section presents simplified ground version tate nonlin planning procedure 
nonlinear planning plan sequence operations 
intuitively plans considered equivalent derived reordering non interacting steps 
example consider robot perform bunch tasks room bunch tasks room task formally associated certain goal proposition 
want achieve propositions pn 
operators bm ai achieves pi done room bi achieves qi done room formally ai single prerequisite adds proposition pi delete propositions 
bi defined similarly prerequisite 
operator go prerequisites adds proposition deletes proposition 
analogous operator gi 
goal set qm achieved initial assumptions plan bin 
clearly order ai steps order bi steps matter long ai steps done room bi steps done room plan considered equivalent plan performs ai steps bi steps opposite order 
linear plan solution planning problem abstracted nonlinear plan start go go causal links plan go nonlinear plan contains partial order plan steps 
linear plans considered equivalent different representations nonlinear plan 
define nonlinear plan associated linear plan overcome minor technical difficulty 
linear plan name individual plan steps referring step second step 
nonlinear plan may defined second step 
name step giving operator step steps may involve operator 
provide names steps nonlinear plan assume step associated distinct symbol called name step 
definition symbol table mapping finite set step names operators 
symbol table required contain distinguished step names called start 
start mapped operator prerequisites delete list adds set initial propositions 
mapped operator set prerequisites called goal formulas empty add list delete list 
note symbol table impose ordering constraints step names 
note step names different operator names 
step names say step 
step may map operator named 
note step 
necessarily precede step step names significance place holders steps plan 
consider linear solution strips planning problem 
loss generality assume prerequisite step solution plan true step executed 
step name prerequisite source source may virtual step start 
prerequisite satisfied operation plan prerequisite step unique source preceding step adds includes prerequisites virtual step goal formulas 
notion source motivates definition causal link 
definition causal link triple proposition symbol step name prerequisite step name add list 
causal links written causal links indicate dependencies steps plan 
causal link viewed constraint 
causal link requires step precede step step adds deletes linear tate uses term range causal link 
plan extract causal links plan 
example consider plan bm discussed earlier 
plan set causal links shown 
unfortunately causal links contain relevant ordering constraints plan 
partial order information implicit casual links require ai done 
example shows need ordering information causal links 
definition step name called threat causal link pw step name adds deletes definition safety condition ordering step names 
plan shown step go threat casual link form go go deletes proposition leading safety condition 
similarly step go threat causal link form go ai leading safety conditions form ai go 
safety conditions orderings implicit causal links allow steps executed order precedes ai precedes go go precedes bi 
definition nonlinear plan consists symbol table set casual links set safety conditions 
definition nonlinear plan called complete condi tions hold 
step name appearing causal links safety condi tions entry symbol table 
step name symbol table prerequisite plan contains causal link form pw 
plan contains causal link symbol table contains step name threat causal link sp plan contains safety condition safety condition possible show linear solution strips planning problem corresponds nonlinear plan smallest number causal links safety conditions complete nonlinear plan corresponding linear plan 
nonlinear abstraction linear plan unique arbitrary choice step names 
nonlinear abstraction linear plans determines equivalence relation linear plans linear plans considered equivalent nonlinear abstraction 
definition topological sort nonlinear plan sequence step names symbol table conditions hold 
step sequence start 
step sequence finish 
causal link plan step precedes step safety constraint plan step precedes step definition topological sort nonlinear plan solution executing sequence operations steps start finish steps starting state add list start step results state contain preconditions finish step 
lemma topological sort complete nonlinear plan solu tion 
possible construct planning procedure systematically searches space nonlinear plans 
search systematic technical sense visits plan equivalent plans twice branch search tree divides remaining possibilities disjoint sets potential solutions equivalent plans branch search tree 
defining procedure additional definition needed 
definition nonlinear plan necessarily complete called order inconsistent topological sort 
transitive closure algorithm determine nonlinear plan order inconsistent 
nonlinear plan order inconsistent causal links safety conditions plan define cycle plan steps 
search procedure bounded depth procedure iterative deepening korf 
procedure takes incomplete nonlinear plan cost bound searches completion plan total cost steps completion greater bound 
initially procedure called partial nonlinear plan contains start finish steps corresponding strips planning problem 
assume set allowed operations 
procedure find completion 
nonlinear plan order inconsistent total cost steps greater fail 

ff nonlinear plan complete return 
causal link threat link symbol table contain nondeterministically return 
find completion find completion 
exist step symbol table prerequisite causal link form case nondeterministically 
nondeterministically step name symbol table adds return plan find completion 
select operator oi allowed set op erations ol adds create new entry symbol table maps new step name operator oi 
return plan find pw 
check completion plan cost equivalent renaming steps possible value procedure 
furthermore show distinct execution paths produce equivalent complete plans 
see note plan step uniquely named starting finish step moving backward causal links noting prerequisite link 
implies step uniquely identified way independent step names 
equivalent plans generated different choices steps 
implies order constraints step defined independent step names 
implies completion satisfying step renaming completion satisfying procedure defines systematic search space complete nonlinear plans 
comments procedure procedure previous section essentially simplification tate nonlin procedure technical difference worth noting 
tate procedure uses different notion threat considered threat deletes stronger notion threat threat adds deletes needed systematicity 
tate notion threat possible distinct complete nonlinear plans share common topological sort 
case linear plans unique nonlinear abstractions 
tate weaker notion threat works just better practice 
procedure previous section modified handle planning series abstraction spaces 
suppose proposition expression number expressing abstractness 
want ensure prerequisites satisfied attempt satisfy concrete prerequisites 
steps procedure select prerequisite involved causal link threat existing causal link 
selection prerequisite threatened causal link arbitrarily 
particular selection done way maximizes abstractness prerequisite involved 
done procedure consider concrete prerequisites prerequisites fully handled 
intuitively consider difficult prerequisites considering easy prerequisites 
lemma previous section states complete nonlinear plan safe sense topological sort plan solution 
converse lemma hold exist safe partial orders plan steps correspond complete nonlinear plan 
example consider partial order plan steps shown 
plan prerequisites step wa adds step adds step prerequisite added sa prerequisite added 
unfortunately sa delete partial order plan steps shown safe 
complete plan definition specify wl casual source prerequisite step 
enforce explicit ordering wl 
possible systematically search partial orders step names find committed partial order safe 
unfortunately appears way doing efficiently 
evaluating chapman modal truth criterion node search space expensive 
furthermore example due kambhampati 
example demonstrates necessity white night condition checking safety ground nonlinear plans 
ql finish safe incomplete nonlinear plan treating modal truth criterion nondeterministic procedure done tweak destroys systematicity search choices modal truth criterion disjunctions existential quantifiers correspond dividing space partial orders disjoint sets partial order reached different branches modal truth criterion 
systematically search space partial orders step names different orderings step names correspond ordering actual operations 
implies procedure search systematic search operation sequences 
lifting lifting invented conjunction development resolution theorem proving 
lifting standard technique construction new theorem proving term rewriting algorithms 
application lifting associated lifting lemma states possible computation involving ground expressions lifted computation involving variables ground computation substitution instance lifted computation 
procedure designed ground case case propositions prerequisite list add list delete lists operators contain variables 
procedure lifted handle operator specification schemas plan schemas involving variables 
lifting transformation quite general applies large class nondeterministic programs 
lift procedure previous section note procedure written operator schemas 
operator schema operator variables appear operator name prerequisite list add list delete list 
example blocks world blocks operators form move 
different operators just different substitution instances operator schema move variables procedure previous section operator schemas ground operators step changed read follows 
oi ground instance operator schemas 
member add list ol fail 
create new entry symbol table maps new step name operator ol 
version step ground procedure 
note nondeterministic branching factor step infinite arbitrary ground terms may introduced substitution operation infinitely ground instances single operator schema 
clearly unacceptable practical planning 
lift ground procedure replace step stated 
ol copy fresh variables operator schemas 
member add hst oi fail 
create new entry symbol table maps new step name schema copy oi 
note part step changed 
branching factor part lifted step equal number different operator schemas case blocks world schema step deterministic 
remainder lifted procedure reads identically procedure previous section 
lifted version procedure expressions may contain variables 
equality test expressions contain variables treated nondeterministic operation 
test may return true case equality constraint generated 
test may return false case disequality constraint generated 
example second part step reads member add list oi fail 
determine member add hst oi write simple recursive membership test performs equality test proposition member add list ol 
test return true false 
computation proceeds test returns true generates equality constraint particular member add list oi 
equality constraints invoke unification 
equality constraint generated expressions unified branch nondeterministic computation fails 
version step succeeds unifies element add hst oi 
general lifting transformation statement form ground instance schema replaced copy fresh variables 
equality test treated nondeterministic operation returns true generates constraint returns false gen disequality constraint 
set equality disequality constraints constraints form essential part sound complete lifted planning procedures tweak 
unsatisfiable branch nondeterministic computation fails 
set equality disequality constraints expressions involving variables possible quickly determine constraints satisfiable 
specifically applies unification algorithm equality constraints see constraints satisfied simultaneously 
unification succeeds applies substitution resulting unification expressions 
disequality constraint expressions expression substitution applied constraints unsatisfiable 
constraints satisfiable 
practice unification operation performed incrementally equality constraints generated 
previous lifted nonlinear planning algorithms quite complex failed generate systematic searches 
treating lifting separate optimization performed ground algorithm designed simple sound complete systematic lifted nonlinear procedure 
canny john canny 
unpublished observation 
chapman david chapman 
planning conjunctive goals 
artificial 
fikes nilsson richard fikes nils nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
korf richard korf 
iterative deepening optimal admissible tree search 
proceedings th ijcai pages august 
korf richard korf 
planning search quantitative approach 
arti intelligence 
robinson robinson 
machine oriented logic resolution principle 
jacm january 
sacerdoti earl sacerdoti 
planning hierarchy abstraction spaces 
artificial intelligence 
sacerdoti earl sacerdoti 
nonlinear nature plans 
ijcai pages 
sacerdoti earl sacerdoti 
structure plans behavior 
american elsevier new york ny 
tate austin tate 
generating project networks 
ijcai pages 
yang tenenberg qiang yang josh tenenberg 
ab nonlinear commitment planner 
ijcai pages 
form approved report documentation page om december memorandum 
title 
funding numbers systematic nonlinear planning 
ao ra david mcallester david rosenblitt 
performing organization name address es 
performing organization report number artificial intelligence laboratory technology square aim cambridge massachusetts 
sponsoring monitoring agency name address es 
sponsoring monitoring agency report number office naval research information systems ao arlington virginia 
supplementary notes 
distribution availability statement 
distribution code distribution document unlimited 
maximum words presents simple sound complete ad systematic algo rithm domain independent strips planning 
simplicity achieved starting ground procedure applying general ad independently verifiable lifting transformation 
previous planners designed directly lifted procedures 
ground procedure ground version tate nonlin procedure 
tate procedure required determine prerequisite step unfinished plan guaranteed hold 
tate procedure avoid chapman modal truth criterion 
systematicity property plan partial plan examined 
systematicity achieved simple modification tate procedure 

subject terms key words 
pages automatic planning systematicity search lifting 
cool strips planning nonlinear planning security classification security classification 
security classification 
limitation report page unclassified unclassified unclassified lo cs tr document control form report identified checkmark originating department artificial laboratory ai 
laboratory computer science lcs document type technical report tr 
technical memo tm document information number pages include dod forms printer ec pages 
single sided double sided date print type unknown check included document dod form funding agent form spine printers notes page data blank pages photographs tonal material description page number cover page photo negatives scanning agent signoff date received date scanned scanning agent signature date returned 
