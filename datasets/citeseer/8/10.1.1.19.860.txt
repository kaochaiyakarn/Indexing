dynamic real time deformations space time adaptive sampling gilles mathieu desbrun 
cal marie cani alan barr caltech presents robust adaptive method animating dynamic elastic deformable objects provides guaranteed frame rate 
approach uses novel automatic space time adaptive level detail technique combination green strain tensor formulation 
body partitioned non nested multiresolution hierarchy tetrahedral meshes 
local resolution determined quality condition indicates resolution coarse 
object moves deforms sampling refined concentrate computational load regions deform 
model consists continuous differential equation solved local explicit finite element method 
demonstrate adaptive green strain tensor formulation suppresses unwanted artifacts dynamic behavior compared adaptive mass spring adaptive approaches 
particular damped elastic vibration modes shown nearly unchanged levels refinement 
results context virtual reality system 
user interacts real time dynamic object control rigid tool attached haptic device driven forces derived method 
animating deformable objects real time essential interactive virtual reality applications surgery simulators video games 
important point successful immersion objects deformations dynamic oscillations appear deformation example just succession static postures 
essential point strict guarantee real time 
merely satisfying visual tactile fusion frequencies images force samples second sufficient prevent lag slow motion animation 
addition simulation time synchronized physical time regardless computational platform 
quasi static interactive simulators proposed years computing accurate dynamic deformations real time challenge :10.1.1.10.2603:10.1.1.49.2967
proposes solution problem adaptive physically model locally animated different levels detail 
related background deformable models approaches developed animating deformable objects see thorough overview models aiming real time performance 
global deformation models designed interactive animation restrict deformations combination imag fr cs caltech edu real time multiresolution model allows wide range applications virtual surgery simulators top liver laparoscopic operation immersive simulations bottom toy example 
approach local refinement technique ensure high physical fidelity bounding global computation load guarantee real time animations 
set vibration modes specific class global deformations 
useful realistic deformations called 
particle mass spring systems local description material 
systems allow large deformations displacements fairly easy implement 
equations motion integrated independently particle generally leads fast calculations 
spring stiffness large implicit integration animate hundreds mass points efficiently real time approximations 
deformable models greater physical accuracy derived elasticity theory finite element methods fem 
widely solutions computes equilibrium shape object set limit conditions 
method requires solving large sparse system result compatible real time applications 
matrix allows real time object deformed penalty forces fails model accurate contact object tool :10.1.1.49.2967
inverse matrix updated depending nodes moved user allowing real time animation points :10.1.1.10.2603
precompute effects displacement external point axis directions linear combination deformations animation :10.1.1.33.5545
superposition problems appear technique points moved time 
second main approach elasticity theory called explicit finite elements term explicit refers spatial discretization mistaken common notion time explicit integration :10.1.1.13.9975
way animation performed quite similar mass spring case node fem mesh dynamically integrates motion positions neighboring nodes 
methods give accurate results mass spring systems 
computing local deformations visually discretization level requires fine sampling prevents real time performances interactive rates reached soft bodies simulation steps second performed mass samples :10.1.1.13.9975
summary dynamic techniques simulate number mass samples material time frequency increases material stiffness easily hz common materials 
true real time simulation requires simulation step computed time step duration th second avoid animations unwanted slow motion lag frames second displayed visual feedback 
unfortunately implicit integration techniques allowing larger time steps currently lead real time simulations soon number mass points exceeds points 
attractive way optimize computations maximizing realism guaranteeing frame rate space time adaptive technique 
similar level detail lod hierarchical methods rendering idea locally adapt sampling accuracy simulation computed depending current local deformations 
idea extensively domains received little attention physically animation 
adaptive animation physically animation applying lod computer animation consists simplified animation techniques objects far away moving rapidly sight 
instance dynamic simulation cinematic simple particle motion articulated object viewer 
observe example coherence lods limited 
case deformable objects idea change number nodes inside object depending desired accuracy 
previous uses idea locally refine model regions interest piece cloth represented masses springs refined regions high curvature volumetric mass spring network refines near user controlled cutting lines tetrahedral mesh explicit finite element simulation stiff solid refined fracture lines predetermined regions 
step design models allow refinement large deformation occurs simplification stable regions 
idea applied particle system simulates mud flow division clustering particles obey global behavior specified sph model 
elastic object simulated different local resolutions finite differences applied octree representation 
previous achieved efficiency finite volume finite element method tetrahedral meshes discrete differential operators :10.1.1.24.3427
models main problem consists ensuring deformable model stays self consistent despite change resolution 
hard standard mass spring particle systems underlying physical model refer order find changes parameters stiffness density simulate behavior resolution 
hutchinson increases mass time refinement performed 
proposes convincing solution new spring parameters computed closest elastic continuous representation van gelder stiffness equation 
demonstrate section solution sufficient avoiding artifacts resolutions combined 
theory locally adapting resolution better continuous model resolutions approximations specified behavior 
show section models may introduce diverging instabilities different resolutions combined 
results demonstrate regions simulated different discretization rates tend adopt different vibration modes immediately yields instability strong damping applied 
analysis key understanding solution problem 
overview presents robust adaptive method animating dynamic deformations elastic object real time guaranteed frame rate 
model belongs physics continuous models solved explicit finite element method 
uses green deformation tensor allow large displacements 
achieve real time performance system automatically adapts local resolution region object simulated order concentrate computational load regions deform 
contrary previous approaches demonstrate automatic sampling adaptivity create visible unwanted artifacts physical behavior object 
lastly propose visual haptic interfaces adaptation model transparent user 
results shown context virtual reality system user interacts real time dynamic object control rigid tool 
section describes method locally adapting resolution 
section analyzes different possible deformable models context adaptive simulation concludes solution ensures robustness 
section presents visual haptic interfaces 
section analyzes results comparing gain efficiency adaptive algorithm achieves simulation different deformable bodies 
conclude section 
local adaptive refinement inferred previous section current best approach real time dynamic deformation accurate local computation method 
adopt approach section suppose motion node computed values positions displacements neighboring nodes 
describe formal computations explicit finite element method section 
section presents method providing levels resolution object 
explain locally switch lods neighboring regions simulated different resolutions coexist creating instability 
non nested tetrahedral meshes tetrahedral meshes represent deformable body accurately fit arbitrary geometries 
recursive subdivision meshes defining different resolutions regardless subdivision method quality initial mesh terms angles aspect ratio lost subdivisions 
relaxation re meshing processes incompatible real time applications 
algorithms usually finite element techniques require preservation conformal mesh subdivision process harder 
refinement process may invertible quality mesh may altered comes back coarser level 
avoid drawbacks method relies arbitrary independently defined meshes representing different levels detail 
meshes quasi uniform sampling shape representing deformable body resolution 
meshes representing object completely independent vertex needs shared leaves complete freedom generation 
practice surface object different resolutions volume mesh generator provide tetrahedralization interior simplified meshes 
remainder term parent mesh respectively child mesh meshes represents deformable body immediately coarser resp 
finer scale 
dynamic adaptivity idea algorithm refine coarsen geometric model depending local approximation quality simulation provided deformable model 
suppose quality criterion indicates resolution coarse near active node deactivate mass node activate nodes child mesh sample region fig 
children nodes naturally chosen closer node mesh inside region 
regions form partition space nodes finer level parent parents share child leading coherent refinement 
parent coarse mesh voronoi region child mesh child replaced children sampling coarse region 
similarly group children nodes replaced parent quality criterion indicates coarser sampling sufficient region 
child parent relationship different meshes precomputed stored expensive tests inclusion regions performed simulation 
interface different simulated lods adaptation level refinement local neighboring nodes active node may active call interface nodes 
problem deformable model active node uses position displacement neighboring nodes compute motion 
simple interpolation solve problem information interface node interpolated information currently active tetrahedron located 
tetrahedron may belong coarser finer refinement level see fig 

idea somewhat similar domain decomposition fem 
interface nodes nodes update position coarser resolution active nodes interface nodes enabling joint different resolutions simulations view coarse mesh black finer mesh red 
currently linear interpolation barycentric coordinates interface node tetrahedron update values interface nodes 
see section interpolation coherent model 
computation negligible compared force computation interface different resolutions impede performance method interpolation performed large number interface nodes 
space time adaptive model section describes choice deformable model 
stated earlier want compute dynamics elastic object possibly undergoing large deformation 
compatible adaptive refinement method just described model call node active computes integrates force neighbors positions sufficiently accurate computations remain compatible neighboring regions different resolutions 
sufficient different resolutions approximate static behavior regions simulated different resolutions tend different frequencies amplitudes interference interfaces regions quickly lead numerical instability 
part section compares discusses way previous deformable models handled adaptive simulation algorithm 
describe chosen model explain implemented adaptive animation framework 
comparative analysis deformable models modus comparative study deciding model implemented tested multiple adaptive deformable models testbed 
studied results give simple example oscillations cube elastic material gravity sides attached vertical wall 
time zero cube released horizontal position 
model performed cube simulation different resolutions nodes plotted red black blue respectively 
curves remainder section plot vertical oscillations cube corner time 
test example internal external damping forces 
allows easily compare vibration modes resulting resolutions 
masses springs springs located edges tetrahedral mesh 
stiffness computed 
fig 
depicts results shows mass spring systems clearly fail ensure amplitude frequency oscillations different resolutions 
cauchy strain tensor explicit linear fe cauchy strain tensor provides fast computation node force :10.1.1.13.9975:10.1.1.49.2967
due linear approximations method simple expression robust large displacements 
especially true rotations creates extra forces deform object 
shown fig 
different vibration modes appear simulation 
differences frequencies prevent stability multiresolution setting 
multiresolution test vertical position oscillating cube time mass springs cauchy fe 
cube sampled different resolutions nodes red nodes black nodes blue 
note behavior changes undesirably level detail changes 
multiresolution test nodes fig 
green strain tensor 
note closer resemblance behavior different levels detail damping applied 
previous simplified version tensor better multiresolution properties expenses simplified dynamic behavior see fig 

green strain tensor explicit fe cauchy tensor order approximation green strain tensor 
computationally complex method handles large displacements including global rotations 
dynamic behavior interesting exhibiting complex motions fig 

fig 
demonstrates multiresolution behavior method justifies choice simulations 
similar multiresolution simulations achieved damping added fig 
needed realistic simulations 
deformed shapes cube obtained cauchy simplified cauchy green 
green deformable model strain stress deformation law point material local deformations modeled strain tensor 
green strain tensor expressed matrix 
coefficient ij ij ij equals equals kronecker delta 
vector denotes location material coordinates 
represents point position world coordinates function material coordinates 
coordinate systems match object deformed resulting null strain tensor 
continuous evolves object deformations 
material coordinates point mass fixed position space vary time 
stress tensor represents force distribution inside material 
represented order approximation matrix 
force acting elementary surface ds outward unit normal ds 
linear elasticity assumes stress strain linearly linked spring 
assume material isotropic symmetry considerations state independent coefficients describe material behavior tr identity matrix tr trace 
lame coefficients represents rigidity material measures ability preserve volume incompressible materials infinite 
damping forces damping simply modeled coherent previous tensors 
strain rate tensor time derivative eq 
ij velocity point 
total stress tensor updated similar equation tr control fast material looses kinetic energy 
rigid motions object damped formulation dissipates internal vibrations 
explicit finite elements finite element techniques partition object elements physical equations expressed merging equations large matrix system explicit fem solve element independently local approximation dramatically reducing computational time 
choose tetrahedral elements linear basis functions offer best trade speed efficiency 
element linear basis function node represented vector 
applying point world coordinates inside tetrahedral element gives point th barycentric weight 
weight node equals node nodes ij equations form linear system inverted tetrahedra rest position degenerated 
resulting interpolation functions allow compute material derivatives 
vector field linearly interpolated element barycentric coordinates 
interior point material coordinates value material derivatives expressed applying equation position speed vector allows compute tensors eq 

force node results deformation element expressed see vol kl vol volume mesh node simply sums contributions tetrahedra belongs 
adaptive resolution model adapting space resolution basics multiresolution algorithm described section 
linear basis functions fe model choose define quality criterion represents adequacy piecewise linear functions current deformation state 
maximum difference linear quadratic term displacement field indicated 
minimum distance node neighbors 
laplacian value discontinuity criterion indicating far linear function adjust number local samples ensure linear approximation deformations 
show force volume directly linked laplacian 
displacement field incompressible objects 

computed active node gives fast accurate measure inadequacy node 
thresholds min max control splitting needed discontinuity high merging children varying linearly ensuring adequate linear approximation 
different values single threshold creates hysteresis preventing repetitive oscillations resolutions 
superscript denote value node subscripts denote vector component ux uy uz 
time stepping courant condition ensures proper simulation wave propagating inside object 
provides maximum time step allowable particle dt material rest density 
practice time steps inverse powers display frequency dt dt ensure synchronization simulation display 
particle largest time step satisfying criterion 
particle momentarily reduce time step speed increase high allow better numerical integration 
simple modified euler integration scheme gives results examples 
local nature explicit fe scheme permits scheme semi implicit 
similarly precompute force jacobian matrix represents order approximation force applied node moves 
compute matrix node object rest position assuming neighbors fixed 
assume matrix constant simulation filter integration scheme cost 
semi implicit integration simply consists multiplication precomputed matrix speed vector resulting integration scheme dt dt dt semi implicit integration scheme allows multiply time step factor 
adds artificial damping partially compensated desired reducing see eq 

frame infinite loop hz simulation step nb dt level steps hz particle dt level matches simulation step section equation section section section section section pseudo code algorithm 
guaranteed fame rate immersive applications surgery simulations real time animation take precedence precision 
multiresolution framework tune cost precision ratio guarantee true real time simulation 
machine load updated display conditions addition new sample points 
limits machine reached new samples created merging occurred 
iterative methods convergence criteria technique guarantee real time computations 
visual haptic interfaces providing convincing interfaces important virtual reality applications user see feel virtual object interacting 
adaptation deformable model totally transparent user 
animation external surface displaying triangulation external active nodes produce popping artifacts resolution changes prefer displaying surface fixed resolution 
surface meshes completely independent surface 
animate surface underlying resolution attach surface points animated mesh nodes 
done precomputing level resolution offset surface points closest point closest external triangle formed inside fe nodes 
animation resolution active near surface node surface positioned appropriate active triangle position computed barycentric coordinates triangle 
tests video sequences show create visual artifact surface motion visibly continuous adaptive refinements occuring inside totally transparent user 
force feedback deformable model runs force feedback framework user interacts moving rigid tool 
haptic interface phantom desktop 
device kind requires response forces computed high frequency hz effect natural user 
problem adaptive method high resolution mesh simulated small time steps near rigid tool collision see section 
detect collisions graphics hardware tool simple shape modeled viewing frustum surface deformable object intersects 
save time collision detection performed display ensuring coherent visual collision 
computing penalty forces fail model surface contact tool deformable object :10.1.1.49.2967
approach consists computing object deformation surface displacements imposed motion tool 
collision detection process builds list surface polygons intersecting tool affected surface points moved normal direction away tool 
detect collisions simulation step apply motion gradually surface gets way tool just frame 
prevents discontinuities response force due surface oscillations inside outside tool 
surface points move compute correct response force inner physical model simulation step active mesh nodes linked affected surface point moved 
easily achieved offsets weights define respective position section 
integrating force applied rest deformable object affected mesh node transmits force surface point linked 
surface point sums forces associated mesh points 
force surface point weighted area samples collision surface weighted forces summed returned tool 
results tests video sequences demonstrate method allows true real time manipulations deformable objects 
animate points real time mhz pc frequencies varying hz depending object stiffness particle dt level 
faster cpu model refine deformed regions 
behavior objects tuned physical coefficients see eq 

exhibit realistic response user action intuitive deformations nice oscillations tool removed 
typical values range tests 
fig 
shows snapshots animations method described 
speedup factor multiresolution simulation classical animation technique fixed fine discretization ranges simple examples 
multiresolution scheme takes advantage best available discretization rate offered fine meshes providing real time application impossible 
changing material physical coefficients allows simulation wide scope material behaviors 
blue green yellow indicate increasing levels detail 
discussion developed robust real time adaptive method dynamic simulations 
method handles large displacements stable damping applied previous adaptive methods added lot viscosity avoid numerical instabilities allows simulate different kinds materials 
maintain guaranteed frame rate ensures true real time animation 
new approach relies adaptive simulation reach performances space time sampling automatically adapted locally concentrate computational effort needed 
benefits approach illustrated virtual reality application user interacts deformable body rigid tool 
results show adaptation model resolution totally transparent user 
previous interactive methods addition restricted quasi static deformations able handle topology changes fractures cuts intensive precomputations fixed mesh topology 
method belongs class local approaches fractures cuts computed locally refining model regions interest :10.1.1.13.9975
connections mesh nodes suppressed model cut 
implementing topological changes adaptive framework difficult single resolution tetrahedra cut region partially cut modeled correctly 
simple probably entirely satisfying solution longer activate coarse meshes cut region 
problem surface interface 
best solution probably display surface finest mesh cut region 
includes rapid detection self collision relatively expensive cut areas 
adaptive methods catmull clark subdivision instance investigated 
acknowledgment author eitan zoe wood mark meyer proofreading improving 
partially supported alpes region national science foundation asc part stc computer graphics scientific visualization integrated media systems center nsf engineering research center cooperative 
eec 
baraff witkin 
large steps cloth simulation 
siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley july 

reduction computations physics animation level detail 
proceedings spring conference computer graphics pages 
bro nielsen cotin :10.1.1.49.2967
real time volumetric deformable models surgery simulation finite elements condensation 
eurographics pages 
carlson hodgins 
simulation levels detail real time animation 
proceedings graphic interface pages 
forsyth 
view dependent culling dynamics systems virtual environments 
proceedings symposium interactive graphics pages 
cotin delingette ayache :10.1.1.33.5545
real time elastic deformations soft tissues surgery simulation 
ieee transactions visualization computer graphics jan mar 
desbrun barr 
cani 
interactive multiresolution animation deformable models 
th eurographics workshop computer animation simulation milano 
desbrun 
cani barr 
adaptive simulation soft bodies real time 
computer animation philadelphia usa may 
delingette cotin ayache :10.1.1.13.9975
hybrid elastic model allowing real time cutting deformations force feedback surgery training simulation 
computer animation may 
desbrun schroder barr 
interactive animation structured deformable objects 
scott mackenzie james stewart editors graphics interface june 
mathieu desbrun mark meyer peter alan barr :10.1.1.24.3427
discrete differential geometry operators 
submitted 
www grail usc edu pubs 
fung 
foundations solids mechanics 
prentice hall 
cignoni scopigno 
multiresolution model soft objects supporting interactive cuts 
proceedings eurographics 
michael garland paul heckbert 
surface simplification quadric error metrics 
turner whitted editor siggraph conference proceedings annual conference series pages 
addison wesley august 
isbn www cs cmu edu garland html 

gascuel 
cani desbrun 
simulating natural disaster prevention 
proceedings th eurographics workshop animation simulation 
van gelder 
approximate simulation elastic membranes triangulated spring meshes 
jour 
graphics tools 
gibson mirtich 
survey deformable modeling computer graphics 
technical report merl november 
tr www merl com 

magnenat thalmann thalmann 
simulation object human skin deformation grasping task 
proceedings siggraph boston ma pages july 
hutchinson preston hewitt 
adaptative refinement mass spring simulations 
proc 
eurographics workshop computer animation simulation pages sep 
james pai :10.1.1.10.2603
art accurate real time deformable objects 
proc 
siggraph computer graphics proceedings siggraph pages 
acm siggraph acm press august 


cani 
real time collision detection virtual surgery 
proc 
computer animation may 
brien hodgins 
graphical models animation brittle fracture 
proceedings siggraph pages 
pentland williams 
vibrations modal dynamics graphics animation 
proc 
siggraph july 
smith gropp 
domain decomposition parallel multilevel methods elliptic partial differential equations 
cambridge univ pr may 
terzopoulos platt barr fleischer 
elastically deformable models 
proc 
siggraph july 
witkin welch 
fast animation control non rigid structures 
proceedings siggraph august 
yan zhuang john canny 
real time physically realistic simulation global deformation 
siggraph sketches applications los angeles california august 
