time continuation genetic algorithms ravi srivastava illigal report june illinois genetic algorithms laboratory university illinois urbana champaign transportation building mathews avenue urbana il ce fax ii copyright ravi prakash srivastava time continuation genetic algorithms ravi prakash srivastava bachelor technology indian institute technology 
thesis submitted partial fulfillment requirements degree master science general engineering graduate college university illinois urbana champaign urbana illinois ii su ciently large population size run duration genetic algorithms yield satisfactory results range problems 
resources time limited case real world problem imperative resources judiciously 
master thesis studies behavior performance genetic algorithms influence multiple epoch runs versus single epoch run limited resources function evaluations 
includes study temporal supply building blocks issue population size involved 
thesis promises key turn talked battle crossover mutation operators gas 
results question choosing better operators showing share symbiotic relationship 
time continuation study aims arriving prescriptive design cient genetic algorithms 
aims maximizing quality run time minimizes run time solution quality balancing parallel processing single large population versus serial processing small convergence epochs 
methods adopted include empirical theoretical analysis 
study progresses creating set idealized realizable continuation operators analyzes considers computational approximations 
connections operators theory real gas explored various continuation operators 
iii acknowledgments am extremely grateful thesis supervisor prof goldberg constant guidance patience dream adviser 
addition particular regular interaction learned organized methodology approach di cult problems come appreciate purpose scholastic activity holistic framework 
wish illigal researchers librarians wonderful time university illinois lasting friendship 
supervisors bachelor degree prof prof deb dr guidance developing necessary interest subject 
dr agreeing review manuscript amit constant encouragement 
sponsored air force ce scientific research air force materiel command usaf 
research funding provided national science foundation dmi 
government authorized reproduce distribute reprints government purposes notwithstanding copyright notation thereon 
views contained author interpreted necessarily representing cial policies endorsements expressed implied air force ce scientific research national science foundation government 
iv table contents chapter 
report organization 
chapter background required ga theory 
simple genetic algorithm overview 
illinois design decomposition building blocks 
competent gas 
ga ciency enhancements 
parallelization techniques 
time continuation 
evaluation relaxation 
hybrid geas 
population sizing models 
population sizing scaled strings 
small population geas 
run duration 
normal distribution convergence modeling 
domino convergence bound 
deception 
population diversity 
diversity preservation 
diversity regeneration 
population epoch sizes 
summary 
chapter continuation factors 
time continuation scheme 
run epochs 
continuation operators 
budgeting considerations 
time budgeting 
population sizing 
epoch duration 
building block salience continuation 
summary 
chapter ideal continuation 
ideal continuation operators 
ideal continuation theory 
ico uniformly scaled bbs 
ico scaled bb strings 
neutral scaling 
empirical verification 
test functions 
convergence criteria 
experimental results 
uniformly scaled bbs runs 
exponentially scaled building blocks 
equal epoch runs 
summary 
chapter real continuation operators 
cost rework 
continuation theory rework 
uniformly scaled bbs 
scaled building blocks 
designing real continuation operators 
rco spectrum 
adaptive operators 
implemented rcos 
rco results 
summary 
chapter applications 
salience sequence connection 
crossover vs mutation 
applications benefits 
continuation ga design 
crossover vs mutation crossover mutation 
extensions 
vi list figures fundamental population epoch tradeo 
schematic simple genetic algorithm 
schematic crossover operator 
schematic bitwise mutation 
bit trap function 
continuation ga flow 
fundamental population epoch tradeo 
fitness blocks test functions 
ico results uniformly scaled bb case 
ico results uniformly scaled bbs trap test function 
ico results exponentially scaled bb case 
ico results exponentially scaled trap test function 
ico results exponentially scaled trap test function 
equal epoch results uniformly scaled bb case 
schematic rework 
rco spectrum 
rco results uniformly scaled bbs trap test function 
ico rco standard ga result comparison 
rco ii results uniformly scaled bbs trap test function 
rco iii results uniformly scaled bbs trap test function 
number epochs rco 
log plot number epochs rco 
rco ii results exponentially scaled bbs trap test function 
rco ii results exponentially scaled bbs trap test function 
vii viii chapter darwinian philosophy darwin survival generation principles come long way incarnation evolutionary computation methods optimization techniques 
popular genetic algorithms gas increasingly introduced variety practical industrial problems addition traditional scholarly research attention 
wakefield 
studies competent cient gas yielded powerful implementation techniques facilitate usage 
successful solutions hard problems gas promising years come terms wide range applications development sophisticated advanced algorithms needed 
gas complex problems crucial significance imperative develop verify complete theories increasing ciency economics algorithms 
primary concern ga design estimation population size corresponding run duration 
su ciently large population size genetic algorithms yield satisfactory results range problems 
resources time limited case real world problem important resources judiciously 
critical aspect ga runs preservation diversity ensure supply appropriate building blocks algorithm seeks solve 
contributing building blocks bbs equal salience may contribute fitness solution 
cases nature problem requires primarily serial processing building blocks high salience low salience 
essential preserve low salience building blocks run re supply ga ready process tend drift higher salience bbs solved 
successful attempts related fields enhance problem solving capabilities gas 
problem supplying diversity temporally needed called continuation problem goldberg bounding theory continuation developed problem solved building blocks comparable fitness salience 
theory considered ideal continuation operators marginal cost continuation real continuation operators rcos non zero rework 
shows scenarios run 
single generations generations population size population size tradeo having large implicitly parallel population processing versus epochs smaller population 
total time budget function evaluations cases remain constant 
large population chosen run single epoch convergence 
commonly followed approach applying gas 
second case smaller population selected 
order allow algorithm number total function evaluations smaller population run epochs succession 
small population solutions converges faster continue meaningfully run needs restarted injecting diversity appropriately 
choosing disturb population manner involves overheads correctly converged bbs perturbed need solved 
choice strategies distributing available computation time 
thesis systematic study continuation problem cases continuation useful 
comparisons ga runs small epochs smaller population revived injecting diversity relatively smaller convergence epoch solve problem single large epoch solve problem number total function evaluations 
continuation operator models discussed detail emphasis design implementation viewpoint 
observed important relation distribution salience bbs solution strings way ga solves 
uniform salience structure guides ga solve bbs parallel 
hand bbs significantly varying contribution fitness ga solves serially high low salience 
salience sequence connection translated terms primary ga operators 
crossover crossover operators tend recombine existing solutions promote mixing leading primarily parallel processing 
contrary operators mutation family search solution space sequentially 
continuation connects ga operators salience attempts appropriate combination optimal solution quality 
look broad road map organization rest thesis material 
report organization thesis divided main chapters apart introductory concluding chapter 
chapter looks basic components genetic algorithms relevant theory needed study 
gives overview closely related areas ga population diversity modeling run restart scheduling important understanding continuation theory 
outline simple genetic algorithm sga followed discussion bb design decomposition competent gas 
ciency enhancement techniques gas discussed time continuation 
part chapter reviews population sizing run duration theories developed onemax domain enhancements scaled bb cases discussed 
importance deceptive test functions studied 
part chapter gives brief issue population diversity important orts literature preserve regenerate diversity better results 
relevant population epoch works literature introduced 
chapter introduces continuation algorithm detail relates simple generational ga presents continuation scheme applied simple ga elaborates meaning run epochs continuation operators 
followed discussion budgeting considerations theory continuation developed time budgeting population sizing epoch duration 
importance shown context continuation 
chapter concludes comments bbs salience structure impact continuation 
remaining broken related ideal continuation real continuation rcos 
decomposition continuation mechanism inspired bb design decomposition scheme 
idea break system simpler tractable sub problems target understanding individually trying combine pieces system 
ideal continuation assumes knowledge desired unfit bbs epoch algorithm 
simplification achieved assumption gives important insight mechanics continuation schemes enables take step design analysis real continuation operators 
chapter ideal continuation deals continuation absence rework overheads 
discusses design presents ideal continuation theory 
experimental results deceptive functions clearly support theoretical predictions 
real continuation operators implemented practical situation incurring overhead costs 
involve cost perturbing correctly converged bbs run restarting costs 
chapter builds study ideal continuation discussed chapter extends include cost continuation 
continuation non ideal situations including design continuation operators discussion issues involved recognizing spectrum rcos exists may tapped tailor rcos specific problems 
adaptive mutation operators studied approximation intelligent rcos 
theoretical predictions supported empirical results rcos deceptive max trap functions 
thesis concludes summary implications outline research directions 
discussion ongoing debate choosing better mutation crossover operators followed notes time continuation attempts bridge gap 
salience sequence connection corresponding operator regimes pointed suggestions tap best operator families 
chapter background required ga theory chapter examines basic components genetic algorithms relevant theory needed study 
studies closely related areas ga population diversity modeling run restart scheduling important understanding continuation theory 
section gives outline simple genetic algorithm sga followed discussion bb design decomposition competent gas 
section discusses ciency enhancement techniques gas time continuation 
part chapter reviews population sizing run duration theories developed onemax domain enhancements scaled bb cases discussed 
importance deceptive test functions studied section 
part chapter gives brief issue population diversity important orts literature preserve regenerate diversity better results 
relevant population literature introduced 
discussion simple genetic algorithm 
simple genetic algorithm overview genetic algorithms population possible solutions aim evolving global best solution problem hand 
primary intuition gas analogs nat ural selection genetics design robust search procedure 
largely gas don depend problem characteristics limited specific class problems 
able apply ga problem primary information required solution compares 
words solutions better solutions fit 
information user interactively case human gas automated form fitness function 
biology genotype means part genetic constitution organism responsible identity organism phenotype refers visible properties organism produced interaction genotype environment 
similarly genetic evolutionary computation genotype refers coding candidate solutions ga operates 
quite gene codings natural emergent creative evolution processes act birth exchange processes nature 
genotype manifests form organism actual solution case called phenotype 
studies genotype binary string ones zeros 
fitness function provides ga tangible set conversion rules problem encoding ga operators act quality solutions represent search space 
fitness function decided ga applied search best solution series deceptively simple steps 
simple ga consists primary steps 
population initialization 
selection mating pool 
applying crossover mutation operators mating individuals 
evaluation new individuals population replacement 
checking termination criteria repeating generation steps shall look steps detail 
initial population generally termination criterion met 
evaluate new ga operators crossover mutation start population replace individuals selection initialize evaluate schematic flowchart simple genetic algorithm chosen randomly set potential candidate solutions 
may chosen guide initial search particular direction depending practitioner knowledge solution space 
entering generation population evaluated 
crucial part ga search choice mating pool 
mating pool selected current population individuals chosen take part operations advancing population generation hopefully closer optimal solution 
selection individuals fitness relative merit population 
fit individual higher probability selected mating pool impart presumably genetic material successive generations 
operators select competing individuals population goldberg deb blickle thiele 
ordinal selection schemes relative ranks individuals population 
common tournament selection ranking selection methods 
schemes directly compare individual fitnesses called proportion ate selection schemes include roulette wheel selection stochastic universal selection 
selection process certain selection pressure associated indicator fast slow population converges current best solutions 
selection pressure instance implies current best individual awarded copies mating pool current worst individual discarded 
higher selection pressure faster population converges 
consequently gets time explore fresh regions solution space 
parent strings offsprings schematic crossover operator 
point crossover operation shown parent strings sites yield springs note possible bb disruption site parent zeros constitute bb 
mating pool selected processed series genetic operators crossover mutation common 
crossover natural genetics involves exchange genetic material parent individuals produce new spring 
simple setting binary coding point crossover randomly chooses point exchange parent strings children bits parent upto point exchange second parent point 
reverse true second child 
crossover operators points exchange 
shows schematic representation point crossover 
multiple point crossover break mix parents bits just point 
instance uniform crossover bit spring finite probability usually inherited parent 
ective mixing genetic material time disruptive 
means best solution consists certain combination bits occurring disruptive crossover operator tends break combinations 
parent string offspring schematic bitwise mutation binary string 
second bit flipped mutation probabilities 
mutation operator acts natural mutation changes randomly genetic material individuals 
background probability mutation thought insurance permanent loss particular genetic material population 
coupled selection mutation results hill climbing ect selection continually chooses better solutions mutation searches vicinity existing solutions altering solution bits 
genetic operators applied mating pool resulting population re evaluated 
fitness calculation usually computationally expensive step real world problem solution gas 
evaluation complete old population replaced newly created 
common practice replace entire population new set individuals carry generation 
elitist strategies suggest carrying best individuals older generation generation ensuring solution completely lost due stochastic selection operators 
population replacement policies exist instance steady state gas overlapping populations 
ga steps continued pre specified termination criteria met 
ga may terminated fixed number total generations best average individual fitness improve generations population converges completely certain solution user defined termination criteria met 
setting termination criteria important part ga significantly ects ratio solution quality resources spent running algorithm 
quick simple gas look design advancements field 
studying design decomposition building block hypothesis orts improve ga performance 
illinois design decomposition building blocks section discusses conditions set forth goldberg goldberg goldberg deb clark goldberg considered necessary ective gas 
study design decomposition imperative understand building blocks bbs important follows 
building block hypothesis discussed various contexts applications 
goldberg forrest mitchell van watson hornby pollack wu lindsay goldberg goldberg press 
generically building block just name suggests combines bbs evolve complete optimal solution 
typically bbs short tightly linked portions strings relatively high fitnesses contribute significantly solution 
building blocks particularly important di cult problems lower order bits may deceptively mislead search algorithm sub optimal solutions appropriate bbs primary units building solutions 
points summarize bb design decomposition prepare discussion competent cient gas goldberg 
know ga processing building blocks 
ensure adequate initial supply building blocks 
ensure necessary building blocks expected grow 
ensure building block decisions appropriately 
ensure building blocks mixed exchanged 
know proper bb takeover convergence durations 
solve problems bounded building block di culty 
design decomposition proposed undergone slight enhancement separating schema growth run epoch duration goldberg press 
evident conditions emphasize importance discerning bbs ensuring ones grow eventually may combine form desired solutions 
ga able decide positively bbs appropriately recombine number building blocks population grows global best solution 
important sure ga tackling problem bounded di culty 
design decomposition gas helpful understanding working gas track parts need grooming problem formulation study 
context study note second point adequate bb supply interpreted comprised components 
may conservatively choose supply required building blocks starting ga run supply bbs ga seeks solve 
particularly interest problems scaling constituent bbs solution string necessitates solution path primarily serial terms bbs tackled 
salient bbs processed ga late run necessary supply right run 
bbs point time continuation theory comes play 
discussed detail subsequent chapters 
competent gas proposition design decomposition subsequent research lines taken generation gas regime tractability competence 
competent gas solve boundedly hard problems quickly reliably accurately goldberg goldberg press 
considerable progress design study various competent genetic algorithms 
fast messy genetic algorithm goldberg deb kargupta harik pbil population incremental learning baluja gene expression messy genetic algorithm kargupta kargupta kargupta linkage learning ga harik goldberg harik umda univariate model building algorithm muhlenbein cga ecga compact genetic algorithm harik lobo goldberg extended compact genetic algorithm harik linc limd ga linkage identification nonlinearity check linkage identification detection ga goldberg boa bayesian optimization algorithm hierarchical boa pelikan goldberg cantu paz pelikan goldberg cantu paz pelikan goldberg pelikan goldberg 
linc limd ga perturbation methods uses linkage adaptation information solving hard problems pbil umda cga ecga boa probabilistic model building techniques handle boundedly hard problems intractable generation gas 
approach followed considerably di erent enable gas overcome hurdle shrinking sweet spot goldberg feasible ga design 
note possible parameter space exists feasible region ga parameter design sweet spot ga ectively solve problem 
increases problem size di culty feasible parameter region ga design shrinks rapidly making impossible simple ga find solution 
competent gas incorporated ective bb recognition mixing hard problems may solved polynomial sub quadratic times 
interested reader consult aforementioned detailed discussions techniques 
ga ciency enhancements simplicity implementation notwithstanding geas complex highly nonlinear algorithms 
population algorithms best gas su er long computational runs cases fitness landscape elaborate evaluation functions demanding geas may computationally daunting practitioners real life applications 
orts competence mentioned line concern 
distinct di erence ciency competence 
goldberg press identified competent gas problems faced geas intractability tractability ciency enhancement techniques eets aim geas problem solving domain tractability practicality 
section discusses advancements area gea ciency enhancement places time continuation perspective 
tackling issue ciency important identify primary solution tradeo quality resources consumed manifest quality duration tradeo accuracy cost tradeo matter time budgeting sastry 
approach peculiar geas ciency conscious study needs take account time cost spent solving particular problem quality obtained inadequate su cient unnecessarily elaborate 
gea eets studied illinois fold decomposition goldberg press 
parallelization 
time continuation 
evaluation relaxation techniques 
hybridization local problem specific optimizers ciency gain may quantified speedup ratio time required algorithm achieve certain solution quality normal instance time required achieve quality eet applied 
base enhanced noted ciency gains techniques may tapped conjunction combined ect multiplicative 
techniques applied resulting ciency gain ignoring interactions total total parallel time eval hybrid 
shall take brief look reader pointed sastry detailed discussion survey eets 
parallelization techniques distributing computational burden multiple processors direct methods faster results 
cient parallelization techniques studied quite detailed theory parallel gas available cantu paz specifically parallelization schemes master slave parallel gas fine grained parallel gas coarse grained parallel gas hierarchical parallel gas parallelization techniques possible large scale computationally intensive problems solved feasible time frames 
time continuation gea time continuation concerned cient time budgeting deals tradeo schemes involving large populations running single small number epochs versus smaller populations running continuation epochs 
circumstances total available computational time product population size run duration number continuation epochs remains constant ensure fair comparison 
study represents exploitation exploration tradeo considering algorithm working current population attempt explore fresh regions search space 
time continuation topic current thesis shall study various issues involved considerable depth 
evaluation relaxation evaluation relaxation eet reduce computational burden geas 
basic tradeo highly accurate fitness functions costly approximate fitness functions computationally intensive 
evaluation relaxation aims approximating fraction function evaluations various methods including fitness inheritance variance fitness bias modeling 
fitness inheritance involves approximating function values fraction spring population considering weighted average fitness values respective parents 
useful cutting direct costs fitness evaluation giving approximate estimate required fitnesses depending types functions consideration 
similarly approximate fitness functions low cost high variance low cost high bias economical ecting run quality 
particularly early run extremely accurate fitness values required reduces computational requirements algorithm significantly 
theoretical empirical studies available predict stage run upto high bias high noise low cost high variance fitness function substitute may critically ecting solution quality 
real speedups upto reported 
interested reader refer sastry albert detailed algorithms review related literature 
hybrid geas hybridization techniques geas combined local searchers knowledge give robust algorithm optimal problem solving 
power geas quickly come close vicinity solution utilized local searchers applied refine solutions obtained best quality global optimality 
provided global evolutionary searcher brings search favorable basin attraction search space local searchers achieve rapid convergence optimal solution 
approaches known researchers long necessary facet wise predictive theory cient design hybrid algorithms studied 
reader pointed sinha details topic detailed literature review global local hybrids 
look detail population sizing convergence theories literature 
required analysis development continuation theory chapters 
population sizing models studying population sizing key understanding ga theory 
attempts quantitatively qualitatively analyze details leading population sizing predictive theories 
population sizing closely related ga design decomposition discussed earlier section 
holland estimated number bbs specified number copies initial population poisson distribution modeling 
considered role initial bb supply decision making competing bbs population sizing 
goldberg refined model studied population sizing ects serial parallel ga computations 
part discussion schema theorem optimal rates schema processing 
involved counting number schemata population verifying appropriate arrive optimal solution goldberg 
combined convergence durations assess optimal sizing ective processing goldberg 
broadly known supply models population sizing 
decision making models population sizing trace root widely armed bandit problem statistical decision theory 
solution problem recognized useful providing insight bb interaction selection early works holland 
de jong discussed armed bandit problem population sizing recognized importance noise signal noise ratio decision making process competing bbs 
suggestions largely overlooked goldberg rudnick signal noise ratio rationalize population sizing scheme decision making better bbs 
soon goldberg deb clark built model developed conservative bound ga quality decision best second best bbs population 
model identified practical population size proportional problem size inversely proportional signal noise ratio 
model heavily dependent decision generation gas implied mistake early run detrimental solution quality prevent algorithm converging correct solution 
gambler ruin model harik cantu paz goldberg miller brought supply decision models population sizing standard gambler ruin results random walk literature solve useful population sizing equation ln bb 
population size inversely proportional signal noise ratio bb square root number bbs logarithm probability error size largest bb 
population sizing studies discussed assumed contributing bbs salience words bbs scaled uniformly string 
di cult problems size scaling bbs detrimental algorithm ability tackle problem successfully 
study continuation bb scaling critical problem characteristic 
section introduces population sizing models scaled bb strings 
population sizing scaled strings exponentially scaled bbs bounding case bb scaling gas solve bbs sequentially contribution salient bb individual fitness salient bbs combined 
salient bb solved irrespective bbs rest string 
similarly salient bb converged domino convergence rudnick continues salience scale 
time run window convergence small number bbs solved ga salient bbs substantially converged salient bbs largely untouched 
higher contribution bb fitness earlier solved 
idea formally represented parameter model domino convergence thierens goldberg pereira represents position string solved algorithm takes values string length 
model specifically considers convergence window size 
domino convergence means lower salience bbs considered late run drift goldberg asoh muhlenbein thierens goldberg pereira meaningless convergence ga ready solve 
domino convergence variance models give populations sizing estimates problems represented scaled bbs concatenated 
specifically derived population sizing consideration genetic drift look model population sizing drift 
thierens goldberg pereira gave fitness variance exponentially scaled string ls ls proportion correct bbs initial population length scaled string 
purpose relation assumed convergence window size strictly serial solution 
fitness variance bb solved position bb ls 
argues string bbs concatenated noise bb th bit bbs noise bb 
bb probability correct decision making miller 
signal di erence simplify relation 
power series approximation normal distribution abramowitz stegun get solution directly known relation error run feller gambler ruin population sizing model 
substituting approximating ln considerably small get relation population size ln 
interesting regime population sizing small population gas micro gas 
section discusses implications having small populations generational ga small population geas significant field gea development concept considerably small populations 
significant widely di erent examples evolutionary strategies ess rechenberg rechenberg rechenberg micro gas gas krishnakumar 
es techniques originally individuals parent descendant generation 
descendant created applying binomial variation parent survived better parent 
shall look ga detail readers interested ess refer back schwefel schwefel back back ho schwefel articles mentioned 
inspired suggestion small population sizing requirements optimal schema processing rates serial ga implementation goldberg krishnakumar proposed outline gas stationary non stationary function optimization 
small population ga scheme deterministic selection summarized follows 
randomly generate small population 
perform genetic operations nominal convergence 
generate new population transferring best individuals old converged population remaining generated randomly 

go step repeat stopping criteria met 
encouraging results obtained function optimization simple gas preliminary investigations demonstrated ectiveness start restart procedure geas running large populations reaching near optimal goals 
shall see important context continuation continue study background ga theory looking population convergence models 
run duration indispensable part ga design convergence gas run duration studies 
particularly context current topic important understand dynamics ga convergence interpret light continuation 
section devoted understanding run duration theory 
section relates results ect continuation epoch durations 
onemax problem widely ga literature develop study theories owing simplicity generality 
onemax problem fitness bit string depends number string objective find string 
muhlenbein schlierkamp voosen ideas population genetics propose convergence model onemax domain breeder genetic algorithms 
approach selection intensity convergence time models researchers develop convergence bounds variety selection schemes ga environments 
sastry provides literature review convergence time studies points salient landmarks run duration theory 
interested reader pointed thesis 
concentrate normal distribution modeling upper lower bounds convergence time thierens goldberg thierens goldberg pereira 
normal distribution convergence modeling section presents convergence model onemax domain tournament selection scheme tournament selection widely ordinal selection schemes experiments thesis 
derivation taken thierens details ga convergence models selection schemes referenced 
onemax function binomially distributed 
assuming population size string length reasonably large fitness function approximated normal distribution 
directly inferred probability having correct bbs case just single generation run lp lp 
string length average fitness variance fitness probability function 
try derive function number generation gives time convergence time expected 
tournament selection assuming population fitness normally distributed fitness di erence randomly sampled individuals normally distributed mean variance 
need look positive half standard normal distribution tournament absolute value fitness di erence important 
binary tournament average increase fitness generation calculated half mean fitness di erence 
recognizing lp equation write approximating di erence equation corresponding di erential equation get dp dt 
di erential equation solved terms predict convergence time ga recognizing randomly initialized population 
sin arcsin sin useful form relationship particularly terms estimation convergence times obtained putting conv 
conv 
slightly di erent approach convergence time miller goldberg follows similar derivation selection intensity generalizes results various selection schemes 
equation written terms selection intensity replacing lp get 
simplification similar arrive convergence time relation conv 
particular tournament selection schemes selection intensity approximated blickle thiele log log log tournament size 
binary tournament relation solves equation 
consider case non uniformly scaled bbs build run duration upper bound exponentially scaled bbs exhibit domino ect convergence progress 
model tournament selection onemax domain sake simplicity 
relevant extensions 
domino convergence bound equation gives time convergence string length uniform scaling 
consider bbs length constituting total bits assume strictly serial processing scaled bits population sizing derivations scaled bb case argue 
bits di erent salience bbs solved parallel bbs 
interpret parallel part gea processing acting string length convergence time equation look 
processing repeated scaled salience bits bbs strict serial processing requires amount time iterative pass 
total convergence time written conv 
convergence time strings exponentially scaled bbs considerably slower uniform scaled bb strings convergence time 
albert goldberg extension original convergence time model thierens goldberg pereira similar case 
assert model case bbs exponentially scaled bits follows 
consider single bb characteristics domino convergence string length bb length 
include ect concatenated bbs di erence function means going generation amplified times standard deviation increases times 
equation modified 
may say selection intensity revised give original domino convergence result thierens goldberg pereira directly modified give convergence time concatenated bbs replacing ln ln 
replacing get convergence time concatenated scaled bbs ln ln 
get run duration write results run 
domino convergence binary integer case replaced string length case bbs concatenated comprised scaled bits modeling final value bb length convergence time ln ln 
relations provide fair estimate convergence times 
rudnick thierens calculated exact relations convergence time reduce convenient forms 
pelikan goldberg developed convergence time models finite populations showed small populations ected genetic drift fixation 
proposed embedded convergence time model incorporating approximate fitness variance model include ect fixation small populations 
shall see relations important continuation theory model runs restarts 
look important factor context study deception 
deception study deceptive test functions chosen tend mislead ga away optimal solutions 
algorithm able solve maximally deceptive trap functions goldberg goldberg deb goldberg able solve problems easier bounding deceptive functions 
deception provides way test algorithms set known high di culty problems solved solution larger set simpler problems revealed 
class trap functions proved ga hard particularly interest experimental point view testing algorithm improvements 
bounding di culty functions deb goldberg allows important inferences terms capabilities algorithm tested 
study tests done fully deceptive functions 
trap shown defined total length trap denotes unitation number bits set trap 
shall maximally deceptive traps tests worst bb second best bb best bb fitness contribution bb unitation single bit trap function building block complex test functions 
plot shows variation fitness contribution bb change unitation number bits set 
adjacent schematic shows pictorially worst bbs best bb intermediate structures illustrate fitness values mislead hill climber descent algorithms 
chapters 
shall see traps build actual test functions 
discuss issue population diversity directly related research framework 
population diversity critical aspect genetic evolutionary algorithm runs preservation diversity population ensure supply appropriate genetic material 
quite pressure selection mixing operators population tends lose diversity best solution evolved words algorithm su ers premature convergence de jong 
loss diversity operations population largely unproductive global best solution reasonable time 
imperative successful ga preserve diversity regenerate required 
attempts deal problems premature convergence 
section overviews related research done area diversity preservation premature convergence regeneration operators runs 
diversity preservation various orts reported literature operators algorithm aimed delaying population convergence correct bbs available required processing algorithm get stranded local optima 
section look orts maintaining diversity prolonging run 
eshelman scha er distinguish diversity preservation strategies depending implemented ga cycle 
list criteria 
mates selected 
children created recombination 
parents replaced propose strategy choosing individuals mating di er minimum hamming distance goldberg allowed 
children members parent population discarded 
earlier mauldin suggested checking new bit string introduced gene pool di erent existing ones means preserve diversity ga run prevent premature convergence 
hamming distance measure degree new individuals di ered current ones population 
diversity control oriented ga di diversity preservation practices due selection techniques operator 
proposes diversity control oriented genetic algorithm 
uses large mutation rates eliminates duplicate structures uses cross generational probabilistic survival selection maintain diversity structures population 
forms combined gene pool old new population genetic operators applied eliminates duplicate individuals uses select individuals transferred generation 
defines selection probability structures hamming distance structure best fitness population string length shape exponential coe cients respectively 
selection procedure described number individuals populations original population introduces new structures providing additional insurance lost diversity 
sharing niching de jong proposed crowding scheme population replacement new individuals created compared set individuals determined crowding factor old population similar individuals replaced new ones 
particularly multimodal functions di erent solutions may interest sharing niching techniques goldberg richardson deb goldberg miller shaw maintain multiple solution peaks lost diverse population 
techniques restricted sampling ga operators similar individuals compete 
restrictions may applied individuals genotypic phenotypic properties 
similar technique restricted tournament selection harik newly created solutions forced compete similar solutions entering population 
adaptive self adaptive mutation goldberg back schwefel serve insurance loss diversity regular mutation may background nature 
adaptive mutation schemes tuned provide suitable diversity injection run progresses helpful maintaining useful diversity 
diversity competent gas probably little indirect approach linkage learning harik goldberg harik 
exchange crossover operators appropriately position genes genotype enable achieve tight linkage helping proliferation preservation short low order building blocks 
dominance goldberg smith smith goldberg greene bi stranded chromosomes induce long term distributed remembrance previously useful genetic material 
helps keeping diverse material shielded hostile environment stage genetic convergence 
viewpoint may interpreted useful mechanism preserving diversity identified required ga run 
schemes attempt maintain diversity population ga run prevent convergence local optima allow better search function optimization 
diversity regeneration contrasted approach preserving diversity prevent premature convergence helpful imperative regenerate required bbs diverse structures required trying preserve initial diversity population 
indirectly addresses bb supply question discussed section 
algorithm provides regeneration run mounts injecting new bbs initial population sizing need necessarily account complete probabilistic inclusion required bbs 
section discusses strategies proposed diversity regeneration run re starts ga progresses 
goldberg mentioned restarts context schema processing rate particularly serial gas 
restarts described re initializing prematurely converged population elitist strategy 
top individuals transferred new population remaining generated randomly 
similarly chc adaptive search algorithm eshelman proposed best individual prematurely converged population restart run seeding remaining population individuals obtained probabilistic perturbation best chromosome 
called meta mutation operator mutation moved reproduction recombination generation loop 
similar approach forking algorithm fujimoto 
fukunaga proposes static restart strategy past performance database class similar problems tackled 
strategy involves maximizing expected utility terms achieving maximally optimal quality solution time resource 
comparison shows static scheme proposed fairly competitive respect dynamic restart strategies population best solution improvement lack period time 
scheme extended random initialization proposed individual chosen best randomly generated individuals 
keller banzhaf suggest diversity maintenance scheme diversity checker checks diversity threshold fixed number generations restores diversity ratios sizes genetic clusters context node labeled trees 
selectively destructive restart selectively destructive restart sdr davidor barak proposed extension routine re start outlined attempt prevent genetic material converged population getting completely destroyed 
sdr implements gene mutation high probability population converged algorithm decides re start run 
restarting population initialized stochastic perturbation gene pool converged population 
authors suggest simple schemes determine call restart operator avoid costly variance analysis individual genes population 
number evaluations improvement best solution relative magnitude improvement solutions population size 
cost improvement curve determine convergence 
authors report improvement solution quality evaluation budget sdr scheme 
nonlinearity measure cited making di cult clearly quantify improvement 
parallel ga evans proposed multi level melting pot structure parallel genetic algorithm 
type coarse grain parallel ga tree communication topology 
set sub populations demes lowest level initialized randomly usual 
sub populations converge local optima reaching homogeneity threshold best individuals converged sub populations passed higher level demes termed melting pots 
embraces premature convergence trying avoid 
explicitly periods stasis observed steps innovation punctuated equilibria search dynamics vose liepins bak 
existence epochs implicit hierarchical parallel nature sub populations quite exactly restart strategy 
tries simulate diversity regeneration scheme maintaining multiple convergence niches concurrently combining algorithm proceeds 
alford gave markov chain analysis application random restart simple gas problem task mapping processors 
calculated expected time reach optimal solution individual population case showed proportional time absorption markov states 
exact values large scale problems di cult calculate due memory limitations size transition matrix showed expected time convergence problem grew sub logarithmically size search space 
population epoch sizes population size epoch duration tradeo discussed theoretically goldberg coined term time continuation 
followed srivastava goldberg theoretical predictions set forth original verified elaborated 
current research publications shall study continue 
take look independent attempts address issue 
struck primary question choose large population generations studying implications specific application information retrieval 
little analysis key issue premature convergence local optima limiting cases 
indication restart schedule tap full power extra number generations case small population chosen solve problem 
mentions large search space case information retrieval primary hindrance ga parameter setting 
encouraging note existence synergy research ga application related theory evident 
appropriate ga practitioners contribute ciency enhancements geas pick available competence advanced evolutionary algorithms er 
luke addresses issue order statistics viewpoint derives domain independent results attempt answer question doing run generations long runs generations long 
demonstrates analysis genetic programming benchmark problems symbolic regression artificial ant parity problems 
analysis population size kept constant problems multiple run schedules questionable run duration perspective 
population size perform smaller multiple runs large run clear population allowed converge takeover time requirements satisfied 
issues discussed detail chapters continuation issues implementation 
ismail gave general analysis restart algorithm terms expected times convergence restart 
argued stochastic start convergence time follows probability density optimal time restart time minimizes expected convergence time restart 
showed probability restarting algorithm epoch size denoted dt expected time convergence restart expressed dt 
obtained directly understanding epoch wise solution strategy epoch size restarts applied convergence global optimum obtained 
expected time convergence time taken algorithm converges restart plus time takes converge restart applied probability 
represented recursive relation tp dt 
rearranging equation get equation 
solving di erentiating expression equating zero know minimum tp dt 
relations estimate restart times algorithm convergence time distribution known 
summary chapter reviewed basic material gas fold design decomposition developing competent cient gas 
saw gambler ruin population sizing model inversely proportional signal noise ratio square root number bbs logarithm probability error grows exponentially size bbs increases 
followed derivation population sizing equation scaled bb case absence drift turned dependent covered run duration models indicate convergence time uniform scaling proportional square root string length domino convergence model proportional modifications theories incorporate higher order bbs scaled string 
deceptive functions introduced importance gea design emphasized 
remaining part chapter population diversity preservation regeneration epoch wise solution techniques discussed helpful understanding mechanism continuation operators subsequent chapters 
discussion time continuation 
chapter continuation factors computational algorithm ciency question resources boils computational run time 
need look quality time trade look run schedule maximizes solution quality computational time 
reality practitioners confronted computational limitations need choose cient run scheme maximize solution quality attained 
concern algorithms cient choosing run scheme large population running lesser number generations run smaller population running larger number generations 
strategy chosen essential apply intermittent continuation operators enable ga avoid diversity loss complete meaningful run 
discussed detail chapter 
chapter introduces continuation algorithm important ecting elements 
section presents continuation scheme applied simple ga elaborates meaning run epochs continuation operators 
followed discussion budgeting considerations theory continuation developed time budgeting population sizing epoch duration 
importance shown context continuation 
chapter concludes comments bb salience structure impact continuation 
time continuation scheme take look continuation scheme detail relate simple generational ga continuation attempts reach maximum solution quality limited amount time keeping track population convergence calling continuation operators induce diversity allow improved continuation search global optima 
basic control flow represented enumerated 

initialize evaluate initial population 
termination criteria met output solution 
select mating pool 
check current epoch complete compare population fitness variance preset admissible value compare population fitness average fitness maximum compare difference fitness minimum maximum preset admissible difference value 

population converged substantially diversity lost apply continuation operators update fitness changed individuals required operators 
perform required ga operators crossover mutation 
evaluate new generation individuals 
replace population defined criteria 
go step implementation involves check completion continuation epoch generation 
population lost diversity considerably determined various methods described continuation operators called action new epoch starts 
ga continues follow original algorithm 
continuation shown applied simple ga easy see application modified termination criterion met 
apply continuation evaluate new replace population complete 
epoch start ga operators mutation crossover select mating pool individuals initialize evaluate continuation genetic algorithm flow diagram genetic algorithms instance competent gas straightforward 
time continuation favorable combination competence ciency enhancement techniques geas 
flow structure introduces concept epochs restart operators context continuation elaborated 
run epochs epoch understood completion stage algorithm population converges substantially suboptimal solution needs perturbed allow search operators continue evolution process 
paves way set epochs facilitate better solution remaining time budget 
idea introduce population level meta operators epochs 
epoch sizes may pre determined statically calculated dynamically run 
static restart strategy epochs defined equal predefined lengths calculated knowledge run duration theories 
hand epoch lengths may determined run population statistics dynamic restart strategy 
dynamic strategy generally helps cient division computational time useful epochs may involve computational overhead exact computation population variance statistics 
may tricky compute particularly cases bbs scaled uniformly contribution di erent bbs produce di erent order variance population 
simpler statistics may approximately determine diversity status population 
commonly measures di erence fitnesses best worst individuals population di erence population average maximum fitness values 
simple measures give middle path strategy determine epoch decide continuation operators need called 
noted epochs contrast punctuated equilibria phenomenon vose liepins bak algorithm stalls intermittently considerable periods stasis evolution epoch triggered 
purpose continuation operators skip extended periods stasis encountered cases 
continuation operators clear current epoch ended continuation operators invoked provide launching ground new fresh epoch 
variety operators may restart run varying degrees schema perturbation 
stochastic adaptive continuation schemes expected perform better pre set uniform continuation operator uniform perturbation scheme tends disturb converged alleles solved 
overhead concerns discussed section 
evident definite continuation operators activated course run times activated 
continuation operators called play chosen run small population large number generations multiple epochs 
identifying continuation operators variants mutation mutation operators crossover operators interesting see intermittent high mutation rate translates serial processing bbs crossover implements parallel processing solution 
shall discussed detail section current study shall interpreted light debate geas primarily mutation operators 
chapters cover various details involved designing implementing continuation operators 
idealized continuation operators studied attempt understand range dynamics continuation operators 
extend idea incorporate costs involved restarting population disturbing converged bbs 
discuss real continuation operator spectrum stress implementation 
presently continue study continuation issues section time budgeting 
budgeting considerations ciency concerns theory continuation built primary elements 
time budget 
population sizing 
run epoch duration remainder section briefly discussed light needs continuation theory 
time budgeting time budgeting core continuation 
primarily time budget genetic algorithm run goal decide number epochs completed best quality solution 
mentioned epoch self complete run attained considerable convergence population ectively innovate 
small population converges prematurely diversity lost faster larger population 
order fair comparison solution quality obtained di erent runs need give equal number function evaluations smaller population 
way possible allow smaller population run convergence epochs 
schemes possible running small population multiple epochs 
start fresh population epoch pick best solutions ered epoch approach restart converged population epoch injecting diversity useful genetic material lost totally solution built continually 
methods may simulate continuation discussed detail section 
fundamental tradeo single large implicitly parallel epoch vs run distributed epochs appropriately smaller populations constant number available function evaluations 
population sizing continuation model viewed angle involves tradeo decision large small populations available time budget 
gives new face generations generations population size population size tradeo having large implicitly parallel population processing versus epochs smaller population 
total time budget function evaluations cases remain constant 
existing population sizing models indicating feasible solution runs non optimal population settings 
time budgeting discussion previous section touched role population size choice epoch wise solution single long runs 
run executed epoch wise smaller populations allow convergence smaller epoch 
population sizing perspective continuation implies tradeo choosing larger initial gene pool processing single epoch versus choosing smaller gene pool refining times multiple epochs aid diversity injecting continuation operators 
epoch duration deciding continuation schedule involves deliberation duration epochs run multiple epoch ga run 
ort tap maximum problemsolving capability continuation run critically important size epochs appropriately 
su cient size epoch population su cient chance evolve solution 
genetic material tapped fullest 
hand longer necessary epoch wastes precious computation time making useful improvement solution quality 
convergence time models give upper bound epoch duration 
words time budget give estimate maximum number generations feasible epoch run population size greater optimal having multiple epochs decidedly advisable 
population converges epoch terminated continuation operators called restart run fresh epoch 
takeover time gives lower bound estimate epoch duration calling continuation operators play allowing genetic material seek solution equally undesirable 
allowing epoch long takeover time ensures bbs population su cient time proliferate recombine 
design analysis continuation operators discussed detail subsequent chapters 
take look connection bb salience continuation 
building block salience continuation gea regimes continuation directly ected salience contributing bbs 
salience mean relative importance impact contribution particular bb individual bitstring 
bounding cases bb salience uniform salience exponentially scaled bb salience rudnick thierens 
uniform salience bb contribute equally fitness value individual disturbance lack way disturbance caused due lack bb location bitstring 
case scaled bbs fitness contributions di erent bbs function part string represent 
contribution set bb may significantly di erent 
particular exponentially scaled strings bb contribution scaled exponential position factor fitness contribution high scale bb contribution lower scale bbs combined 
having discussed variation bb salience intuitively appreciate importance gea dynamics particularly respect convergence variance noise manner gea goes solving bitstrings 
simple case uniform bb salience expected gea solve bbs simultaneously guiding rule obstacle requires solution bb population 
leads implicitly parallel solution epoch bbs evolved simultaneously 
dealing poorly scaled bbs imperative solve salient ones decided 
fitness difference correctly minimum signal di erence population allow correct decision making low salience bbs undecided competition higher salience bbs 
kind logic reminds implicit gea parallelism holland proposed earlier serial parallel ga processing related schemata processing rates discussed goldberg 
particular considering consequences bb salience continuation scheme come interesting observations 
extending notion parallel serial processing able clear distinction continuation theory problem needs solved serial 
uniformly scaled bb case gea tends solve bbs parallel little room intermediate continuation epochs shall soon see 
badly scaled problems mentioned gea best attacks bb wise manner bb solving epochs punctuated continuation epoch ectively take care genetic material supply remaining unsolved bbs 
design real continuation operators salience extremely important small mistake terms low salience bbs long term convergence scheme case high salience bbs 
disturbance high salience converged bbs due targeted continuation operator fixed gea continue solving bbs current epoch 
population fitness variance seriously ected high salience bb overlooked 
imperative distinguish problems basis organization bb salience tackle appropriately 
view entire continuation theory divided bounding cases bb salience uniform exponential scaling handled separately 
shall learn chapter predictions continuation theory significantly di erent cases 
summary chapter introduced main idea time continuation geas showed applied generational gas 
epoch population converges substantially run scheduled statically run duration theories may determined dynamically population statistics 
application continuation operators overcoming suboptimal convergence epochs introduced briefly taken detail chapters 
studied primary trade large population running smaller number generations smaller population run larger number generations 
closely related number epochs completed smaller population converges fast fresh epoch needs started meaningfully utilize available time 
question limited time resources addressed chapter mentioned fair comparison strategies equal number total function evaluations expended 
importance bb salience discussed importance continuation theory realized 
chapter ideal continuation ideal continuation operator assumed start continuation epoch prematurely converged population disturbing incorrectly converged alleles causing extra overhead penalties 
limiting case continuation operator serves benchmark real continuation operators 
ideal continuation assumes knowledge desired unfit bbs epoch algorithm 
assumption overly optimistic unrealistic allows study behavior characteristics continuation operators 
real world problem solving problem essence oftentimes practitioners key complete information system 
information guide system critical points including continuation epochs 
simplification achieved assumption gives important insight mechanics continuation schemes enables take step design analysis real continuation operators minimizing penalties involved reworking converged alleles 
decomposition continuation mechanism inspired original problem decomposition scheme discussed section 
idea break system simpler tractable sub problems target understanding individually trying combine pieces system 
chapter ideal continuation deals continuation absence rework section 
discuss design ideal continuation theory 
go experimental results deceptive functions clearly support theoretical predictions 
ideal continuation operators idealized continuation operator constructed full knowledge problem solution 
simple ico flip incorrect alleles case binary coded gas perturb substantially epoch identifying problem knowledge 
theoretical idealization real life computations di erent serve indispensable stepping stone understanding continuation theory 
aim essentially allow run continue explore new zones solution space 
ico introduces diversity ideally 
modeling outlined goldberg discussed ico provides bounding case perfect continuation rework costs 
goldberg laid point action plan ico assuming selection mixing operators act isolation ico bring population substantial convergence 
ico expected 
leave appropriately converged alleles 
appropriately converged alleles part bbs bbs aligned optimal solution 

substantially perturb incorrectly converged alleles 

achieve conditions incurring additional computational costs algorithm 
implies allocated function evaluations finding solution selection mixing epochs 
actual continuation operator evaluated degree comes close guidelines set including sparingly demand total time budget 
ideal continuation theory section presents continuation theory originally proposed goldberg 
look theory applied idealized cases interpret design viewpoint 
discussed real continuation cases chapter see idealized continuation may manifested practice rcos 
ico uniformly scaled bbs shall look case uniformly scaled bbs see uniform salience accepts continuation 
useful form population sizing directly taken gambler ruin model equation written log depends problem di culty probability meeting criterion signal noise ratio number building blocks 
run duration discussions sections combined background population sizing theories sets stage derivation ico dynamics 
total number function evaluations expended allowable solve problem number independent mixing epochs number generations epoch related fundamental time continuation equation 
assuming complete absence rework perfect restart ciency entire allocated time resources available evaluating functions generational phase ga measure solution quality solution probabilistic error refer back population sizing equation assuming constant epoch size may write ln 
error incurred epoch constant problem fixed di culty signal noise ratio bb size 
simplify error incurred epoch exp 
complete run solves population individuals generations epoch marginal errors defined epoch result cumulative error margin solution obtained 
definition ico expect marginal error subsequent epoch epoch 
calculate useful bound cumulative error th epoch equation cumbersome equation solve 

substituting equations respectively get result ico problem comprises uniform near uniform scaled bbs 
exp simplified give exp 
see assumption ideal continuation genetic evolutionary algorithms turn indi erent epoch size tradeo 
solution error quality scheme employing small epochs compared scheme running algorithm large implicitly parallel epoch 
ico scaled bb strings may solve error scaled bb problem manner similar uniform bb case 
chapter derived population sizing equation exponentially scaled bbs equation ln may solve exp simplifying exp 
equation employing equal assumption conservative case exp expanding approximating terms exp exp equation 
writing expansion exponential function approximating terms get 
error small need maximize rhs equation 
higher order terms diminish tend zero exponential expansion dominating terms find minimized 
points small population solutions scaled bb case 
second term means larger number epochs better solution accuracy 
constant problem conclude maximizing number epochs best solution quality 
reduces ideally solving bb epoch 
approach solving economy relationship case exponentially scaled bbs originally goldberg discussed 
recognizing primary time continuation equation equation interpret solution quality slightly di erently 
define constant problem unit signal unit bb root mean square fitness variance bb 
population size quality equation reduced ln number bbs solved epoch signal proceed derivation assume model constant error factor ln replacing relation written mentioned section signal di erence exponential scaling represented form 
signal representation substituting population equation get 
consider bbs solved epoch need iterate epoch set bbs domino convergence assumption conditions required including population size identical 
final solution solved bbs direct measure solution quality constant problem function decreases increasing 
evidently order maximize solution quality need solve number bbs epoch ideally attack problem bb wise solving bb epoch 
identical previous derivation solution error 
neutral scaling continuation theory bounding cases uniform exponentially scaled bb strings recommends opposing approaches optimal performance suggestive neutral scaling di erence strategies ect solution nature problem fades distinction uniform non uniform scaling bbs 
identify neutral scaling criteria re examine function quality equation relate quality function problem characteristics identify term comes signal ratio equation achieve independent quality function need signal function form function bb salience distributed bitstring salience decreases square root salience index 
approximate neutral behavior function characteristic helps draw line application continuation theory real problems 
empirical verification having seen theoretical ramifications ideal gea continuation proceed test careful experimentation schemes parallel theory 
realm exploiting function domain information incorrectly converged alleles perturbed increased probability epoch 
attempt model ico may easy extend real problem little information characteristics alleles bbs form global solution 
results averaged independent runs 
gas runs point point crossover probability background mutation probability set zero 
tight linkage assumed continuation applied competent ga pairwise tournament selection replacement experiments keep noise selection low sastry goldberg 
test functions deceptive traps discussed section test functions continuation algorithm comparison ga continuation 
di culty trap function building block unitation building block fitness signal difference bit trap bit trap fitness individual building blocks 
bit traps concatenated bb test function bit traps concatenated bb test function 
actual function multiplied building block 
concatenation liepins vose trap functions equation generate test function thesis 
particular primary test functions combination bit traps ii combination bit traps 
bit bit traps respectively bb wise hard shown 
uniform salience function tests individual fitness computed simply sum fitnesses constituent bbs 
signal di erence uniformly scaled test functions di erence fitnesses best second best bbs 
case non uniform bb contribution exponential scaling vary bb salience scaling constituent bb fitness 
bbs exponentially scaled function minimum signal di erence general point string signal di erence index bbs high salience low salience chromosome string 
run progresses signal di erence bbs tackled changes test functions scaled bbs 
worth noting bb test functions signal di erence remains bb test function significantly complex bb function 
fitness variance bb bb function bb test function higher 
bb function harder solve 
case scaled bb test functions values represent minimum fitness variance functions respectively 
convergence criteria runs convergence criterion fitness di erence determine dynamic epochs specifying uniform epoch durations 
population considered converged di erence maximum minimum individual fitnesses population fell signal di erence tackled stage 
runs equal epochs tailored corresponding population sizes performed compared theoretical predictions dynamic epoch model 
equal epoch static restart schedule continuation results quantitatively agreement dynamic counterparts 
results measured terms proportion correct building blocks converged population expending fixed number total function evaluations 
point view continuation theory best suitable compare results runs varying population sizes 
gives direct estimate ciency runs epochs vs single epoch 
experimental results runs recorded bounding cases uniform exponentially scaled bbs test function outlined previous section 
section presents results uniformly exponentially scaled bbs static dynamic restart scheduling 
take results obtained continuation criteria determined fitness di erence population assuming fixed epoch duration directly run duration theories 
uniformly scaled bbs runs shows results trap function uniform building block salience comparing ico standard ga runs function evaluations solution quality terms proportion correct building blocks ga compared simple ga runs continuation replicated previous experimental studies harik cantu paz goldberg miller 
runs ideal continuation operator indi erent population sizing runs single implicitly parallel epoch equivalent runs problem solved smaller populations epochs 
agrees continuation theory uniformly scaled bbs equation runs continuation operators yielded equally results lesser function evaluations 
number chosen easy comparison control case 
population size comparison ico control case runs standard ico proportion correct building blocks solution final convergence versus population size uniformly scaled building block problem 
results shown test trap function comparing ico standard simple ga runs total function evaluations shows ico performance detail 
perturbation probability continuation epoch ico kept smaller approximately case covered 
notice fall behavior close population size case function evaluations 
go predictions continuation 
closer observation see population size number function evaluations number generations available su cient complete full run convergence population 
population statistics observed convergence suggests time continue ga appropriately attain quality desired 
shall see type behavior subsequent runs identify fall behavior anomaly continuation 
studied uniformly scaled bbs bbs contributions string fitness comparable 
increase problem di culty equal contribution bbs give way sub solutions contribution results ico uniform bbs problem population size evaluations evaluations proportion correct building blocks solution final convergence versus population size uniformly scaled bb problem ico 
results shown bbs test trap function including results total function evaluations 
solution fitness di er orders magnitude 
unequal distribution bb fitnesses necessitates serial solution bbs addition introducing inter bb noise string 
shall consider bounding case unequal bb salience case exponentially scaled bbs 
exponentially scaled building blocks examine continuation theory stands test applied non uniform bb problems 
shows ico runs trap function constituting building blocks exponentially scaled 
expected equation runs smaller populations solution obtained solving fewer building blocks time increasingly economical compared fewer epochs large population sizes 
results compared values 
comparison population size ico runs exponentially scaled building block salience proportion correct building blocks solution final convergence versus population size exponentially scaled building block problem 
results shown test trap function comparing ico solid dashed dotted line total function evaluations population size results ico bb trap function fixed function evaluations evaluations evaluations proportion correct building blocks solution final convergence versus population size exponentially scaled bb problem ico 
results shown test trap function including results total function evaluations 
highlights utility continuation operators solving hard problems economically lesser function evaluations employing small run epochs 
depicts similar results problem disturbance rate diversity injection rate increased half earlier case 
evident best performance extends larger population size value curves considerably noisier 
second test function involves th order bbs making manifold di cult 
signal di erences stay case test trap function minimum variance value increases bb min bb min 
di erence significant bbs exponential scaled string higher salient bbs 
presents result similar ico bbs trap 
find results hold case high population variance reflected noisier plot 
case static restart schedules equal epoch sized runs discuss results obtained 
equal epoch runs low population converges faster predicted standard convergence theories cheating continuation operators legitimate share epochs standard run duration theories plan schedule 
words equal epoch assumption continues run smaller population convergence reducing total number epochs possible dynamic epoch consideration 
epochs smaller sizes suitable low population size convergence considered constant epoch size runs results favorably match theoretical predictions slightly di ering dynamic scheduling performance owing fine tuning requirements epoch size 
shows results ico runs uniformly exponentially scaled bb strings appropriate equal epoch sizes assumed continuation operator 
specifically exponentially scaled building block problem constant epoch size generations smaller populations 
population size results ico bb trap function fixed function evaluations evaluations evaluations cubic fit proportion correct building blocks solution final convergence versus population size exponentially scaled bb problem ico 
results shown test trap function including results total function evaluations 
population size ico performance equal epoch runs uniform scaled exponentially scaled proportion correct building blocks solution final convergence versus population size uniformly solid exponentially scaled dashed building block problem 
results shown test trap function comparing salience cases total function evaluations 
summary chapter discussed theory experiments idealized continuation simplified assumption negligible rework action ideal continuation operator 
idealization designing ico discussed 
theoretical derivations predicting behavior ga action 
showed ideal continuation assumption ga indi erent population sizing epoch duration tradeo uniform bb salience 
large population running single large epoch produces result small population running multiple convergence epochs 
hand case exponential scaling economical follow epoch wise strategy solving bbs sequentially high low salience 
followed experimental results taken particularly hard functions concluded continuation theory held case 
experimental results confirm theoretical expectations provide useful insight continuation genetic algorithm runs time addressing utility recombination diversity operators correct proportion set problem di culty 
shall remove rework assumption bring continuation arena rcos 
chapter real continuation operators real continuation operators implemented practical situation incurring overhead costs 
involve cost perturbing correctly converged bbs run restarting costs 
chapter builds study ideal continuation discussed previous chapter extends include cost continuation rework 
continuation non ideal situations discuss issues involved including design continuation operators 
recognize spectrum rcos exists may tapped tailor rcos specific problems 
adaptive mutation operators studied approximation intelligent rcos 
theoretical predictions supported empirical results rcos deceptive max trap functions 
discussion explanation rework 
cost rework considered number length size epochs available time resources distributed 
section considers time spent switching epochs comes 
real continuation applied population potential ecting correctly incorrectly converged building blocks 
diversity inducing real continuation operators hit correctly converged alleles bbs re solved 
goldberg distinctly defined types errors rco 
type error perturb allele 

type ii error leave incorrectly converged allele untouched 
rework regeneration tradeo real continuation operators 
motivates study ective continuation operators explore solution characteristics adjust maturity run 
instance early run bbs correctly converged probability hitting wrongly converged bb high stand gain continuation operator 
run progresses bbs close optimal probability introducing high rework disturbing correctly converged bbs increases situation conservative continuation operator 
way look intensity rework consider salience bbs hit rco 
salient bb hit rco generate higher fitness variance population decision making di cult salient bbs solved currently 
temporal noise introduced virtue rco di cult handle continuing solution epoch particularly badly scaled problems 
type errors need fixed cases ga continue solution run 
type ii errors easier comprehend gea background mutation inherent insurance 
depending mutation rates particularly continuation epoch type ii errors overcome definite probability 
shows schematic rework introduced reduces expected quality solution fresh epoch 
introduces cost overhead continuation 
time cost overhead drawn total time budget available reduces total ective time available solving problem 
discussion continuation overheads take look rework incorporated theory 
time quality loss rework schematic showing reduction attained quality fresh epoch rework goes repairing reducing total ective computation time available 
continuation theory rework section extends ideal continuation theory section order account rework penalties rco implementable form continuation 
subsequent sections look theory design rcos plan restart schedules 
equation holds ideal continuation operator real continuation operator requires finite share time cover rework costs 
equation needs modified include term gn average number additional function evaluations required epoch order reinstate inadvertently disturbed alleles previously converged correctly overcome type continuation error 
uniformly scaled bbs arguments derivation real continuation exactly idealized case discussed section 
equation representation changed incorporate rework factor 
substituting cumulative error equation equation get relations inequality replaced equality assumption uniform errors exp exp 
relation gives valuable insight working real continuation nicely scaled problems bbs significantly varied salience string 
equation time budget holding rework costs reasonably small constant conclude larger population size wise choice 
large value argument exponential function large negative number reducing value cumulative error accurate solution keep population size large possible allowing run complete allocated budget 
directly implies run completed single large epoch 
inference assumed rework term small quantity fixed epoch size determined convergence run duration considerations 
discussed previous chapter disproportionately small populations dynamics dominant convergence times considerably lower 
epoch size smaller number rework term get comparable low values 
shall see experimental results chapter phenomenon gives rise unexpected behavior low populations error margin considerably lower cases 
scaled building blocks results rco simple bb scaling lead believe continuation probably best way attack problem 
better covering run large implicitly parallel epoch trying schedule epochs separated continuation restarts 
need take closer look continuation theory scaled bb problems derived section 
primary rework continuation equation equation write substituted equation 
quality equation re written rco follows 

solving quality equation small value approximating get relation case ico clearly pronounce smaller help increase solution quality obtained run 
rework term comparable extreme bb wise solution best strategy 
carefully designed continuation operators shall see entail significant rework burden algorithm 
economical solve badly scaled problem serially continuation restarts refresh small population periodically large population attempt solve entire solution 
designing real continuation operators real continuation operator rco costs run finite amount rework imperative model continuation operators minimize rework requirements serving satisfactorily provide continuation run 
ico assumption may modeled information solution available 
idea may extended practical cases banner rco 
simple rco modeled problem information provided ico withdrawn 
leaves continuation operating correctly converged bbs introducing rework included equation 
crude form rcos serves bounding case rco design 
continuation nature epoch wise action macro level operator called play periodically acts population significantly ecting strings short period action 
order ensure preservation best solution population practitioners elitist strategies 
elitism particularly recommended continuation nature influence 
simple real continuation operator distinguish individuals altering elitist population replacement ensures best ones previous generations lost completely 
recognized designing rcos total withdrawal information ico bounding case rco design ico extreme operators complete knowledge solution bbs 
shall study exists spectrum rcos extremes ects design orts 
rco spectrum simple constant mutation rate epoch problem knowledge probably simplest form rco 
self increasing intelligence blind mutation rco ico adaptive mutation rcos schematic rco spectrum showing presence extremes knowledge rcos blind simple mutation operator idealized case complete environment information case ico 
real continuation operators occur extremes objective remains design cient rcos closer ico 
adaptive parameters back back back beyer glickman sycara davis ross fine tune customizing action bit learning bits bbs best target continuation inter epoch periods ones need left certain time run 
completely elaborate set operator reduce cost re computation rework introduce operator overhead 
operator overhead mean budgeting burden introduced computational needs operator 
justifiably ignored operator overheads assumed fitness function evaluations sole resource 
reasonable assumption needs detailed self adaptation operators case 
learning curve rco may considerable 
tradeo allowing continuation operator learn see bad bbs highly selective operation versus keeping completely blind hitting bbs 
addition computational burden involved operator overhead concern making operator complicated extent primary optimization objective 
excluding elaborate self adaptive schemes left wide range rco choices accordance needs particular problem hand 
adaptive operators choice continuation variable rate macro level mutation operator 
factors mutation rate may scheduled vary 
generation temporal 
bit position spatial individuals 
population size spatial population search space fogarty evaluated various mutation schedules concluded varying mutation rates generations bit positions binary representations improved line performance gas 
specifically fogarty tested compared tailored mutation schedules 
constant mutation rate 
mutation rate varying exponentially time 
mutation rate varying bit positions bit strings bit position string 

mutation rate varying time position comparisons specific problem experimental setup study cited back important starting point variable mutation rate schedules 
back gives executive overview important studies dealing mutation parameters including variable mutation rate schedules 
interested reader pointed interesting literature adaptive mutation schemes back back back beyer glickman sycara saravanan fogel 
generalized schedule varying mutation rate manner exp 
constants easily determined need learned empirical trials 
relation includes population size parameter proved quite promising study providing time position varying mutation rate selection population size 
srinivas adaptive mutation probabilities individual fitnesses population fitness average 
mutation scheme form max max 
scheme helpful slowing mutation individuals population helpful distributing mutation orts bit strings 
mauldin suggested bitwise varying mutation rates improve performance ga improving handle population diversity 
hinted phenotypic distances hamming distances goldberg diversity measure percent genetic material insurance tailored mutation 
study time varying hamming distance measure preserve diversity population run progressed 
indicate number ways operator may varied designed achieve best performance 
implemented rcos shall implementation rcos results deceptive traps 
rcos adaptive operators discussed constants determined empirically 
specifically rcos implemented rco entire problem knowledge available ico withdrawn leaving constant rate mutation rco 
note rco allele value information bb linkage information 
considerably naive rco essentially blind rco spectrum 
rco partially adaptive rco incorporates temporal adaptation variation bit position 
means run progresses rco adapts perturbation probability basis generations run 
adaptation uniform bbs individual discriminate bb salience contributions 
reason rco primarily implemented uniformly scaled bbs problem spatial scaling important 
functional form rco perturb exp number generations passed population size string length respectively 
constant depends particular problem solved needs determined empirically 
rco ii elaborate rco incorporating time positional variation higher adaptation particularly unequally scaled bbs 
run progresses salient bbs converge rco concentrates salient bbs solved may experienced drift higher salience bbs solved 
adaptive schemes discussed perturb exp estimated measuring percentage correct bbs previous epoch 
gas solve scaled bbs serially percentage correct bbs converted lq 
rco iii similar rco 
case allele information kept intact excluding linkage information operator 
means continuation ability remedy incorrect alleles consider linked alleles 
rco iii particularly useful tests involving higher order bbs linkage information crucial 
noted rco designs statically assigned self adapt 
rcos mature treat separately bbs differing salience tailor perturbation probabilities maturity run need values constants involved defining equations 
initial input schedule needs empirically determined derived respects problem knowledge 
results rco implementations test functions described section 
rco results little solution information real continuation operator employed finite rework introduced equation lowers solution quality small population sizes 
experimental results verify superiority single epoch run epochs problems uniform bb salience 
smaller population causes considerable penalties run duration due large rework re solving parts solution decided previous generations 
depicts behavior test trap function rco continuation operator 
compares results ico rco standard simple ga runs problem 
see clearly rco results worse ideal case improvement simple ga results 
aim rcos produce results closer 
population size results rco uniformly scaled bbs problem evaluations evaluations proportion correct building blocks solution final convergence versus population size uniformly scaled bb problem rco 
results shown test trap function including results total function evaluations 
population size comparison ico rco control case runs standard rco ico proportion correct building blocks solution final convergence versus population size uniformly scaled building block problem 
comparative results shown test trap function comparing ico rco rco standard simple ga runs total function evaluations figures result rco bbs trap function 
graph depicts clearly ga behavior discussed section 
population sizes function evaluations epoch sizes considerably smaller normally expected manifests reversal error margin trends particular short range populations 
figures show number continuation epochs executed population sizes 
number times continuation operators applied prematurely converged population 
average number epochs shown 
results uniformly scaled bbs problem similar higher number total function evaluations required gain significant solution quality owing higher problem complexity discussed earlier 
results problem figures 
exponentially scaled bbs cases tested bbs trap functions figures respectively 
reversal trend clear results show smaller population running population size results rco uniform bb trap function evaluations evaluations proportion correct building blocks solution final convergence versus population size uniformly scaled bb problem rco 
results shown test trap function including results total function evaluations 
population size results rco iii uniform bbs problem proportion correct bbs proportion correct building blocks solution final convergence versus population size uniformly scaled bb problem rco iii 
results shown test trap function total function evaluations 
number continuation epochs determined dynamically bb test function population size number continuation epochs number epochs mean number epochs number epochs versus population size uniformly scaled bb problem 
number continuation epochs population went number times continuation operators applied dynamic convergence criteria fulfilled 
population size log plot number continuation epochs bb problem uniform scaling number epochs number epochs log plot data corresponding 
see smaller populations number epochs disproportionately large giving rise ga behavior 
notice higher population sizes number epochs small explains fall behavior discussed 
continuation epochs productive single population attempting solve poorly scaled bbs parallel 
results line predictions continuation theory 
population size results rco ii bb trap function fixed function evaluations evaluations evaluations proportion correct building blocks solution final convergence versus population size exponentially scaled bb problem rco ii 
results shown test trap function including results total function evaluations 
population size proportion correct bbs rco ii bb trap function fixed function evaluations evaluations evaluations proportion correct building blocks solution final convergence versus population size exponentially scaled bb problem rco ii 
results shown test trap function including results total function evaluations 
summary chapter introduced concept rework applied time continuation showed continuation applied real problems rcos 
theoretical derivations predicting behavior ga action rcos 
showed action rcos better run large population single epoch solving simpler problems having evenly scaled bbs 
problems significant bb scaling situation reversed better smaller population run multiple epochs 
followed experimental results taken particularly hard functions concluded continuation theory held case 
chapter applications thesis examined strategic di erences running ga large population size single large epoch choosing smaller population running larger number total generations epoch wise 
real continuation operators designed tested success particularly usefulness case hard problems non uniform building block salience established bounding case exponentially scaled bbs 
noted continuation important simple problems scaled constituting bbs 
case best complete run usual single large epoch 
problem complex characterizes unevenly scaled bbs useful implement continuation ga smaller population size small convergence epochs available time budget 
salience sequence connection discussed importance bb salience continuation theory 
study continuation thesis recognized doubt complexities algorithm turn di erent stances variation bb salience 
saw di erence salience structure problem ects basic strategy adopted cient deployment available time budget 
time continuation study clearly reveals strong connection salience structure problem encoding resulting sequence format ga follows solving 
nature gas nonlinear algorithms tend solve bbs parallel possible 
directly ected relative salience bbs solved 
problems high variance bb salience connected sequential processing fitness landscapes salience structure enjoy fairly parallel processing constituent bbs 
imperative distinguish problems basis organization bb salience tackle appropriately 
identified fairly simple problems near uniform salience bb distribution best solved single large population running continuous epoch 
ability solve similar salience bbs parallel ciently 
tougher problems poorly scaled bb contributions solved sequentially advancing solving salient bbs earlier run regenerating diverse genetic material salient bit positions su er drift convergence earlier run epochs 
discussion salience sequence connection realized terms primary ga operators crossover mutation 
inherently crossover crossover operators advance solving sub solutions parallel recombining yield final solution 
hand mutation operators solve bbs sequentially gradually improving 
time continuation attempts best worlds implementing mutation adaptive continuation scheme required solve problem sequentially salience structure bbs 
time epochs continuation uses standard recombination operators solve near equal salience bbs parallel 
section take brief look crossover mutation center classical debate gea circles required choose light time continuation theory 
crossover vs mutation genetic evolutionary algorithm community primary operators crossover mutation regarding abilities utility optimal ga run 
gea school thought emphasized importance crossover primary search evolution operator noticing mutation background aggressive operator 
hand researchers mutation family assert relative superiority search space abilities search vicinity solutions population improve pick fresh regions fitness landscape 
luke spector direct comparative study operators hard conclude specifically operator better special conditions 
concluded crossover successful mutation di erence performance quite small statistically insignificant 
relative performance strongly ected particular function domain parameter settings 
suggested crossover ective larger populations handled smaller populations mutation successful symbolic regression boolean multiplexer domains 
want relate success mutation implementation evolution strategies rechenberg rechenberg rechenberg advanced forms adaptive mutation rates back schwefel schwefel back back ho schwefel 
muhlenbein study breeder genetic algorithms attempted find optimal combine operators mentioned mutation ective smaller populations crossover performance ected significantly population size 
early days geas fogel owens walsh illustrated utility selection mutation achieving results variety evolutionary computations 
fogel atmar asserted categorically crossover specific advantage mutation operators subsequent fogel fogel suggested crossover apparently required functions chosen studies 
wu lindsay riolo direct comparative empirical study acknowledge crossover instrumental recombination mixing goldberg deb thierens thierens goldberg take advantage sufficient diversity population 
mention mutation ective destroying bbs crossover constructing bbs 
studies researchers spent considerable time ort studying ectiveness crossover shown various occasions relative importance de jong spears de jong vose liepins scha er eshelman 
success numerous competent gas section clearly demonstrated utility crossover search operator evolutionary algorithms 
sharpe demonstrates operators globally superior exist fitness landscapes particularly suitable mutation crossover hill climbing di cult 
mentions hybrid algorithms expect benefit respective operator capable handling particular fitness landscapes 
tanaka specifically proposed operators self reproduction mutation srm crossover mutation cm promote cooperative behavior 
spears attempt study theoretically di erences underlying notions operators 
viewed argument lens dynamic bb hypothesis exploration vs exploitation tradeo 
supported atmar researchers approach arguments open perspective operators may useful depending type objectives algorithm implemented 
spears went step suggest di erences mutation crossover operators bridged single unifying general operator specialize roles 
di erences opinion researchers world utility various approaches operators optimal performance gas 
goldberg terms debate crossover mutation emotionally charged surrogate scientific predictive counterpart time continuation issue 
primary questions thesis attempted answer 
problem diversity convergence important context limited computing resources time 
infinitely abundant resources su ciently large choice population size serve purpose maintaining diversity sheer brute force size 
scenario computing resources limited practice important develop cient methods managing 
thesis included issue genetic diversity preservation role crossover mutation proposed continuation operators 
epoch wise scheme proposed studied ga runs 
epoch marked considerable convergence continuation operators called play ectively continue ga run completion 
clearly depicts crossover mutation operators treated complementary competitive 
serve better equip ga powerful problem solving capabilities harmony operations solve problems 
applications benefits continuation ga design practical scheme planning ga run population scheduling helps maximize quality time budget 
directly build viable ciency enhancement technique geas 
continuation theory predictive suggest researchers making salience sequence connection help practitioners design gas better utilize available computational time 
uniform salience suggests implicit parallelism non uniform salience implies necessary sequential nature processing 
usual battle crossover vs mutation increasingly proved wrong headed 
continuation strongly indicates thinking terms optimal combine implicitly parallel implicitly sequential operators get quality solutions quickly 
crossover vs mutation crossover mutation pointed introductory chapters research intends bridge gap schools thoughts gea research community showing possibilities comprehensive combine philosophies result qualities better taken individually 
look best worlds trying prove superiority 
nature proof harmonious existence crossover mutation operators 
paradigm shift confronting position symbiotic relationship operators imperative want reap benefits ered complementary characteristics 
strategy intermittent epochs intelligent mutation population probably approach hope attempt meets kind 
extensions studied tested various important time continuation issues detail questions remain answered new ones course study 
possible directions investigation include bb salience theory successfully predicts continuation quantitatively distinct function regimes depending bb salience 
probed predictions extended problems mixed bb salience distribution intermediate bb salience distribution extent 
intermediate scaling characteristics identified considering neutral scaling case quality function begins indi erent variations bb salience 
problem characteristics continuation theory distinguishes problems primarily di erence bb salience 
factors may ect algorithm performance considered 
rco spectrum exists spectrum rco designs varying crude fixed mutations adaptive self adaptive gene expression mutation 
identified rco spectrum qualitatively current theory treats rcos single entity 
important suggestions obtained results help distinguish various regimes spectrum 
design continuation cient gas concept continuation may design cient geas prime importance 
continuation holds promise optimal combines gas 
ciency concern important quantitative measure ciency gain needs developed continuation techniques ectively combined eets 
bibliography abramowitz stegun 

handbook mathematical functions 
new york dover publications tanaka 

cooperative crossover mutation operators genetic algorithms 
proceedings genetic evolutionary computation conference volume 
albert 

cient genetic algorithms discretization scheduling 
master thesis university illinois urbana champaign 
albert goldberg 

cient evaluation genetic algorithm integrated fitness functions illigal report 
urbana il university illinois urbana champaign illinois genetic algorithms laboratory 
asoh muhlenbein 

mean convergence time evolutionary algorithms selection mutation 
parallel problem solving nature ppsn iii 
atmar 

philosophical errors plague evolutionary theory simulated programming 
proceedings annual conference evolutionary programming 
back 

interaction mutation rate selection self adaptation genetic algorithm 
parallel problem solving nature 
back 

self adaptation genetic algorithms 
practice autonomous systems proceedings european conference artificial life 
back 

advanced techniques evolutionary computation self adaptation 
handbook evolutionary computation pp 

bristol new york institute physics publishing oxford university press 
back 

heuristics parameter setting issues mutation parameters 
handbook evolutionary computation pp 

bristol new york institute physics publishing oxford university press 
back ho schwefel 

survey evolution strategies 
proceedings fourth international conference genetic algorithms 
back schwefel 

evolution strategies variants computational implementation 
winter periaux 
eds genetic algorithms engineering computer science chapter pp 

chichester john wiley sons 
bak 

self organized criticality punctuated 
physica 
baluja 

population incremental learning method integrating genetic search function optimization competitive learning tech 
rep 
cmu cs 
pittsburgh pa carnegie mellon university 
beyer 

theory evolution strategies self adaptation 
evolutionary computation 
blickle thiele 

mathematical analysis tournament selection 
proceedings sixth international conference genetic algorithms 
blickle thiele 

comparison selection schemes evolutionary algorithms 
evolutionary computation 


initialization mutation selection methods genetic algorithms function optimization 
proceedings fourth international conference genetic algorithms 
cantu paz 

designing cient accurate parallel genetic algorithms 
doctoral dissertation university illinois urbana champaign urbana il 
pelikan goldberg 

convergence model simple genetic algorithm finite populations illigal report 
urbana il university illinois urbana champaign illinois genetic algorithms laboratory 
culberson 

crossover versus mutation debate tga versus giga 
proceedings fifth international conference genetic algorithms 
darwin 

origin species means natural selection 
murray london 
davis 

adapting operator probabilities genetic algorithms 
proceedings third international conference genetic algorithms 
de jong 

analysis behavior class genetic adaptive systems 
doctoral dissertation university michigan ann arbor 
university microfilms 
deb goldberg 

investigation niche species formation genetic function optimization 
proceedings third international conference genetic algorithms 
deb goldberg 

analyzing deception trap functions 
foundations genetic algorithms 
eshelman 

chc adaptive search algorithm safe search engaging nontraditional genetic recombination 
foundations genetic algorithms 
eshelman scha er 

preventing premature convergence genetic algorithms preventing 
proceedings fourth international conference genetic algorithms 
eshelman scha er 

crossover niche 
proceedings fifth international conference genetic algorithms 
evans 

embracing premature convergence parallel genetic algorithm 
proceedings ieee conference evolutionary computation 
feller 

probability theory applications nd ed 
ed volume ii 
john wiley sons 
fogarty 

varying probability mutation genetic algorithm 
proceedings third international conference genetic algorithms 
fogel 

evolving artificial intelligence 
doctoral dissertation university california san diego la jolla ca 
fogel atmar 

comparing genetic operators gaussian mutations simulated evolutionary processes linear systems 
biological cybernetics 
fogel 

ectiveness crossover simulated evolutionary optimization 
biosystems 
fogel owens walsh 

artificial intelligence simulated evolution 
new york wiley publishing 
forrest mitchell 

relative building block fitness building block hypothesis 
foundations genetic algorithms 
fuchs 

crossover versus mutation empirical theoretical case study 
genetic programming 
fukunaga 

restart scheduling genetic algorithms 
parallel problem solving nature ppsn 
alford 

performance evaluation iterative improvement algorithms combined random restart applied scheduling problems 
international conference information sciences fuzzy logic intelligent control genetic algorithm 
glickman sycara 

evolutionary algorithms exploring dynamics self adaptation 
genetic programming 
goldberg 

optimal initial population size binary coded genetic algorithms tcga report 
tuscaloosa university alabama clearinghouse genetic algorithms 
goldberg 

simple genetic algorithms minimal deceptive problem 
genetic algorithms simulated annealing chapter pp 

goldberg 

genetic algorithms search optimization machine learning 
reading ma addison wesley 
goldberg 

sizing populations serial parallel genetic algorithms 
proceedings third international conference genetic algorithms 
tcga report 
goldberg 

genetic algorithms theory tutorial 
proceedings fourth international conference genetic algorithms 
goldberg 

construction high order deceptive functions low order walsh coe cients 
annals mathematics artificial intelligence 
goldberg 

flights genetic algorithm hawk 
high tech controls energy environment proceedings adaptive control systems technology symposium 
goldberg 

race hurdle sweet spot lessons genetic algorithms automation design innovation creativity 
evolutionary design computers 
goldberg 

time ciently genetic evolutionary algorithms continuation problem 
proceedings genetic evolutionary computation conference volume 
goldberg 
press 
design innovation 
boston ma kluwer academic publishers 
goldberg deb 

comparative analysis selection schemes genetic algorithms 
foundations genetic algorithms 
tcga report 
goldberg deb clark 

genetic algorithms noise sizing populations 
complex systems 
goldberg deb kargupta harik 

rapid accurate optimization di cult problems fast messy genetic algorithms 
proceedings fifth international conference genetic algorithms 
goldberg deb thierens 

better understanding mixing genetic algorithms 
journal society instrument control engineers 
goldberg richardson 

genetic algorithms sharing multimodal function optimization 
proceedings second international conference genetic algorithms 
goldberg rudnick 

genetic algorithms variance fitness 
complex systems 
illigal report 
goldberg 

finite markov chain analysis genetic algorithms 
proceedings second international conference genetic algorithms 
goldberg smith 

nonstationary function optimization ge algorithms dominance 
proceedings second international conference genetic algorithms 
greene 

deterministic analysis stationary diploid dominance 
genetic programming 
harik 

linkage learning probabilistic modeling ecga illigal report 
urbana il university illinois urbana champaign illinois genetic algorithms laboratory 
harik cantu paz goldberg miller 

gambler ruin problem genetic algorithms sizing populations 
proceedings ieee international conference evolutionary computation 
harik 

finding multimodal solutions restricted tournament selection 
proceedings sixth international conference genetic algorithms 
harik 

learning gene linkage ciently solve problems bounded di culty genetic algorithms 
unpublished doctoral dissertation university michigan ann arbor 
illigal report 
harik goldberg 

learning linkage 
foundations genetic algorithms 
harik lobo goldberg 

compact genetic algorithm 
proceedings ieee conference evolutionary computation 
manner 

optimal mutation probability genetic algorithms 
parallel problem solving nature 


nature mutation genetic algorithms 
proceedings sixth international conference genetic algorithms 
holland 

genetic algorithms optimal allocation trials 
siam journal computing 
holland 

schemata intrinsically parallel adaptation 
proceedings nsf workshop learning system theory applications 
holland 

adaptation natural artificial systems 
ann arbor mi university michigan press 
kay 

comparison genetic algorithms random restart opt switching solving large location allocation problems 
computers operations research 
goldberg 

building block superiority multimodality synchronization problems 
proceedings genetic evolutionary computation conference 


done lately 
adapting operator probabilities steady state genetic algorithm 
proceedings sixth international conference genetic algorithms 
kargupta 

gene expression messy genetic algorithm 
proceedings ieee international conference evolutionary computation 
kargupta 

performance gene expression messy genetic algorithm real test functions 
proceedings ieee international conference evolutionary computation 
kargupta 

gene expression missing link evolutionary computation 
genetic algorithms evolution strategy engineering computer science chapter pp 

west sussex england john wiley sons keller banzhaf 
june 
explicit maintenance genetic diversity 
url citeseer nj nec com keller explicit html 
krishnakumar 

algorithms stationary nonstationary function optimization 
spie proceedings intelligent control adaptive systems 

january 
machines think 
discover 
luke 

short runs beat long runs 
proceedings genetic evolutionary computation conference 
luke spector 

revised comparison crossover mutation genetic programming 
genetic programming 
ismail 
early restart algorithm 
neural computation 
davidor barak 

selectively destructive re start 
proceedings sixth international conference genetic algorithms 
mauldin 

maintaining diversity genetic search 
proceedings national conference artificial intelligence 
miller 

noise sampling cient genetic algorithms 
doctoral dissertation university illinois urbana champaign urbana 
illigal report 
miller goldberg 

genetic algorithms tournament selection ects noise 
complex systems 
miller shaw 

genetic algorithms dynamic niche sharing multimodal function optimization 
proceedings ieee international conference evolutionary computation 
muhlenbein 

equation response selection prediction 
evolutionary computation 
muhlenbein schlierkamp voosen 

optimal interaction mutation crossover breeder genetic algorithm 
proceedings fifth international conference genetic algorithms 
goldberg 

linkage identification non monotonicity detection overlapping functions 
evolutionary computation 
murata ishibuchi 

positive negative combination ects crossover mutation operators sequencing problems 
proceedings ieee international conference evolutionary computation 
pelikan goldberg 

hierarchical problem solving bayesian optimization algorithm 
proceedings genetic evolutionary computation conference 
pelikan goldberg 

escaping hierarchical traps competent genetic algorithms 
proceedings genetic evolutionary computation conference 
pelikan goldberg cantu paz 

boa bayesian optimization algorithm 
proceedings genetic evolutionary computation conference volume 
pelikan goldberg cantu paz 

bayesian optimization algorithm population sizing time convergence 
proceedings genetic evolutionary computation conference 
rechenberg 

evolutionsstrategie optimierung technischer systeme nach prinzipien der biologischen evolution 
stuttgart bad friedrich frommann verlag 
rechenberg 


schneider 
eds der und workshop pp 

berlin springerverlag 
rechenberg 

evolution strategy nature way optimization 
berlin springerverlag 
ronald 

genetic algorithms permutation encoded problems diversity preservation study multimodality 
unpublished doctoral dissertation university south australia 


theory representations genetic evolutionary algorithms application analysis design binary tree representations 
doctoral dissertation university 
rudnick 

genetic algorithms fitness variance application automated design artificial neural networks 
unpublished doctoral dissertation oregon graduate institute science technology beaverton 
saravanan fogel 

empirical comparison methods correlated mutations self adaptation 
evolutionary programming 
sastry 

evaluation relaxation schemes genetic evolutionary algorithms 
master thesis university illinois urbana champaign 
sastry goldberg 

modeling tournament selection replacement apparent added noise 
proceedings genetic evolutionary computation conference 
scha er caruana eshelman das 

study control parameters ecting online performance genetic algorithms function optimization 
proceedings third international conference genetic algorithms 
scha er eshelman 

crossover evolutionarily viable strategy 
proceedings fourth international conference genetic algorithms 
schwefel back 

evolution strategies ii theoretical aspects 
winter periaux 
eds genetic algorithms engineering computer science chapter pp 

chichester john wiley sons 
sharpe 
january 
rational methodology evolutionary search algorithms 
doctoral dissertation school cognitive computing sciences university sussex brighton bn qh 

new genetic algorithm large mutation rates selection 
proceedings international conference tools artificial intelligence 


diversity control oriented genetic algorithm 
proceedings iee ieee international conference genetic algorithms engineering systems 


diversity control oriented genetic algorithm development experimental results 
proceedings genetic evolutionary computation conference volume 


diversity control oriented genetic algorithm performance function optimization 
proceedings genetic evolutionary computation conference 
sinha 

designing cient genetic evolutionary algorithm hybrids 
master thesis university illinois urbana champaign 
smith goldberg 

dominance artificial genetic search 
complex systems 
spears de jong 

virtues uniform crossover 
proceedings fourth international conference genetic algorithms 
spears 

crossover mutation 
foundations genetic algorithms 
srinivas 

adaptive probabilities crossover mutation genetic algorithms 
ieee transactions systems man cybernetics 
srivastava goldberg 

verification theory genetic evolutionary continuation 
proceedings genetic evolutionary computation conference 
tate smith 

expected allele coverage role mutation genetic algorithms 
proceedings fifth international conference genetic algorithms 
thierens 

analysis design genetic algorithms 
leuven belgium katholieke universiteit leuven 
thierens goldberg 

mixing genetic algorithms 
proceedings fifth international conference genetic algorithms 
thierens goldberg 

convergence models genetic algorithm selection schemes 
parallel problem solving nature ppsn iii 
thierens goldberg pereira 

domino convergence drift temporal salience structure problems 
proceedings ieee conference evolutionary computation 
fujimoto 

forking genetic algorithm blocking shrinking modes fga 
proceedings fifth international conference genetic algorithms 
ross 

adapting operator settings genetic algorithms 
evolutionary computation 
van 

building block filtering mixing 
proceedings ieee conference evolutionary computation 
vose liepins 

schema disruption 
proceedings fourth international conference genetic algorithms 
vose liepins 

punctuated equilibria genetic search 
complex systems 


soft computing information retrieval 
techniques applications chapter large population generations genetic algorithms 
implications information retrieval pp 

physica verlag heidelberg 
wakefield 
january 
complexity business model 
scientific american 
watson hornby pollack 

modeling building block interdependency 
parallel problem solving nature ppsn 
wu lindsay 

comparison fixed floating building block representation genetic algorithm 
evolutionary computation 
wu lindsay riolo 

empirical observations roles crossover mutation 
proceedings seventh international conference genetic algorithms 
yoshida adachi 

diploid genetic algorithm preserving population diversity pseudo ga parallel problem solving nature 

