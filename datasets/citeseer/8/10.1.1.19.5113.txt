tesla broadcast authentication protocol adrian perrig ran canetti tygar dawn song main challenges securing broadcast communication source authentication enabling receivers broadcast data verify received data really originates claimed source modified en route 
problem complicated mutually untrusted receivers unreliable communication environments sender retransmit lost packets 
article presents tesla timed efficient stream loss tolerant authentication broadcast authentication protocol efficient protocol low communication computation overhead scales large numbers receivers tolerates packet loss 
tesla loose time synchronization sender receivers 
despite purely symmetric cryptographic functions mac functions tesla achieves asymmetric properties 
discuss pki application purely tesla assuming network nodes loosely time synchronized 
broadcast communication gaining popularity efficient large scale data dissemination 
examples broadcast distribution networks satellite done uc berkeley ibm research 
authors reached adrian cs cmu edu canetti watson ibm com tygar cs berkeley edu cs cmu edu 
broadcasts wireless radio broadcast ip multicast 
broadcast networks efficiently distribute data multiple receivers allow malicious user impersonate sender inject broadcast packets call packet injection attack 
source specific multicast ssm express notable exception attempts prevent attack 
malicious packet injection easy broadcast networks receivers want ensure broadcast packets receive really originate claimed source 
broadcast authentication protocol enables receivers verify received packet really sent claimed sender 
simply deploying standard point point authentication mechanism appending message authentication code mac packet computed shared secret key provide secure broadcast authentication 
problem receiver secret key forge data impersonate sender 
consequently natural look solutions asymmetric cryptography prevent attack digital signature scheme example asymmetric cryptographic protocol 
signing data packet provides secure broadcast authentication high overhead terms time required sign verify terms bandwidth 
schemes proposed mitigate overhead amortizing single signature packets 
schemes fully satisfactory terms bandwidth overhead processing time scalability robustness denial service attacks robustness packet loss 
schemes amortize digital signature multiple data packets serious denial service attack usually possible attacker floods receiver bogus packets supposedly containing signature 
signature verification computationally expensive receiver overwhelmed verifying bogus signatures 
researchers proposed information theoretically secure broadcast authentication mechanisms 
protocols high overhead large groups receivers 
canetti construct broadcast authentication protocol different keys authenticate message different mac 
receiver knows keys verify mac 
keys distributed way coalition receivers forge packet specific receiver 
security scheme depends assumption bounded number order receivers collude 
boneh durfee franklin show build compact collusion resistant broadcast authentication protocol relying digital signatures time synchronization 
show secure broadcast authentication protocol packet overhead slightly number receivers converted signature scheme 
approach providing broadcast authentication uses symmetric cryptography specifically message authentication codes macs delayed disclosure keys sender 
technique independently discovered cheung context authenticating link state routing updates 
related approach guy fawkes protocol interactive unicast communication 
context multicast streamed data proposed authors 
main idea tesla sender attaches packet mac computed key known 
receiver buffers received packet able authenticate 
short sender discloses receiver able authenticate packet 
consequently single mac packet suffices provide broadcast authentication provided receiver synchronized clock sender ahead time 
article overview tesla broadcast authentication protocol 
detailed description forthcoming book earlier publications 
standardization effort tesla way multicast security msec working group ietf 
tesla wide variety applications ranging broadcast authentication sensor networks authentication messages ad hoc network routing protocols 
background assumptions tesla requires receivers loosely time synchronized sender 
section review simple protocol achieve time synchronization 
tesla needs efficient mechanism authenticate keys receiver review way chains purpose 
way chains protocols need commit sequence random values 
purpose repeatedly oneway hash function generate way chain 
oneway chains widely cryptographic primitive 
uses way chains passwords lamport 
haller approach key time password system 
way chains applications 
psfrag replacements 
generate reveal way chain example 
sender generates chain randomly selecting repeatedly applying way function sender reveals values opposite order 
shows way chain construction 
generate chain length randomly pick element chain generate chain repeatedly applying way function commitment entire way chain verify element chain verify element element index hash chain check generally commits verify part chain know ith element chain check 
reveal elements chain order 
store chain 
create store element chain just store compute element demand 
practice hybrid approach helps reduce storage small recomputation penalty 
jakobsson coppersmith jakobsson propose storage efficient mechanism way chains way chain elements requires log storage log computation access element 
tesla elements way chain keys call chain way key chain 
furthermore key way key chain commits keys call key way key chain commitment simply key chain commitment 
time synchronization tesla need strong time synchronization properties sophisticated time synchronization protocols provide requires loose time synchronization receiver knows upper bound sender local time 
outline simple secure time synchronization protocol achieves requirement 
simplicity assume clock drift sender receiver negligible receiver periodically resynchronize time sender 
denote real difference sender receiver time 
loose time synchronization receiver need know exact upper bound refer maximum time synchronization error 
describe simple protocol time synchronization receiver performs explicit time synchronization sender 
approach require extra infrastructure perform time synchronization 
simple time synchronization protocol satisfies requirement tesla receiver knows upper bound sender clock 
reiter previously describes protocol 
shows sample time synchronization receiver sender 
protocol receiver records local time sends time synchronization request containing nonce sender 
receiving time synchronization request sender records local time replies signed response packet containing nonce 
security time synchronization protocol relies unpredictability nonce attacker predict receiver nonce send time synchronization request sender nonce replay response receiver 
interestingly processing propagation delay response message change assuming sender im psfrag replacements receiver time sender time direct time synchronization sender receiver 
receiver issues time synchronization request time time sender clock time sender responds request local time tesla receiver interested upper bound sender time 
receiver current time computes upper bound current sender time real synchronization error protocol 
receiver know propagation delay time synchronization request packet assume time synchronization error full round trip time rtt 

setup 
sender digital signature key pair private key public key assume mechanism allows receiver learn authenticated public key receiver chooses random unpredictable nonce 

protocol steps 
sending message records replies arrival time request packet receiver interested upper bound sender clock 
receiver interested lower bound sender clock processing delay delay response message matter 
details refer detailed time synchronization description 
receiver records local time nonce sender time nonce verify return message receiver verifies digital signature checks nonce packet equals nonce randomly generated 
message authentic receiver stores compute upper bound sender clock local time receiver computes receiving signed response receiver checks validity signature verifies nonce response packet equals nonce request packet 
verifications successful receiver uses compute upper bound sender time receiver current time computes upper bound current sender time real synchronization error protocol shows 
receiver know propagation delay time synchronization request packet assume time synchronization error full round trip time rtt 
digital signature operation computationally expensive need careful denial ofservice attacks attacker floods sender time synchronization requests 
problem request implosion sender overwhelmed time synchronization requests receivers 
address issues earlier 
tesla broadcast authentication protocol viable broadcast authentication protocol requirements low computation overhead generation verification authentication information 
low communication overhead 
limited buffering required sender receiver timely authentication individual packet 
robustness packet loss 
scales large number receivers 
tesla protocol meets requirements low cost special requirements sender receivers loosely time synchronized outlined section 
receiver sender buffer messages 
despite buffering tesla low authentication delay 
typical configurations authentication delay order round trip delay sender receiver 
sketch tesla protocol outline main ideas tesla 
broadcast authentication requires source asymmetry receivers verify authentication information generate valid authentication information 
tesla uses time asymmetry 
assume receivers loosely time synchronized sender time synchronization error parties agree current time 
sketch basic approach sender splits time time intervals uniform duration 
sender forms way chain self authenticating values assigns values sequentially time intervals key time interval 
way chain reverse order generation value time interval derive values previous time intervals 
sender defines disclosure time way chain values usually order time intervals 
sender publishes value disclosure time 
sender attaches mac packet 
mac computed contents packet 
packet sender determines time interval uses corresponding value way chain cryptographic key compute mac 
packet sender sends way chain value disclose 
receiver receives packet performs operation 
knows schedule disclosing keys clocks loosely synchronized check key compute mac secret determining sender reached time interval disclosing 
mac key secret receiver buffers packet 
receiver checks disclosed key correct self authentication previously released keys checks correctness mac buffered packets sent time interval disclosed key 
mac correct receiver accepts packet 
way chains property intermediate values way chain lost recomputed values 
disclosed keys lost receiver recover key chain check correctness packets 
sender distributes stream messages sender sends message network packet authentication information 
broadcast channel may lossy sender retransmit lost packets 
despite packet loss receiver needs authenticate messages receives 
describe stages basic tesla protocol order sender setup receiver bootstrap sender transmission authenticated broadcast messages receiver authentication broadcast messages 
sender setup tesla uses self authenticating way chains 
sender divides time uniform intervals duration int time interval start time time interval time int sender assigns key way chain time interval sequence 
way chain reverse order generation value time interval derive values previous time intervals 
sender determines length oneway chain 
kn length limits maximum transmission duration new oneway chain created 
sender picks random value kn pseudo random function sender constructs way function 
remainder chain computed recursively 
note gives kn compute value key chain kn intermediate values 
key active time interval details handle broadcast streams unbounded duration switching way key chains see 
article assume chains sufficiently long duration communication 
bootstrapping receivers receiver authenticate messages tesla needs loosely time synchronized sender know disclosure schedule keys receive authenticated key way key chain 
various approaches exist time synchronization 
tesla requires loose time synchronization sender receivers simple algorithm sufficient 
time synchronization property tesla requires receiver place upper bound sender local time discuss section 
sender sends key disclosure schedule transmitting information receivers authenticated channel digitally signed broadcast message unicast receiver time interval schedule interval duration int start time index interval length way key chain 
key disclosure delay number intervals 
key commitment key chain current interval index 
broadcasting authenticated messages key way key chain corresponds time interval 
time sender broadcasts message appends mac message key corresponding current time interval 
key remains secret intervals messages sent interval effectively disclose key call key disclosure delay 
general rule key multiple times different cryptographic operations ill advised psfrag replacements interval interval interval interval time top way key chain way function derived mac keys way function 
time advances left right time split time intervals uniform duration 
bottom see packets sender sends time interval 
packet sender uses key corresponds time interval compute mac packet 
example packet sender computes mac data key assuming key disclosure delay time intervals packet carry key may lead cryptographic weaknesses 
want key derive key compute macs 
pseudo random function family construct way function 
derive key compute mac messages 
depicts way key chain construction mac key derivation 
broadcast message interval sender constructs packet mac 
depicts way key chain derivation mac key derivation time intervals sample packets sender broadcasts 
authentication receiver sender discloses key parties potentially access key 
adversary create bogus message forge mac disclosed key 
packets arrive receiver verify macs safe keys safe key known sender safe packets safe messages macs computed safe keys 
receivers discard packet safe may forged 
explain tesla authentication detail sender sends packet interval receiver receives packet receiver key disclosed determine checks latest possible time interval sender currently loosely synchronized clock 
recall key disclosure delay number intervals key disclosure delayed packet safe 
sender reached interval discloses key key verify packet receiver verify authenticity packet sent interval adds triplet mac buffer verifies authenticity learns receiver receives dis closed key checks knows key 
latest key received date receiver checks legitimacy verifying earlier key 
receiver computes verifies authenticity packets interval previous intervals receiver receive keys intervals receiver derive 
note security tesla rely assumptions network propagation delay receiver locally determines packet safety sender disclosed corresponding key 
key disclosure delay longer network propagation delay receivers find packets safe 
discussion tesla security considerations security tesla relies assumptions receiver clock time synchronized maximum error 
suggest clock drift receiver periodically clock sender 
functions secure prfs function furthermore provides weak collision resistance 
long assumptions satisfied computationally intractable attacker forge tesla packet receivers authenticate successfully 
see earlier formal security proof 
achieving asymmetric security properties tesla broadcast authentication requires asymmetric primitive tesla provides loosely synchronized clocks delayed key disclosure 
tesla shares common properties asymmetric cryptographic mechanisms 
fact assuming nodes network time synchronized key key chain serves key chain commitment similar public key digital signature loosely time synchronized receiver authentic key chain commitment authenticate messages forge message mac receivers accept 
construct efficient pki solely tesla 
consider environment communicating nodes 
assume nodes loosely time synchronized maximum clock offset nodes nodes know authentic key chain commitment key disclosure schedule certification authority ca 
assume ca knows authentic key chain commitment key disclosure schedule node 
node wants start authenticating packets originating node contact ca key chain commitment key disclosure schedule ca sends authenticated tesla instance 
ca discloses corresponding key authenticate tesla parameters subsequently authenticate packets 
note tesla signature mechanism provide non repudiation anybody forge authentic tesla packets key disclosed 
conjunction trusted time stamping mechanism tesla achieve properties similar digital signature 
consider setup nodes network loosely time synchronized upper bound tion error nodes network trust time stamping server 
time stamping server timestamps tesla packets receives 
time stamping server broadcast hooks trust chain authenticated tesla instance 
judge wants verify sender sent packet performs operations 
receive current value time stamping server trust chain ensure safe wait tesla key authenticate 

trust chain value verify packet part trust chain 

verify packet safe time stamping server received necessary time stamping server timestamps safe packets 
retrieve key sender verify key chain commitment disclosure schedule recorded time stamping server 

verify authenticity packet implies correct sender generated packet 
tesla time stamping server achieve non repudiation 
example shows tesla authentication performed key disclosed long verifier check packet arrived safely 
acknowledgments gratefully acknowledge funding support research 
research sponsored part united states postal service contract usps united states defense advanced research projects agency contract united states national science foundation 
darpa contract supervision space naval warfare systems center san diego 
views contained document author interpreted representing official policies expressed implied united states government darpa nsf usps agencies 
anderson bergadano lee needham 
new family authentication protocols 
acm operating systems review october 
bergadano 
chained stream authentication 
selected areas cryptography th annual international workshop sac volume lecture notes computer science pages august 
bergadano 
individual single source authentication mbone 
icme aug 
boneh durfee franklin 
lower bounds multicast message authentication 
advances cryptology eurocrypt volume lecture notes computer science pages 
briscoe 
flames fast loss tolerant authentication multicast streams 
technical report bt research 
www labs bt com people papers html 
laud lipmaa 
time stamping binary linking schemes 
advances cryptology crypto volume lecture notes computer science pages 
canetti garay micciancio naor pinkas 
multicast security taxonomy efficient constructions 
infocomm pages march 
cheung 
efficient message authentication scheme link state routing 
th annual computer security applications conference pages 
coppersmith jakobsson 
optimal hash sequence traversal 
proceedings fourth conference financial cryptography fc lecture notes computer science 
desmedt frankel 
shared generation authenticators signatures 
advances cryptology crypto volume lecture notes computer science pages 
desmedt frankel yung 
multi sender network security efficient authenticated multicast feedback 
proceedings ieee infocom pages 
desmedt yung 
arbitrated unconditionally secure authentication unconditionally protected arbiter attacks 
advances cryptology crypto volume lecture notes computer science pages 
fujii 
combinatorial bounds design broadcast authentication 
ieice transactions 
gennaro rohatgi 
sign digital streams 
advances cryptology crypto volume lecture notes computer science pages 
haber stornetta 
time stamp digital document 
advances cryptology crypto volume lecture notes computer science pages 
haller 
key time password system 
proceedings symposium network distributed systems security pages 
internet society february 
holbrook cheriton 
ip multicast channels express support large scale applications 
proceedings acm sigcomm september 

hu perrig johnson 
ariadne secure demand routing protocol ad hoc networks 
proceedings eighth acm international conference mobile computing networking mobicom september 
appear 
jakobsson 
fractal hash sequence representation traversal 
proceedings ieee international symposium information theory isit pages july 

characterization multi receiver authentication 
proceedings nd australasian conference information security privacy volume lecture notes computer science pages 
lamport 
password authentication insecure communication 
communications acm november 
lamport melliar smith 
synchronizing clocks presence faults 
journal acm 
lipmaa 
secure efficient time stamping systems 
phd thesis department mathematics university estonia april 
mills 
network time protocol version specification implementation analysis 
internet request comment rfc internet engineering task force march 
miner staddon 
graph authentication digital streams 
proceedings ieee symposium research security privacy pages may 
multicast security ietf working group msec 
www ietf org html 
charters msec charter html 
perrig canetti song tygar 
efficient secure source authentication multicast 
proceedings symposium network distributed systems security ndss pages 
internet society february 
perrig canetti tygar song 
efficient authentication signature multicast streams lossy channels 
proceedings ieee symposium research security privacy pages may 
perrig szewczyk wen culler tygar 
spins security protocols sensor networks 
proceedings seventh annual international conference mobile computing networks mobicom pages 
perrig tygar 
security protocols broadcast networks 
kluwer academic publishers 
appear 
reiter 
security architecture faulttolerant systems 
phd thesis department computer science cornell university august 
reiter birman van renesse 
security architecture fault tolerant systems 
acm transactions computer systems november 
rohatgi 
compact fast hybrid signature scheme multicast packet 
proceedings th acm conference computer communications security pages november 
wang 
new results authentication codes 
advances cryptology eurocrypt volume lecture notes computer science pages 
wang 
authentication codes models bounds constructions extensions 
information computation 
simmons 
cartesian product construction unconditionally secure authentication codes permit arbitration 
journal cryptology 
simons welch lynch 
overview clock synchronization 
simons spector editors fault tolerant distributed computing number lncs pages 
song zuckerman tygar 
expander graphs digital stream authentication robust overlay networks 
proceedings ieee symposium research security privacy pages may 
wong lam 
digital signatures flows multicasts 
ieee icnp 
source specific multicast ietf working group ssm 
www ietf org html 
charters ssm charter html 

