ontology versioning change detection web michel klein dieter fensel kiryakov vrije universiteit amsterdam de boelelaan hv amsterdam netherlands michel klein dieter cs vu nl lab ai blvd sofia bulgaria bg 
effectively ontologies web essential changes ontologies managed 
analyzes topic ontology versioning context web looking characteristics version relation ontologies identification online ontologies 
describes design web system helps users manage changes ontologies 
system helps keep different versions web ontologies interoperable maintaining transformations ontologies conceptual relation concepts different versions 
system allows ontology engineers compare versions ontology specify conceptual relations 
visualization differences uses adaptable rule mechanism finds classifies changes rdf ontologies 
web needs change management ontologies envisaged generation web called semantic web consist data defined linked way effective discovery automation integration reuse various applications vision ontologies important role defining relating concepts describe data web 
distributed dynamic character web cause versions variants ontologies arise 
ontologies developed persons continue evolve time 
domain changes adaptations different tasks changes conceptualization cause modifications ontology 
cause incompatibilities applications ontologies refer give wrong interpretations data data inaccessible 
form real semantic web necessary knowledge represented different versions ontologies interoperable 
important create links ontology versions specify knowledge different versions ontologies related 
links re interpret data knowledge different versions ontologies 
www org sw activity various elements methodology ontology versioning 
describe method specify relations versions ontologies propose identification scheme ontologies 
web system supports user specifying relations ontology versions 
system called store ontologies provide transparent interface different versions 
goal system provide central registry ontologies allow ontology engineers store versions variants ontologies relate possibly remote ontologies 
resulting mapping relations versions exported outside system 
rest organized follows 
section analyze characteristics relation different versions ontologies 
section contains discussion ontology identification proposes identification scheme ontologies 
section give overview versioning support system describe main functions 
section describes main feature system comparing ontologies 
section explain mechanism find changes rdf ontologies rules encode change types 
discuss open issues section conclude section 
characteristics version relation important aspects discuss considering version relation ontologies 
difference version relations conceptual relations inside ontology 
ontologies usually consist set class concept definitions property definitions axioms 
classes properties axioms related form model part world 
change constitutes new version ontology version relation definitions concepts properties original version ontology new version 
relations concepts inside ontology class class fundamentally different version relations versions concept class class 
case relation purely conceptual relation domain interest second case relation describes meta information change concept 
versions concept conceptual relation 
words update relation conceptual relation participating versions concept particular conceptual logical relation 
altogether distinguish properties version relation transformation actual change specification changed ontological definition specified set change operations cf 
change restriction property addition class removal property conceptual relation relation constructs versions ontology specified equivalence relations subsumption relations logical rules removals additions classes properties course 
descriptive meta data date author intention update describes change scope description context update valid 
simplest form consist date change valid real world conform valid date temporal databases terminology date descriptive meta data called transaction date 
extensive descriptions scope various degrees formality possible 
designed ontology change specification mechanism take characteristics account 
issue discuss ontology updates possible discrepancy changes specification changes conceptualization 
seen ontology specification conceptualization 
actual specification concepts properties specific representation conceptualization concepts specified differently 
change specification necessarily coincide change conceptualization changes specification ontology definition ontological changes 
example changes definition concept meant change concept attaching slot fuel type class car 
refer ontological concept second version described extensively 
theoretically way possible concept change change specification 
usually means concept badly modelled 
important distinguish changes ontologies affect conceptualization changes don terms distinction conceptual change change way domain interpreted conceptualized results different ontological concepts different relations concepts explication change change way conceptualization specified changing conceptualization 
important notice possible determine automatically change conceptual change explication change 
requires insight conceptualization basically decision ontology engineer 
heuristics applied suggest effects changes 
discuss 
third somewhat different aspect update packaging changes way updates applied ontology 
important practical issue development ontology change management system 
distinguish different dimensions respect packaging change specification 
dimension granularity specification level single definition level file 
second dimension method specification 
methods transformation specification update specified list change operations add change delete replacement update specified replacing old version concept ontology new version implicit change specification mapping update specified mapping original ontology 
update regular sense explicit mapping ontology considered update viewpoint ontology 
gives possible change specifications 
example change specified individually mapping specific definition ontology definition ontology done file level defining transformation ontology 
notice packaging methods equivalent give information update relation 
clear mapping provides conceptual relation versions concepts specified transformation 
ontology identification web identification versions ontologies important 
ontologies describe consensual view part world function specific conceptualization 
unique stable identification 
human agent system conforms specific ontology able refer unambiguously 
discuss major issues ontology identification web outline identification mechanism 
identity ontologies question answered want identify versions ontology web identity ontology 
trivial 
example ask update natural language description changes identity ontology 
regards specific specification conceptualization essential characteristic ontology modification specification forms new version ontology 
case descriptions specify different concepts definition equal 
looking perspective regard ontology primarily conceptualization represented complete possible specification 
case argue update natural language description concept conceptual change just precise description conceptualization 
example explication change specification changed concept described remains 
philosophical debate take practical position 
assume ontology represented file web 
change results different character representation ontology constitutes revision 
case logical definitions changed responsibility author revision decide revision conceptual change forms new conceptualization identity just change representation conceptualization 
relate distinction conceptual changes explication changes means conceptual change ontology gets new identifier 
case explication changes ontology keeps identifier changes non logical changes changes natural language description 
summarized table 
note ontology engineer decide change conceptual change 
logical non logical conceptual new new explication new unchanged table 
change types effect identity ontology 
identification web second question relate web resources identity 
answer question look identification mechanisms web uris urns urls see identification entities domain entities domain ontology versions conceptualization revision specification 
things web called resources terminology 
definition uniform resource identifiers uri defined resource identity 
stated resource conceptual entity little platonic ideal 
definitions comprise idea ontology 
ontology regarded resource 
uri compact string characters identifying physical resource identify resources 
notice uri provide general identification mechanisms opposed uniform resource locators url bound location resource 
usually xml namespace mechanism identification webbased ontologies 
means ontology identified uri 
practice people tend url 
words couple identity ontology location ontology file web 
important step proposed method separate identity ontologies completely identity files web specify ontology 
words class ontology resources distinguished class file resources 
seen revision normally specified new file may constitute new ontology 
revision new file resource gets new file identifier automatically get new ontology identifier 
change constitute standardization body world wide web conceptual change new version gets new location get new identifier 
example location ontology change example rev example rev identifier example 
baseline identification method take account considerations propose identification method points distinction classes resources 
files 
ontologies 
lines backward compatible ontologies 
change file results new file identifier url file identification change conceptualization logical definition results new ontology identifier non logical explication change doesn separate uri ontology identification level numbering scheme minor numbers backward compatible modifications ontology uri minor number identifies specific ontology major numbers incompatible changes ontology uri major number identifies line backward compatible ontologies individual concepts relations identifier differs minor number assumed equivalent ontologies referred ontology uri major revision number minimal extra commitment lowest necessary minor revision number 
ideas points 
pointed section distinction ontology identity file identity advantage file changes location changes copy ontology isolated ontological changes 
separate uri possible encode information necessary usage prevents confusion url specify location 
distinction individual ontologies hand lines backward compatible ontologies hand provides simple way indicate general type compatibility likewise backward compatible field shoe 
distinction line idea levels generality discussed 
applications conclude directly formal analysis deduction steps version validly data sources major number equal lower minor number 
achieve maximal backward compatibility propose minor number newest revision specified data source minimal addition base version data source 
example suppose ontology concepts version added concept version added concept data source data relies concepts specify commitment version version available 
adopted idea software program library versioning described 
interesting point discussion possible specify real ontological commitment necessary extra commitment 
example mean data sources specifies relies exactly require different type identification 
point states individual concepts identifier differs minor number considered equivalent necessary enable backward compatibility 
default resources web different identifier considered different 
statement allows creation stand ontology revision concepts equal previous version 
support ontology versioning discussed theoretical aspects ontology versioning characteristics version relation identification ontologies 
describe system provides support versioning online ontologies 
main function system help user manage changes ontologies keep ontology versions interoperable possible 
comparing versions ontologies highlighting differences 
allows users specify conceptual relation different versions concepts 
function described extensively section 
able store ontologies provide transparent interface arbitrary versions ontologies 
achieve system maintains internal specification relation different variants ontologies aspects defined section keeps track meta data conceptual relations constructs ontologies transformations 
inspired concurrent versioning system cvs software development allow collaborative development source code 
implementation cvs web interface ongoing development system gradually shifting complete new implementation build solid storage system ontologies sesame ideas underlying versioning system depending specific ontology language 
implementation specific parts system assume rdf languages example mechanism detect changes 
remainder article daml oil rdf schema rdfs ontology languages 
languages widely considered basis ontology languages web 
ontology comparison feature described detail section system functions available fromhttp stud fh heilbronn de zeller cgi cgi demo available athttp sesame aidministrator nl available fromhttp www daml org language reading changes ontologies 
accept changes ontologies methods 
currently ontologies read providing url uploading system 
user specify provided ontology new considered update known ontology 
case user provide location ontology hierarchical structure system 
user guided short process asked supply meta data version far derived automatically date user characterize types changes see section decide identifier ontology 
accept changes reading transformations mapping ontologies updates individual definitions 
update methods provides system different information method described 
reason requires adaptation process user gives additional information 
identification 
uses namespace mechanism uris ontology identification separated location ontology file 
depending compatibility effects type change see table assigns new identifier keeps previous 
supports ways persistent unique identification web ontologies 
guarantee uniqueness persistency namespaces start org system located domain org 
second location identification ontologies necessarily coupled store ontologies arbitrary namespaces 
case ontology engineer responsible guaranteeing uniqueness 
ontologies arbitrary namespaces directly retrievable namespace accessed search function 
analyzing effects changes 
changes ontologies affect data applications unintended unexpected consequences ontology 
provides basic support analysis effects 
request highlight places ontology conceptually changed concepts properties 
example property haschild changed highlight definition class mother uses property haschild 
function exploit transitivity properties show propagation possible changes ontology 
expect extend system reasoner automatically verify changes specified conceptual relations versions 
example couple system fact exploit description logic semantics daml oil check consistency ontology look unexpected implied relations 
exporting changes 
main advantage storing conceptual relations versions concepts properties ability relations re interpretation data ontologies changed ontology 
facilitate export differences ontologies separate mapping ontologies adapters data sources gies 
mappings created basis conceptual information attached update relation 
mapping ontologies separate ontologies import definitions versions ontologies relates definitions conceptually 
provide partial mapping changes specified conceptually complicated changes splits concepts deletions 
definitions imported namespace mechanism 
mechanism allows ontologies refer definitions ontologies connecting uri identifier ontology symbolic name 
exported mapping ontologies represented standard constructs ontology langauge 
meta data ontology update specified set properties conceptual relations 
rdf schema daml oil meant re ify mapping statements 
purpose defined rdfs meta schema specifies classes properties attach meta information update mapping statements 
due space restrictions show 
method advantages 
specified re ified statements meta data interfere actual ontological knowledge case meta data specified characteristics classes properties 
second meta data data mappings agents systems understand meta data decide mappings applicable specific context 
possible export transformations versions ontology 
transformation complete specification change operations 
re execute changes update ontologies overlap versioned ontology exactly way original 
transformations facilitates data re interpretations small extent 
mapping ontology provides better re interpretation captures human knowledge relations 
comparing ontologies central features ability compare ontologies structural level 
comparison function inspired implementation quite different 
standard diff compares file version line level highlighting lines textually differ versions 
contrast compares version ontologies structural level showing definitions ontological concepts properties changed 
example graphical comparison versions daml oil ontology depicted 
types change comparison function distinguishes types change example changes daml oil example ontology available www daml org daml oil ex daml 
fig 

comparing ontologies non logical change natural language description 
daml oil changes rdfs label concept property comment inside definition 
example highlighted change class animal 
logical definition change 
change definition concept property affects formal semantics 
examples changes alterations subclassof domain range statements 
additions deletions local property restrictions class logical changes 
second third change class male property examples changes 
note logical changes affect semantics identifier change 
case concept property new identifier renaming 
addition definitions 
deletion definitions 
type change highlighted different color changed lines printed boldface 
changes detected completely automatically identifier change change distinguishable subsequent deletion addition simple definition 
case system uses location definition file heuristic determine identifier change 
deliberate choice show changes ones think interest ontology modeler 
choice explained para graphs mechanism detect classify changes 
experimental validation show list change types sufficient 
detecting changes main problems detection changes ontologies 
problem abstraction level changes detected 
abstraction necessary distinguish changes representation affect meaning don influence meaning 
possible represent ontological definition different ways 
example rdf schema ways define class rdfs class rdf id rdf description rdf id rdf type rdf resource org rdf schema class rdf description valid ways define class exactly meaning 
change representation change ontology 
detecting changes representation sufficient 
abstracting far problem considering logical meaning 
shown different sets ontological definitions yield set logical axioms 
logical meaning changed cases ontology definitely finding right level abstraction important 
second correct level abstraction change detection conceptual implication change clear 
difference conceptual changes explication changes described section possible derive conceptual consequence change completely basis visible change changes definitions concepts properties 
heuristics suggest conceptual consequences intention engineer determines actual conceptual relation versions concepts 
sections explain algorithm compare ontologies correct abstraction level users specify conceptual implication changes 
rules changes algorithm uses fact rdf data model underlies number popular ontology languages including rdf schema daml oil 
rdf data model basically consists triples form subject predicate object linked object triple subject 
syntaxes available rdf statement boil data model 
set related rdf statements represented graph nodes edges 
example consider daml oil definition class person 
daml class rdf id person rdfs subclassof rdf resource animal rdfs subclassof daml restriction daml onproperty rdf resource daml rdf resource person daml restriction rdfs subclassof daml class interpreted daml oil definition states person kind animal instances relation type person 
algorithm interested rdf interpretation 
look triples specified ignoring daml oil meaning statements 
interpreted rdf definition results set triples subject predicate object person rdf type daml class person rdfs subclassof animal person rdfs subclassof anon resource anon resource rdf type daml restriction anon resource daml onproperty anon resource daml person triple set depicted graph 
nodes resources function subject object statements arrows represent properties 
fig 

rdf graph daml class definition 
algorithm developed detect changes 
split document level xml document 
groups statements intended definition 
definitions parsed rdf triples results set small graphs 
graphs represent specific definition concept property graph identified identifier concept property represents 
locate graph new version corresponding graph previous version ontology 
sets graphs checked number rules 
rules specify required changes triples set graph specific type change described section 
rules format exist old exist new exist new change type specify set triples exists specific version set exists version way signal specific type change 
rule mechanism able specify types change identifier change 
example rule specify change property type looks follows exist old rdf type rdf property rdf type daml exist new rdf type rdf property exist new rdf type daml propertytype rules specific particular rdf ontology language case daml oil encode interpretation semantics language intended 
language rules necessary specify differences interpretation 
semantics language encoded rules 
example example looks changes values predicates change type property 
change related specific semantics daml oil 
notice mechanism relies materialization rdf type statements encoded ontology 
words closure rdf triples ontology language computed 
example rules example rule depend existence statement rdf type rdf property 
statement derived semantics rdfs subpropertyof statement informally spoken says property instance type instance supertypes application rules preceded materialization precise semantics rdf schema discussion 
superclass hierarchies ontology 
materialization entailment closure rules rdf model theory 
specifying conceptual implication changes comparison function allows user characterize conceptual implication changes 
types changes listed section user option label identical change explication change conceptual change drop list definition 
case user specify conceptual relation version concept 
example change definition characterized relation subpropertyof 
complicated changes deletions splits concepts replacements etcetera require additional characterizations specify new change interpreted 
developed 
discussion issues choices design system want discuss 
purposely provide support finding mappings arbitrary ontologies 
intention system provide users system manage versions ontologies maintain relations 
finding relations different task 
possible incorporate function version system interfacing ontology mapping tool 
specify way scope mapping described 
scope dimensions time 
done 
specification difficult assess conceptual relation concepts different versions 
assume relation valid successive versions know mapping allowed propagate mappings ontologies 
research necessary 
situation versioning support necessary collaborative development ontology 
think useful situation especially conceptual implications versions characterized individually users 
integrates conflict resolution update procedure 
users specify conceptual relation changes previous version specifying update necessary resolve conflict definitions 
version definition identifier conceptually related versions 
side versioning system collaborative ontology development gives evolutionary way ontology building 
person conceptualization conceptually linked conceptualizations www org tr rdf mt 
sense combination versions adaptations forms shared conceptualization domain 
want mention system construction 
section extensively depicted foreseen functionality 
clear descriptions realized 
basis functions implemented number advanced functions developed 
summary ontologies distributed dynamic context versioning support essential ingredient maintain interoperability 
analyzed versioning relation described aspects proposed identification mechanism depicted system helps users manage changes online ontologies 
described systems supports helps users compare ontologies problems challenges 
algorithm perform comparison rdf ontologies 
algorithm doesn operate representation ontology data model underlying representation 
grouping rdf triples definition retained necessary representational knowledge 
explained ontology engineers specify conceptual implication changes 
honors fact possible derive conceptual implications changes automatically requires insight conceptualization 
analysis versioning relation ontologies revealed dimensions 
system described dimensions maintained separately descriptive meta data conceptual relations constructs ontologies transformations ontologies 
multidimensional specification allows complete transformations ontology representations partial data re interpretations help interoperability 
conceptual differences exported stand example adapt data sources ontologies 
important step identification method proposed separate identity ontologies completely identity files contain specification ontology 
allows distinguish identity changing revisions explication changes 
distinguish backward compatible revisions incompatible revisions 
described versioning methodology system finished developed 
validation realistic setting needed 
believe things help manage changes ontologies essential requirement interoperability evolving ontologies web 

banerjee kim 
kim korth 
semantics implementation schema evolution object oriented databases 
sigmod record proc 
conf 
management data may 

bechhofer goble horrocks 
daml oil 
proceedings international semantic web working symposium swws stanford university california usa july aug 

bechhofer horrocks patel schneider tessaris 
proposal description logic interface 
lambrix borgida lenzerini ller patel schneider editors proceedings international workshop description logics dl pages link ping sweden july aug 

berliner 
cvs ii parallelizing software development 
usenix association editor proceedings winter usenix conference pages washington dc usa jan 
usenix 

berners lee fielding masinter 
rfc uniform resource identifiers uri generic syntax aug 
status draft standard 

berners lee hendler lassila 
semantic web 
scientific american may 

berners lee 
generic resources 
design issues 

bray hollander layman 
namespaces xml 
www org tr rec xml names jan 

brickley guha 
resource description framework rdf schema specification 
candidate recommendation world wide web consortium mar 

brown runge 
library interface versioning solaris linux 
proceedings th annual linux showcase conference atlanta georgia oct 

fensel horrocks van harmelen decker erdmann klein 
oil nutshell 
dieng corby editors knowledge engineering knowledge management methods models tools proceedings th international conference ekaw number lncs pages juan les pins france oct 
springer verlag 

fensel musen 
semantic web new brain humanity 
ieee intelligent systems 

heflin hendler 
dynamic ontologies web 
proceedings seventeenth national conference artificial intelligence aaai pages 
aaai mit press menlo park ca 

klein fensel 
ontology versioning semantic web 
proceedings international semantic web working symposium swws pages stanford university california usa july aug 

lassila swick 
resource description framework rdf model syntax specification 
recommendation world wide web consortium feb 
see www org tr rec rdf syntax 

mcguinness fikes rice wilder 
environment merging testing large ontologies 
cohn giunchiglia selman editors kr principles knowledge representation reasoning pages san francisco 
morgan kaufmann 

pinto ao pav martins 
evolving ontologies distributed dynamic settings 
proceedings eighth international conference principles knowledge representation reasoning kr toulouse france apr 

roddick 
survey schema versioning issues database systems 
information software technology 

visser jones bench capon shave 
analysis ontological mismatches heterogeneity versus interoperability 
aaai spring symposium ontological engineering stanford usa 
