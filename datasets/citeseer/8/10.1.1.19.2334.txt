petri nets business process modeling manjunath kamath school industrial engineering management oklahoma state university ok review fundamentals business process modeling correctness issues arise conceptual specification workflows support workflow management systems wfms 
wfms automate control coordination distributed tasks manage associated resource assignments prespecified organizational contexts 
increased efficiency automated control coordination business processes possible task control constructs model behaviors concurrency choice 
real danger introducing control flow anomalies behavioral inconsistencies deadlock livelock imperfect termination multiple task repetitions 
illustrate petri nets formalizing business process specifications analytical techniques support verification studies conclude issues merit research 
keywords business process modeling workflow management petri nets verification need re designing existing business processes improving process efficiencies coordinating technology distributed manpower material resources enforcing rapid process development design imperative adequately represent study automate business processes 
business processes market centered descriptions organization activities comprising material processes involving physical transformation assembly manufacture information processes involving semi fully automated tasks requiring information infrastructure support 
business process modeling bpm provides conceptual basis specification business procedures 
aids coordination integration distributed resources tasks individuals effective management critical sustaining organizational capabilities 
workflow management supports business process specification automated execution business procedures generation extension bpm efforts emphasizes increased role information systems come play today businesses 
workflow management involves phases modeling phase abstracts business procedures defines computer implementable workflow specifications ii execution phase executes instances workflows meet business requirements phases managed coordinated workflow management system wfms 
essentially wfms integrates automates execution steps comprise business process simultaneously manages resource information people assignments 
highlights major functional areas wfms provides support workflow design definition context workflow instantiation control interaction users applications 
focuses modeling analysis issues involved establishing logical syntactical correctness business process specifications implemented 
issues related post implementation correctness data consistency database integrity transactional guarantees exception failure handling required run time control scope 
workflow design definition process definition modeling analysis tools process changes workflow instantiation control workflow enactment service build time run time interaction users application tools human resources applications tools workflow management system model complete specification business processes includes control flow partial total ordering specifying sequence various tasks ii data flow information requirements resource people machines allocations execution various tasks 
required identifying input output requirements task put skeletal process conceptually descriptively complete 
research developing process metamodels representational language express workflow models amenable automation reader referred excellent review 
additionally workflow management coalition wfmc working standardizing workflow specification languages enable interoperability different vendors evolved process modeling language syntax supported wfmss discussed section 
stated simply ability represent behaviors concurrency choice increases chances defining logically incorrect models control flow errors execution result deadlock livelock focus highlight versatility petri nets technique formalizing business process models analyze verification issues support performance evaluation studies 
process modeling essentials purpose process modeling produce abstraction process serves basis detailed definition study possible reengineering eliminate non value added activities 
process model allow clear transparent understanding activities undertaken dependencies activities roles people machines information necessary process 
activity centered modeling methodology defining process models process viewed sequence inter related tasks transfer control determined logical operations reader referred excellent review modeling methodologies 
task concurrent control sequential control task choice xor task task task task xor asynchronous completion process modeling example showing control flow remainder discussion consider business process model collection elements element task logical operand serves route flow control parallel sequential tasks generic modeling concepts prescribed wfmc 
task analysis issues business process modeling ease flexibility graphical modeling languages brings possibility introducing control flow anomalies process specifications 
table illustrates major control flow verification issues checking deadlock livelock multiple repetition presents elaborate presentation issues classified simple complex 
additionally improving process efficiency performance evaluation requires definite framework formulate questions study aspects processes data resource allocations task definitions 
table verification issues business process specifications verification issues example deadlock control flow required merging paths missing 
multiple repetition control flow arrives multiple sources necessary 
livelock control flow fails exit set previously executed tasks 
xor xor xor incremental approach formalizing analyzing business process models suggested follows control flow correctness create control flow model specifying just tasks ordering required overhead resource data requirements petri nets emerged popular technique abstractions 
models answer questions initiation problem determine sequence task executions lead execution particular task shown np complete ii termination problem determine control flow specification lead terminal state shown require exponential storage requirements 
data flow correctness extend control flow model operational specifics resource requirements allocations specifying data flow 
questions posed model task need execute tasks executed fulfil input requirements resource data chosen task ii particular task disabled tasks affected 
iii resource data element disabled process affected state just 
appear promising analytically sound technique visual appeal address questions relatively new concept research forthcoming 
control flow correctness ensures process design correct independent implemented monitored remainder discussion explore petri nets establishing 
petri net formalizations business process models intuitively process understood collection events conditions enable events occur conditions satisfied completion events 
petri net ideally mirrors intuition explicitly separates conditions events involved process models state changes involved simulated movement tokens 
petri net directed bi partite graph kinds nodes places represented circles tokens black dots reside transitions represented bars fired move tokens input places output places 
places model conditions required enable events modeled transitions readers doubt note explicit delineation conditions events pertains activity methodology discussed section 
depicts petri net representation process described table illustrates petri net mappings basic routing constructs required process modeling 
start task concurrent control sequential control task task task choice task task asynchronous completion petri net representation example control flow petri nets offer advantage graphical appeal coupled rigorous formalism tremendous modeling systems processes exhibit concurrency determinism 
petri nets especially attractive formalizing analyzing business processes reasons clear unambiguous description process logic ii intuitive ease feel self documenting graphical formalism retains complete conceptual clarity iii extensive analysis capabilities vastly extend power usefulness structured process description languages idef 
control flow issues highlighted section readily expressed petri net theoretic terms reachability deadlock liveness 
petri nets allow study structural properties pertaining static aspects process definition ii behavioral properties pertaining dynamic aspects process observed execution useful deriving summary measures cycle time performance evaluation studies 
current research approaches establishing control flow correctness approaches ensuring correct models build correctly ii check completely 
relies strict grammatical rules govern composition various elements model basis model theoretic event algebras designed may suitable practical implementation industry 
contrary appealing allowing user tremendous flexibility expressing process requirements offering interesting analysis challenges modeler 
considerations prompted graph theoretic techniques petri nets verification studies inhibit modeler analyst 
standard approach establishing control flow correctness petri net formalizations business process models establish soundness property simple control property initiation problem termination problem wrapped refer section 
stated simply idea put token place labeled start see execution petri net produce token place labeled leaving residual tokens net 
majority business processes analyzed acyclic loop free free choice nets special class petri nets enjoys added advantage soundness verified polynomial time 
additionally establishing soundness free choice net implies net free deadlock live dead tasks 
hurdles remain modeling exceptions precedence partially destroys free equivalent petri net mapping 
modeling iteration necessitates presence loops control flow model problem satisfactorily addressed 
task table petri net mappings basic routing constructs logical operand graphical construct petri net mapping join point process model single thread control splits threads executed simultaneously 
join point process model different threads control merge asynchronously 
xor split point process model thread control selectively chooses possible paths 
xor join point process model thread control different paths converges 
iteration feedback routing section process model may require repetitive execution activities certain conditions satisfied 
summary activity activity activity activity activity activity xor xor activity activity xor petri nets emerged medium choice analyzing business process models provide useful diagnostic feedback support process re design effective resource organization function management 
self contained overview opportunities available emerging field workflow management correctness issues involved ideas pursued author dissertation 
focus illustrate petri nets bridge gap process modeling languages process implementation workflow automation techniques logically correct process specifications created effectively implemented 
xor activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity activity issues merit research extend soundness results established acyclic free choice constructions business process models involving iteration potential non free choice constructions ii establish results verifying data flow correctness find performance evaluation studies real time transactional issues 
interesting question supersede efforts process definition really optimal focus ideas initiated ground covered 
acknowledgments research supported part nsf dmi scalable enterprise systems initiative 
dr dalal dr william amit support comments 
aalst application petri nets workflow management 
journal circuits systems computers 
aalst workflow verification finding control flow errors petri net techniques 
aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag 
basu formal approach workflow analysis 
information systems research 
chen case driven object oriented design methodology design multi level workflow schemas 
phd thesis department computer science ill inst 
tech chicago il 
cichocki helal rusinkiewicz woelk workflow process automation concepts technology 
kluwer academic publishers ma 
curtis kellner process modeling 
comm 
acm 
desel esparza free choice petri nets 
cambridge university press 
fan weinstein specifying reasoning workflows path constraints 
proceedings th international computer science conference icsc hongkong china volume lecture notes computer science 
springer dec 
georgakopoulos hornick sheth overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 
hofacker approaches business process design 
computers operations research 
hofstede orlowska verification problems conceptual workflow specifications 
data knowledge engineering 
hollingsworth workflow model 
technical report wfmc tc workflow management coalition www wfmc org standards docs htm 
kamath improving correctness failure handling workflow management systems 
phd thesis department computer science university massachusetts amherst ma 
kamath ramamritham correctness issues workflow management 
distributed systems engineering journal december 
special issue workflow systems 
lei singh comparison workflow metamodels 
proceedings er workshop behavioral modeling design transformation issues opportunities conceptual modeling los angeles ca november 
cs byu edu er workshop ls html 
modelling business processes workflow systems evaluation alternative approaches 
int 
information management 
murata petri nets properties analysis applications 
proceedings ieee 
orlowska correctness issues conceptual modeling workflows 
proceedings th european conference information systems cork ireland june 
www edu au praxis publications index html 
orlowska analyzing process models graph reduction techniques 
information systems 
wright petri net modeling workflow systems overview 
european journal operational research 
sheth aalst arpinar processes driving networked economy 
ieee concurrency 
singh formal semantics workflow computations 
technical report tr department computer science north carolina state university january 
simple control property business process models 
proceedings xv conference computer society chile oct nov 
ftp ing puc cl doc techreports 
control multi threaded information systems 
unpublished working report computer science department catholic university chile santiago chile 
performance modeling automated manufacturing systems 
prentice hall 
wfmc 
terminology glossary 
technical report wfmc tc workflow management coalition www wfmc org standards docs htm 
wfmc group 
interface process definition interchange process model 
technical report wfmc tc workflow management coalition www wfmc org standards docs htm 
