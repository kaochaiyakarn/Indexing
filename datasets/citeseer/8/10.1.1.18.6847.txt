fundamental principles deception genetic search darrell whitley department computer science colorado state university fort collins colorado whitley cs colostate edu presents theorems concerning nature deception central role deception plays function optimization genetic algorithms 
simple proof offered shows problems pose challenging optimization tasks problems involve degree deception result conflicting arm bandit competitions hyperplanes 
concept deceptive attractor introduced shown general deceptive optimum deceptive functions constructed date 
introduced concepts fully deceptive problems strict consistently deceptive problems 
proof showing deceptive attractors complementary bit pattern binary representation global optimum function fully deceptive consistently deceptive 
empirical results demonstrate different methods dealing deception poor linkage genetic search 
keywords deception tagged bits genitor uniform crossover 
background earlier goldberg introduced concept deception order better understand kinds situations create difficulty genetic algorithm performing function optimization task 
fundamental theorem genetic algorithms schema theory attempts explain ability genetic algorithms search complex problem spaces effectively showing genetic algorithms change sampling rates hyperplanes dimensional hypercube corresponding binary encoding solution space holland goldberg 
low level building blocks corresponding large general hyperplanes space recombined drive search specific regions hyperspace display average fitness 
problem deceptive certain hyperplanes guide search solution genetic building block globally competitive goldberg 
earlier area concentrated construction difficult deceptive problems goldberg goldberg korb deb tanese 
expanded consider relationship deception hyperplane variance hyperplane dominance genetic algorithms dynamical systems grefenstette baker liepins vose whitley goldberg rudnick 
hyperplanes represented bit combinations known schemata 
consider order problem involving search space encoded bits 
simple space represented cube labeled adjacent corners cube differ single bit 
don care symbol schema refer face cube 
schema order defines partition search space occupied strings single bit position indicated 
value hyperplane case simple plane represented denoted calculated averaging fitness value strings match template average value strings form corresponding face cube 
order hyperplane refers number bits specified schema representing hyperplane 
order relates information number strings contained hyperplane represented hyperplane order contains strings search space 
schema order corresponding hyperplane contains schema matches strings search space 
case fully deceptive order function hyperplane information represented order order schemata search space leads search away global optimum directs search refer deceptive attractor 
assuming bits represent global optimum deceptive attractor full order deception implies relationships hold lower order schemata gives fitness string fitness schema calculated averaging strings contained hyperplane represented schema 
words lower order hyperplane information associated schemata presentation subset bits leads search away global optimum 
fully deceptive order problem satisfies inequalities defined goldberg korb deb bit strings values 
deceptive function part motivation building deceptive problems better understand kinds conditions inhibit genetic search finding globally optimal near optimal solution 
problems ability seriously mislead genetic search labeled ga hard problems 
shown fully deceptive subproblems coupled poor linkage result ga hard problems 
definitions attempting reason nature deception necessary distinguish different kinds deceptive situations terms precision 
attempted keep definitions offered consistent possible existing literature 
need refer concepts relating genetic algorithms general 
particular wish discuss hyperplane competitions certain competitions particularly important 
primary hyperplane competition order involves complete set primary competitors primary competitors hyperplane competition order set hyperplanes having schemata bit values locations 
example competitors primary hyperplane competition order 
global winner primary hyperplane competition hyperplane highest fitness value set competitors fitness value hyperplane average fitness strings contained hyperplane 
necessarily imply hyperplane correctly leads bits consistent globally optimal solution 
basic concepts useful discussing deception 
hyperplane contains hyperplane lower order hyperplane higher order hyperplane exactly bit values exactly locations additional bit values positions occupied don care symbols example contains note contains strings contains strings 
leads specific relationship hyperplane competitions important deception 
primary hyperplane competitions order order relevant collectively hyperplane competitors order contain hyperplane competitors order primary hyperplane competition involves set hyperplanes collectively contains primary hyperplane competition 
hyperplane competition order relevant hyperplanes order represented schemata bit values proper subset locations bits occur order hyperplane competition 
deception implies global winner hyperplane competition order bit pattern different bit pattern global winner relevant lower order hyperplane competition 
words deception implies lower order competitions global winners bit values global winner relevant hyperplane competition order deceptive problem problem specific order involves deception relevant lower order hyperplane competitions 
deception implies exists relevant lower order hyperplane competitions potentially guide genetic search away global winner hyperplane competition order imply problem fully deceptive sufficient deception genetic algorithm 
usage appears consistent goldberg discussion minimal deceptive problem involves deception fully deceptive 
usage fairly broad problems may involve degree deception general expect lower level hyperplane competitions consistent relevant higher order hyperplane competitions 
shown section particular definition separates optimization tasks extremely interesting classes deceptive theoretically easy deceptive 
fully deceptive problem subproblem order deceptive relevant lower order hyperplanes lead deceptive attractor 
deceptive attractor hyperplane order true global winner supported relevant lower level hyperplane competitions 
fully deceptive problem shown deceptive attractor hyperplane represented schema bit pattern complement global winner hyperplane competition order global winner hyperplane competition order complement potential deceptive attractor 
proof appears 
usage term fully deceptive appears consistent goldberg korb deb 
turns useful distinguish different degrees deception criteria order describing defining deceptive attractor 
consistently deceptive problem subproblem order relevant lower order hyperplanes lead global winner primary hyperplane competition order interested relevant hyperplanes necessarily lead deceptive attractor order hyperplanes shown guide search global winner deceptive attractor hyperplane competition order 
shown choosing deceptive attractor complement global winner hyperplane competition order necessary condition existence consistently deceptive problem order hyperplanes involved 
note fully deceptive problem consistently deceptive problem consistently deceptive problem necessarily fully deceptive problem 
term deceptive function refer consistently deceptive problem number bits encode solution space corresponds order deception 
deceptive function consistently deceptive may fully deceptive 
consistently deceptive order problem bit encoding constitutes deceptive function 
deceptive building block order refers situation hyperplane higher fitness value primary competitors relevant lower order hyperplane competitions schemata composed subsets bits locations misleading 
deceptive building block similar concept deceptive function deceptive building block may correspond particular hyperplane competition part larger function optimization problem deceptive building block sense subproblem larger function 
concept building block genetic algorithms refer schemata low order characterized short defining length average fitness 
building blocks thought important process genetic search 
concentrating hyperplane competitions involving building blocks represented sample populations relatively stable recombination genetic algorithm able generate partial solutions recombination construct higher level schemata complete strings 
empirical results show building blocks available ability genetic algorithm produce global solutions impaired 
deceptive building block sense anti building block represents hyperplane competition mislead genetic algorithm 
deceptive building block necessarily short defining length fact deceptive building block long defining length kind situation deception problematic 
deceptive building block involve competitions hyperplanes average fitness 
deceptive hyperplane hyperplane incorrectly leads search away specific higher order hyperplane fact superior competitors 
follows lower order hyperplanes create deceptive building block deceptive hyperplanes respect particular building block 
notion deceptive hyperplane defined respect particular deceptive building block bits global winner hyperplane competition deceptive building block may bits appear hyperplane competition string corresponds global solution problem 
example order fully deceptive function order hyperplanes deceptive hyperplanes respect order building block constitutes global solution order hyperplanes deceptive respect order order competitions consistently lead deceptive attractor 
define deceptive hyperplanes respect global solution restrictive ignore forces drive genetic search 
definition prevent referring hyperplane deceptive respect global solution 
note convention convention 
bit binary mapping interpreted indicating agreement bits optimal solution global winner hyperplane competition just single binary string maps particular value 
interpretation generalizes representation arguments concerning specific set strings hold arbitrary strings 
convention operationalized 
liepins vose show simple translation function exists remap entire binary space making possible reassign global optimum arbitrary bit string 
goldberg notes function phi translates optimum position translates strings correct corresponding positions hamming space string binary encoding complement location current optimum 
function phi bitwise exclusive bitwise addition modulo 
challenging problems deceptive stated earlier problems may involve deception general expect lower level hyperplane competitions consistent relevant higher order hyperplane competitions 
theorem supports claim challenging optimization tasks problems involving degree deception 
theorem fitness function problem representing optimization task binary encoding length deception occurs hyperplanes associated particular binary encoding winners order hyperplanes correctly determined global optimum function determined string contained intersection order hyperplane competition winners 
proof contradiction assume deception occur hyperplane fitness function determine correct winners order hyperplanes 
intersection order schemata identify exactly string candidate global optimum 
candidate global optimum order hyperplanes deceptive generating contradiction 
qed theorem idealistic assumptions operationalized 
deception occurs solve problem fashion 
bit location directly solve arm bandit problem involving corresponding schemata 
alternatively competition solved statistical methods 
statistical methods potentially provides means dealing issue noisy sampling problem determining appropriate hyperplane competition winners 
deception methods determine desired level reliability probable value bits belong corresponding position binary string representing global solution problem 
certain difficulties course encountered competing order hyperplanes equal near equal value 
note deception order hyperplanes lead global solution imply deception 
solve order hyperplanes solution narrow search space 
deception matter sequence order hyperplanes solved 
means break ties resolve ambiguous competitions winners competing order hyperplanes chosen partition reduced search space 
may possible operationalize idea possible globally optimal solution test problems appeared genetic algorithm literature solving order hyperplanes statistical methods das whitley 
fundamental theory deception trivial 
researchers genetic algorithms long known hyperplanes numerous levels play important role genetic search 
knowledge directly related deception implies holland analogy armed armed multi armed bandit problem 
armed bandit analogy order hyperplanes goes follows 
assume slot machine arms 
arm different payoff associated mean variance 
problem determine arm higher expected payoff 
sample arms time minimizing expected loss 
allocate exponentially trials observed best 
actual practice may involve initial sampling determine observed best 
dealing order hyperplane competition example represent arms 
dealing hyperplanes greater order arm competition 
holland able show genetic algorithm potentially allocate trials hyperplanes near optimal fashion allocating exponentially trials observed best numerous hyperplane competitions 
fact happens simultaneously different hyperplane competitions different orders referred implicit parallelism 
deception armed bandit analogy directly relate issues raised grefenstette baker concerning role implicit parallelism genetic search 
point genetic algorithm solve armed armed bandit competitions hyperplanes genetic algorithm perform uniform sampling hyperplanes population initial generation grefenstette baker 
example suggest assignment fitness values optimization function ffl ffl uniform sample strings indicate genetic search proceeds schema dominates hyperplane competitors come represented greater proportion strings population population longer uniformly sampling universe strings 
grefenstette baker suggest represents flaw armed bandit analogy competition solved correctly 
point genetic algorithm implicitly solving possible hyperplane competitions correctly fact show implicit parallelism act ubiquitous fashion 
john holland personal communication intended implicit parallelism imply hyperplane competitions simultaneously solved genetic search competitions occurring simultaneously 
having established challenging problems deceptive problems additional cause cautious characterizing nature implicit parallelism 
grefenstette baker point limitations implicit parallelism serious implications 
see true note grefenstette baker problem deceptive problem 
hyperplane deceptive respect hyperplane competition involving 
fully deceptive problem subproblem furthermore problem ga hard grefenstette baker correctly point genetic algorithm quickly converge strings reside hyperplane represented das whitley 
occurrence deceptive problem produce primary hyperplane competitions analogous different arm bandit problems solutions involve different bit patterns 
genetic algorithm effectively consistently allocates exponentially reproductive trials true global winner hyperplane competitions schema receiving exponentially trials ubiquitous population genetic algorithm fail correctly solve alternate hyperplane competition 
genetic algorithm continue allocate exponentially trials observed best assuming observed best fact global winner hyperplane competitions global winners incompatible ubiquitous population 
conjecture assuming sampling noise corrupt hyperplane evaluations armed armed bandit analogy fails apply particular hyperplane competition deception involved genetic algorithm correctly solve competitions involve set hyperplane competitors order relevant hyperplane competition order global winner competition order deceptive respect global winner order competition 
conjecture motivated observations 
deception occurs function optimization task implicit parallelism opportunity solve hyperplane competitions correctly arm bandit analogy potentially holds 
hand deception create conflicting hyperplane competitions global winners conflicting bit patterns 
may possible conflicting winners represented population way conflicting patterns coexist 
arrangement appear inconsistent critical part armed bandit analogy indicates observed best allocated exponential number reproductive trials 
solving hyperplane competitions correctly reasonable deception exists shown problems theoretically solved genetic algorithm 
disturbing deception global optimization non trivial works undermine implicit parallelism exactly hyperplane competitions appear critical 
impact deception critical hyperplane competitions strikes heart theoretical foundations genetic algorithm 
empirical evidence suggests results conflicting competitions go way 
higher order schema representing global winner fully deceptive building block long defining length lower order hyperplanes typically win armed bandit competitions higher order hyperplane 
hand higher order schema representing global winner fully deceptive building block tight linkage represented chosen population size global winner higher order hyperplane competition typically wins hyperplane competition deceptive lower order hyperplanes 
observations lead limited view implicit parallelism 
hyperplane competitions solved simultaneously search directed global solution need imply hyperplane competitions correctly processed genetic algorithm 
expect deception need sufficient mislead genetic algorithm majority hyperplane competitions resolved lead global solutions 
better understanding implicit parallelism needed theoretically anchor genetic algorithms 
constructing fully deceptive function turn attention fully deceptive consistently deceptive functions 
fully deceptive functions constructed walsh transforms goldberg 
arbitrary fully deceptive functions order greater constructed fashion 
liepins vose independently developed similar algorithm 
sort binary strings terms relative distance hamming space 
strings sorted fashion respect distance optimal solution complement distribution strings subgroups containing specific numbers binomially distributed 
example order problem sorted sequence followed followed 
note exists sequence having number bits arranged sequence 
ordering chosen number strings string global optimum string deceptive attractor complement string 
assign string positive base value simplest case zero 
string deceptive function assigns values follows gamma positive constant 
optimum assigned value fully deceptive order function constructed algorithm just outlined 
case base value constant 
problem lower order hyperplane information leads search away 
deceptive function note relevant schema order composed exclusively superior primary hyperplane competitors 
deceptive function artificial deceptive functions constructed date deceptive attractor local optimum hamming space superior point adjacent hamming space 
reason problems deceptive function deceptive function fully deceptive clear hamming space deceptive optima attracting basin covers entire space single spike represents true optimum 
shown deceptive attractors fully deceptive functions need local optima hamming space 
deceptive attractor theorem theorem indicates function mapping set strings set values resulting assignment fully deceptive particular order indicated deceptive attractor complement global optimum 
shown imply complement high fitness value competitive global optimum 
theorem pertains deceptive functions deceptive building blocks 
term attractor suggests dynamical system characterized stable attractor 
term deceptive attractor loosely evidence suggests problem fully deceptive deceptive attractor complement global optimum recombination disrupts order information identifies global optimum deceptive attractor stable point populations sufficiently sample relevant deceptive hyperplanes orders specifically define idealized genetic algorithm search dominated deceptive hyperplanes order search fully deceptive problem order deceptive attractor stable point fully deceptive function order hyperplane competitions lead specific example see whitley 
theorems follows reminder rely notions dynamics systems observations relationship binary strings hyperplanes dimensional hypercube 
definitions static relationships 
genetic algorithm modeled dynamical systems theorems may longer hold offer point departure 
theorem order function building block order consistently deceptive relevant lower order hyperplanes deceptive attractor complement string represents global optimum deceptive function case deceptive building block deceptive attractor complement schema representing global winner relevant primary hyperplane competition order superior competitors 
proof contradiction assume deceptive attractor order exists shares bit value common global winner relevant hyperplane competition order choose bit value shared global winner deceptive attractor 
represent bit agrees global winner represent bit agrees deceptive attractor 
chosen bits value 
problem consistently deceptive specific order indicated impossible hyperplanes represented schemata bit hyperplanes fitness 
represent complement bits fact bit 
deceptive necessary implies problem deceptive hyperplanes hyperplane competition won order schema containing bit proposed deceptive problem deceptive attractor containing bit consistently deceptive hyperplanes particular order indicated 
qed expressed simply relevant order hyperplane competitions agree global winner order complement 
fully consistently deceptive hyperplane function deceptive attractor complement global winner relevant hyperplane competition order assumes static view hyperplane relations 
dynamical point view taken situation complex certain observation 
theorem stronger implications fully deceptive functions lower order hyperplanes lead point possible stronger claims status deceptive attractor true attractor dynamical system 
note exist attractors problem fully consistently deceptive 
attractors lower order hyperplanes dominate search due sampling bias preservation higher order schemata fact global solution competing attractor 
fully consistently deceptive problem order hyperplanes direct search deceptive attractor impact relevant hyperplane competitions 
leads corollary defined static perspective 
corollary deceptive attractor order complement global winner relevant hyperplane competition order problem fully consistently deceptive 
follows proof deceptive attractor theorem proof considers hyperplanes 
represent set hyperplanes single bit specified fact deceptive hyperplane problem fully deceptive consistently deceptive 
deceptive attractor local optima argument shows deceptive attractor complement global winner relevant hyperplane competition order limiting consideration deceptive functions moment follow complement global winner hyperplane competition order necessarily high fitness value 
hyperplanes fully deceptive function lead deceptive attractor local optimum hamming space 
assertion applies deceptive building blocks construct problem concatenating deceptive functions deceptive attractor local optimum 
consider example deceptive function function constructed easy understand 
fully deceptive function deceptive attractor fitness value global optimum 
deceptive attractor clearly local optimum hamming space weaker strings adjacent hamming space 
deceptive attractor order hidden strong strings located adjacent hamming space problem fully deceptive 
turns factor critical consistently deceptive problems 
case example shows deceptive attractor need strong competitive string strong strings adjacent hamming space hide weakness 
observations fitness deceptive attractor relative strings relevant schemata near hamming space 
theorem deceptive attractor order binary encoded problem maintain full deception order weaker string schema differs deceptive attractor exactly bits 
proof consider fully deceptive problem order binary string schema bit values representing deceptive attractor value associated deceptive attractor 
string schema differs bits bits higher value string differs deceptive attractor bits 
shown greater greater value string differs exactly bits deceptive attractor 
strings schemata relevant 
unique strings schemata differ bit deceptive attractor string schema words single bit 
assign names strings represents string schema fitness value greater equal 
implies hyperplane competition strings schemata involving schemata order 
assume share bit call share different bit common call 
string compete consider schemata order replaces bit don care operator 
remainder proof involves simple algebra 
deceptive attractor theorem definition full deception implies implies gamma gamma non negative integer 
implies qed obvious difficulty maintaining full deception order occurs order hyperplanes involved 
proof concrete consider order deceptive function 
uniquely defined strings differ bit deceptive attractor string 
pick string having higher fitness value illustration purposes assume implies relevant hyperplane competition schemata order 
full deception implies implies reader remaining math 
corollary fully deceptive function deceptive attractor reside local optimum hamming space local optimum exist string adjacent deceptive attractor hamming space 
words deceptive attractor string differs deceptive attractor bit local optimum hamming space 
follows theorem 
deceptive attractor higher fitness value string differs deceptive attractor exactly bits deceptive attractor strings differ deceptive attractor single bit surrounded points hamming space known weaker deceptive attractor 
implies deceptive attractor local optimum strings differs deceptive attractor single bit local optimum hamming space 
look consistently deceptive problem fully deceptive 
requirements full deception necessary deceptive attractor low fitness value order hyperplanes versus example deception breaks necessarily expect important genetic search 
relax requirements deception order build problems consistently deceptive fully deceptive particular interest problems consistently deceptive lower order hyperplanes lead deceptive attractor lead global winner hyperplane competition order set values deceptive function value string changed problem longer fully deceptive hyperplane information leads deceptive attractor 
cases sense talk order deception fully deceptive order deceptive problem decomposed order deceptive problem 
fact order hyperplanes continue deceptive respect correct order building block 
hyperplanes continue higher fitness value competitors continue support deception order level 
function fully deceptive lower order hyperplanes lead deceptive attractor problem misleading hyperplanes 
hyperplane competitions hyperplane win directs search correct building block 
reduced degree deception shades gray fully deceptive order problems fully deceptive order problems 
kind situation motivated distinction fully deceptive problems consistently deceptive problems 
point empirical evidence regarding difficulty consistently deceptive problems 
deceptive attractor remapping strategies practical significance 
knowing deceptive attractor complement global winner useful deception occurring known predictable location parameter setting problem significantly change hamming distance global winner deceptive attractor hyperplane competition reduce degree deception currently exists 
small changes may reduce level deception example deceptive function reversing mapping reduce level deception fact strengthens deception 
remapping strings global winner moved closer hamming space deceptive attractor strings help maintain deception cases reduce level deception 
possible remapping create deception parts search space possibility happening imply concerning likelihood event 
problem recoding remapping strategies knowing exact location deception general practical involves finding binary mask indicating locations particular case deception occurring finding binary mask involves search space large function optimization space 
unclear single mask deception suffice necessary know distinct cases deception exist located 
difficulty bits compose deceptive building block problem precludes simple fixes deception inverting final solution inverting strings search evaluating complements 
appear bad news simple remapping strategies simply remap arbitrary portions encodings hope manage remap part deception 
deception linkage problems deception part problem 
factor works problem ga hard involves linkage bits deceptive building block 
deception serious problem occurs random unknown combination bits encoding 
having poor linkage implies deceptive bits highly separated encoding 
hyperplanes represented bits distributed long encoding inadequately sampled genetic algorithm higher rate disruption recombination 
put simply deceptive bits close strings sample favorable combination bits pass appropriate schemata offspring intact crossover disrupts critical schemata genetic algorithm misguided 
consider deception occurs building block bits 
expect correct combination occur time initial random population critical bits tend passed single block spread population deception occurs lower order hyperplanes significant impact search 
bits highly separated encoding inherited intact offspring due disruptive effects crossover lower level hyperplane information critical 
happens genetic algorithm converge incorrect solution 
consider deceptive function 
assume bits deceptive function highly separated binary encoding deceptive functions 
competition evaluation evaluation selective pressure overcome disruptive effects recombination 
competition falls back level relevant lower order hyperplanes wins deception built problem 
build suitable test function difficult genetic algorithm solve goldberg korb deb defined bit function copies fully deceptive bit function 
problem difficult ugly bits arranged bits subfunctions uniformly maximally distributed encoding 
bit subfunction bits located positions 
goldberg show standard genetic algorithm consistently converges incorrect solution problem subfunction converging 
consistent notion hyperplane sampling biases known exist genetic algorithms schemata long defining lengths 
description experiments experiments population sizes indicated 
experiments population sizes total evaluations experiments population sizes total evaluations 
results necessarily represent best efforts solving problems intended comparative results 
rank selection scheme linear selective bias 
test problems include ugly versions fully deceptive order problems deceptive function 
random version problem defined goldberg korb deb bits subproblems distributed randomly subproblems highly distributed string bits subproblems bits closer encoding 
test problem composed fully deceptive subproblems results reported terms number subproblems correctly solved 
additional tests carried comparing uniform crossover point crossover ugly fully deceptive order problem 
constructed bit function composed bit fully deceptive subfunctions specifically deceptive function subfunctions distributed positions 
tests done random arrangement bits problem 
reported results independent runs genetic algorithm 
genetic algorithm genitor keeps copies best strings far 
genitor produces selective pressure case standard genetic algorithm linear selective bias goldberg deb 
additional selective pressure conservation previous best strings allows solve deceptive subproblems 
genitor point crossover point crossover operator reduced surrogate operator 
mutation experiments 
experiments provide baseline comparative purposes represent operation algorithm normal mode operation 
results operators table 
genitor uniform crossover uniform crossover involves choosing bit independently parents producing random assortment bits parents 
potential advantage location bits encoding irrelevant ugly version problems exactly random version problem 
bias schemata long defining lengths 
hand advantages tight linkage functionally related bits close encoding tight linkage lost longer inherited block 
expect uniform crossover competitive problems ugly deceptive problem bias schemata long defining length 
considered carefully clear uniform crossover breaks apart higher level schemata recombination shifts burden search order order schemata 
problem deceptive action increase probability deceptive hyperplanes able mislead genetic algorithm 
suggests syswerda tests uniform crossover sufficiently deceptive challenging tests problems das whitley 
tagged bits random orderings difference results ugly random versions fully deceptive order problem clearly illustrates location bits composing subproblems problem encoding important 
implies tags randomize location specific bits encodings effective improving performance genetic algorithm 
random version test function fixed random ordering strings 
tags string individual ordering 
normally interpretation binary string dependent 
tag bits example eighth bit binary strings denoted know eighth bit regardless location 
binary example represented lisp notation kind scheme course implemented number ways point bits allowed move different linkages developed different strings 
key issues implementation initial population bit strings sequence bit tags randomly generated 
means string started randomly generated set tags 
order recombination occur parent strings align sequence bits 
accomplish parent randomly chosen template parent rearranged sequence bits match template 
recombination applied point crossover 
note offspring inherits sequence bit tags parent providing template 
search proceeds distribution bit tag sequences remain random 
goldberg bridges considered tagged bits main difference previous genetic search began random distribution different bit tag sequences goldberg studies part analytical assumed population started strings having sequence inversion applied strings effort try improve linkage 
case uniform crossover tagged bit representation means difference ugly random versions problem 
tagged bit scheme consistently produced best results 
distributed genetic algorithm distributed genetic algorithm employed subpopulations 
subpopulation contained strings allowed evaluations restrictions total amount comparable runs single population total evaluations 
ugly fully deceptive order problem solved subproblems correctly 
tests allowed subpopulation strings total recombinations additional recombinations solved subproblems 
success distributed algorithm lies fact subpopulation solves different subset deceptive subproblems migration strings subpopulations allows different solutions recombined solving subproblems 
note distributed algorithm mutation operator serial algorithm account part results 
related experiments subpopulations mutation 
total population size number recombinations held constant various experiments single population composed strings allowed recombinations run subpopulations subpopulation members allocated recombinations 
runs mutation showed trend distributed population better results ugly deceptive problems starkweather whitley mathias 
summary experimental results table summarizes experimental results 
test problems ugly order fully deceptive problem ugly random version problem random ugly order fully deceptive problem ugly 
point versions direct application genitor tagged uniform versions self explanatory 
parallel version subpopulations total population evaluations subpopulation total evaluations 
problem approach pop size solved evals ugly point ugly uniform random point ugly tagged ugly uniform ugly point random point ugly parallel ugly tagged ugly uniform ugly point ugly tagged table summary results done statistical tests data hypotheses suggested results 
tagged bits appears help initial linkage represents worse case situation 
second uniform crossover outperform point crossover domain may inferior 
third distributed algorithm produces considerable improvement performance 
careful generalize results highly artificial problems may typical optimization problems 
directions theoretical results empirical tests offered meant stimulate debate issue deception relationship hyperplane sampling implicit parallelism establish foundation research 
probably raised questions answered 
great deal debate genetic algorithm community problems test functions 
really mean variant genetic algorithm outperforms test suite 
theoretical results concerning deception armed bandit analogy strongly support position advocated david goldberg test problems involve degree deception 
places increased importance relating walsh transforms genetic algorithm deception goldberg 
imply reasonable test problems ugly fully deceptive problems 
problems highly artificial ways decompose subproblems solved independently deception occurs position subproblem complement deceptive solution global solution 
strongly argue methods utilize information deception exists solve artificial problems general information available 
obtained empirical evidence simple problems deceptive order hyperplanes solved solving order hyperplanes das whitley 
methods appear faster genetic search information processed robust noisy hyperplane sampling 
theorem solving problem solving order hyperplane competitions somewhat idealistic assumes sampling noise accurate determination order winners points workable method deciding problems significantly deceptive 
potentially represents important contribution field genetic algorithms 
established description various kinds deception 
concepts fully deceptive consistently deceptive suggest new need empirical tests evaluate problems displaying different degrees deception 
problems consistently deceptive hard nearly hard fully deceptive problems 
fully deceptive problems hard solve deceptive attractor local optimum hamming space fitness value competitive correct building block 
working answers questions 
general experiments described step arriving better understanding deceptive problems 
results suggest tagged bits helpful solving linkage problems 
argued tagged bits finding optimal sequence bits finding optimal bit values greatly increases size search space liepins vose goldberg bridges 
may need find optimal sequences just avoid particularly bad ugly sequences 
hand test problem started worst bit arrangement devise real problems parameters coded contiguous block bits tagged bits may initial arrangement worse better 
argue issue open firm drawn time 
approaches examined include goldberg korb deb messy gas designed part handle deceptive problems examined crowding techniques 
crowding techniques natural solution deception crowding forces development niches similarity binary strings competing space population 
results concerning relationship deceptive attractor relevant global winner hyperplane competition expect global winner occupy different niche occupied deceptive attractor strings schemata close deceptive attractor hamming space 
sense results distributed genetic algorithm produced kind niching implicitly genetic drift sampling errors explicit forced niching 
david goldberg insightful comments earlier draft remaining flaws course 
research supported part national science foundation number iri colorado institute artificial intelligence 
sponsored part colorado advanced technology institute agency state colorado 
promotes advanced technology education research universities colorado purpose economic development 

genetic algorithms function optimizers 
ph dissertation computer communication sciences university michigan ann arbor 
das whitley 
challenging problems deceptive global optimization solving order hyperplanes 
appear fourth international conf 
genetic algorithms 
goldberg 
simple genetic algorithms minimal deceptive problem 
genetic algorithms simulated annealing davis ed pp morgan kaufmann pubs 
goldberg 
genetic algorithms search optimization machine learning 
reading ma addison wesley 
goldberg 
genetic algorithms walsh functions part gentle 
complex systems 
goldberg 
genetic algorithms walsh functions part ii deception analysis 
complex systems 
goldberg 
construction high order deceptive functions walsh coefficients 
illigal report 
department general eng 
univ illinois urbana champaign 
goldberg bridges 
analysis reordering operator ga hard problem 
biological cybernetics 
goldberg deb 
comparative analysis selection schemes 
foundation genetic algorithms rawlins ed 
morgan kaufmann 
goldberg korb deb 
messy genetic algorithms motivation analysis results 
complex systems 
goldberg rudnick 
genetic algorithms variance fitness 
illigal report 
department general eng 
univ illinois urbana champaign 
grefenstette baker 
genetic algorithms critical look implicit parallelism 
proceeding third international conference genetic algorithms 
washington morgan kaufmann publishers 
holland 
adaptation natural artificial systems 
ann arbor mi university michigan press 
liepins vose 
representation issues genetic optimization 
experimental theoretical art 
intell 

liepins vose 
genetic algorithm dynamics 
foundation genetic algorithms rawlins ed 
morgan kaufmann 
starkweather whitley mathias 
optimization distributed genetic algorithms parallel problem solving nature springer verlag publishers 
syswerda 
uniform crossover genetic algorithms 
proc 
third international conf 
genetic algorithms morgan kaufmann publishers 
tanese 
distributed genetic algorithms 
proc 
third international conf 
genetic algorithms morgan kaufmann publishers 
whitley 
deception dominance implicit parallelism genetic search 
technical report 
department computer science colorado state university 
