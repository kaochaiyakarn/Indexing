consistent answers integrated data sources bertossi jan chomicki alvaro cort es claudio carleton university school computer science ottawa canada 
bertossi scs carleton ca state university new york bu alo dept computer science engineering 
chomicki cse bu alo edu cia universidad de chile departamento de ciencia de santiago chile 
ing puc cl universidad de chile center web research departamento de ciencias de la computaci santiago chile 
dcc uchile cl 
data sources integrated single global system inconsistencies wrt global integrity constraints occur 
notion consistent answer global query context local view model data integration characterized 
furthermore methodology generating query plans retrieving consistent answer global queries introduced 
purpose extension inverse rules algorithm deriving query plans 
answer rst order queries posed data sources integrated local view 
years due increasing number information sources available may interact subject data integration widely studied di erent points view 
topics mediated schemas query containment answering queries views deeply discussed context 
attention attracted important natural issue consistency data derived integration process answering queries posed integrated system 
data integration system provides uniform interface information sources 
interface referred global schema mediated schema context dependent set virtual relations formulate queries integrated system 
user queries system terms global schema query processor mediator charge rewriting global query query plan eventually access underlying information sources 
order perform query transformation processor needs mapping mediated schema information sources 
general paradigms proposed provide mapping 
called local view lav approach considers base information source view de ned terms relations global schema :10.1.1.18.8312:10.1.1.38.7636:10.1.1.38.7636
global view gav approach considers global predicate view de ned terms source relations :10.1.1.127.3070
concentrate lav approach 
scenario exible gav adding new data sources global system 
preexisting data sources system need considered new source introduced 
consequence inconsistencies occur 
furthermore point view studying logical issues consistency data lav paradigm challenging gav easily assimilated classical problem consistency views de ned relational databases 
context local view approach algorithms proposed rewrite global query query plan accesses data source relations answer original query :10.1.1.38.7636
approaches query plan generation assume certain integrity constraints ics hold global level ics query plan generation 
rewriting algorithm uses functional inclusion dependencies mediated schema proposed :10.1.1.38.7636
algorithm query plan generation uses functional full dependencies introduced :10.1.1.43.8860
algorithm may take global query written datalog input 
deductive resolution approach data integration :10.1.1.38.7636
may global integrity constraints deductive derivation query plan 
situations assuming certain global ics hold query plan generated 
example 
taken consider relations global schema conference conference year ear location conference ear location plus functional dependencies fds conference conference year ear location conference ear location data sources expressed views global schema conference year conference year location want know location pods held pose global query ans location pods possible specify mapping description logics :10.1.1.43.8860:10.1.1.18.8312:10.1.1.18.8312
query plan answer ans pods plan proceeds follows 
rst nds pods source nds location conference source plan correct conference year 
fact dependencies hold way answer query sources 
previous example ics supposed hold global system 
obvious certain desirable global ics hold level 
data sources global relations virtual may consistency checking mechanism global level 
addition particularly local view approach clear means global system consistent global instance 
set data sources may potential global instances re produce data sources views view de nitions 
global system global schema plus collection materialized data sources described views global schema 
context quite natural pose queries global level expecting retrieve answers consistent wrt set global ics mentioned global ics may easily violated due lack global maintenance mechanism high likelihood producing inconsistencies data di erent sources integrated 
example shows data source independent maintenance mechanism consistent inconsistencies may arise sources integrated 
example 
consider global relation source relations fv fv described view de nitions global functional dependency fd violated interested posing queries global system inconsistent wrt certain global ics 
situation global inconsistency retrieve answers tuples consistent wrt global ics 
local view approach theoretical perspective sources seen views global relations sources materialized global relations virtual 
example 
example continued pose global system query ans obtain answers fans ans ans ans tuple returned answers consistent wrt global fd 
order address issues semantic problems appear sense global system consistent wrt set global ics 
answers global query consistent wrt ics 
computational mechanism compute consistent answers 
problem characterizing computing consistent query answers inconsistent relational database instance addressed :10.1.1.12.3324
case database instance inconsistent satisfy set ics 
intuitively speaking answer query considered consistent answer query possible repair original instance repair new instance satis es ics di ers minimal set tuples set inclusion 
computational mechanism basically consists rewriting query new query posed original inconsistent database gets normal answers consistent answers original query 
characterize consistent answers query posed global virtual integrated system 
consider problem deriving mechanisms computing consistent answers global system 
scenario quite di erent considered :10.1.1.12.3324
important di erences 
context virtual data integration global instance 
shown data integration system may determine possible nite set global instances :10.1.1.38.7636
notions introduced help de ne consistent answers :10.1.1.38.7636
second problem deriving query plans retrieving hopefully answers global query consistent wrt desired global ics 
approach may rewrite global query new query pose new query global system :10.1.1.12.3324
problem rewritten query may handled existing query plan generation algorithms :10.1.1.18.8312:10.1.1.38.7636
consequence need develop query plan mechanisms appropriate rewritten queries 
purpose extend inverse rules algorithm kind rewritten queries need answer datalog queries negation recursion :10.1.1.43.8860:10.1.1.43.8860
part restrict case open sources common scenario :10.1.1.38.7636
preliminaries global schemas view de nitions global schema modeled nite set relations fr rn possibly nite domain predicate symbols elements treated constants rst order language de ned 
language extended new de ned predicates 
view denoted new global predicate de ned means formula form body tuple containing variables constants body conjunction global atoms 
formula implicitly universally quanti ed 
view de ned conjunctive query :10.1.1.38.7636
database instance schema considered rst order structure domain extensions interpretations predicates nite built predicates case may nite xed extensions 
integrity constraint rst order sentence written language 
instance satis es denoted true database instance schema view de nition denotes extension obtained applying de nition assume de nition view set ground atoms predicate think xed data source global instance possible view extension di ers extension obtained applying instance view extension stores tuples satisfy de nition view say view extension closed wrt hand view extension possibly incomplete stores tuples satisfy de nition say view extension open wrt example rst source de nition read conference year source considered open 
mechanisms deriving query plans open sources :10.1.1.43.8860:10.1.1.18.8312:10.1.1.38.7636:10.1.1.38.7636
say source triple label view de nition label fopen closed view extension :10.1.1.38.7636
clopen stands closed open 
global system source collection nite set sources :10.1.1.38.7636
schema global system read bodies view de nitions 
consists predicate names de nition global system 
underlying domain properly contains constants appearing view extension sources 
global instances talk consistency databases wrt set ics think instances satisfying ics 
global system data integration global instance explicitly 
global system de nes set possible instances 
de nition 
global system set legal global instances fd instance open sources closed sources clopen sources gg extension source view de ned set tuples obtained applying view de nition instance mentioned de nition considers possibility set di ers extension original data source example :10.1.1.38.7636
example continued sources open legal instance global system fr legal instance fr general superset possible instance 
hand view sources closed legal instances empty 
sources clopen legal instances 
sources open global system say open global system 
case may say working open world assumption 
hand sources clopen say working closed world assumption 

concentrate open global systems :10.1.1.43.8860
section comments sources 
consequence label sources assume open 
deals notion consistent answers queries rst need notion answer query global system 
de nition 
ground tuple certain answer query posed global system instance answer set 
denote certain set certain answers query short review inverse rules method inverse rule algorithm generating query plans local view paradigm assumes sources open source relation source description de nes view global schema pn xn inverse rule tuple transformed obtain tuple follows constant variable unchanged variables appearing body de nition case replaced skolem function term denote set inverse rules collection source descriptions datalog query set conjunctive source descriptions construction query plan follows :10.1.1.43.8860
rules contain global relations de ned directly indirectly terms global relations appearing source descriptions deleted 
resulting query denoted rules added query obtained denoted 
notice global predicates seen edb predicates rules idb predicates appear heads rules consequence query plan essentially terms source predicates 
global systems consistency assume xed set static rst order integrity global constraints ic global schema 
assume set ics consistent set logical sentences 
furthermore assume set ic general sense ground literal language global schema ic ics database praxis general 
open global system adapted schema general global system may determine possibly nite set global instances may may satisfy ic 
say global system consistent satis es ic 
example :10.1.1.18.8312
consider global system fs hv fv gi hv fv gi ic functional dependency fr instance satis es ic fr instance satisfy ic 
consequence inconsistent wrt ic violates ic 
example global system determines nite number instances ics checked order sanction system consistent 
see de nition consistency easy global system inconsistent 
global instances violate ics due tuples relation original data sources 
sense notion consistent system suggested natural useful 
need precise de nition consistency global system captures intuitive notion consistency related de nitions sources available data sources 
example 
example continued global system consistent wrt fd data global instance comes sources fr violate fd :10.1.1.18.8312
contrast global system de ned exactly extensions fv gi fv gi views inconsistent due data fr obtained sources violates fd 
de nition 
global system minimal global instance instance minimal wrt set inclusion instance proper subset set atoms 
denote set minimal legal global instances wrt set inclusion 
de nition particularly relevant case open sources case minimal instance intersection elements element 
de nition 
global system consistent wrt set global integrity constraints ic minimal legal global instance satis es ic ic 
example 
example continued minimal legal global instance satis es fd :10.1.1.18.8312
consequence global system consistent 
global system example inconsistent wrt fd 
minimal legal global instance satisfy fd 
example 
consider fs hv fv gi hv fv gi case elements form fp global fd violated exactly minimal legal instances global system inconsistent 
notice consistent de nition require global instance consistent 
certain answer query ans global system inconsistent sense satisfying set ics possible realizable sense 
de nition :10.1.1.18.8312
ground tuple minimal answer query posed global system minimal instance answer set 
denote minimal set minimal answers query general certain minimal 
monotone queries notions minimal certain answers coincide :10.1.1.38.7636
example query ans minimal answer certain answer legal instances contain 
queries allowed contain negation 
consistent answers de ned relative minimal global instances relevant notion answer minimal answer 
notice assumption imposing form closed world assumption global instances associated local sources 
closed sources minimal instance empty 
repairs global systems database instance denote set ground formulas fp de nition 
database instances schema domain :10.1.1.12.3324
distance 
symmetric di erence 
database instances de ne 

distance equal distance possibly inconsistent global system want de ne notion consistent answer query 
done basis possible global instances repairs 
precisely global database instance interested instances satisfy global ics minimal wrt order minimal di erence wrt set inclusion de nition 
global system ic set global ics 
repair wrt ic global database instance instance global schema ic minimal 
see repair global system global database instance minimally di ers minimal legal global database instance 
notice consistent de nition repairs exactly elements 
example 
consider global system fs hv fv gi hv fv gi global fd case fr ic 

elements form fr global database domain 
elements coincide repairs 
notice consistent global system 
notice de nition repair requiring repair respects open labels instantiation view de nition repair contains corresponding view extension source 
may case repair global instance belong 
allow kind label violation global system 
notice de nition built predicates contribute 
xed extensions identical database instance example 
consider global system fs hv fv gi hv fv gi fd element fr satisfy ic :10.1.1.18.8312
global system inconsistent 
repairs global instances minimally di er satisfy fd fr fr notice belong :10.1.1.18.8312
example 
consider global system fs hv fv gi hv fv gi inclusion dependency ic xyz :10.1.1.18.8312
elements form elements underlying domain :10.1.1.18.8312
satisfy ic global system inconsistent 
global instances minimally di er satisfy ic consequence repairs fr fr notice interested repairs :10.1.1.18.8312:10.1.1.12.3324
interested repairing global system instances kind 
repairs auxiliary notion de ne consistent answers 
consistent answers global queries algorithms literature obtaining certain answers global query global system system may violate desired global integrity constraints ic 
goal characterize answers consistent ic global system inconsistent 
formalize notion appealing repairs global system :10.1.1.12.3324
new scenario start form single possibly inconsistent relational databases instance possibly inconsistent global system collection implicit instances 
de nition 
global system set global integrity constraints ic global rst order query say ground tuple consistent answer wrt ic denoted repair 
denote consis set consistent answers query example 
example continued query consistent answer :10.1.1.18.8312
query consistent answer 
query plan caring inconsistency ans evaluated data sources give answers consistent answers :10.1.1.38.7636
example 
example continued query consistent answers :10.1.1.18.8312
certain answers query :10.1.1.18.8312
proposition 
open global system set global integrity constraints ic ic ground literal global query holds consistent answer minimal answer 
consistent wrt ic minimal answer consistent 
computing consistent answers having semantic de nition consistent answer global query global system concentrate computational problem consistent query answering 
purpose case stand relational database operator introduced :10.1.1.12.3324
rst order query modi ed query computed 
new query posed original database returned answers consistent semantic sense 
section operator transform queries posed global systems 
section give short description rewriting algorithm introduced :10.1.1.12.3324
rewriting operator consider universal rst order integrity constraints expressed called standard format database literal formula containing built predicates :10.1.1.12.3324
new query computed iterative operator transforms arbitrary query appending corresponding residue database literal appearing query xed point reached 
residue literal forces local satisfaction ics tuples satisfying literal 
residues obtained resolution table ics 
example 
consider ic fr query 
residue wrt rst ic satis ed residue true ic satis ed 
similarly residue wrt second ic 
operator iteratively appends residues tables queries 
obtain xed point reached 
obtain 

methodology operator works conjunctive queries 
rest concentrate case 
notice xed point may hard impossible detect 
address problem implementation issues improved algorithm compute 
computing consistent answer global queries context integration open data sources local view paradigm global universal integrity constraints ic algorithm compute consistent answers conjunctive queries 
global query algorithm starts applying operator rewritten query answered producing appropriate query plan 
high level algorithm follows algorithm input conjunctive global query output query plan obtain consistent answers 
rewrite rst order query applying algorithm ic input set ics 

standard methodology transform datalog program datalog program negation :10.1.1.38.7636

find query plan answer seen query global system 

evaluate query plan view extensions compute set answers 
problematic step apart limitations operator resulting datalog program may contain negation 
mechanisms obtain query plans global queries containing negation heuristics sketched :10.1.1.38.7636
positive side generated datalog program contain recursion 
cases negation appears rewritten query obtain positive conjunctive query views apply inverse rule algorithm obtain query plan :10.1.1.43.8860
presence negation need extend methodology generate query plans 
section extension algorithm considering negation recursion :10.1.1.43.8860:10.1.1.18.8312
rst example need extended query plan generator 
show example negation obtained 
example :10.1.1.18.8312
consider global system fs hv fv gi hv fv gi global integrity constraint ic case instance fr clearly instance satisfy ic global system inconsistent repairs need considered 
fr fr global query care consistency query plan obtained applying inverse rule algorithm query ans evaluating query plan view extensions tuples obtained certain answers tuple consistent answer de nition :10.1.1.43.8860
apply algorithm 
rst step ic obtain proceed step translating rst order query datalog program ans datalog program conjunctive query proceed step query plan view de nitions generated ans step 
evaluate query plan view extensions bottom manner 
tuple obtained consistent answer 
example 
consider global system fs hv fv gi hv fv gi fd global query 
element fr minimal instance violates fd tuples 
consequence global system inconsistent 
repairs fr fr consistent answer query tuple 
query plan plan query obtained inverse rules method caring consistency ans evaluated view extensions retrieves inconsistent certain answers :10.1.1.43.8860
apply algorithm 
need fd expressed rst order language xyz 
step 
query rewritten 
obtain query translated datalog program ans need query plan answer query program containing negation 
plans queries negation inverse rule algorithm generating query plans global datalog query :10.1.1.43.8860:10.1.1.18.8312
plan produces answer set answer set shown query plan retrieves certain answers query limitation inverse rules algorithm query plans allows datalog queries :10.1.1.38.7636
case start conjunctive global query query program obtained transforming query rewritten operator may contain negation 
consequence need nd plans recursion free datalog query programs built predicates tw 
notice absence recursion immediately resulting query programs strati ed :10.1.1.38.7636
recursion free datalog query terms global de ned relations extended inverse rules algorithm works analogously see section case rule contains negated literal body say ln checked eventually evaluated terms global relations appearing source descriptions global relations eventually evaluated inverse rules :10.1.1.43.8860
case goal eliminated obtaining modi ed rule ln show methodology means example example :10.1.1.18.8312
consider global system fs hv fv gi hv fv gi global query ans easy extend methodology strati ed datalog queries need extension :10.1.1.18.8312
inverses rules obtained source descriptions compute query plan rst need ans literal eliminated rule appear source description :10.1.1.18.8312
reason literal appear source description rule eliminated :10.1.1.18.8312
query plan ans query plan evaluated bottom manner retrieve ans nal answer global query containment section prove resulting query plan maximally contained original query :10.1.1.18.8312
concentrate recursion free datalog programs including built ins 
query plan expansion exp obtained replacing source relations bodies corresponding views fresh variables existential variables views 
source relations eliminated inverse rules order position compare original query expressed terms global predicates query plan 
example 
example continued compute exp rst rename idb predicates ans expansion datalog query exp ans 
notice extended plan obtained previous example keep rules plus source de nitions example 
rest section 
theorem 
recursion free datalog program set conjunctive source descriptions nite instances source relations query plan unique nite minimal xpoint 
furthermore bottom evaluation guaranteed terminate produces unique xpoint 
de nition 
maximally contained plan query plan maximally contained query views exp query plan exp holds fv vm set extensions sources query plan denotes extension query predicate ans obtained evaluating notice may contain tuples skolem function symbols :10.1.1.38.7636
denote set tuples contain function symbols plan computes pruned extension 
order prove maximal containment notion proof tree datalog queries extended recursion free datalog queries see appendix :10.1.1.38.7636
theorem 
compare thm :10.1.1.43.8860
recursion free datalog program set conjunctive source descriptions query plan maximally contained 
proof maximality theorem see theorem restricted minimal global instances 
query plan contained 
exp minimal global instance immediate consequence theorem holds arbitrary global instances plan expansion contained minimal global instances contained follows particular minimal global instance constructed proof 
theorem 
open global system ic set general ics recursion free datalog query built ins plan plan obtained extended inverse rules algorithm retrieves exactly minimal 
exp means extension query predicate exp included extension database instance global schema 
algorithm revisited algorithm generation query plans global queries datalog queries speci cally datalog queries recursion 
denote plan query plan query algorithm follows 
conjunctive query waits consistent answer 

obtain fo query 

translate datalog program 
obtain plan 

evaluate plan sources :10.1.1.18.8312
return answers 
consistent answers example 
example cont 
applying extended inverse rules methodology datalog obtained query plan plan generated ans query plan evaluated view extensions obtain answer 
answer consistent 
notice original query evaluated program sql de ning rst view union proposition 
open global system ic set general ics consistent answers conjunctive global query correspond minimal 
furthermore monotone certain answers consistent answers theorem 
open global system ic set general ics global query plan retrieves exactly consis 
concentrated local view paradigm 
consistency issues approaches 
problem obtaining consistent answers global queries interesting local view approach 
approach better suited easily add new sources consideration sources consequence inconsistencies occur 
second local vie approach nd issue multiple global instances deal global view approach global instances directly derivable materialized sources 
third existing techniques obtaining consistent answers directly applied local view scenario :10.1.1.12.3324
complex rewritten global queries appear techniques deriving query plans developed 
global view approach easier answer global queries rule unfolding particular rewritten queries obtained methodology developed :10.1.1.12.3324
notions techniques single relational databases easily applicable global view integration scenario :10.1.1.12.3324
note pointed global integrity constraints query folding global view approach dicult :10.1.1.43.8860
focused specially open sources 
interesting extend semantic algorithm consider open closed clopen sources global system 
introduces interesting framework deal kind global system explored particularly presence global integrity constraints :10.1.1.38.7636
problem query containment crucial context data integration 
focused conjunctive queries 
interesting challenge expand universe expressive queries 
line introduces improved method testing query containment union general conjunctive queries 
methodology turn methodology :10.1.1.12.3324
consequence applies limited class queries constraints 
approaches consistent query answering logic programs stable model semantics :10.1.1.125.8854
handle general rst order queries context stand relational database 
interesting see methodology integrated methodology consistently answer conjunctive queries posed global integrated systems local view paradigm 
logic approach transforming query global schema query plan sources :10.1.1.38.7636
methodology takes account deductive basis global ics derivation query plan 
consequence close spirit methodology developed rewrite queries inconsistent instance new query posed original database :10.1.1.12.3324
desired possibly violated ics rewriting process 
acknowledgments supported nsf int nsf iis carleton university start nserc nucleus millenium web research :10.1.1.18.8312
grateful alberto mendelzon stimulating useful conversations 

abiteboul hull vianu foundations databases 
addison wesley :10.1.1.18.8312

abiteboul duschka complexity answering queries materialized views 
proc 
th annual acm symp 
theory computing acm press pp 
:10.1.1.18.8312

arenas bertossi chomicki consistent query answers inconsistent databases 
proc 
acm symposium principles database systems acm pods acm press pp 


arenas bertossi chomicki specifying querying database repairs logic programs exceptions 
flexible query answering systems 
developments 
zadrozny christiansen eds springer pp 

:10.1.1.18.8312
beeri levy rousset rewriting queries views description logics 
proceedings acm sigact sigmod sigart symposium principles database systems pods pp 

bertossi querying inconsistent databases algorithms implementation 
computational logic cl lloyd 
eds springer lnai pp 
:10.1.1.18.8312

bertossi repairing databases annotated predicate logic 
proc 
ninth international workshop non monotonic reasoning nmr 
special session changing integrating information theory practice 
benferhat giunchiglia eds morgan kaufmann publishers pp 


cali calvanese de giacomo lenzerini data integration integrity constraints 
proc 
th conf 
advanced information systems engineering caise 
appear 

duschka genesereth levy recursive query plans data integration 
journal logic programming 

grahne mendelzon tableau techniques information sources global schemas 
proc 
int 
conf 
database theory icdt springer lncs pp :10.1.1.18.8312


minker logic approach data integration 
theory practice logic programming journal 
appear 

greco greco logic programming approach integration repairing querying inconsistent databases 
proc 
th international conference logic programming iclp ph 
ed lncs springer pp 


query rewriting views presence functional inclusion dependencies 
information systems :10.1.1.18.8312

halevy answering queries views survey 
vldb journal 
appear 
:10.1.1.18.8312
levy rajaraman ordille heterogeneous information sources source descriptions 
proceedings nd international conference large databases vldb morgan kaufmann publishing pp 
:10.1.1.18.8312

lloyd foundations logic programming 
springer 

millstein levy friedman query containment data integration systems 
proc 
acm sigact sigmod sigart symposium principles database systems pods pp 

pottinger levy scalable algorithm answering queries views 
proceedings th vldb conference pp 

ramakrishnan sagiv ullman vardi proof tree transformation theorems applications 
proceedings acm sigact symposium princ 
dbs pp 


ullman information integration logical views 
proc 
int 
conf 
database theory icdt springer lncs pp 


wang maher topor rewriting general conjunctive queries views 
proc 
australasian database conference 
appear 
ullman information integration logical views 
theoretical computer science 
appendix proof trees datalog program built predicates ground literal database instance provides extensions edb predicates 
de nition 
proof tree tree nodes labels form positive ground fact constructed follows 
label root positive positive 
leaf labeled fact fact appear head ground instantiation rule 

internal vertex label exists ground instantiation program rule child root proof tree 
internal vertex label holds ground instantiation bn program rule child root proof tree proof tree mean follows proof tree notice positive leaves rst component edb atoms negative leave edb atom expanded rules program 
edb leaves set positive resp 
negative leaves proof tree denoted pos resp 
neg 
case apply notion proof tree ground query atoms ans predicate ans de ned means datalog program 
proof tree extend datalog programs queries :10.1.1.38.7636
query strati ed datalog naf proof query atom instance witness extended proof tree 
notice proof tree depth branching factor bounded constant depending program 
number leaves bounded constant maximum arity edb predicates occurring fa set di erent constants 
appendix proofs proof proposition consis 
repair 
hypothesis ic minimal 
case repairs coincide elements 
proof theorem contains negation introduce function symbols recursion 
hand introduces function symbols recursive contains negation 
bottom evaluation necessarily progress stages 
rst stage extensions idb predicates determined 
second stage normal datalog evaluation normal datalog queries nite minimal xpoints proves claims 
lemma 
global query source description global edb predicates global instance 
function free ground instantiation rule function free ground instantiation inverse rule proof theorem containment need prove exp dn instances global edb predicates ans exp function symbols 
proof tree ans exp occurrence view predicate proof tree done ans 
occurs due form inverse rules occur internal node children pn ground facts particular functions 
due form inverse rules parent atoms notice occurrence predicate branch 
positive occurrence view predicate prune subtree root case negative occurrence equivalently form rules parent form global predicate 
case prune subtree root developed node ist child pruning nodes way leaves proof tree ans 
maximality assume plan exp need prove 
instance ans functions 
global instance produced applying inverse rules proof ans leaves containing ground view literals 
leaves expanded source de nitions new global ground literal appear leaves 
construction obtain proof tree ans exp ans exp 
hypothesis ans 
need prove ans 
assuming kept view predicates expanded plan indicated 
proof tree ans fact comes ground instance fact sources extend tree adding positive leaf child source coming ground instance rule 
respect negative leaves just note instance rules instantiate de nition 
negative leaves predicates schema stay instantiation 
obtain proof tree ans proof theorem proof exactly theorem stated certain answers 
proof goes minimal answers apply property maximal containment query plan plan relative minimal global instances see 
proof proposition consis 
repair answer set results minimal :10.1.1.12.3324
due correctness completeness operator kind queries inclusion established similarly :10.1.1.12.3324
proof theorem theorem proposition 
appendix sources example 
consider global system fs hv clopen fv gi ic functional dependency instance fr satis es ic consistent wrt ic 
example 
adapted consider global system fs hv open fv gi hv open fv gi hv closed fv gi ic inclusion dependency :10.1.1.38.7636
elements form fs element underlying domain 
violate ic global system inconsistent 
gives rise repairs fs element underlying domain fs applying unique names assumption tells equal gives rise repairs fs fs gives rise repairs fs fr 
