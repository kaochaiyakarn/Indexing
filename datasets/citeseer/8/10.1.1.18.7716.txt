classifying categories partial equational logic lutz schr oder department computer science university bremen 
lines classical categorical type theory total functions establish equivalence results certain classes partial equational theories hand corresponding classes categories hand staying close standard categorical notions 
show nitary partial theories conditional equations essentially left exact categories distinguished domains partial calculi internal equality equivalent suitable class partial cartesian closed categories 
contact lutz schr oder dept computer science university bremen box bremen germany phone fax mail informatik uni bremen de research supported dfg project hascasl partial functions long recognized play important role computer science 
functions de ned general recursion may partial non termination programs frequently modelled partiality 
speci cation languages rsl spectrum casl feature partial functions 
extensive research formal systems involving partiality ranging traditional partial algebra see partial higher order logic 
categorical concepts partiality axiomatic domain theory 
study syntax semantics formal systems general bene ts close correspondence theories categories 
common principle theories formal system essentially signatures kind equipped collection axioms represented classifying categories certain properties conversely associates category said properties theory commonly called internal language processes mutually inverse 
part appeal concept models translations essentially notion structure preserving functors 
ideas originated lawvere discovery called algebraic theories extended equivalence categories products multi sorted algebra 
list results type including equivalence typed calculus cartesian closed categories categorical representations complex type systems see 
corresponding results various types partial equational logic 
categorical side basic choice representing partial maps single morphisms leads categories nonstandard structure traditionally spans sake conceptual naturality pursue option 
basic logic featuring unary operators existentially conditioned equations suitable deduction system 
corresponds categories equipped admissible set domains partial morphisms sense 
classifying categories constructed syntactic material spirit suggested terms modulo provable equality morphisms proofs detail 
building basis subsequently add features nitary operators conditional equations functional abstraction logic discuss constructions proofs basic case adapted produce corresponding equivalence results extended systems 
particular show partial equational speci cations essentially left exact categories set domains partial calculi internal equality equivalent certain class partial cartesian closed categories 
results knowledge original 
partial cartesian closed categories models partial calculus representations syntax left consideration 
representation partial equational speci cations left exact categories constructed partly similar lines deduction system explicitly incorporates intended categorical structure 
term construction classifying monoidal categories intended partial functions signatures axioms deduction considered 
precursor representation partial equational speci cations connection amalgamation problems casl 
refer categorical terminology left unexplained 
basic logic partiality practically rudimentary logic imaginable setting logic featuring unary partial operators existentially conditioned equations 
focus existential equations read sides de ned equal reappear naturally categorical side 
stated equations provide existentially conditioned form level expressiveness strong equations side de ned case sides equal 
unary signature pair consisting set sorts set operators pro les arities written signature gives rise notion sorted terms context typing rules context limited setting just assignment sort single variable written contexts strictly necessary order notation easily adaptable complex settings 
judgement reads term sort context 
term denotes restriction domain cf 

term obtained substituting denoted morphism signatures de ned pair maps corresponding sets sorts operators respectively compatible operator pro les 
fig 

typing rules basic logic unary partial theory unary signature set axioms take form existentially conditioned equations existential equation context pair sort equation written intended reading de ned equal 
abbreviated def existentially conditioned equation context sentence form nite set de nedness conditions def existential equation context written def freely conjunction symbol obvious meaning true denote empty set conditions 
result substituting term denoted respectively 
set proof rules existential equality unary partial theory 
rules gure parametrized xed context write set existential equations deduced set existential equations context means rules 
sentence theorem 
var sym tr cong def ax def res def res def def str def def fig 

deduction rules existential equality context congruence rule strictness rule readily generalize arbitrary terms place basic operations generalized strictness rule fails higher order extensions logic 
way rule axiom application formulated proposition 
def proof 
induction length derivation translation theories de ned usual way signature morphism transforms axioms theorems 
theories translations form category 
categories partial morphisms essentially di erent ways incorporating idea partial maps partial morphisms categorical concept treat partial morphisms arrows right regard partial morphism span monomorphism possibly restricted class thought domain de nition 
see depth comparisons concepts shall follow approach sake naturality associated categorical de nitions 
partial morphism category span belongs class monomorphisms 
partial morphisms regarded equal exists isomorphism want de ne composite partial morphism outer span square pullback 
order possible require closed pullbacks pullbacks morphisms exist closed composition 
want able represent morphisms partial morphisms require contain identities 
shall call class satis es conditions admissible 
easy see closed intersections intersections morphisms exist enjoys left cancellation property monomorphism mg implies contains isomorphisms 
de nition 
category partial morphisms cpm pair consisting category admissible class monomorphisms called domains 
cpm functor cpms functor preserves domains pullbacks 
functor called cpm equivalence equivalence categories re ects domains 
category cpms cpm functors denoted cpm 
turn structure need order model unary partial theories introduced 
partial morphisms cpm composition introduced form category contains non full subcategory 
interpreting basic logic proceed program de ne unary partial theory called internal language cpm obtaining functor cpm way introduce interpretation prove soundness theorem interpretation 
shall go construct classifying category cl unary partial theory classifying category shown free cpm turn kleisli category arising monad just means cpms essentially unary partial theories naturally generalized translations 
associating unary signature cpm sorts just objects operators pro le partial morphisms 
operator denote associated span contexts terms de nedness conditions signature interpretation context term de ne partial morphism def recursion term structure variables interpreted identities particular def operator application composition partial morphisms restriction operator modelled intersecting domains 
denote existing domain codomain restrictions subobjects respectively 
terms context intersection def subobjects def exists interpretation leads notion satisfaction de nition 
existentially conditioned equation holds contained def morphisms agree respective restrictions coincide 
allows complete de nition axioms existentially conditioned equations hold action cpm functors de ned obvious way 
step show deduction system sound interpretation theorem soundness 
holds central ingredient proof lemma main lemma 



restriction def 
def 
arising diagram def 
def def triangle commutes square pullback 
setting just statement partial morphisms associated respectively form commutative triangle versions needed extended logics slightly deviate simple form 
proof 
induction term structure base case trivial case operator application just associativity composition 
form restricts induction morphisms def 
def morphism def def 
def 
def arising square pullback intersection pullbacks commutation condition holds induction 

forming intersections pullback statement main lemma generalizes immediately de nedness conditions nitely terms place caution required may empty domain restriction def 
refer generalized fact main lemma 
proof theorem 
induction proof length 
base case trivial interesting cases induction step proof step uses rule ax rule cong 
axiom rule deduced def applying axiom induction contained def 
putting 
def 
def 
def def morphisms top outer frame courtesy main lemma 
pullback obtain required dotted arrow subobject def contained def 
morphisms 
agree 
commutation morphisms 
agree def 
congruence rule operator deduced def 
induction contained def agree 
commutative square def def def pullback cospan def implies contained def 
clear agree 
ut announced construct classifying category cl unary partial theory objects cl pairs consisting context nite set de nedness conditions def context 
morphisms 
terms def taken modulo equality deducible 
identity represented 
composition de ned substitution representing terms 
de ned operation generalized congruence rule proposition shows composite morphism 
de ne class domains cl isomorphism closure class morphisms form 
remains shown cl cpm admissible 
clear contains identities stable composition 
closed pullbacks 

cl 
pullback 
adjointness statement prove lives strictly speaking realm categories shall leave categorical aspects consideration 
translation cl maps sort true distinguished variable operator operator cl partial morphism true def true 
theorem 
cl freely generated sense translation cpm factors essentially uniquely cl essentially means unique unique natural isomorphism 
cl determined equivalence property 
proof 
uniqueness statement clear prove existence acts obvious way contexts terms equations de nition translations actions preserve deduction 
put objects cl 
morphism 
cl de ned composite 
def inclusion provided theorem restriction main lemma 
de ned morphisms agree theorem 
clear preserves identities domains 
main lemma preserves composition 
remains established preserves pullbacks domains pullbacks type depicted diagram 
notation assembled assume empty show outer frame 
def 
def pullback 
follows fact smaller squares pullbacks right main lemma left intersection 
ut show cpm generated way internal language applying theorem identity translation obtain unit cl 
essentially interpretation theorem 
cpm equivalence 
proof 
clear isomorphism dense surjective objects 
faithful identi es cl morphisms 
holds 
order show full 
morphism 

arising partial morphism 
operator 
construction commutative square def square automatically pullback main lemma equal subobject 
particular 
morphism cl mapped diagram 
fullness faithfulness established easy see re ects domains 
ut cpm essentially sense precise higher order category theory kleisli category adjunction cl category consists objects morphisms morphisms cl 
morphisms naturally generalized translations sorts may mapped types nite intersections domains de nition terms symbols may mapped terms restriction operator partial morphisms cl form def morphisms kind identi ed map symbols provably strongly equal terms 
note restriction operator accordance central role attributed implicitly reintroduced identi cation cl omitted original de nition logic 
finitary operations course restriction logic considered unary operations heavy 
terribly hard switch operations arbitrary nite arity 
side logic just means go back normally expected admit operators pro les list sorts 
contexts lists variables assigned sort variable may pick arbitrary variable context 
multi term list terms list sorts type equations multi terms just sets equations true 
notations multi term refer simultaneous substitution components variables context operators apply multi terms relevant typing rule deduction rules cong ax str correspondingly adjusted 
slight twist empty multi term doubles term sort additional deduction rule unit def theories type called nitary partial theories 
categorical side move cartesian cpms cpms nite products functors preserve additional structure 
closure products pairing 
follows automatically 
order obtain desired equivalence result nitary partial theories hand cartesian cpms hand follow program previous section requires technical adjustments signature associated cartesian cpm operator arity partial morphism 
contexts strings sorts internal language interpreted products variables projections 
multi terms interpreted intersecting domains de nition tupling resulting restrictions 
required version main lemma applies original notation term multi term components may get lost substitution replace object def def 
proof simultaneous induction induction step multi terms essentially 
proof soundness theorem easy additional case new deduction rule cases remain essentially unchanged 
classifying category de nedness conditions multi terms context objects multi terms morphisms 
products concatenation contexts avoiding name clashes variable renaming conjunction de nedness conditions 
order obtain universality theorem classifying category show additionally factorizing functor constructed cartesian 
suces prove preservation products form def 
true symmetrically true 
def general case arises forming intersections known preserved 
proceed induction structure base case trivial cases discharged observation products commute intersections pullbacks respectively 
statement nitary partial theories essentially cartesian cpms arising generalized translations may map symbols 

finitary partial theories come notion predicates shape terms 
terms shall occasionally write place def particular code def conjunction truth expressed obvious way 
internal equality vs conditional equations substantially di erent ways equations premises axioms admit conditional equations sentences form existential equations axioms cf 
require existence internal equality binary predicate cf 
eq sort eq true eq see allows coding conditional equations existentially conditioned equations 
note requirements eq expressed existentially conditioned equations 
internal equality simple categorical correlate call cartesian cpm regular contains diagonals implies equalizers nitely complete shortly lex contains regular monomorphisms 
easily proves theorem 
nitary partial theory internal equality classifying category regular 
words equivalence nitary partial theories internal equality hand regular cartesian cpms hand 
conditional equations somewhat di erent categorical side correspond nite completeness additional requirement class domains 
order prove nitary partial theories conditional equations partial equational speci cations equivalent lex cpms need walk program section adjustments ones discussed section lex cpm introduces interpretation existential equations context equalizers def 
axioms internal language conditional equations contained 
de nition equivalent obvious variation de nition 
pullback statement main lemma needs generalized de nedness conditions notation lemma def equations fact equalizers commute pullbacks 
objects classifying category equations context class domains consists inclusions de nedness conditions 
equalizer 
universality statement classifying category requires factorizing functor preserves equalizers proved fact equalizers commute intersections 
may appear undue ort comparison required internal equality 
internal equality excludes certain typical examples ones domains limited open subsets topological spaces subsets partial orders 
certain contexts internal logic stronger see 

strong equations premises excluded consideration sentences fail positive horn form exhibit malign behaviour conditional equations treated cf 

particular somewhat improbable corresponding theories natural categorical analogue 

instructive compare result categorical representation lex categories distinguished class domains chosen 
domains generally fall limited class monomorphisms choice essentially means class domains required comprise monomorphisms sense interested set valued models 
resulting generalized translations complicated symbols pro le may mapped entities form 
def provably injective def partial calculus step agenda addition functional abstraction 
frame clear outset relevant theories partial calculi introduced suggested carried corresponding categories partial cartesian closed categories 
distinctions discussed previous section come play exceedingly large role context details laid forthcoming sketched 
partial calculus nitary partial theory additionally featuring abstraction partial functions partial function types type string types explained resort currying multi argument functions types generated may appear operator pro les contexts 
additional typing rule terms limited terms multi terms abstraction multi terms coded away restriction operator 
deduction system xed context extended rules shown rules essentially version rules adapted existential strong equations 
rule uses reasoning assumptions marked square brackets locally enlarged context rst premise reads deducible context additional assumption def 
assume application operators signature application require extra typing deduction rules 
def def def def def def def def 
fig 

additional deduction rules partial calculus cartesian cpm called partial cartesian closed category composite functor adjoint object object partial function space universal partial evaluation morphism initial steps equivalence proof usual program independent presence type equality signature associated objects basic sorts 
types interpreted recursion structure partial function types modelled partial function spaces 
operators pro le types partial morphisms 

interpretation terms extended obvious way cover terms exploiting factorization property partial function spaces 
axioms internal language de ned de nition form required conditional equations 
proof main lemma additional case typing rule terms 
pullback statement trivial terms de ned commutation statement follows unicity factorizations partial function spaces 
soundness new deduction rules established easily rules main lemma needed reduce case 
dicult bit construction classifying category cl partial calculus easiest case internal equality sense equality predicate exists type cl de ned objects consisting context de nedness condition 
presence internal equality extensive logic available particular code implications eq 
implies cl 
partial function space 
def 
variables 
corresponding number function variables extra conditions stating functions domain 
universality cl follows fact corresponding constructions regular 
equivalence result obtain states partial calculi internal equality essentially regular 
internal equality introduce implication additional logical concept 
objects cl obtained closing usual objects de nedness conditions partial function space construction resulting category 
real diculties conditional equations 
naturally conjecture partial calculi conditional equations equivalent lex 
problem encountered construction classifying category context partial morphism domain equation general regarded partial morphism domain inclusion 
true general fails belong class domains construction partial function spaces applied solution problem include formulae actual type formation 
established number equivalence results certain types partial equational theories hand suitable classes categories hand line classical results total case 
basic categorical concept category partial morphisms cpm notion scope standard category theory 
particular shown unary partial theories equivalent cpms nitary partial theories equivalent cartesian cpms presence internal equality conditional equations corresponds regularity left exactness cpms respectively partial calculi internal equality equivalent regular partial cartesian closed categories 
sketched proof partial calculi correspond partial cartesian closed categories 
conjectured partial calculi conditional equations equivalent left exact partial cartesian closed categories elaborated 
point explore semantical implications results particular concerning partial higher order logic particular interest context connection generalized set valued models spirit henkin models arbitrary partial cartesian closed categories 
author wishes till mossakowski christoph useful comments discussions 
ad amek herrlich strecker concrete categories wiley interscience 
astesiano cerioli free objects equational deduction partial conditional speci cations theoret 
comput 
sci 

broy grosu hussmann st len requirement design speci cation language spectrum informal version tech 
report department informatics technical university munich 
burmeister partial algebras survey unifying approach model theory partial algebras algebra universalis 
partial algebras introductory survey algebras orders rosenberg eds nato asi series kluwer pp 

cla en gro rhode wolter categorical concepts parameterized partial speci cations math 
struct 
comput 
sci 

corradini gadducci functorial semantics multi algebras partial algebras applications syntax theoret 
comput 
sci appear 

curien partiality cartesian closedness toposes information computation 
farmer partial functions version church simple theory types symbolic logic 
fiore plotkin axiomatization computationally adequate domain theoretic models fpc logic computer science ieee computer society press pp 

george ha havelund milne bendix nielson wagner raise speci cation language prentice hall 
henkin completeness rst order functional calculus symbolic logic 
lambek scott higher order categorical logic cambridge university press 
lawvere functorial semantics algebraic theories proc 
natl 
acad 
sci 
usa 
linton aspects equational categories proc 
conf 

algebra la jolla pp 

mac lane categories working mathematician springer 
moggi categories partial morphisms calculus category theory computer programming lncs vol 
springer pp 

partial lambda calculus ph thesis university edinburgh 
mosses casl guided tour design workshop datatypes lncs vol 
springer pp 

poign algebra categorically category theory computer programming lncs vol 
springer pp 

robinson rosolini categories partial maps inform 
comput 

schr oder classifying categories partial higher order logic progress 
schr oder mossakowski tarlecki amalgamation enriched casl signatures automata languages programming lect 
notes comp 
sci vol 
springer pp 

seely locally cartesian closed categories type theory math 
proc 
cambridge philos 
soc 

categorical semantics higher order polymorphic lambda symbolic logic 
