auld leaky contextual open hypermedia link server david millard mark david de roure intelligence agents multimedia dept electronics computer science university southampton dtm dem ecs soton ac uk 
open hypermedia systems working group lead creation hypermedia models common protocol navigational hypertext 
include working model context 
extended fundamental open hypermedia model fohm include context behaviour 
auld leaky lightweight contextual link server stores serves structures represented fohm context filter query results 
open hypermedia systems working group spent years developing defining open hypermedia protocol attempt achieve interoperability open hypermedia systems 
development effort relied definition suitable hypermedia model protocol text api manipulate 
hypermedia wide field protocol split different domains navigational spacial taxonomic nav developed text protocol addressed navigational domain 
argued community concentrated model protocol particularly areas model including context behaviour computation formally agreed 
individual research groups taken nav model extended 
iam group southampton developed fundamental open hypermedia model fohm model capable representing structures discussed domains 
fohm intended include context behaviour turned attention producing firm definition context fohm producing contextual link server flexible general projects lab 
version link server known auld currently known auld leaky 
requirements construction auld leaky began set simple requirements 
main goal creating simple link server easily installed 
meant aiming single executable simple api 
wanted link server lightweight possible require large infrastructures databases middleware systems 
link server just serve links need access external services 
importantly link server needed act contextually 
envisaged extending fohm allow context behaviour objects attached hypermedia objects 
fohm interoperability considered requirements domains hypertext 
frequently mentioned navigational spatial taxonomic hypertext 
protocol concerned navigational hypertext fohm nav data model capable expressing domains 
model fohm describe class objects analogous objects data model 
associations structures represent relationships data objects 
data objects wrappers piece data lies outside scope model 
normally represent document represent file stream item 
data objects directly placed associations 
objects point data objects entirety parts data objects example second paragraph text document second scene film 
attached association object bindings 
association structure type feature space binding state position feature space effectively stating bound association structure 
fohm navigational structure illustrated 
essentially association relates different objects 
bindings attach association 
point objects system 
illustration objects items data point associations 
navigational hypertext fohm navigational hypertext common domains represented fohm 
notion directed links modelled easily single association feature direction data objects bound source destination bi directional value 
shows navigational structure described fohm model case links 
link different data objects referenced entirety second link area document different areas second document 
notice associations share share data objects 
dest supports src dest bi auld leaky dest fig 

link structures fohm dest explains bi dest src auld leaky implementation written perl consists number components compiled single executable 
core built fohm implementation provides basic container objects apis matching structures 
fohm objects grouped linkbases managed link server 
link server provides apis storing looking querying stored linkbases 
final component consists module expose link server webserver process xml 
communication auld leaky communicates fohm structures serialised xml 
sent connections 
similar web server leaky responds standard request types get requests sent id simple string relevant object located linkbase returned form xml 
post requests sent fohm object content message 
pattern matched objects linkbase explained section 
put requests sent fohm object content message 
leaky adds object linkbase 
delete requests sent id relevant object located linkbase removed 
pattern matching basic mechanism querying auld leaky pattern matching 
perform query fohm structure constructed matched structure stored link server 
matching structures proceeds tree prefix depth search meaning matching fohm objects attributes matched followed matching sub objects 
matching immediately fails attribute object matching fails 
order facilitate powerful queries add extra attributes fohm objects 
firstly attribute called state indicates nature structure respect matching 
attribute values undefined defined indicate particular object defined state undefined means set null 
third state variable marks object variable 
variables objects match object type currently anonymous contain form constraint allow complex matching 
current implementation allows constraints expressed perl expressions utilising perl eval constraint languages suitable evaluators 
fourth value state lookup linkbase loading matching purposes 
linkbase loading discussed section 
whilst state attribute sufficient constructing queries lead quite verbose structures 
specifically queries contain just concrete values remaining values variable just set example author want create association description attribute 
avoid introduce extra attribute values variable undefined 
attribute indicates state field object assume field unspecified 
note query objects fohm structures means store linkbases 
matching bindings bindings contained association special case matching purposes 
bindings association bag binding objects 
presents problem matching algorithm choice 
fohm structures strict correspondence objects structure matched 
match binding objects employ exhaustive search algorithm try find solution bindings matched binding association 
algorithm uses recursive method attempting match binding available binding association 
successful match bindings marked unavailable recursive call 
recursive call returns unsuccessfully matching continues available binding routine fails 
recursive call returns successfully configuration binding matches bindings matched 
binding objects extra attributes control matched 
optional attribute indicates binding matched binding 
matching algorithm attribute simply means ignore optional bindings return successfully optional bindings remain unmatched 
attribute allows binding matched 
typically match associations number bindings unknown 
example right hand association abi directional binding 
query find links source document include binding include variable binding destination bindings match 
case variable binding marked repeatable match number destination bindings 
querying process performing query entails constructing fohm structure pattern matching making post call link server 
link server receives xml data converts internal fohm structure 
matched object linkbase matches accumulated 
possible query specify linkbase scope search specifying restrictive path request 
matching results converted xml returned client 
client typically reconstruct results back fohm objects 
linkbases naming loading associations data objects class fohm id value 
linkbases collections fohm structures 
try preserve url semantics object referenced port linkbase name object id naming scheme linkbases author hierarchy appropriate consistent url scheme 
structures local identifiers denoted value 
local identifiers structures identity need referenced cyclic structures 
identifier valid scope communication 
links typically loaded auld leaky service started stored put method 
note link servers load structures urls possible url supplied points link server possibly query 
structures stored objects lookup value state attribute 
attribute structures indicates destination 
primarily lookup structures shared objects separating fohm structures easier authoring linkbases 
open issue action linkbase faced unknown identifier 
id url leads number distributed link service possibilities 
simplest case link server just store unknown object type known 
resolved client 
matching process clear link server treat 
link server faced problem matching known fohm object just 
just assume structure matches client decide 
alternative link server query remote link server passing structure matched kind distributed search query 
sounds quite attractive required points link server capable performing query 
approach subject 
alternative solution problem lookup object specified location store structure locally 
structure loaded link server server load remote structures referenced data requires 
process possibly recursive 
link server effectively copy actual remote structures raises number caching consistency issues 
solution mean link server able perform matching 
context behaviour context behaviour objects attached parts fohm structure shown 
objects opaque fohm description defined separately 
link server deals fohm structures required understand context definitions behaviour objects clients need understood served 
context association binding data link src dest dest text text text fig 

context placement fohm data structures auld leaky implements context object fohm structures set key value pairs called 
relatively simple mechanism representing context deceptively powerful 
shows example context object 
context object information identified 
value context item location office 

value context item important true 

context item time constraint attached defines time 
time context interesting example 
notice type object specified time represented string 
context key location office key important true key time state variable constraint gt constraint constraint constraint context fig 

xml representation context object behaviour event display key true behaviour behaviour event traversal key time behaviour fig 

xml representation behaviour object constraint attached 
constraints element default matching string comparison sufficient case invoking greater comparison 
context object perl constraint indicates successful match requires key exist 
behaviour objects implemented auld leaky way context objects 
example shows behaviour objects 
attached data object 
behaviour object event type associated 
case event display indicate behaviour carried object displayed 
client dependant way enforced auld leaky 
case client interprets behaviour way display data item sets flag clients context true 
second behaviour object attached association object 
event traversal display 
client follows association value time client context increased minutes 
behaviour objects fairly simple result modifications client user context carry matching application 
behaviour object need way just easily constructed trigger additional events system allow objects express specifics displayed 
querying context important ways context auld leaky 
firstly context objects attached fohm structures possible attach structures sent queries structures match contexts match 
secondly context objects attached queries 
context object acts filter query results 
objects returned query matching matched supplied query context 
objects context match query context removed result set 
context matching filters fohm structures sub objects removed 
example means binding matches context data object binds binding data object joins removed results set 
issue raised context filtering structure filtered longer match original query 
example query required source binding particular url find due filtering source bindings removed 
solution problem re match structures get filtered original query 
applications allowing contextual filtering navigational links possible auld leaky contextual structural engine drive novel applications 
section shall briefly explain things exploring 
hypertext short stories applications constructed auld leaky cgi hypertext story engine 
constructs short stories reader fly data links stored linkbase 
maintains user profile form context uses find appropriate story fragment 
story constructed fragments text 
stored data objects linkbase 
link story fragments associations exist linkbase 
associations contain source binding totally generic match data item 
association context attached 
client constructing story queries linkbase user context returned associations match context 
shows association structure application 
story fragments directly linked 
client uses current readers context offer reader selection story fragments view 
viewing story fragment modify readers context behaviour objects context link src dest fig 

short story link story fragment attached association data objects resulting different set fragments offered time 
currently context behaviour way keeping track time characters plot progression example restrict basic exposition background information story scene set 
contextual information systems auld leaky way accessing factual information 
designed applet dynamically built document history city glasgow 
interest preferences user selected choosing areas culture industry government 
alongside web server served applet ran copy auld leaky responsible providing necessary fohm structures applet 
dynamic document represented fohm tour means tour compiled single document 
item tour secondary association call level detail lod 
lod list contained data items ordered length 
context objects attached data item described relevant item interest 
applet uses interests selected user construct user context queries tour 
returns tour lod included data items match context removed 
applet uses highest positioned data item lod build dynamic document 
shows screen shot applet 
user set sliders left represent interests applet dynamically built document describing history glasgow right tour lod structures served leaky 
fig 

level detail applet auld leaky contextual link server architecturally light ability manipulate structures multiple hypertext domains consistent way 
leaky context behaviour quite sophisticated actual model context vector key value pairs simple 
currently working produce complex ontology context semantics relationships context objects explicit 
architectural simplicity leaky ideal component peer peer distributed system 
number opportunities incorporating distributed aspects link service 
particular needs provide strong naming strategy investigate issues caching structures 
addition identified number interesting distributed query issues need explored 
interested developing context 
particular regard narrative structures looking context produce dynamically generated tours material tour contains narrative structure recognisable middle 
dynamic guides tailored users interests may vary required length user request minute description 
glasgow applet hypertext story engine represent initial area 

kenneth anderson richard taylor james whitehead 
chimera hypertext heterogeneous software environments 
echt 
proceedings acm european conference hypermedia technology sept edinburgh scotland uk pages 

tim berners lee robert cailliau luotonen henrik frystyk nielsen secret 
world wide web 
communications acm 

hugh davis siegfried reich david millard 
proposal common navigational hypertext protocol 
technical report dept electronics computer science 
open hypermedia system working group meeting 
aarhus university denmark 
september 

parunak van dyke 
don link set hypermedia taxonomic reasoning 
proceedings acm conference hypertext dec san antonio tx pages 

parunak van dyke 
hypercubes grow trees observations land 
proceedings acm conference hypertext nov seattle wa pages 

andrew fountain wendy hall ian heath hugh davis 
microcosm open model hypermedia dynamic linking 
streitz andr editors hypertext concepts systems applications proceedings echt pages 
cambridge university press 

gr nb randall trigg 
design issues dexter hypermedia system 
communications acm february 

catherine marshall frank shipman 
spatial hypertext designing change 
communications acm 

catherine marshall frank shipman 
spatial hypertext practice information triage 
proceedings acm conference hypertext april southampton uk pages 

david millard hugh davis 
navigating spaces semantics cross domain interoperability 
siegfried reich kenneth anderson editors sc proceedings published lecture notes computer science lncs springer verlag heidelberg issn pages 

david millard hugh davis luc moreau 
standardizing hypertext 
siegfried reich kenneth anderson editors sc proceedings published lecture notes computer science lncs springer verlag heidelberg issn pages 

david millard luc moreau hugh davis siegfried reich 
fohm fundamental open hypertext model investigating interoperability hypertext domains 
proceedings acm conference hypertext may june san antonio tx pages 

peter erich schneider john leggett 
designing digital libraries hyper literate age 
journal universal computer science 

reinert dirk lassen claus pedersen peter 
collaborative open spatial structure service component incremental spatial parsing 
proceedings acm conference hypertext february darmstadt germany pages february 

john john leggett david hicks peter alfredo nchez 
design implementation hb hyperbase management system 
electronic publishing origination dissemination design june 
