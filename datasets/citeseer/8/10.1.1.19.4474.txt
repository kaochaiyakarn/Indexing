electronic notes theoretical computer science url www elsevier nl locate entcs volume html pages relevance semantic subtyping dezani ciancaglini alain frisch dipartimento di informatica universita di torino corso torino italia mail dezani di departement informatique ecole normale superieure rue ulm paris france mail alain frisch ens fr dipartimento di matematica informatica universita di udine delle scienze udine italia mail dimi compare meyer minimal relevant logic approach subtyping introduced frisch castagna benzaken definition type system intersection union 
show functional core system notion subtyping defined purely set theoretical terms coincides relevant entailment logic years ago meyer introduced logical system minimal negation free relevant logic kripke style semantics 
shown semantics basically describes universe endowed application operator worlds functions formulas holding world types assignable corresponding function 
particular previously proved logic turns partially supported murst project murst project ist dart project ist project 
partially supported european fet contract myths ist 
partially supported murst napoli project ist dart project ist project 
published elsevier science dezani ciancaglini equivalent type system calculus defined studied sense valid formulas exactly types assignable system identity plays role possible worlds semantics real world 
immediately follows relevant entailment coincides natural subtyping relation 
type system introduced types conceptually simple set theoretic semantics mathematical complexity usually involved standard approaches reduced set theoretic arguments 
novelty approach lies particularly fact subtyping relation essential kind systems defined semantically syntactically typing algorithms directly derived semantics 
contribution show type system part minimal logic interpretation equivalent logic sense semantically defined subtyping relation coincides relevant entailment holds entails equivalently theorem generally types assignable identity exactly theorems think sheds light semantic subtyping system gives motivation definition subtyping arrow types expressed original formula derived natural semantic definition formula re obtained syntactically axioms rules providing better understanding meaning formula provides explicit decomposition formula entailment relation sense seen algorithmic version rules defining features constitute semantic subtyping system characterize new approach addressed comparison minimal relevant logic meaningful name indicates minimalist version type system 
organized follows 
section give informal hopefully intuitive account argument background 
section start technical part giving equivalent presentations deductive system la hilbert theory order relation unary relation section semantic approach defining subtyping extract mentioned essential formula recast setting similar formally define theory order relation unary relation main result equivalence stated theorem theorem formula valid theorem dezani ciancaglini immediate corollary corollary formula entails formula subtype sections dedicated proof equivalence section prove reversibility distinguishing rule predicted formula reversible rule syntactical tool section draw short indicating possible directions 
intuition class models type systems intersection union subtyping defined types interpreted subsets universal set union intersection subtyping interpreted obvious set theoretic counterparts 
addition interpretation function types intersections unions arrow types required satisfy constraint roughly expressed follows 
subtyping order defined set inclusion isomorphic holding setting arrow types interpreted sets extensional partial functions definition set partial functions intersections unions arrow types interpreted corresponding set operations 
course usual cardinality reasons set interpretations function types coincide subset models proper sense satisfying condition proved exist particular universal model built finite approximations functions 
abstracts nature semantic domain functions function types interpreted keeping set theoretical types interpreted sets typing judgement set membership definition may written interpretation domain function types di erently chosen di erent semantic theories 
examples set theoretic semantics type systems calculus semantics simple semantics dezani ciancaglini generally called inference semantics assume definition di erent specification 
observe abstracts semantics typing judgement associates type term definition simply condition minimal condition satisfied notion function function type 
definition property shown hold implies write consequent set membership relation assuming antecedent final implication easily proved cases ii iii symmetrical inference semantics may depend assume constant 
dezani ciancaglini syntactic translation property precisely extension finite sets intersections unions proved hold semantic subtyping system proved conjunction reverse implication equivalent sketched set theoretic semantic characterization means extensional functions 
hand denote id identity function id function id element set id id id id id property holds id seen id id syntactic counterparts properties hold simple type assignment system constructs semantic subtyping languages identity function expressible means expression id id id id ii id id iii id known analogy interpret logic formulae types addition subtyping relation logical entailment properties exactly translate inference rules third call relevant deduction theorem statement independent semantic definition entailment may proved hold alternatively may merely assumed definition syntactic entailment chosen clarity self containment 
notice id denotation id dezani ciancaglini set classes equivalent formulae distributive lattice entailment relation semantic subtyping set type interpretations set inclusion equivalence minimal relevant logic functional core semantic subtyping relies equivalence distributive lattices remaining axioms rules extended version property 
shown rest formal setting intended correspond intuitive content just described 
positive minimal relevant logic definition language language defined syntax denote atomic formulae propositional variables 
writing formulas take precedence 
logic usually means deductive system la hilbert consisting axioms axiom schemes rules 
equivalent definition 
definition positive minimal relevant logic refl 
dist 
pre 
suf 
course symbol inference rules classical 
meta implication formula theorem valid final formula sequence element instance axiom instance consequent rule correspondingly instantiated antecedents occur dezani ciancaglini previously sequence 
write statement theorem presentation interesting notion deduction premises meta implication classical internalized relevant arrow logic deduction theorem connecting 
notion entailment semantically defined la kripke interpretations denote symbol usual somewhat spirit hint fact entailment usual pre order relation 
syntactical correspondent entailment principal arrow formula soundness completeness hold sense formula entails formula theorem take equivalence definition entailment relation 
symbol denote logical equivalence 
course entailment order relation set classes logically equivalent formulae distributive lattice seen axioms rules 
logic viewed theory equality definition theory order relation unary relation consists axioms distributive lattices order relation intersection union respectively meet join operations distributivity law reader convenience report definition kripke semantics 
definition kripke style possible worlds semantics define model structure structure set worlds ternary relation valuation model structure function set variables set subsets valuation extended interpretation set formulas follows ii iii iv 
say entails valuations model structures 
dezani ciancaglini ii additional axioms rules 

mp pre suf iii entailment rule relating predicate relation ent 
agreement statement new forms axioms obtained original ones replacing principal arrow entailment 
semantic subtyping generic type language considered quite independently programming languages may applied basic function product types includes universal empty type intersection union complement types recursive types 
anticipated section order define meaningful subtyping relation type algebra set theoretic semantics defined types interpreted subsets universal set type operations intersection union complement interpreted set operations subtyping simply corresponds set inclusion 
explicitly said nature elements sets cartesian products course isomorphic actual cartesian products 
particular explicitly said nature function types appropriate describing sets functions example allowing subject reduction reasonable language hold 
semantic definition subtyping required satisfy constraints implicitly restrict interpretation arrow types actual function sets 
obtained particular condition asserts subtyping behave arrow types interpreted sets binary relations graphs possibly non deterministic non terminating functions may raise type error formally denotes structure types interpreted extensional interpretation arrow type set graphs imply 
set theoretic manipulations allow dezani ciancaglini derive syntactic characterization subtyping relation intersection union arrow types finite sets arrow types equivalence holds 

condition context standard set properties turns equivalent axioms rules type system features absent easily dropped framework empty universal types type variables atomic types quite di erent type variables instance intersect arrow type natural notion theorem speak types identity programming language refer directly relate systems 
order isolate essential connection semantic subtyping minimal relevant logic just pick rule show equivalent axioms rules pre suf presence axioms rules universal empty type type language finite sets formulae non empty empty rightmost disjunction read 
minimal core semantic subtyping system wish study theory equality defined follows 
definition theory order relation unary relation consists axioms distributive lattices see definition ii rules mpt rule 
formulae defined 
iii entailment rule ent 
dezani ciancaglini axiom rules concerning may interpreted miniature type assignment system programming language single term identity mp classical subsumption intersection rules 
call theorems theorems relation section prove reversibility rule means consider full implication rule get equivalent theory 
theorems theorems theorem formula language valid theorem proof 
show pre suf derivable easily seen mere instances 
particular axiom obtained proposition trivially true consequence axiom analogous 
proof rules pre suf obtained propositions respectively implication gives pre suf theorems theorems prove converse theorem su cient prove rule translation holds fixing prove statement dezani ciancaglini 
introduce preliminary definition sets indices related proposition prove lemma concerns 
definition sets sets subsets defined follows 
elementary properties listed lemma immediately derived 
lemma 
ii 
iii 
iv 

vi proof 
ii iii vi trivial 
iv 
suppose 
iii contradiction 
usual distributivity law axiom dist holding classical logics applied arbitrary number conjunctions disjunctions may expressed follows 

set sets indices 


example dezani ciancaglini lemma sets indices defined definition property holds proof 
proof distributivity write 

prove set 

observe contains allows easily prove suppose definition observation obviously absurd 
immediately conclude 
ii proof sets indices independently definitions respectively union intersection conclude proof 
lemma proof 

dezani ciancaglini rule suf rule rule pre rule lemma rule suf get immediately theorem formula language theorem valid formula reversibility rule section prove reversibility rule theory implication equivalence reason classical stratification approach 
stratification disjunctive conjunctive normal forms able prove properties system useful introduce classical logics conjunctive disjunctive normal forms specialized inference rules give main definitions results 
definition stratified normal forms stratified forms conjunctive normal forms disjunctive normal forms formulas specified simple grammar atomic formula dezani ciancaglini denote respective sets stratified formulae usually write formula simply transformations arbitrary formulae conjunctive disjunctive normal forms defined expected 
definition maps defined simultaneous induction structure formulae ii iii iv vi define specialized inference rules entailment stratified formulae 
definition entailment stratified forms relations preorders lemma reflexive transitive 
proof 
induction definition dezani ciancaglini proposition states conjunctive disjunctive normal forms logically equivalent specialized relations restrictions respective sets proposition 
ii 
iii 
proof 
induction 
induction hypothesis repeated rules pre suf conclude ii straightforward induction definition 
iii implications immediate consequences ii 
prove induction 
cases simple computations 
example case 


converse proposition ii false example just axiom strong disjunction lemma arrows step prove translation get rid lemma lemma entailment holds exists holds 
dezani ciancaglini proof 
part trivial join lattice order 
part observe disjunctive conjunctive normal form arrow type disjunction 
definition iii definition proof core notation section prove 
lemma logic property holds 
proof 
ii iii iv definition lemma assumption definition entailment stratified forms derives get dezani ciancaglini condition prove condition assume show ii obtain stratified entailment 
contraposition 

applying line statement obtains 
entails definition iii iv equivalence minimal relevant logic minimal functional core semantic subtyping clearly connected common basic aspect systems 
hand relevant logic shown developed corresponds curry howard analogy natural type system calculus intersection union subtyping 
reflected particular functional character kripke semantics notion application worlds naturally arises addition usual notion application terms proofs 
hand set theoretic characterization functional types basically analogous definition calculus type theories intersection arrow proved coppo exactly characterize set continuous functions filter models 
natural directions study analogous characterizations filter models hold functional type system semantic subtyping presence union operation time analysis fundamental correspondence relevant logic systems set type systems 
dezani ciancaglini anderson belnap jr dunn 
entailment princeton 
van bakel dezani ciancaglini de 
minimal relevant logic call value lambda calculus technical report tr arp australian national university 
dezani ciancaglini intersection union types 
tacs lecture notes computer science springer verlag berlin 
dezani ciancaglini de 
intersection union types syntax semantics 
information computation 
barendregt coppo dezani ciancaglini 
filter lambda model completeness type assignment 
journal symbolic logic 

parallel deductions intersection types 
electronic notes theoretical computer science volume 
elsevier science publishers 
coppo dezani ciancaglini honsell longo 
extended type structures filter lambda models 
logic colloquium north holland amsterdam 
dezani ciancaglini 
relevance intersection union types 
notre dame journal formal logic 
dezani ciancaglini meyer 
semantics entailment omega 
technical report tr arp australian national university 
hindley 
curry type rules complete respect semantics 
theoretical computer science 
frisch castagna benzaken 
semantic subtyping 
th ieee symposium logic computer science 
ieee computer society press 
appear 
mitchell 
polymorphic type inference containment 
information computation 
meyer 
semantics entailment iii 
journal philosophical logic 

intersection types logical formulae 
journal logic computation 

