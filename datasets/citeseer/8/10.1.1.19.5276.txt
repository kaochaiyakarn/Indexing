kavraki latombe jean claude department computer rice university houston tx department computer science stanford university stanford ca planner prm applied success multiple planning problems involving robots degrees freedom dof operating known static environments 
describes planner reports experimental theoretical results related performance 
prm computation consists preprocessing query phase 
preprocessing done environment generates roadmap randomly properly selected collision free configurations nodes 
planning connects initial final configurations robot nodes roadmap computes path roadmap nodes 
planner able find paths involving robots dof fraction second relatively short times preprocessing dozen seconds 
theoretical analysis prm algorithm provides bounds number roadmap nodes needed solving planning problems spaces certain geometric properties 
number theoretical results unified framework 
path planning robots known static workspaces studied extensively decades lat 
renewed interest developing planners applied robots degrees freedom dof say 
sample contributed book 
editor smith john wiley sons page proofs john wiley sons sty kavraki latombe increasing number practical problems involve robots effective motion planning methods available solve 
robotics planning dof increasingly important emerging applications computer graphic animation motion planning drastically reduce amount data input human animators molecular biology motion planning compute motions molecules modeled spatial linkages dof docking molecules kav 
describe probabilistic roadmap planner prm 
planner applied success multiple planning problems involving robots dof moving static environments 
prm computation organized phases preprocessing phase query phase 
preprocessing phase probabilistic roadmap constructed repeatedly generating random free configurations robot connecting configurations simple fast motion planner 
call planner local planner 
roadmap formed free configuration space space lp robot stored undirected graph 
configurations nodes graph paths computed local planner graph edges 
phase concluded processing selectively adds nodes parts free space goal improving roadmap connectivity 
preprocessing phase multiple queries answered 
query asks path free configurations robot 
answer query prm attempts find path start goal configurations nodes roadmap 
graph search performed find sequence edges connecting nodes roadmap 
concatenation successive path segments transforms sequence feasible path robot 
snapshots path produced prm rigid dof robot shown 
describe prm algorithm evolved previous kav kl kl report number experimental results 
discuss theoretical analysis planner developed outline unified framework analysis 
particular discuss notion goodness properties bkl evaluate performance prm assumption goodness solution space goodness planned path 
organization follows 
section gives overview previous research relates research 
section describes prm general terms focusing specific type robot 
preprocessing query phases discussed detail 
section experiments rigid articulated robots 
section presents unified framework analyzing performance prm outlines number theoretical results 
section summarizes 
relation previous robot path planning proven hard problem rei 
strong evidence solution requires exponential time number dimensions space number degrees freedom robot 
reader referred lat overview complexity complete planners related hardness results 
renewed interest developing practical path planners lat bkl 
planners embed weaker notions completeness probabilistic completeness partially adapted specific problem domains order boost page proofs john wiley sons sty probabilistic roadmaps robot path planning dof rigid robot moving narrow door 
performance domains 
impressive results obtained potential field methods 
methods attractive heuristic function guiding search path potential field easily adapted specific problem solved particular obstacles goal configuration 
main disadvantage planners presence local minima potential fields 
minima may difficult escape 
local minima free potential functions called navigation functions defined rk bl 
functions expensive compute high dimensional dof robots 
successful potential field planners robots dof described ft 
planner employs learning scheme avoid falling local minima potential field applied success robots dof 
bookkeeping done learning phase impractical dof grow larger 
techniques computing potential functions escaping local minima highdimensional spaces bl bll 
randomized path planner rpp described bl escapes local minima executing random walks 
analysis planner initiated ll 
rpp solved difficult problems involving robots dof 
practice results plan motions performing operations plane plan disassembly operations maintenance aircraft engines cl 
additionally rpp embedded larger manipulation planner automatically animate scenes involving human figures modeled dof 
examples identified rpp behaves poorly cg 
examples rpp falls local minima basins attraction bounded obstacles narrow passages escape 
probability random walk finds way passage zero potential functions prevent happening time consuming 
interesting lines include method bf variational dynamic programming approach tackle problems similar complexity problems solved rpp 
gg gz sequential framework backtracking proposed serial manipulators ch motion planner performance proportional task difficulty developed arbitrary dof robots operating cluttered environments 
planner kon finds paths dof manipulators heuristic search techniques limit part space explored planner page proofs john wiley sons sty kavraki latombe utilizes genetic algorithms help search path high dimensional 
parallel processing techniques investigated cg lpo 
hybrid methods discussed 
planning method differs significantly methods referenced part potential field cell decomposition approaches 
prm applies roadmap approach lat constructs roadmap paths free space 
previous roadmap methods include voronoi diagram oy silhouette methods 
methods compute roadmap completely represents connectivity free space 
visibility graph voronoi diagram methods limited low dimensional spaces 
silhouette method applies spaces dimension complexity little practical 
roadmaps built incrementally planners 
planner cl incrementally builds skeleton space local opportunistic strategy 
inspired approaches rc cb construct retracts free space sensor data assume static environment robot moves known priori 
approach che builds sparse network robot subgoals simple computationally expensive planner 
randomized techniques prm initially kl kl 
parallel independent done ove 
common groups published 
hst done independently describes ideas similar prm 
applications non holonomic robots investigated sve 
applications dof holonomic robots discussed kav kl kl 
theoretical analysis prm initiated bkl presents prm context randomized approaches robot path planning hlm extends prm new planner able deal difficult assembly problems 
prm planner describe prm general terms holonomic robot focusing specific type robot 
preprocessing phase data structure called roadmap constructed probabilistic way scene 
roadmap undirected graph nodes set configurations robot appropriately chosen free space 
edges correspond simple paths edge nodes corresponds feasible path connecting relevant configurations 
paths refer local paths computed extremely fast powerful planner called local planner 
query phase roadmap solve individual path planning problems input scene 
start configuration goal configuration method tries connect nodes successful searches sequence edges connecting transforms sequence feasible path robot recomputing corresponding local paths concatenating 
assume preprocessing phase entirely performed path planning query 
preprocessing query phases interwoven giving learning flavor prm 
instance small roadmap constructed roadmap augmented reduced intermediate data generated queries processed 
interesting possibility explored particularly useful conduct trial error experiments order decide page proofs john wiley sons sty probabilistic roadmaps robot path planning computation time spent preprocessing phase 
description denote robot space called free space 
preprocessing phase free subset preprocessing phase consists successive steps roadmap construction roadmap expansion roadmap component reduction 
objective construction step obtain reasonably connected graph sure difficult regions space contain nodes 
expansion step aimed improving connectivity graph 
selects nodes heuristic evaluator lie difficult regions expands graph generating additional nodes neighborhoods 
covering final roadmap depends local final step component reduction step optional included completeness 
roadmap construction initially graph empty 
repeatedly random free configuration generated added new node select number nodes current try connect local planner 
planner succeeds compute feasible path selected node edge added presentation precise symmetrical function returns local planner compute path configurations arguments function called distance function defining pseudo metric 
require symmetrical nondegenerate 
roadmap construction step algorithm outlined follows 

loop randomly chosen free configuration 

set candidate neighbors chosen 

forall order increasing 
connected component 

update connected components 
choices steps algorithm unspecified 
particular need define random configurations created step propose local planner clarify notion candidate neighbor choose distance function 
page proofs john wiley sons sty kavraki latombe creation random configurations 
nodes constitute uniform random sampling configuration obtained drawing coordinates interval allowed values corresponding dof uniform probability distribution interval 
obtained configuration checked collision 
collision free added discarded 
local planner 
issues need addressed local planner 
planner deterministic fast planner 
tradeoffs issues 
non deterministic planner local paths stored roadmap roadmap require space 
powerful local planner slower powerful successful finding paths require smaller number roadmap nodes 
best experimental results obtained local planner deterministic fast 
results independently confirmed ove sve 
quite general local planner applicable holonomic robots connects configurations straight line segment checks line segment collision joint limits 
verifying straight line segment remains joint limits straightforward 
collision checking done recursively decomposing line segment halves checking collision middle configuration prespecified resolution achieved bl 
node neighbors 
important choice set candidate neighbors local planner called connect nodes cumulative cost invocations dominates preprocessing time 
avoid calls local planner return failure submitting pairs configurations relative distance distance function smaller constant threshold maxdist 
define additionally algorithm outline try connect nodes order increasing distance skip nodes connected component time connection tried 
considering elements order expect maximize chances quickly connecting configurations consequently reduce number calls local planner successful connection results merging connected components 
experiments useful bound size set constant additional criterion guarantees worst case running time iteration main loop construction step algorithm independent current size roadmap number calls local method linear size graph constructs 
maxdist distance function 
function construct sort set candidate neighbors new node defined pair configurations reflects chance local planner fail compute feasible path configurations 
possibility define measure area volume workspace region swept robot moves path computed local planner absence obstacles 
local planner automatically induce specific distance function 
exact computation swept areas volumes tends time consuming rough page proofs john wiley sons sty probabilistic roadmaps robot path planning inexpensive measure swept region gives better practical results 
simple distance measures give results 
example general local planner described connect may defined follows robot denotes point robot position workspace robot configuration euclidean distance roadmap expansion number nodes generated construction step large set gives fairly uniform covering easy scenes connected 
constrained ones connected consists large components small ones 
effectively capture connectivity purpose expansion add nodes way facilitate formation large component comprising nodes possible help cover difficult narrow parts identification difficult parts simple matter heuristic propose clearly goes certain distance direction 
node graph construction define weight large difficult region 
additionally weights add call expansion node creation random node free neighborhood heuristic scheme propose 
add user specified number new nodes collection 
time choosing random choose node ones roadmap construction step generated probability selected expand node simplest way expand perform short walk starting random bounce walk consists repeatedly picking random direction motion moving direction obstacle hit 
collision occurs new random direction chosen 

repeat maximum number steps attained typically order 
final configuration reached random bounce walk edge inserted path computed explicitly stored generated non deterministic technique 
record fact belongs connected component try connect connected components network way construction step 
expansion step creates new components worst fails reduce number components 
repeat process times values creating new nodes function adequately identifies difficult parts heuristic tend fill parts 
essential choose carefully 
experiments results roadmap construction build define degree node number connections nodes roadmap construction 
page proofs john wiley sons sty kavraki latombe regard number measure difficulty space region node lies 
nodes low degree difficult parts crucial retain nodes may lie narrow passages may contribute producing connected roadmap component reduction typically roadmap expansion step yields connected component comprising produced nodes large 
course case connected 
difficult examples connected local planner failed achieve crucial connections 
difficult examples large components remain graph expansion 
choices 
continue adding nodes maximum amount time elapsed 
preferred course action problems prm quickly find large connected component captures connectivity underlying space 
second option completeness powerful planner attempt connections remaining components 
proceed follows 
components starting largest select pair nodes second close space metric 
implementation rpp bl called connect produces connection connected components merged new pair components considered 
fails produce connection short time bound different pair chosen new connection attempted 
way avoid getting stuck case may hard rpp impossible components path connected 
process repeated times pair components 
eventually rpp fails produce connection consider components connected retain 
connection paths computed step recorded recomputation relatively expensive 
query phase query phase paths arbitrary input start goal configurations roadmap constructed preprocessing phase 
assume moment connected roadmap consists single connected component try connect nodes respectively feasible paths fails query fails 
compute path connecting feasible path eventually constructed concatenating recomputed path corresponding reversed 
path may improved running smoothing algorithm 
possible smoothing techniques include selects random segments global path tries shortcut local planner method bg iteratively performs local geometric operations cutting triangle corners 
main question compute paths queries preferably terminate quasi instantaneously expensive algorithm desired 
page proofs john wiley sons sty probabilistic roadmaps robot path planning strategy connecting consider nodes order increasing distance try connect local planner connection succeeds allocated amount time elapsed 
connection attempts fail perform random bounce walks described section 
adding node random bounce walk roadmap try connect local planner 
soon successfully connected apply procedure connect reconstruction robot path sequence nodes reduces concatenation paths take robot adjacent nodes paths produced random bounce walks preprocessing phase stored relevant edges paths corresponding connections local planner recomputed 
general roadmap may consist connected components usually case connected 
may happen connected instance roadmap dense 
roadmap contains components try connect nodes component starting component closest connection component succeeds path constructed single component case 
method returns failure connect roadmap component 
examples roadmap consists components failure rapidly detected 
path planning queries fail frequently indication roadmap may adequately capture connectivity time spent preprocessing phase increased 
necessary construct new roadmap 
preprocessing phase incremental simply extend current roadmap resuming construction step algorithm expansion step algorithm starting current roadmap graph preprocessing query phases 
experimental results demonstrate application prm example detail briefly report performance couple examples 
experiments kav kl kl 
planner implemented experiments reported dec alpha workstation 
machine rated specfp specint 
articulated robot example planar articulated robot arbitrary number revolute joints 
illustrates robot links line segments 
shape links may polygon 
points designate revolute joints 
point denotes base robot may may fixed relative workspace 
point called endpoint robot 
rest revolute joints defined internal joint limits denoted robot base free translation bounded axes cartesian coordinate system embedded workspace page proofs john wiley sons sty kavraki latombe planar articulated robot 
respectively 
represent space link planar articulated robot base fixed base free 
self collision configuration configuration non adjacent links robot intersect 
allow configurations 
constrained obstacles set self collision configurations 
outline choices implementation prm different ones described section 
local planner 
planner section attempts connect configurations straight line articulated robots gives reasonably results 
planner proved better articulated robots 
configurations attempt connect points robot shown 
simultaneously translate second straight line workspace connects workspace position configuration workspace position configuration adjust positions computing inverse kinematics robot 
way follow motion initiated position determined 
determined moving dof robot specifies position straight line reaches desired value configuration motion robot collides obstacle joint reaches limit adjustment impossible planner fails 
planner generalizes directly articulated robots kind robot move dof certain direction adjust 
distance function 
denote position see robot configuration define distance configurations euclidean distance distance quick compute intuitive meaning articulated robots 
collision checking 
collision checking planar robots implemented discretized space bitmap link robot 
assume link robot free translate rotate precompute space bitmap explicitly represents free subset link space versus part gives rise collision obstacle 
testing collision prm tests link space bitmap fast 
technique practical workspaces workspaces require generation bitmaps 
examples discretize dof values compute space bitmaps fast fourier page proofs john wiley sons sty probabilistic roadmaps robot path planning articulated robot fixed base revolute joints 
collision avg 
success rate sec sec sec checks nodes prm applied revolute joint robot 
transform kav 
self collision link robot tested 
experiments 
shows configurations forming test set articulated robot scene narrow gates 
robot fixed base denoted square revolute dof 
table reports success rates connecting configurations test set roadmaps obtained different preprocessing times 
preprocessing time shown column 
broken times spent roadmap construction expansion columns respectively note approximately maxdist workspace number steps random bounce 
row independently generated roadmaps indicated preprocessing time 
roadmaps generated different rows computed page proofs john wiley sons sty kavraki latombe fixed base robot spherical joints dof 
independently roadmap row reused construct larger 
column gives average number performed preprocessing phase different preprocessing times 
column reports average number nodes runs largest roadmap component preprocessing phase 
largest connected component roadmap query processing 
columns labeled configurations seconds corresponding configuration produced roadmaps 
trial roadmap 
note preprocessing sec success rate connecting roadmap path planning succeed configurations connected roadmaps produced described section 
typically took small fraction second reconstruct path machine 

columns report success rate trying connect articulated robot show configurations dof articulated robot 
robot fixed base spherical joints 
creation random configurations distance function case 
local planner straight line planner collision checking done checking links robot page proofs john wiley sons sty probabilistic roadmaps robot path planning rigid robot dof 
obstacles 
example conducted similar experiments case approximately seconds needed produce roadmap adequately captures roadmap contained approximately nodes success rate queries higher allowing seconds process query 
rigid robot example shown 
rigid robot needs go small gate workspace 
robot case consists polyhedral links size rigidly attached 
workspace robot needs rotate going gate 
width gate determines difficulty problem 
implementation gate times wider smallest dimension robot link 
implementation choices remain case local planner straight line planner collision checking performed rapid 
similar experiments large number runs shown approximately hours required create roadmap configurations connected probability higher roadmap contained nodes average 
note preprocessing time drops tens minutes workspace gate times wider smallest dimension robot link 
page proofs john wiley sons sty kavraki latombe theoretical analysis intuitive reason experimental success prm usually exist collision free paths joining configurations 
bound running time prm assume satisfies geometric property capturing intuition 
propose properties 
thesis success sampling strategy stem similar property 
analyses consider key number affecting prm running time number nodes constructed roadmap 
generate single node necessary randomly pick possibly configurations implicitly assume volume relative volume small 
assumption satisfied variant roadmap algorithm section behave poorly 
case probably additional assumption free configurations query specify configurations possible sampling strategy build roadmap generating nodes small regions centered configurations newly generated nodes 
note bounding number nodes sufficient bound running time prm account running time local planner 
suppose nodes connected local planner path connecting arbitrarily close free space boundary 
local planner may break arbitrarily small segments bkl 
problem eliminated computing volume swept robot moves configurations straight path computation expensive 
basic prm analysis rid planner choices improve performance consider roadmap expansion step preprocessing 
call new planner basic prm 
nodes constructed roadmap 
say configuration see configuration connected local planner 
preprocessing step follows preprocessing 

pick configuration random 
store node roadmap 
ii 

pair nodes call local planner 

pick representative node component current roadmap 
set representative nodes 
invoke improve connectivity nodes see 
note steps roadmap construction step prm section step corresponds roadmap component reduction step section 
result page proofs john wiley sons sty probabilistic roadmaps robot path planning preprocessing roadmap components component step may fail find possible links nodes due incompleteness local planner 
invoked step fixes problem complex planner discover additional connections nodes 
assume complex planner error free discovers path configurations exists reports failure 
necessity complete planner expensive run seek sparingly 
query processing handled algorithm query processing 
exists node sees repeat times pick configuration uniformly random neighborhood sees node ii 
trials failed return failure halt 
component roadmap return return 
step differs slightly corresponding step query processing algorithm section 
picking configurations set requires guessing configurations space retaining seen means iterations performed step may require trials obtain configuration visible analysis proposed ignores trials focuses number difference algorithm section returns failure step ii 
due preprocessing answers correct 
probability query processing algorithm may fail give answer 
visibility assumption goodness configuration consist configurations sees 
denote volume subset definition positive real 
configuration furthermore visibility volume assumption configurations contains 
configuration sees significant portion underlying intuition relatively easy pick set nodes collectively see assumption fails prevent containing narrow passages difficult connect nodes 
example consider case dimensional consists disks equal size overlap small amount 
probability node disk sees node disk small 
reason need third step preprocessing prm employs powerful complex planner 
page proofs john wiley sons sty kavraki latombe performance guarantee preprocessing phase 
call set nodes complete volume subset visible nodes intuitively place point source light node illuminated 
fraction theorem assume real large 
constant positive chosen preprocessing generates complete set nodes probability proof theorem see 
note probability roadmap provide complete coverage decreases exponentially number nodes 
increases requirement complete set grows weaker portion free space visible node gets smaller 
intuitively comes fact greater easier connect query configurations roadmap 
naturally number nodes needed smaller 
theorem says visible node roadmap property show queries answered quickly theorem number iterations step query processing set constant complete set nodes chosen probability query processing outputs failure order ensure probability query processing outcomes need complex planner determine nodes reachable 
calling complex planner partition subsets nodes subset belong component nodes different subsets component size done invocations complex planner trying pair nodes randomized algorithm solving 
suppose components analysis algorithm shows worst case components equal expected cost giant component components size expected cost shown non deterministic lower bound 
visibility assumption roadmap connectedness goodness assumption prevent existence narrow passages presence narrow passages preprocessing may require considerable amount time build connected roadmap due calls complex planner 
intuitively happens small subset passage sees large fraction passage 
probability preprocessing pick nodes outside passage see small 
similarly probability picking node inside passage decreases passage gets narrower 
page proofs john wiley sons sty probabilistic roadmaps robot path planning remove need complex planner introduce notion 
define precisely kind roadmap preprocessing construct 
definition space 
roadmap nodes provide complete coverage components lie component adequate representation adequate representation component volume node lies component components lie component toone correspondence components refer subset points see large portion lookout previous example suggests characterize narrow passages minimum volume lookout visibility set set small lookout preprocessing difficulty computing roadmap capturing connectivity calling complex planner 
definition constant subset component free space lookout set lookout definition constants free space expansive lookout definition compute upper bound number nodes needed build adequate roadmap calling complex planner 
theorem assume chosen expansive 
constant preprocessing generates roadmap adequate representation probability proof theorem hlm 
significance twofold 
probability roadmap adequately represent decreases exponentially number nodes number nodes needed increases moderately decrease 
path clearance assumption assumption removes need complex planner path clearance assumption assume configurations query exists collision free path length achieves clearance robot obstacles 
page proofs john wiley sons sty kavraki latombe formally parametrize arc length initial configuration designate path total length define euclidean distance free space boundary consider version basic prm outlined section exception step 
query processing algorithm simpler considered section checks initial goal configurations see nodes roadmap 
connections fails query processing algorithm returns 
query processing algorithm deterministic 
path clearance assumption outcome incorrect 
probability willing tolerate event 
theorems relate size roadmap probability parameters path clearance assumption length hypothesized path clearance 
give performance guarantee planner 
theorem positive real constant 
constant denotes unit ball chosen planner outputs probability 
note quantity left side inequality tends zero important depends exponentially theorem similar previous clearance distribution just infimum theorem positive real constant 
constant theorem 
chosen planner outputs probability refer reader proof theorems 
relations imply number nodes planner generate output probability polynomial logarithmic described prm phase method solving robot motion planning problems static workspaces 
preprocessing phase prm constructs probabilistic roadmap collection configurations randomly selected free space 
query phase uses roadmap quickly process path planning queries specified pair configurations 
preprocessing phase includes heuristic evaluator identify difficult regions free space increase density roadmap regions 
page proofs john wiley sons sty feature enables construct roadmaps capture connectivity free 
method general applied virtually type holonomic robot described 
applications non holonomic robots sve 
method regarded learning approach interleaving preprocessing query processing phases 
analyses prm relate geometric properties solution space performance planner 
provided performance guarantees prm assumption goodness solution space goodness planned path 
done understand role key parameters prm find adjust automatically 
expansion step preprocessing phase deserves closer attention 
hope analysis prm contribute explaining excellent experimental results prm suggest sampling techniques improve performance planner 
challenging goal extend method dynamic scenes 
question roadmap computed workspace updated obstacles removed added 
question worth exploring method incorporate dynamic constraints motion robot 
acknowledgments supported daah 
kavraki currently partially supported nsf career award iri 
parts published kav kl kl bkl 
authors collaborators course especially michael rajeev motwani mark overmars raghavan petr 
bruce donald leo guibas danny halperin david hsu steve jean paul laumond useful discussion comments 
talbi bessi re mazer 
genetic algorithms robot motion planning 
th europ 
conf 

intelligence pages 
london england 
bf 
path planning variational dynamic programming 
proc 
ieee int 
conf 
robotics automation pages 
san diego ca 
bg berchtold 
scalable optimizer automatically generated manipulator motions 
proc 
ieee rsj gi int 
conf 
robots systems pages 
nchen germany 
bkl kavraki latombe li motwani raghavan 
random sampling scheme path planning 
int 
robotics research appear 
bl latombe 
robot motion planning distributed representation approach 
int 
robotics research 
bll latombe 
numerical potential field techniques robot path planning 
ieee tr 
syst man cybern 

canny 
complexity robot motion planning 
mit press cambridge ma 
cb 
sensor planning nonsmooth analysis 
proc 
ieee int 
conf 
robotics automation pages 
san diego ca 
page proofs john wiley sons sty cg gini 
parallel robot motion planning 
proc 
ieee int 
conf 
robotics automation pages 
atlanta ga ch chen hwang 
motion planner performance proportional task difficulty 
proc 
ieee int 
conf 
robotics automation pages 
nice france 
che chen 
improving path planning learning 
proc 
machine learning conference pages 
cl canny lin 
opportunistic global path planner 
proc 
ieee int 
conf 
robotics automation pages 
cincinnati oh 
cl chang li 
assembly maintainability study motion planning 
proc 
ieee int 
conf 
rob 
autom pages 
cameron qin mclean 
efficient motion planning manipulators complex geometry 
proc 
ieee int 
symposium assembly task planning pages 
ft 
practical approach motion planning manipulators degrees freedom 
miura 
eds robotics research pages 
mit press 
gg gupta guo 
motion planning degrees freedom sequential search backtracking 
ieee transactions robotics automation 
goldberg halperin latombe wilson 
eds algorithmic foundations robotics 
peters 
integration path generation algorithm line programming airbus panels 
tp sae 
gz gupta zhu 
practical motion planning degrees freedom novel approach sequential framework 
proc 
ieee int 
conf 
robotics automation pages 
san diego ca 
hlm hsu latombe motwani 
path planning expansive configuration spaces 
proc 
ieee int 
conf 
robotics automation 
minneapolis mn 
hst schwarz tolle 
motion planning degrees freedom random reflections space obstacles 
proc 
ieee int 
conf 
robotics automation pages 
san diego ca 
kav kavraki 
computation configuration space obstacles fast fourier transform 
proc 
ieee internat 
conf 
robotics automation pages 
atlanta ga kav kavraki 
random networks configuration space fast path planning 
phd thesis stanford university 
kav kavraki 
geometry discovery new ligands 
laumond 
overmars 
eds algorithms robotic motion manipulation pages 
peters 
koga kondo latombe 
planning motions intentions 
computer graphics siggraph pages 
kavraki latombe 
analysis probabilistic roadmaps path planning 
proc 
ieee int 
conf 
rob 
autom pages 
kl kavraki latombe 
randomized preprocessing configuration space fast path planning 
proc 
ieee int 
conf 
robotics automation pages 
san diego ca 
kl kavraki latombe 
randomized preprocessing configuration space path planning articulated robots 
proc 
ieee rsj gi int 
conf 
intelligent robots systems pages 
germany 
kavraki latombe motwani raghavan 
randomized page proofs john wiley sons sty query processing robot motion planning 
proc 
acm symp 
theory computing pages 
koditschek 
exact robot navigation means potential functions topological considerations 
proc 
ieee int 
conf 
robotics automation pages 
kon kondo 
motion planning degrees freedom bidirectional heuristic free space enumeration 
ieee tr 
robotics automation 
kavraki latombe overmars 
probabilistic roadmaps fast path planning high dimensional configuration spaces 
ieee tr 
rob 
autom 

lat latombe 
robot motion planning 
kluwer boston ma 
ll laumond 
expected complexity random path planning 
int 
conf 
robotics automation 
minneapolis mn 
lin manocha cohen gottschalk 
collision detection algorithms applications 
goldberg pages 
lp lozano rez 
spatial planning configuration space approach 
ieee tr 
computers 
lpo lozano rez 
parallel robot motion planning 
proc 
ieee int 
conf 
rob 
automation pages 
sacramento ca 
lozano rez wesley 
algorithm planning collision free paths polyhedral obstacles 
comm 
ac 
laumond jacobs 
motion planner car robots global local approach 
proc 
ieee internat 
workshop intell 
robot syst pages 
overmars 
probabilistic learning approach motion planning 
goldberg pages 
ove overmars 
random approach motion planning 
technical report ruu cs utrecht university 
oy yap 
retraction method planning motion dis 
algorithms 
rc canny 
space roadmaps local sensory data sensors look 
proc 
ieee int 
conf 
robotics pages 
san diego ca 
rei reif 
complexity mover problem generalizations 
proc 
th ieee symp 

comp 
sci pages 
rk koditschek 
exact robot navigation artificial potential functions 
ieee tr 
rob 
autom 

overmars 
motion planning car robots probabilistic learning approach 
int 
robotics research 
sve 
robot motion planning probabilistic road maps 
phd thesis utrecht university netherlands 
page proofs john wiley sons sty 
