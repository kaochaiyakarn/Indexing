approximation algorithms facility location problems david shmoys eva tardos karen new approximation algorithms facility location problems 
facility location problem study set locations may build facility warehouse cost building location furthermore set client locations stores require serviced facility client location assigned facility location cost ij incurred 
objective determine set locations open facilities minimize total facility assignment costs 
uncapacitated case facility service unlimited number clients capacitated case facility serve example clients 
models number closely related ones studied extensively operations research literature 
shall consider case assignment costs symmetric satisfy triangle inequality 
uncapacitated facility location give polynomial time algorithm finds solution factor optimal 
constant performance guarantee known problem 
approximation algorithms constant performance guarantees number capacitated models generalization level hierarchy facilities 
results filtering rounding technique lin vitter 
give randomized variant technique derandomized yield improved performance guarantees 
shall approximation algorithms variety facility location problems 
studied problems operations research literature uncapacitated facility location problem dating back kuehn hamburger manne early 
simplest form problem follows wish find optimal locations build facilities warehouses serve set client locations stores set locations facilities may built building facility location incurs cost client shmoys cs cornell edu 
school operations research industrial engineering department computer science cornell university ithaca ny 
research partially supported nsf ccr dms onr 
eva cs cornell edu 
department computer science school operations research industrial engineering cornell university ithaca ny 
research partially supported nsf dmi dms onr 
cs ruu nl 
department computer science utrecht university utrecht netherlands 
research partially supported nsf ccr esprit long term research project project alcom algorithms complexity information technology 
assigned facility incurring cost ij distance locations objective find solution minimum total cost 
main result approximation algorithm finds solution cost factor optimum provided distances locations symmetric satisfy triangle inequality 
approximation algorithm problem constant performance guarantee 
np hard problem studied perspective worst case performance guarantees probabilistic analysis average case performance polyhedral characterizations empirical investigation heuristics 
prominence literature due fact wide variety applications appealing simplicity 
extensive survey closely related problems reader referred textbook edited francis particular chapter corn nemhauser wolsey 
depth explanation results known models extensive discussion textbook nemhauser wolsey 
shall briefly survey results known approximation algorithms uncapacitated facility location problem 
ae approximation algorithm polynomial time algorithm finds feasible solution objective function value factor ae optimal 
hochbaum showed greedy algorithm log approximation algorithm problem provided instances verify analysis asymptotically tight 
provided stark contrast earlier results corn fisher nemhauser considered problem equivalent perspective optimization approximation objective find solution maximize difference assignment costs interpreted profits facility costs 
objective corn fisher nemhauser showed greedy algorithm effect came constant factor optimal 
justified variant application computing optimal strategy gaining profit interest accrued delays clearing checks original objective natural typical network design type setting uncapacitated facility location problem usually arises 
lin vitter gave elegant technique called filtering rounding fractional solutions linear programming relaxations application technique designing approximation algorithms gave log approximation algorithm uncapacitated facility location problem 
furthermore lin vitter considered median problem facility costs replaced constraint limits number facilities locations allowed build facilities serve locations objective minimize total assignment costs 
gave algorithm finds solution objective factor ffl optimum infeasible opens ffl ln facilities 
lin vitter showed special case median problem assignment costs symmetric satisfy triangle inequality find solution cost ffl times optimum ffl facilities 
problems discussed min sum problems sum assignment costs enters objective function 
stronger approximation results known min max facility location problems 
center problem min max analogue median problem builds facilities locations minimize maximum distance unselected location nearest facility 
hochbaum shmoys subsequently dyer frieze gave approximation algorithms problem gave extensions weighted variants 
bar ilan peleg considered capacitated variant facility serve locations gave approximation algorithm problem 
khuller improved give approximation algorithm :10.1.1.22.3865
considered variant build multiple facilities capacity location gave approximation algorithm 
results min sum facility location problems filtering rounding algorithms build results lin vitter 
addition algorithm uncapacitated facility location problem give approximation algorithms capacitated variants problem 
shall assume location demand serviced facility facility service total demand assigning locations facilities require location entire demand serviced unique facility allow client demand split open facilities 
settings give algorithm finds solution cost constant factor optimal uses facilities constant factor greater capacity proportionately expensive 
consider variant problem may build multiple facilities location capacity give approximation algorithm constant performance guarantee 
constants relatively small example setting may build multiple facilities location may split client demand facilities give approximation algorithm 
strongest performance guarantees randomized variant filtering technique lin vitter yields deterministic algorithms improved performance guarantees 
uncapacitated facility location problem section consider problem set locations ng distances ij subset locations may open facility subset locations assigned open facility location positive integral demand shipped assigned location 
location non negative cost opening facility cost assigning location open facility ij unit demand shipped 
shall assume costs non negative symmetric satisfy triangle inequality ij ji ij jk ik wish find feasible assignment location open facility minimize total cost incurred 
metric uncapacitated facility location problem 
problem stated integer program variable indicates facility opened location variable ij indicates location assigned facility minimize ij ij subject ij ij ij constraints ensure location assigned location constraints ensure location assigned location facility opened paid 
notational simplicity shall refer variables ij understanding ij similarly shall refer variables understanding case 
derive approximation algorithm uncapacitated facility location problem solving linear relaxation integer program rounding fractional solution integer solution increases cost relatively small constant factor 
rounding algorithm consists phases 
apply filtering rounding technique lin vitter obtain new fractional solution new solution property location fractionally assigned partially opened facility cost ij associated assignment big 
show fractional solution closeness property rounded near optimal integer solution 
consider linear relaxation integer program constraints replaced respectively ij shall say feasible solution linear program close satisfies property ij ij lemma proved applying filtering technique lin vitter 
feasible fractional solution shall define ff point ff location focus location permutation delta delta delta recall ij 
set ff ffg lemma ff fixed value interval 
feasible fractional solution find close feasible fractional solution polynomial time 
ff 
ff proof proof lemma quite simple 
ff ij ff ij clearly ff ff 
merely set ij ae ij ff ij ff set minf ffg 
definition set exactly ensure condition holds 
furthermore ff second condition hold 
straightforward calculation verifies feasible fractional solution 
fi ij ff definition ff implies ij gamma ff 
ij ij ij ij gamma ff ff equivalently ff gamma ff ij ij show exploit closeness property rounding fractional solutions near optimal integer solutions 
result generalizes similar claim lin vitter obtain results metric median problem 
lemma feasible fractional close solution find feasible integer close solution proof shall rounding algorithm prove yields lemma 
feasible fractional solution close 
algorithm iteratively converts solution close integer solution increasing total facility cost 
rounding solution near edges correspond positive components algorithm maintains feasible fractional solution initially set 
execution algorithm denote set partially opened facility locations current solution fi shall denote set locations assigned facilities ij implies iteration find location smallest denote location 
set facilities ij see fi ij assign location smallest denote location 
round values fy setting gamma fi denote set locations partially assigned locations fj ij assign location facility opened set ij empty location exists assigned round setting ij shall argue algorithm maintains properties feasible fractional solution ij ij ij ij properties certainly hold algorithm starts 
furthermore hold algorithm stops property vacuous proved lemma 
shall show properties maintained algorithm iteration 
property clearly maintained algorithm assigns location opened facility set variable set variable ij 
property trivially maintained algorithm sets variable ij interval adds location show property maintained iteration consider variable set 
examine situation start iteration depicted 
exist ij 
furthermore ij ij ij triangle inequality ij inequality follows choice property maintained algorithm 
show maintained note min ij inequality follows fact ij minimum set numbers weighted average 
ij inequality implies facility cost increases execution algorithm proves maintained 
note simple rounding performed empty maintains properties 
completes proof lemma 
start feasible fractional solution apply lemma get apply lemma resulting feasible integer solution facility cost ff hand location assignment cost ff gammaff ij ij combining bounds see total cost ij ij ff ff maxf ff gamma ff ij ij set ff see total cost factor cost 
rounding optimal solution linear relaxation get theorem 
theorem metric uncapacitated facility location problem filtering rounding yields approximation algorithm 
section give algorithm somewhat better performance guarantee refining analysis 
know extent inherent gap integer fractional optimal solutions formulation metric uncapacitated location problem 
capacitated facility location problem section consider case open facility assigned serve total demand positive integer 
show adapt algorithm uncapacitated case general setting 
uncapacitated case optimal value trivial find corresponding simply assign location location ij minimum possibilities 
capacitated case situation somewhat complicated 
variants problem depending location demand assigned facility demand may fractionally split completely open facility 
focus case 
optimal value problem finding minimum cost assignment satisfies location demand assigning open facility instance transportation problem 
review basics problem see textbook lawler 
briefly optimal solution problem polynomial time demands integers flow values ij solution integral 
example implies case demands integer distinction capacitated variants mentioned find assignment routes demand unique open facility 
algorithm rounding optimal solution linear programming relaxation 
linear programming relaxation identical uncapacitated case explicitly require impose capacity constraints ij uy possible design approximation algorithm capacitated problem solely linear programming relaxation ratio integer fractional optimal unbounded 
see consider instance locations distance fixed costs 
fractional solution set 
cost solution optimal integer solution cost 
allow near optimal solution slightly overuse facility clearly instance find integer solution cost nearly equal optimal fractional 
motivated discussion shall call algorithm metric capacitated facility location problem ae ae approximation algorithm finds polynomial time solution total cost factor ae true optimum facility expanded capacity ae cost ae section approximation algorithm 
express relaxation capacity constraint allowing ae feasible fractional solution modified linear program ae relaxed 
furthermore analogue integer solution relaxation ae relaxed solution additional property call ae relaxed integer solution really integer 
algorithm filtering rounding 
quite straightforward generalize lemma obtain result 
lemma ff fixed value interval 
feasible fractional solution find close fractional solution polynomial time 
ff 
ff 
ff relaxed 
hand rounding algorithm bit complicated uncapacitated algorithm takes great advantage fact capacities demand fractionally routed location ends assigned notation proof lemma 
prove analogue lemma 
lemma ae relaxed fractional close solution find ae relaxed integer close solution polynomial time proof describe rounding algorithm detail prove produces claimed solution 
uncapacitated case maintain solution algorithm gradually rounds initially set set set 
maintain set facilities due previous step equivalent restricting 
algorithm keeps track fraction demand location satisfied locations fi ij case set locations fi 
uncapacitated case restriction effect fi 
iteration select location minimum denote location 
fi ij fj ij open just facility open cheapest facilities denote set facilities 
update gamma update 
reset gamma iteration 
location total demand currently assigned locations ij demand rerouted go facilities problem assigning demand location facilities capable handling total demand instance transportation problem analogous discussion section 
analysis show feasible solution suffices natural exploit fact minimum cost solution polynomial time 
ij amount demand assigned optimal solution instance transportation problem 
update solution resetting ij ij ij gamma 
components remain unchanged 
empty satisfied half demand location assigning locations component 
compute solution claimed lemma simply ignore fi fraction demand assigned remaining facilities rescale part specifying assignment facilities reset reset ij ij gamma fi set set ij proof algorithm delivers suitable solution follows outline proof lemma 
show point empty algorithm maintains invariants ae relaxed solution 
course show algorithm defined 
iteration rely optimal solution input transportation problem show feasible solution exists input 
input transportation problem feasible solution provided total demand total supply 
show total demand total supply 
solution maintained algorithm ae relaxed solution satisfies inequality ij ij uy ij uy algorithm defined 
furthermore clear solution transportation problem precisely required maintain fact remains ae relaxed solution 
property maintained 
uncapacitated case property trivially maintained algorithm sets ij maintaining proof property identical proof uncapacitated case ij remains prove property maintained algorithm 
property true initially locations consider set locations removed iteration 
iteration set gamma iteration changed prove property maintained iteration suffices show inequality holds value start iteration 
observe selected order cheapest fixed costs provided joj 
set delta joj clearly joj 

furthermore implies fi ij ij ij conclude joj combining see delta delta holds property maintained 
consider situation empty 
point property implies ae multiply ensured exist see solution ae relaxed integer solution 
furthermore multiplied know holds final solution facility cost times cost completes proof lemma 
show combine lemmas obtain approximation algorithm capacitated facility location problem 
denote optimal solution linear relaxation capacitated facility location problem 
apply lemma obtain ff relaxed solution apply lemma yield ff relaxed integer solution 
open facility capacity assign fraction ij demand location facility cost solution ff furthermore assignment costs ij ij ff gamma ff ij ij solution total cost ff gamma ff ij ij set ff see total cost solution factor cost optimal solution linear relaxation 
solution ff relaxed obtain theorem 
theorem metric capacitated facility location problem filtering rounding yields approximation algorithm 
turn attention model entire demand location assigned facility 
shall call problem metric capacitated location problem unsplittable flows 
show solution algorithm theorem adjusted satisfy stringent condition slightly increasing performance guarantees 
extension model unsplittable flows rounding theorem shmoys tardos generalized assignment problem 
theorem explained follows 
suppose collection jobs assigned exactly machine set job assigned machine requires ij units processing incurs cost ij machine assigned jobs require total units processing total cost assignment part input 
aim decide feasible assignment 
assignment feasible solution linear program ij relaxation variable indicates job assigned machine ij ij ij ij ij ij shmoys tardos show feasible solution rounded polynomial time integer solution feasible right hand side relaxed max ij show apply rounding theorem produce solution capacitated version unsplittable flows 
consider algorithm theorem specifying choice ff 
suppose apply algorithm starting optimal solution linear relaxation capacitated facility location problem linear program 
algorithm delivers ff relaxed integer solution facility cost assignment cost respectively factor ff gamma ff analogous costs 
denote set facilities opened solution fi view facility machine processing capacity location job requires total units processing independent machine assigned incurs cost ij assigned machine facility set ij ij ij ij ij feasible solution linear program 
rounding theorem generalized assignment problem implies round integer solution facility assigned total demand max assignment cost solution ij ij ij ij gamma ff ij ij inequality follows 
note order exist feasible solution unsplittable flows demand assume instance property 
conclude rounded solution assigns total demand facility max consider solution see ff relaxed integer solution 
due final doubling empty see implies facility cost ff inequality follows 
compare solution optimal fractional solution started shown facility cost increases factor ff assignment cost increases factor gamma ff 
set ff bounds equal obtain theorem 
theorem metric capacitated facility location problem unsplittable flows filtering rounding yields approximation algorithm 
khuller introduced notion open multiple facilities capacity location context capacitated center problem :10.1.1.22.3865
obtain analogues theorems variant capacitated facility location problem 
words interested obtaining solutions integer 
start solving linear relaxation identical replace just lemma modified reflect obtain solution feasible new linear relaxation property ff lemma remains unaffected 
statement lemma modified longer require ae relaxed integer solution require solution integer 
apparently stronger claim obtained essentially proof 
modification needed initialization start algorithm set dy set maintains property initial rounding increases cost incurred facility location factor 
course longer need maintain property 
modified lemmas obtain analogue theorems 
theorem metric capacitated facility location problem multiple facilities allowed filtering rounding yields approximation algorithm splittable flows approximation algorithm unsplittable flows 
performance guarantees worse imposing additional restriction capacity location integer multiple wonder stated theorems stronger way 
reason maintaining capacity need introduce greater relaxation capacity bound 
example theorem produce dae relaxed solution simply ae relaxed solution 
level uncapacitated facility location problem general version facility location problems consider setting level hierarchy facilities 
level facility location problems considered extensively literature see example 
shall consider level version uncapacitated problem possible obtain similar extensions capacitated models 
level uncapacitated facility location problem set demand points set locations hub facilities built 
unit demand point shipped hub facility intermediate transit station denote set locations transit stations may built 
shall consider metric case unit cost shipping locations equal ij costs non negative symmetric satisfy triangle inequality ij jk ik location specified demand cost building hub facility location cost building transit station location unit demand location shipped location hub built location transit station built incurring shipping cost ij jk shall ijk denote shipping cost ij jk aim determine hubs transit stations build total building shipping cost minimized 
show extend theorem obtain approximation algorithm general model 
give linear programming relaxation level uncapacitated facility location problem 
variables linear program relaxations decision variables types variables variables ijk indicate demand location routed transit station location hub facility location variables indicate hub facility opened location variables indicate transit station opened location minimize ijk ijk subject ijk ijk ijk ijk single level setting show feasible solution linear relaxation integer program rounded integer solution objective function value times 
rounding algorithm closely resemble algorithm prove theorem 
modify definition close 
feasible solution linear relaxation said close satisfies property ijk ijk shall modify notion ff point 
location sort costs ijk pairs nondecreasing order add associated values ijk sorted order ff cost associated pair running sum ff 
straightforward obtain extension lemma 
lemma ff fixed value interval 
feasible fractional solution find close feasible fractional solution polynomial time 
ff 
ff 
ff analogous easy derive ff gamma ff ijk ijk prove analogue lemma 
lemma feasible fractional close solution find feasible integer close solution proof shall give rounding algorithm prove solution properties claimed lemma 
algorithm quite similar single level uncapacitated case 
maintain feasible fractional solution initialized 
maintain collection triples rounded ijk 
initially components equal 
maintain set locations participate triple kg iteration find location smallest denote location 
denote set pairs supply current solution ijk introduce notation locations occur pair sf fi ijk se fj ijk assign served facility transit station pair smallest denote pair 
round values fy sf setting sf gamma fi similarly set fz se setting se gamma fj denote set locations partially assigned locations se sf fk ijk sf se assign location facility opened transit station located reset ijk furthermore add empty location exists computed integer solution 
shall argue algorithm maintains properties feasible fractional solution ijk ijk ijk ijk ij properties certainly hold algorithm starts 
furthermore hold algorithm stops property vacuous proved lemma 
proof maintained similar proof property lemma main observation set set corresponding variables ijk 
new properties straightforward consequences way rounding algorithm proceeds 
prove consider triples ijk ij start algorithm 
triple placed iteration algorithm put 
algorithm changes component positive implies property holds 
prove consider triples ijk 
triples added iteration set variable corresponding triple words half proved 
proof second half exactly analogous 
proof property maintained similar proof lemma 
consider variable set iteration algorithm 
implies algorithm sets components index location iteration location minimum value furthermore start iteration know exists ijk sf se shall consider cases separately 
case sf follows sf exists 
implies show ijk suppose follows hand suppose 
know wish show triangle inequality bound total cost path followed path followed path ijk case se se exists jk 
know jk show ijk suppose jk follows hand suppose 
know bound cost path followed edge followed edge jk ijk shown property maintained 
show maintained note min ijk inequality follows fact minimum set convex combination 
ijk ijk imply ijk sf ijk sf ijk se ijk se sf se inequality implies total facility cost transit station cost increases execution algorithm proves maintained 
completes proof lemma 
combining lemmas manner identical way lemmas prove theorem obtain theorem 
theorem level uncapacitated facility location problem filtering rounding yields approximation algorithm 
randomized filtering algorithm section show choosing threshold ff random able obtain improved performance guarantees 
fact straightforward algorithms 
randomization spirit randomization scheduling algorithms chekuri motwani natarajan stein goemans 
facility location models discussed previous sections approximation algorithm particular choice ff evident consider algorithm choice ff 
model randomized algorithm quite easy state choose ff uniformly interval fi fi fixed optimize algorithm performance apply deterministic algorithm value ff 
intuition cutting uniform distribution point fi filtering step increases facility cost factor ff need bound ff 
analyze approach uncapacitated single level facility location problem 
core analyses simple lemma ff point cost function observed goemans 
goemans observation show implements ff point machine scheduling algorithm hall shmoys wein ff chosen probability density function ff ff performance guarantee improves shown direct approach 
independent schulz observation improved performance guarantees scheduling models 
lemma ff dff ij ij proof simplicity notation assume delta delta delta nj permutation identity 
function ff step function described follows 
delta delta delta indices ij 
function ff equal ff interval gamma 
wish compute area curve interval gamma area exactly delta total area exactly delta ij ij proves lemma 
show apply lemma 
fact proved filtering rounding algorithm theorem finds solution cost ff ff ff see equation 
see expected cost solution randomized algorithm ff ff ff ff fi gamma fi ff dff fi gamma fi ff dff ln fi gamma fi gamma fi ff dff ln fi gamma fi gamma fi ij ij wish choose fi minimize maxf ln fi gammafi gammafi set fi yield theorem 
theorem metric uncapacitated facility location problem randomized filtering rounding yields algorithm finds solution expected total cost factor gamma gamma optimum 
reinterpretation proof theorem ff selected random manner ff ff ae ij ij ae gammae gamma course consequence exist choice ff function greater expectation 
find ff ff ff ff minimized running deterministic filtering rounding algorithm ff ff assured finding solution expected performance guarantee 
fortunately step function nature ff particularly simple function minimize need check breakpoints step functions ff yields theorem 
theorem metric uncapacitated facility location problem filtering rounding yields approximation algorithm 
randomization derandomization technique applied theorems yielding somewhat improved constants performance guarantees 
capacitated case example choose ff uniformly interval fi fi chosen expected total cost solution algorithm ln fi gamma fi gamma fi ij ij optimal solution linear relaxation capacitated facility location problem 
set fi gamma see expected cost factor gamma gamma cost linear relaxation optimum 
solution algorithm guaranteed ff relaxed expectation maximum capacity facility ue ff gammae gamma algorithm focusing optimal choice ff respect bound cost solution simultaneously keep guarantee maximum capacity close expectation 
choosing ff interval gamma bound ff interval 
obtain theorem 
theorem metric capacitated facility location problem filtering rounding yields approximation algorithm 
approach applied theorems 
particular theorem performance guarantee improved gamma gamma theorem performance guarantees improved respectively theorem performance guarantee improved 
acknowledgments grateful michel goemans sharing randomized analysis machine scheduling algorithm ultimately led results section 
leung queyranne 
level uncapacitated facility location problem 
informs comput 

finding integer solutions linear programs 
proceedings ibm scientific computing symposium combinatorial problems pages 
ibm 
bar ilan peleg 
allocate network centers 
algorithms 
chekuri motwani natarajan stein 
approximation techniques average completion time scheduling 
proceedings th annual acm siam symposium discrete algorithms pages 
fisher nemhauser 
location bank accounts optimize float analytic study exact approximate algorithms 
management sci 
nemhauser wolsey 
uncapacitated facility location problem 
francis editors discrete location theory pages 
john wiley sons new york 
dyer frieze 
simple heuristic center problem 
oper 
res 
lett 
goemans 
personal communication 

goemans 
improved approximation algorithms scheduling release dates 
proceedings th annual acm siam symposium discrete algorithms pages 
hall schulz shmoys wein 
scheduling minimize average completion time line line approximation algorithms 

submitted math 
oper 
res 
hall shmoys wein 
scheduling minimize average completion time line line algorithms 
proceedings th annual acm siam symposium discrete algorithms pages 
hochbaum 
heuristics fixed cost median problem 
math 
programming 
hochbaum shmoys 
best possible approximation algorithm center problem 
math 
oper 
res 
kaufman vanden hansen 
plant warehouse location problem 
operational research quarterly 
khuller :10.1.1.22.3865
capacitated center problem 
proceedings th annual european symposium algorithms lecture notes computer science pages berlin 
springer 
kuehn hamburger 
heuristic program locating warehouses 
management sci 
lawler 
combinatorial optimization networks matroids 
holt rinehart winston new york 

lin vitter 
approximation algorithms geometric median problems 
inform 
proc 
lett 

lin vitter 
ffl approximations minimum packing constraint violation 
proceedings th annual acm symposium theory computing pages 
manne 
plant location economies scale decentralization computation 
management sci 
francis eds 
discrete location theory 
john wiley sons new york 
nemhauser wolsey 
integer combinatorial optimization 
john wiley sons new york 
schulz 
randomization strikes lp scheduling improved approximations min sum criteria 
technical report department mathematics technical university berlin 
shmoys tardos 
improved approximation algorithm generalized assignment problem 
mathematical programming 

effect technical change output expansion optimum number size location pear marketing facilities california pear producing region 
phd thesis university california berkeley berkeley california 

working model plant numbers locations 
farm econom 
lee 
branch bound algorithm multi level uncapacitated location problem 
european oper 
res 
van roy 
dual procedure dynamic facility location 
management sci 

