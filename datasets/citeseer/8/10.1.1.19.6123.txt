energy efficient server clusters 
elnozahy michael kistler ramakrishnan low power computing research center ibm research austin tx usa 
hp www 

ibm 
com arl 
evaluates policies cluster wide power management server farms 
policies employ various combinations dynamic voltage scaling node vary vary vovo reduce aggregate power consumption server cluster periods reduced workload 
evaluate policies validated simulator calculates energy usage response times web server cluster serving traces culled real life web server workloads 
results show relatively simple policy independent dynamic voltage scaling server node achieve savings ranging competitive complex schemes workloads 
policy brings nodes online takes depending workload intensity produces significant savings 
largest savings obtained coordinated voltage scaling policy conjunction vovo 
policy provides savings just vovo isolation 
policies server response times acceptable norms 
keywords power management clusters voltage scaling web servers power consumption rapidly key design issue servers deployed large data centers web hosting facilities 
anecdotal evidence data center operators indicates significant fraction operation cost centers due power consumption cooling 
computing nodes densely packed systems leading intermittent failures 
problems worsen newer server class processors offer higher levels performance expense increased power consumption 
explores polices reducing energy consumption server clusters varying degrees implementation complexity 
policy dependent voltage scaling ivs simply uses voltage scaled processors dependently vary voltage frequency server workload 
second policy uses voltage scaled processors coordinates pro cessor voltage scaling algorithms 
call coordinated voltage scaling cvs 
research supported part defense advanced research projects agency contract 
third policy uses non voltage scaled processors turns entire servers depending workload intensity 
policy call vary vary vovo originally proposed pinheiro evaluated web server clusters compute server clusters 
fourth policy combines ivs vovo fifth uses combination coordinated voltage scaling vovo 
workloads constructed server access logs winter olympics website financial services web site evaluate policies terms response time energy savings 
evaluation performed simulation model web server cluster 
simulation model extension previously developed single node web server simulator extensively validated accuracy energy consumption response times energy response time measurements commodity server 
findings show independent voltage scaling simplest poli cies terms implementation complexity offers energy savings ranging 
coordinated voltage scaling offers slightly better savings ivs benefit probably sufficient justify increased implementation complexity 
energy savings afforded vovo workload dependent 
finance workload vovo saves energy ivs 
ivs saves energy vovo olympics 
combining voltage scaling vovo offers energy savings vovo ivs saving energy voltage scaling vovo isolation 
vovo cvs saves energy vovo expense complicated implementation 
policies engineered keep server response times acceptable norms 
remainder organized follows 
section policies power management server clusters 
section analytically derive optimal operating frequency range servers cluster processors 
derivation forms basis vovo cvs policy 
section describes evaluation methodology various cluster power management policies workloads logs real web servers presents results evaluation 
comparison related section section 
cluster power management explore benefits processor power management policies clusters 
policies basic power management mechanisms dynamic voltage scal ing node vary vary 
briefly describing mechanisms explain mechanisms employed policies 
term implementation complexity refer additional re quired integrating commodity components implement policy 
specifically consider complexity implementing designing commodity components 
dynamic voltage scaling adjusts operating voltage frequency cpu match intensity workload 
voltage scaling reduces energy consumption virtue fact energy consumed processor typically directly proportional operating voltage 
ensure reliable operation processor frequency reduced proportionally voltage 
setting processor frequency voltage lowest point workload executed adequate responsiveness results reduced energy consumption 
high performance server systems cpu provides greatest opportunity reduce power consumption components consume smaller fraction total system power exhibit variation energy consumption workload substantially impact system performance reliability power managed 
voltage scaling works particularly web servers typically configured capacity significantly larger average encountered workload 
dynamic voltage scaling intra node power management mechanism 
node vary vary takes nodes offline workload adequately served subset nodes cluster 
machines taken line may powered placed low power state 
machines lined placed back online workload increase 
node vary vary inter node power management mechanism 
policies assume incoming workload balanced cluster nodes mechanism weighted round robin request distribution servers weighted average response time requests 
independent voltage scaling ivs 
policy node indepen dently manages power consumption dynamic voltage scaling 
policy performs inter node power management nodes cluster stay active state periods low workload 
node may operate different frequencies voltages due workload variations differences computational demands individual requests 
request distribution mechanism balances workload nodes average node operate roughly frequency voltage 
ivs requires cluster nodes processors infrastructure support dynamic voltage scaling software support necessary 
particular cluster composed nodes transmeta crusoe tm processors implements policy 
coordinated voltage scaling cvs 
policy uses dynamic voltage scaling coordinated manner reduce cluster power consumption 
contrast ivs cluster nodes coordinate voltage scaling actions nodes operate close average frequency setting cluster 
centralized monitor periodically computes average frequency setting ac tive nodes broadcasts servers cluster 
node restricts voltage scaling policy small interval settings average frequency 
ivs policy inter node power management 
nodes cluster active periods low workload 
cvs policy expected save energy ivs cluster nodes operate particular frequency voltage setting efficient nodes operate multiple settings average 
implement cvs policy cluster processors support software controlled dynamic voltage scaling afforded amd tm tm tech nology 
addition cvs requires central facility monitors frequency settings nodes disseminates average setting cluster 
monitoring facility implemented software service running cluster nodes separate support server software probes running nodes 
vary vary vovo policy originally proposed pinheiro turns server nodes minimum number servers required support workload kept active 
nodes brought online required 
vovo intra node voltage scaling implemented cluster uses standard high performance processors dynamic voltage scaling 
hardware support wake lan network interface needed signal server tran sition inactive active state 
node vary vary implemented software service running cluster nodes separate support server determine nodes taken offline brought online requires software probes running cluster nodes provide infor mation utilization node 
load distribution mechanism aware state servers cluster direct requests inactive nodes nodes selected vary completed received requests 
combined policy vovo ivs 
policy combination vovo policy reduce number active servers ivs policy reduce power consumption individual nodes 
vovo ivs easily im plemented transmeta crusoe tm processors vovo cluster 
implementation complexity vovo ivs similar vovo 
coordinated policy vovo cvs conceptually policy com bination vovo policy fewest number active servers cvs policy reduce power consumption individual active nodes 
policy power management actions policies integrated effective mechanism maximum cluster capacity needed 
particular vovo cvs places larger emphasis voltage scaling vovo ivs voltage scaling provides quadratic ben node vary vary provides linear benefit 
trade mechanisms heavily dependent power consumption characteristics processor system components discussed detail 
operationally policy achieves integration constraining range frequency voltage settings number active nodes cluster 
range dictates node brought online offline 
new node brought online existing nodes find operate allowed frequency range 
similarly existing node taken offline nodes attempt operate allowed frequency range 
vovo cvs complicated implement vovo 
voltage scaling component requires processors support software controlled dynamic voltage scaling afforded amd tm tm technology 
addition cvs component requires central facility communicates optimal operating range software sets individual processor frequency voltage settings 
vovo component requires central monitoring service determine nodes taken offline brought online probes monitor utilization node 
vovo policy load distribution mechanism aware state servers cluster direct requests inactive nodes nodes selected vary completed received requests 
details coordinated policy section explore detail best integrate vovo policy expands contracts set active servers workload cvs policy uses software managed dynamic voltage scaling ensure nodes operate low average frequency voltage 
construct simple model power consumption cluster model determine policies cooperate minimize power consumption 
theory basis coordinated power management policy 
previously discussed cpu power largest variable component system power consumption typical server systems 
model assumes power consumption system components essentially constant regardless system activity 
earlier empirical observations support validity assumption 
processors support dynamic voltage scaling cpu power consumption depends cpu voltage frequency cpu utilization 
simplify model assume cpu fully utilized 
way view assumption periods low workload cpu frequency lowered point processor kept fully utilized 
dynamic component cpu power consumption part affected system load formula dynamic cpu power activity factor accounts frequently gates switch total capacitance gate outputs voltage processor operating frequency 
voltage scaled processors decreasing voltage requires frequency reduced approximately proportion 
furthermore express voltage linear function frequency af 
substituting combining constants formula dynamic power cpu reduced function processor frequency dynamic cpu power cf convenience express terms ratio maximum cpu frequency 
cpu runs reduced frequency takes longer complete task 
assume slow proportional frequency number cycles required perform task fixed regardless processor frequency 
generally true workloads cpu critical resource web server workloads data fits filesystem cache 
cpu intensive workloads conservative estimate lower frequencies processor spends time stalled accesses memory network disk power consumption components system essentially constant hove simple model power consumed node cluster running frequency system power cf constant includes power consumption components cpu plus base power consumption cpu 
power consumption cluster just sum system power consumed active nodes 
terms include power loss due power supply inefficiency 
power loss typically significant low power levels may greater effect term term single power supply systems cluster power loss depends number active servers 
power supply efficiency increases quickly load reaches nearly steady level simplicity treat power supply loss fixed fraction power consumption 
consider cluster systems operating frequency model system power stated power consumed systems frequency low beneficial vary turn server consolidate workload remaining servers 
allow eliminate system fixed power consumption cost slightly increased variable energy consumption remaining systems 
scenario maintain response time performance remaining systems increase processor frequency system causing power consumed systems xp lf cx configuration servers consumes energy servers lf cf cl cluster active servers reduce power consumption cluster varying member cluster average cpu frequency backend servers falls likewise frequency high beneficial vary turn server spread workload systems 
reduced workload server allows decrease processor frequency system maintaining response time 
configuration power consumed systems 

constructing inequality power consumed systems solving manner find average cpu frequency backend servers rises reduce power consumption cluster varying new member cluster 
constants optimal average frequency range cluster systems simply cpu frequency apply theory determine optimal operating frequency simulated cluster nodes 
simulated cpu frequency range mhz ghz corresponding operation voltage range rest system consumes regardless workload 
completely idle server consumes approximately watts watts constant processor power watts rest system fully loaded cpu busy system consumes watts 
idle power roughly corresponds system power cpu frequency estimate watts 
estimate entirely accurate linux places cpu halted state system idle 
purpose illustration small error ignored 
likewise fully loaded power corresponds system power cpu frequency estimate watts 
parameters compute vary vary threshold frequencies value ideal operating frequency total system power task frequency fig 

optimal power consumption server cluster cluster 
table gives representative values illustrated graphically 
points note 
particular implementation table precomputed stored control operating range cluster activity state node 
furthermore particular cluster theory suggests power management policy vovo cvs section 
vary 

mhz table 
optimal average frequency range cluster mhz processors derivation optimal frequency range assumes inactive servers consume power easily adapted case inactive servers placed low power state 
example server placed standby mode cpu consumes power memory peripherals remain powered state lost 
server standby mode brought online rapidly server powered 
case power consumed standby mode fixed cost cluster independent number servers currently active 
determine vary vary frequencies optimal range simply subtract standby power originally derived formulas 
words constant really represents additional fixed cost system incurred placing active state 
bounds operating voltage frequency computing vary vary points optimal range consider bounds operating voltage frequency processor 
cases considered fmax cluster nodes operating frequency set frequency nodes prescribed frequency exceeds maximum processor frequency 
cluster nodes operating frequency set frequency nodes prescribed frequency minimum processor frequency 
table happens system containing active nodes 
case reduce frequency nodes point running fmax handle nodes running frequency 
words simply set fmax second case starting new node result higher energy consumption processors running higher frequency specified optimal range 
hand waiting start new node expected new frequency fmi typically waste energy corresponding frequency node cluster significantly point 
optimal transition point lies extremes 
transition point fmin expect systems fully utilized include utilization factor power equation systems 
cf cf mi cf cf mi 
fm 
configurations perform equal ux fmin substituting previous equation nn fmin fl 
fs ff 
cz min point cubic equation closed form solution 
solving substituting equation gives optim value 
evaluation methodology constructed workloads web server logs obtained production internet servers 
workload olympics derived requests received feb winter olympics servers columbus 
second workload finance derived requests recorded oct web site major financial services 
workload olympics finance avg requests sec peak requests sec avg requests files total file size mb mb requests total response size mb mb mb table 
characteristics web server workloads 
table summarizes characteristics workloads 
table shows average peak request rates second entire day 
additionally table shows average requests connection grouping closed form equation roots general cubic equation published book algebra titled ars requests connections 
table includes statistics data served including number files requested total size total response size bytes represents total size response data sent back clients excluding headers 
data amount memory needed hold unique data requests gives indication potential benefits ram cache 
example olympics workload total size data required serve requests mb 
relatively speaking modern systems cache amount entirely memory reducing disk activity required serve workload 
base workloads generate workloads different intensities scaling inter arrival time connections requests connection constant amount 
scalefactor corresponds reducing inter arrival time connections 
results increase connection arrival rate corresponding scalefactor maintains basic pattern connection arrivals 
inter arrival time requests connection scaled times represent user think time network client overhead involved retrieving multiple components web page 
scaling mechanism evaluate server performance range client load intensities 
able scale intensity workloads methodology researchers 
workload olympics finance measured cpu energy simulator cpu energy error total energy correlation coefficient table 
comparison measured simulated cpu energy workloads 
correlation coefficients computed energy second intervals length run 
extended simulation model energy consumption response time web server model cluster web servers 
energy consumption reported simulator validated actual measurements performed commodity web server system mhz processor results summarized table 
complete description methodology pre sented 
simulated cpu supports dynamic voltage scaling frequency range mhz ghz corresponding voltage range parameters loosely currently available processors designed mobile systems 
results different values base system power consumption component equation correspond ing current commodity servers representative power efficient server system 
form dynamic voltage scaling permits cpu frequency set limited number discrete settings 
processor voltage set lowest value allows reliable operation frequency 
processor voltage frequency adjusted regular intervals cpu utilization 
interval system determines average cpu utilization set intervals uses simple thresholding scheme select cpu frequency interval 
current cpu frequency maximum setting cpu utilization exceeds high threshold cpu frequency set highest discrete frequency setting 
likewise cpu currently minimum frequency cpu utilization low threshold frequency decreased step 
processor utilization high low thresholds frequency left unchanged 
study low high threshold respectively 
form dynamic voltage scaling commonly referred past originally proposed weiser :10.1.1.143.7417
servers placed inactive state consume energy 
server selected varied distribution mechanism stops sending new requests server 
server completes outstanding requests transitions inactive state shutdown time 
server brought online transitions active state startup time 
set startup shutdown times seconds simulations 
initiated policy inhibits subsequent node power management actions seconds twice transition time allow node transition cluster adjust new configuration 
particular time sufficient newly started web server warm file cache 
results table summarizes results simulations 
finance olympics workloads table shows energy response times policies described section 
total energy data graphically 
workloads ivs policy exhibits significant savings case power management 
cvs policy save energy ivs extra savings amount 
im plementation complexity cvs far greater ivs findings indicate step saving energy simply populate server cluster voltage scaled processors 
note response time afforded policies acceptable limits 
compared desktop mobile workloads relatively larger response times acceptable web workloads response time perceived client typically larger factoring components wan delays 
comparing ivs vovo yields interesting result 
vovo saves energy finance workload opposite true olympics 
switch comes nature workloads 
steep increase intensity am finance workload maintains high intensity energy energy response time workload policy joules savings joules savings average ile vovo vovo ms ms ivs finance cvs vovo vovo ivs vovo cvs ivs olympics cvs vovo vovo ivs vovo cvs table 
simulated energy response time different cluster power manage ment policies 
energy uses fixed cost energy uses fixed cost vovo cvs response times independent fixed cost 
vovo cvs fixed cost plays role determining nodes brought online taken offline causing response times vary 
variation minor 
responses satisfied ile response time numbers 
level pm 
afterward finance workload decreases intensity 
comparison olympics workload stable 
vovo saves energy ivs finance periods low intensity late evening night vovo able place machines offline 
ivs favorable fixed costs cluster components decrease 
vovo ivs performs better vovo 
set workloads fixed costs improvement ranges 
time response time degradation acceptable norms 
findings suggest building web clusters voltage scaled processors com bination vovo provides increased energy savings minor example transmeta processors additional implementation cost 
policy yields energy savings vovo cvs 
compared vovo vovo cvs able provide savings ranging 
compared vovo ivs savings range 
vovo cvs increased implementation complexity compared vovo savings affords increase fixed costs system decrease 
vovo cvs saves energy expended cluster power management 
figures request rate power consumption number active servers vovo vovo cvs policy course workloads 
note policies power consumption closely follows workload cluster vovo cvs policy consuming power workload intensities 
graph shows instances vovo cvs consumes power short period occur finance olympics finance olympics base base ivs cvs vovo vovo ivs vovo cvs fig 

total energy consumed workload base power consumption cluster power management policies 
workload levels period rapid increase 
shows vovo cvs uses servers vovo fundamental source power savings provided vovo cvs 
servers variable component power consumption reduced quadratically voltage scaling point balances additional fixed cost larger active set 
presents power savings cvs vovo vovo cvs policies server cluster power management course workloads 
graphs indicate low workload intensities vovo policy provides large savings workload adequately served small set machines 
savings drop significantly workload increases vovo provides relatively little benefit moderately heavy workloads 
contrast power savings cvs modest low workload intensities cpu idle time obtains benefit voltage scaling 
workload increases average cpu utilization increases yielding savings cvs policy 
employing vary vary voltage scaling combined vovo cvs policy achieves significant power savings broad range workload intensities 
way interpret results node vary vary coarse grained mechanism provides power savings large increments corresponding large affects cluster capacity 
contrast voltage scaling fine grained mechanism individual power management action saves small amount power results small decrease cluster capacity 
furthermore components particularly disk drives adversely affected frequent power cycles node vary vary loo lo finance time hours olympics io time hours fig 

request rate oo 
ow 
time hours vovo vovo cvs 
time hours fig 

number active servers time hours time hours fig 

power consumption loo lo vovo cvs vovo 
cvs 
time hours loo lo vovo cvs vovo 
cvs 
time hours fig 

energy savings policies time constrained frequency power management actions 
voltage scaling adverse affect applied liberally 
vovo cvs represents combination coarse fine grained power management outperforms mechanism 
related reducing power consumption reducing clock frequency processor widely studied 
mechanism employed exclusively portable battery powered systems means extending battery life 
power consumption related costs cooling reliability led new focus server systems voltage scaled proces sors 
mudge observed combination voltage scaling parallelism clusters applied reduce energy consumption 
emerging class servers designed processors dynamic voltage scaling mechanisms best knowledge formal study potential energy savings clusters systems 
explored software managed dynamic voltage scaling policy sets cpu speed task basis time intervals 
lorch describe task software managed voltage scaling policy optimized task completion times predicted accurately 
techniques perform desktop application workloads unclear applied server environments 
demonstrates basic mechanism software managed dynamic voltage scaling achieve significant power savings server clusters 
pinheiro proposed simple policy managing energy server clusters powering machines similar vovo policy 
examined policy context web server compute server clusters 
chase employed mechanism context eco framework web sites bid resources current workload 
report savings different workloads 
believe high energy savings report third workload world cup trace attributed significant variation intensity workload 
complements extends studies comparing vovo forms dynamic voltage scaling extending vovo voltage scaling mechanisms 
wide range techniques explored power management microprocessors microprocessor architectures microarchitectures incorporate power saving features examples include mobile processors avail able intel tm technology transmeta crusoe processor 
developed widely deployed today new memory chip architectures incorporating similar spin states system actively manage power main memory 
addition number current research efforts focusing new power management mechanisms employed operating system application layers system 
techniques dynamically controlling processor temperature applied web servers 
results power savings cpu activity decreased lower processor temperature 
mechanisms extend gains power management demonstrated 
described analyzed distinct policies power management server clusters varying degrees implementation complex ity 
policies employ various combinations intra node dynamic voltage scaling inter node node vary vary power management mechanisms reduce aggregate power consumption server cluster periods reduced workload 
validated simulator study potential benefits policies workloads derived server access logs winter olympics financial services web site 
find relatively simple policy independent dynamic voltage scaling server node yields energy savings 
policy varies nodes workload intensity achieves savings expense cluster wide coordination 
cases find independent voltage scaling efficient need cluster wide coordination 
energy savings obtained policy combines node vary vary voltage scaling pre computed optimal transition points 
combined policy achieves savings pure vary vary albeit expense increased implementation complexity 
compared cluster power managed combined policy saves cluster energy 

pat elnozahy tom keller michael charles chandler mcdowell ramakrishnan 
case power management web servers 
robert rami melhem editors power aware computing kluwer plenum series computer science appear 
january 

jim challenger paul dantzig arun iyengar 
scalable highly available system serving dynamic data frequently accessed web sites 
proceedings acm ieee supercomputing sc orlando florida november 


rambus technology overview feb 

jeff chase managing energy server resources hosting center 
th symposium operating systems principles sosp october 

reinhardt mudge 
automatic performance setting dynamic voltage scaling 
proceedings th acm int 
conf 
mobile computing networking mobicom july 


crusoe power management cutting operating power 
embedded processor forum june 

flinn satyanarayanan 
energy aware adaptation mobile applications 
th acm symposium operating systems principles sosp pages 

chan wasserman 
comparing algorithm dynamic low power cpu 
mobile computing networking 

jacob lorch alan jay smith 
improving dynamic voltage scaling algorithms pace 
acm sigmetrics june 

trevor mudge 
power class architectural design constraint 
ieee computer april 

pinheiro heath 
load balancing power performance cluster systems 
workshop compilers operating systems low power september 

elnozahy 
measuring client perceived response times www 
proceedings rd usenix symposium internet technologies systems usits mar 

michael smith 
dynamically managing processor temperature power 
nd workshop feedback directed optimization november 

technologies 
www com home html 

vahdat lebeck ellis 
joule precious case revisiting operating system design energy efficiency 
th acm sigops european workshop september 

weiser welch demers shenker 
scheduling reduced cpu energy 
symposium operating systems design implementation pages monterey california 
