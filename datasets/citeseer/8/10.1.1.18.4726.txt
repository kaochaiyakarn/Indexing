appear autonomous robots special issue intelligent embedded systems incremental self deployment algorithm mobile sensor networks andrew howard maja matari gaurav sukhatme robotics research lab computer science department university southern california los angeles california usc edu mataric usc edu gaurav usc edu 
describes incremental deployment algorithm mobile sensor networks 
mobile sensor network distributed collection nodes sensing computation communication locomotion capabilities 
algorithm described deploy nodes time unknown environment node making information gathered previously deployed nodes determine deployment location 
algorithm designed maximize network coverage simultaneously ensuring nodes retain line sight relationships 
constraint arises need localize nodes unknown environment previous team localization howard howard shown nodes localize nodes landmarks 
describes incremental deployment algorithm presents results extensive series simulation experiments 
experiments serve validate algorithm illuminate empirical properties 
keywords sensor networks deployment multi robots systems 

describes incremental deployment algorithm mobile sensor networks 
mobile sensor network composed distributed collection nodes sensing computation communication locomotion capabilities capability distinguishes mobile sensor network conventional static cousins 
locomotion facilitates number useful network capabilities including ability self deploy self repair 
envisage mobile sensor networks applications ranging urban combat scenarios search rescue operations emergency environment monitoring 
consider example scenario involving hazardous materials leak urban environment 
metaphorically speaking throw bucket sensor nodes building window doorway 
nodes equipped chemical sensors allow detect relevant hazardous material deploy building way maximize area covered sensors 
data nodes transmitted base station located safely outside building assembled form live map showing concentration hazardous compounds building 
sensor network useful scenario location node determined 
urban environments accurate localization gps generally possible due occlusions multi path effects landmark approaches require prior models environment may unavailable incomplete inaccurate 
particularly true disaster scenarios environment may undergone unplanned structural modifications 
fortunately shown howard howard possible determine location network nodes nodes landmarks 
particular technique require nodes maintain line sight relationships 
consequently kluwer academic publishers 
printed netherlands 
howard ar tex demand nodes deploy way maximize area covered network simultaneously ensuring node seen node 
deployment algorithm described incremental greedy 
nodes deployed time node making data gathered previously deployed nodes determine optimal deployment location 
algorithm greedy sense attempts determine node location produce maximum increase network coverage 
unfortunately show section determining optimal placement greedy sense fundamentally difficult problem 
deployment algorithm described relies number heuristics guide selection deployment locations 
conducted extensive series simulation experiments aimed characterizing performance incremental deployment algorithm 
experiments demonstrate algorithm model free achieves coverage results close obtained model greedy algorithm 
experiments establish computation time algorithm polynomial function order number deployed nodes 

related concept coverage paradigm evaluating multi robot systems introduced gage 
gage defines basic types coverage blanket coverage objective achieve static arrangement nodes maximizes total detection area barrier coverage objective minimize probability undetected penetration barrier sweep coverage equivalent moving barrier 
taxonomy algorithm described blanket coverage algorithm 
problem exploration map building single robot unknown environment considered number authors yamauchi yamauchi 
frontier approach described yamauchi yamauchi particularly pertinent exploration algorithm proceeds incrementally building global occupancy map environment analyzed find frontiers free unknown space 
robot directed nearest frontier 
network deployment algorithm described shares number similarities yamauchi algorithm build global occupancy grid environment direct nodes frontier free unknown space 
deployment algorithm map built entirely live stored sensory data 
satisfy additional constraint node visible node 
multi robot exploration map building explored number authors sukhatme thrun simmons burgard pez nchez variety techniques ranging topological matching sukhatme fuzzy inference pez nchez particle filters thrun 
key differences earlier works described maps built entirely live stored sensory data deployment algorithm satisfy additional constraint line sight visibility 
hand heuristics simmons burgard select goal points exploration strikingly similar heuristics select goal points howard ar tex deployment see section 
effect heuristics state explore boundary known space bias exploration regions robot uncover large areas previously unknown space 
burgard describes adaptive algorithm making estimates unpredictable quantities 
distributed algorithm deployment mobile robot teams described payton 
payton introduces concept virtual pheromones localized messages emitted robot detected nearby robots 
virtual pheromones generate gas expansion guided growth deployment models 
key advantage approach deployment algorithm entirely distributed potential respond dynamically changes environment 
algorithm lead relatively slow deployment unclear published results effective algorithm producing area coverage 
somewhat similar algorithm artificial potential fields described howard 
deployment problem described similar described bulusu consider problem adaptive beacon placement localization large scale wireless sensor networks 
networks rely rf intensity information determine location nodes appropriate placement rf beacons critical importance 
authors describe empirical algorithm adaptively determines optimal beacon locations 
somewhat similar vein considers problem distributed sensing ad hoc wireless network 
nodes introduced environment en masse allowed disperse random walk algorithm 
nodes assumed limited communication range environment assumed sufficiently large full network connectivity maintained 
network relies continuous random motion bring nodes contact propagate information edges network 
differs described authors number significant ways 
bulusu concerned sensor range assume network nodes equipped sensors require line sight operate cameras laser range finders 
deployment algorithm specifically designed preserve line sight network connectivity aims produce controlled deployment random diffusion 
bulusu algorithm incremental adaptive nodes deployed change location 
mobile sensor network viewed large scale mobile robot formation 
formations studied number authors balch matari describe methods creating maintaining formations local interactions robots 
research interaction environment secondary importance interaction robots 
contrast described emphasizes interaction environment attempts minimize interaction network nodes 
note problem deployment related traditional art gallery problem computational geometry rourke 
art gallery problem seeks determine polygonal environment minimum number cameras placed entire environment observed 
exist number algorithms designed solve art gallery problem assume possess prior models environment 
contrast assume prior models environment incomplete inaccurate non existent 
sensor network determine structure environment empirically incrementally 
howard ar tex 
incremental deployment algorithm algorithm described incremental deployment algorithm nodes deployed time node making information gathered previously deployed nodes determine ideal deployment location 
algorithm aims maximize total network coverage total area seen network 
time algorithm ensure visibility constraint satisfied node visible node 
algorithm relies number key assumptions follows 
homogeneous nodes nodes assumed identical 
assume node equipped range sensor laser range finder sonar array broadcast communications device wireless ethernet mounted form mobile platform 
static environment environment assumed static extent gross topology remains unchanged network deploying 
assume example open doors remain open 
note deployment process modify environment deployed nodes occlude obstruct 
model free prior models environment 
algorithm intended applications environment models unavailable key task network may generate models 
full communication assume nodes network communicate remote base station deployment algorithm executed 
note automatically imply nodes radio range base station nodes may example form ad hoc multi hop network intanagonwiwat 
localization assume pose node known arbitrary global coordinate system 
previous team localization howard howard shown nodes may localized measured relationships 
technique require external landmarks prior models environment require node visible node 
requirement gives rise visibility constraint node visible node deployed location 
note constraint necessarily imply nodes visible times assume nodes equipped form odometry inertial navigation allows localize periods seen 
evaluate incremental deployment algorithm performance metrics coverage total area visible network sensors time total deployment time including time taken perform necessary computations time taken physically move nodes 
naturally wish maximize coverage minimizing deployment time 

algorithm overview incremental deployment algorithm phases initialization selection assignment execution 
initialization 
nodes assigned states waiting active deployed 
names suggest waiting node waiting deployed active node process deploying deployed node deployed 
initially state nodes set waiting howard ar tex 
fragment simulated environment containing single node 
occupancy grid black cells occupied white cells free gray cells unknown 
configuration grid black cells occupied white cells free gray cells unknown 
reachability grid white cells reachable gray cells unreachable 
exception single node set deployed 
node provides starting point anchor network subject visibility constraint 
selection 
sensor data deployed nodes combined form common map environment 
map analyzed select deployment location goal node 
assignment 
simplest case selected goal assigned waiting node node state changed waiting active 
commonly assignment complicated fact deployed nodes tend obstruct waiting nodes necessitating complex assignment algorithm 
algorithm may re assign goals number previously deployed nodes changing state deployed active 
execution 
active nodes deployed sequentially goal locations 
state node changed active deployed arrival goal 
algorithm iterates selection assignment execution phases terminating nodes deployed 

selection selection phase determines deployment location goal 
ideally goal maximize coverage metric simultaneously satisfying visibility constraint 
unfortunately way determining optimal goal priori greedy local sense 
lack prior model rely sensed data deployed nodes knowledge reasoning environment necessarily incomplete 
algorithm described avoids reasoning altogether uses number relatively simple goal selection policies relies heuristics guide selection process 
step sensor data deployed nodes combined form occupancy grid elfes elfes 
cell grid assigned states free occupied unknown 
cell free known contain obstacles occupied known contain howard ar tex obstacles unknown 
standard bayesian technique elfes determine probability cell occupied threshold probability determine state cell 
combined occupancy grid cell seen nodes marked free occupied cells seen node marked unknown 
ensure visibility constraint satisfied selecting goals lie free space 
free space cells represent valid deployment locations nodes finite size placed near cells occupied unknown unknown cells may turn occupied 
may exist free cells far occupied unknown cells unreachable node may example able see free space opening narrow allow passage 
facilitate kind analysis post process occupancy grid form configuration grid reachability grid 
name suggests configuration grid representation nodes configuration space lozano perez mason 
cell configuration grid states free occupied unknown 
cell free occupancy grid cells lying certain distance free distance usually set value greater equal node radius 
cell occupied occupancy grid cells lying distance similarly occupied 
cells marked unknown 
node safely placed free cell configuration grid 
determine cell reachable process configuration grid 
done applying flood fill algorithm free space configuration grid starting location deployed node turn 
cells resultant reachability grid labeled reachable unreachable 
shows example occupancy configuration reachability grids generated single node simulated environment 
note set reachable cells subset set free configuration cells turn subset set free occupancy cells 
selecting goal lies reachable space simultaneously ensure deploying node visible node collision environment exists path node reach goal 
having determined reachability space selection algorithm heuristics guide final goal selection boundary heuristic coverage heuristic 
heuristics operate reachability grid 
boundary heuristic states nodes deploy boundary reachable unreachable space heuristic effectively minimizes overlap adjacent sensory field placing nodes far apart possible 
coverage heuristic states nodes deploy reachable location cover greatest area presently unknown space occupancy grid 
heuristic seeks place nodes location greatest potential increase coverage area optimistic assumption unknown areas fact free space 
guarantee assumption correct course node may deploy location appears cover large area unknown space find deployed closet 
heuristics necessarily specify unique goal 
incorporated number unique goal selection policies 
implemented policies randomly select location reachable space 
randomly select location reachable unreachable boundary 
howard ar tex 
typical obstruction problem waiting node unable reach deployment location 
gray area indicates region space covered network 
obstruction resolved re assigning deployment location node 
select reachable space location maximizes coverage heuristic 
select reachable unreachable boundary location maximizes coverage heuristic 
policies express possible combinations heuristics including control case heuristic policy 
polices stochastic deterministic 
note special case included partly completeness partly computed rapidly 
section compare performance policies experimental context attempt determine relative contributions underlying heuristics 

assignment assignment phase algorithm attempts assign newly selected goal waiting node 
process complicated fact nodes may find unable reach parts environment due obstruction previously deployed nodes 
obstruction increasingly size nodes approaches size openings environment 
fortunately natural solution problem exploits homogeneity network nodes obstructed node may swap goals node obstructing 
node obstructed node node move deployment location replaces original deployment location 
nodes assumed equivalent goal swapping functional difference network 
complex environments obstructions resolution strategy may need applied recursively replaces replaces replaces 
assignment phase uses slightly modified version procedure avoids need directly infer nodes obstructing nodes 
algorithm follows 
construct graph vertex represents network node edge represents reachability relationship nodes node reach node position vise howard ar tex versa 
length edge corresponds distance nodes goal represented dummy vertex 
find shortest path waiting node goal 
length path graph sum edge lengths shortest path dijkstra algorithm 
mark node shortest path active assign node goal reaching position currently occupied node path 
algorithm illustrated shows proto typical graph shortest path highlighted 
note strictly necessary nodes path move potential obstruction resolved 
note number deployed robots may change locations sequence movements terminates deployment exactly waiting robot 
assignment algorithm requires determine reachability relationship distance pairs nodes 
principle requires generate plan reaching node node 
practice simplify process generating unique distance transform node 
distance transform generated variant dijkstra algorithm dijkstra distances propagated goal node traveling free configuration space occupied unknown cells 
ultimately distance assigned cell node reached 
graph constructed simply reading distances 
assignment algorithm described produces interesting behavior network tend starting location nodes active point time 
addition nodes spread environment nodes tend remain edge network 
possible course design different assignment algorithms generate quite different behavior leap frog bounding algorithms scope 

execution execution phase active nodes deployed goal locations 
nodes deployed sequential execution wait node reach goal deploying node 
active nodes deployed order assigned goals node move new deployment location second move take node old location 
node motion point time goal assignment algorithm ensures successive goal unobstructed possibility interference nodes 
sequential execution quite slow execution time proportional sum distances traveled active nodes turn equal distance single node travel obstructions 
area covered deployed network larger nodes farther travel expect execution time increase number deployed nodes 
note alternatives sequential execution assume nodes equipped mechanism resolving interference concurrent execution active nodes set motion time 
appropriate modifications assignment phase howard ar tex 
fragment simulated environment 
occupancy grid produced typical deployment policy sensor range 
algorithm possible principle create algorithm execution time constant irrespective network size 
topic unfortunately scope 

experiments analysis conducted series simulation experiments aimed determining empirical properties incremental deployment algorithm 
metrics particular interest coverage area covered network time computation execution 
cases interested specific properties node network experiments implied scaling properties algorithm 
experiments understand consequences increasing network size range hundreds thousands nodes 
experiments conducted player robot server combination stage multi agent simulator vaughan 
stage simulates behavior real sensors actuators high degree fidelity algorithms developed stage usually transferred real hardware little modification 
sensor network experiment consisted nodes equipped degree scanning laser range finder mounted differential mobile robot base 
node equipped ideal localization sensor provides accurate position orientation information 
simulated nodes placed environment shown fragment larger environment representing single floor large hospital 
conducted large set trials varying trial selection policy starting location sensor range 
starting locations chosen set pre selected points sensor range taken 
stochastic policies trials conducted combination initial location sensor range total trials policy 
deterministic policies single trial conducted combination initial location sensor range total howard ar tex coverage selection policy selection policy selection policy selection policy greedy solution deployed nodes 
network coverage selection policies sensor range 
note error bars suppressed sake clarity 
table coverage factors selection policies sensor range 
range policy greedy trials policy 
trial measured network coverage computation execution time 

coverage shows plot network coverage function number deployed nodes 
coverage measured counting number free cells occupancy grid multiplying area covered cell 
shows results policy averaged initial locations sensor range 
variance indicated error bars omitted clarity 
inspecting plots apparent coverage increases linearly number deployed nodes irrespective selection policy 
clear selection policies heuristics described section perform significantly better policy control case random deployment 
howard ar tex comparison precise defining policy coverage factor measures average area covered node 
total network coverage approximately equal number deployed nodes constant 
table lists coverage factors sixteen different combinations selection policy sensor range determined linear regression 
noted values meaningful total coverage area total area environment 
bounded environment network coverage eventually saturate boundary effects introduce significant nonlinearities 
experiments environment large boundary effects minimal impact possibly see start effects coverage plots 
inspecting values table apparent goal selection policies incorporate heuristics described section policies perform significantly better control case policy 
policies fact produce fold improvement simple random deployment 
apparent improvement achieved boundary heuristic policy uses boundary heuristic policy uses coverage heuristic 
furthermore policies indistinguishable suggesting coverage heuristic situations deploy nodes reachable unreachable boundary 
sense policy preference requires time compute produces negligible improvement network coverage look exactly time requires section 
comparing coverage factors obtained different sensor ranges illuminating tells algorithm tells environment 
naively expect network coverage increase square sensor range doubling range single sensor quadruple coverage area 
real environment course things quite simple occlusions sensor range dominate placement nodes 
inspecting table see significant improvement coverage increases sensor range minimal improvement 
true selection policies 
environment appears characteristic length distance may example correspond average distance doorways average size room 
interesting conduct experiments different environments attempt correlate coverage factors environment structure 
ideally compare coverage results optimal value greatest possible coverage obtained network satisfies visibility constraint 
naturally determining optimal coverage assume perfect priori model environment 
determining optimal coverage extremely difficult necessitates search space space possible networks 
space vast 
consider network nodes environment area discretize environment locations distance apart total number possible networks 
satisfy visibility constraint 
course 
relatively small network number possible networks clearly brute force search space impractical 
may exist closed form solutions approximations problem example similar art gallery problem rourke aware solutions time 
howard ar tex time sec selection policy selection policy selection policy selection policy deployed nodes 
selection time cpu policies 
scale log log 
error bars suppressed sake clarity 
comparing results optimal solution compare best greedy solution 
greedy solution obtained constructing network incrementally choosing node location produces greatest coverage 
greedy solution addition fairer test algorithm represents best result expected form incremental deployment algorithm 
generate greedy solution simulator modified form incremental deployment algorithm 
node compute reachability grid teleport node reachable cell succession 
location measure network coverage 
processes node back location produces greatest coverage process repeated node 
table shows coverage factors greedy solution 
note factors policies greedy values suggests heuristics policies get model free algorithm 

time shows measured computation time selection phase algorithm plotted number deployed nodes note log log scale 
selection policies plotted separately plot representing average initial locations 
sensor range cases 
note plots linear number deployed nodes increases implies computation time polynomial function number deployed nodes 
assume function high order term form bn characterize policy terms exponent coefficient table ii lists values polices 
values calculated linear regression log log space data points policy trying capture highest order term 
howard ar tex table ii 
time constants phases algorithm 
time assumed polynomial function number deployed nodes high order term form bn selection assignment execution policy inspecting table results immediately apparent 
important selection time scales sub linearly number deployed nodes exponent policies 
result conforms partially theoretical expectations 
selection phase algorithm broken parts map generation policy application 
map generation data node added occupancy grid sequentially independently expect map generation scale linearly 
policy application computation time dependent particular selection policy policies boundary heuristic computation time proportional free unknown boundary length policies coverage heuristic computation time proportional free space area 
assume boundary length free space area proportional number deployed nodes computation time policy application scale linearly 
attribute sub linear results table ii combination factors selection time dominated policy application map generation assumption boundary length scales linearly number deployed nodes probably incorrect 
increase number nodes experiments expect map generation ultimately dominate subsequently approach 
second result note table ii policy indistinguishable terms coverage times faster consider coefficient confirms earlier general preference 
shows measured computation time assignment phase algorithm loglog plot 
selection policies plotted separately plot representing average initial locations sensor range cases 
plots clearly linear suggesting computation time selection phase polynomial function number deployed nodes 
table ii lists values assignment phase apparent phase scales number deployed nodes conforms exactly theoretical expectations phase generate separate distance transforms computation time scales linearly free space area 
free space area scales linearly shown section assignment phase necessarily scale note ideally prefer phase algorithm scale linearly better actively seeking alternative assignment algorithms property 
shows wall clock time elapsed real time cpu time execution phase algorithm plotted log log scale 
selection policies plotted separately howard ar tex time sec selection policy selection policy selection policy selection policy deployed nodes 
assignment time cpu policies 
scale log log 
error bars suppressed sake clarity 
time sec selection policy selection policy selection policy selection policy deployed nodes 
execution time wall clock policies 
scale log log 
error bars suppressed sake clarity 
plot representing average initial locations 
sensor range cases 
clearly great deal variance deployment time general trend plots linear suggesting execution time polynomial function number deployed nodes 
table ii lists values execution phase inspecting values apparent execution time policy scales linearly number deployed nodes remaining policies scale sub linearly 
results intriguing entirely unexpected 
sequential deployment execution time proportional sum distances traveled active nodes turn equal distance traveled single node obstruction free environment 
random howard ar tex deployment policy expect distance scale linearly free space area number deployed nodes 
remaining selection policies seek place nodes free space boundary explicitly case implicitly case scaling properties depend nature environment 
example environment consists single corridor fit node distance boundary scale linearly free space area 
hand environment completely empty distance traveled scale square root free space area 
results table ii suggest policies environment effectively empty policies scale 
policy hand environment partially empty 
ideally execution time constant linear consider network coverage rate change coverage function wall clock time 
execution time linear rate necessarily decrease number deployed nodes grows network coverage increase logarithmically time 
linear growth coverage achieved execution time constant implies form concurrent execution nodes move time 
noted section concurrent execution requires advanced assignment algorithm form interference resolution strategy 
actively researching topics unfortunately scope 

discussion experiments described clearly establish utility incremental deployment algorithm heuristics 
coverage values policies value obtained model greedy algorithm 
algorithm scales polynomial function number deployed nodes worst case order practical note demonstrated algorithm handle large number nodes modest computational resources simulations performed real time single workstation 
key weakness experiments course reliance idealized localization system pose node accurately determined 
realistic localization expect algorithm performance degrade poor estimates pose individual nodes result poor registration range data combined occupancy grid 
turn result poor selections deployment locations assignment sequences 
expect algorithm degrade gracefully rely precise coordination nodes 
note separate experiments team localization howard howard demonstrated ability accurately localize nodes mobile sensor network nodes landmarks nodes continuous motion 
highly optimistic techniques deployment team localization merged integrated system exhibits near optimal performance 

incremental deployment algorithm described deploy mobile sensor networks unknown environments 
algorithm deploy nodes network coverage howard ar tex maximized full line sight connectivity maintained 
furthermore algorithm require prior models environment able produce coverage results close obtained greedy model algorithm 
addition simulation results described section taken steps demonstrating algorithm running real hardware real environment 
algorithm implemented tested node network controlled environment howard currently preparing ambitious experiment involving nodes 
expect demonstrate utility incremental deployment algorithm real applications real environments 
authors anonymous reviewers number useful insights suggestions 
supported darpa mars program dabt onr onr nsf ani 
balch behavior coordination large scale robot formations 
proceedings fourth international conference multiagent systems icmas 
boston ma usa pp 

bulusu heidemann estrin adaptive beacon placement 
proceedings international conference distributed computing systems icdcs 
arizona 
burgard moors fox simmons thrun collaborative multi robot exploration 
proc 
ieee international conferenceon robotics automation icra vol 

pp 

sukhatme landmark matching algorithms cooperative mapping autonomous robots 
parker bekey eds distributed autonomous robotics systems vol 

springer pp 

dijkstra note problems connection graphs 
numerische mathematik 
elfes sonar real world mapping navigation 
ieee journal robotics automation ra 
elfes occupancy grids stochastic spatial representation active robot perception 
proceedings sixth conference uncertainty ai 
morgan kaufmann publishers matari robot formations local sensing control 
international symposium computational intelligence robotics automation ieee 
banff alberta canada 
gage command control robot systems 
nineteenth annual technical symposium 
alabama usa pp 

reprinted unmanned systems magazine fall volume number pp 
vaughan st howard sukhatme matari valuable player robot device server distributed control 
proc 
ieee rsj intl 
conf 
intelligent robots systems iros 
hawaii pp 

howard matari sukhatme incremental deployment algorithm mobile robot teams 
proceedings ieee rsj international conference intelligent robots systems 
epfl switzerland 
appear 
howard ar tex howard matari sukhatme localization mobile robot teams maximum likelihood estimation 
proceedings ieee rsj international conference intelligent robots systems 
epfl switzerland 
appear 
howard matari sukhatme mobile sensor network deployment potential fields distributed scalable solution area coverage problem 
proceedings th international conference distributed autonomous robotic systems 
fukuoka japan 
appear 
howard matari sukhatme team localization maximum likelihood approach 
ieee transactions robotics autonomous systems 
submitted 
intanagonwiwat govindan estrin directed diffusion scalable robust communication paradigm sensor networks 
proceedings sixth annual international conference mobile computing networks mobicom 
boston massachusetts pp 

pez nchez de sierra map generation cooperative low cost robots structured unknown environments 
autonomous robots 
lozano perez mason automatic synthesis fine motion strategies robots 
international journal robotics research 
rourke art gallery theorems algorithms 
new york oxford university press 
payton daily howard lee pheromone robotics 
autonomous robots 
dudek milios graph exploration multiple robots 
parker bekey eds distributed autonomous robotics systems vol 

springer pp 


wolf motion coordination formations multiple mobile robots potential field approach 
parker bekey eds distributed autonomous robotics systems vol 

springer pp 

simmons burgard fox moors thrun younes coordination multi robot exploration mapping 
proc 
seventeenth national conference artificial intelligence aaai 
pp 

thrun burgard fox real time algorithm mobile robot mapping applications multi robot mapping 
proceedings ieee international conference robotics automation icra vol 

pp 

thrun fox burgard dellaert robust monte carlo localization mobile robots 
artificial intelligence journal 
vaughan stage multiple robot simulator 
technical report iris institute robotics intelligent systems university southern california 
distributed sensing data collection broken ad hoc wireless connected networks mobile robots 
parker bekey eds distributed autonomous robotics systems vol 

springer pp 

yamauchi frontier approach autonomous exploration 
proceedings ieee international symposium computational intelligence robotics automation 
pp 

yamauchi adams mobile robot exploration map building continuous localization 
proceedings ieee rsj international conference robotics automation vol 

san francisco pp 

mobile robot exploration algorithm 
ieee transactions robotics automation 
howard ar tex andrew howard research associate computer science department university southern california usc 
received ph engineering university melbourne sc 

theoretical physics university melbourne 
australian postgraduate research award priority winner best student award field service robotics conference fsr 
research interests include multi robot localization coordination distributed sensor actuator networks large scale simulation robotic systems 
maja matari associate professor computer science department neuroscience program university southern california director usc robotics research lab interaction lab associate director iris institute robotics intelligent systems 
received phd computer science artificial intelligence mit ms computer science mit bs computer science university kansas 
recipient nsf career award ieee robotics automation society award early career award mit tr innovation award usc school engineering junior research award scientists featured film isaac newton editor ieee transactions robotics automation international journal autonomous agents multi agent systems adaptive behavior published journal articles book chapters conference papers workshop papers books works mit press 
involved nasa jet propulsion lab free university brussels ai lab lego cambridge research labs gte research labs swedish institute computer science atr human information processing labs 
research areas control learning behavior multi robot systems skill learning imitation sensory motor primitives 
gaurav sukhatme assistant professor computer science department university southern california usc associate director robotics research laboratory usc 
received ph computer science usc 
research interests include embedded systems mobile robot coordination sensor fusion robot fault tolerance human robot interfaces 
directs robotic embedded systems lab performs research related howard ar tex areas control coordination large numbers distributed embedded systems control systems complex dynamics hopping robots robotic helicopters haptic interfaces 
dr sukhatme member aaai ieee acm served conference program committees 
published technical papers areas robot control mobile robot cooperation coordination distributed embedded systems 
howard ar tex howard ar tex 
