antipodal gray codes charles killian carla savage yz department computer science state university box raleigh nc usa may bit gray code circular listing bit strings successive strings di er bit position 
bit antipodal gray code additional property complement string appears exactly steps away list 
problem determining values antipodal gray codes exist posed hunter showed possible 
show possible odd 
provide recursive construction prove existence power 
question remains open power 
keywords gray code hamiltonian cycle cube binary gray code listing bit binary strings bit changes 
successive items list including rst 
classical approach known binary re ected gray code gil gra starts bit gray code construct bit gray code rst appending element bit gray code list bit gray code reverse appending element 
easy see produces complete listing bit strings single bit elements including rst 
gray code viewed hamiltonian cycle cube graph vertices bit binary strings strings adjacent di er bit 
gray codes designed satisfy additional requirements imposed practical applications curious researchers 
examples constraints considered chip killian acm org savage csc ncsu edu research supported nsa mda examples bit antipodal gray codes 
restricting bit ips occur br requiring number ips bit vs rc enforcing non locality conditions ram maximizing gap shortest maximal consecutive sequence bit positions requiring certain monotonicity properties sw 
just small sample 
survey gray codes see sav beautiful treatment generating bit strings general see knu 
fall hunter posed question called antipodal gray codes sne 
bit antipodal gray code satisfy requirements ordinary bit gray code addition requirement item binary complement appear exactly steps away list 
antipodal gray codes see asked exist larger able partially answer question 
section develop notation basic results antipodal gray codes 
section prove odd bit antipodal gray code possible 
section discuss exhaustive computer search showed exists bit antipodal gray code 
turns power bit antipodal gray codes exist provide recursive construction section 
conclude section nal remarks remaining open cases 
sign sequences signatures de ne bit string 

denote bit gray code ith bit string antipodal gray code mod ii mod case called pre element case ii post element 
simplify notation denote mod integers note commutative associative 
remainder section assume bit antipodal gray code 
lemma pre element post element 
proof 
de nition pre element post element 
converse suppose post elements 
elements distinct divisible false 
associate sign sequence symbols pre element 
example bit antipodal gray code lemma integer proof 
lemma pre element post element occurs pre element 

integer period cleary period lemma shows period 
gcd denote greatest common divisor lemma gcd period proof 
exist integers gcd bn 
gcd bn bn bn notion signature instrumental understanding antipodal gray codes 
signature antipodal gray code shortest sign sequence satisfying 
example signature bit antipodal gray code 
theorem signature divides gcd divide proof 
lemma periodic period gcd 
sequence 
de nition clearly divides length powers divides divide contradicting lemma 
nonexistence antipodal gray codes odd antipodal gray code exists case remaining odd numbers 
prove sequence lemmas assuming lemmas bit antipodal gray code 
lemma odd alternate symbols 
proof 
signature correspondence pre elements post elements contain number symbols symbols 
theorem power dividing 
odd possibility 
de ne ip sequence sequence bit position di er 
bit gray code lemma ff ng ng 
proof 
de nition pre element lemma di er bits 
gray code exactly bit successive elements result follows 
example bit gray code ff ff lemma odd 
proof 
lemma alternates sign 
de ne ff ng lemma ng 
ff ff ng 
lemma contradiction 
lemma odd proof 
suppose 
lemma lemma ff ng ff ff ff lemma know 
lcm denote common multiple lemma odd lcm 
proof 
suppose 
odd lemma repeated application lemma gives particular theorem odd exists bit antipodal gray code 
proof 
lcm 
odd consecutive integers 
common factors lcm 
show bit antipodal gray code odd elements distinct require mod 
contradiction 
remains show 
sequence ips lemma sequence bit changes 
bit occurs number times requiring 
nonexistence antipodal gray able show exhaustive search antipodal gray code exist 
focus search note signature bit antipodal gray code theorem divides gcd divide 
rotation 
excluded de nition minimal 
assume loss generality 
test existence bit gray code systematically generated sequences bit ips consistent signature tested see gray code 
antipodal gray code 
sequence failed test 
antipodal gray codes section prove existence bit antipodal gray codes 
signature bit antipodal gray code theorem divides gcd divide show construct bit antipodal gray code signature sequence signs followed signs 
bit antipodal gray code signature decompose sublists length follows 
note mi list example bit antipodal gray code signature suppose listing subset set bit strings 
say agc listing successive elements including rst di er just bit ii string complement appears steps steps earlier lemma rotation agc listing bit strings signature similarly reversal rotation agc listing bit strings signature proof 
note agc listing 
de nition signature antipodal property 
successive elements successive elements need check di er bit 
lemma di ers bits di ers just bit 

show rotation satis es required conditions true rotation repeated application 
complement occurs steps list complement appears steps earlier signature similarly reverse signature successive elements including rst di er bit 
list length create list length listing element twice bit antipodal gray code list rotated positions de ned example need notation 
lists bit strings length denote list th element concatenation strings consider collection lists ja bit antipodal gray code lists ja example ja remainder section assume arguments taken modulo 
corollary list ja agc listing signature bit strings 
true rotation reversal list ja proof 
note successive elements ja including rst di er just bit di er bit odd di er bit 
rest corollary follows lemma 
lemma collection lists ja bit string occurs exactly 
proof 
lists bit strings ja list bit strings 
total number lists ja length list length 
total number elements lists remains show bit string occur 
string length appears bit gray code occurs twice consider string de nition xed lists ja contain strings fxy mg note 
furthermore pairwise disjoint total number distinct strings pre lists ja total number bit strings pre remaining task show link agc listings ja obtain antipodal gray code bit strings 
rst prove linking lemma 
lemma pairs bit strings di er bit ii iii addition subscripts modulo addition arguments modulo 
proof 
de nition 
consecutive elements di er just bit result follows 
ii iii element rst element consecutive elements di er just bit 

argument iii exchanged 
lemma xed agc listings signature bit strings list ja lists rst elements rst 
rst 

proof 
recall list list rotated positions corollary satis es required properties 
list rotated positions reversed reverse corollary satis es required properties 
lemma xed necessarily cyclic agc listing signature bit strings lists fa ja mg rst elements follows rst 
rst 

proof 
de ne see 
lemma recalling arguments taken modulo claimed rst element rst element element element check boundaries consecutive sublists element rst element lemma di er bit 
start 
construction row represents list dot row column represents bit string 


start construction row represents list traversal row shown represents list dot row column represents bit string 

construction row represents list dot row column represents list mod de ne see 
lemma claimed rst element rst element element element check boundaries consecutive sublists element rst element lemma di er bit 
lemma xed necessarily cyclic agc listing signature bit strings lists fa ja mg form proof 
de ne see 
check rst elements lemma rst element rst element element element check successive sublists adjacent rst consider element rst element di er bit di er bit rst elements antipodal gray code lemma mod mod means true hypothesis 
check remaining list boundaries element rst element lemma ii di er bit 
theorem bit antipodal gray code signature ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja bit antipodal gray code signature notation means list rotated start element 
read 
proof 

bit antipodal gray code signature derived bit antipodal gray code 
assume bit antipodal gray code signature construct bit antipodal gray code signature described section decompose sublists length construct list lemma lists contain bit string exactly 
lemma necessarily cyclic agc listing signature xed claim list bit antipodal gray code 
see 
furthermore signature case remains check adjacencies boundaries list element rst element lemma iii di er bit 
open problems concluding remarks power remains open determine exist bit antipodal gray codes 
suspect answer 
smallest value question exhaustive search may feasible illuminating nd proof nonexistence odd construction answer 

grateful hunter sharing problem 
br frank ruskey 
transition restricted gray codes 
electron 
combin research pp 
electronic 
gil gilbert 
gray codes paths cube 
bell system tech 

luis george lawrence evi nemeth 
gray codes optimized run lengths 
math 
gra gray 
pulse code communications 
patent march 
knu donald knuth 
pre generating tuples preview section volume art computer programming 
www 
stanford edu knuth news html 
ram mark 
new method generating hamiltonian cycles cube 
discrete math 
rc john robinson martin cohn 
counting sequences 
ieee trans 
comput 
sav carla savage 
survey combinatorial gray codes 
siam rev 
sne hunter 
private email communication october 
sw carla savage peter winkler 
monotone gray codes middle levels problem 
combin 
theory ser 

vs vickers silverman 
technique generating specialized gray codes 
ieee trans 
comput 

