cient computation pagerank haveliwala stanford university db stanford edu october discusses cient techniques computing pagerank ranking metric hypertext documents 
show pagerank computed large subgraphs web hundreds millions nodes machines limited main memory 
running time measurements various memory configurations pagerank computation page stanford webbase archive 
discuss methods analyzing convergence pagerank induced ordering pages 
convergence results helpful determining number iterations necessary achieve useful pagerank assignment absence presence search queries 
dramatic growth world wide web exceeding pages forcing modern web search engines look simply content pages providing relevant answers queries 
utilizing link structure web improving quality search results promising 
particular google search engine uses pagerank iterative algorithm determines importance web page importance parent pages :10.1.1.109.4049
related algorithm ibm hits system maintains hub authority score page authority score page determined hub scores parents hub score page determined authority scores children 
centralized search engines having trouble simply indexing entire web presenting users search query results relevant increasingly di cult 
growth web force greater reliance clientside filtering relevance analysis personalized searching techniques essential 
part research personalizing link ranking algorithms involves applying biases iterations increase importance certain categories pages :10.1.1.107.7614
instance influence pagerank weight pages related computers heavily pages related cars 
scenario user supported nsf iis nsf graduate research fellowship expected run pagerank biased personalization profile personal machines necessary link structure provided inexpensive media dvd rom 
reducing running times memory requirements personalized ranking algorithms essential 
reviewing pagerank algorithm section discuss various aspects running time show computed ciently describe implementation principle underlying block join strategy ciently controls cost iteration low memory environments section empirically show single precision rank values su cient computation section investigate techniques determining number iterations required yield useful pagerank assignment 
convergence results metrics useful induced ordering pages pagerank value considered 
investigate convergence globally induced ordering ordering induced specific search results section showing useful ranking computed large web subgraphs little hour modest main memory requirements potential personalization clear 
review pagerank review motivation pagerank 
essential idea page link page author implicitly conferring importance page importance confer 
outdegree page rank represent importance pagerank page link confers rank units rank simple idea leads fixpoint computation yields rank vector rank pages web 
number pages assign pages initial value represent set pages pointing iteration propagate ranks follows rank bv rank continue iterations rank stabilizes threshold 
final vector rank contains pagerank vector web 
vector computed crawl web values influence ranking search results 
process expressed eigenvector calculation providing useful insight pagerank 
square stochastic matrix corresponding directed graph web assuming nodes note bv edge guarantees nu outgoing edge 
link page page matrix entry ij value entries value 
iteration previous fixpoint computation corresponds matrix vector multiplication rank 
repeatedly multiplying rank yields dominant eigenvector rank matrix corresponds stochastic transition matrix graph pagerank viewed stationary probability distribution pages induced random walk web 
measure convergence iterations residual vector 
stochastic entries column sum dominant eigenvalue 
pagerank vector rank dominant eigenvector eigenvalue leading equality rank rank deviation equality vector error estimate 
intermediate vector rank residual rank equivalently multiplication iteration step residual rank rank treat residual indicator rank approximates rank expect residual tend zero adequate number iterations 
address issues regarding computation 
previously assumption node outgoing edge 
enforce assumption iteratively remove nodes outdegree 
alternatively conceptually add complete set outgoing edges node outdegree 
caveat convergence pagerank guaranteed irreducible strongly connected aperiodic 
guaranteed practice web true add dampening factor rank propagation 
define new matrix add transition edges probability pair nodes cm nn modification improves quality pagerank introducing decay factor limits ect rank sinks addition guaranteeing convergence unique rank vector :10.1.1.107.7614
modification iteration pagerank expressed follows rank cm rank bias pagerank weight certain categories pages replacing uniform vector nonuniform personalization vector discussed :10.1.1.107.7614
terms random walk model pagerank personalization vector represents addition complete set transition edges probability edge matrix results modifications discussed sparse need store explicitly 
need ability evaluate rank ciently 
equality fact rank cient memory usage momentarily ignore scale web implementation pagerank simple 
sheer scale web requires greater care data structures 
detailed discussion naive implementation clarify size datasets 
naive algorithm useful gaining clear understanding matrix vector multiplication specific context pagerank 
cient version algorithm reminiscent block nested loops join algorithm substantially lowers main memory requirements 
similar strategies fast memory matrix vector multiplies commonly scientific computing community improving caching behavior 
dealing massive web repositories data structures measured gigabytes stored disk take centric approach presenting algorithm cost analysis 
empirical timing results naive block approaches 
naive technique stanford webbase local repository web currently contains roughly pages 
urls link graph including urls crawled exist bodies crawled pages 
experiments preprocessing step removed dangling pages meaning pages children 
starting node graph nodes outdegree removed 
step repeated resulting graph yielding subgraph close nodes 
process needed original graph truncated snapshot web dangling nodes 
nodes outgoing links pointing back crawled subgraph adversely ect pagerank assignment mentioned section 
node id assigned consecutively 
link structure final graph referred links stored disk binary format illustrated textually 
source id destination id stored bit integers 
link structure outdegree stored bit integer 
size link structure preprocessing steps mentioned gb assumed exceed size main memory 
setup naive pagerank implementation follows 
create arrays floating point values representing rank vectors called source dest conceptually shown matrix vector multiplication 
rank vectors vector entries number nodes web graph 
experiment 
rank values iteration held source rank values iteration constructed dest 
single precision values arrays particular graph combined size mb 
iteration steps expressed follows dampening factor source residual dest links eof links read source dest dest dest 
dest dest dest dest source source dest dest dampening personalization residual source dest recompute iterations source dest successive passes links current rank values held source compute rank values held dest 
norm di erence source dest reaches threshold alternatively number iterations 
assuming main memory large hold source dest cost iteration implementation links main memory large hold dest array assume link structure sorted source field cost source dest links source needs sequentially read disk rank propagation step dest needs written disk serve source vector subsequent iteration 
machines may main memory hold arrays larger crawl pages clearly result rank vectors exceed main memory computers 
considering publicly indexable web contains roughly pages naive approach infeasible large subgraphs web 
mentioned link structure sorted source field accesses source sequential pose problem 
random access pattern dest array leads working set implementation equal size dest array 
main memory accommodate dest array running time increase dramatically cost analysis invalid 
block strategy similarity iteration pagerank relational join operator 
children node source structure links represented children source links 
consider rank arrays source dest relations iteration pagerank performing join entry source source joins entry dest dest dest children source links 
adjoining fields tuples adding scaled value source entry dest entry 
analogy exact core technique block oriented join strategy control working set pagerank algorithm 
partition dest array cause large working set blocks size pages illustrated 
represents size main memory blocked multiplication physical memory pages require leave input bu ers reading source links 
links file links rearranged reflect setup 
partition links links files links 
links destinations field links contains nodes dest dest 
words outgoing links node bucketed range identifier destination page falls 
partitioning links case blocks shown 
partitioning scheme obeys equality children source links children source links partitioned link file note links links extra overhead caused redundant storage source node outdegree entries partitions 
block oriented algorithm proceeds follows source residual 
dest links eof links read source dest dest dest 
dest dest dest dest source source dest dest dampening personalization write dest disk residual source dest recompute iterations source dest links sorted source field pass links requires sequential pass source 
working set algorithm exactly design swapping occurs 
define equality links links satisfied 
cost approach source dest links practice reasonably small shown 
cost introduced partitioning scheme need passes source array 
practice links source additional overhead reasonable 
note computing residual iteration require additional pass source included cost analysis 
largely avoid cost computing residual fixed intervals 
stored links transpose format entry contained node list parent nodes algorithm remain essentially break source array blocks multiple passes dest array 
successively load blocks source fully distribute rank links destinations dest 
note pass dest array requires reading values disk adding current source block contributions writing updated values disk 
links links incurs additional cost dest dest read written pass 
order take advantage sequential read transfer benefits load page source links time stream 
bu ering reduces ective time required pass source links expense increasing 
best strategy allocating memory data structures dependent machine disk architecture reasonable allocation allow pagerank algorithm ciently cases rank vectors exceed main memory 
timing results experiments mhz pentium iii machine rpm western digital ac hard disk 
measured running times pagerank roughly pages di erent partitionings dest array block naive blocks blocks 
expected memory usage 
tested partitioning strategies di erent memory configurations mb mb mb 
time required iteration pagerank partitionings memory configurations 
expected cient strategy partition dest array corresponding links structure blocks single dest block fit physical memory 
blocks slightly degrades performance number passes source size links increase 
shows total size link structure partitionings associated discussed section 
blocks degrades performance orders magnitude 
cases block size exceeds physical memory estimate full iteration time partially completed iteration running times unreasonably high 
blocking strategy commonly algorithms including relational join operator ective controlling memory requirements pagerank 
block pagerank approximation normal pagerank matrix vector multiplication source performed dest links partitioned 
resultant pagerank vector identical regardless number blocks 
stanford webbase increases size hundreds expected memory usage log plot running times link structure growth millions pages block oriented technique essential computing pagerank machines fairly large amounts main memory 
furthermore block oriented technique necessary allowing individual users compute personalized pagerank 
accuracy computing pagerank single precision double precision values source dest arrays 
double precision source dest adversely ect running time doubling sizes vectors 
show single precision source dest vectors su cient 
double precision values individual variables current residual current total rank 
individual variables course negligible impact memory footprint 
single precision rank vectors lead significant numerical error 
computed pagerank iterations single precision source dest vectors 
converted final computed pagerank vector equivalent double precision vector performed double precision iteration step get accurate value residual recomputed pagerank iterations exclusively double precision vectors residual final vector noticeably improved convergence analysis pagerank guaranteed converge conditions mentioned section measures analyze convergence rate 
residual norm di erence pagerank vectors successive iterations discussed section possible measure convergence 
useful approach analyzing convergence involves looking ordering pages induced rank vector 
pagerank values strictly determining relative importance pages convergence measured ordering changes number iterations increases 
section discuss various techniques analyzing convergence induced orderings 
depending final application rankings concentrate ordering induced pages ordering induced results specific queries 
discuss global orderings look query specific orderings 
global ordering global ordering induced pagerank provides insightful view convergence rate 
analyze convergence induced ordering ways histogram di erence positions pages orderings similarity measure ordered listings 
analyzing change page ordering varying number iterations concerned instability top ranked pages histograms position di erence deem particular page important second important usually irrelevant 
shows histograms bucket size position di erences orderings induced various numbers iterations compared ordering induced iterations 
considered page orderings placed top account intuition ordering highly ranked pages significant 
ordering induced iterations see bulk pages occur similar positions ordering induced iterations 
turn similarity measure 
scenarios concerned identifying top pages may necessarily need exact ordering 
instance resources index process small subset web choose concentrate unordered set highly ranked pages 
define similarity sets pages visualize closely ordered rankings agree identifying top pages successively compute similarity top pages ordering increased stepped increments 
graph similarity orderings increased steps pages 
see ordering induced iterations agrees closely ordering induced iterations top pages 
query specific ordering pagerank currently predominantly ranking search results 
analyzing global ordering useful certain applications show instability ordering iterations tends ect relative rankings global similarity unrelated pages 
just concerned instability highly ranked pages concerned instability pages occur results search query 
pagerank computed yielding global ordering web pages 
investigating query specific ordering take subset pages corresponding results conjunctive search query analyze relative ordering pages result set 
analyze convergence induced orderings results typical search queries 
games query retrieved urls pages webbase contained words action adventure game role playing 
music query retrieved urls pages contained words music literature 
roughly pages query urls satisfied games query urls satisfied music query 
see figures orderings induced iterations agree fairly orderings induced iterations 
pagerank process converge quickly viewed context query results 
residual vector rank rank appealing mathematical sense myopic view convergence rate 
looking induced ordering provides practical view convergence behavior 
techniques discussed applicable broader context measure difference orderings induced various pagerank number iterations remains constant 
personalization web information retrieval increasingly important area research amount available data web continues grow 
games query similarity music query similarity shown pagerank computed ciently modestly equipped machines suggesting individual users compute personalized pagerank vectors 
investigating ective means constructing personalization vector discussed section resultant ranking vector best captures user notion importance page 
envision utilizing user browsing history bookmark collection build personalization vector 
section empirically showed accurate pagerank vector computed iterations accuracy measured context induced ordering results conjunctive search queries 
convergence result suggests experiments determine extent exact nature query ects iterations needed induced ordering query result stabilizes 
methods discussed analyzing ect induced ordering explore techniques speeding pagerank computation minimizing loss accuracy 
algorithms harnessing link structure web increasingly useful tools relevant results search queries 
pagerank algorithm simple idea scaling implementation operate large subgraphs web requires careful arrangement data 
demonstrated pagerank run modestly equipped machines 
determined single precision rank vectors su cient accurate computation 
ways analyzing convergence algorithm ordering induced web pages rank vector 
looking ordering induced specific query results shown iterations provide useful ranking assignment 
timing results section convergence rate implies compute useful pagerank vector modestly equipped machine roughly hour demonstrating feasibility client side computation personalized pagerank 
professor je ullman professor rajeev motwani rest stanford midas group invaluable discussions regarding ideas 
stanford webbase team access web crawl data 
search engine watch date information leading search engines 
located www searchenginewatch com 
google search engine commercial search engine founded originators pagerank 
located www google com 
bharat broder 
technique measuring relative size overlap public web search engines 
proceedings seventh international world wide web conference 
brin motwani page winograd :10.1.1.107.7614
web pocket 
bulletin ieee computer society technical committee data engineering 
brin page 
anatomy large scale hypertextual web search engine 
proceedings seventh international world wide web conference 
chakrabarti dom gibson kleinberg raghavan rajagopalan 
automatic resource compilation analyzing hyperlink structure associated text 
proceedings seventh international world wide web conference 
chakrabarti van den berg dom 
focused crawling new approach topic specific web resource discovery 
proceedings eighth international world wide web conference 
dean henzinger 
finding related pages world wide web 
proceedings eighth international world wide web conference 

im yelick 
optimizing sparse matrix vector multiplication smps 
proceedings ninth siam conference parallel processing scientific computing 
kleinberg 
authoritative sources hyperlinked environment 
proceedings acm siam symposium discrete algorithms 
lawrence giles 
accessibility information web 
nature july 
motwani raghavan 
randomized algorithms 
cambridge university press united kingdom 
ramakrishnan 
database management systems 
mcgraw hill 
toledo 
improving memory system performance sparse matrix vector multiplication 
ibm journal research development volume 
ibm 

