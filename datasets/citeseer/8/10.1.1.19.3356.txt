coherency management ad hoc group communication va rie inria rocquencourt 
valerie 
inria fr features pervasive computing aims offering access users data anytime available terminal convenient situation 
realizing vision necessitates improvements way servers users terminals interact 
particular users terminals tightly rely information server temporarily unavailable mobile situation 
exploit information servers available context loose coupling fixed servers peer mobile terminals 
concentrates specifically enabling information sharing trusted mobile terminals ad hoc networking 
introduces coherency management protocol mobile ad hoc collaborative groups 
protocol lies integration conservative optimistic coherency management way minimizes communication energy consumption restricting nodes autonomy 
keywords distributed systems coherency management ad hoc networks mobile computing wireless networks 
commonplace person number personal computing devices laptop hand held mobile phone digital camera data available people devices 
common user find mobile computing devices equipped low power short range wireless connectivity bluetooth ieee ieee hiperlan ows optical wireless solution context pan personal area network 
connectivity devices enables users collaborative manner different networks 
ad hoc networks flexible enable users cooperatively form dynamic temporary network pre existing infrastructure 
needs achieved enable seamless access possibly shared coherent data anytime available terminal convenient situation 
group meeting group formed members share manipulate common data 
important features offered group members secure way sharing data ii coherency protocol deal concurrent updates iii energy saving mobile devices 
security ad hoc network may achieved symmetric asymmetric coherency management protocol ensure users access fresh data bluetooth 
bluetooth com deal conflicting operations may occur quite frequently intermittently connected environment detecting resolving 
protocol account energy saving aspects 
mobile terminals soon avail able embed powerful hardware lcd screens accelerated graphics high performance processor increasing number devices dvd cd 
capacity batteries goes slowly powerful components reduce battery life 
mandatory devise adequate solutions energy saving mobile terminals 
particular communication major sources energy consumption 
coherency management protocol integrated distributed system called provide features 
runs mobile stationary heterogeneous machines including wireless handheld devices pdas 
offers peer peer replication 
data copy trusted reliable stationary machine considered home server data 
home server identifies security domain address 
example security domain web server identified url hosting information relating project project members share data 
peers belonging security domain trust build secure ad hoc groups order col share data 
groups restricted hop ad hoc networks assume collaborating peers located local communication range 
extended multi hop ad hoc networks modifying coherency protocol part 
data ad hoc group associate address home server may extend local address data cached terminal terminals local communication range cache data identified underlying discovery service 
discovery service serves identifying peer mobile terminals accessible mobile terminal data may shared 
identification relies service location protocol slp 
seamless access realized making sure peer ad hoc group complete knowledge locations data objects term object abstraction different data types cached stored group 
discovery peer terminals naming structures maintained naming service objects terminals local storage merged object accessible local communication range gets identified 
access object mobile terminals leads copy object locally cached 
coherency management protocol log protocol mobile hop ad hoc environments 
log data structure named coherency control list ccl provides coherency manager history group updates 
managed way minimizes message exchange energy consumption 
coherency protocol deals coherency management ad hoc group data synchronized peers belonging group 
data copy stationary trusted machine 
synchronizing data copy saved stationary machine may done existing infrastructure base station peer storing data belonging ad hoc group meets machine 
organized follows section provides survey existing systems address replication coherency management mobile environment 
sections core contribution concerning coherency management ad hoc communication groups 
contribution lies integration data exchanged mobiles encrypted encryption 
conservative optimistic coherency management way minimizes communication restricting nodes autonomy 
section assesses proposed coherency management protocol terms properties complexity energy consumption 
shown coherency protocol ad hoc configuration energy demanding client server infrastructure configuration 
section concludes 
related advances wireless networking enhanced classical fixed distributed systems mobile wireless computing 
environment introduces specific constraints 
mobility requires replicating critical data mobile devices disconnected machines rely local resources 
fundamental problem distributed systems maintaining consistency 
problem addressed conservatively optimistically 
conservative replication requires consistency maintained data updated 
various methods achieve including primary copies voting weighted voting locking tokens 
conservative approach relies constant connectivity available mobile environment 
optimistic replication assumes concurrent updates conflicts rare 
allows updates performed independently replica 
preventing conflicts occurring mechanisms detecting resolving inconsistency update propagation 
number distributed systems deals mobility 
coda replicated file system supports mobile clients 
addresses replication coherency concerns 
afs coda distinction file servers physically secure run trusted monitored operational staff clients physically dispersed may mobile 
clients servers communicate remote procedure call mechanism 
coda replication model distinction types replicas server replicas primary replicas client secondary replicas 
coda synchronization protocol support synchronization clients 
client synchronize group available replicated servers 
file closed modification transferred members 
ficus replicated file system intermittently connected machines 
differs coda distinction replicas enables synchronization replicas 
ficus bases coherency management protocol rarity concurrent updates 
adopts copy availability permits read write access data replica accessible 
data update applied immediately replica replicas eventually notified updates 
inaccessible replicas guaranteed receive update notification eventually learn updates reconciliation 
ficus log updates 
periodically replica housed node reconciliation protocol checks replicas see new possibly conflicting version file exists 
may generate important communication rate 
coda ficus file systems solutions concerning replication coherency management strictly dedicated data tree topology suitable data topologies 
bayou optimistically replicated client server system :10.1.1.40.8955
designed support collaborative database applications mobile computing environment 
server machine holds complete copy databases 
clients able access data residing server communicate conversely machine holding copy database willing service read write requests available volume storage group 
nearby machines 
bayou adopts read write replication scheme grapevine 
user able read write copy database 
bayou guarantee timeliness writes propagate replicas communication replicas may temporarily infeasible 
replicated databases weakly consistent 
servers propagate writes copies database anti entropy protocol 
anti entropy ensures copies database converging state eventually converge identical states new updates 
achieve servers receive writes order consistently 
peer peer anti entropy adopted ensure machines able communicate able propagate updates 
oceanstore applies bayou conflict resolution mechanisms file system extends untrusted servers see data encrypted format 
tact explores spectrum absolute consistency bayou weaker model 
bengal distributed replicated database system supports mobile users 
bengal uses peer peer optimistic replication 
updates reconciled replicas con available 
dynamic version vectors detect conflicts collisions updates partitioned system 
comparison version vectors indicates conflict bengal calls series configured conflict resolvers attempt automatic conflict resolution 
conflict resolver software component contains applicationspecific rules determining conflicting versions accepted new version merges created 
bengal users design reconciliation topologies star ring tree 
reconciliation topology constrain repli cas reconcile 
performing suggested topology merely guarantees updates reach replicas 
reconciliation mechanism clearly performance bottleneck bengal 
essentially due cascading conflict resolvers calls generates 
systems properties help tolerate high network latency may interesting mobile environment 
nfs protocol reduces network round trips batching file system operations 
echo performs write metadata operations allowing immediate completion operations traditionally require network round trip 
machine write file file server transmit contents directly reader 
lbfs file system designed low bandwidth networks 
assumes clients cache contain user entire working set files 
reasonable assumption system runs environment containing hand held devices reduced storage capacities 
stated difficulty maintaining coherency enabling disconnected updates data synchronization conflict resolution 
general conflict detection resolution achieved efficiently update log 
existing systems restrict conflict resolution single data topology 
coda system allows detecting types conflicts occurring data tree topology naming conflicts ii deletion modification conflicts iii modifications conflicts iv file move conflict 
symmetric directories move allowed may introduce cycles data tree 
coda assumes conflicts rare treats errors 
conflict resolution done manually user 
ficus detects conflicts enumerated 
log updates uses version vectors developed locus detect update conflicts 
bayou system detects update conflicts application specific manner 
bayou write operation consists proposed update dependency set dependency set collection application supplied queries expected results 
conflict detected queries run server current copy database return invoked write conflict detected 
dependency set dictated application semantics may vary write operation issued application 
verification dependency check execution application update set done atomically respect database accesses server 
log solutions conflict resolution essentially relies logs merging constraints temporal order 
solutions exploit case reordering operations avoid conflict 
attempts find ordering operations contained merged log minimizes conflicts 
exploring possible ordering leads combinatorial explosion 
developers influence conflict resolution providing pre post conditions exploited order reduce search space 
solution coherency management ad hoc groups different previous combines advantages introduces new concepts 
security domain adopt optimistic coherency 
data updated concurrently disjoint ah hoc groups isolated peers belonging security domain 
conflicts detection resolution mechanisms activated peer reaches security domain home server communication range tries access data group 
conservative coherency policy enforced ad hoc group context consider ad hoc group peers sharing interest collaborative way 
vision shared information 
concurrent updates various copies data group adequate case 
update propagation done member group tries access data 
enables reducing exchange messages group 
group member updates local copy data propagation update necessary group members wants read update data cached locally 
log named coherency control list coherency management 
serves detecting resolving conflicts 
addition updates history ccl includes identity peers participate updates 
mobile environment relies optimistic coherency management coupling optimistic conservative techniques allows account various connectivity enabled today wireless new networking capabilities 
solution described sections 
ad hoc group coherency management approach coherency management ad hoc group built follows copy object stored home server version object identified respect time stamp incremented time copy updated 
update copy occurs mobile terminal synchronizes server detailed section 
coherency ad hoc group managed exclusive writer protocol see 
successive write operations ad hoc group lead propagate updates writer writer order decrease communication see 
diverging copies due non synchronized concurrent updates distinct groups detected group conflict detection protocol involving peers locally cache corresponding data see 
expected results 
san isolated node considered singleton group 
exclusive writer protocol coherency management protocol exclusive writer protocol ad hoc group 
read write locking group write operations exclusive group read operations shared 
local data manipulated read write independently disjoint groups provided data synchronized integrating group 
conservative coherency group necessary consider peers belonging group working collaborative manner access version shared data 
peer belonging security domain constitute singleton group independently 
profit optimistic coherency 
peer modes regarding data object read peer read data readwrite peer read write data invalid peer access data 
protocol peer modifies data readwrite state peers invalid state peers read state 
protocol ensures reads access data written group 
guarantees data coherency group data access 
conflict detection protocol concurrent divergent updates detected conflict detection protocol uses ccl coherency control list attached object 
ccl logs updates object copied synchronized copy storing data structure copy modified copied home server 
object created locally peer corresponding timestamp special value nil indicate object copy 
example ccl 
ccl comprises timestamp value copy time copied synchronized log subsequent updates local copy fig 

log list successive data members seen specific object copy fig 

data members give set peers belonging ad hoc group locally caching data 
time members composition modified addition deletion peer update new item added list contains new set group members storing data fig 

disconnected peer updates local copy data new item added local list contains id group composition list updates maintained fig 
content list depends specific data objects 
instance file system list modified blocks 
reconciliation object copies mobile nodes achieved comparing ccls associated objects 
ccl ccl prefix ccl ccl time stamp value copy equal ii list groups prefix list groups cc iii group composition list list updates associated corresponding item cc 
addition case ccl cc list group compositions condition iii hold group compositions list modified blocks associated group composition ccl prefix cc 
basically ccl prefix cc means object copy associated ccl earlier version copy associated cc 
older copy updated identified cc leading request corresponding updates owner latest object version 
ccls prefix corresponding object copies diverged addressed section 
timestamp log 
ad hoc group object group 
members object ul ul updates list coherency control list attached object coherency protocol local ccls mobile node able determine local object copies coherent objects copies stored peer nodes embedding ad hoc group 
node joins ad hoc group naming structure group merged 
group naming structure updated adding names objects brought newcomer 
enables making new objects accessible trusted nodes group 
peers naming structure 
node accesses object time coherency check 
enables detecting diverging copies discussed previous subsection 
protocol maintain coherency group members 
reading object group read lock taken fig 
identity latest writer group stored 
copy object requested object stored locally fig 

local object previously readwrite read mode just copied local copy date read access may proceed fig 

hand local object previously invalid mode local object copy synchronized writer ccl reconciliation fig 

latest writer receives synchronize message compares object copy respective ccls ccl sent synchronize message fig 

may reply ok copies identical ii diverge copies diverge iii list updates missing new state stored local read access done 
protocol handling write access quite similar 
group write lock taken ensure exclusive write access current group fig 
el copy object requested latest writer cached locally fig 

object invalid state possibly outdated checked coherency possibly updated done case read access fig 

object copy new state stored readwrite object accessed set updates added object ccl fig 

group write lock released allow subsequent write accesses 
updates propagated nodes storing object copy read access objects requested 
lazy update propagation follows concern locking management realized lock held terminal left group eventually acquired 
latest writer lb latest writer name state fresh endif match state read readwrite fresh invalid latest writer synchronize name ccl match ok diverge raise diverge update update done done state data return data data latest writer cached latest writer name state fresh endif match state read readwrite fresh invalid latest writer synchronize name ccl match ok diverge raise diverge update update done state updates data hi ccl ccl updates synchronize name ccl seek name status compare ccl ccl match status ok ok diverge diverge prefix update missed ccl cc done protocol coherent object access minimizing energy consumption computation communication 
users may fresh copies update able latest known version object 
may easily introduced associating priority attributes objects 
synchronizing diverging copies data ad hoc group updated independently copies stored home server copies distinct ad hoc groups 
update copy occurs time mobile terminal synchronizes local copy server 
frequency synchronization determined user 
done randomly mobile terminal belonging group storing data reaches server fixed period 
case synchronization done neighbor base stations group location geographically far home server 
case local infrastructure support enable deployment network protocol enables access 
imagine years common place find facilities building public transport planes trains 
ad hoc group versus base station infrastructure question asked ad hoc group communication group data synchronization possible synchronize data server base station necessary modification 
group management protocol detailed allows groups manipulate data independent manner 
synchronizing data copy server modification generate important number divergent copies need 
obvious significant number reconciliation represent loss time energy peers involved operation necessary versions data 
addition known base stations constitute bottlenecks 
maintaining data coherency ad hoc group independent infrastructure presence failure latency 
ad hoc networking expensive infrastructure 
mbps wireless interface idle ad hoc configuration costs mw mw base station configuration 
idle ad hoc configuration times energy consuming base station configuration 
sending receiving message cost term energy consumption mobile device cases 
general ad hoc infrastructure networking seen complementary 
ad hoc networking convenient collaborative infrastructure energy consuming idle 
working making possible switch network transparent manner adapt networking group specific situation available energy network connectivity surrounding environment 
synchronizing copy synchronization server managed follows list ccls attached copy server 
element list contains time stamp corresponding ccl 
new element added list time time stamp incremented 
time stamp incremented time copy updated occurs peer storing newer version data synchronizes server 
synchronizing peer copy may generate conflicts due diverging updates 
protocol ensure synchronization data stored peer copy home server 
reaching home server peer sends ccl modified data name fig 

server searches data named namei 
data exist server cases possible 
data erased server peer stores user decide save data server delete peer fig 

second case data locally created peer ant synchronizes server fig 

case server creates new ccl data name equal namei timestamp equal log equal 
server saves copy new data sends current time stamp synchronize message 
data namei stored server fig 
hi ieee prototype 
server match synchronize time stamps erase log time stamp time stamps update time stamps data erase log time stamp time stamps update name data done match namei notfound time nil namei time stamps logs update server synchronize time stamps data namei erased server endif match compare ccls equal server synchronize time stamps prefix server update time stamps missed ccls increment time stamps logs update missed ccls server synchronize time stamps nearest ccls search nearest ccl ccls cc match compare nearest ccls equal prefix sends peer missing updates ccls done done done protocol peer synchronization home server server ccl compared peer fig 

notions prefix suffix ccls 
prefix defined section equality timestamps considered determine ccl prefix 
suffix defined follows suffix prefix ccls equal server answers sending time stamps synchronize message fig 

case peer ccl prefix server ccl ccls server sends peer newer version data timestamp update message fig 

suffix server ccl ccl ccl prefix ccl server updates copy updates misses ccl increments time stamp sends peer synchronize message fig 

hand ccls different seek older ccl stored server near ccl fig 

ccl considered near ccl equal ccl oldest suffix 
ccl exists sever sends peer updates peer misses ccl corresponds current server time stamp update message fig 

ccls stored server match requirements conflict resolution required fig 

notice enhanced automation conflict resolution achieved constraints ordering ccls proposal part 
peer side receiving synchronize message peer erases log updates time stamp fig 

receives update message erases log updates time stamp store new version data fig 

assessment protocol ensures peer ad hoc group access latest group version data 
enables manipulating distinct copies data different groups implies reconciliation synchronizing server meeting peers group provided data accessed group 
coherency protocol aims reducing coherency check communication computation 
consider group peers peers storing data object theoretical complexity number messages exchanged coherency protocol ad hoc group obtain data accesses depends previous state object lock requested operation 
object write locked peer write operation requested peer messages necessary validate operation new writer asks write lock 
sends write lock ccl checks coherency sends back list missing updates 
sends updates 
read operation requested number messages reach broadcast messages new reader asks writer read lock 
sends read lock ccl peers storing data messages broadcast message peers send back list missing updates 
ccl corresponds largest time stamp value 
time stamp inferior current 
time stamp smallest regarding ccl data 
previous requested ad hoc infrastructure lock operation msgs mw sec msgs mw sec write write read read broadcast write read write broadcast read table cost coherency management sends updates concerned peers 
object read locked peer read operation requested message exchanged 
write operation requested messages necessary validate operation broadcast messages new writer asks peer write lock 
sends write lock 
informs concerned peers write operation 
number messages exchanged group increase quite sig mobiles rely base station client server communication 
table shows advantage conservative coherency ad hoc groups versus optimistic recovery infrastructure communication dealt existing mobile systems 
energy consumption ghz dsss lucent ieee wavelan pc bronze mbps wireless evaluation 
focusing energy cost associated communication ad hoc networking cost associated emission message sum cost emission sender node cost reception destination node cost reception non destination nodes terminals receive control messages due location respect nodes 
energy consumed mobile terminal sending receiving discarding message linear equation size size message size resp 
denotes incremental resp 
fixed energy cost associated message 
value pw 
sec detailed various mobile terminals impacted message transmission 
point point transmission size size value non destination nodes evo size 
energy consumption point point message sum previous equations ems size case broadcast size destination peers 
size 
broadcasted message costs ems size mentioned subsection idle ad hoc configuration costs mw mw base station configuration 
sending receiving message cost mobile device cases 
ignore energy consumed base station focus energy spent group mobiles communicate base station 
peer spends size sec send message base station side peer spends tov size sec receive message base station 
ieee maximum size message byte 
energy cost protocol group peers storing data depicted table peer peer ad hoc communication base station communication 
relying base station energy consuming obtain write read access data data object read locked write operation requested 
broadcast base station configuration coherency protocol difference regarding energy consumption broadcast performed base station take account energy consumption base station 
broadcast peer peer ad hoc configuration coherency protocol reduces data write locked read requested data read locked write operation requested 
evaluated coherency management protocol ad hoc group communication 
aims enable seamlessly access data anytime trusted cheap way ii share information trusted computing resources communication range iii coherent view data independent 
goals ideas coherency management importance collaborative group users share data respective devices person number computing devices 
mobile aware coherency management protocol allows peers caching data copy reconcile home server peers joining group provided data cached group 
provides conflict detection coherency control list attached data copy 
enhancements system improving support automatic conflict resolution 
pierce 
file synchronizer int 
conf 
mobile comp 
netw 
mobicom 
acm ieee 
bettstetter 
comparison service discovery protocols implementation service location protocol 
proceedings th open european summer school innovative internet applications 
david bindel chen patrick eaton dennis geels ramakrishna gummadi sean rhea hakim weatherspoon weimer christopher wells ben zhao john kubiatowicz 
oceanstore extremely wide area storage system november 
levin needham schroeder 
grapevine exercise distributed computing 
communication acm pages april 
david reiher peter popek gerald dynamic version vector maintenance 
tech nical report 
demers greene hauser irish larson shenker sturgis swinehart terry 
epidemic algorithms replicated data base maintenance 
proceedings ma size supported actual technology 
th symposium principles distributed computing pages vancouver canada august 
demers petersen spreitzer terry theimer welch 
bayou architecture support data sharing mobile users 
proceedings ieee workshop mobile computing systems applications pages santa cruz california 
edwards mynatt petersen spreitzer terry theimer 
designing implementing asynchronous applications bayou 
proc 
syrup 
user int 
software tech banff alberta canada oct 
todd charles peter reiher gerald popek 
bengal database replication system 
distributed parallel databases 
nilsson 
investigating energy consumption wireless network interface ad hoc networking environment 
proc 
ieee 
gauthier harada stemm 
reducing power consumption generation pdas network interface january 
bjorn stephen pink 
design multicast distributed file system 
proc 
operating systems design implementation pages 
richard guy 
ficus large scale reliable distributed file system 
technical report csd los angeles ca usa 
anne marie kermarrec antony marc shapiro peter druschel 
approach reconciliation divergent replicas 
proc 
th acm symposium principles distributed computing podc 
kumar satyanarayanan 
log directory resolution coda file system 
proc 
nd international conference parallel distributed information systems pages 
kumar satyanarayanan 
flexible safe resolution file conflicts 
proc 
usenix winter conference january 
timothy mann andrew andy hisgen charles garret swart 
coherent distributed file cache directory write 
acm transactions computer systems 
alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press th edition edition 
isbn 
davide valerie 
serverless file system mobile users 
technical report inria rocquencourt november 
james morris satyanarayanan michael conner john howard david rosenthal smith 
andrew distributed personal computing environment 
communication acm march 
muthitacharoen chen david 
low bandwidth network file system 
proc 
th acm symposium operating systems principles sosp banff canada october 
parker popek stoughton walker walton chow edwards kline 
detection mutual inconsistency distributed systems 
ieee transaction software engineering pages may 
petersen spreitzer terry theimer demers 
flexible update propagation weakly consistent replication 
proc 
syrup 
operating systems principles sosp pages saint malo oct 
david howard 
roam scalable replication system mobile distributed com puting 
phd thesis university california uc los angeles january 
satyanarayanan james kistler kumar maria okasaki ellen siegel david steere 
coda highly available file system distributed workstation environment 
ieee transactions computers 
callaghan robinson beame 
nfs version protocol 
rfc network working group december 
yu vahdat 
design evaluation continuous consistency model replicated services 
proc 
rd symposium operating systems design implementation 

