xquery ir integrating xml document data retrieval jan marco michael gertz university california davis cs ucdavis edu foremost features xml provide uni ed view kinds structured semistructured data loosely structured documents 
document means coherent unit usually textual information data stands uninterpreted raw content xed context 
content xml applied today text rich 
structural aspects uni ed xml view rigid support data retrieval dr queries known database systems 
past years increasingly powerful query language notably xquery standard exploited fact provide date dr query capabilities xml 
hand xml structural aspects transparent treat arbitrary parts xml represented data documents 
document information retrieval ir provides important capabilities querying text rich documents 
far ir supported xquery earlier xml query languages 
dr provides means queries exact matches data 
ir notion relative relevance documents document collection 
major issues integration ir xml query language arise today toy collections small xml documents eventually replaced large hierarchically structured xml databases 
databases notions static document collection document lost replaced kind document collection view dynamically established query 
poses challenges new embedded ir algorithms application host language nal operation standard ir 
challenges signi cant rewards form increased expressiveness resulting integrated query language arise 
ir general detecting ne di erences term distributions document collection leading valuable information 
value information highly context dependent 
currently context ir static document collection 
changes term statistics dynamic document views available exploited ir algorithm 
dr language natural means specify context relevance query 
ir truly embedded query language derived information obtained ir style ranking identi ed relevant components 
example mean publication date information related certain event reported textual news naturally leads apex event 
results ongoing research integrate ir capabilities xquery provide expressive queries dr ir answer 
xquery related standards de ne document fragment sequences output intermediate nal results 
identify document fragments dfs equivalent documents document collections xml queries 
introduce single new operator called rank xquery 
operator orders dfs arbitrary intermediate 
expressions similar xquery expression 
operator orthogonal xquery operators arbitrarily nested 
rank operator imposes requirements implementation relevance ordering dfs 
establish general framework research query language embedded ir algorithms 
de ne dynamic ranking principle captures ir algorithms allow richest type queries local context 
algorithms term statistics current dfs returned sub query 
brie study consequences rank operator index structures query optimization 
related 
oracle contains operator implements standard static ir approach table columns 
operator sql clause 
exact keyword search certain xml elements introduced xml ql 
earlier related approaches structured documents 
aim improved web search means ir enabled xml query language 
similarity operator mainly vehicle execute fuzzy similarity joins atomic values dfs 
xml ql host language 
xql proposes ir style operator computes similarity dfs queries means upwards propagated similarity weights xml leaf elements 
xql expressive xquery lacks important data retrieval capabilities 
common approaches extension clause implies selection partitioning input relevant non relevant objects 
relevance sorting employed scheme naturally re ects ir ordering properties allowing partitioning means relevance threshold 
approach existing approaches able demonstrate meaningful useful nested queries involving dr ir operations 
seen applying ir local context established dr sub query previous ir style query 
passage retrieval approaches document components improve ranking supporting ir document parts local context 
feasibility utility ir index structures semistructured data required approach shown 
overview 
section establish background 
section introduce new operator demonstrate application 
section discusses implementation issues operator including dynamic ranking index structures query optimization 
section conclude brie point 
background xml data model employ xml model documents fragments documents represented ordered node labeled trees 
leave details comments processing instructions distinction elements attributes 
assume set element names set text string values disjoint set denote set lists built elements xml document fragment tuple label elem set vertices distinguished element called root node label mapping vertices element labels label elem mapping vertices children elem 
xml document xml document fragment df 
furthermore denote set document fragments xml document fragment sequence dfs sequence elements 
irst denote sub sequence consisting rst jsj elements whichever smaller 
xquery xquery combines features earlier xml query languages particular xpath 
xpath dfs extracted xml document 
nested loops iterate fragments extract dfs construct sequences output dfs 
variable assignment supports complex computations content structure input 
details xquery formal semantics discussed 
approach sucient note output xquery queries query mapping 
illustrate syntax semantics xquery means simple examples 
extend examples section demonstrate new operator 
example select paragraphs articles dating back feb th news document database 
document news xml article date paragraph example consists single xpath expression valid xquery query 
example list articles appeared rst author title sorted order 
document bib xml article year return authors author text author title descending example consists single loop goes articles extracts author title 
complete title df part result fragments 
new tag name introduced author 
returned fragments ordered author title 
example convert list news articles classi ed certain category list categories related articles 
category ffor document xml category return name text ffor document news xml article cid id return aid idg title text category example represents join category article dfs news category identi er 
join implemented nested loops 
document retrieval document retrieval commonly information retrieval ir concerned ordering documents document collection relevance simple query usually terms 
relevance term distribution statistics 
numerical weight assigned term occurrence document 
weight represents term signi cance document content 
relevance ordering obtained summing query term weights document determining highest sum 
second avor ir concerned partitioning collection relevant non relevant documents 
implemented means ordering approach application threshold documents regarded relevant 
standard approach weighting terms term inverse document tf idf approach 
tf idf assigns higher weights term occurrences high document low document documents contain term 
term distributions may vary widely document collection 
signi cance term occurrence relevance highly depends context 
retrieval approaches today context complete document collection 
xquery rank operator traditional ir result usually stand query total order partitioning documents single unit collection 
result directly user 
integrating ir xml query language raises major questions 
appropriate equivalent documents document collections single xml document source set 

ir query 
particular sense consider ir nal operation meaningful intermediate query step 
xml queries extract document fragments dfs xml sources 
dfs data unit suitable replace notion document standard ir 
xquery particular results sequences dfs 
natural modify order dfs dfs means ordering ir approach similar sorting xquery 
accomplished single operator 
replace notion document collections 
order transparent subsequent queries rely order exploited sub queries shown result 
relevance partitioning implemented top ordering ir discussed section 
observations derive requirements integrating ir operator xml query language particular xquery 
total order 
operator able order sequence dfs relevance 
local context 
partitioning avor ir supported establish local context subsequent queries 
closure 
operator closed xquery applicable arbitrary xquery expressions 
transparency 
operator ect queries ways changing dfs internal order eliminating parts dfs 
exchangeability 
ir weighting algorithm underlying operator exchangeable 
user means choose algorithm 
additional requirement impose appears ir style ranking host language useful visibility 
operator assign visible ranking weights dfs causing side ects embedding query 
exchangeability property operator allows di erent ir algorithms plugged query engine 
introduced limitations identify certain class algorithms called dynamic ranking algorithms required establish real local context sub queries 
algorithms subject section 
introduce syntax semantics operator meets requirements 
elegant simplicity xquery extension allow understand operator functionality easily space limitations prevent going details 
syntax propose add single new operator called rank xquery language 
operator expression extends set base xquery expressions 
expression similar xquery expression section 
de nition expression expr ascending descending 
basedon limit expr 

list strings constant dfs expressions return dfs interpreted strings xquery 
list context node dependent path expressions 
refers xquery function 
syntax semantics xquery functions speci cation fully speci ed 
symbolic nature 
represents ir algorithm may may implemented kind stored procedure 
semantics assume set document fragments section 
weight special element name de nition weighting algorithm assume set ir queries includes dfs consisting string particular single terms 
set operators equal df additional element named weight root 
weight element single number string child representing relative relevance weight respective df called weighting algorithm 
expression part represents certain exchangeable weighting algorithm 
related queries dfs interpreted query text 
actual query interpretation limitations allowed query types depend weighting algorithm particular typical ir term queries sun moon regarded dfs single text string node 
advanced weighting algorithms may structure query dfs 
de ne actual ranking operator terms weighting algorithm xquery existing sort operator 
de nition rank operator rank operator operator rank rank irst sort weight set natural numbers de ned 
sort weight refers sorting dfs weight element 
irst eliminates rst elements irst 
non empty expression df input rank fragments selected path expression complete dfs 
elimination rst dfs relates limit part expression 
extension limit certain percentage dfs total weight kept elimination 
weighting algorithm exchangeable rank implements total order called requirements 
adds weight element df making ranking visible requirement 
note xml envision attribute added 
attribute transparent rest query explicit part simpli ed data model 
full transparency ranking achieved introducing reserved name weight xquery 
xquery closure kept remain output 
call xquery query language extended rank operator xquery ir 
due space limitations show expressiveness xquery ir means examples favor complete discussion 
examples example simpli ed extended retrieve maximum paragraphs relevant information new york follows document news xml article paragraph new york limit result look weight new re 
weight weekend weather new york 
weight 
example sorting result author relevance ranking articles abstracts obtained document bib xml article year return authors author text albert einstein basedon note xpath expression relative context node terms albert einstein replaced expression selects text query document document authors xml author name einstein accomplishments modi cation earlier news example extracts rst articles category 
ran category ffor document xml category return name text ffor document news xml article cid id return aid idg title text keywords limit category king occurs inner loop actual relevance category article classi ed 
implementation aspects weighting algorithms underlying new operator novel properties 
furthermore rank implications system implementation particular index structures query optimization 
address issues brie section 
dynamic ranking standard ir queries executed context complete document collection notion replaced notion dfs 
static anymore dynamically selected sub query 
prevents static pre computed term weights 
power integrated query approach local contexts lost case 
instance unsatisfactory xed inverse document terms adapted tf idf scheme sub query result weighting applied contain respective term 
lead unexpected useless ranking results 
consequently general term counting statistics kept 
ranking operation term statistics current intermediate result derived 
scheme tf idf extension thereof utilizes additional information encoded structure dfs 
call general principle underlying ir embedded data retrieval query language dynamic ranking principle 
approach principle allows detect local signi cance common term considered irrelevant globally 
indexes query optimization useful hierarchically structured xml data ir index needs capture term occurrences single document fragments 
obviously expensive static index collection documents considered single units 
de nition leaf nodes contain content 
storing term statistics relying document structure encoded xml document anyway sucient derive statistics arbitrary dfs 
furthermore query engine needs extended keep track parts dfs intermediate result originate 
dicult dfs di erent contexts may put xquery construction operations 
cases case aggregated data direct relationships dfs dfs origin maintained 
case ranking possible anymore term statistics collected scratch acceptable small results 
expenses associated full text index top xml data compensated ir index aware query engine advantage ignored deploying ir outside database 
semistructured data lot schema information optimization ir index especially promising 
point term indices directly data detailed data statistics variance certain element values easily integrated ir index 
introduced new operator xquery naturally extends xml queries information retrieval aspects 
xml document fragment sequences intermediate results xquery 
identi ed arbitrary document fragments dynamically selected sequences suitable replacement notions document collection today information retrieval 
extended language dubbed xquery ir conceptually simple expressive sum parts 
identi ed dynamic ranking usage term statistics local context established query important property underlying ir algorithm achieve expressiveness 
currently implementing system able demonstrate important properties approach 
hindrance non existence freely available query engines large deeply nested xml databases diverse types textual information 
aspects investigating include reformulation optimization rules queries involving rank operator 
questions instance far ranking data extraction commutative 
alonso 
oracle text white 
technical report oracle redwood may 
chamberlin clark florescu robie sim eon stefanescu 
xquery xml query language 
working draft june 
kushmerick 
expressive ecient language xml inf 
retrieval 
proceedings sigir conference 
clark derose 
xml path language xpath 
recommendation nov 
fernandez marsh 
xquery xpath data model 

draft 
florescu kossmann manolescu 
integrating keyword search xml query processing 
proceedings th international word wide web conference 
fernandez malhotra sim eon wadler 
xquery formal semantics 
working draft june 
fuhr 
xirql query language information retrieval xml documents 
proceedings sigir conference 
kaszkiel zobel sacks davis 
cient passage ranking document databases 
acm transactions info 
systems 
mchugh widom abiteboul luo rajaraman 
indexing semistructured data 
technical report stanford university february 
navarro baeza yates 
proximal nodes model query document databases content structure 
acm transactions information systems 
salton mcgill 
modern information retrieval 
mcgraw hill 
theobald weikum 
adding relevance xml 
proceedings rd international workshop web databases lncs pp 
springer 

