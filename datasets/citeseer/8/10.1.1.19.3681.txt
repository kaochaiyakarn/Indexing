making flow application petri nets business process management van der aalst department technology management eindhoven university technology box nl mb eindhoven netherlands 
aalst tm tue nl 
information technology changed business processes enterprises 
processes conducted supervision information systems driven process models 
examples workflow management systems staffware enterprise resource planning systems sap baan include domain specific systems 
hard imagine enterprise information systems unaware processes place 
topic business process management information technology addressed consultants software developers depth fundamental approach missing 
nineties researchers started foundations business process management systems 
addresses scientific challenges business process management 
spirit hilbert problems interesting problems people working petri net theory posed 
goal show relevance architecture achilles heel business process management systems 
way hope interest petri net researchers scientific challenges domain 
definition business process management system generic software system driven explicit process designs enact manage operational business processes 
system process aware generic sense possible modify processes supports 
process designs graphical focus structured processes need handle cases 
remainder put business process management related technology historical context 
discuss models process design 
business process management systems driven explicit models important right techniques 
discuss techniques analysis process models 
argue vital techniques assert correctness workflow designs 
focus systems process part taken lecture making flow design analysis enactment business processes 
note means suggesting problems problems raised david hilbert 
enactment systems flow model processes organizations involved 
pose interesting problems spirit hilbert problems 
business process management historical perspective men change 
show relevance business process management systems interesting put historical perspective 
consider shows ongoing trends information systems 
shows today information systems consist number layers 
center formed operating system software hardware 
second layer consists generic applications wide range enterprises 
applications typically multiple departments enterprise 
examples generic applications database management system text editor spreadsheet program 
third layer consists domain specific applications 
applications specific types enterprises departments 
examples decision support systems vehicle routing call center software human resource management software 
fourth layer consists tailor applications 
applications developed specific organizations 
sixties second third layer missing 
information systems built top small operating system limited functionality 
generic domain specific software available systems mainly consisted tailor applications 
second third layer developed ongoing trend circles increasing size moving outside absorbing new functionality 
today operating systems offer functionality 
database management systems reside second layer offer functionality tailor applications 
result trend emphasis shifted programming assembling complex software systems 
challenge longer coding individual modules orchestrating gluing pieces software layers 
trend shift data processes 
seventies eighties dominated data driven approaches 
focus information technology storing retrieving information result data modeling starting point building information system 
modeling business processes neglected processes adapt information technology 
management trends business process reengineering illustrate increased emphasis processes 
result system engineers resorting process driven approach 
trend mention shift carefully planned designs redesign organic growth 
due internet standards information systems change fly 
result fewer systems built scratch 
cases existing applications partly new system 
component software development problems goal clear easy see software development dynamic 
operating system generic applications domain specific applications tailor applications trends information systems 
programming assembling 

data orientation process orientation 

design redesign organic growth 
fig 

trends relevant business process management 
trends shown provide historical context business process management systems 
business process management systems separate applications residing second layer integrated components domain specific applications third layer 
notable examples business process management systems residing second layer workflow management systems staffware mqseries cosa case handling systems flower 
note leading enterprise resource planning systems populating third layer offer workflow management module 
workflow engines sap baan oracle jd edwards considered integrated business process management systems 
idea isolate management business processes separate component consistent trends identified 
business process management systems avoid hard coding processes tailor applications support shift programming assembling 
process orientation redesign organic growth supported 
example today workflow management systems integrate existing applications support process change merely changing workflow diagram 
give observations hope demonstrated practical relevance business process management systems 
remainder focus scientific importance systems 
clarity restrict discussion clear cut business process management systems workflow management systems 
interesting starting point scientific perspective early office information systems 
seventies people skip ellis holt michael worked called office information systems driven explicit process models 
interesting see pioneers area independently petri net variants model office procedures 
seventies eighties great optimism applicability office information systems 
unfortunately applications succeeded 
result experiences application technology research stopped decade 
consequently hardly advances eighties 
nineties huge interest systems 
number workflow management systems developed past decade papers workflow technology illustrate revival office information systems 
today workflow management systems readily available 
application limited specific industries banking insurance 
indicated skip ellis important learn ups downs 
failures eighties explained technical conceptual problems 
eighties networks slow suitable graphical interfaces proper development software missing 
fundamental problems unified way modeling processes missing systems rigid people workplace 
technical problems resolved 
conceptual problems remain 
standards business process modeling missing today workflow management systems enforce unnecessary constrains process logic processes sequential 
architecture bit word length duplex cpu single address interrupts index registers real time clock memory magnetic core kx word microseconds cycle time magnetic drum word ibm model tape drives word parity checking crt display keyboard light gun real time serial data bps modem voice line size vacuum tubes diodes transistors cpu space feet cpu weight lbs power consumption fig 

photo timeline events computer history ieee 
great challenges business process management systems offer support flexibility 
today systems typically rigid forcing people system 
problems software developers computer scientists typically inspired processes inside computer system processes outside computer 
illustrates typical mind frame people developing business process management systems 
photograph shows computer computer system magnetic core memory 
interesting mention developed jay forrester developed known systems dynamics approach 
software engineers typically trained architecture systems software computers successors 
result engineers think terms control systems support systems 
explains existing workflow management systems allow called implicit choice choice resolved environment system 
solve problems typical changed business process management system viewed reactive system merely control system 
summarize state relevance business process management systems fundamental problems remain solved 
remainder try shed light problems 
models process design camel horse designed committee 
sir alec business process management systems driven models processes organizations 
changing models behavior system adapts environment changing requirements 
models cover different perspectives 
shows perspectives relevant business process management systems 
process perspective describes control flow ordering tasks 
information perspective describes data 
resource perspective describes structure organization identifies resources roles groups 
task perspective describes content individual steps processes 
perspective relevant 
process perspective dominant type systems addressed talk 
techniques proposed model process perspective 
techniques informal sense diagrams formally defined semantics 
models typically intuitive interpretation shifts depending modeler application domain characteristics business processes hand 
examples informal techniques isac dfd sadt idef 
techniques may serve discussing processes 
inadequate directly driving information systems incomplete subject multiple interpretations 
precise ways modeling required 
shows example order handling process modeled terms called workflow net :10.1.1.30.3125:10.1.1.30.3125
workflow nets classical petri net model information perspective task perspective resource perspective process perspective fig 

perspectives models driving business process management systems 
start register update check availability reminder send bill fig 

wf net 
replenish ship goods receive payment archive invented carl adam petri early sixties 
squares active parts model correspond tasks 
circles passive parts model represent states 
classical petri net squares named transitions circles places 
workflow net models life cycle case 
examples cases insurance claims tax declarations traffic violations 
cases represented tokens case token start corresponds order 
task register socalled split enabled state shown 
arrow indicates task requires human intervention 
person executes task token removed place start tokens produced 
parallel tasks enabled check availability send bill 
depending eagerness workers executing tasks check available send bill executed 
suppose check availability executed 
ordered goods available shipped executing task ship goods 
available replenishment order issued 
note check availability split produces token orc 
suppose ordered goods available appropriate replenishment orders issued 
token produced task update enabled 
suppose point time task send bill executed resulting state token 
token input tasks 
tasks executed state receive payment enabled 
task receive payment executed moment payment received 
task reminder join split blocked bill sent goods shipped 
note reminder sent specified period indicated clock symbol 
possible send remainder goods shipped 
assume state token task update executed 
task require human involvement triggered message warehouse indicating relevant goods arrived 
check availability enabled 
suppose task executed result positive 
resulting state ship goods executed 
token enabling task reminder 
executing task reminder enables task send bill 
new copy bill sent appropriate text 
possible send reminders alternating reminder send bill 
assume loop customer pays resulting state token 
state join archive enabled executing task results final state token 
simple workflow net shows routing constructs relevant business process modeling 
sequential parallel conditional iterative routing model 
advanced constructs choice receive payment reminder 
called implicit choice resolved system environment system 
moment bill sent undetermined receive payment reminder step process 
advanced construct fact task reminder blocked goods shipped 
construct called milestone 
reason point constructs systems problems supporting fundamental process patterns 
workflow nets clear semantics 
fact able play called token game minimal set rules shows fact models executable 
informal informal techniques mentioned isac dfd sadt idef formal semantics 
workflow nets formal techniques 
examples variants process algebra statecharts 
reason prefer variant petri nets threefold petri nets graphical precise :10.1.1.30.3125:10.1.1.30.3125
petri nets offer abundance analysis techniques 
petri nets treat states class citizens 
point deserves explanation 
techniques business process modeling focus exclusively active parts process tasks 
surprising administrative processes actual processing time measured minutes flow time measured days 
means time cases subsequent tasks 
vital model states explicitly 
years unified modeling language uml de facto standard software development 
uml diagrams process modeling 
uml supports variants statecharts activity diagrams inspired petri nets 
uml combines bad ideas considered semi formal 
colleagues trying provide solid semantics uml 
opinion better start solid foundation 
techniques process analysis errors wise man corrects 
business process management systems allow organizations change processes merely changing models 
models typically graphical changed quite easily 
provides flexibility conventional information systems 
reducing threshold change errors introduced easily 
important develop suitable analysis techniques 
sufficient just develop techniques 
important look methods tools applicable practical context 
traditionally techniques analysis business processes originate operations research 
students courses operations management learn apply techniques simulation queueing theory markovian analysis 
focus mainly performance analysis attention paid correctness models 
verification validation neglected 
result systems fail providing right support break 
verification needed check resulting system free logical errors 
process designs suffer deadlocks livelocks detected verification techniques 
validation needed check system behaves expected 
note validation context dependent verification 
system deadlocks correct situation 
verifying system exhibits deadlocks context independent 
validation context dependent done knowledge intended business process 
illustrate relevance validation verification demonstrate techniques available return workflow net shown 
workflow process allows situation replenishment issued payment received 
suppose want change design delayed receiving payment 
obvious way model connect task receive payment replenish additional place shown 
extension correct glance resulting workflow net errors 
workflow deadlock second replenishment needed left process needed 
logical errors detected knowledge order handling process 
verification application independent notions correctness needed 
notions called soundness property :10.1.1.30.3125:10.1.1.30.3125
workflow net sound start register update check availability reminder send bill replenish ship goods receive payment fig 

incorrect wf net 
archive workflow contains dead parts tasks executed reachable state possible terminate moment workflow terminates places sink place place empty 
note soundness rules logical errors deadlocks livelocks 
notion soundness applicable workflow language 
interesting observation soundness corresponds liveness boundedness short circuited net :10.1.1.30.3125:10.1.1.30.3125
properties studied extensively 
result powerful analysis techniques tools applied verify correctness workflow design 
practical experience shows errors detected verifying soundness property 
petri net theory applied guide designer error 
soundness guarantee workflow net behaves intended 
consider example workflow net shown 
compared original model shipment goods skipped goods available 
may idea glance 
customers expected pay goods delivered 
words task receive payment needs executed task ship goods may executed 
error detected knowledge context 
context may decide acceptable 
analysis techniques exist automatically support kind validation 
means validation offered today workflow management systems gaming simulation 
interesting technique support validation inheritance dynamic behavior 
inheritance technique compare processes 
inheritance relates subclasses superclasses 
workflow net subclass superclass workflow net certain dynamic properties preserved 
subclass typically contains tasks 
hiding blocking tasks subclass obtains superclass subclass start register check availability reminder send bill ship goods receive payment fig 

sound incorrect wf net 
archive inherits dynamics superclass 
superclass specify minimal properties workflow design satisfy 
merely checking actual design subclass superclass validate essential properties 
consider example 
workflow net describes minimal requirements order handling process satisfy 
tasks register ship goods receive payment archive mandatory 
tasks ship goods receive payment may executed parallel preceded register followed archive 
original order handling process shown subclass superclass 
minimal requirements satisfied 
order handling process shown subclass 
fact task ship goods skipped demonstrates properties preserved 
start register ship goods receive payment fig 

superclass wf net 
archive identified notions inheritance 
refer life cycle inheritance 
inheritance dynamic behavior powerful concept applications 
inheritance preserving transformation rules transfer rules offer support design time run time 
subclass superclass relationships enforce correct processes commerce setting 
business partners execute subclass processes common contract process workflow executed agreed 
noted workflows crossing borders organizations particularly challenging verification validation point view 
errors resulting miscommunication business partners highly disruptive costly 
important develop techniques tools verification validation processes 
fig 

screenshot showing verification validation capabilities woflan 
tools aiming verification workflow processes exist 
woflan notable exceptions 
working woflan 
shows screenshot woflan 
woflan combines state art scientific results practical applications 
woflan interface leading workflow management systems staffware cosa 
interface bpr tools protos 
workflow processes designed tools verified correctness 
turns challenge decide design sound 
real challenge provide diagnostic information guides designer error 
woflan supports inheritance notions mentioned 
workflow designs woflan able decide subclass 
tools woflan illustrate benefits fundamental approach 
large scale experiments experienced students show workflow designers frequently errors design errors detected woflan 
systems process enactment automobile followed development cycle computer rolls royce today cost get miles gallon explode year killing inside 
robert progress computer hardware incredible 
gordon moore predicted number elements produced chip double months 
moore law applies 
information technology resulted spectacular growth information gathered 
commonly term information overload illustrates growth 
estimated individual child man woman megabytes data gathered year 
internet world wide web abundance information available low costs 
despite apparent progress computer hardware information processing information systems leave desired 
typically software contains errors people need system get things done 
observations justify solid models analysis techniques discussed 
far focus design analysis processes 
time focus systems enact processes 
shows typical architecture business process management system 
designer uses design tools create models describing processes structure organization 
manager uses management tools monitor flow act necessary 
worker interacts enactment service 
enactment service offer workers workers search select perform 
support execution tasks enactment service may launch various kinds applications 
note enactment service core system deciding 
clearly enactment service driven models processes organizations 
merely changing models system evolves adapts 
ultimate promise business process management systems 
today workflow management systems architecture consistent 
consider example screenshots staffware shown 
staffware leading workflow management systems 
top window shows design tool staffware defining simple workflow process 
offered socalled queues 
worker multiple queues queue shared multiple workers 
window middle shows set available queues left content queues right 
moore founder intel commenting growth microelectronics industry noted doubling number elements produced chip months 
decade meant growth factor approximately 
today moore quoted time constant typically quoted months 
argue constant months appropriate 
management management tools historical data run time data process data applications design tools enactment service organizational data offer designer perform worker case data fig 

architecture business process management system 
bottom window shows audit trail case 
windows show capabilities offered contemporary workflow management systems 
fairly straightforward map windows architecture 
processes aware information systems enterprise resource planning systems find architecture shown embedded larger architecture 
despite acceptance process aware information systems current generation products leaves desired 
section highlight challenging problems domain 
challenging problems scientific truth triumph convincing opponents making see light opponents eventually die new generation grows familiar 
maxwell planck david hilbert gave lecture international congress mathematicians paris 
lecture gave gave massive homework assignment mathematicians world form problems 
problems backbone mathematical research th century 
problems partially solved restated new interpretations solved 
merely formulating number problems hilbert directed research efforts problems thought relevant 
trying direct attention researchers petri net related problems relevant business process management 
fig 

graphical workflow definer queue audit trail staffware 

complexity deciding soundness 
workflow net possible decide soundness constructing inspecting reachability graph 
shown soundness coincides liveness boundedness short circuited net :10.1.1.30.3125:10.1.1.30.3125
subclasses free choice workflow nets workflow nets pt tp handles soundness analyzed polynomial time 
arbitrary workflow nets best known algorithm non primitive recursive space 
open question structure workflow net exploited improve algorithm 

calculate differences commonalities processes 
inheritance defined static structures classes class subclass class attributes methods superclass 
difficult compare processes cf 
discussion topic 
absence established notion inheritance difficult compare processes reason differences commonalities processes 
example processes sharing set tasks 
imply substituted 
similarly difficult define processes common agree ordering tasks 
attempt reason differences commonalities processes 
existing notions unsatisfactory provide partial solutions computational complexity unknown 
practical questions related issues 
example procedures different enterprises interesting calculate common list differences 
quest notions algorithms calculate differences commonalities processes highly relevant 

workflow process patterns essential ones 
workflow management coalition wfmc standardized basic building blocks xor splits joins 
building blocks model sequential parallel conditional iterative processes 
basic control flow patterns unable directly cope advanced patterns 
advanced patterns described 
examples patterns dealing multiple instances insurance claim variable number witness statements advanced synchronization patterns join join synchronize needed 
patterns modeled quite easily terms petri nets 
patterns modeled introducing color sets spaghetti diagrams 
decades petri net modeling mature complete set process patterns missing designers re inventing wheel day 
clearly patterns domain dependent 
set patterns reported specific workflow management 
question set complete 
question frequently patterns needed practice 

evaluate compare expressive power workflow management systems 
decade different commercial workflow management systems available 
surprisingly system uses language modeling workflow processes despite efforts wfmc 
handful systems formal methods petri nets cosa thiel ag income 
systems vendor specific variant flow charts extended parallelism petri net diagrams event driven process chains aris sap 
systems different principles false token propagation inconcert tibco mqseries workflow ibm data driven controls flower pallas athena 
difficult compare systems 
important insights expressive power systems 
note term expressive power traditional sense 
term refer effort needed construct models reflect process logic direct manner 
note patterns mentioned stepping stone developing method evaluating comparing process enabled systems workflow management systems 

class workflow processes rediscovered 
contemporary workflow management systems driven explicit process models completely specified workflow design required order enact workflow process 
creating workflow design complicated time consuming process typically discrepancies actual workflow processes processes perceived management workers ultimately workflow designer 
interesting develop techniques re discovering workflow models observations real workflow 
starting point techniques called workflow logs containing information workflow process executed cf 

unfortunately difficult re discover arbitrary workflow process 
known process mining techniques fail properly detect non free choice structures 
open question class workflow processes subclass workflow nets rediscovered assuming complete logs 
case task case task case task case task case task case task case task case task case task case task case task case task case task case task case task case task case task case task case task mining algorithm fig 

mining techniques possible distill workflow net right workflow log left 

minimal requirements needed ensure correct cooperation workflow processes 
rise business increased number workflow processes crossing organizational boundaries 
result need connect autonomous workflow processes way objective satisfied 
minimal correctness criterion set interoperating workflow nets soundness 
suppose local workflow nets sound 
requirements hold order guarantee soundness workflow 
results scenarios specified terms sequence diagrams 
approach inheritance 
problem remains unsolved 

successfully migrate instances dynamically changing workflow process 
workflow processes may change fly result changing laws reengineering efforts leads situation cases workflow instances migrate old workflow process new workflow process 
demonstrated may lead kind anomalies deadlocks livelocks 
consider case moved process parallel process sequence 
case state executing executing corresponding state sequential process 
phenomenon known dynamic change bug 
demonstrated anomalies avoided old new process subclass superclass relation 
problem tackled workflow processes loops 
despite partial solutions general problem remains unsolved 

incorporate structural historical actual data predict performance process 
comes performance analysis approaches focus steady state process assumptions arrival process poisson arrival process processing times gamma distribution 
problem analysis requires additional modeling exploit information available short term decisions 
business process management systems contain information structure process workflow process business rules historical data transaction logs actual data state case 
principle information automatically generate performance models predict throughput times utilization rates near 
workflow net augmented predictions arrival new cases processing times tasks routing probabilities note settings derived historical data generate simulation model 
simulation model initialized current marking net near analyzed 
approach requires mixture structural historical actual data 
problems different kinds data may overlap may conflicting 
problem tools designed steady state analysis analysis transient behavior 
problems need tackled order exploit information today business process management systems 

calculate throughput time concurrent workflow processes 
comes analysis processes parallelism little changed landmark baskett 
fundamental problems remain 
queueing networks particularly suitable sequential processes stochastic nets typically restricted phase type distributions suffer state explosion problem 
alternative approach 
approach allows arbitrary discrete time distributions provided workflow net constructed sequential parallel conditional iterative routing 
problem approach intractable case iteration long tailed distributions 
approaches simulation typically time consuming give exact results 
problem remains analytical technique cope parallelism non distributions 

allocate fixed set resources tasks optimize performance 
techniques performance analysis type assume distribution resources tasks 
clearly optimal distribution resources achieved analysis possible resource allocations 
unfortunately approach intractable large numbers resources tasks 
interesting alternative approach 
proposes allocate minimal number resources task 
determined simply product frequency task average processing time 
additional resources distributed mechanism determine bottleneck allocate free resource bottleneck 
determine bottleneck adding resource allocate free resource 
procedure repeated free resources allocated 
clearly procedure efficient analyzing possible resource allocations 
unfortunately shown procedure lead optimal distribution 
shown various interpretations term bottleneck average queue time resource utilization exist counterexamples algorithm 
van hee propose called marginal allocation strategy 
strategy optimal state machine workflow nets poisson arrivals negative exponential service times 
unfortunately known strategies fail presence parallelism service times 
indicated claim list problems hilbert problems 
fact list heavily biased personal experiences 
problems concrete complexity deciding soundness general concrete allocate set resources 
application petri nets business process management discussed 
business process management put historical perspective 
topics process design process analysis process enactment discussed 
topics illustrated petri nets 
conclude spirit hilbert problems interesting problems people working petri net theory posed 
hope challenges mentioned stimulate new exciting research 

van der aalst 
application petri nets workflow management 
journal circuits systems computers 

van der aalst 
formalization verification event driven process chains 
information software technology 

van der aalst 
woflan petri net workflow analyzer 
systems analysis modelling simulation 

van der aalst 
loosely coupled interorganizational workflows modeling analyzing workflows crossing organizational boundaries 
information management march 

van der aalst 
workflow verification finding control flow errors petri techniques 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

van der aalst 
making flow design analysis enactment business processes lecture november 
eindhoven university technology eindhoven netherlands 

van der aalst basten 
identifying commonalities differences object life cycles behavioral inheritance 
editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

van der aalst basten 
inheritance workflows approach tackling problems related change 
theoretical computer science 

van der aalst desel oberweis editors 
business process management models techniques empirical studies volume lecture notes computer science 
springer verlag berlin 

van der aalst van hee 
analysis discrete time stochastic petri nets 
statistica 

van der aalst ter hofstede 
verification workflow task structures petri net approach 
information systems 

van der aalst ter hofstede kiepuszewski barros 
workflow patterns home page 
www tm tue nl research patterns 

van der aalst ter hofstede kiepuszewski barros 
advanced workflow patterns 
scheuermann editors th international conference cooperative information systems coopis volume lecture notes computer science pages 
springer verlag berlin 

van der aalst jablonski editors 
flexible workflow technology driving networked economy special issue international journal computer systems science engineering volume number 
crl publishing 

van der aalst weske 
approach interorganizational workflows 
dittrich norrie editors proceedings th international conference advanced information systems engineering caise volume lecture notes computer science pages 
springer verlag berlin 

agostini de michelis 
improving flexibility workflow management systems 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

baeten weijland 
process algebra volume cambridge tracts theoretical computer science 
cambridge university press cambridge 

baskett chandy muntz 
open closed mixed networks queues different classes customers 
journal association computing machinery april 

basten van der aalst 
inheritance behavior 
journal logic algebraic programming 

booch rumbaugh jacobson 
unified modeling language user guide 
addison wesley reading ma usa 


commonalities business processes models issues 
management science 

cook wolf 
discovering models software processes event data 
acm transactions software engineering methodology 

desel esparza 
free choice petri nets volume cambridge tracts theoretical computer science 
cambridge university press cambridge uk 

ellis 
information control nets mathematical model office information flow 
proceedings conference simulation measurement modeling computer systems pages boulder colorado 
acm press 

ellis keddara rozenberg 
dynamic change workflow systems 
ellis kling mylopoulos kaplan editors proceedings conference organizational computing systems pages milpitas california august 
acm acm press new york 

ellis nutt 
workflow process spectrum 
sheth editor proceedings nsf workshop workflow process automation information systems pages athens georgia may 

forrester 
industrial dynamics 
mit press cambridge ma 

cox 
goal 
gower uk 

harel 
statecharts visual formalism complex systems 
science computer programming 

van hee verbeek 
optimal allocation resources stochastic workflow nets 
kara editors proceedings seventeenth uk performance engineering workshop pages 
university leeds leeds uk 

hilbert 
mathematical problems 
bulletin american mathematical society 

holt 
coordination technology petri nets 
rozenberg editor advances petri nets volume lecture notes computer science pages 
springer verlag berlin 

jablonski bussler 
workflow management modeling concepts architecture implementation 
international thomson computer press london uk 

martens reisig 
inter operability workflow applications local criteria global soundness 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

klein dellarocas bernstein editors 
adaptive workflow systems special issue computer supported cooperative 

lawrence editor 
workflow handbook workflow management coalition 
john wiley sons new york 

lyman varian 
information 
www sims berkeley edu 

ajmone marsan balbo conte modelling generalized stochastic petri nets 
wiley series parallel computing 
wiley new york 

petri 
kommunikation mit 
phd thesis institut mathematik bonn 

van der aalst 
short term simulation bridging gap operational control strategic decision making 
editor proceedings iasted international conference modelling simulation pages 
iasted acta press anaheim usa 

reisig rozenberg editors 
lectures petri nets basic models volume lecture notes computer science 
springer verlag berlin 

orlowska 
analyzing process models graph reduction techniques 
information systems 

verbeek basten van der aalst 
diagnosing workflow processes woflan 
computer journal 

weijters van der aalst 
rediscovering workflow models event data 
de pauw editors proceedings th dutch belgian conference machine learning pages 

woflan home page 
www tm tue nl woflan 


representation specification automation office procedures 
phd thesis university pennsylvania school business 
