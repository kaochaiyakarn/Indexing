massachusetts institute technology artificial intelligence laboratory memo december right thing pattie maes presents novel approach problem action selection autonomous agent 
agent viewed collection com modules 
action selection modeled emergent property activation inhibition dynamics modules 
con crete action selection algorithm detailed account results 
algorithm combines characteristics traditional planners reactive systems produces fast robust activity tight interaction loop environment time allowing prediction planning take place 
provides global parameters tune action selection behavior characteristics task environment 
smoothly trade goal orientedness situation orientedness bias ongoing plans inertia adaptivity speed adjust sensitivity goal conflicts 
copyright massachusetts institute technology report describes research done artificial intelligence laboratory massachusetts institute technology 
supported siemens additional support university research initiative office naval research contract defense advanced research projects agency office naval research contract 
addresses problem 
imagine autonomous agent achieve number global goals complex dynamic environment 
example rover explore mars collect samples soil 
agent select appropriate relevant action take particular moment facing particular situation 
important constraints world complex entirely predictable agent limited computational resources limited time resources 
implies action selection completely rational optimal 
robust fast decisions simon 
mean things action selection behavior demonstrate characteristics favors actions goal oriented particular actions contribute goals favors actions relevant current situation particular exploits opportunities highly adaptive unpredictable changing situations favors actions contribute ongoing goal plan action rates lot better sticks particular goal reason start working different 
looks ahead plans particular avoid hazardous situations handle interacting conflicting goals robust completely breaks certain components fail reactive fast 
studies problem context society mind ory minsky subsumption architecture brooks related 
theory suggests building intelligent system society interacting agents having specific competence 
example society agents able build tower incorporate modules finding block grasping block moving block idea competence modules cooperate locally way society functions properly 
architecture attractive cause modular structure emergent global functionality robustness 
open problems action controlled distributed system 
specifically determined competence module active take real world actions controlling effectors specific moment ii factors determine cooperation certain competence modules 
solutions adopted 
approach hand code hard wire control flow competence modules brooks 
approach introduce hierarchical structure tell competence modules allowed perform action 
investigates entirely different type solution 
hypotheses tested action selection global system obtained letting competence modules activate inhibit right way bureaucratic competence modules necessary modules competence determining modules activated inhibited need global forms control 
studying adequacy hypotheses attempting determine activation inhibition dynamics appropriate 
develop ing series algorithms testing computer simulations 
algorithm discussed maes 
describes variation simpler produces interesting results experiments performed applications 
resulting systems exhibit desired properties goal orientedness situation orientedness robustness looking ahead global parameters possible smoothly mediate action selection criteria trad ing goal orientedness data orientedness adaptivity inertia sensitivity goal conflicts speed 
classify algorithm belonging traditional ai ap proach competence programmed connectionist approach competence result tabula rasa learning 
hybrid system sense distinct symbolic subsymbolic component 
algorithm completely integrates characteristics approaches connectionist computational model symbolic structured representa tion 
doing combines best worlds connectionism inherits interesting properties intrinsic parallelism fault tolerance sophisticated retrieval matching capabilities iin particular algorithm inhibition modules possible deal interacting goals 
ate new results global parameters tune action selection behavior different dimensions 
density continuity global emergent computation uniform local interaction rules 
hand avoids putting burden learning classification excluding possibility applying learning techniques developed area 
symbolic ai adopts representation structuring principles 
network links specific meanings understood causality nodes large meaningful units 
algo rithm inherits interesting properties explanation facilities programmability network augmented hand 
provides compositional solution problem action selection means parts reused different problems network different goals different times 
consequence networks smaller prove easier learn improve 
hand algorithm avoids problems traditional ai solutions slowness brittleness rigidity communication complexity distributed ai systems 
structured follows section introduces algorithm action selection section presents mathematical model section sketches works section discusses empirical results obtained section reflects limits current algorithm section compares algorithm related section draws 
algorithm autonomous agent viewed set competence modules 
competence modules resemble operators classical planning system 
competence described tuple cl ai di ai 
cl list preconditions fulfilled competence module active 
di represent expected effects competence module action terms add list delete list 
addition competence module level activation 
competence module time preconditions observed true time executable competence module activation level surpasses threshold may selected means performs real world actions 
operation competence module computation performs actions takes explicit competence modules hard wired inside perform logical inference 
competence modules linked network types links successor links predecessor links links 
description competence modules autonomous agent terms precondition list add list delete list completely defines network successor link competence module competence module st st successor proposition member add list member precondition list st successor link competence modules may exist 
formally competence module competence module st successor link proposition fq 
predecessor link module module st st predecessor exists successor link st formally competence module competence module st predecessor link proposition 
link module module st st conflicts proposition member delete list st member precondition list formally competence module competence module st link proposition intuitive idea modules links activate inhibit time activation energy accumulates modules represent best actions take current situation goals 
activation level module surpasses certain threshold provided module executable active takes real actions 
pattern spreading activation modules input new activation energy network determined current state environment current global goals agent activation state input activation energy coming state environment modules partially match current state 
competence module said partially match current state preconditions observed true 
activation goals second source activation energy global goals agent 
notice assumption global continuously updated world model 
real robot proposition delivered virtual sensor module decides basis real sensor data certain proposition considered true 
increase activation level modules achieve global goals 
module said achieve global goals goals member add list competence module 
notice distinguish types goals onl goals achieved soon achieved deleted list global goals 
permanent goals achieved continuously 
example goal spray paint car example second battery inhibition protected goals external inhibition removal activation global goals agent achieved protected 
protected goals remove activation modules undo 
module said undo pro goals protected goals member delete list module 
processes continuous continual flow activation energy modules partially match current state mod ules realize global goals timestep activation levels increased 
continual decrease activation level modules undo protected goals 
means state environment global goals may change unpredictably moment time 
happens external input activation automatically flows competence modules 
impact activation levels state goals competence modules activate inhibit 
modules spread activation links follows activation successors executable competence module spreads activation forward 
increases fraction activation level activation level successors shared proposition cl true 
intuitively want successor modules activated executable preconditions fulfilled competence module active 
formally competence module executable spreads forward successor links proposition defines false 
activation predecessors competence module executable spreads activation backward 
increases fraction activation level activation level predecessors shared proposition cl true 
intuitively non executable competence module spreads modules promise fulfill preconditions true competence module may executable 
formally competence module 
executable spreads backward predecessor links proposition defined false 
inhibition competence module executable decreases fraction activation level activation level shared proposition dv true 
intuitively module tries prevent module undoes true preconditions active 
notice allow module inhibit may activate 
case mutual conflict modules higher activation level inhibits 
prevents phenomenon relevant modules eliminate 
formally competence module takes away activation energy links proposition defines true links exists inverse link stronger 
global algorithm performs loop timestep computation takes place competence modules 
impact state goals protected goals activation level module computed 
way competence module activates inhibits related modules successor links predecessor links links computed 

decay function ensures activation level remains constant 
competence module fulfills conditions active executable ii level activation surpass certain threshold iii higher activation level competence modules conditions ii 
competence modules fulfill conditions equally strong chosen randomly 
activation level module active reinitialized modules fulfills conditions ii threshold lowered 
steps repeated infinitely 
interesting global observable properties sequence competence modules active optimality sequence computed domain dependent function case modules active couple times row really desirable 
speed obtained number timesteps competence module active relative total number timesteps system running 
global parameters tune spreading activation dynamics action selection behavior agent threshold active related mean level activation 
lowered time modules selected 
reset initial value module selected 

amount activation energy proposition observed true injects network 

amount activation energy goal injects network 

amount activation energy protected goal takes away network 
parameters determine amount activation modules spread forward backward take away 
precisely false proposition precondition list non executable module spreads predecessors 
false proposition add list executable module spreads successors 
true proposition precondition list module takes away 
factors chosen way internal spreading activation semantics effects input output state goals 
ratios input state versus input goals versus output protected goals ratios input predecessors versus input successors versus output modules module conflicts 
intuitively want view preconditions true subgoals effects true predictions preconditions true protected subgoals 
algorithm described drawback dealt 
length precondition list add list delete list affects input output activation module 
particular module lot propositions add list precondition list sources activation energy module 
input activation module removal activation module weighted number propositions precondition list case input coming state predecessors ii number propositions add list case input goals successors iii number propositions delete list case removal activation protected goals modules module conflicts 
want modules achieve goal modules precondition compete active view representing disjunction choice point 
amount activation spread taken away particular proposition split affected modules 
example particular proposition observed true state divides modules precondition list 
holds effect goals protected goals internal spreading activation 
example large number modules achieve precondition module activation spreads backward proposition equally divided modules 
hand module precondition true module increases activation level module activation level 
implicit assumption preconditions conjunctive normal form 
disjunction preconditions represented single proposition competence modules exist true 
mathematical model section presents mathematical description algorithm reproduction results possible 
set competence modules set propositions function returning propositions observed true time state environment perceived agent implemented independent process real world function returning propositions goal agent time implemented independent process function returning propositions goal agent achieved time implemented independent process internal external goal creator function returns competence module executable time preconditions competence module members 
function returns set modules match proposition modules function returns set modules achieve proposition modules function returns set modules undo proposition modules mean level activation threshold activation lowered time module selected reset initial value module active 
amount activation energy injected state true proposition amount activation energy injected goals goal amount activation energy taken away protected goals protected goal 
competence module input activation module state time input state qb ml stands cardinality set 
input activation competence module goals time input rom goals 
removal activation competence module goals pro time taken away protected rl 
equation specifies competence module spreads backward competence module zj spreads bw equation specifies module spreads forward module spreads fw aj 
executable equation specifies module takes away module takes away level module time defined nd decay active input state input goals taken away pr goals spreads bw spreads fw takes away ranges modules network ranges modules network minus module decay function global activation remains constant competence module active time module active executable fulfilling active example section illustrates algorithm concrete simple example 
interesting examples discussed 
example taken planning chapter charniak mc 
involves robot hands spray paint sand board 
task complexity 
robot coordinate hands clever vise hold board perform jobs parallel 
furthermore perform board painted longer operational 
definition competence modules terms precondition lists add lists delete lists 
basis definitions spreading activation network constructed 
possible solution problem pick board put vise pick sander sand board vise pick sprayer spray paint 
computer environment built behavior network competence modules simulated 
program written common lisp symbolics machine 
shows bitmap system simulating network described 
initial state environment hand hand empty sander ler operational board initial goals board self painted 
possible obtain trace showing detail spreading acti vation evolved 
remainder section study trace experiment shown order explain action selection behavior 
activation levels competence modules initialized zero 
time modules don activation energy spread put output state goals 
notice sand board hand sand board vise share activation energy coming goal board 
time state environment hand hand empty sander sprayer hf re operational board goals environment 
self painted protected goals environment nil state state state goals goals goals gives gxves gxves gxves gxves gxves gxves gxves gxves pick sander extra activation pick sprayer extra activation pick board extra activation pick sander extra activation lo pick sprayer extra activation spray paint self extra activation sand board hand extra activation sand board vise extra activation pick board extra activation give sand board hand extra activation give sand board vise extra activation give spray paint self extra activation condition list sprayer hand empty add list sprayer hand delete list sprayer hand empty condition list sander hand empty add list sander hand delete list er empty condition list board hand empty add list hand delete list board empty put condition list sprayer 
add list sprayer hand empty delete list sprayer hand put condition list sander hand add list er hand empty delete list er put board condition list hand add list board hand empty delete list hand sad board condition list operational hand sander hand add list delete list sad board vise condition list operational board vise sander hand add list board delete list spray paint self condition list operational sprayer hand add list self painted delete list operational place xn condition list hand add list hand empty vise delete list board hand definition competence modules involved toy example 
put pick spray paint self sand ut sand er ck ard hand board pick board rd vise sand board vise spreading activation network toy example 
predecessor links competence module predecessors shown arrows symbol activation link 
links shown inhibition links little circle 
successor links shown successor link inverse direction predecessor link 
new experiment initialize influence oa influence state influence achieved activation level self ih nil rc en en pick agent pick en ent ent agent agent agent agent agent ant speed change parameters change change goals run place board ih self bored ih iri vi ck pick pick bored ih put ut user interface simulation environment 
upper pane menu commands 
possible define new network initialize current network change global parameters change state environment change goals network run step behavior network 
left hand panes display parameters current state environment current goals network results simulation list activated modules 
right hand panes display activation levels competence modules time axis represents time axis displays activation level 
little circles tell competence module active 
activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick sander pick sprayer pick board put sprayer put sander put board module active threshold lowered executable modules accumulated activation active 
result threshold lowered 
time input output state goals time reprinted 
spreading activation modules 
notice modules match goals spray paint self sand board vise sand board hand spread backwards predecessors pick sprayer pick san der pick board place board vise conditions true 
false preconditions modules achieve goals treated subgoals algorithm 
case predecessor false precondition increase module activation level activation level 
example pickup sprayer receives activation spray paint self module achieves precondition sprayer hand 
tice sand board hand sand board vise weaken spray paint self deletes precondition operational 
executable modules pick sprayer pick sander pick board activate successors 
activation important backward spreading want impact goals subgoals greater state true propositions 
time state gives 
place board vise spreads backward pick board board hand spray paint self spreads backward pick sprayer sprayer hand sand board hand spreads backward pick board board hand sand board hand spreads backward pick sander sander hand sand board hand decreases inhibits spray paint self operational sand board vise spreads backward place board vise board vise sand board vise spreads backward pick sander sander hand sand board vise decreases inhibits spray paint self operational pick sander spreads forward sand board hand sander hand pick sander spreads forward sand board vise sander hand pick sander spreads forward put sander sander hand pick sprayer spreads forward spray paint self sprayer hand pick sprayer spreads forward put sprayer sprayer hand pick board spreads forward place board vise board hand pick board spreads forward sand board hand board hand pick board spreads forward put board board hand put sprayer spreads backward pick sprayer sprayer hand put sander spreads backward pick sander sander hand put board spreads backward pick board board hand activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick sander pick sprayer pick board put sprayer put sander put board active threshold lowered executable modules activated selected 
time spreading activation patterns remain unchanged amounts activation energy taken away modules 
par ticular pick sprayer receives activation successor self pick sander receives sand board hand sand board vise 
time state gives 
place board vise spreads activation levels modules decay activation level place board vise activation level spray paint self activation level sand board hand activation level sand board vise activation level pick sander activation level pick sprayer activation level pick board activation level put sprayer activation level put sander activation level put board module active pick sander module pick sander accumulated activation active 
result state changes input coming state internal spreading activation patterns 
notice sand board vise sand board hand inhibit put sander prevent undoing precondition sander hand 
notice pick board decreases activation level pick sprayer precondition hand empty 
inhibition stronger time sand board vise sand board hand enforced preconditions true 
time state environment sander hand hand sprayer operational board goals environment board self painted protected goals environment nil state state state state state state state state state state goals goals goals gives gives gives gxves gxves gives gxves gxves gxves sand board hand extra activation sand board vise extra activation put sander extra activation pick sander extra activation sprayer extra activation pick board extra activation pick sprayer extra activation spray paint self extra activation sand board rand extra activation sand board vise extra activation pick board extra activation give sand board rand extra activation give sand board vise extra activation give spray paint self extra activation place board vise spreads backward pick board board hand spray paint self spreads backward pick sprayer sprayer hand sand board hand spreads backward pick board hand sand board rand decreases inhibits put sander sander hand sand board hand decreases inhibits spray paint self operational sand board vise spreads 
backward place board vise board vise sand board vise decreases inhibits put sander sander hand sand board vise decreases inhibits spray paint self operational pick sander spreads backward put sander sander pick sprayer spreads forward spray paint self hand pick spreads forward put sprayer sprayer hnd pick decreases inhibits pick sander hand empty pick sprayer decreases inhibits pick board hand empty pick board spreads place 
vise board hand pick board spreads sand board hand board hand pick board spreads put board 
rand pick board decreases pick sander hand empty put sprayer spreads backward pick hand put sander spreads forward pick sander sander put board spreads backward pick board board rand activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board zn sand board vise pick sander pick pick bod put put sander put board module active threshold lowered time spreading activation pattern similar time 
state goals spread activation modules 
modules keep spreading activation modules amounts give take away changed activation levels modules time different time 
time state gives 
place vise spreads activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick pick sprayer pick board put sprayer put sander put board module active pick board module active pick 
state envi ronment changes actions performed module input state internal spreading activation patterns different time 
time state environment board hand sander hand sprayer operational goals environment board self painted protected goals environment nil state state state state state state state state goals goals goals gxves gxves gxves gxves gxves gxves gxves gxves gxves place board vise extra activation sand board hand extra activation put dom board extra activation sand zn hand extra activation board zn extra activation put dom sander extra activation pick sprayer extra activation spray paint self extra activation sand board hand extra activation sand 
vise extra activation give sand board hand extra activation give sand board vise extra activation give spray paint self extra activation place board vise spreads forward pick sander hand empty place board vise spreads forward pick sprayer hand place board vise spreads forward pick board rand empty place board vise spreads forward sand board vise board vise place board vise decreases bits put boa bo hand paint self pick spy hand sa bo decreases place bo vise bo hand sa bo ha decreases boa bq hand sa bo ha decreases sand hand sa bo ha decreases spray paint sf ith sa bo vise spreads backward place boa vise boa vise sa bo decreases put sand ith hand sa bo vise decreases paint self operational sand spreads backward put sander sand backward place boa vise ha xs empty sand spreads backward ha ys sand spreads backward sa hand empty pick sand spreads bo ha xs pick spea spreads backward place boa vise hand empty spea spreads backed put ha xs spreads put hand pty pi backward bo hand empty pick boa spreads backed put boa boa board spreads place board hand ts spreads put sprayer hand ts empty pick board spreads put sander hand pick spreads backward put board hand ts put sprayer spreads sprayer hand put spreads sander put spreads hand ts put spreads forward hand ts put spreads forward board hand ts put board spreads forward board board put board spreads hand ts put board spreads forward sprayer hand ts put board spreads board hand ts activation levels modules decay activation level place board tn activation level activation level activation level activation level activation level activation level activation level activation level activation level spa paint self sand board hand sand board vise pick sander pick pick board put put put board active threshold lowered spreading activation patterns time time 
particular sand board hand received activation state goals active 
notice pick sprayer high activation level active preconditions fulfilled 
tie state gives 
place board vise spreads activation levels modules decay activation level place board vise activation level spray paint self activation level sand board hand activation level sand board vise activation level pick sander activation level pick si activation level pick activation level pt activation level put sander activation level put board 
module active sand board hand consequence state goals change 
remaining goal achieved self 
order robot free hand 
notice pick sprayer spreads backwards modules achieve tls place board vise put sander put board 
time state environment board board hand sander hand sprayer goals environment self painted protected goals environment board state state state state state state state state goals gxves gxves gxves gxves gxves gxves gxves gxves gxves place board vise extra activation board hand extra activation put don board extra activation sand board hand extra activation sa boa vse extra activation pw sa extra activation extra activation io paint self extra sa boa ha extra activation sa bo vse extra activation give paint self extra activation place board vise spreads forward pick sander hand empty place board vise spreads forward pick hand empty place board vise spreads forward pick board hand empty place board vise spreads forward sand board vise board vise place board vise decreases put board board hand paint self spreads backward pick spray hand sand board hand decreases inhibits place board vise board hand sand board hand decreases inhibits put board board hand sand board hand decreases inhibits put sander hand sand board hand decreases inhibits spray paint self opt rational sand board vise spreads backward place board vise board vise sand board vise decreases inhibits put hand sand board vise decreases inhibits spray paint self operational pick spreads backward put sander sander pick spreads backward place board vise hand empty pick spreads backward put sprayer hand empty pick spreads backward put sander hand empty pick spreads backward put board hand empty pick sprayer spreads pick sprayer spreads pick sprayer spreads pick spreads pick board spreads pick board spreads pick board spreads pick board spreads backward place board vise hand empty backward put spp hand empty backward put sander hand empty backward put board hand empty backward put board board backward place board vise hand pty backward put sprayer hand empty backward put sander hand empty pick board spreads backward put board hand empty put sprayer spreads backward pick sprayer hand put sander spreads forward pick sander put sander spreads forward pick sander hand empty put sander spreads forward pick hand empty put spreads forward pick board hand empty put board spreads forward pick board board put board spreads forward pick hand empty put board spreads forward pick sprayer hand empty put board spreads forward pick board hand empty activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick sander pick sprayer pick board put sprayer put put board module active threshold lowered time till activation patterns remain 
spray paint self accumulates activation coming goals spreads activation predecessor pick sprayer 
pick spreads received activation backwards modules precondition hand empty true 
modules takes time selected 
time state gives 
place board vise spreads activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick pick sprayer pick board put sprayer put sander put board module active place board vise place board vise active hand free 
result pick spray accumulated tion executable 
state oh environment hand board vise board hand operational goals environment self painted protected goals environment board state state state state state goals gxves gives gives gxves gxves gxves gxves gxves pick sander extra activation pick sprayer extra activation oh pick board extra activation sad board vise extra activation sand board hand extra activation sand board vise extra activation put don sander extra activation pick sprayer extra activation paint extra activation sand board hand extra activation sand board vise extra activation give spray paint self extra activation place board vise spreads pick board board hand spray paint self spreads pick sprayer sprayer hand sand board hand spreads backward pick board board hand sand board hand decreases inhibits put sander sander hand sand board hand decreases inhibits spray paint self operational sand board vise decreases inhibits put sander sander hand sand board vise decreases inhibits spray paint self operational pick sander spreads backward put sander sander pick sander decreases inhibits pick board hand empty pick sprayer spreads forward paint self hand pick sprayer spreads forward put sprayer sprayer hand pick sprayer decreases inhibits pick sander hand pick decreases inhibits pick board hand pick board spreads backward put board board put sprayer spreads backward pick hand put sander spreads forward pick sander sander put board spreads backward pick board ard hand activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick sander pick pick board 
put put put board module active pick module spray paint self accu activation executable selected 
time state environment sprayer hand board vise board sander hand goals environment self painted protected goals environment board state state state state state state state state state goals gxves gxves gxves gxves gxves gxves gxves spray paint self extra activation put don sprayer extra activation lo sand board vise extra activation sand board hand extra activation sand board vise extra activation put sander extra activation spray paint self extra activation sand board hand extra activation sand board vise extra activation give spray paint self extra activation place board vise spreads backward pick board board hand spray paint self decreases inhibits put sprayer sprayer hand sand board hand spreads backward pick board board hand sand board hand decreases inhibits put sander sander hand sand board hand decreases inhibits spray paint self operational sand board vise decreases inhibits put sander sander hand sand board vise decreases inhibits spray paint self operational pick sander spreads backward put sander sander pick sander spreads backward place board vise hand fj pty pick sander spreads backward put sprayer hand empty pick sander spreads backward put sander hand empty pick sander spreads backward put board hand 
pick spreads pick spreads pick spreads pick sprayer spreads pick spreads pick board spreads pick board spreads pick board spreads pick board spreads put sprayer backward place board vise hand empty put sprayer hand empty put hand empty backward put board hand empty put board backward place board vise hand empty put wn er hand backward put wn hand 
pick board spreads backward put board hand put sprayer spreads forward pick sprayer put wn spreads forward pick hand empty put wn spreads forward pick sprayer hand empty put spreads ss forward pick board hand empty put sander spreads forward pick sander put sander spreads forward pick sander rand empty put wn spreads forward pick sprayer hand empty put sander spreads forward pick board hand empty put board spreads backward pick board board hand activation levels modules decay activation level place board vise activation level activation level activation level activation level activation level activation level activation level activation level activation level spray paint self sand board hand sand board vise pick pick pick board put wn put sander put board module active spray paint self results algorithm modeled system differential equations 
system complicated solve exact predic tions resulting action selection behavior possible 

important qualitative results obtained example possible phase transitions growth parameters size network mean fanout node huberman hogg 
evaluated algorithm empirically performing wide series experiments example plications 
networks diverse properties wide long containing cycles local high concentrations links unlinked subnetworks destructive modules mutually conflicting modules problems solved large ranges parameters 
simulated societies said show jump think behavior 
exhibit planning capabilities 
consider extent effects sequence actions embarking execution 
sequence competence modules exists transforms current situation goal state sequence highly activated cumulative effect forward spreading starting current state backward spreading starting goals sequence potentially implies negative effects weakened inhibition rules 
specifically goal relevance selected action obtained input goals backward spreading activation 
situation relevance opportunistic behavior obtained input state spreading activation forward 
conflicting interacting goals taken account inhibition protected goals inhibition conflicting modules 
local maxima action selection avoided provided spreading activation go long threshold high network evolve optimal activity pattern 
algorithm automatically biases ongoing plans tend shorter distance state goals favored remains past spreading activation patterns 
global parameters serve controls mediate smoothly different action selection characteristics 
notion plan different classical existing ai 
network construct explicit representation single plan expresses intention urge take certain actions high activation levels corresponding modules 
important difference centralized preprogrammed search process 
operators competence modules select sequence operators activated non hierarchical highly distributed way 
search tree constructed explicit representation built state changes certain actions 
consequently system suffer disadvantages search trees information duplicated parts tree trees grow exponentially size problem trees strict representation plans possible impossible uncertainties addition spreading activation process cheaper operation 
course advan cost free 
action selection produced rational sophisticated deliberative planners built ai 
hand systems applied autonomous agents suffer brittleness slowness 
particularly interesting algorithm pro vides parameters mediate adaptivity speed reactivity hand rationality hand 
subsections discuss results observed detail 
goal orientedness algorithm selects actions contribute global goals agent 
global goal network new activation energy put modules achieve goal 
modules turn subgoal false precondition increase activation level modules subgoal true 
backward spreading activation takes care modules contribute goal activated modules don 
furthermore modules contribute different goals subgoals receive activation goals favored modules contribute 
agent goal modules contribute goal closest favored 
closest means path goal achieving modules state matching modules shortest 
algorithm favors modules little competition 
example agent goals gl module achieves modules achieve algorithm favors module achieves gl probability gl realized higher 
comments hold subgoals goals subgoals false preconditions modules treated way goals 
behavior goal oriented selection varying ratio amount activation energy injected state true proposition 
example traditional backward chaining performed selection completely goal oriented 
hand system takes advantage opportunities reactive biased currently observed predicted true near 
furthermore slowed current state envi ronment bias action selection 
ideally want system mainly goal oriented take advantage interesting opportunities 
obtained choosing optimal ratio course problem dependent choosing parameter values section 
situation relevance algorithm activates modules relevant current situation ones 
processes responsible input activation energy coming state environment spread ing activation energy executable modules successors implements sort prediction true 
mentioned previous section advantages system biases search speeds action selection system able exploit opportunities action selection driven happening environment 
importance autonomous agent recognized ai community witnessed growth interest called reactive systems 
characteristic situation orientedness exploited higher lesser degree varying parameter shows results experiments different ratios parameters forward spreading rules take care module receives activation state proportion close executable current state environment 
module executable really executable preconditions fulfilled 
non executable modules closeness inversely proportional weighted sum lengths path executable modules module preconditions module 
implies example module preconditions pl example pl true current state receives relatively activation state probability part plan 
adaptivity action selection process completely open 
environment goals may change run time 
result external input output internal activation inhibition patterns change reflecting modified situation 
external influence planning spreading activation important plans formed long influence input output disturbance environment goals 
continuous action selection behavior adapts easily unforeseen changing situations 
example activation module pick board board robot hand slipped away competence module active receives lot activation competence modules want board robot hand 
second module condition true tried pick board activation level reset 
serendipity example ability adapt 
goal subgoal suddenly appear fulfilled modules contributed goal longer activated 
experiments simulated success 
notice unforeseen events may receive lot activation goals activation urge predecessors preconditions true 
new experiment initialize change par influence influence state influence achieved goals mean activation level threshold hand empty tower built built block free tower built activated ent agent ent ent see agent find ent see grasp move agent ent agent see grasp move agent ent agent see move optimality speed computing activation active move new experiment change par influence influence state lg influence ro achieved goals mean activation level threshold tower built tower built tower built free tower built ent ent agent see agent ent see agent agent see grasp en see grasp move optimality speed rnd goals computing computing time move rr results show mediate goal orientedness action selection data orientedness varying ratio experiment network performs traditional backward chaining 
second experiment forward spreading going smaller input state forward spreading bias search action selection faster 
resulting action selection optimal action selection data driven actions relevant goal may get selected case find place activated second time 
toy network test adaptivity versus bias inertia 
stands proposition precondition module stands proposition add list module 
mean system drop ongoing plan build new 
system continuously compares different alternatives 
condition changes may effect alternative sub plan attractive activated current 
notice case system timestep 
history spreading activation plays role action selection behavior activation levels reinitialized timestep 
just tradeoff goal orientedness state orientedness tradeoff bias ongoing plan see section 
smoothly mediate extremes selecting particular ratio parameters versus mean level activation 
consider example modules 
initial state goal module active added global goals 
relatively small comparison internal spreading activation impact influence state environment global goals 
resulting action selection behavior adaptive 
concretely example means goal path state goals shorter system continues working goal achieved start working goal cfr 

appropriate solution middle 
parameters chosen system jump different goals time exploit opportunities adapts changing situations 
notice algorithm exhibits type adaptivity fault tolerance 
consequence distributed nature algorithm 
modules important networks able perform degraded preconditions 
possible delete competence modules network remaining capabilities 
example put board vise deleted inactive network comes solution involve module 
new experiment initialize change par influence goals influence state influence achieved goals mean activation level threshold gol hil agent agent agent agent agent agent prime prime prime optimality speed rmd rls time prime rr command new experiment initialize change pan influence goals influence influence achieved goals mean activation level threshold agent agent ent agent agent ome agent agent agent agent agent agent agent prime agent prime prime optimality speed rmd time rr action selection behavior adaptive biased ongoing plans choosing relatively small comparison experiment 
module active added goal modules required achieve goal system continues working goal second experiment system biased ongoing goals relatively high comparison toy network test horizontal bias 
bias ongoing plans algorithm demonstrates impl cit bias mechanism 
favors modules contribute ongoing goal subgoals urge start working different 
main reason bias exhibited activation levels time module activated 
consequence history past activation spreading plays role selection action particular effect state goals relatively small comparison mean activation level 
case algorithm exhibits bias ongoing plans 
specifically demonstrates types bias horizontal vertical 

horizontal bias type bias demonstrated action selection algorithm favoring actions contribute current goal goal working 
set modules initial state global goals 
competence modules necessary achieve goal modules contribute goal simulated network jump back forth modules contribute modules contribute starts working goal completes works goal cfr 

case module chosen distance path goals shorter path 
spreading activation backwards larger effect sure started path finished 
paths state goals grow longer threshold increased obtain effect effect threshold section 
vertical bias second type bias favoring actions contribute brother goal subgoal goal 
consider modules 
initial state environment cl el gl goals threshold high network executes actions contribute goal starts working goal cfr 

reason predecessor module active node new experiment initialize change pare influence influence state influence achieved gale activation level threshold nil agent agent oe agent aen fie ome prime prime prime fie prime optimality speed state goals computing spreading computing time active prime new experiment initialize change part influence influence state influence achieved gale mean activation level state nil activated prime ent prime prime prime prime optimality 
speed computing state goals spreading computing time agent active prime rr command threshold high action selection behavior ex horizontal bias left hand experiment 
threshold high system jumps modules contributing goal modules contributing second goal right hand experiment 
bl cl dl il el fl gl hl jl 
toy network test vertical bias 
receives activation energy state environment 
activation spread remaining predecessors 
stated previous section system higher lesser degree inertia respect changing environment goals selecting ratio parameters appropriately 
dynamic environments necessary system adapt slower get done 
avoiding goal conflicts bad ordering actions dramatically increase number actions necessary achieve goal prevent solution 
action selection algorithm degree able arbitrate conflicting actions 
algorithm able inhibition rules 
modules network undo protected goal weakened factor 
large particular relation results action selection protects global goals 
true subgoals preconditions modules 
module decreases activation level modules undo true conditions 
results action selection behavior subgoals protected new experiment initialize change pare influence oal influence state influence achieved goals mean activation level threshold nil agent agent agent prime agent agent prime prime agent prime prime prime optimality speed state goals computing spreading activation computing decay time agent active rr new experiment initialize change pare influence influence state influence achieved mean activation nil ent prime si oe tho prim fie prim ome fie optimality speed influence state rmd goals computing spreading computing time agent rr command threshold high action selection behavior ex vertical bias left hand experiment 
threshold high system jumps modules contributing goal modules second goal right hand experiment 
classical conflicting goals 
initial state world clear goals 
system achieve goal goal 
tempted immediately stack may bring deadlock situation wanting undo achieved goal 
st ack condition list clear add list delete list clear st ack condition list add list clear delete list clear take condition list clear add list clear delete list modules involved blocks world domain 
goal conflicts avoided 
illustrate happens reimplemented classical anomalous situation example blocks world sussman 
illustrates problem 
shows competence modules involved example 
show results obtained 
experiment value far greater result inhibition stack stack condition clear far important activation state 
module take dominates stack despite fact achieves goal 
high second experiment urge fulfill goal dominates urge avoid clear system start stacking able restore situation obtain goals influence protected goals high keep system undoing achieved goal 
balance new experiment initialize influence influence state influence achieved goals mean level threshold oh oh clear om oh activated agent agent take stack speed 
state goals spreading computing decay active stack oh rr change parameters change state stack om change goals run oh stack oh oh oh rake take step influence protected goals threshold high system able avoid problems conflicting goals 
caring goal conflicts rigid undo achieved sub goal risking deadlocks 
network looks ahead local neighborhood time determined threshold behavior thoughtful increasing threshold spreading activation process go longer time specific action selected 
allows network look ahead avoiding local maxima time activation levels 
example blocks world example module stack initially highest activation level receives direct input state goals 
threshold put high avoid tls module chosen right away network go account conflicts new experiment initialize change par influence goals influence state influence achieved goals mean activation level threshold oh oh oh activated agent agent agent ent oh optimality speed rmd time om rr command new experiment initialize change pare influence influence state influence achieved goals mean activation level threshold oh oh agent agent agent oh om optimality speed computing rmo computing time oh rr command experiments system reacts opportunistically account conflicting goals 
experiment parameter low system sensitive goal conflicts 
second experiment threshold high system chooses local modules 
ideally set threshold high value example equal total activation network 
guarantee spreading activation process goes long optimal action selected 
problems putting threshold high action selection process require time especially agent operating rapidly changing environment second result agent get bogged trying take account effects actions take far 
probably wasted effort unpredictable environment 
want agent look ahead near 
desired amount looking ahead particular application obtained choosing proper value threshold 
speed counterpart speed 
action selection behavior faster varying threshold explained 
resulting action selection thoughtful means goal oriented situation oriented takes conflicting goals account biased ongoing plans 

may important react fast may wasted effort thoughtful lot plans predictions 
fortunately algorithm complex allows speed obtained sacrificing 
algorithm perform sort search network goal modules executable modules argue algorithm suffers problems traditional ai search 
efficiency necessarily goes number modules involved plan grows called combinatorial explosion problem 
important take consideration search going different nature 
resembles marker passing algorithms ai notion search 
system construct search tree maintain current hypothetical state partial plan 
addition evaluates different paths parallel start scratch path produce solution smoothly moves plan 
result computation algorithm performs costly 
system replan completely timestep 
algorithm activation levels zero action taken 
implies may take time select action execute network biased particular situation set goals 
means take time actions selected particular little changed respect goals current situation 
believe real autonomous agents mobile robots networks grow larger longer typically agent tasks goals having tasks goals require actions taken planning 
large subparts may exist network appear unconnected 
result system affected 
paths state mat goal long system come action await convergence activation levels decreases threshold time 
selected action non optimal 
simple spreading activation rules applied mod ules 
addition local fixed links modules 
opens interesting opportunities parallel implementation imply considerable speed 
discussion number limits algorithm 
main ones listed 
language provided describe input output relationship competence module oversimplified 
way abstractions variables 
network maintain record past search 
planning mistake plan making system loop 
clear specific application select values global parameters produce desired action selection behavior 
remainder section discuss importance limits sketch solutions represent important limitations 
proposed solutions resonate current philosophy merits 
implemen tation solutions main concern research 
variables algorithm incorporate classical variables variable passing 
matter fact lot advantages disappear introduced 
example reason lot search eliminated exactly variables algorithm 
implication absence variables specify goals variables goto location 
second implication modules operators domain instantiated means node created parameter 
try avoid need variables altogether called aspects describe relevant properties immediate environment agre chapman 
main idea internal representations objects environment terms purposes circumstances agent 
module spray paint self example instantiated parameter sprayer am holding hand 
necessary create new operators modules new object introduced world 
exhaustive combination operators objects 
idea indexical functional aspects particularly interesting autonomous agents unrealistic assumptions perception deliver 
particular demand perception produce identity exact location objects 
absence variables constrain language communicate system strong way 
requires new way thinking tell agent 
specifically unique names objects specifying goals 
goals specified terms indexical functional constraints objects involved 
example tell agent go location tell agent goal location doorway small area able go wall 
handling loops problem current algorithm loops action selection may emerge 
occur rarely spring fact system maintain history 
questionable solution built 
hypothesis adopted real environment state goals change anyway time small 
changes spreading activation patterns gets network impasse 
insist avoiding temporal guaranteed careful selection parameters 
simple solution introduce randomness system 
solution second network monitor possible loops network take actions happens 
implement habituation mechanism modules 
mechanism take care time module activated active local thresholds vary time 
selecting parameters global parameters large degree determine effectiveness character action selection behavior 
open question values parameters selected 
problem dependent problem area requires different degrees goal orientedness situation orientedness speed adaptivity size struc ture network determines characteristics 
example application big network threshold put higher obtain results 
moment tune parameters hand series experiments 
plan build second network competence modules look results tune parameters obtain action selection characteristics specified user 
related introductory section discussed relates connectionism traditional ai 
main difference structure competence built difference classical search avoided 
remainder section compares called reactive systems distributed ai hybrid systems 
systems approach related called reactive systems georgeff lansky firby kaelbling rosenschein kaelbling pets agre chapman hendler 
emphasis architectures direct coupling perception action distributed ness decentralization dynamic interaction environment inherent mechanisms cope resource limitations incomplete knowledge 
deliberation thinking general internal models 
main difference algorithm systems control flow 
arbitration modules run time process differs goals system situation system finds 
constitutes simpler distributed general solution problem action selection 
distributed difference bulk distributed planning bond gasser huhns black board systems hayes roth planning modules communicate higher level 
communicate language debate negotiate reason 
problem specic needs communication language constitutes major barrier widespread applicability techniques 
algorithm integration different modules sys tem easier communication modules reduced minimum happens information scarce level numbers communicated furthermore modules share global internal model global blackboard 
said communicate world brooks hybrid systems algorithm related hybrid systems built planning decision making 
hendler describes hybrid system massive parallel component provide heuristic information classical ai planner 
marker propagating network guides classical planner relevant plans 
lehnert describes hybrid system uses stack copy mechanism control numerical rela cation structured network smooth decision making 
difference algorithm systems control hierarchical centralized turn inflexible autonomous agents operating dynamic environment 
results reported demonstrate feasibility activation inhibition dynamics competence modules solve problem action selection autonomous agent operating dynamic world 
scheme particular advantages traditional deliberative hierarchical meth ods 
price pay actions selected rational 
algorithm provides global controls tune action se lection behavior criteria rationality versus speed goal orientedness versus data adaptivity versus bias ongoing goals 
nils nilsson marcel schoppers dan shapiro michael braverman provided valuable criticisms suggestions 
marvin minsky rodney brooks luc steels anderson jerome feldman provided inspiration 
jan pier tony bell 
supported siemens ad ditional support university research initiative office naval re search contract defense advanced research projects agency office naval research contract 
author research associate belgian national science foundation 
currently holds position visiting professor artificial intelligence tory 
agre chapman 
pengi implementation theory activity 
proceedings sixth national conference artificial intelligence aaai 
morgan kaufmann los altos california 
bond gasser 
readings distributed artificial intelligence 
mor gan kaufmann san mateo california 
brooks 
robust layered control system mobile robot 
ieee journal robotics automation 
volume ra number 
chandrasekaran goel 
connectionism informa tion processing abstractions ai magazine vol 

charniak mc 
artificial intelligence 
addison wesley 
firby 
investigation reactive planning complex domains 
proceedings sixth national conference artificial intelligence aaai 
morgan kaufmann los altos california 
lansky 
reactive reasoning planning 
proceedings sixth national conference artificial intelligence aaai 
morgan kaufmann los altos california 
hayes roth 
modeling planning incremental opportunistic process 
proceedings ijcai tokyo japan 

integrating marker passing problem solving spreading activation approach improved choice planning 
lawrence erlbaum ass hillsdale new jersey 
huberman hogg 
phase transitions artificial intelligence sys tems 
ai journal volume number 
huhns 
distributed artificial intelligence 
pitman london 
kaelbling 
architecture intelligent reactive systems 
reasoning actions plans proceedings workshop 
morgan kaufmann los altos california 
laird rosenbloom newell 
chunking soar anatomy general learning mechanism 
machine learning 
volume number 
kluwer academic publishers 
lehnert 
case problem solving large knowledge base learned cases 
proceedings aaai conference seattle washington 
maes 
dynamics action selection 
proceedings ijcai conference detroit 
minsky 
society mind 
simon schuster new york new york 
rosenschein kaelbling 
synthesis digital machines provable epistemic properties 
halpern editor proceedings conference theoretical aspects reasoning knowledge 
morgan kaufmann los altos california 
hendler 
model reaction planning dynamic environments 
international journal ai engineering 
special issue planning 
schoppers 
universal plans reactive robots unpredictable envi ronments 
proceedings ijcai milan italy 
simon 
behavioral model rational choice 
quarterly journal economics 
steels 
connectionist problem solving ai perspective 
connectionism perspective eds pfeiffer man steels vier amsterdam 
sussman 
computer model skill acquisition 
elsevier publishers 
new york 

