free haven project distributed anonymous storage service roger dingledine mit arma mit edu michael freedman mit mit edu david molnar harvard university fas harvard edu december design system anonymous storage resists attempts powerful adversaries find destroy stored data 
enumerate distinct notions anonymity party system suggest way classify anonymous systems kinds anonymity provided 
design ensures availability document publisher specified lifetime 
reputation system provides server accountability limiting damage caused misbehaving servers 
identify attacks defenses anonymous storage services close list problems currently unsolved 
anonymous publication storage services allow individuals speak freely fear systems remain poorly understood 
political publish order reach people criticisms regime effective readers require anonymity 
extreme examples involve cases large powerful private organization attempts silence critics attacking critics criticism publically available 
additionally controversy napster gnutella highlighted widespread demand anonymous publication services non political purposes consequences services failing provide anonymity expected 
systems meeting needs just starting deployed exact requirements design choices clear 
events highlighted shortcomings deployed systems identification removal napster users downloaded songs gnutella wall shame examples 
shortcomings led development new generation anonymous publication services freenet focus specifically providing anonymity 
spirit free haven project aims design implement deploy functioning distributed anonymous storage service 
distinguish storage publication storage services focus accessibility persistence data 
process hope clarify requirements systems highlight design choices 
simply talk anonymous storage publication 
section enumerate different kinds anonymity cover different aspects system important realization truly anonymous system 
free haven meets requirements design community servers called servnet 
server servnet node holds pieces documents 
pieces called shares 
addition servnet node persistent identification pseudonym allows identified servnet nodes potential free haven users 
section describes design free haven system operations supports including inserting retrieving documents 
chose network pseudonymous servers order give server reputation 
reputation allows servers paid needing robust digital cash scheme required systems anderson eternity service :10.1.1.16.1952
servers form contracts store shares certain period time successfully fulfilling contract increases server reputation consequently ability store data servnet nodes 
gives incentive server behave long cheating servers identified 
show technique identifying cheating servers section 
idea similar give space get space forever scheme intermemory allows servers lose reputation start behaving badly 
section discuss reputation system system keeps track trust server 
contracts servers formed user inserts data servnet 
formed servers swap shares trading 
trading allows servnet dynamic sense servnet nodes join leave easily special treatment 
join servnet node starts building reputation storing shares 
leave server trades away shares short lived shares waits expire 
benefits mechanisms trading described section 
system powerful adversaries launch range attacks 
describe attacks free haven design section show design resist attack 
compare design systems aimed anonymous storage publication kinds anonymity described section allowing distinguish systems glance look similar 
conclude list challenges anonymous publication storage systems reflects limitation current free haven design 
anonymity anonymous storage word anonymous mean different things 
systems claim anonymity specifying precise definition 
anonymity requirements communication channels considered previously depth aware similar investigation requirements publication storage systems 
information stored units called documents 
author document entity initially created document 
publisher document entity places document system 
documents may readers entities retrieve document system 
anonymous storage system may servers participants provide special services required keep system running dedicated disk space bandwidth 
give formal anonymity definitions 
attempt lay groundwork definitions enumerating different aspects anonymity relevant anonymous storage 
enumeration allow compare free haven related 
notions anonymity distinct adversary assumed know 
document may picked adversary wishes learn authored read published 
user may picked adversary wishes know documents user authored read published 
adversary may know document user attempt confirm suspicion linked 
author anonymity system author anonymous adversary link author document 
publisher anonymity system publisher anonymous prevents adversary linking publisher document 
reader anonymity say system reader anonymity means document linked readers 
reader anonymity protects privacy system users 
server anonymity server anonymity means server linked document 
adversary picks document 
document name identifier adversary closer knowing server servers network currently possess document 
document anonymity document anonymity means server know documents storing 
document anonymity crucial mere possession file cause action server provides protection server operator machine adversary 
notion known plausible deniability see query anonymity 
passive server document anonymity means server allowed look data storing unable contents document 
achieved sort secret sharing mechanism 
multiple servers split document encryption key document 
alternative approach encrypt document publishing key external server 
active server document anonymity refers situation server allowed communicate compare data servers 
active server may act reader document requests active server document anonymity difficult achieve trusted party distinguish server requests ordinary reader requests 
query anonymity query anonymity means server determine document serving satisfying reader request 
overview private information retrieval pir see 
weaker form query anonymity server deniability server knows identity requested document third party sure identity 
query anonymity provide aspect plausible deniability 
concept related deniable encryption 
notions anonymity may imply 
leave investigation 
anonymity pseudonymity far restricted describing anonymity 
extend notions allow pseudonyms transactions system linked attributes allow linked pseudonym 
example author pseudonymous system documents digitally signed publius verified belonging publius coming know publius real life 
anonymity pseudonymity protect privacy user location true name 
location refers actual physical connection system 
term true name introduced popularized may refer legal identity individual 
knowing true name location allows hurt 
different actions linked pseudonym anonymous system allows linking 
allows pseudonym acquire reputation 
free haven uses pseudonyms give server reputation reputation influences data server store provides incentive act correctly 
partial anonymity adversary gain partial information users system fact high bandwidth connections live california 
preventing adversary obtaining information may impossible 
asking system anonymous question shifts anonymous 
say system partially anonymous adversary narrow search user set suspects 
set large impractical adversary act single suspect guilty 
hand set suspects small mere suspicion may cause adversary take action 
alternate approach classifying levels anonymity anonymity levels users range exposed suspicion :10.1.1.30.3785
levels terms idealized adversary reasonable belief user set users performed particular action 
independently syverson stubblebine developed logic talking adversary view set suspects 
logic gives formal meaning set suspects notion adversary belief 
reasoning anonymity suppose author signs true name document placing anonymous publication system 
system anonymous 
situation raises crucial question responsibility anonymous publication system 
system reasonably expected protect 
give answer questions explicitly specifying model anonymous publication 
model anonymous publication systems single entity call ted coordinates communication entities network 
model set senders set recipients alice sends message bob ted receives message delivers appropriate bob 
privacy characteristics ted communication channel define level anonymity ted provides 
privacy characteristics include ability reply persistence ability privacy reply content leaks channel leaks persistence speech authorized readers 
emphasize ted simply trusted third party despite name provides specific set characteristics provide 
complete look privacy characteristics look author thesis 
addition need complicate notion characteristics reliability delivery cost path availability fragility network 
convince anonymous publishing design sense equivalent ted certain privacy characteristics easily reason level protection provided design reasoning ted 
particular ask question responsibility system respect ted 
formally message alice sends probability distribution describes chance bob recipient message 
replace ted decentralized system provides indistinguishable probability distribution messages shown decentralized system equivalent thi ted 
may give easier way differentiate level anonymity provided various projects comparing easier intuitive trying reason effects trading caching issues directly 
description requires significant formal model 
instance need define exactly mean privacy characteristics enumerate need means probability distribution equivalent context need determine exactly describe probability distribution complex system freenet mojo nation 
free haven design system consists publication system responsible storing serving documents communications channel responsible providing confidential anonymous communications parties 
section focuses design publication system back communications channel 
agents publication system publisher server reader 
agents layered communications channel currently communicate addresses implemented remailer reply blocks 
remailer reply blocks collection encrypted routing instructions serve address pseudonym remailer network 
publishers agents wish store documents service servers computers store data publishers readers people retrieve documents service 
free haven community servers called servnet 
community server hosts data servers exchange opportunity store data network 
servnet dynamic data moves server server trust 
servers transfer data trading 
way introduce new file system server provide space local system 
new file migrate servers process trading 
server public key reply blocks provide secure authenticated pseudonymous communication server 
machine servnet database contains public keys reply blocks servers network 
documents split shares stored different servers 
publishers assign expiration date documents published servers promise keep shares document expiration date reached 
encourage honest behavior servers check servers drop data early decrease trust servers 
trust monitored updated reputation system 
server maintains database containing perceived reputation servers 
publication author call alice wishes store new document free haven identify free haven server willing store document 
alice running server 
alternatively servers public interfaces publically available reply blocks willing publish data 
introduce file servnet publishing server uses rabin information dispersal algorithm ida break file shares fn shares sufficient recreate server generates key pair pk doc sk doc constructs signs data segment share inserts segments new data local server space 
attributes share include timestamp expiration information public key sign integrity verification information share numbering signature 
robustness parameter chosen compromise importance file size available space 
large value relative file brittle unrecoverable shares lost 
hand smaller value implies larger share size data stored share 
maintain content neutral policy documents free haven system 
server agrees store data servers regard legal moral issues data jurisdiction 
discussion significant moral legal issues anonymous systems raise refer author thesis 
retrieval documents free haven indexed pk doc hash public key keypair sign shares document 
readers locate running server performs document request 
reader generates key pair pk client sk client transaction time remailer reply block 
server broadcasts request pk doc client public key pk client reply block 
request goes servers initial server knows 
broadcasts queued sent bulk conserve bandwidth 
server receives query checks see shares requested hash pk doc encrypts share public key pk client enclosed request sends encrypted share remailer enclosed address 
shares magically arrive ether destination shares arrive client file done 
share expiration share includes expiration date chosen share creation time 
absolute opposed relative timestamp indicating time hosting server may delete share ill consequences 
expiration dates chosen long publisher wants data publisher consider file size likelihood finding server willing trade 
allowing publisher document set expiration time free haven distinguishes related works freenet mojo nation favor frequently requested documents 
think useful approach persistent anonymous data storage service 
example phone books currently collected document residency close people forced evacuate phone books survived popularity contest 
free haven system designed provide privacy users 
publication system aimed convenience freenet designed private low profile storage system 
document revocation publishing systems notably publius allow documents unpublished revoked 
revocation benefits 
allow implementation read write filesystem published documents updated newer versions available 
revocation implemented allowing author come random private value publishing hash inside share 
revoke document author broadcast original value servers signal delete document 
hand revocation allows new attacks system 
firstly complicates accountability 
revocation requests may reach shares file due poor communication channel malicious adversary sends requests members servnet 
secondly authors hash new shares link documents 
adversaries appear author published unrelated documents 
thirdly presence hash share assigns ownership share 
author remembers evidence associated share leaving open possibility evidence discovered breaking forward author anonymity 
serious arguments revocation raised ross anderson :10.1.1.16.1952
capability revoke exists adversary incentive find controls capability threaten revokes document 
address problem making revocation optional share clear share unpublished 
tag reason track author 
solution publius 
subject attack adversary wishes create hunt publisher document republish document revocation tag reasonable cause target suspected publisher 
ability revoke shares may put original publisher increased physical danger allow new attacks system chose leave revocation current design 
trading free haven design servers periodically trade shares 
number reasons servers trade provide cover publishing trades common reason assume somebody offering trade publisher share 
publisher anonymity enhanced 
servers join leave trading allows servers exit servnet gracefully trading short lived shares waiting expire 
support dynamic network crucial participants free haven behaved transient relative duration longer lived shares 
permit longer expiration dates long lasting shares rare trading involved finding server promised available years 
accomodate ethical concerns server operators frequent trading easy server operators trade away particular piece data wish associated 
catholic church distributes list discouraged documents server operators hash public key share determine document list trade away share compromising reputation server availability document 
non dynamic environment server suffer reputation hit chose keep document 
currently offer functionality trading allows flexibility need road 
particular idea servers getting isp documents hold currently dubious 
provide moving target encouraging shares move server server servnet means specific static target attack 
frequency trading parameter set server operator 
server alice wants trade chooses server bob list known servers reputation offers share request size duration return share 
bob interested responds share 
trades considered fair dimensional currency size theta duration 
bigger size longer document held expensive trade 
price adjusted preferences servers involved trade 
negotiation finalized server sending trade including receipt described section 
addition server sends receipt buddy share sending buddy share receiving buddies accountability provide described section 
entire trading handshake takes rounds exchange shares exchange receipts time sending receipts buddies 
providing receipt third round trading handshake alice commitment store share similarly receipt bob generates fourth round represents commitment store share bob cheat alice failing continue protocol third step case alice committed keeping share bob bob committed 
point alice recourse broadcast complaint bob hope reputation system causes recognize bob misbehaved 
alternative fair exchange protocol unreasonably communications intensive trusted third party 
alice trades share server bob alice keep copy share just case bob proves untrustworthy 
increase amount overhead system factor depending duration provide greatly increased robustness 
case query done share system responding include flag believes primary provider data just happens copy lying 
optimum amount time requires study 
receipts receipt contains hash public keys source server destination server information share traded away information share received timestamp 
share includes hash document key share number expiration date size 
entire set information transaction signed server alice 
bob server broadcast complaint way alice handled transaction furnishing receipt complaint provide rudimentary level proof bob complaint 
note expiration date shares included receipt signature value immutable 
servers observing receipt easily tell receipt valid check see share supposed kept size share included servers informed decision influential transaction perceived reputation servers involved trade 
really aren treating receipt proof transaction proof half transaction indication commitment keep share safe 
trading protocol fact alice receipt bob mean performed transaction mean performed steps transaction alice cheated bob gave receipt 
server detects misbehaving server broadcast complaint hope reputation system handles correctly 
accountability malicious servers accept document shares fail store 
shares lost document unrecoverable 
malicious servers continue malicious behavior mechanisms place identifying 
propose buddy system creates association pairs shares document 
share responsible maintaining information location share buddy 
share moves notifies buddy 
periodically server holding share query buddy sure buddy alive 
server supposed contain buddy stops responding server share making query responsible reporting anomaly 
server announces server responsibility missing share disappeared 
results announcement described section 
considered allowing abandoned shares optionally spawn new share buddy disappears discarded notion 
buddy spawning service robust lost shares regenerated 
spawning cause exponential population explosion shares wrong reasons 
servers touch little misbehaving dead precisely server moving server moving notify buddy described section 
shares spawning new copies 
strong argument letting shares replicate 
share moves new machine buddy notifications sent buddy communications channel chosen currently significant latency notification arrive traded new server 
old server responsible forwarding buddy notifications new server believes currently holds old server keeps receipt record transaction information remember new location receipt forwarding address kept old server share expiration date passed 
buddy notification arrives server traded away share forwarder checked notification forwarded appropriate 
forwarding done case document request document request presumably broadcast servers servnet 
attempted distinguish design goals robustness accountability 
system quite robust document lost high percentage shares lost 
accountability turn provided buddy checking notification system shares protects malicious ill behaving servers 
designers choose desired levels robustness accountability independently 
communications channel free haven design requires means anonymously passing information agents 
means remailer network including mixmaster remailers designed lance cottrell 
examples anonymous communication channels onion routing zero knowledge systems freedom 
refer david martin thesis comprehensive overview anonymous channels theory practice 
design implementation anonymous communication channel ongoing research topic :10.1.1.30.3785
implementation free haven design mixmaster remailers anonymous channel 
design details see 
reputation system reputation system free haven responsible creating accountability 
accountability system committed anonymity difficult task 
opportunities try take advantage servers merely neglecting send receipt trade wrongly server losing share 
attacks quite insidious complex 
history issues consider developing reputation system detail 
systems exist reputations ensure correct better operation 
directly relevant pgp web trust model public keys 
systems include advogato slashdot message moderation systems aol instant messenger real world commerce law 
vein manet darpa project produce compromise tolerant structure information gathering 
careful trust management enable server keep track servers trusts 
large number shares documents divided relatively shares required document document lost large number servers prove evil 
server needs keep values describe server knows reputation credibility 
reputation signifies belief server question obey free haven protocol 
credibility represents belief utterances server valuable information 
values server needs maintain confidence rating 
serves represent stiffness reputation credibility values 
servers broadcast referrals circumstances log honest completion trade suspect buddy share hold lost reputation credibility values server change substantially 
document request operations done broadcast 
server wants store documents lot servers finds misbehaving server wants complain possible 
free haven servers discover 
reputation system provides easy method adding new servers removing inactive ones 
servers established reputation act 
new servers contact anonymous communication channel broadcast referrals new server 
broadcast imply endorsement new server honesty performance simply indication new server interested performing trades increase reputation 
likewise server may mark dormant threshold unanswered requests 
dormant servers included broadcasts trade requests 
dormant server starts initiating requests conclude dormant resume sending broadcasts offering trades server 
implementation status free haven system design stages 
basic proof concept implementation wish firm design primarily areas accountability bandwidth overhead 
deploying implementation want convince free haven system offers better anonymity current systems 
design sufficiently simple modular allow straightforward basic implementation easy extensibility 
attacks free haven anonymous publishing storage systems adversaries 
attacks pressures adversaries may employ technical legal political social nature 
system design nature anonymity provides affect success non technical attacks 
consider possible attacks free haven system respective targets availability documents servnet operation accountability offered reputation system various aspects anonymity relevant anonymous storage publication described section 
depth consideration attacks refer 
list attacks complete 
particular systematic discussion kinds adversaries expect 
discussion powerful adversaries possible asking questions adversary controls servers servnet scaling back 
analyzing systems free haven look everyday plausible scenarios effort provide security adversaries powerful designers expect 
adversaries way powerful expects 
attacks documents servnet physical attack destroy server 
prevention breaking documents shares shares required reconstruct document adversary find destroy servers availability compromised 
legal action find physical server owner contents 
prevention passive server document anonymity property free haven design provides servnet operator may able plausibly deny knowledge data stored computer 
depends laws country question 
social pressure bring various forms social pressure server administrators 
claim design patented illegal 
sue free haven project known server administrators 
conspire cause unpopular convincing administrators manually prune data 
aid child socially unacceptable activities 
prevention rely notion arbitrage 
information illegal place frequently legal 
free haven content neutral policies mean reason expect server operator looked data holds difficult 
rely having servers different jurisdictions organizations conspire sufficient fraction servers free haven unusable 
denial service attack servnet continued flooding queries data requests join servnet 
queries may available bandwidth processing power server 
prevention assume communications channel adequate protection buffering attack client puzzles 
communications channels choose protect attack 
real problem 
data flooding attempt flood servnet shares available resources 
prevention trading protocol implicitly protects type denial service attack storage resources 
ability insert shares false valid restricted trading server find trusts ability provide space share receive return 
similarly design provides protection corrupting shares 
altering spoofing share done share contains particular public key integrity verifiable key 
knowledge original key create set shares adversary forge new shares document 
share hoarding trade sufficient fraction objectionable document controlled group collaborating servers destroy document 
likewise sufficiently wealthy adversary purchase series servers large drives join servnet trading away garbage valuable data 
trade away garbage significant portion data servnet drives 
prevention rely size servnet prohibitively expensive server group collaborating servers obtain sufficient fraction shares document 
failure assumption leave real defense 
attacks reputation system attacks reputation system related attacks directly servers goal directly affect document availability servnet operation 
attacks seek compromise means provide accountability malicious misbehaving servers 
attacks temporary denials service negative repercussions reputation server 
repercussions qualified unfair best considered light server vulnerable attacks may capable meeting specifications free haven protocol 
server worthy trust meet specifications 
reputation system judge intent merely actions 
simple adversary may part servnet act correctly long gain reputation trust deleting files expiration dates 
prevention reputation economy designed unprofitable 
order obtain currency store data server reliably store data 
corrupt server store data amount data deletes adversary worst harm system may help 
useful ratio loose lower bound requires great number high credibility servers recommending 
server engages behavior caught buddy system deletes share 
buddy corrupt server group colluding servers gain control share buddy delete repercussions 
prevention assume large quantity shares servnet making buddy capture difficult 
servers modify perceived reputation server narrow trading parameters constant trading suggests attempt capture buddies 
concretely possible workaround involves separating reply block addresses trading buddy checking preventing corrupt servers acquiring buddies shares 
approach adds complexity possibly opens avenues attack 
false referrals adversary broadcast false referrals send selected servers 
prevention confidence rating credibility provide guard false referrals combined single reporting policy referral target source reputation calculations 
trading receipt games believe signed timestamps attest receipt accountability may vulnerable attacks 
involve multi server adversaries engaging coordinated switch games target nodes 
ways adversary appear violate protocols 
server points adversary receipts show wrong sending false referrals 
thorough system attestations necessary defend account type attack 
attacks anonymity number attacks determine information identity entity system 
parts section originally written brian 
attacks reader anonymity adversary develop publish free haven customized virus automatically contacts host execution 
special case attack include mime encoded urls document exploit reader software automatically loads urls 
approach server servnet attempt attack correlating message timing document requests 
servers claim document see requests simply monitor queries record source query 
sophisticated servers attempt correlate readers material download try build statistical profiles match people outside free haven activity preferences prevent attack reply block transaction 
attacks server anonymity adversaries create unusually large shares try reduce set known servers capacity store shares 
attacks partial anonymity servers 
adversary server collect routine status participation information server lists servers 
information extended extensive knowledge bandwidth characteristics limitations internet map servnet topology 
joining adversary correlate message timing trade requests reputation broadcasts 
alternate approach simply spread trojan horse worm looks free haven servers reports shares currently storing 
attacks publisher anonymity adversary server log publishing acts attempt correlate source timing 
alternatively look servers published document try determine communicating 
entirely social attacks successful offering large sum money information leading current location document server reader avoid reduce threat attacks anonymous channel supports pseudonyms communications 
prevents adversaries able determine source destination message establish endpoint set messages 
server administrators pressured release information entities openly knowledge 
related number projects papers discuss anonymous publication services 
start section providing overview related projects papers 
section continue examining amount anonymity project offers 
eternity service inspired anderson seminal eternity service :10.1.1.16.1952
anderson wrote basic idea redundancy scattering techniques replicate data large set machines internet add anonymity mechanisms drive cost selective service denial attacks 
publisher uploads document digital cash requested file duration cost document size desired duration 
simple design publisher upload document servers remember servers purposes auditing performance 
record servers submitted file way identify participating eternity servers storing file 
document queries done broadcast document delivery achieved way anonymous remailers 
issues addressed brief instance documents submitted anonymously publishers expected remember random sample servers audit find server cheating 
anderson passes responsibility digital cash servers receive payment providing associated service 
elaborate possible implications increased accountability anonymity publishers 
eternity problems hinder real world deployment 
importantly eternity relies stable digital cash scheme available today 
consideration maintaining dynamic list available servers allowing servers smoothly join leave 
anderson proposes directory files system file system 
mechanism updating revising files appear difficult achieve 
napster napster service connecting people offering mp files people want download 
provide real anonymity legal liability important thing note napster service highly successful 
thousands people napster daily exchange music greater security comparable ease believe thousands participate 
existence napster shows demand exists distributed storage retrieval service 
gnutella gnutella peer peer napster clone 
developed originally currently maintained open source project 
gnutella developers claim querying network anonymous 
analysis gnutella protocol reveals features statement problematic 
header gnutella packet includes fields ttl time live number additional hops packet dropped hops taken number hops packet creation 
ttl started default value expected size network hops value effectively inverse ttl travel packet 
hops value packet initially sent clear server generating query 
addition protocol designed user set connections friends infrastructure place finding new friends 
gnutella site offers default set friends users start 
users change file service functional 
means actual network hierarchical system shown pictures gnutella network topology 
small number central nodes ideal targets collecting information users queries 
queries protected 
actual downloads done point point connections meaning ip addresses server reader revealed 
done reasons efficiency far anonymous 
sites gnutella wall shame attempts child gnutella service demonstrate direct file transfer portion gnutella service adequately protect anonymity servers readers 
eternity usenet adam back proposed simpler implementation eternity service existing usenet infrastructure distribute posted files world 
achieve anonymity publishing eternity usenet employs type type ii mixmaster remailers gateways email newsgroups 
publishers pgp sign documents wish publish system documents formatted html readers search query requests eternity servers map requests nntp commands remote news server local news spool 
initial implementation default list newsgroups read consists alt anonymous messages 
eternity server effectively provides interface virtual web filesystem posters populate usenet posts 
eternity usenet uses normal usenet mechanisms retrieval posting expiring publishers may control expiration time propagation rate document 
reader anonymity eternity usenet provided system local proxy mode user downloads entire eternity newsgroup remote server 
server link reader day contents eternity newsgroup reader anonymity strong 
back treats usenet append file system 
system provides support replacing files virtual addresses newer posts signed pgp key assumed publisher 
addresses claimed come served basis pgp signatures provide initial file address revision file 
clear happens addresses claimed usenet posts may arrive order subtle attacks file coherency different eternity servers different notion owns file 
system directly usually consider term eternity misleading 
usenet posts expire age size 
back provide analysis long document survive network 
task making feasible distributed store eternity documents left 
freenet gnutella freenet peer peer network servers 
user wishes request document hashes name document gets name outside scope freenet queries server location 
server passes query nearby server 
freenet clusters documents similar hashes nearby uses routing protocol route queries downhill arrive desired document 
freenet bases document lifetime popularity document frequently requested files get duplicated system infrequently requested files live places die completely 
valid choice system emphasizes availability efficiency precludes certain uses system phone book collection project described earlier 
freenet explicitly sets provide anonymity 
goals include sender reader anonymity plausible deniability servers notion server know contents documents storing 
provide call passive server document anonymity referencing files name having users encrypt documents name inserting 
means anybody knows original name string decrypt document server storing document unable invert name determine name 
freenet similar potential flaw publisher reader anonymity gnutella due presence ttl depth comparable hops fields freenet message headers 
freenet takes steps avoid problems gnutella depth ttl headers randomly assigning values fields depth necessarily mean request originated node 
packets ttl randomly expired forwarded onward 
document requests sent caching enabled network peer peer gnutella 
measures freenet provide anonymity gnutella 
statistical attacks similar described crowds pinpoint location reader publisher caching provides protection network topology document changes request 
attacks need analyzed 
freenet files highly accessible offers level anonymity 
choice drop file purely local decision files aren requested time tend disappear automatically guarantee specified lifetime document 
expect freenet provide convenient service porn popular audio files popular driven system 
mojo nation mojo nation peer peer design robustly distributing resources 
basic operations supports publishing retrieving differs works employs digital cash system help protect abuse system 
mojo nation user wishes publish document call alice uses error correction techniques split document pieces sufficient reconstruct 
combines hashes pieces second document called proceeds way splitting 
sends descriptions pieces separate agent called content tracker responsible keeping track reconstruct document 
participants system serve block servers 
offer storage machine system 
block server describes subset hash space hashes piece document store 
piece document alice pays appropriate block server store piece 
alice learns set block servers available interested pieces agent called 
multiple block servers overlapping cover allow greater redundancy 
alice informs publication tracker published document block servers go block servers published purchase document pieces 
retrieve document bob queries content tracker receives information pieces reconstruct document 
asks block servers serve address space pieces purchases appropriate block servers 
reconstructs repeats process pieces document retrieving 
error correction codes bob needs purchase pieces reconstruction phase 
freenet document pieces expire entirely choices local block server 
cases popular files stay system unpopular files dropped 
entire system works currency called mojo 
participants system pay mojo participants ask service uses resources 
way mojo nation reduces potential damage resource flooding attacks 
credit reputation system allows interactions streamlined trust built past experience 
mojo nation employs centralized bank server handle mojo transactions accounting 
clear job done decentralized way producing bottleneck loss implies loss service way smoothly inform participants joining leaving system 
distributed truly decentralized anonymous electronic cash system useful far know isn available 
goals mojo nation anonymity 
want ubiquitous efficient distributed file distribution system focuses document accessibility 
clear robust system design certainly appears scale 
publius publius attacks problem anonymous publishing different angle employing way anonymous channel transfer documents publishers servers :10.1.1.125.3017
publius protocol designed maintain availability documents servers 
system publisher generates key document encrypts document key 
performs shamir secret sharing algorithm build set key shares sufficient reconstruct chooses publius servers anonymously delivers encrypted message plus share servers 
way document replicated server key split servers 
document reading implemented running local web proxy reader machine addresses chosen servers concatenated url presumably published remembered 
local proxy fetches share independently reconstructs original key decrypts document 
publius system provides publisher anonymity means way anonymous channel authors servers 
addition shamir secret sharing protocol server receives share publius provides computational information theoretic passive server document anonymity single server able determine document stores 
minor flaw readers determine share corrupt simply examining reader request shares attempt reconstruct order determine integrity share 
verifiable secret sharing scheme system efficient 
publius provides smooth decentralized support adding new servers dead malicious servers 
importantly publius provides accountability way prevent publishers entirely filling system garbage data 
analysis anonymity describe protections offered broad categories anonymity 
table provide overview view free haven different publishing systems examined 
consider level privacy provided computational perfect forward anonymity various systems 
computational anonymity means adversary modelled polynomial time turing machine better neg chance breaking anonymity reasonable security parameter function neg 
perfect forward anonymity analogous perfect forward secrecy system perfect forward anonymous information remains transaction complete identify participants side compromised 
notion little bit trickier think perspective adversary watching user long period time 
adversary discover watching transactions discover watching single transaction 
free haven provides computational perfect forward author anonymity authors communicate publishers anonymous channel 
servers trade servers pseudonyms providing computational perfect forward anonymity pseudonyms broken 
trading constant free haven achieves publisher anonymity publishers trying trade away shares document 
ida split documents provides passive server document anonymity public key embedded share require integrity checking trivial active servers discover storing 
requests broadcast anonymous channel free haven provides computational reader anonymity different reply blocks destroyed request provide perfect forward reader anonymity 
gnutella fails provide publisher anonymity reader anonymity server anonymity project publisher reader server document query gnutella eternity usenet freenet mojo nation 
publius free haven table anonymity properties publishing systems peer peer connections actual file transfer 
gnutella servers start knowing intended contents document offering fail provide document anonymity 
eternity usenet provides publisher anonymity way anonymous remailers 
server anonymity provided usenet server carries eternity newsgroup server 
adam back pointed passive server document anonymity provided encrypting files key derived url active servers find key attempt decrypt stored documents 
reader anonymity provided open public proxies reader uses anonymous channel proxy see content timing user queries downloads 
local proxies connect separate news server situation better news server knows user downloads 
quite satisfactory user tied server contents eternity newsgroup certain time 
freenet achieves passive server document anonymity servers unable reverse hash document name determine key decrypt document 
active server document anonymity servers check carrying particular key easily match stored document key due hash function 
server anonymity provided document key easy locate server carrying document querying server result server carrying document 
ttl hops fields reading publishing clear freenet achieves publisher reader anonymity better regards gnutella 
note freenet design introduces randomized ttl hops fields request plans works allow publish retrieve operation traverse chain entering freenet system 
protections attacks tracking queries difficult 
mojo nation achieves passive server document anonymity server holding share doesn know reconstruct document 
mojo nation design amenable integrating publisher anonymity road publisher increase anonymity paying mojo chaining requests participants act relays 
specifics path relays currently designed 
possible technique ensure reader anonymity payment issues complex 
supplied digital cash model anonymous currently users need lines source action breaks chaum patents 
publius achieves document anonymity key split servers sufficient shares key server unable decrypt document stores 
secret sharing algorithm provides stronger form anonymity albeit storage intensive manner passive server really learn contents document helping store 
documents published publius way anonymous remailer provides publisher anonymity 
publius provides support protecting readers servers containing file clearly marked url retrieving file 
readers system freedom onion routing protect servers may liable storing bad data 
see systems provide publisher anonymity way communication channels effectively removing removing need reply block anonymous channel means crack 
idea employing common communications channel publication systems appealing 
mean leave anonymity concerns communication channel provide simple back file system equivalent service transfer documents agents 
design back system primarily addressing issues availability documents protections flooding denial service attacks accountability face anonymity 
experience designing free haven revealed problems simple solutions research required 
state problems refer author thesis depth consideration 
deployed free low latency pseudonymous channel free haven requires pseudonyms order create server reputations 
current widely deployed channels support pseudonyms remailer network freedom mail 
version networks run smtp consequently high latency 
high latency complicates protocol design 
announced version freedom mail runs pop may offer opportunity kind channel desire 
accountability reputation extremely difficult reason accountability free haven especially considering buddy system 
time accountability critical ensuring documents remain available system 
area develop anonymous system reputation algebra formally reasoning server reliability various circumstances allow verify trust protocols 
sketch problem detail 
modelling metrics free haven choices choice include trading intuition robust anonymous system 
mathematical model anonymous storage allow test intuition run simulations 
need metrics specific quantities measured compared determine designs better 
example ask servers compromised adversary long document availability compromised 
specific targeted document availability compromised servers compromised adversary long adversary link document publisher 
modelling follow tsudik berthold federrath apply statistical modelling mix nets 
formal definition anonymity closely related point need formalize kinds anonymity section 
formally defining anonymity move closer providing meaningful proofs particular system provides anonymity desire 
leverage experience cryptographic definitions semantic security non malleability produce similar definitions proofs 
step direction carefully explore connection remarked rackoff simon secure multiparty computation anonymous protocols 
usability requirements interface stated began free haven project concern rights political 
unfortunately stage project contacted political consequence clear idea usability interface requirements anonymous storage system 
concern heightened points serious deficiencies pgp user interface 
efficiency nearly doing peer peer system www replacement days 
win 
adam back pointed cases efficiency perceived benefit system important user anonymity properties 
major problem current free haven design emphasize quality relatively potential users care expense nearly cares 
way create anonymous system tolerable loss perceived efficiency compared non anonymous counterpart 
tolerable mean exactly 
consider challenge problems anonymous publication storage systems 
free haven decentralized storage service provides anonymity publishers readers servers provides dynamic network ensures availability document publisher specified lifetime 
requirements new free haven addresses 
current free haven design unsuitable wide deployment remaining problems 
primary problem efficiency 
inefficient design lead system users 
system users provide anonymity desire 
free haven uses inefficient broadcasts communication 
way address problem coupling free haven widely deployed efficient file sharing service freenet mojo nation 
popular files highly accessible faster service free haven answers queries popular documents expired service 
filling role requires facing problems particular long term persistent storage service 
requirement long term persistent storage strong accountability measures necessary 
measures computational overhead greatly lowered making unnecessary communications manage reputation metrics 
requirement anonymity resulting latency communications channel readers enjoy faster document retrieval 
solving problems important free haven utility resort respond requests timely reliable manner 
problems far solved 
risks involved systems better evaluated conscience situations failure option 
remains 
professor ronald rivest provided invaluable assistance roger masters michael thesis advisor caused think hard design decisions 
professor michael mitzenmacher possible david involvement project provided insightful comments information dispersal trading 
suggestions design details brian provided background reputation system joseph useful considering attacks system 
andy oram instrumental helping restructure improve flow clarity 
adam back theodore hong commented assessment systems related section better 
wei dai caught embarrassing error description signature schemes 
furthermore susan born nathan jean francois raymond anna lysyanskaya adam smith brett insight feedback 
abe 
universally verifiable mix net verification independent number servers 
advances cryptology eurocrypt pages 
ross anderson :10.1.1.16.1952
eternity service 
www cl cam ac uk users rja eternity eternity html 
aol instant messenger 
www aol com aim 
adam back 
eternity service 
phrack com search view article 
adam back 
re distributed project 
net archives dev aug msg html 
oliver berthold hannes federrath 
anonymity unobservability internet 
workshop freedom privacy design cfp 
ran canetti cynthia dwork moni naor ostrovsky 
deniable encryption 
advances cryptology crypto 
david chaum 
untraceable electronic mail return addresses digital pseudonyms 
communications acm february 
david chaum 
dining cryptographers problem unconditional sender recipient untraceability 
journal cryptology 
yuan chen jan andrew goldberg allan gottlieb peter yianilos 
prototype implementation archival intermemory 
proceedings fourth acm conference digital libraries dl 
ian clarke 
free network project 
freenet sourceforge net 
cleaner 
gnutella wall shame 
www com 
roger dingledine 
free haven project 
master thesis mit 
roger dingledine michael freedman david molnar 
accountability 
peer peer 
reilly associates 
ian hall beyer gnutella 
gnutella wego com 
michael freedman 
design analysis anonymous communication channel free haven project 
theory lcs mit edu cis cis theses html may 
electronic frontiers georgia 
anonymous remailer information 
anon org remailers 
ian goldberg adam 
freedom network architecture november 
ian goldberg david wagner eric brewer 
privacy enhancing technologies internet 
proceedings ieee compcon 
goldreich lempel 
randomized protocol signing contracts 
advances cryptology crypto 
oded goldreich 
modern cryptography probabilistic proofs pseudo randomness 
springerverlag 
tsudik 
mixing mail babel 
proceedings isoc symposium network distributed system security pages 
autonomous zone industries 

www com 
jakobsson 
flash mixing 
principles distributed computing podc 
jakobsson 
practical mix 
advances cryptology eurocrypt 
ari juels john 
client puzzles cryptographic defense connection depletion attacks 
proceedings network distributed system security symposium february 
clifford kahn david black paul dale 
manet mobile agents network trust 
www darpa mil ito psum html 
jan roland 
go mixes providing probabilistic anonymity open system 
information hiding workshop pages 
levien 
advogato trust metric 
www advogato org trust metric html 
mark lewis 
napster universities citing copyright infringement rico violations 
www com archive wk univ html 
tal malkin 
private information retrieval 
phd thesis mit 
see theory lcs mit edu cis 
html 
david michael martin 
phd thesis boston university 
www cs du edu dm anon html 
tim may 
www pro ns net crypto html 
david mazieres frans kaashoek 
design operation mail pseudonym server 
th acm conference computer communications security 
micali 
certified mail invisible post offices 
talk rsa 
napster 
www napster com 
university michigan news information services 
phone books record people 
www umich edu releases jan html 
pfitzmann pfitzmann waidner 
isdn mixes untraceable communication small bandwidth overhead 
gi itg conference communication distributed systems pages 
springer verlag 
pgp faq 
www faqs org faqs pgp faq 
michael rabin 
efficient dispersal information security load balancing fault tolerance april 
michael reiter rubin 
crowds anonymity web transactions 
dimacs technical report april 
simon rackoff 
cryptographic defense traffic analysis 
stoc pages 
brian 
trust economies free haven project 
theory lcs mit edu cis 
html may 
markus stadler 
publicly verifiable secret sharing 
eurocrypt 
citeseer nj nec com stadler publicly html 
steve steinberg 
maps 
gnutella wego com file depot folder network jpg 
paul syverson stuart stubblebine 
group principals formalization anonymity 
world congress formal methods 
syverson goldschlag reed 
anonymous connections onion routing 
proceedings ieee symposium security privacy may 

true names 
short story 
marc waldman rubin cranor :10.1.1.125.3017
publius robust tamper evident source anonymous web publishing system 
alma tygar 
johnny encrypt 
usenix security 
www usenix org publications library proceedings sec html 

