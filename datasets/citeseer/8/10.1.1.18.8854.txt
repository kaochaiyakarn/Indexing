search space reduction qos routing liang guo ibrahim matta computer science department boston university boston ma cs bu edu december provide real time service engineer constrained paths networks require underlying routing algorithm able nd low cost paths satisfy quality service qos constraints 
problem constrained shortest cost path routing known np hard heuristics proposed nd near optimal solution 
heuristics impose relationships link metrics reduce complexity problem may limit general applicability heuristic costly terms execution time applicable large networks 
focus solving delay constrained minimum cost path problem fast algorithm nd near optimal solution 
algorithm called dccr constrained routing variant shortest path algorithm 
dccr uses new adaptive path weight function additional constraint imposed path cost restrict search space 
dccr return near optimal solution short time 
furthermore variant lagrangian relaxation method proposed handler reduce search space tighter bound path cost 
algorithm accurate faster 
call improved algorithm ssr dccr search space reduction dccr 
extensive simulations con rm ssr dccr performs compared optimal expensive solution 
keywords quality service qos routing trac engineering constrained path optimization simulation 
constrained shortest path problem encountered aspects routing integrated services networks 
example delay sensitive applications real time voice video require trac received destination period time 
time highly desirable reduce path cost possible monetary cost cost utilizing network resources 
recognized performance operational networks improved engineering internet trac routed resource ecient constrained paths 
constrained shortest cost path problem general multi constrained optimization path selection problem notoriously challenging proved np hard 
study problem nding cost communication path subject delay constraint 
problem formulated delay constrained cost dclc unicast routing problem generally constrained optimization problem 
proposed optimal solution constrained bellman ford cbf algorithm solve problem 
cbf algorithm performs breadth rst search nd optimal solution running time grow exponentially worst case 
algorithms try compute path distributively order alleviate supported part nsf career ani ani mri eia 
corresponding author 
address computer science department boston university street mcs boston ma 
tel fax mail matta cs bu edu 
centralized computation overhead paths returned algorithms may costly path setup time may long 
assumes delay delay jitter bu er space functions available bandwidth routing algorithm take advantage relationships nd path polynomial time 
previous studies mainly focus related possibly simpler problem multiple constraints path mcp problem 
di erence mcp problem dclc problem mcp optimize value metrics seeks feasible path satis es constraints 
problem np hard metric additive takes real values unbounded integer values 
ja proposed pseudo polynomial heuristic polynomial time heuristic solving mcp problem metrics small range values 
chen nahrstedt try reduce problem complexity approximating real values link metrics integer values dynamic integer programming solve polynomial time 
accurately nd near optimal path algorithm resort high granularity approximating values link metrics costly terms space time complexity 
non linear function link cost delay proposed convert problem simpler single metric routing problem eciently nd path far away metric bounds 
mcp problem easier dclc problem heuristics problem generally ecient terms execution time appears attractive transform dclc problem mcp problem 
premise propose heuristic called dccr delay routing rapidly generate near optimal delay constrained path large networks asymmetric link metrics delay cost 
algorithm rst introduces cost bound network state employs shortest path algorithm proposed chong new nonlinear weight function path delay cost eciently search path subject requested delay constraint introduced cost constraint 
search space reduced paths satisfy constraints pruned weight function designed give priority lower cost paths 
algorithm similar algorithm proposed observe algorithm suitable solving dclc problem di erent objective solving mcp problem 
notice tighter cost bound may help increase accuracy speed algorithm improvement employ algorithm proposed handler re ne search space 
show analysis complexity algorithm called ssr dccr search space reduction dccr asymptotically order regular unconstrained single metric shortest path algorithm dijkstra algorithm 
furthermore extensive simulations con rm cost path ssr dccr algorithm close optimal path generated computationally expensive cbf algorithm 
rest organized follows 
section de nes dclc problem 
section describes ssr dccr algorithm motivating design path weight function 
section analyze complexity algorithm 
compare ssr dccr algorithm heuristics simulations section 
conclude section 
problem description delay constrained cost dclc problem formulated 
completeness brie restate 
represent network directed graph set vertices nodes representing routers switches set edges links representing physical logical connectivity nodes 
link bidirectional existence link node node implies existence link link cost 
delay 
associated set non negative real numbers 
function de nes measure want optimize minimize 
function de nes measure want constrain bound 
due asymmetric nature computer networks possible 
source node destination node 
pm set possible paths cost delay path de ned respectively 
delay constraint 
speci ed application performance guarantee 
dclc problem formulated follows problem delay constrained cost dclc path problem directed network source node destination node non negative link delay function non negative link cost function link positive delay constraint 
constrained minimization problem nd path satis es min 
set paths delay bounded 
dclc problem generally categorized constrained optimization problem involves optimizing variables imposing constraints variables 
variation problem multi constraints path mcp problem searches feasible solution variables bounded constraints 
special case mcp problem delay dcc problem stated similarly dclc problem objective nd path 


application speci ed cost bound 
dclc dcc problems np hard dcc involve optimization appears easier nd ecient dcc heuristic 
rst converting dclc problem dcc problem may help eciently solve original dclc problem 
idea applied dccr algorithm 
ssr dccr algorithm motivation convert dclc problem dcc problem de ning appropriate cost bound dcc solution original dclc problem remains feasible solution new dcc problem 
easily achieved suciently loose cost bound 
algorithm solve dcc problem start delay path possible feasible solution 
cost delay path selected cost bound 
goal search feasible path possibly higher delay lower cost 
path exist delay path optimal cost feasible path algorithm returns 
convert original dclc problem problem searching near optimal path solution space new dcc problem 
illustrated solution space dcc clearly smaller dclc fewer paths satisfy delay cost constraints 
search solution space cost path need examine feasible paths dcc problem paths satisfy requested delay bound introduced cost bound 
purpose known shortest path algorithm dijkstra bellman ford 
algorithms deal single metric need de ne weight function combines features link metrics optimizing minimizing weight nally nd solution minimizes link metrics simultaneously 
simple way mix metrics linear function example new weight edge 
approach taken hz chosen optimization step maximize chance nding optimal paths optimal path path delay path cost ldp lcp cost ldp ldp delay path lcp cost path reduced search space dcc path 
approach advantage easy implement multiple constraints path delay cost single path weight constraint 

linear weight function may re ect actual quality path optimal path new weight function may fact violate constraints suboptimal path satis es 
shows linear function may 
paths optimal path weight function linear weight function non linear weight function linear function fails 
see delay path violates delay bound weight cost relatively low search process may actual optimal feasible path see illustration dclc problem feasible path may returned linear weight algorithm relatively low delay actual optimal cost path furthermore number candidate paths large linear function may su er slow convergence 
non linear function may help overcome diculty 
de van propose concave path weight function max 

algorithm 
shown function algorithm nd shortest path path cost delay far bounds relatively high success rate 
illustrates advantage non linear weight function linear 
search process return high delay high cost respectively resulting high weight value 
problem de ning non linear weight function link weight path longer sum weight links path 
easy record cumulative delay cumulative cost path easily solve problem computing path weight function delay cost path sum link weights 
serious problem non linear function optimal substructure property subsections shortest weight paths necessarily shortest paths 
shortest path algorithm dijkstra fail nd shortest weight path 
consider example shown assuming concave max weight function 
intermediate node path chosen smaller weight actual feasible max max 
source destination link cost delay problem non linear function path destination feasible delay cost missed 
de van solve problem advantage shortest path algorithm proposed chong store shortest paths increasing weight order node 
appropriate value algorithm nd weight feasible path 
non linear max weight function works nd path far bounds 
goal optimize metrics 
objective nd path cost function longer suitable treats link measures equally 
weight function gives priority low cost paths 
weight function algorithm de ned 


th path source node node algorithm 
de nition path weight exponential growth path cost linearly proportional path delay 
di erence new multiplicative function concave max function de ned algorithm illustrated 
cbf paths dccr paths paths concave weight function path delay path cost opt cbf paths dccr paths paths multiplicative weight function path delay path cost opt paths selected di erent heuristics weights concave path weight function multiplicative path weight function dccr algorithm represent paths visited cbf optimal algorithm represent paths visited algorithm represent paths visited dccr algorithm 
see concave max function impossible nd optimal cost path denoted opt delay close delay bound 
hand multiplicative function dccr algorithm paths close optimal better chance visited 
shows paths dimensional path cost delay view hz paths explained section 
path marked nal solution returned algorithm nal solution returned algorithm 
notice example cbf paths dccr paths paths hz paths path distribution node network path delay ldp lcp opt hz cost path distribution cost delay plane network size node degree negative correlation cost delay solution dccr exactly optimal path cost path higher optimal solution 
ect weight function re ected di erence areas paths dccr paths visited 
clearly area visited dccr algorithm closer optimal solution 
shows example summarize idea dccr 
path weights computed equation 
delay path source destination 
cost delay path taken additional cost bound 
dccr returns path lower weight cost reducing search space pruning infeasible paths 
path weight path delay path cost cost bound pruned infeasible paths cost bound delay bound delay path optimal path cost cost bound weight weight dccr example algorithm description describe detail dccr algorithm works 
dccr takes greedy strategy dijkstra algorithm uses non linear weight function searching best solution 
mentioned earlier non linear weight function optimal substructure property recording best path source node node may lead failure nding optimal path 
dccr algorithm solves problem applying chong shortest paths algorithm records shortest paths listed increasing weight order node 
shortest paths pick return path lowest cost nal stage best feasible solution 
way candidate paths node increases chance nding optimal feasible path cf 

shortest paths algorithm see appendix pseudo code basically extension dijkstra algorithm 
basic idea algorithm maintain element array node record currently best paths source node 
proves shortest paths need maintained node nd shortest paths source destination node 
algorithm uses heap store nodes visited times 
element heap elds id wgt idx id identi es node idx locates element array nd id shortest paths associated node 
heap operations node weight wgt 
relaxation step dijkstra algorithm unvisited node weight updated corresponding element heap needs updated 
speci cally weight current path weight paths recorded recorded path maximum weight replaced new path lines pseudo code 
original shortest paths algorithm may return path contains loops non dominated strategy 
path said dominated path 
allow algorithm visit dominated path relaxation step line 
delay cost additive metrics path contains loop dominated corresponding loop free subpath 
nal candidate solutions contain paths loops 
improvement dccr algorithm recall dccr algorithm restricts search space examining paths satisfy requested delay bound cost bound 
cost bound taken cost delay path 
reasonable path lower cost delay path delay path optimal path path returned dccr 
cost bound may loose especially relationship cost delay negative lower delay higher cost vice versa 
set weight infeasible paths nity easy see tighter cost bound number possible feasible solutions decreases opportunity algorithm nds optimal cost solution increases 
advantage tighter bound success rate higher small value speed algorithm enhanced 
search tighter cost bound heuristic dclc problem prelude dccr algorithm 
heuristic hz algorithm proposed handler 
uses linear function link delay cost compute link weight 
salient feature adjusts weights cost delay weight function quality current path iteratively approaches optimal cost solution 
illustrates hz algorithm works pseudocode appendix 
algorithm starts paths delay path ldp cost path lcp computed shortest path algorithm dijkstra algorithm simulations weight function link delay link cost respectively lines 
lcp feasible delay bounded path optimal solution algorithm stops 
feasible iteration algorithm maintains solutions paths current best feasible delay bounded path ldp current best infeasible path lcp de nes parameters line construct new linear path weight function path represented dashed lines 
new linear function link cost delay algorithm tries nd new path lwp weight reduce path cost delay 
successful lwp current path weight lwp feasible lwp 
case lwp replaces ldp best feasible path weight link cost increases round lower cost paths preference 
lwp infeasible case lwp replaces lcp iteration weight link delay increases lower delay paths preference 
algorithm stops progress lwp lines returns best feasible path lwp ldp near optimal solution 
example hz works shown 
hz paths linked dashed dotted line order visited 
see cost hz path getting closer optimal path iteration 
path hz algorithm may optimal path due inherent weakness linear weight function cf 

cost close optimal cost ectively tight cost bound dccr 
denote improved algorithm ssr dccr tighter cost bound mechanism search space reduction 
note paths optimal path new wgt func old wgt func lcp ldp lwp lcp ldp lwp case lwp case lwp hz algorithm hz unbounded time complexity ssr dccr time complexity bounded hz prelude dccr small number iterations 
comparison hz algorithm handler proposed algorithm uses hz initial step uses shortest path algorithm second step 
henceforth refer complete handler algorithm hz ssr dccr algorithm hz uses linear path weight function second step 
due inherit weakness linear function hz take signi cant amount time words signi cantly high value required nd close optimal solution 
weakness illustrated part example 
brie speaking linear path weight function returned hz bad function large close number paths network approach optimal solution 
method overcomes problem non linear function illustrated gives higher preference low cost paths 
words hz algorithm change optimality weight function second stage convergence optimal solution slower ssr dccr algorithm 
algorithm approach optimal solution smaller worst case 
algorithm analysis correctness ssr dccr theorem exists ssr dccr returns delay constrained path source destination path exists 
proof feasible path exists delay path connects greater delay bound minimum path weight computed node weight nity cf 
equation 
relaxation step means ssr dccr returns path search 
prove contradiction ssr dccr returns path feasible paths exist 
feasible paths possible reason ssr dccr return path algorithm nds feasible path leading intermediate node feasible path words fs 
dg feasible path intermediate nodes conditions satis ed 

delay additive metric assumed link delay non negative possible subpath feasible path feasible 
contradiction shows ssr dccr nd feasible solution 
theorem nal path returned ssr dccr source destination loop free 
proof algorithm visit dominated paths path contains loop recorded nal shortest paths recorded node loop free nal path returned 
complexity analysis lemma time complexity original dccr algorithm log jej single metric shortest path algorithm time complexity proof task extracting minimum element binary heap takes log 
algorithm considers maximum paths need extract elements worst gives log 
edges relaxation process 
relaxation step includes extracting maximum element array neighbor node heap search operation log heap replacement insertion operation log 
total time spent relaxation step log log jej 
need compute cost bound dccr running shortest path algorithm nd cost delay path time 
dijkstra algorithm priority queue implemented binary heap total time complexity dccr algorithm log jej jej log jv jej jv lemma time complexity hz algorithm jej total number executed iterations single metric shortest path algorithm time complexity proof outer loop executes times iteration need compute weight jej edges compute weight path time 
total time jej 
need run loop nd delay path cost path takes 
dijkstra algorithm priority queue implemented binary heap time complexity jej jej log jv jej log jv jej log jv 
lemma time complexity improved ssr dccr algorithm jej log jv log jej 
proof follows directly lemma lemma 
note depends con guration graph complexity hz algorithm known 
number relatively small heuristic converges fast gain iteration 
main purpose hz heuristic algorithm just provide tighter cost bound add upper bound number iterations implementation hz algorithm 
time complexity improved ssr dccr algorithm log jv log jej upper bound 
small argue time complexity improved ssr dccr algorithm times regular unconstrained dijkstra algorithm 
applying hz heuristic helps reduce value simulations indicate section 
simulation model results simulation model built discrete event simulator investigate performance di erent algorithms realistic communication environment 
graph generation process positions nodes lie rectangular area 
random generator waxman generator create links interconnecting nodes 
modi cations added ensure generated network connected probability existence short link larger longer link 
xed position source node destination node manhattan distance longest possible distance graph 
average node degree set approximately situation current networks 
link delay function consists propagation delay transmission delay queuing delay considering high speed links transmission delay assumed negligible 
denote ratio queuing delay propagation delay parameter re ects busy communication link link delay de ned simulation model uniformly distributed parameter re ects maximum queueing delay allowed switch 
larger value generated network asymmetric 
set experiments 
way generate link cost ect diculty nding optimal path 
positive correlation link cost delay higher link delay costly link just single metric shortest path algorithm faster paths cheaper 
simulation model consider dicult situation negative correlation exists cost delay example model case high speed low delay links cost 
de ne link cost parameters chosen adjust value reasonable range 
choose simulations varies 
tightness delay bound ect performance algorithms investigation choose delay bound con guration graph 
time new graph generated rst dijkstra algorithm nd delay path cost path compute delay paths denoted ldp lcp respectively 
de ne delay bound 

ldp lcp ldp called delay bound ratio re ects tightness delay bound 
experiments set 
assume link state type routing routing nodes complete knowledge state entire network state information accurate date 
network size set 
executions di erent networks conducted experiment con dence intervals computed performance measures 
choose network sizes number shortest weight paths maintained source node number hz iterations executed compute tight cost bound dccr 
note smaller network size see shortly small value get performance 
performance metrics performance metrics measure ineciency inaccuracy speed heuristics 
mentioned earlier cbf algorithm provides optimal solution terms path cost 
de ne ineciency algorithm path cost di erence relative cost cbf path inefficiency pa measure actual execution time investigated algorithm 
experiments conducted sun ultra workstation 
simulation results shows performance measures di erent heuristics di erent network sizes 
con dence intervals shown see negative correlation link cost delay path cost high times optimal path 
hz returns log scale cost axis due huge di erence algorithms investigation 
path costs higher optimal path 
increasing hz algorithm signi cantly reduce excess cost 
dccr takes advantage non linear function advantage counterpart hz achieve cost level 
improved ssr dccr algorithm combination hz dccr shows attractive cost performance relative excess cost ssr dccr remains 
see relative order scale cost di erence change network size 
considering set network sizes argue kept small large network 
execution time shows data heuristics cbf algorithm 
ldp dijkstra delay path algorithm runs fastest 
comes hz algorithm implies practically hz converge fast nal solution analytical bound exist 
speed dccr little bit slower hz dccr uses non linear path weight function requires shortest path algorithm 
surprisingly hz slows process factor 
surprising improved ssr dccr algorithm combination hz dccr runs speed original dccr algorithm implies ecient search ssr dccr 
speed algorithms non linear path weight function dccr ssr dccr times ldp algorithm 
result con rms complexity analysis section experiment 
compared speed optimal cbf solution ssr dccr algorithm 
clear cbf algorithm exponential growth network size terms execution time opposed polynomial growth ssr dccr algorithm 
di erence execution time node network high orders magnitude 
see role plays performance heuristics shortest path method conduct experiment results shown 
increasing value results candidate paths examined heuristics hz ssr dccr return cheaper path larger 
hz performance improvement set large increase execution time 
ssr dccr hz heuristic nd tighter cost bound aren feasible paths left solution space small nd low cost path 
ssr dccr requires space time 
contrary achieve performance level hz requires larger value greater example implies longer execution time times higher 
observe gure due strict admission policy non linear function number candidate paths relatively small ssr dccr algorithm increasing signi cantly increase execution time 
shows ect delay bound performance 
see relative excess cost hz hz dccr increasing delay bound gets looser 
looser bound enlarge solution space capability algorithms limited weakness linear weight function cf 
xed value cf 

contrary performance ssr dccr sensitive delay bound 
analyzed earlier cost bound hz heuristic tight restrict number feasible paths 
experiments assume link cost link delay negatively correlated 
assumption valid networks increases diculty nding optimal path 
note cases link cost may relationship link delay 
experiment assume link cost random number correlated link delay 
shows performance investigated algorithms di erent network sizes 
relative order heuristics remains ssr dccr performs best followed dccr hz hz 
ldp performs worst 
di erence performance gaps smaller 
con rm ssr dccr produces paths cost close optimal cost competitive speed 
ecient algorithm obtaining delay constrained cost dclc path 
algorithm uses non linear path weight function applies shortest path heuristic path search accurate faster 
enhance accuracy speed algorithm propose dclc heuristic uses linear path weight function prelude reduce solution search space 
results extensive simulations show dicult situation link cost link delay negatively correlated improved ssr dccr algorithm returns quickly feasible path cost close optimal computationally prohibitive search method 
ssr dccr algorithm applied multicast routing protocols build low cost multicast tree 
common membership multicast group dynamic network state link delays costs dynamic hard impossible maintain time optimal cost multicast tree satis es performance delay constraints 
possible solution problem new group member joins existing member bound add replace old path new delay bounded path 
reducing cost delay bounded path reduce cost tree 
investigate approach 
investigating algorithms trac engineering di serv environments 
blake black carlson davies wang weiss 
architecture di erentiated services 
rfc december 
chen nahrstedt 
finding multi constrained paths 
proc 
icc atlanta georgia 
chong morley 
finding single source single destination shortest paths 
proc 
international conference computing information pages ontario canada july 
cormen leiserson rivest 
algorithms 
mit press mcgrawhill book 
internet trac engineering 
ietf working group 
ftp eng uu net 
garey johnson 
computers intractability guide theory npcompleteness 
freeman new york 
guerin orda 
qos routing networks inaccurate information theory algorithms 
proc 
ieee infocom 
handler 
dual algorithm constrained shortest path problem 
networks 
hong lee park 
ecient multicast routing algorithm delay sensitive applications dynamic membership 
proc 
infocom san francisco ca march 
ja algorithms finding paths multiple constraints 
networks spring 
lorenz orda 
qos routing networks uncertain parameters 
proc 
ieee infocom san francisco ca march 
ma steenkiste 
quality service routing trac performance guarantees 
proc 
ifip fifth international workshop quality service pages columbia university new york may 
de van 
multiple quality service routing algorithm pnni 
proc 
ieee atm workshop pages fairfax virginia may 
salama reeves 
distributed algorithm delay constrained unicast routing 
proc 
ieee infocom japan april 
salama reeves 
evaluation multicast routing algorithms real time communication high speed networks 
ieee select 
areas commun april 
sun 
new distributed routing algorithm delay guarantee 
proc 
ifip fifth international workshop quality service columbia university new york may 
wang crowcroft 
quality service routing supporting multimedia applications 
ieee select 
areas commun 
waxman 
routing multipoint connections 
ieee select 
areas commun pages december 

design evaluation routing algorithms real time channels 
technical report icsi tr international computer science institute berkeley june 
dccr algorithm 


node records nd idx mark stored nd idx nd points predecessor node path idx points predecessor record path 
min heap mh maintained increasing weight order heap item form id wgt idx 
set best nil 
nd mh 
mh searching start 
mh 
mh 
nd mark visited 
path 
trace back new path compute cost 

best 
best best 
jpj tried shortest paths 
return best 
vertex relaxation 

wmax nd find path max weight 
wmax path dominated 
nd unvisited 
mh 
nil update heap records 
mh 
mh nd mh 
node 

nd nd idx mark nil nil unvisited 
nd idx 
nd idx nd idx 
compute de ned equation 
return nd 
return idx nd idx idx index path maximum weight nd idx mark unvisited dccr algorithm hz algorithm input graph source node destination node 
application speci ed delay bound link delay function link cost function 
djk shortest path algorithm dijkstra algorithm 
output delay bounded path source destination 
djk 
call djk compute delay path store ldp 

call djk compute cost path store lcp 

ldp 

return failed 

lcp 
return lcp 
lcp feasible path 
set ldp lcp lcp ldp lcp ldp ldp lcp 
compute call djk compute weight path store lwp 

lwp 
lwp 

return lwp 
lwp 

return ldp 
lwp 
lwp 

ldp lwp 
lwp 

lcp lwp 
go step 
hz algorithm excess cost relative cbf network nodes path cost vs network size ldp hz hz dccr ssr dccr execution time sec network nodes execution time vs network size ldp hz hz dccr ssr dccr path cost execution time versus network size average node degree negative correlation cost delay execution time sec network nodes execution time vs network size ssr dccr cbf execution time cbf ssr dccr con guration excess cost relative cbf path cost vs ssr dccr hz execution time sec execution time vs ssr dccr hz path cost execution time versus network size average node degree negative correlation cost delay excess cost relative cbf rho path cost vs rho hz hz dccr ssr dccr path cost versus network size nodes average node degree negative correlation cost delay excess cost relative cbf network nodes path cost vs network size ldp hz hz dccr ssr dccr execution time sec network nodes execution time vs network size ldp hz hz dccr ssr dccr path cost execution time versus network size average node degree cost delay independent 
