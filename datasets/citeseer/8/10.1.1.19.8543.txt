chosen ciphertext attacks protocols rsa encryption standard pkcs daniel bleichenbacher bell laboratories mountain ave murray hill nj mail research bell labs com 
introduces new adaptive chosen ciphertext attack certain protocols rsa 
show rsa private key operation performed attacker access oracle ciphertext returns bit telling ciphertext corresponds unknown block data encrypted pkcs 
example protocol susceptible attack 
keywords chosen ciphertext attack rsa pkcs ssl overview analyze situation 
rsa public key corresponding secret key 
assume attacker access oracle chosen ciphertext indicates corresponding plaintext mod correct format rsa encryption standard pkcs 
show oracle decrypt sign message 
attacker carefully prepares ciphertexts sent oracle 
combining returns oracle attacker gradually gains information chosen ciphertexts previous outcomes oracle 
technique example ciphertext attack 
usually ciphertext attack theoretical assumption attacker access decryption device returns complete decryption chosen ciphertext 
public key cryptosystem susceptible chosen ciphertext attack considered theoretical weakness 
attack shown practical easy get necessary information corresponding oracle reply 
attack carried example attacker access server accepts encrypted messages returns error message depending decrypted message pkcs conforming 
organized follows 
describe rsa encryption standard pkcs section 
section describe analyze attack 
di erent situations attack carried listed section 
analyze vulnerability ssl attack section 
section report experiments technique 
section conclude ering recommendations 
pkcs section describe brie rsa encryption standard pkcs refer details 
currently block formats block types reserved digital signatures block type encryption 
describe block type relevant 
padding string data block fig 

pkcs block format encryption 
rst bytes format constant 
length padding block vary 
rsa public key corresponding secret key pq mod 
byte length data block consisting bytes encrypted follows 
padding string ps consisting jdj nonzero bytes generated pseudo randomly 
jdj exceed words byte length ps 
encryption block eb jj formed converted integer encrypted rsa giving ciphertext mod 
representation ciphertext important 
interested receiver parses ciphertext 
gets integer decrypting ciphertext private key 
converts encryption block eb looks rst zero byte indicates padding string ps start data block de nition speci es parsing process successful 
de nition 
encryption block eb consisting bytes eb eb jj called pkcs conforming satis es requirements block type pkcs 
particular eb satisfy conditions eb 
eb 
eb eb nonzero 
bytes eb 
call ciphertext pkcs conforming decryption pkcs conforming 
note de nition conforming include possible integrity checks 
show section possible attacker decide chosen ciphertext pkcs conforming 
possible attacker data block contains integrity checks 
chosen ciphertext attacks ciphertext attack attacker selects ciphertext sends victim return corresponding plaintext part thereof 
chosen plaintext attack called adaptive attacker chose ciphertexts depending previous outcomes attack 
known plain rsa susceptible chosen ciphertext attack 
attacker wishes nd decryption mod ciphertext chose random integer ask decryption innocent looking message mod answer easy recover original message mod 
known result signi cant bit rsa encryption secure message see 
particular exists algorithm decrypt ciphertext exists algorithm predict signi cant bit message corresponding ciphertext public key 
hastad extended result show individual rsa bits secure 
necessary attacker learn complete decrypted message chosen ciphertext attack single bits chosen ciphertext may su cient 
result reported similar 
assume attacker access oracle ciphertext returns corresponding plaintext pkcs conforming 
show oracle compute mod chosen integer theoretically hastad algorithm nd describe di erent algorithm goal minimize number chosen ciphertexts show practicality attack 
trying generalize attack advantage speci properties pkcs 
particular algorithm relies facts rst bytes pkcs format constant know bytes certainty ciphertext accepted 
heuristic arguments analysis algorithm approximate number expected chosen ciphertexts nding upper bound 
description attack give short overview attack describe attack detail 
assume attacker wants nd mod arbitrary integer 
basically attacker chooses integers computes cs mod sends oracle 
oracle says pkcs conforming attacker knows rst bytes ms 
convenience recall length bytes 
ms pkcs conforming implies ms mod collecting pieces information eventually derive typically chosen ciphertexts su cient number varies widely depending numerous implementation details 
attack divided phases 
rst phase message blinded giving ciphertext corresponds unknown message 
second phase attacker tries nd small values si ciphertext si mod pkcs conforming 
successful value si attacker computes previous knowledge set intervals contain 
elaborate process 
third phase starts interval remains 
attacker su cient information choose si si mod pkcs conforming randomly chosen message 
size si increased gradually narrowing possible range possible value remains 
describe attack detail 
variable mi set closed intervals computed successful si contained intervals mi 
step blinding 
integer choose di erent random integers check accessing oracle mod pkcs conforming 
rst successful value set mod step searching pkcs conforming messages 
step starting search 
search smallest positive integer ciphertext mod pkcs conforming 
step searching interval left 
mi search smallest integer si si ciphertext si mod pkcs conforming 
step searching interval left 
mi contains exactly interval mi choose small integer values ri si ri rin si rin ciphertext si mod pkcs conforming 
step narrowing set solutions 
si set mi computed mi max rn si min mi asi rn si step computing solution 
mi contains interval length mi set mod return solution mod 
set go step 
remarks 
step skipped pkcs conforming encrypted message 
case set 
step necessary computing signature wish get blind signature 
step start dn smaller values pkcs conforming 
condition want divide remaining interval iteration roughly half 
improve attack information 
example fact pkcs conforming message si contains zero byte 
attack performed client server environment parties message si generate session keys able nd message exhaustive search ifwe knew su cient portion 
analysis attack analyze correctness attack approximate complexity particular number oracle accesses necessary attack 
heuristic assumptions give rigorous proof result 
approximate probability pr randomly chosen integer probability nis pkcs conforming 
pr randomly chosen integer rst bytes respectively 
follows pr rsa modulus usually chosen multiple pr usually close probability padding block non zero bytes followed zero byte pr assuming modulus bit pr pr explain algorithm nds prove mi induction pkcs conforming trivially 
assume mi 
exists interval mi si pkcs conforming exists integer si rn asi rn 
rn rn si follows de nition mi contained intervals 
analyze complexity attack 
messages step chosen randomly step needs pr accesses oracle average nd 
assume average need pr accesses oracle nd si step 
see section 
number intervals mi 
heuristic arguments expect satisfy equation 
si length interval mi upper bounded si pkcs conforming lead sib ir take sib rn si si rn si values equation 
si knowledge intervals form particular contain intervals 
intervals ir fraction ir included mi ir overlaps interval mi 
ir overlap intervals mi 
ir randomly distributed probability intersects mi upper bounded si si get equation account interval contain 
case expect approximately pr pr npr 
high probability 
expect step executed 
analyze step mi rin rin length interval rin rin rin si rin rin rin rin rin expect nd pair ri si satis es third value ri tried 
easy nd pairs ri si satisfy just iterating possible values ri 
probability si rin rin roughly 
nd pkcs conforming si trying pr chosen ciphertexts 
remaining interval mi divided half step expect nd pr pr chosen ciphertexts denotes size modulus bytes 
pr corresponds bit modulus expect attack needs roughly chosen ciphertexts succeed 
bit length modulus usually multiple pr close assumed previously 
remarks 
probabilities section computed assumption values si independent 
assumption allow heuristic analysis algorithm 
assumption may wrong special cases 
example assume sim pkcs conforming padding strings similar length integer ps sim ps si pkcs conforming high probability si ps ps pkcs conforming 
believe relations generally help attacker certain situations attack require chosen ciphertexts analysis indicates 
usually bit size rsa modulus multiple 
choice modulus pr small 
modulus bit length attack easier case chosen messages necessary 
access oracle section describe situations attacker get access oracle 
plain encryption assume cryptographic protocol starts follows 
alice generates message randomly chosen key 
encrypts pkcs applying integrity checks sends ciphertext bob 
bob decrypts message 
format message pkcs conforming returns error proceeds protocol 
eve alice easily send messages bob check conformance 
note eve attack works protocol includes strong authentication step eve obtained useful information respond authenticated message 
note rsa encryption standard pkcs page note recommends message digest included rsa operation signing procedure 
standard mentions encrypted message ensure integrity standard indicate check included 
detailed error messages far shown reliable integrity check important part rsa encryption 
way include sender sign message private key encrypts receiver public key 
attacker longer hope create correct message accident 
attack successful case failed veri cation receiver returns error message gives detailed information veri cation failed 
particular compromise security return di erent error messages message pkcs conforming message signature veri cation failed 
timing attack certain applications combine encryption signatures 
cases reliable integrity check part signature included encryption 
assume encrypted message decrypted veri ed shown pseudo code 
mod rsa decryption 
pkcs conforming reject 

verify signature 
signature correct reject accept 
attacker able generate chosen ciphertext message correct signature 
able generate messages passes check step rejected signature checked 
measuring server response time attacker determine pkcs conforming 
timing attack easier perform kocher timing attack measures time di erence single modular multiplications small fraction time exponentiation 
case distinguish performing decryption performing decryption signature veri cation 
worst case time signature veri cation signi cantly longer time decryption example bit encryption key export restrictions bit key ensure strong authentication 
addition attacker chose signing key sent server 
ssl padding string bytes fig 

ssl block format 
pkcs format format contains ssl version number 
length data block constant 
situation discussed arises ssl handshake protocol 
particular 
client server rst exchange messages client hello server hello information exchanges select cryptographic routines 
client server may send public keys certi cates 
client generates random secret bit string called pre master secret encrypts secret bit string rsa mode chosen earlier sends resulting ciphertext server 
server decrypts ciphertext 
plaintext pkcs conforming server sends alert message client closes connection server continues handshake protocol 
client send finished message contains strong authentication 
particular client know pre master secret compute message 
attacker generate finished message depends pre master secret complete handshake protocol successfully 
complete gets necessary information chosen message pkcs conforming protocol nished 
details ssl hinder attack implemented right way 
shows format message containing pre master secret encrypted rsa 
contains version number protocol purpose detect attacks attacker tries modify hello messages client server compatibility mode version version protocols 
implementation analyzed checks version number server running compatibility mode obviously rollback attack occurred 
secure implementation check version number modes identi ed mismatch send back client error alert sends case decryption error 
result randomly generated message accepted probability protocol called secure attack shown impractical 
ssl documentation specify clearly error conditions corresponding alerts 
result di erent implementations ssl react consistently error situations 
experimental results implemented algorithm described section veri ed experimentally algorithm decrypt pkcs encrypted message access oracle ciphertext indicates corresponding plaintext pkcs conforming 
tested algorithm di erent bit bit keys 
algorithm needed chosen ciphertexts nd message 
implemented version oracle existing software product 
finney checked di erent ssl servers nd carefully servers analyze message format error alerts returned 
servers veri ed pkcs format 
second server checked pkcs format message length version number returned di erent message alerts allowing attack 
third server checked aspects correctly leak information sending di erent alerts 
shown chosen ciphertext attack carried partial information corresponding message leaked 
conclude important include strong integrity check rsa encryption integrity check performed correct step protocol preferably immediately decryption 
phase decryption integrity check critical sending error messages security risk 
believe provided strong argument plaintext aware encryption schemes described bellare rogaway 
note plaintext awareness implies security chosen ciphertext attacks 
particular version pkcs susceptible attack described 
idea receiver check integrity message immediately decrypting message 
better check integrity decrypting message cramer shoup show possible 
acknowledgments markus jakobsson david kristol jean francois members program committee comments suggestions 
am grateful cooperation people rsa laboratories 
hal finney telling experiments di erent ssl servers 
am grateful lyn editing 

chor goldreich schnorr 
bit security rsa rabin functions 
siam journal computing apr 

bellare desai pointcheval rogaway 
relations notions security public key encryptions schemes 
krawczyk editor advances cryptology crypto lecture notes computer science 
springer verlag 
press 

bellare rogaway 
optimal asymmetric encryption 
santis editor advances cryptology eurocrypt volume lecture notes computer science pages berlin 
springer verlag 

cramer shoup 
practical public key cryptosystem provably secure adaptive chosen ciphertext attack 
krawczyk editor advances cryptology crypto lecture notes computer science 
springer verlag 
press 


chosen signature cryptanalysis rsa mit public key cryptosystem 
technical report tr cs departement electrical engineering computer science university wisconsin milwaukee 

finney 
personal communication 

freier kocher 
ssl protocol version 
netscape mountain view ca 

goldwasser micali tong 
establish private code public network 
proc 
rd ieee symp 
foundations comp 
science pages chicago 

hastad 
security individual rsa bits 


kocher 
timing attacks implementations di hellman rsa dss systems 
koblitz editor advances cryptology crypto volume lecture notes computer science pages berlin 
springer verlag 

rsa data security pkcs rsa encryption standard 
redwood city ca nov 
version 

young 

url www com article processed lat macro package llncs style 
