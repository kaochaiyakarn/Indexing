planetp gossiping random replication support reliable peer peer content search retrieval francisco matias acuna richard martin thu nguyen cs rutgers edu technical report dcs tr department computer science rutgers university rd piscataway nj 
introduce planetp system explores construction reliable peer peer content search retrieval service randomly circulated global state peers unstructured community 
represents novel alternative approach systems focus enabling largescale name object location sophisticated distributed data structures 
show simpler approach scales peers ultimately targeting regime converges minutes modest bandwidth maintaining reliable search ranking retrieval similar internet search engine 
current search engines systems planetp require centralized directories management builds complex distributed data structure 
planetp achieves goals major components 
peers collaborate maintain local copies global membership directory compact summaries shared content randomized gossiping algorithm 
second peers implements query text ranking algorithm help users ignore irrelevant documents 
peers collaborate replicate unpopular content popular content naturally highly replicated hoarding reed solomon erasure coding increase probability successful retrievals 
peer peer systems focus sharing information large communities 
planetp supported part nsf eia eia 
july meet scaling targets millions billions users systems construct maintain large distributed data structures hash tables entire community support name object location :10.1.1.111.1818:10.1.1.140.3129:10.1.1.105.3673:10.1.1.28.5987
significant challenge systems maintaining correctness consistency global data structures peers independently unpredictably join leave system 
mapping schemes load balance peers potentially widely different resources 
propose novel alternative approach maintain global state gossiping random replication unstructured communities peers 
addition show leverage infrastructure provide powerful reliable content search retrieval engine enable model similar current internet search engines believe scale applicable information sharing communities groups researchers sharing publications doctors sharing medical analyses students sharing music videos 
success internet search engines argue content addressing natural powerful model locating information large data gnutella example current system unstructured 
systems gnutella scale flood query addition support content addressing 
current gnutella community exceeds target size users success critically depends pattern music video sharing small subset content popular highly replicated 
allows gnutella successfully locate information employing inefficient flood search algorithm 
stores 
realize approach prototype system called planetp 
show simple powerful system sharing information 
planetp simple peer agree perform periodic randomized gossiping style exchange peers collaborate correctly consistently maintain global data structure 
addition peer agree provide excess local storage replication data enable high availability 
planetp powerful maintains view similar search engine global coherent content ranked data store high degree availability depending centralized resources online presence specific peers 
address problem locating ranking documents planetp replicates global membership directory compact summary peer shared content peer randomized gossiping algorithm 
directory contains names addresses current members 
content summary index takes form bloom filter peer summarizes set terms contained documents shared peer :10.1.1.20.2080
keep directory index updated minimally consistent community members agree continually gossip changes community 
explicitly chose gossiping randomness built gossiping suited environment peers may come go freely 
gossiping abrupt leaving absence subset peers 
aid user locating relevant information implemented ranking algorithm approximates state art text ranking algorithm 
discuss algorithm focus gossiping intended approach replication reliable retrieval 
ranking algorithm affects experiments evaluate effectiveness gossiping replication 
address availability planetp attempts maintain copy shared file online times 
may relax constraint somewhat currently provides succinct goal explore proposed approach replication 
occasionally peer randomly chooses file local store estimates availability 
file may highly avail able hoarding peers tend download popular files local stores peer actively replicated file 
case peer 
peer actively replicates file variation reed solomon erasure coding compute fragments file pushes fragments peers sufficient storage 
coding brings advantages 
space required complete file replication availability 
second nodes decide actively add fragments solely number fragments available precisely fragments available 
property critical maintains unstructured approach 
remainder discuss information shared indexed planetp section 
describe gossiping algorithm evaluate performance section 
outline approach randomized replication support reliable retrieval information remaining open questions section 
data stores bloom filters peer information sharing community planetp maintains local data store shared files ii indexes text file added local data store maintains word document inverted index support content search retrieval iii summarizes inverted index peer bloom filter :10.1.1.20.2080
bloom filters give false positive lookup false negative 
set bloom filters summarizing peers inverted indexes probabilistically compute subset peers containing documents relevant query 
choose bloom filters provide number distinct benefits refer readers interested discussion 
locating relevant information mentioned planetp approach supporting reliable location relevant information replicate global membership directory bloom filter summaries peers indexes peer gossiping 
peer uses information distributed ranking algorithm independently locate retrieve information relevant particular queries 
section describe planetp gossiping algorithm 
evaluate reliability gossiping algorithm spread new information timely manner 
briefly examine bandwidth necessary support gossiping 
shown accurate view global directory distributed ranking algorithm successfully help users pinpoint documents highly relevant particular queries 
gossiping 
information replicated peer includes list peers ip addresses bloom filters currently online 
events change directory require gossiping include joining new member rejoin previously offline member change bloom filter 
currently gossip leaving temporary permanent peer may necessary improve replication approach 
planetp gossiping algorithm combination rumor anti entropy previously introduced demers partial anti entropy algorithm improved performance significantly dynamic environments 
algorithm works follows 
suppose peer learns change directory just updated bloom filter 
seconds randomly chooses target peer believed currently line attempts tell change 
heard change records new information attempts spread rumor doing 
contacts peers row knows change stops spreading rumor 
process leave residual set peers hear rumor dies peer performs anti entropy operation say tenth operation anti entropy operation currently new information 
anti entropy message send summary entire directory gets summary parses see asks updated information 
asks needed information 
observe dynamic environment rumors may arrive peers leaving coming time required spread particular rumor highly variable 
high arrival rate new rumors forces rate anti entropy minimum tenth round 
peer unlucky contact peer missing particular rumor may tens rounds rumor reaches 
fix decided extend round partial anti entropy exchange works follows 
sends rumor message piggybacks ids small number rumors learned longer actively spreading check see missing learned pull information partial anti entropy requires extra message case know 
amount data piggybacked message small order tens bytes 
inclusion partial anti entropy step significantly reduced variation time required inform entire community particular new piece information requiring bandwidth performed anti entropy 
planetp currently uses base gossiping interval seconds accommodate peers relatively slow communication links 
planetp dynamically adjusts base interval reduce bandwidth usage system reached stable configuration 
refer reader details dynamic adjustment 
dynamically adapting gossiping interval advantages 
need define termination condition probabilistic nature algorithm 
second global consistency achieved bandwidth negligible short time 
performance 
turn evaluating reliability gossiping spread new information community 
critical goal locating relevant information reliable accurate manner 
example peer learn new content shared peer changes bloom filter reach query locate new document highly relevant query 
evaluate planetp gossiping performance simulator validated pro perc lan dsl mix mix mix convergence time gossiping seconds dynamic community members 
lan represents community peers connected mbps links 
dsl represents community peers connected kbps links 
mix represents community peers connected mixture link speeds 
measurements gnutella napster communities reported saroiu create mixture follows kbps kbps mbps mbps mbps links 
implementation 
measurements prototype parameterize simulator 
refer reader simulation parameters bulk experiments results 
results experiment 
particular study gossiping performs dynamic community re joining leaving peers 
members online time 
members online average minutes offline average minutes 
online offline times generated poisson process 
time peer rejoins online community new keys 
peer starts offline rejoins community retrieve new keys member currently online 
parameters roughly measurements reported saroiu number new keys shared occasionally meant representative real communities 
plots cumulative percentage events convergence time 
observe sufficient bandwidth convergence time tight seconds 
mix community convergence time significantly worse 
degradation performance due requirement offline peer obtain new keys currently online peer models fact peer offline long time 
translates downloading mb bloom filters takes long time modem speed 
degradation points necessary adaptations implement way new users acquire bloom filters slowly time want accommodate modem connections alter gossiping algorithm peers fast connections hurt peers slow connections 
designed implemented second change 
mix curves give convergence time joins rejoins fast peers fast connection speeds kb convergence condition fast peers need learn event 
mix gives convergence time joins rejoins slow peers convergence condition 
observe bandwidth aware gossiping algorithm allow fast peers learn new events quite efficiently 
time harm slow peers fact slow anyway bandwidth limitations 
summary 
results results number additional simulation experiments suggest gossiping works reliably range peers 
observe event propagate successfully community 
process evaluating gossiping scale peers 
maintaining availability section describe approach random replication probabilistically ensures having copy document online 
peer advertises amount storage called replication store willing devote storing extra copies documents 
typically information current state replication store piggybacked rumors 
periodically seconds peer randomly selects file data store replication store 
peer checks availability file set bloom filters assume file names inserted bloom filters terms contained files 
availability sufficient 
availability deemed insufficient actively replicates file 
specifically replicating peer fragments file variation reed solomon erasure coding fragments created required reconstruct file 
pushes fragments peers chosen hints available space peers replication store 
peer receives replication request room replication store saves copy forwarded document fragments 
insufficient room rejects replication request fragments room new fragments 
peer fragments pushed just drops replication request 
time believe replication algorithm push popular important documents subset peers online time 
peers online different times get copies order maintain continuity 
replication store large compared set documents shared approach 
question necessary ratio replication store size document set necessary distribution replication store peers different join leave behaviors 
intend explore answers questions months 
evaluating files availability 
assume files naturally replicated peers interested accessing file offline original owner offline 
call copies 
planetp actively replicates files highly 
exploring scenarios evaluating file availability 
assumes slowly changing community users 
user advertises average online offline times time started current online session 
idea minimize probability having replicas fragments file offline time 
availability estimated equation file estimated availability average probability peer offline number copies number existing fragments number fragments required reconstruct keep equation simple simply average probability peers online offline 
better accuracy real system may need account peers widely differing behaviors complicating equation significantly 
modify algorithm account fact offline peers may leave community come back 
second pessimistic approach estimate availability assumes online nodes keep file available 
scheme planetp tries minimize chances having online nodes store file going offline time 
availability file estimated equation replaced addition note scenario having accurate information nodes currently online critical 
may extend planetp gossip leave events re join events 
choosing replication nodes 
peers keep space hints track amount available storage peers 
fragments distributed policy select target node 
space hints obtained storing fragments nodes node denies replication request 
hints available targets selected random 
fragmentation 
variation reed solomon rs erasure coding fragmenting file replication 
standard application code rs creates fragments distinct fragments needed reconstruct file 
disadvantage directly applying coding scheme enhance availability file peer know exactly fragments currently missing 
reed solomon code hard parameter allows useful extension 
peer determines needs increase number fragments file increase availability simply generates additional random fragments 
fundamental idea rs poly nomial degree galois field uniquely defined points field 
order create erasure code blocks file need addition polynomial want create extra fragments reconstruct polynomial tuples form typical rs implementation just fixed code 
extension consists picking points randomly base pick chance having duplicates fragments small needed 
open questions 
approach promising number open questions remain 
replace ment algorithm peers maintain replication store 
need actively garbage collect replication store 
system stable 
need sort backing component peers start thrash replication store 
fragmented replication scheme fit ranking algorithm complete copy file available online 
related systems proposed imposing different structures communities provide scalable name object location 
unstructured approach uses randomized gossiping 
scalable approach require maintenance global structures robust nodes signing abruptly 
focus content search retrieval object location 
focus fits gossiping infrastructure individual nodes shoulder entire burden publishing large numbers keywords entire community helps gossiping 
systems oceanstore erasure codes improve availability 
contrast planetp oceanstore rely oceanstore service provider regenerate missing fragment distributed repair algorithm needs 
maintain planetp unstructured approach extend basic reed solomon erasure code allow peers increase availability files ing number random fragments 
steganographic storage system 
main focus concealing existence files address problem placing fragments randomly tapestry network 
simulations show achieve availability need times disk space amount store 
planetp concerned hiding files existence believe able improve ratio 
going computing potentially powerful model information sharing ad hoc communities users 
communities grow size reliably locating information distributed community challenging especially peers join leave online community uncontrolled unpredictable manner 
approaches taken planetp provide reliable content search retrieval engine environment 
planetp break problem phases reliably locating peers may contain information relevant query ensuring copy document available online peer support reliable retrieval relevant information 
approach uses gossiping maintain copy global directory summaries peers indexes peer information support search algorithm employs text ranking scheme find relevant information 
worked gossiping algorithm detail preliminary simulated results show algorithm reliably diffuse information community peer local picture global community date 
proposed approach address second phase explore randomized replication approach heart different gossiping 
just formulated approach process designing algorithm exploring design space 
believe approach need validate belief 
concrete design implementation gossiping random replication intend extend current simulator simulate searches live community measure efficacy infrastructure deliver accurate search retrieval capabilities 
bloom :10.1.1.20.2080
space time trade offs hash coding allowable errors 
communications acm 
acuna nguyen 
text content search retrieval ad hoc communities 
proceedings international workshop peer peer computing located networking may 
acuna martin nguyen 
planetp infrastructure support information sharing 
technical report dcs tr department computer science rutgers university nov 
acuna martin nguyen 
planetp gossiping build content addressable information sharing systems 
technical report dcs tr department computer science rutgers university may 
demers greene hauser irish larson shenker sturgis swinehart terry 
epidemic algorithms replicated database maintenance 
proceedings sixth annual acm symposium principles distributed computing pages 
gnutella 
gnutella wego com 

gnutella rescue 
fast napster friends 
gnutella wego com sept 
kubiatowicz bindel chen eaton geels gummadi rhea weatherspoon weimer wells zhao 
oceanstore architecture global scale persistent storage 
proceedings acm asplos 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proceedings acm sigcomm conference 
rizzo 
effective erasure codes reliable computer communication protocols 
acm computer communication review apr 
roscoe hand 
transaction charging peer peer steganographic storage system 
proceedings international workshop peer peer computing located networking may 
rowstron druschel 
pastry scalable distributed object location routing largescale peer peer systems 
proceedings ifip acm international conference distributed systems platforms middleware 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proceedings acm sigcomm conference 
zhao kubiatowicz joseph 
tapestry infrastructure fault tolerant wide area location routing 
technical report ucb csd university california berkeley 
