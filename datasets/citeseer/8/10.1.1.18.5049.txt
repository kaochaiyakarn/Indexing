infranet circumventing web censorship surveillance nick feamster balazinska greg hari balakrishnan david karger mit laboratory computer science gch hari lcs mit edu nms lcs mit edu projects infranet increasing number countries companies routinely block monitor access parts internet 
counteract measures propose infranet system enables clients retrieve sensitive content cooperating web servers distributed global internet 
infranet servers provide clients access censored sites continuing host normal content 
infranet uses tunnel protocol provides covert communication channel clients servers modulated standard transactions resemble innocuous web browsing 
upstream direction infranet clients send covert messages infranet servers associating meaning sequence requests 
downstream direction infranet servers return content hiding censored data images steganographic techniques 
describe design prototype implementation security properties performance infranet 
security analysis shows infranet successfully circumvent sophisticated censoring techniques 
world wide web prime facilitator free speech people rely voice views gain access information traditional publishing venues may publish 
past years countries political regimes corporations attempted monitor restrict access portions web clients networks control 
attempts successful web free flowing medium information exchange severely compromised 
countries filter internet content borders fearful alternate political views external influences 
example china forbids access news sites critical country domestic policies 
arabia currently soliciting content filter vendors help block access sites government deems inappropriate political religious reasons 
germany related material 
australia laws ban pornography 
addition internet censorship repeatedly threatens cross political boundaries 
example supreme court rejected france request censor related material yahoo site 
censorship surveillance extend free enterprise companies reportedly blocking access sites related conducting business 
addition blocking sites companies routinely monitor employees web surfing habits 
focuses challenging technical problems circumventing web censorship largely ignores related political legal policy issues 
particular investigate leverage web communication accessible servers order retrieve censored content simultaneously maintaining plausible deniability receiving content 
develop covert communication tunnel securely hides exchange censored content normal innocuous web transactions 
system called infranet consists requesters responders communicating covert tunnel 
requester running user computer uses tunnel request censored content 
receiving request responder standard public web server running infranet software retrieves sought content web returns requester tunnel 
covert tunnel protocol infranet requester responder difficult detect block 
specifically censor able detect web server infranet responder client terms requester responder traditional client server avoid confusion web clients browsers web servers 
considered number terms proxy gateway front rejected similar reasons 
requester 
transactions ought arouse suspicion 
infranet tunnel protocol uses novel techniques covert upstream communication 
modulates covert messages standard requests content negotiated function maps urls message fragments compose requests censored content 
downstream communication tunnel protocol leverages existing data hiding techniques steganography 
steganography provides little defense certain attacks confident ideas conjunction data hiding techniques 
main challenge design tunnel protocol ensuring covertness providing level performance suitable interactive browsing 
furthermore tunnel protocol defend censor capable passive attacks logging transactions packets active attacks modify messages transactions impersonation attacks adversary legitimate infranet requester responder 
security analysis indicates infranet successfully circumvent sophisticated censoring techniques including various active passive attacks 
system handles threats achieving reasonable performance 
achieved advantage asymmetric bandwidth requirements web transactions require significantly upstream bandwidth downstream bandwidth 
assess feasibility design implemented infranet prototype conducted series tests client side web traces evaluate performance system 
experimental evaluation shows infranet provides acceptable bandwidth covert web browsing 
range mapping algorithm upstream communication allows requester transmit hidden request number visible requests proportional binary entropy hidden request distribution 
typical web sites running infranet responders find requester range mapping modulate requests hidden content visible requests fewer hidden requests visible requests fewer 
typical web images implementation downstream hiding transmits approximately kb hidden data visible response 
related existing systems seek circumvent censorship surveillance internet traffic 
anonymizer com provides anonymous web sessions requiring users web requests proxy information user ip address 
provides product encrypts requests protect user privacy zero knowledge provides similar product 
squid caching web proxy anonymizing proxy 
primary shortcoming schemes known proxy subject blocked censor 
additionally encrypted tunnel user anonymizing proxy port forwarding ssh engenders suspicion 
censoring organizations actively discovering blocking anonymizing proxies proposed product called triangle boy peer peer application volunteers run personal machines forwards clients web requests anonymizing proxy 
formed alliance voice america mission enable chinese internet users gain access censored sites 
triangle boy drawbacks 
encrypted connection machine running triangle boy suspicious trivially blocked ssl handshaking unencrypted 
second dependence encrypted channel confidentiality susceptible traffic analysis web site fingerprinting expose web sites user requests request encrypted 
third vulnerable attacks allow adversary discover identity user web site visited user 
attempts circumvent censoring firewalls sending ssl encrypted requests censored content third party reliance ssl susceptible traffic analysis blocking attacks 
various systems attempted protect anonymity users publish retrieve censored content 
crowds users join large geographically diverse group members cooperate issuing requests making difficult associate requests originating user 
onion routing separates requests users 
publius free haven focus protecting anonymity publishers censored content content 
freenet provides anonymous content storage retrieval 
infranet aims overcome censorship surveillance provides plausible deniability users 
addition establishing secure channel users infranet responders system creates covert channel communication channel transmits information manner envisioned original design 
contrast techniques attempt overcome censorship confidential channel ssl trivial detect block approach significantly harder detect block 
effective blocking scheme circumventing censorship covert secure 
infranet requester infranet responder user web browser origin web server communication tunnel censor visible req hidden msg standard visible resp hidden content visible resp hidden content visible req hidden msg user machine 
infranet system architecture 
system architecture section presents infranet design considerations system architecture gives overview system communication protocols 
terminology shows system architecture infranet introduces relevant terminology 
users surf web content usual web browser 
retrieve censored content browser uses software entity runs host called infranet requester local proxy 
infranet requester knows infranet responders web servers global internet implement additional infranet functionality 
idea web browser request censored content infranet requester turn sends message infranet responder 
responder retrieves content appropriate origin web server returns requester delivers requested content browser 
requester responder communicate covert tunnel 
technically infranet involves distinct functions issuing hidden request decoding hidden request serving requested content 
describe system responder performs functions 
describe design enhancement section untrusted forwarder forward hidden requests serve hidden content making difficult censor block access system 
censor shown wide range capabilities 
minimum censor block specific ip addresses censored sites suspected infranet responders 
broadly censor capability analyze logs observed web traffic modify traffic 
long term success infranet depends widespread deployment infranet responders internet 
way achieving bundle responder software standard web server software apache 
hopefully significant number people run infranet responders due altruism believe free speech 
design goals designed infranet meet number goals 
ordered priority goals 
deniability infranet requester 
computationally intractable confirm individual intentionally downloading information infranet determine information 

statistical deniability requester 
impossible confirm client infranet adversary notice statistical anomalies browsing patterns suggest client infranet 
ideally infranet user browsing patterns statistically indistinguishable normal web users 

responder covertness 
adversary block known infranet responders difficult detect web server running infranet simply watching behavior 
course requester server know server infranet responder knowledge arise possession secret remains unavailable censor 
censor chooses block access responder watch clients connecting suspicious activities deniability compromised 
responder assume clients infranet requesters 
ensures infranet requesters distinguished innocent users responder behavior 

communication robustness 
infranet channel robust presence censorship activities designed interfere infranet communication 
note impossible infinitely robust censor blocks internet access successfully prevent infranet communication 
assume censor permits communication non censored sites 
technique prevents site infranet responder site fundamentally unusable non infranet clients 
example scheme robust consider ssl infranet channel 
provides full requester responder deniability covertness web servers run ssl innocent reasons quite plausible censor block ssl access internet vast amounts information remain accessible non encrypted connections 
censor block ssl infranet completely restricting internet access 
similar vein censor concluded particular site infranet responder ensure option blocking infranet access block access suspected site 
hopefully censor reluctant block sites allow infranet responders remain accessible 

performance 
seek maximize performance infranet communication subject objectives 
overview requester able join infranet suspicion 
join infranet user obtain infranet requester software plus ip address public key infranet responder 
users able obtain infranet requester software revealing doing 
information infranet responders available legitimate users fall hands adversary configure simple ip filtering proxy 
way distribute software band cd rom floppy disk 
users share copies software learn infranet responders directly 
design implementation tunnel protocol infranet requester responder critical determinant infranet viability 
rest section gives overview protocol section describes protocol detail 
define tunnel protocol requester responder terms abstraction layers 
message exchange 
layer abstraction specifies high level notions information requester responder communicate 

symbol construction 
communication system specify underlying alphabet symbols transmitted 
layer abstraction specifies alphabets directions communication 
primary design constraint covertness 

modulation 
lowest layer abstraction specifies mapping symbols alphabet message fragments 
main design goal reasonable communication bandwidth compromising covertness 
infranet requester infranet responder msg cover secret msg cover secret censor 
top layer abstraction communication tunnel 
top layer abstraction exchange messages requester responder 
requester sends requests content responder hidden visible traffic 
responder answers requested content hidden visible responses obtaining origin server 
shown messages hidden hiding function msg cover secret msg message hidden cover visible traffic medium msg hidden secret ensures requester responder reveal msg 
designing hiding function involves defining set symbols map message fragments 
set symbols transmit message fragments called alphabet 
ordered sequence fragments forms message ordered sequence symbols hiding function represent message 
upstream downstream communication require set symbols transmitting messages 
lowest abstraction layer modulation specifies mapping message fragments symbols 
discuss ways modulate messages upstream downstream directions sections 
upstream communication design cover medium upstream communication cover sequences requests note link selected page contains information communication 
alphabet set urls responder web site 
possible alphabets exist various fields tcp headers 
choose set urls alphabet difficult transmission messages detected immune malicious field modifications censor provides reasonable bandwidth 
careful metering order timing cover communication difficult censor distinguish infranet related traffic regular web browsing 
upstream modulation corresponds infranet requester infranet responder request response index html epk resp skey req stream init init resp stream tunnel resp stream skey hidden req req stream tunnel content resp stream skey set user id initialize modulation function exchange key update modulation function transmit request transmit response joint fsm censor tunnel setup steady state 
messages exchanged tunnel setup steady state communication phases 
message exchanges driven common state machine shown left 
optional initialize modulation function state responder sends initial modulation function init requester 
mapping sequence url retrievals visible censor surreptitious request censored web object 
downstream communication cover medium downstream direction cover provided jpeg images response streams 
responder uses high frequency components images alphabet sending messages requester 
technique provides bandwidth hiding properties 
downstream modulation consists mapping sequence high frequency image components censored web object html mime encoded content 
tunnel protocol infranet tunnel protocol divided main components tunnel setup upstream communication downstream communication 
tunnel setup allows parties agree communication parameters 
upstream communication consists message transmissions requester responder 
downstream communication consists message transmissions opposite direction 
requester responder operate finite state machine shown left column 
states constitute tunnel setup 
compose steady state communication requester transmits hidden urls responder answers corresponding content 
explore various design alternatives describe mechanisms part protocol 
tunnel setup infranet requester responder establish tunnel agreeing parameters hiding functions requester responder exchange parameters securely ensuring confidentiality message exchanges 
shows messages involved establishing tunnel 
communication infranet responder begins request html page served responder 
request initiates tunnel setup protocol 
set user id requester sends implicit hello message responder requesting html document index html 
identify subsequent message transmissions requester responder creates unique user id requester 
user id explicitly set web cookie 
greater defense tampering user id set implicitly 
explained responder modifies visible urls web site requester 
modification sufficient identify requesters urls requested 

exchange key ensure confidentiality requester uses responder specific modulation function init send shared secret skey encrypted public key responder 
responder recovers skey private key 

update modulation function responder selects requester specific modulation function tunnel responder hides function response stream shared secret skey 
requester recovers tunnel response stream skey 
tunnel setup consists exchange secrets secret key skey secret modulation function tunnel skey ensures requester capable decoding messages hidden response streams 
tunnel allows requester hide messages request streams 
secrecy tunnel provides confidentiality upstream messages ensuring hard censor uncover surreptitious requests requester discovered 
order requester initiate transmission skey encrypted infranet responder public key requester way sending message responder 
transmission done initial modulation function init initial function may wellknown function 
alternatively responder may send initial modulation function init requester 
protect responder covertness initial function hidden responder specific key 
requester may learn ip address public key responder 
method requires additional initialize modulation function state advantage allowing responders periodically change modulation schemes suffers disadvantage requiring message exchanges establish tunnel 
tunnel established requester responder enter transmit request state 
state requester uses tunnel hide request content series requests sent infranet responder 
covert request completes requester responder enter transmit response state point responder fetches requested content hides response stream skey 
transmission complete requester responder re enter transmit request state 
upstream communication fundamental level requester sends message upstream sending responder visible request contains additional hidden information 
shows decomposition upstream hiding function msg request stream msg transmitted information request hidden content request stream cover medium modulation function hides message visible request stream 
specific mapping message fragments visible requests depends parameter send hidden message requester divides multiple fragments translates visible request 
responder applies requester requests extract message fragments recover hidden message 
possible choices upstream mod infranet requester infranet responder request url response censor msg frag url url msg frag request url response msg frag url url msg frag 

sequence requests responses involved single upstream message transmission 
parties know secret modulation function ulation function option presents different design tradeoff covertness upstream bandwidth 
modulation functions provide deniability infranet requester certain types basic mapping schemes implemented correctly 
describe examples sections 
provide statistical deniability requests follow typical browsing patterns closely 
achieve propose range mapping scheme section 
implicit mapping simplest modulates bit hidden message separate request 
approach provides extremely limited bandwidth offers high level covertness page requester may click half links specify fragment 
example specify numbered link page corresponds odd numbered link corresponds 
generalization scheme uses function mod specified rth link requested page equal total number links page 
mechanism may covert sends lg bits information visible request 
dictionary schemes infranet responder send requester static dynamic codebook maps visible requests mes sage fragments 
static mapping visible requests urls simple implement resulting visible request streams may result strange browsing behavior 
create dynamic mapping responder uses images embedded requested page send updates modulation function upstream transmission progresses 
responder may log hidden requests provide probable completions ongoing message transmission 
transmission bit hidden message dictionary scheme dictionary entry contains bits requires visible requests 
structure dictionary determines covertness bandwidth modulated request 
dictionary represented directed graph structure infranet responder web site 
preserve confidentiality event communication tunnel revealed dictionary known requester responder 
range mapping requester responder communicate channel far greater bandwidth responder requester vice versa 
responder serves infranet users requests hidden content maintain frequency distribution hidden messages requester wants send message url distribution communication model essentially asymmetric communication model adler maggs 
leverage produce iterative modulation function range mapping distribution lexicographically ordered urls round responder sends requester set tuples string domain visible request communicates called split string 
specifies range strings lexicographically smaller lexicographically larger preceding split string client determines lexicographic interval contains hidden message responds split string identifies interval 
focus adler maggs protocol enable communication asymmetric channel concerned maintaining covertness statistical deniability 
particular aim ensure step probability infranet requester selects particular link equal probability innocent browser selects link 
include link traversal probability information parameter algorithm choosing split strings 
extract probabilities server access log 
prior communicating requester responder computes information procedure modulate url select smallest split string ss lexicographically larger url string max fu ss url url request page corresponding selected string fsr ss string max send 
pseudocode modulation function range mapping 
cumulative frequency distribution hidden requests link traversal probabilities 
specifically set probabilities ij request page page pages set pages responder web site 
round set contains tuples number pages current number possibilities requester visible request current page current tuples specify consecutive probability intervals size probability interval 
proportional conditional probability current 
assigning probability intervals hop probabilities requests web site range mapping provides statistical deniability requester making requester take path site taken innocuous web client 
sum intervals equal size probability interval previous iteration iteration 
pseudocode modulation function shown 
iteration requester receives selects split string specifies range message url lies 
sends corresponding visible request shows pseudocode demodulation function 
responder interprets request current range specification bounded corresponding split string current split string precedes current lexicographically 
new range responder updates bounds range string min string max lines generates new set range shown lines 
requester scheme modulate hidden message url domain re range mapping model hop conditional probabilities 
noted approach provides appropriate distribution link probabilities step guaranteed properly distribute complex quantities probability entire sequence link choices 
procedure current string min string max range reaches zero return string string min string max return string min compute total range iteration string max string min initialize lower bound sub interval vmin string min openly served pages set pages web site set upper bound sub interval proportional probability requesting page 
current vmin extract string boundary sub interval split string sub interval save pair formed split string page prepare compute subsequent sub interval vmin send set pairs requester send receive new request receive current update interval selected split string string max fss sr current string min fss ss string max reduce interval return current string min string max 
pseudocode demodulation function range mapping 
responder perform range mapping range consecutive urls prefix urls share prefix hidden message 
point requester responder may continue range mapping algorithm set strings prefix 
requester message may arbitrary length exist explicit way search 
solution add tuple indicates requester finished sending request 
share common prefix equal hidden message requester transmits range mapping similar arithmetic coding divides size interval space binary strings probability symbol transmitted 
binary entropy expected number string min string max lexicographically ordered strings min max 
current current 
iteration range mapping demodulation function 
initial interval string min string max divided sub intervals probabilities requesting page responder web site current page current responder generates correspond sub interval boundaries returns requester 
bits required modulate message arithmetic coding binary string requires transmissions assuming bit symbol 
model page links 
visible request transmits lg bits expected number requests required modulate hidden request lg 
downstream communication shows decomposition downstream hiding function requester receives hidden message responder making series requests images 
responder applies requested images sends resulting images requester 
requester apply inverse modulation function recover hidden message fragment 
ensure innocuous browsing patterns requester request html page subsequently request embedded images page opposed making requests images blue 
modulation function utility modifies high frequency components image message transmitted secret key 
modulation takes place stages finding redundant bits image significant bits dct coefficients case jpeg embedding message subset redundant bits 
stage straightforward 
second stage uses infranet requester infranet responder request image response image censor msg frag image skey image image skey msg frag request image response image 
msg frag image skey image image skey msg frag 
downstream communication consists sequence requests responses 
responder hides messages sends requester responses 
efficient downstream communication mechanism uses steganography hide downstream messages requested images 
shared secret skey seed pseudorandom number generator determines subset bits contain message 
knowing secret key adversary determine bits hold information 
previous describes process greater detail 
steganography designed hide message cover image adversary access original cover detect presence hidden message 
web server typically serves content different users user multiple times adversary detect steganography simply noticing requested url corresponds different content time requested 
solution problem require responder serve filename twice files embed hidden information 
reason serves excellent mode transmitting hidden messages downstream filenames images serves regularly change small amounts 
discuss problem detail section 
protect infranet requesters infranet responders embed content image regardless web client infranet requester 
possible modulation functions hiding downstream messages 
possibility embed messages response headers html pages 
provide downstream bandwidth necessary deliver messages requester reasonable amount time 
alternative embed message fragments images hidden watermarks 
watermarking steganography conceal hidden content additionally watermarks robust modification adversary 
past investigated watermarking techniques compressed video 
feasible downstream modulation function downloaded streaming audio video clips hide messages 
note downstream modulation scheme fundamentally depend steganography 
fact may sense data hiding technique adversary modify remove affecting visibly returned content 
example responder uses low order bits brightness values image embed data censor difficulty removing covert data affecting visible characteristics requested image 
assume censor want affect experience normal users type downstream communication appropriate 
security analysis section discuss infranet ability handle variety attacks determined adversarial censor 
concerned maintaining deniability covertness face attacks making hard censor detect requesters responders 
addition infranet provide confidentiality censor discovers infranet requester responder recover messages exchanged 
adversary access traffic passing network global internet especially visible requests responses 
furthermore adversary actively modify traffic passes long modifications affect correctness transactions 
discovery attacks censor attempt discover infranet requesters responders joining infranet requester responder 
join infranet requester participant discover ip address public key responder 
client joins information exchanged responder specific requester 
joining network requester censor gains additional information obtained outof band 
alternatively censor set infranet responder hope unlucky requesters contact 
determining web clients visible requests sensible infranet messages cen requests responses target suspicious request headers suspicious response headers content target request patterns content patterns url different image multiple targets link requests infranet requesters common patterns responses commonly requested forbidden urls table 
taxonomy passive attacks infranet 
censor ability target suspected users attacks involve sophisticated analysis visible traffic 
sor distinguish innocent web clients infranet requesters 
currently rely requester trusting legitimacy responder contacts 
section describes possible defense attack allowing untrusted forwarders 
censor mount passive attack attempt discover infranet communication tunnel 
type attack requires careful traffic analysis passive attacks infranet difficult mount active attacks filtering tampering visible traffic 
types attacks adversary perform depend amount state targeting users 
table shows taxonomy passive attacks censor perform infranet 
potential attacks serious adversary targets users 
weak attacks involve detecting anomalies headers content 
stronger attacks require complex analysis correlation users browsing patterns 
censor observes traffic passes targeting users attempt uncover infranet tunnel detecting suspicious request response headers request header strange date value garbage response header 
infranet defends attacks avoiding suspicious modifications headers hiding downstream content steganography 
additionally requiring infranet responders serve unique urls content changes infranet guards discovery attack responder censor notices slightly different content served url time requested 
censor targets suspected infranet requester mount stronger attacks 
censor observe web user browsing patterns determine patterns look suspicious 
modulation function determines browsing pattern function selects subsequent requests structure responder web site help reflect actual user behavior 
pages rarely requested requested sequence 
best base modulation functions information real access logs 
generating visible requests automatically requires part user alternative 
particularly cautious user fear request sequence generated system look strange arouse suspicion 
overcome system give user certain degree control visible requests transmitted 
example requester confirm url user sending 
user finds url strange force requester send different url communicates message fragment 
overrides introduce noise requester sequence 
requester encode message error correcting code allows noise 
solution ensure multiple urls map message fragment requester wants send give user choice specific visible url request 
conjecture sufficient redundancy user frequently able find plausible url sends desired message fragment 
targeting multiple users censor may learn infranet users result discovering infranet user 
alternatively censor infranet requester compare behavior suspected users 
defend types attacks requester specific shared secrets 
disruptive attacks traffic infranet requester responder passes censor censor disrupt infranet tunnels performing active attacks traffic filtering transaction tampering session tampering 
filtering censor may block access various parts internet ip address prefix block dns name port number 
additionally block access content filtering web pages contain certain keywords 
instance arabia reportedly trying acquire filtering software 
infranet success filtering attacks depends pervasiveness infranet responders web 
infranet responders discovered band censor rapidly learn infranet responders crawling web automated script 
censor conceivably learn responders band systematically block access machines outof band mechanism difficult censor block access infranet responders 
wider deployment responders web servers world infranet succeed 
note adversary may filter traffic content port number relatively easy adversary block ssl filtering ssl handshake messages 
infranet provides far better defense filtering system simply relies ssl 
transaction tampering censor may attempt disrupt infranet tunnel communication modifying requests responses ways affect protocol conformance 
example adversary may change fields request response headers changing value date field reorder fields headers remove add fields 
infranet resistant attacks tunnel protocol rely modifications header 
described section infranet requester unique user identifier request order recognized multiple transactions 
requester send user id web cookie request 
censor removes cookies suggest maintaining client state embedding user id token derivative user id url requested client 
course preserve requester deniability responder rewrite embedded links include client token 
censor may modify returned content 
example insert remove embedded links requested web page flip bits requested images 
link insertion deletion affect tunnel communications codebook client sends messages upstream codebook 
attacks image content disrupt correct infranet communication 
traditional robust watermarking techniques defend attacks 
infranet detects blocks disruptions embedding name served url response 
session tampering adversary attempt disrupt tunnel communication interfering sequences requests 
censor serve requester visible request cache forwarding request infranet responder 
prevent attack infranet requester ensure requests served cache 
way request unique urls 
consider requirement fairly reasonable sites serve dynamic content pages constantly change urls 
option pragma cache directive censoring proxy ignore 
alternatively censor insert remove reorder requests responses 
censor alters request patterns infranet responder see errors received message 
infranet responders include name served url response stream enabling requester detect session corruption restart transmission 
case range mapping upstream transmission errors reflected split strings returned responder 
requester defend attacks error correction techniques recover insertion deletion transposition bits 
implementation implementation infranet consists components infranet requester infranet responder 
requester functions web proxy responsible modulating web browser request hidden content sequence visible requests infranet responder 
responder functions web server extension responsible requester messages delivering requested content 
requester responder utilize common library implements common functionality modulation hiding cryptography 
section discuss implementation infranet requester responder common functionality implemented 
requester implemented infranet requester asynchronous web proxy lines 
asynchronous event driven functionality 
requester sends visible requests infranet responder initial url responder responder public key optionally initial key 
requester queues requests user browser modulates sequentially 
requester fragment offset message length version type empty fragment length 
responder header format 
knows responder service requests parallel multiple responders 
implementation visible requests requester generated entirely automatically 
discussed section allow user participate link selection provide increased covertness 
responder implemented infranet responder apache module mod infranet lines integrated apache running linux 
apache request cycle consists phases including uri translation content handling authorization 
mod infranet module augments content handler phase apache request loop 
responder processes requests normally interprets modulated hidden messages 
infranet responder maintain state requester multiple transactions 
current implementation responder uses web cookies maintain client state mechanism simple implement plan implement url rewriting mechanism outlined section stronger defense passive discovery attacks 
responder uses cookie contains unique identifier associate requests particular requester 
requester responder maintains requester state including fsm state requester modulation function requester shared secret skey message fragments pending messages 
shows header responder prepends message fragment 
version bit field specifies version infranet tunnel protocol responder running 
type specifies type message payload corresponds modulation function update requested hidden content 
bit field indicates requested content payload compressed gzip case html files images 
fragment length refers length message fragment payload bytes fragment offset specifies offset bytes fragment placed reassembly message 
message length specifies total length message bytes 
upstream bandwidth scarce transmitting header create recognizable modulation patterns requester prepend header messages 
steganography compression receiving request responder determines embed hidden content response 
currently mod infranet embeds data jpeg images 
responder determines capable hiding information requested data uses embed hidden information skey 
reduce amount data responder send requester responder compresses html files gzip embedding images 
cryptography infranet requester generates bit shared secret skey dev random 
skey encrypted rsa public key encryption implementation openssl library 
ciphertext bytes imposes large communication overhead 
ciphertext function length requester public key difficult ciphertext shorter 
option ameliorate implementation elliptic curve cryptography 
performance evaluation section examine infranet performance 
evaluate overhead tunnel setup operation performance upstream downstream communication 
estimate overhead imposed mod infranet normal web server operations 
performance tests run apache mod infranet ghz pentium gb ram 
performance tests ran infranet requester perl script emulates user browser machine 
tunnel setup tunnel setup consists operations upstream transmission skey encrypted responder public key downstream transmission tunnel implementation skey bits long corresponding ciphertext bytes proportional length responder public key 
transmission tunnel equivalent single document transmission 
transmission initial modulation function requires additional downstream transmission 
number requests transmit hidden url ignoring traversal probabilities mean traversal probabilities mean 
number visible requests required modulate hidden urls link traversal probabilities range mapping assuming links page 
expected number visible requests required modulate message independent link traversal probabilities 
upstream communication important measure upstream communication performance requests required modulate typical message 
focus evaluation range mapping scheme described section 
evaluated performance range mapping web proxy trace containing unique urls palo alto ircache proxy january 
weight urls popularity popular urls account roughly visible traffic 
significant modulating popular urls requires small number visible requests 
requester achieve statistical deniability patterning sequences requests innocuous web clients 
described section done assigning split string ranges pairwise link traversal probabilities evaluate effect distribution modulated requests ignoring assuming outgoing links page 
shows assigning ranges link traversal probabilities affect expected number visible requests required modulate hidden request 
follows directly properties arithmetic codes 
cases half hidden messages traces available national science foundation ncr ncr national laboratory applied network research 
number possible requests page th percentile th percentile 
median th percentile number requests modulate message small small numbers outgoing links page 
required visible requests requests needed message 
traversal probabilities determine size ranges provides statistical deniability hurting performance 
setting link traversal probabilities evaluated effect number links page upstream communication performance 
shows messages modulated visible requests fewer small 
trace experiments binary entropy frequency distribution requested urls bits 
expected number requests required transmit url lg 
empirical results shown agree analytical result 
evaluate performance range mapping real sites modulated hidden requests varying browsing patterns observed real web site 
analyzed web access logs nms lcs 
mit edu pdos lcs mit edu generate values page sites 
observed number visible requests required transmit messages results experiment shown table 
number requests required modulate hidden message slightly higher varies real web site 
site median nms lcs mit edu pdos lcs mit edu size requested data bytes 
number requests required retrieve data various sizes 
visible request contains approximately kb hidden message 
downstream communication shows number requests infranet requester retrieve hidden messages various sizes 
visible response contains approximately kb hidden message 
amount data embedded visible response depends factors compression ratio message amount data embedded single image 
depending requested document images embed hidden response number visible requests required send amount hidden data may vary 
main operations involved content preparation 
ran microbenchmark attempt determine rate embed data images 
measurements indicate embeds data image rate kb sec time takes embed data proportional size cover image 
ran microbenchmarks gzip determine computational requirements compression ratios achieves typical html files 
fetched index 
html page popular web sites selected nielsen ircache median file size files kb 
gzip compressed html files original size worst case gzip compressed html file original size 
cases compression html file took milliseconds 
percentage requests infranet infranet 
overhead running infranet web server performance 
disk bound workloads infranet responder performs comparably unmodified apache server 
server overhead ensure plausible deniability infranet requesters infranet responders embed random requested data content serve 
responder distinction infranet requesters normal web clients infranet enabled web server incurs additional overhead serving data clients 
determine performance implications running infranet responder submitted identical sequence requests infranet enabled apache server ordinary apache server 
request trace contains sequence visible requests generated infranet requester modulate requests set popular web sites 
shows additional overhead running infranet 
server embed image data regardless serving infranet request running infranet incurs noticeable performance penalty 
requests served infranet responder achieved kb requests transferred mb 
contrast requests normal apache server delivered mb greater 
disk bound workloads infranet responder performs comparably regular apache server 
bandwidth achieved infranet drops achieved apache server running infranet apache infranet requests 
current implementation optimized believe reduce overhead 
way pre fetch cache commonly requested censored content 
overhead running infranet requester infranet forwarder infranet responder censor url url hidden content hidden content uid link number uid encrypted content 
improved architecture separates forwarding decoding hidden messages directions 
allows potentially untrusted forwarder service requests serve hidden content 
uid serves demultiplex requesters 
reduced pre computing significant bits dct image site 
enhancements point assumed infranet requester software distributed physical medium cd rom 
distribution mechanism slow provides evidence easier governments control electronic distribution 
enhancement allow clients download infranet requester software infranet essentially bootstrapping infranet requester 
architecture section protect impersonation attack censor establishes infranet responder discovers requesters identifying web clients send meaningful infranet requests 
shows improved system architecture requester forwards visible requests trusted responder potentially untrusted forwarder responder recover hidden request 
responders fetch encrypt requested content return requester forwarder hides encrypted content images 
scheme provides improvements 
blocking access infranet difficult requester contact forwarder trusted untrusted gain access 
second censor forwarder difficult censor trusted responder 
current tunnel communication protocol infranet requester responder take turns transmitting messages 
conceivable scheme devised requests fetch requested content transmit hidden message interleaving retrieval hidden information transmission hidden message 
conceivable ways performing modulation hiding different versions tunnel communication protocol 
tunnel setup amended include version agreement particular aspect tunnel protocol version insecure requester responder easily adapt run different version 
infranet enables users circumvent web censorship surveillance establishing covert channels accessible web servers 
infranet requesters compose secret messages sequences requests hard censor detect infranet responders covertly embed data openly returned content 
resulting traffic resembles traffic generated normal browsing 
infranet provides access sensitive content plausible deniability users 
infranet uses tunnel protocol provides covert communication channel requesters responders modulated standard transactions 
upstream direction infranet requesters send covert messages infranet responders associating additional semantics requests 
downstream direction infranet responders return content hiding censored data images steganographic techniques 
downstream confidentiality achieved session key upstream confidentiality achieved exchanging modulation function 
upstream downstream protocols solve independent problems tackled separately 
protocol optimized downloading web pages provides channel arbitrary way communication example infranet carry remote login session 
security analysis showed infranet successfully circumvent sophisticated censoring techniques ranging active attacks passive attacks impersonation 
performance analysis showed infranet provides acceptable bandwidth covert web browsing 
range mapping algorithm upstream communication allows requester transmit hidden request number visible requests proportional binary entropy hidden request distribution 
believe widespread deployment infranet responders bundled web server software potential overcome various increasingly prevalent forms censorship surveillance web 
acknowledgments sameer dave andersen helpful discussions frank dabek kevin fu kyle jamieson jung david martin robert morris useful comments drafts 
adler maggs 
protocols asymmetric communication channels 
proceedings th ieee symposium foundations computer science focs palo alto ca 
anonymizer 
www anonymizer com 
clarke wiley hong 
freenet distributed anonymous information storage retrieval system 
proceedings workshop design issues anonymity unobservability berkeley ca july 
dingledine freedman molnar 
free haven project distributed anonymous storage service 
proceedings workshop design issues anonymity unobservability berkeley ca july 
gzip 
www gzip org 
hartung girod 
digital watermarking raw compressed video 
proc 
european eos spie symposium advanced imaging network technologies pages berlin germany october 

fingerprinting websites traffic analysis 
workshop privacy enhancing technologies san francisco ca april 
ircache 
www ircache net 
lampson 
note confinement problem 
communications acm october 
lee 
companies compete provide internet veil november 
www com technology html 
martin schulman 
users anonymizing service 
proc 
th usenix security symposium san francisco ca august 

europe moving ban internet hate speech november 
www com technology html 
menezes 
elliptic curve public key cryptosystems 
kluwer academic publishers boston ma 
nielsen top 
pm com owa november 
openssl 
www openssl org 

www org 

defending statistical 
proc 
th usenix security symposium washington august 
reiter rubin 
crowds anonymity web transactions 
acm transactions information system security november 
www research 
att com projects crowds 

www com 
schulman zuckerman 
asymptotically codes correcting insertions deletions transpositions 
symposium discrete algorithms pages 
squid web proxy cache 
www squid cache org 
stein writing apache modules perl apache api mod perl 
reilly associates sebastopol ca march 
universal ssl wrapper 
www 
org 
zero knowledge systems 
freedom 
www 
freedom net products 
syverson reed goldschlag 
onion routing access configurations 
darpa information survivability conference exposition pages hilton head island sc january 
www onion router net 
cult dead cow cdc 

www peek org 
triangle boy 
com solutions triangle boy html 
voice america 
www gov 
waldman mazieres 
censorship resistant publishing system document 
proceedings th acm conference computer communications security philadelphia pa november 
waldman rubin cranor 
publius robust censorship resistant web publishing system 
proc 
th usenix security symposium pages denver august 
witten neal cleary 
arithmetic coding data compression 
communications acm february 
