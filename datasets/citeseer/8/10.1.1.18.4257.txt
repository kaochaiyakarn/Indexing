fast elitist non dominated sorting genetic algorithm multi objective optimization nsga ii kalyanmoy deb samir agrawal kanpur genetic algorithms laboratory indian institute technology kanpur kanpur pin india ac deb mary www ac report 
multi objective evolutionary algorithms non dominated sorting sharing mainly criticized computational complexity number objectives population size ii non elitism approach iii need specifying sharing parameter 
suggest non dominated sorting multi objective evolutionary algorithm called non dominated sorting ga ii nsga ii alleviates difficulties 
specifically fast non dominated sorting approach computational complexity 
second selection operator creates mating pool combining parent child populations selecting best respect fitness spread solutions 
simulation results difficult test problems show proposed nsga ii able find better spread solutions problems compared paes elitist multi objective ea pays special attention creating diverse pareto optimal front 
nsga ii low computational requirements elitist approach parameter sharing approach nsga ii find increasing applications years come 
past decade number multi objective evolutionary algorithms moeas suggested 
primary reason ability find multiple pareto optimal solutions single run 
principal reason problem multi objective formulation possible single solution simultaneously optimizes objectives algorithm gives large number alternative solutions lying near pareto optimal front great practical value 
non dominated sorting genetic algorithm nsga proposed srinivas deb evolutionary algorithms 
years main criticism nsga approach follows high computational complexity non dominated sorting non dominated sorting algorithm case large population sizes deb agrawal expensive especially population needs sorted generation 
lack elitism results show clearly elitism speed performance ga significantly helps prevent loss solutions :10.1.1.30.5848:10.1.1.30.5848:10.1.1.30.5848
need specifying sharing parameter traditional mechanisms insuring diversity population get wide variety equivalent solutions relied heavily concept sharing 
main problem sharing requires specification sharing parameter 
dynamic sizing sharing parameter parameterless diversity preservation mechanism desirable :10.1.1.18.4257
address issues propose improved version nsga call nsga ii 
simulation results number difficult test problems find nsga ii better spread optimized solutions paes elitist multi objective evolutionary algorithm 
results encourage application nsga ii complex real world multi objective optimization problems 
elitist multi objective evolutionary algorithms study zitzler deb clearly shown elitism helps achieving better convergence moeas :10.1.1.30.5848:10.1.1.30.5848:10.1.1.30.5848
existing elitist moeas zitzler thiele strength pareto ea spea knowles corne pareto archived evolution strategy paes rudolph elitist ga known 
zitzler thiele suggested elitist multi criterion ea concept non domination strength pareto ea spea 
suggested maintaining external population generation storing non dominated solutions discovered far initial population 
external population participates genetic operations 
generation combined population external current population constructed 
non dominated solutions combined population assigned fitness number solutions dominate dominated solutions assigned fitness worse worst fitness nondominated solution 
assignment fitness sure search directed non dominated solutions 
deterministic clustering technique ensure diversity non dominated solutions 
implementation suggested proper book keeping complexity spea reduced important aspect study subsequent studies clearly show importance introducing elitism evolutionary optimization :10.1.1.30.5848:10.1.1.30.5848
knowles corne suggested simple moea evolution strategy es 
pareto archived es paes parent child child compared respect parent 
child dominates parent child accepted parent iteration continues 
hand parent dominates child child discarded new mutated solution new child 
child parent dominate choice child fast elitist nsga parent considers second objective keeping diversity obtained solutions 
maintain diversity archive non dominated solutions maintained 
child compared archive check dominates member archive 
child accepted new parent dominated solution eliminated archive 
child dominate member archive parent child checked nearness solutions archive 
child resides crowded region parameter space members archive accepted parent copy added archive 
suggested paes similar principles 
authors calculated worst case complexity paes evaluations archive length 
archive size usually chosen proportional population size complexity algorithm rudolph suggested simulate simple elitist multi objective ea systematic comparison individuals parent offspring populations 
non dominated solutions offspring population compared parent solutions form non dominated set solutions parent population iteration 
size set greater desired population size individuals offspring population included 
strategy able prove convergence algorithm pareto optimal front 
important achievement right algorithm lacks motivation second task maintaining diversity pareto optimal solutions 
explicit diversity preserving mechanism added usable practice 
determinism non dominated front complexity rudolph algorithm elitist non dominated sorting genetic algorithm nsga ii non dominated sorting ga nsga proposed srinivas deb applied various problems 
mentioned earlier number criticisms nsga 
section modify nsga approach order alleviate difficulties 
presenting number different modules form part nsga ii 
fast non dominated sorting approach order sort population size level non domination solution compared solution population find dominated 
requires comparisons solution number objectives 
process continued find members nondominated class population members total complexity stage individuals non dominated front 
order find individuals front solutions front temporarily discounted procedure repeated 
worst case task finding second front requires computations 
procedure repeated find subsequent fronts 
seen worst case exists solution deb agrawal front complexity algorithm describe fast non dominated sorting approach require computations 
solution calculate entities number solutions dominate solution ii set solutions solution dominates 
calculation entities requires comparisons 
identify points put list call current front 
solution current front visit member set reduce count 
doing member count zero put separate list members current front checked declare members list members front 
continue process newly identified front current front 
iteration requires computations 
process continues till fronts identified 
fronts worst case complexity loop complexity algorithm worth mentioning computational burden reduced performing systematic book keeping storage increased worst case 
fast non dominated sorting procedure applied population returns list non dominated fronts fast nondominated sort dominates include dominated increment solution dominates member front member modify member set decrement zero member list current front formed members density estimation get estimate density solutions surrounding particular point population take average distance points side point objectives 
quantity serves estimate size fast elitist nsga largest cuboid enclosing point including point population call crowding distance 
crowding distance th solution front marked solid circles average side length cuboid shown dashed box 
algorithm calculate crowding distance point set cuboid fig 

crowding distance calculation shown 
crowding distance assignment number solutions set initialize distance objective sort sort objective value boundary points selected points refers th objective function value th individual set complexity procedure governed sorting algorithm 
worst case solutions front sorting requires computations 
crowded comparison operator crowded comparison operator guides selection process various stages algorithm uniformly spread pareto optimal front 
assume individual population attributes 

non domination rank 
local crowding distance define partial order deb agrawal solutions differing non domination ranks prefer point lower rank 
points belong front prefer point located region lesser number points size cuboid larger 
main loop initially random parent population created 
population sorted non domination 
solution assigned fitness equal non domination level best level 
minimization fitness assumed 
binary tournament selection recombination mutation operators create child population procedure particular generation shown size generation onward procedure different 
elitism fast nondominated sort non dominated fronts combine parent children population till parent population filled calculate crowding distance crowding distance assignment include th non dominated front parent pop sort descending order sort choose elements new pop selection crossover mutation create new population combined population formed 
population size population sorted non domination 
new parent population formed adding solutions front till size exceeds solutions accepted front sorted points picked 
construct population size population size selection crossover mutation create new population size important note binary tournament selection operator selection criterion niched comparison operator look complexity iteration entire algorithm 
basic operations performed worst case complexities associated follows 
non dominated sort 
crowding distance assignment 
sort seen complexity algorithm diversity non dominated solutions introduced crowding comparison procedure tournament selection population reduction phase 
solutions compete crowding distance measure fast elitist nsga density solutions neighborhood extra niching parameter needed nsga required 
crowding distance calculated objective function space implemented parameter space desired 
interesting note connection algorithm algorithm proposed rudolph 
non dominated front finding algorithm rudolph algorithm front rudolph control complexity algorithm working just fronts parent child populations treating rest individuals child population par 
availability fast non domination sorting algorithm afford combine parent child populations complete sort identify fronts allocate fitness accordingly 
results compare nsga ii paes test problems minimization objectives mop mop mop ec ec diversity optimized solutions important matter multiobjective optimization devise measure consecutive distances deb agrawal solutions best non dominated front final population :10.1.1.17.7771
obtained set non dominated solutions compared uniform distribution deviation computed follows order ensure calculation takes account spread solutions entire region true front include boundary solutions non dominated front discrete pareto optimal fronts calculate weighted average metric discrete regions 
equation euclidean distance consecutive solutions non dominated front final population objective function space 
parameter average distances 
deviation measure consecutive distances calculated run 
average deviations runs calculated measure comparing different algorithms 
clear algorithm having smaller better terms ability widely spread solutions obtained front 
test problems nsga ii population size crossover probability mutation probability number variables 
run nsga ii generations 
variables treated real numbers simulated binary crossover sbx real parameter mutation operator 
paes archive size depth 
mutation probability 
order comparisons fair iterations paes total number function evaluations nsga ii paes 
table shows deviation ideal uniform spread variance independent runs obtained nsga ii paes 
show columns test problem 
column presents value runs second column shows variance 
clear table test problems nsga ii smaller meaning nsga ii able find distribution solutions closer uniform distribution non dominated front 
variance columns suggest obtained values consistent runs 
table 
comparison mean variance deviation measure obtained nsga ii paes algorithm mop mop mop ec ec nsga ii paes order better understanding algorithms able spread solutions non dominated front entire non dominated front fast elitist nsga nsga ii paes test problems 
figures show nsga ii able find better distribution paes mop 
ec converging global pareto optimal front difficult task 
reported spea converged front different runs 
nsga ii find front different nsga ii fig :10.1.1.30.5848

non dominated solutions obtained nsga ii mop 
paes fig :10.1.1.30.5848

non dominated solutions obtained paes mop 
runs 
shows non dominated solutions obtained nsga ii paes ec 
clear nsga ii able better distribute population obtained front paes 
worth mentioning similar number function evaluations spea reported different solutions non dominated front 
proposed computationally fast elitist multi objective evolutionary algorithm non dominated sorting approach 
difficult test problems borrowed literature proposed nsga ii outperforms paes multi objective ea explicit goal preserving spread non dominated front 
properties fast non dominated sorting procedure elitist strategy parameterless approach nsga ii find increasing attention applications near 
authors acknowledge support provided india council technical education india course study 
deb agrawal pareto optimal front nsga ii paes fig 

obtained non dominated solutions nsga ii paes ec 

deb 
multi objective genetic algorithms problem difficulties construction test functions 
evolutionary computation 

deb agrawal 
simulated binary crossover continuous search space 
complex systems 

fonseca fleming 
genetic algorithms multi objective optimization formulation discussion generalization 
forrest editor proceedings fifth international conference genetic algorithms pages morgan kauffman san mateo california 

fonseca fleming 
multiobjective optimization multiple constraint handling evolutionary algorithms part ii application example 
ieee transactions systems man cybernetics part systems humans 


horn goldberg 
niched pareto genetic algorithm multi objective optimization 
michalewicz editor proceedings ieee conference evolutionary computation pages ieee service center piscataway new jersey 

knowles corne 
pareto archived evolution strategy new baseline algorithm multiobjective optimisation 
proceedings congress evolutionary computation new jersey ieee service center 

mitra deb gupta 

multiobjective dynamic optimization industrial reactor genetic algorithms 
journal applied polymer science 

rudolph 
evolutionary search partially ordered sets 
technical report 
ci dortmund department computer science ls university dortmund germany 

srinivas deb 
multi objective function optimization non dominated sorting genetic algorithms evolutionary computation 

goldberg 

genetic algorithm design pareto optimal broad band microwave 
ieee transactions electromagnetic compatibility 
fast elitist nsga 
zitzler 

evolutionary algorithms multiobjective optimization methods applications 
doctoral thesis eth zurich swiss federal institute technology eth aachen germany shaker verlag 
:10.1.1.30.5848
zitzler deb thiele 
press comparison multiobjective evolutionary algorithms empirical results 
evolutionary computation 

zitzler thiele 
multiobjective optimization evolutionary algorithms comparative case study 
eiben ck schoenauer schwefel editors parallel problem solving nature pages springer berlin germany 
