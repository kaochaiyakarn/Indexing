proposal interactive environment information extraction claire cardie david pierce department computer science cornell university ithaca ny usa cardie pierce cs cornell edu july information extraction systems successfully deployed domains ranging terrorist activities medical records 
building systems remains costly users lack annotated training corpora knowledge engineering expertise 
proposes framework interactive information extraction environment user trains system example feedback performance 
successful system allows users create information extraction systems aid computational linguists nlp system designers 
information extraction cornell university computer science technical report tr information extraction systems natural language processing nlp systems produce structured summaries input text see cardie 
systems important users information needs nlp researchers 
nlp point view systems important attack tractable task fully general language understanding problem determining complete meaning sentence text focus domain specific text applications extracting diagnoses symptoms medical patient records 
user point view information extraction systems perform important tasks identifying interesting documents presenting content concise consistent manner generating high level document representations information retrieval 
give examples systems terrorism domain muc conferences aid defense analysts monitoring terrorist activities latin america muc doctors systems medical domain collect collate evidence diagnoses automatically examining patient medical record soderland general information extraction systems allow users consider significantly data automatically structuring filtering information 
information extraction consider text quality circle domain 
cornell wants extract collection journal abstracts kinds information including motivated industries organize quality circle innovations results innovations delivered bad caused innovations succeed fail 
title new spin quality circles authors gary subjects automobile industry case studies quality circles codes united states specific transportation equipment industry quality control research development new honda nh circle honda 
familiar people quality circle 
quality circles organizations disappearing spirals largely due lack going focus consistency application honda people nh circle part going routine 
tendency manufacturing companies organize quality circles exclusively shop floor honda limits 
honda north america raymond ohio complex nh circle solve problems cad 
quality circles engineering significant 
useful information text 
second sentence describes fate quality circles organizations disappearing spirals 
cause lack going focus consistency application 
hand penultimate sentence relates positive result nh circle solve problems cad 
systems typically collect bits information report forms called templates 
innovation report result failure innovation quality circles innovation fate disappearing spirals cause problems lack going focus consistency application innovation report result success innovation nh circle innovation solve problems cad information extraction task identify classify interesting portions document 
accordingly information extraction system capable performing operations including identifying patterns lexical syntactic semantic features identifying conceptual relationships pieces information innovations results identifying coreferences extractions refer entity pronoun antecedent 
systems successfully real applications monitoring terrorists diagnosing medical conditions obstacles building 
obstacles addressed proposal 
cost new domain specific components 
traditionally new domain specific components built hand new application 
required hours painstaking programmer familiar underlying nlp system aware linguistic issues involved 

limitation extracted structures 
currently information extraction systems capable extracting noun phrases particular syntactic positions classify instances concept 
consider obstacle 
crucial domain specific component typical systems concept dictionary 
set patterns describes kinds constituents labeled particular extraction type 
example effective innovation pattern third slot second example template look clause constituent subject extracted innovation verb passive voice complement infinitive clause extract complement innovation 
pattern matches clause stating innovation extracts part text 
particular pattern matches sentence containing nh circle solve problems cad extracting solve problems cad innovation concept 
extracted concept combined extractions form template example 
concept dictionaries typically consist hundreds thousands patterns 
new dictionaries required new domain creating consumes great amount time 
research efforts begun address cardie riloff soderland 
huffman corpus methods employ large training corpus annotated examples concept type extraction 
examples machine learning algorithms induce conceptual patterns extraction 
methods eliminated cost building information extraction systems simply deferred cost encoding linguistic knowledge bases cost annotating corpora task 
effort necessary address cost corpus annotation 
substituting costly corpus information strategy 
example autoslog ts system uses document classifications place full corpus annotations original autoslog riloff obstacle information extraction limitation imposed extracted text 
methods referenced creates patterns extract noun phrases text place template slots innovation 
noun phrases useful domains important extract verb phrases clauses adverbials noun modifiers 
effect obstacles reduce utility accessibility technology non expert users 
users provide large annotated domain specific corpora advances corpus dictionary generation limited utility 
second restriction structures extracted may eliminate extractions users consider desirable 
goal goal research enable automatic construction information extraction systems real users 
achieve goal address obstacles outlined 
address obstacle cost domain specific knowledge engineering start different assumption corpus methods assume information provided corpus documents 
corpus annotations relevance judgments form corpus information system look training information necessary learn extraction patterns 
proposal provided interaction user 
system learn examples supplied user user feedback regarding current performance 
hypothesis primary hypothesis information extraction systems automatically constructed interactive information extraction environment 
order rely interaction users interactive information extraction environment place users effectively linguists nlp experts 
aspect philosophy users able annotate extract parts text want just noun phrases 
forces address second obstacle abandon traditional limitations 
consequently system need effective ways learning patterns extract wide variety syntactic constructs combinations constituents 
goal second goal broaden information extraction include task imitating reproducing selection arbitrary annotations text 
fundamental importance proposal information extraction technology accessible non experts 
doing expect reap benefits 
effective interactive training may eliminate large share cost engineering system new domain user system cooperating locate process concept examples efficiently user 
second flexibility information extraction systems increase users allowed extract text want compelled extract certain structures 
third user feedback may provide high level information improve extraction component parsing component 
suppose parser finds competing syntactic analyses ambiguous portion text 
parses matches extraction pattern known accurate user judges matching instance correct extraction pattern constitutes compelling evidence choosing matching parse similarly ambiguous contexts match pattern 
seeking achieve goals contribute collection useful techniques interactive machine learning human computer cooperation 
training corpus example base user parser pattern learner candidate base pattern base interactive information extraction environment model rest document discusses proposed interactive environment 
section outlines environment extended example 
sections consider important components framework partial parser pattern learner comparing related needs new environment 
section gives brief research plan accomplishing goals set forth 
interactive environment depicts schematically general approach building interactive information extraction environment 
user initiates training sequence user system parser pattern learner participate interactive learning loop 
numbered arrows diagram correspond steps 
drawing training corpus user annotates instances concept adding example base 

point user chooses learning component begins induce patterns examples provided example base 

parser collects candidate matching instances patterns training corpus 

candidate instances user review 
user rejects incorrect instances accepts correct instances providing system base positive negative examples concept relatively low cost 

positive negative instances pattern learner adapts pattern base accordingly 
ultimately system finds set patterns maximize positive match instances minimizing negative instances 
practice steps interleaved user review candidate instances step allowing system continue step 
user strategy system may vary simply operating system annotation tool mark corpus document document advantage system learning capability continuously repeating step reviewing single instance time guiding system modification single pattern pattern learner find additional positive instances possible fine grained loop steps 
presumably efficient strategy lies extremes 
interactive learning process induce pattern base type annotation 
process completes user satisfied performance extraction system accuracy learned patterns maximized annotated test corpus 
result partially fully annotated training corpus partial complete system 
ideally concept induction process quick efficient user 
efficiency possible user direct learning process system quickly generate instances refine patterns 
illustrate ideas detail consider interactive process apply example quality circle text 
annotating text 
interact user annotate document logical annotations denoting interesting concepts text 
example quality circle domain identified concepts innovation quality circles innovation fate disappearing spirals cause problems lack going focus consistency application innovation solve problems cad 
system component deals storing handling document annotations tipster architecture grishman architecture managing collections documents annotations 
tipster view document consists raw text associated database annotations 
annotations identify portions text logical objects 
annotations consist ffl id unique document annotations ffl type innovation innovation fate ffl set spans span pair integer indices document character stream spans represent subsequences document text comprise annotation ffl set attribute value pairs set attribute names associated value string annotation 
shows database annotations marked example text 
annotations wants system learn imitate 
annotation example type innovation fate 
spans text disappearing spirals 
innovation attribute value logical annotation describes fate innovation quality circles 
table database intuitive way viewing annotations describe marking text spans associate 
id organizations fate id innovation disappearing innovation largely due 
interaction user provides examples particular type annotation 
simplest annotation types supplied system obviously learn complex annotations simpler constituents known 
example user mark examples type innovation 
system creates annotations stores example base 
learning patterns 
system examples learning 
considers instance say innovation sentence 
id ithe new honda nh honda 
learner generates concept pattern match example 
level pattern specifies certain combination features 
possible pattern extract innovation 
clause constituent subject matches noun phrase constituent head circle head verb head object contains extract pattern extracts subject annotation category noun phrase head circle clause object contains word 
course overly specific pattern useless system 
system begins general pattern formulate 
complex annotations example annotations require annotations attribute values 
simple annotations contrast serve identify portion text relate multiple portions text 
id type spans attributes innovation new honda nh circle innovation quality circle innovation quality circles innovation fate innovation disappearing spirals cause problems innovation lack going focus consistency application innovation nh circle innovation fate innovation honda people nh circle part ongoing routine innovation quality circles domain tendency manufacturing companies organize quality circles exclusively shop floor domain honda limits innovation nh circle innovation innovation solve problems cad innovation quality circles innovation quality circles engineering significant example user annotations quality circle text 
noun phrase constituent extract pattern matches noun phrases obviously general 
turns bad matches general pattern useful matches specific pattern 
general pattern system tentatively identifies noun phrases text innovations 
applying feedback 
matches user evaluation 
nps innovations user accordingly marks incorrect providing system useful feedback 
incorrect matches specialize general pattern 
specialization innovation pattern noun phrase constituent head circle extract continue refine innovation pattern maximize performance 
initial approximation maximum performance pattern matches negative instances 
note criterion tend overfit pattern postpone discussion section user may select innovation examples set innovation patterns covers example proceed training annotation types 
partial parsing text analysis component interactive information extraction environment uses partial parsing methodology 
partial parsing aims reliably recognizing unambiguous syntactic elements producing complete parses 
partial parser similar finite state transducer cascade architecture popularized abney finite state cascade builds syntactic structure series levels 
level formed previous levels transducer finite state automaton mapping input languages output languages 
abney relates number advantages partial parsing finite state cascades 
ffl finite state cascade faster traditional parsers global optimization 
contributes robustness correct phrases fit globally optimized scheme 
ffl grammar considered programming language recognizers linguistic description 
write patterns recognize reliable structure structure linguistically motivated case patterns phrase boundaries kernels ffl patterns reliable partial parsing philosophy easy decisions delay difficult decisions high precision 
ffl partial parsing philosophy ambiguity lower level decisions contained reliable high level structure 
example prepositional phrase attachments difficult clause boundaries limit possible attachment sites 
finite state cascade efficient architecture building parsers 
level transducer specified pattern mapping input output 
patterns may constructed hand places familiar knowledge engineering burden parser builder 
attractive approach learn parser described learning extraction patterns 
fortunately existence parsed corpora learning syntax patterns need burden system user 
corpus methods learn syntax pre parsed texts 
pattern learning fundamental framework language processing 
surprising important component research focuses machine learning patterns information extraction 
level nh circle fto solve problems subject verb complement clauses level nh circle solve problems cad base noun phrases level nh circle solve problems cad dt nnp nn vbz vbd vb nns nnp part speech tags level nh circle solve problems cad words syntactic levels finite state cascade 
pattern learning syntax primary focus proposal syntactic pattern learning important language processing framework 
noted corpus methods attractive approach learning syntactic patterns 
approach patterns learned various ways large corpus pre parsed text 
previous learning patterns base noun phrases cardie pierce exemplifies approach 
algorithm learns patterns corpus annotated base noun phrases derived penn treebank parsed text 
patterns sequences part speech tags 
pattern nnp example matches sequence words tagged determiner proper noun singular common noun example phrase nh circle 
algorithm tags text part speech tagger scans text left right word finding longest noun phrase matching patterns bracketing moving word 
set base noun phrase patterns initially generated recording tag sequence noun phrases annotated corpus 
pattern set pruned improve performance removing patterns behave badly checked held portion annotated corpus 
set patterns evaluated held portion corpus 
evaluation algorithm performed comparably current best methods noun phrase bracketing 
extraction related previous research explored learning extraction patterns corpus paradigm described syntactic patterns extraction patterns corpus annotated examples desired extraction learning algorithm induce patterns 
autoslog system riloff uses simplest learning algorithm 
corpus example autoslog derives pattern syntactic position instance trigger usually verb clause 
autoslog performs automatic learning filtering patterns 
human filter entire set patterns throwing away patterns look wrong 
autoslog ts riloff extends autoslog require annotation entire corpus 
suffices classify document relevant irrelevant domain 
autoslog ts forms patterns just autoslog forms possible patterns training corpus syntactic position noun phrase forming patterns training instances 
anonymous patterns ranked filtered relevancy rate number occurrences relevant documents versus number occurrences irrelevant documents 
filtering effective human required accept interesting patterns label information extract 
crystal system soderland uses specific general machine learning algorithm build dictionary patterns 
autoslog dictionary initialized pattern concept instance 
pattern maximally specific encoding entire context instance 
crystal generalizes pattern selecting similar pattern concept unifying patterns 
unification involves dropping pattern constraints patterns 
unifying similar patterns crystal avoids having choose combinatorial variety pattern generalizations 
allow user annotate example add allow user select user marks correct add add gamma remove example specific pattern general pattern add select add new instances select corresponding specific pattern performing best specialize direction algorithm learning extraction patterns user supplied instances 
liep system huffman uses specific general learning algorithm 
learns new pattern example training corpus previously learned pattern matches example generalized match 
liep generalizes pattern fixing non generalizable portion pattern new example matches non generalizable part pattern pattern generalized fit new example 
practice means patterns generalized adding word choices head constraints 
systems laid important groundwork build directions 
systems extracts noun phrases concept slot fillers 
tasks including example task need extract arbitrary constituents 
research extends pattern learning task include patterns phrases types multiple phrases syntactic relationships 
furthermore needs non expert user considered design systems 
liep potentially interactive systems take full advantage power user interaction 
interactive sense learning algorithm incremental user supply examples time 
user supply examples 
hand takes advantage parser ability quickly find instances candidate pattern user ability judge relevancy pattern learner ability adapt candidate pattern conform user wishes 
interactive learning algorithm shape task consider design pattern learning component 
system needs learn examples need algorithm search space possible patterns 
systems described search specific patterns general patterns additional positive examples generalize pattern 
hand searches general specific enabling identify candidate instances concept 
general pattern propose new instances 
new instances correct save user cost annotation pattern learner new instances incorrect specialize general pattern 
learning component needs heuristics guide specialization process exponential number possible patterns search 
crystal guides specific general search finding similar patterns unify 
liep severely limits allowed generalization patterns similar example instances guide generalization 
searching general specific needs different heuristics 
plausible heuristic guide general specific search direction original instance form pattern 
learning criteria mind presents appropriate high level learning algorithm 
algorithm interleaves procedures user annotates new concept instances pattern learner creates pattern instance parser proposes new instances pattern matches user judges candidate instances learner refines affected patterns 
procedures left column interact user right involve learner parser 
procedures share data structures training corpus set new instances provided user gamma sets positive negative candidate judged instances overlaps set patterns 
pattern corpus set instances denotes instances match condition cease refine pattern deliberately left vague performing best 
section proposed criterion best performance mistakes notation gamma 
naive condition robust training data noisy fit original training instance described considering training data provided ordinary user linguist imperative learner robust flexible condition may required 
issue discussed section 
research plan steps crucial components partial parser pattern learner need development 
parsing side introduced new algorithm bracketing base noun phrases described section 
need develop stages parser identifying syntactic features clauses argument structure coreference needed extraction patterns 
nice aspects research interactive learning algorithm general applied parsing tasks learning extraction patterns 
build parser example interactively learning patterns argument structure tagging base nps 
experimenting simple structures gain experience framework prepare larger challenge users annotations 
part research focus adding interactive learning toolbox corpus methods building nlp systems 
extraction side need validate accuracy interactive system demonstrate annotate wider variety constructions previous learning algorithms 
validate apply existing simple noun phrase extraction tasks say terrorism task muc compare performance umass circus system patterns learned autoslog 
muc task provides limited opportunity learn extractions noun phrases particular set fills template slots chosen fixed set answers 
example set fills terrorism templates rating confidence incident report answers may reported fact claimed admitted suspected accused 
previous systems difficulty finding set fills 
task relatively simple opportunity try different type extraction defined readily available answers 
evaluation existence corpora parsing information extraction evaluation early stages 
parsing component evaluated respect treebank parses little effort noun phrase extractions templates muc tasks converted corpora annotations evaluation learning component 
corpora available general task imitating arbitrary annotations 
order evaluate final system need choose task construct test corpus hand 
corpus evaluation informative accuracy systems build effectiveness user 
way measure effectiveness interaction run experiments real users determine long takes train system certain level accuracy 
interesting alternative simulate users hand annotated corpus user model selects annotations corpus training 
measure amount interaction number instances annotated candidates judged necessary user train system 
advantage approach formalize various behaviors user model measure effect training quickly easily 
user pseudo user interactions arises question reasonable amount interaction course subjective 
certainly success user train system amount time needed weed set extraction patterns produced autoslog hours 
arguably success user train reasonably complicated system matter days 
methods evaluation outlined progress research measured 
ultimate goals 
demonstrate possible users annotations imitated reproduced reasonable accuracy 

demonstrate possible reasonable amount interactive learning produce system accuracy comparable leading systems umass circus system autoslog 
key research issues section considers important issues faced proposed framework interactive information extraction 
ffl relies consistency users annotations 
plausible suppose face inconsistent annotation performance learned patterns degrade significantly 
hand users better position monitor consistency corpora 
system finds previously learned pattern begins unexpected number errors may notify user pattern previously matched instances 
allows user system adapt reject variation annotation style 
ffl learning framework independent features learned patterns 
example base noun phrase patterns word part speech features lexical item 
higher level extraction patterns syntactic semantic features 
performance system depend available features research issue identify provide important features text 
ffl leads issue 
provided bag full available features know ones crucial patterns need learn 
framework question specializing patterns 
specializing general pattern need add features useful 
important research question 
ffl discussion specializing patterns section hinted problem 
naive stopping condition gamma dictates system specialize pattern mistake 
users willing sacrifice little accuracy save training time 
pattern creates correct annotations accuracy prefer pattern creates annotations plus correct annotations additional mistakes accuracy 
calls flexible usefulness measure incorporates accuracy coverage 
acknowledgments supported part nsf iri ger 
abney abney 
partial parsing finite state cascades 
proceedings esslli robust parsing workshop 
cardie pierce cardie pierce 
error driven pruning treebank grammars base noun phrase identification 
proceedings coling acl 

available 
cardie cardie 
case approach knowledge acquisition domain specific sentence analysis 
proceedings eleventh national conference artificial intelligence 
cardie cardie 
empirical methods information extraction 
ai magazine 
grishman grishman 
tipster text phase ii architecture design 
technical report tipster 
available www tipster org 
huffman huffman 
learning information extraction patterns examples 
wermter riloff editors symbolic connectionist statistical approaches learning natural language processing 
springer 

muc muc 
proceedings third message understanding conference muc 
morgan kaufmann 
riloff riloff 
automatically constructing dictionary information extraction tasks 
proceedings eleventh national conference artificial intelligence 

riloff riloff 
automatically generating extraction patterns untagged text 
proceedings thirteenth national conference artificial intelligence volume 

soderland soderland fisher lehnert 
crystal inducing conceptual dictionary 
proceedings fourteenth joint conference artificial intelligence 


