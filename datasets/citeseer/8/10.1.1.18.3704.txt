bit representations twist rana computer science department colorado state university fort collins email rana cs colostate edu darrell whitley computer science department colorado state university fort collins email whitley cs colostate edu function mapped bit representation structure fitness landscape change dramatically 
techniques delta coding tried dynamically adapt representation search process hopes making problem easier genetic algorithm solve 
introduce new technique changing restricted set gray representations search method involves little overhead offer significant performance improvement variety search algorithms 
free lunch theorem nfl wm proves subject certain assumptions average search algorithms performance set functions 
radcliffe surry rs extend nfl results include possible representations 
look search algorithms single function possible representations search algorithms perform average 
caveat free lunch theorem practitioners generally trying optimize functions 
assuming trying solve select subset functions choose binary representation functions readily solved search algorithm 
having priori information specific function optimized question answered definitively 
genetic algorithm researchers bit representation choose standard binary reflective gray encoding standard binary encoding 
intuition choice encoding strategy functions interesting solving amenable search genetic algorithms 
conjectures 
choice gray encoding usually better choice binary test functions real world applications 
second gray representation possible improve search performance searching multiple shifts representation sampling small subset gray representations 
introduces new form local search called optima linking 
optima linking mechanism escaping local optimum probabilistic non improving moves simulated annealing complex tabu mechanisms tabu search glo 
background built previous theoretical papers 
rana whitley rw calculate expected number optima induced possible bit representations function illustrates calculate probability point local optimum possible representations 
values compared specifically number optima occur binary reflective gray coding mw standard binary encoding commonly test functions 
test functions examined number minima gray encoding binary encoding gray binary produce dramatically fewer minima average possible representations 
explained limited degree nonlinearity locally correlated structure functions analyzed 
second wr shown theoretically gray coding better binary encoding special class functions bounded number optima 
gray coding induce fewer local minima binary coding average functions special class 
course having smaller number local minima bit representation guarantee function easier representation induces minima 
empirically gray codes result better search local bit climbing methods genetic algorithms 
empirically apply results theoretical look method dynamically explores different gray representations objective function search 
apply dynamic strategy conjunction forms local search chc algorithm 
gray coding discussing conjecture gray coding better choice bit representation problems limited degree nonlinearity locally correlated structure 
assume integer domain gamma arbitrary function 
point domain represented bit string 
gray code defined binary encoding scheme guarantees points adjacent integer domain hamming distance 
keeping property mind count number local optima occur integer neighborhood versus number local optima occur gray representation 
integer neighborhood adjacent integers neighbors space wraps adjacent gamma 
value locally optimal neighboring points better current value simplicity assume duplicates 
suppose locally optimal points integer neighborhood representation domain 
gray coding preserves numeric adjacency domain locally optimal points gray encoding 
refer gray compactness theorem theorem gray compactness theorem number local optima induced hamming distance neighborhood search operator bits gray coded representation function number local optima induced integer neighborhood topology function formal proof whitley rana wr 
simply put gray coding results function landscape worst difficult landscape induced integer neighborhood search operator 
binary encoding offers guarantee 
fact simple functions binary encodings usually increase number optima compared integer neighborhood 
table contains comparison gray binary representations set possible bit representations 

min 
min minima gray binary considering bit representations generating possible functions permutations containing distinct values 
set functions called partition set local optima occur function number optima 
number functions falling partition column table 
functions mapped corresponding gray binary representations 
total number optima min occur bit representations partition third fourth columns 
small gray representations consistently produce fewer total optima approaches maximum number possible optima number optima binary representation quickly drops 
trend continues larger problem sets 
assume set functions interested solving bounded number optima gray coding appears better encoding choice 
shifting provided evidence support choice gray encoding arbitrary functions 
different gray encodings choose speculate theta different gray codes 
different gray encodings result different bit interactions consequently different gray encodings result fitness landscapes varying difficulty 
practical way knowing encoding problem easiest introduce new way sampling different encodings search 
allow search algorithm exploit different encodings ultimately arrive solutions 
gray shift gray simple example shifting 
shifting technique altering encoding decoding bit strings search 
bit string encoded decoded string mapped integer value appropriately scaled function domain 
shift integer offset applied intermediate integer result generated decoding process 
shifted result wrapped ends valid integer domain scaled function domain 
provides example single shift applied bit gray coded strings 
outer dial contains bit strings inner dial contains integer values map bit strings 
shift occurs counterclockwise turn outer dial creating new mapping 
shifting applied bit encoding method effects shifting best understood gray encoding 
shift corresponds new gray encoding shifts preserve adjacency occurs integer neighborhood 
string length neighbors points numerically value 
remaining gamma neighbors change result shifting 
change cause total number optima occur change different shifts 
looking back example neighbors point integer value change single shift 
integer changes neighbors change mapping mapping 
adjacent integers remain neighbors 
change set gamma neighboring points dramatic longer bitstrings 
example shifting done preliminary analyses determine shifting change difficulty common test parameter rastrigin function plot rastrigin function 
number local optima histogram number local optima rastrigin gray histogram number optima occur shifts 
parameter parameter vs local opt gray opt gray probability point occurs optimum shifts 
problems 
particular looked rastrigin function encoded single bit parameter coded binary reflective gray coding 
plot rastrigin function shown 
graph easy count local minima occur numeric space 
counted number local optima occur possible shifts gray encoding 
results histogram shown 
local minima average range local minima set shifts representing subset possible gray representations 
illustrates set gray codes results representations varying difficulty 
shows probability point space local optimum shifts 
looking set points occur local optima possible shifts values entire search space occur local optima 
local optimum occurs shifts space global optimum 
additional experiments run shifted binary space 
number minima binary representation rastrigin function larger gray codes optima average 
implies rastrigin function harder binary representation gray representation numeric representation 
similar results common test functions binary representation induces minima gray representation 
experiments ran search algorithms test suite functions 
search algorithm run shifting 
test suite functions shown table 
rastrigin function schwefel function griewangk function dimension test problems 
rana whitley functions weighted wrap expansion method employed expand functions variables 
wrap method consecutively pairs parameters input function wrapping parameter 
parameter version wrapped function expansion ef random weights multiplied term summation 
rana whitley functions parameter version function 
functions bit gray encoded string parameters 
remaining function known powell singular function 
experiments encoded parameters bit gray coded string 
algorithms algorithms study effects random shifting search 
algorithms rbc optima linking illustrate effects shifting hillclimbing search strategies 
third algorithm chc illustration search affect type genetic algorithm 
intuitive way apply shifting allow search algorithm converge solution representation change shift new representation continue searching 
case hillclimbing algorithms technique effective 
hillclimbing algorithm converges local optimum shift cause point longer local optimum means new optimum converges better evaluation 
case genetic algorithms possible run generations change shift periodically 
rbc simplest algorithm tested random bit climber introduced davis dav 
davis random bit climber rbc starts changing bit time random position 
improvement accepted 
climber flipped bit string new random sequence chosen testing bits rbc checks bit improvement 
rbc checked bit string improvement local optimum rbc restarted new random point search space 
appropriate time change representations rbc converges local optimum 
process changing shifts rbc interleaved random restarts random restarts needed problems 
rbc allowed converge shifts restarted 
optima linking optima linking new search technique designed whitley wcr algorithm similiar idea outlined glover glo reeves ree 
optima linking utilizes simple local search technique rbc generate set locally optimal points search space 
set points selected guides local search algorithm 
example local optima strings subspace corresponds schema 
search gamma rastrigin theta gamma gamma cos delta gamma schwefel gammax sin griewangk gamma cos powell gamma gamma gamma whitley jx gamma gamma sin jy rana jy gamma xj cos jx cos jy gamma xj sin jx table test suite studying effects shifting 
points restricted subspace 
search moves start point destination point creating path optima 
start point best available move taken step closer destination 
note move start point local optimum 
search continues take best available move current point destination point 
destination reached start destination points swapped second linking path generated 
best point path initial starting point unrestricted neighborhood search rbc 
result search local optimum 
local optimum set known optima copied saved pairings 
pair optima linked 
example optima linking working point 
example optima linking 
example locally optimal strings paired 
differences strings occurring bit positions numbering bits left right 
starting steepest descent search strings bit away fall subspace examined 
strings best string course 
continuing point subspace neighbors lie subspace compared 
string best neighbors best string entire path 
point adjacent destination string linking path complete 
local search applied best point path case results new optimum 
optima linking way local search technique escape local optimum random restart complex tabu mechanisms 
believe optima linking merit search technique tool mapping complex search spaces 
optima linking offers advantage resample points search algorithms simulated annealing tabu search 
points linked linked 
unique pairs optima linked path traversed 
add shifting optima linking random shift applied path generated optima 
note linking paths func shift mean stddev mean stddev number 
soln evals solved rastrigin schwefel griewangk powell theta gamma theta gamma whitley rana table results rbc shifting test suite 
shifts pair optima connected 
single representation points initial set local optima obviously remain locally optimal necessarily case shifting applied 
different shifts induce different sets locally optimal points 
points pool deemed locally optimal shift tend points fairly evaluation 
chc third algorithm applied test suite chc 
chc employs parent population size selecting highly fit parents recombination typical genetic algorithms parents randomly uniformly paired conditionally mated produce offspring 
algorithm chooses best strings combined parent offspring populations generation reproducing parents 
chc algorithm maintains best strings encountered course search 
chc restart mechanism parent population converged solution 
chc restarted single best member population seed remainder population 
shifting applied restart phase 
means string needs decoded recoded new shift making change shift simple quick perform 
results algorithms run times different random seeds 
run allowed maximum evaluations 
purpose experiments compare algorithms illustrate shifting affect performance different algorithms different types functions 
rastrigin schwefel functions separable multimodal functions relatively small number local optima numeric space 
griewangk powell whitley rana functions separable appear offer varying levels difficulty algorithms 
performance measured solution quality number evaluations 
algorithms converge correct solution performance measured number evaluations required find correct solutions 
algorithms converge correct solution performance measured terms quality solutions 
performance algorithm run shifting compared students test 
rbc versions rbc run test suite functions 
version rbc random restarts shifting 
second version rbc random restarts shifting 
shifting applied times random restart occur 
allows rbc search local optimum variety shifts restarting 
results running versions rbc test suite functions table 
shifting rbc unable solve rastrigin schwefel function shifting rbc solved functions run 
rbc able solve griewangk function shifting solved significantly fewer evaluations shifting 
performance rbc powell function significantly af func shift mean stddev mean stddev number 
soln evals solved rastrigin schwefel griewangk powell theta gamma theta gamma whitley rana table results optima linking shifting test suite 
func shift mean stddev mean stddev number 
soln evals solved rastrigin schwefel griewangk powell theta gamma theta gamma whitley rana table results chc run shifting test suite 
shifting 
whitley rana functions shifting resulted significant improvement 
whitley function able solved runs shifting added unable solved shifting 
rana function unable solved version rbc solution significantly lower version rbc shifting 
optima linking optima linking utilizes rbc hillclimbing search algorithm performance optima linking different rbc 
problems griewangk function random restarts provide rbc advantage optima linking 
contains results running optima linking shifting test suite functions 
just table see set problems solved optima linking differ solved rbc 
rastrigin griewangk functions shifting caused optima linking perform significantly better terms number times global minimum 
schwefel function shifting significantly reduced number evaluations required solve problem 
powell function quality solutions optima linking affected shifting 
results whitley rana functions significantly affected shifting 
whitley function solved shifting 
optima linking better solutions rana functions shifting 
chc version chc run shifting version shifting generation population 
results table 
rastrigin schwefel griewangk functions shifting resulted significantly fewer eval required solve problem 
powell function chc shifting solved problem significantly shifting 
whitley rana functions significant difference performance 
algorithms addition shifting affect performance algorithm significantly improved performance 
results imply effects shifting exploited algorithms changes basins attraction changes number distribution local optima effectively utilized variety search algorithms 
goal twofold 
goal encourage gray coding default bit representation 
second goal introduce new technique shifting dynamically changing gray codes bit representation search 
provided preliminary results indicate shifting effectively types algorithms variety problems 
performance algorithms shifting significantly improved unchanged indicating shifting hurt performance algorithm 
shifting performed little overhead 
shifting offset applied encoding decoding phases function evaluation simply numeric offset encoded decoded value 
changing shift expensive performed frequently large populations 
study needs done determine effectiveness shifting genetic algorithms utilize large populations 
research supported nsf iri iri colorado advanced software institute 
rana supported national physical science consortium fellowship 
dav davis 
bit climbing representational bias test suite design 
booker belew editors proceedings fourth international conference genetic algorithms pages 
morgan kauffman 
glo glover 
tabu search fundamentals uses 
technical report university colorado boulder cu boulder 
kirkpatrick gelatt jr vecchi 
optimization simulated annealing 
science may 
muhlenbein 
evolution time space parallel genetic algorithm 
rawlins editor foundations genetic algorithms pages 
morgan kaufmann 

testing unconstrained optimization software 
acm transactions mathematical software march 
mw mathias whitley 
changing representations search comparative study delta coding 
journal evolutionary computation 
ree reeves 
personal communication 
rs radcliffe surry 
fundamental limitations search algorithms evolutionary computing perspective 
jan van leeuwen editor lecture notes computer science volume 
springer verlag 
rw rana whitley 
search binary representations counting optima 
technical report 
wcr whitley rana 
comparative study search methods seismic problems 
technical report 
wm david wolpert william macready 
free lunch theorems search 
technical report sfi tr santa fe institute july 
whitley mathias rana 
evaluating evolutionary algorithms 
artificial intelligence journal august 
wr whitley rana 
representation search genetic algorithms 
aaai 
