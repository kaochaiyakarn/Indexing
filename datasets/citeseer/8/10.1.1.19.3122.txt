analysis tcp performance mobile ad hoc networks part problem discussion analysis results gavin holland nitin vaidya cs tamu edu dept computer science texas university college station tx phone fax february technical report mobile ad hoc networks gained lot attention lately means providing continuous network connectivity mobile computing devices regardless physical location 
large amount research focused routing protocols needed environment 
part report investigate effects link breakage due mobility tcp performance 
simulation show tcp throughput drops significantly nodes move tcp inability recognize difference link failure congestion 
analyze specific examples situation throughput zero particular connection 
introduce new metric expected throughput comparison throughput multi hop networks metric show explicit link failure notification elfn techniques significantly improve tcp performance 
part report problem analysis simulation results 
part ii report simulation results detail 
keywords mobile ad hoc networks tcp ip performance analysis explicit link failure notification elfn dynamic source routing dsr supported part department education award 
national science foundation texas advanced technology program 
proliferation mobile computing devices demand continuous network connectivity regardless physical location spawned interest mobile ad hoc networks 
mobile ad hoc network network group mobile computing devices communicate wireless radios aid fixed networking infrastructure 
proposed extension internet fixed infrastructure exist desirable 
lot research mobile ad hoc networks focused development routing protocols :10.1.1.24.4120
research focused performance tcp mobile ad hoc networks 
tcp ip standard network protocol stack communication internet mobile ad hoc networks certainty number applications leverages allows seamless integration fixed infrastructure available 
earlier research tcp cellular wireless systems shown tcp suffers poor performance packet losses corruption caused wireless induced errors 
lot research focused mechanisms improve tcp performance cellular wireless systems :10.1.1.113.2393
studies looked problem bandwidth asymmetry large round trip times prevalent satellite networks :10.1.1.36.479
report address characteristic mobile ad hoc networks impacts tcp performance link failures due mobility 
part report performance analysis standard tcp mobile ad hoc networks analysis explicit notification techniques counter affects link failures 
part ii report details simulation environment comprehensive results simulation run :10.1.1.19.3122
simulation environment methodology results report simulations ns network simulator lawrence berkeley national laboratory lbnl extensions monarch project carnegie mellon :10.1.1.117.2921
extensions include set mobile ad hoc network routing protocols implementation bsd arp protocol mac layer radio propagation model 
included mechanisms model node mobility precomputed mobility patterns fed simulation run time 
refer reader information extensions :10.1.1.117.2921
noted modifications simulator described minor bug fixes necessary complete study :10.1.1.117.2921
results network configuration consisting tcp reno delayed acknowledgments ip wireless network routing provided dynamic source routing dsr protocol implementation bsd arp protocol resolve node addresses mac addresses neighboring nodes 
choice dsr routing protocol primarily availability ns extensions time study initiated 
goal observe tcp performance presence mobility induced failures plausible network environment proposed mobile wireless ad hoc routing protocols sufficed 
frequently refer routing protocol paragraph brief primer dsr familiarize reader terminology characteristics 
dynamic source routing dsr protocol routing protocol mobile ad hoc networks developed researchers cmu :10.1.1.117.2921
dsr packet injected network contains routing header specifies complete sequence nodes packet forwarded 
route obtained source node route discovery 
node packet route initiates route discovery broadcasting route request 
request propagated network reaches node say knows route destination 
node sends route reply requester new route formed route node concatenated source route request 
limit far request propagated time live ttl field attached request unique request identifier 
node receives request seen lived time live drops request 
reduce number route discoveries node maintains cache routes learned 
node may learn route route discovery means snooping routes route replies data packets eavesdropping local broadcasts 
cache updated route error messages sent packet delivered route invalid 
route discovery protocol implemented cmu extensions ns phases local broadcast ring search followed propagating search 
ring search initiated hope route quickly neighbor cache 
route small amount time propagating search attempted 
fails protocol backs tries eventually giving route 
procedure repeats packets queued particular destination dropped queue route 
packet may dropped queue route prespecified amount time send buffer timeout interval default queue full new outgoing packets arrived 
route discoveries destination limited backoff retry procedure initiated destination packet 
regardless number packets waiting route destination route discovery procedure initiated 
route packet sent possibility route stale packet flight node mobility 
instance dsr uses mechanism called packet re route packet 
node detects link packet route broken sends route error message node generated packet route prevent sending packets route 
node attempts salvage packet checking cache see knows route packet destination 
node inserts new source route packet forwards route packet dropped 
chose keep parameters simulations identical exceptions :10.1.1.117.2921
discussion simulation setup 
network model consists nodes moving meter flat rectangular area random waypoint mobility model 
random waypoint model node picks random speed destination rectangular area travels destination straight line chosen speed 
node arrives destination picks destination continues onward 
node constant motion simulation 
nodes communicate identical half duplex wireless radios modeled commercially available wavelan wireless radios bandwidth mbps transmission radius 
simulation results average throughput scenarios patterns 
pattern generated randomly designates initial placement speed heading nodes simulated time 
pattern different mean speeds 
pattern different speeds sequence movements link failures occur 
speed node uniformly distributed interval gamma mean speed example consider patterns call node takes time move point point run take time traverse distance run execute exact sequence moves proportionally different rate 
details simulation setup part ii report :10.1.1.19.3122
performance metric performance study set single tcp connection chosen pair sender receiver nodes measured throughput lifetime connection 
throughput performance metric 
tcp throughput usually optimal due tcp sender inability accurately determine cause packet loss 
link tcp route breaks tcp sender may timeout reduce congestion window back retransmission timer 
route changes due host mobility detrimental impact tcp performance 
gauge impact route changes tcp performance determined upper bound tcp throughput called expected throughput 
actual tcp throughput obtained simulation compared expected throughput 
network topology fixed multi hop simulation 
describe expected throughput obtained 
simulated static network nodes nodes form linear chain containing gamma wireless hops shown topology fixed 
way tcp data transfer performed nodes ends linear number hops tcp throughput kbps hops throughput kbps tcp throughput fixed multi hop network varying length 
chain tcp throughput measured nodes 
nodes mac protocol medium access 
set tcp throughput measurements analogous performed gerla similar identical mac protocols 
presents measured throughput function number hops 
observe throughput decreases rapidly number hops increased stabilizes number hops large 
trend similar reported 
refer reader detailed explanation reasons trend 
objective measurements determine expected throughput 
expected throughput function actual mobility pattern 
instance nodes adjacent move similar passengers car expected throughput tcp connection identical hop 
hand nodes different partitions network expected throughput 
general calculate expected throughput duration shortest path sender destination contains hops 
denote throughput obtained linear chain hops 
nodes partitioned consider number hops 
expected throughput calculated expected throughput course equal duration tcp connection existence 
actual throughput may equal expected throughput number reasons 
instance underlying routing protocol may shortest path sender destination 
formulation expected throughput take account performance overhead determining new routes route failure 
despite limitations expected throughput serves reasonable upper bound actual performance may compared 
comparison provides estimate performance degradation caused host mobility ad hoc networks 
measurement tcp reno throughput mean speed tcp throughput kbps expected actual comparison measured throughput expected throughput 
sample number tcp throughput kbps comparison sample measured throughputs points 
tcp reno throughput single connection mobile ad hoc network 
reports actual throughput tcp reno averaged runs expected throughput averaged runs function mean speed movement 
note expected throughput independent speed movement 
equation speed increased values smaller ratio remains 
expected throughput mobility pattern calculated equation independent speed 
intuition suggests speed increased route failures happen quickly resulting packet losses frequent route discoveries 
intuitively tcp throughput monotonically degrade speed increased 
throughput drops sharply mean speed increased mean speed increased throughput averaged runs slightly increases 
counter intuitive result 
explain plots throughput mobility patterns mean speeds simulations patterns sorted order throughputs 
observe certain mobility patterns throughput increases speed increased 
section explain anomaly 
provides different view tcp throughput measurements 
plot actual throughput versus expected throughput mobility patterns 
graphs correspond different average speeds movement 
expected throughput upper bound points plotted graphs diagonal line slope 
actual throughput closer expected throughput corresponding point graph closer diagonal line vice versa 
observations expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed comparison actual expected throughput mobility patterns 
ffl speed points may located near far diagonal line speed increased points tend move away diagonal signifying degradation throughput 
show tcp optimization cluster points brought closer diagonal 
ffl hand speed certain mobility patterns achieve throughput close zero mobility patterns mean speed able achieve higher throughput 
ffl high speeds mobility patterns result high throughput close expected throughput instance see points close diagonal line 
occurs mobility patterns despite moving fast rate link failures low discussed earlier nodes move link break independent speed 
section attempts provide explanations observations data figures 
mobility induced behaviors section look examples mobility induced behaviors result unexpected performance 
measured throughput tcp connection function interaction mac dsr routing protocol tcp congestion control mechanisms 
plausible explanations observation 
observation report explanation able confirm measured data 
mobility patterns yield low throughput observed scenario loss tcp data acknowledgment packets due route failures results zero throughput example acknowledgments received tcp source duration tcp connection expected throughput mobility pattern consideration kbps 
scenario tcp source sink nodes initially hops apart shown stay hops seconds second simulation 
seconds network partitioned source sink nodes different partitions 
time spend different partitions shown intervals distance hops zero means possible path exists tcp source sink 
condensed version simulation packet trace scenario shown 
trace obtained node tcp source node tcp sink 
table column lists event type denotes packet sent denotes packet received denotes measure throughput amount data acknowledged sender 
time seconds distance hops distance hops tcp source sink duration run example 
average node speed time secs node seqno pkt tcp tcp tcp tcp ack ack tcp tcp tcp tcp tcp arp tcp packet trace run experienced zero throughput 
packet dropped 
column lists reason packet dropped means routing protocol find route arp means arp protocol failed locate mac address means simulation finished 
node seqno pkt columns report node event occured tcp sequence number packet depicted event type packet respectively 
soon packet sent source link break occurs tcp route causes partition network hop interval shown 
partition causes packet dropped routing protocol time seconds 
eventually tcp sender node times retransmits packet time 
second attempt packet reach destination node immediately sends acknowledgment 
ack sent stale cached route exist anymore links route broken acknowledgment dropped 
remaining attempts retransmit packet fail due stale cached routes see rows 
tcp sender unable receive acknowledgment receiver 
anomaly throughput increases speed increased example discussed section tcp throughput improves factor speed increased scenario consideration tcp source sink able reach time spent time hops away 
short durations time nodes different partitions network nodes hops away 
characteristics tcp connection source sink shown shows distance hops source sink duration connection 
axis shown normalized time reflect fact pattern constant regardless node speed mentioned section 
shown quarter duration tcp connection distance source sink nodes initially fluctuates rapidly hops slowly converges hop remainder quarter 
followed second quarter gradual separation fluctuation hops including brief interval time network partitioned mark 
half duration nodes hops away 
shows data packets sent tcp source run graphs show results runs mean node speeds respectively 
mentioned earlier sequence moves node identical run graph run graph 
difference distance covered node say time takes time cover 
analogous movie time taken show number frames rate takes half time show rate 
instance sequence frames mobility pattern shown 
discussion run routing protocol able maintain forward reverse routes initial instability resulting initial throughput 
variations throughput shown variations rate packets sent due distance hops nodes 
gradual change distance hops hops mark results tcp backoff connection recovers 
details packet activity moment initial backoff occurs shown figures 
leading loss mark forward reverse routes different 
mark forward route breaks link source hop route due mobility 
backward route exists outstanding acks delivered triggering queuing full window source 
appears mark burst packets 
response route failure routing protocol source finds alternate hop route cache delivers full window node new route 
route stale third node route drops half packets mark failed attempt sends route failure time normalized distance hops distance hops tcp source sink mobility pattern example 
axis normalized reflect fact pattern constant regardless node speed simulation duration 
time seconds mean speed time seconds mean speed packets sent pattern different mean node speeds showing throughput increases increase speed 
time seconds sequence number packet sent packet recv ack recv packet dropped detailed packet plot showing moment tcp enters repeated backoff run 
packet sent packet recv indicates time packet indicated sequence number sent source arrived destination respectively ack recv indicates time acknowledgment received sender indicated sequence number packet dropped indicates time packet indicated sequence number dropped 
packet source shown 
drops half packets arrive mark buffered previous node interface 
mark tcp source times retransmits route finds cache 
time packet ack successful round trip delayed route attempts intermediate nodes 
due salvage attempts source searches new route packet route discovery exhausting route cache 
chooses replies receives sends packet new route 
quickly dropped new route stale point source sink hops away 
similarly subsequent timeouts stale routes result packet loss source sink hops distance 
exception occurs mark retransmitted packet sent small window network partitioned lost 
discussion run shares characteristics slower run results higher throughput retransmission late pattern mark succeeds re establishing flow packets spite poorer performance pattern 
initially routing protocol unable maintain route initial instability resulting tcp backoff seen gap seconds 
retransmission mark results valid forward reverse routes salvage attempts 
throughput degrades repeated route failures induce packet losses causing tcp source timeout backoff 
loss occurs point pattern speeds mark mark point nodes gradually moving apart 
run packet flow re established pattern mark route retransmitted packet nodes converged hop 
success second run twice throughput run 
summary observations section summary effects mobility tcp performance observed previous examples experiments 
previous examples clear characteristics routing protocol significant impact tcp performance 
notable problems caused stale route caching 
relatively slowly changing topologies inability routing protocol recognize stale routes resulted repeated route failures 
furthermore allowing intermediate nodes reply route request routes cache delayed route discovery prevented propagation route request destination 
intermediate nodes frequently returned stale routes 
believe problem potentially solved tweaking route cache timeout dynamically depending node observed route failure rate 
alternatively replying caches mean mobility rate throughput percentage expected cache cache comparison tcp performance route replies caches 
turned altogether 
startling improvement performance shown 
results single tcp connection uncongested network 
network multiple connections additional routing traffic introduced caching significantly degrade tcp performance 
interesting effect routing protocol behavior respect mobility observed second example 
fact runs failed point mobility pattern raised questions characteristic pattern causing difficulties routing protocol 
inspection learned point failure tcp source sink nodes passing opposite directions crossing pattern 
approach routing protocol able easily maintain route shortening existing route 
cross diverge routing protocol fails successfully lengthen route 
implementation dsr relies append hop new route 
unfortunately caching stale routes fails deliver stranded packets stale routes returned source neighbors delays ability find valid route tcp repeatedly timed 
intuition suggests problem unique dsr problem reactive protocols 
metric routing protocol performance measure ability recognize optimal routes quickly adjust existing route albeit non optimally 
problem observed delays caused large backoff retransmission route requests 
dsr route request generate reply requester times retransmits request 
timeout results exponential backoff fixed maximum value 
value large route requests occur infrequently recognize available routes time prevent tcp retransmission timer backing large value 
obvious tradeoff advantages rapid route discovery extra congestion induced propagation frequent route requests studied carefully suitable value determined 
observations suggested augmenting tcp ip better improve routing protocols mobility effectively masked 
clearly extensive modifications upper layer protocols undesirable routing protocol react quickly efficiently tcp disturbed desirable solution 
regardless efficiency accuracy routing protocol network partitioning delays occur hidden 
section analyze simple modifications tcp ip provide tcp mechanism recognize mobility induced delays losses occur take appropriate action prevent invocation congestion control 
tcp performance explicit feedback section analysis explicit feedback performance tcp dynamic networks 
explicit feedback new proposed technique signaling congestion ecn corruption due wireless transmission errors eln link failures due mobility tp tcp :10.1.1.113.2393
interest section analyzing performance refer explicit link failure notification elfn techniques 
tcp studies similar idea evaluation ad hoc network 
black box include evaluation routing protocol 
objective elfn provide tcp sender information link route failures avoid responding failures congestion occured 
different ways elfn message implemented 
simple method host unreachable icmp message notice tcp sender 
alternatively routing protocol sends route failure message sender notice piggy backed message 
approach took analysis 
modified dsr route failure message carry payload similar host unreachable icmp message 
particular carries pertinent fields tcp ip headers packet notice including source destination addresses ports tcp sequence number 
addresses identify connection packet belongs sequence number provided courtesy tcp sender 
tcp response notice disable congestion control mechanisms route restored 
involves different issues specific actions tcp takes response elfn tcp determines route restored 
simple protocol 
tcp source receives elfn disables retransmission timers enters stand mode 
stand packet sent periodic intervals probe network see route established 
ack received leaves stand mode restores retransmission timers continues normal 
study elected packet probing explicit notice signal route re established 
see achieved protocol studied variations parameters actions measured effects performance 
particular looked ffl variations length interval probe packets 
ffl modifications rto congestion window restoration route 
ffl different choices packet send probe 
results studies 
stated curve mean throughput different mobility patterns earlier 
analogue results simulations elfn probe interval 
clearly elfn improved throughput speeds evidenced proximity measured pattern throughputs expected throughput line 
tighter clustering points suggests elfn techniques improves throughput patterns dramatically increasing 
shows throughput percentage expected throughput varying probe intervals 
results apparent throughput critically dependent time probe packets 
increasing time probes delays discovery new routes length interval 
surprise probe interval large throughput degrade standard tcp shown results probe intervals 
intuitively probe interval small rapid injection probes network cause congestion lower throughput 
fixed interval choosing interval function rtt judicious choice 
sensitivity throughput interval size function chosen carefully 
expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed expected throughput kbps measured throughput kbps mean speed pattern performance elfn probe interval 
mean speed throughput percentage expected elfn elfn elfn elfn elfn base tcp performance comparison varying probe intervals 
mean speed throughput percentage expected elfn elfn rto elfn base tcp performance comparison different window rto modifications response elfn 
addition varying probe intervals looked performance advantages adjusting congestion window retransmission timeout rto failed route restored 
results shown 
elfn represents case changes tcp state elfn 
tcp state congestion window rto route restored elfn received 
elfn represents case congestion window set packet route restored rto elfn represents case rto set default initial value simulations window set route restored 
adjusting window little impact results 
believed due fact optimal window bandwidth delay product network simulated relatively small number packets takes round trips ramp optimal window failure 
altering rto significant impact throughput 
suspect due combination factors probably caused frequency routes break coupled arp implemented silently drop packets 
restored route immediately breaks results failed arp lookup sender timeout 
length timeout take occurances dramatically affect performance 
supposition true reason unknown 
intend explore 
mean speed throughput percentage expected elfn lowest rcvd elfn base tcp performance comparison different choices probe packet 
took brief look impact choice probe packet performance shown 
considered possibilities send packet congestion window elfn retransmit packet lowest sequence number signaled lost received lowest rcvd elfn 
approach intuitive similar approach taken tp 
second approach chosen optimistic thinking packets window get route restored quickly packet sequence flight 
shown results approach impact whatsoever 
suspect fact routes broken rarely restored quickly 
addition shown section presence different forward reverse routes equalizes approaches forward link breaks packets get break acknowledged reverse channel 
lowest sequence number packets lost happen window 
related routing important problem mobile ad hoc networks researchers explored routing protocols environment :10.1.1.24.4120
researchers considered performance tcp multi hop networks 
gerla investigated impact mac protocol performance tcp multi hop networks 
proposed tcp feedback tcp protocol uses explicit feedback form route failure re establishment control packets 
performance measurements simple network link sender receiver failed recovered exponential model 
routing protocol simulated 
looked space communications protocol specifications suite protocols designed committee space data systems satellite communications 
tp handles link failures explicit feedback form control message protocol messages suspend resume tcp source route failure recovery 
performance measurements focused link asymmetry corruption hop wireless networks common satellite communications 
investigated effects mobility tcp performance mobile ad hoc networks 
simulation noted tcp throughput drops significantly node movement causes link failures due tcp inability recognize difference link failure congestion 
point clearer presenting specific examples resulted zero throughput resulted unexpected rise throughput increase speed 
introduced new metric expected throughput provides accurate means performance comparison accounting differences throughput number hops varies 
metric show explicit link failure notification elfn significantly improve tcp performance gave performance comparison variety potential elfn protocols 
process discovered surprising effects route caching tcp performance 
mean speed throughput percentage expected rto elfn base tcp performance comparison presence traffic 
intend continue study looking performance elfn congested networks 
initial results shown suggest similar performance benefits expected congested networks uncongested network 
shows comparison throughput base tcp reno elfn modifications rto congestion window described section 
intend study performance elfn protocols effects mobile ad hoc routing protocols tcp performance 
balakrishnan katz explicit loss notification wireless web performance ieee globecom internet mini conference sydney oct 
balakrishnan padmanabhan seshan katz comparison mechanisms improving tcp performance wireless links acm sigcomm stanford ca aug 
balakrishnan padmanabhan katz effects asymmetry tcp performance proceedings ieee mobicom budapest hungary pp 
sep 
broch maltz johnson hu jetcheva performance comparison multihop wireless ad hoc network routing protocols acm ieee int :10.1.1.117.2921
conf 
mobile computing networking pp 
oct 
broch johnson maltz dynamic source routing protocol mobile ad hoc networks :10.1.1.117.2921
internet draft ietf manet working group dec 
caceres iftode improving performance reliable transport protocols mobile computing environments ieee journal selected areas communications vol 
june 
raghunathan venkatesan prakash feedback scheme improving tcp performance ad hoc wireless networks proceedings international conference distributed computing systems amsterdam 
committee space data systems space communications protocol specifications transport protocol tp september 
corson ephremides distributed routing algorithm mobile wireless networks acm wireless networks vol 
pp 

das sivakumar routing ad hoc networks virtual backbone manuscript 
miller travis tcp extensions space communications proceedings mobicom 
fall varadhan ns notes documentation 
lbnl august 

cs berkeley edu ns 
floyd tcp explicit congestion notification acm computer communication review vol 
pp 
oct 
gerla tang bagrodia tcp performance wireless multi hop networks proceedings ieee wmcsa appear new orleans la feb 
haas pearlman zone routing protocol zrp ad hoc networks internet draft mobile ad hoc network manet working group ietf aug 
holland vaidya analysis tcp performance mobile ad hoc networks part ii simulation details results tech :10.1.1.19.3122
rep texas university dept computer science ms texas university college station tx february 
johnson maltz broch dynamic source routing protocol mobile ad hoc networks internet draft mobile ad hoc network manet working group ietf mar 
perkins royer ad hoc demand distance vector aodv routing internet draft mobile ad hoc network manet working group ietf aug 
ramanathan steenstrup survey routing techniques mobile communication networks mobile networks applications pp 

sivakumar sinha bharghavan core extraction distributed ad hoc routing cedar specification internet draft mobile ad hoc network manet working group ietf oct 
toh novel distributed routing protocol support ad hoc mobile computing wireless personal communication jan 

