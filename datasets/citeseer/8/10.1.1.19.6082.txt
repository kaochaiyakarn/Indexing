goals business rules central design mechanism gil regev alain wegmann institute computer communication application ica swiss federal institute technology epfl ch lausanne switzerland epfl ch gil regev alain wegmann epfl ch current uml behavioral requirements focus specification cases 
business rules seen important part requirements considered separate entity best attached cases 
authors recognized need include business rules cases concrete guidelines 
propose technique uses business rules driving mechanism design process 
explicitly defining business rules collaborations group actors able find policies governing behavior different actors involved 
decide consider actors system designed policies enable define goals system 
goals implemented cases governed business rules system 
considering system set parts loop back process different organizational level 
aim enterprise description identify actions required policies governing communities specified 
actions concerned placing fulfilling obligations requesting delivery making delivery permitting forbidding actions rejecting access system facilities part customers organizations employees entities goals strive satisfy 
drive satisfy explicit implicit goals actors constrained rules usually called business rules requirements engineering 
goals business rules implicit organizational behavior 
words don know pursue goals pursue way 
reasons existence vanished 
development team spent making goals rules explicit explained rm odp 
goals seen part functional requirements business rules generally viewed part non functional requirements 
business rules greatly influence functional requirements way system behaves 
noted business rules management prescriptions transcend guide day day business decisions 
naturally product build conform business rules business rules guide decisions organization couldn guide development team way design product insuring product conforms rules 
business rules directly influence way product behaves functions normally considered outside functional requirements 
business rules defined outside functional requirements mapped insure product conforms rules 
kilov states business rules explicitly stated implicitly formalized application code 
say functional requirements cases 
business rules diluted narrative exceptions section case 
business rules documented usually list rules cases external document 
better list help understanding rule influences behavior 
main reasons design systems goals rules 
goals rules central guiding decisions taken design ensuring system fulfils purpose 

rules subject change organization specified changes due internal changes changes environment 
specific binding business rules goals able changes behavioral requirements systems build rules change 
propose modeling approach integrates business rules behavioral requirements 
approach considers goals actors business rules govern behavior central mechanism design system 
approach theories principles fields systems theory activity theory requirements engineering software engineering 
problem definition behavioral requirements uml heavily rely cases 
case defined uml follows case construct define behavior system semantic entity revealing entity internal structure 
case specifies sequence actions including variants entity perform interacting actors entity 
definition doesn take account fact systems build need help stakeholders achieve certain number goals 
explicitly stating goals stakeholders easy focus details interaction actors 
focusing interactions difficult formulate alternative design choices weigh pros cons 
usually dive idea refining running product challenging reasons selecting idea implement 
explicit goal statement difficult rules constrain achievement goal explicit 
lose dimension design things way 
frequent answer done way suitable answer build new product 
approaches defined years overcome shortcomings cases seen sequence interactions 
essential cases capture essence interactions user system 
defining essential actions individual steps done traditional cases essential cases help developers focus users goals formulate better ways achieve 
cockburn adds essential cases dimension protecting stakeholders interests 
supporting actors fulfilling goals protecting stakeholders interests main reason enterprise information system existence 
approaches focus goals don integrate business rules cases making difficult understand attribute certain goals different actors 
argues case narratives flow events uml people say missing essence case cases business rules defines problem doesn formulate detailed solution embedding business rules cases 
important link business rules goals achieved 
problem cases modeling system implicit entity making awkward situations multiple systems interact 
catalysis method defines joint actions bring multiple actors called participants seen collaborating achievement common goal 
joint actions defined catalysis change state number participant objects stating happens attributing responsibility participants 
joint actions means defining essence collaboration multiple participating actors 
joint actions construct defining behavior participants goals 
goal participant joint action potentially different goals participants 
joint action name convey participants goal named noun representing goal 
simple example sale 
vendor goal sell customer goal buy 
joint action exist context buyer vendor forces modeler describe sell buy sale 
doing define collaboration point view participants loose view goals different participants 
approaches worth mentioning regard goals business rules 
goal oriented modeling attempts bridge non functional functional requirements defining goals soft goals instance sub goals drive design process 
little said fact goals sub goals result specific business rules 
complementary approach policy driven design views functional requirements driven policies 
design approach takes dual stance proposing consider interaction goals policies main design driver 
theoretical foundations finality greek telos logos reason explanation purpose described final causality contrast explanation efficient causes 
human conduct insofar rational generally explained ends pursued alleged pursued human thought tends explain behaviour things nature analogy pursuing ends designed fulfill purpose devised mind transcending nature 
celebrated account aristotle declared full explanation consider material formal efficient causes final cause purpose thing exists produced 
encyclopedia britannica von discusses different types finality concluding true finality meaning actual behavior determined foresight goal characteristic human behavior human organizations embody purpose goal seeking entities 
organizations systems sub systems having potential finality 
may levels goal oriented sub systems 
goal generally sub goal goal inscribed finality actor 
see characteristic system helps identify steps needed achieve system goal 
design systems critically important explicitly state purpose system actors organization system operate 
define systems subsystems follows system consider part bigger system bigger system purpose 
implications system design specify requirements system need consider purpose system designing purpose organization operate purposes actors interacting system 
constructivism implications methodologies talk need discover requirements intentions goals business rules view discovering synonyms adequately represent requirements elicitation process 
discovering requirements worldview implies requirements world need uncovered 
extent true assuming constructivist worldview say requirements discovered created process elicitation 
furthermore different stakeholders build understanding needs built process building system create new system requirements may existed 
implications act modeling system modify system 
importance guiding decisions goals stakeholders business rules 
constructivism holds different people develop different models world 
extending principle domain systems say system view environments 
turn leads different goals pursued different systems 
implications design approach need define view actor sub system system interest understand goals constraints operates 
activity theory activity theory abbreviated gives framework modeling human behavior individual collective context activity 
activity seen occurring main entities subject object community 
subject individual collective transforms object conscious purposeful actions desired outcome help tools 
tools said mediate relationship subject object 
relationship community subject mediated rules community object mediated division labor 
activity purpose outcome transformation object activity 
external view activity 
see 
rules tools subject object community division labor fig 

external view activity 
adapted 
uml model 
outcome rules mediate relationship community subject rules imposed community 
actors internal rules constrain behavior tools community 
view system tool see support transformation object activity outcome defined subject community relationship mediated rules 
system embody rules supporting production outcome 
table freely translates concepts activity theory uml vocabulary 
uml subject actors community stakeholders tools system object done rules business rules division labor decomposition outcome outcome table 
activity theory concepts translated uml internal view activity describes relation actions operations viewing degree behavior internalized 
activity seen having motive may long term actions immediate goals result conscious planning 
operations hand seen internalized actions triggered specific conditions 
recognizes boundaries activity action operation fuzzy 
face problems environment operation may get promoted level action activity continually learning transform activities actions operations 
activity motive action goal operation condition fig 

internal view activity described activity theory adapted activity theory gives social psychological view activity 
rm odp section see technical discussion activities 
activity theory helps introduce rules goals discussion activity missing rm odp view 
rm odp business rules organization response constraints imposed environment external stakeholders internal culture structure 
seen discussion activity theory actor activity constrained business rules imposed actor actor environment stakeholders interacting systems actor internal rules 
policy defined rm odp set rules related particular purpose 
rule expressed obligation permission prohibition 
note policy constraint 
policies represent empowerment merriam webster dictionary wisdom management affairs management procedure primarily material interest definite course method action selected alternatives light conditions guide determine decisions high level plan embracing general goals acceptable procedures especially governmental body policy suitable synonym term business rule 
shows policies business rules actions intimately related choice policy modeling artifact 
rm odp defines concept activity single headed directed acyclic graph actions activity seen atomic concept having possible outcome devoid internal steps case simply refer activity 
activity seen set interacting activities call composite activity internal interacting activities called component activities 
specification activity analogous specification object atomic object composite object set interacting component objects 
shows dual views object vs composite object activity vs composite activity 
component activity fig 

rm odp activities activity outcome composite activity branching component activity component activity component object object composite object component object component object view transformation atomic view composite view concept activity object done considering constraints govern concept 
policies governing activity referred activity performed 
words execution rule triggered activity related performed 
policies viewed general prescription check log send alert deny authorize means entity needs perform sub activity guarantee policies enforced 
gives component activities comprising graph defined rm odp 
terminology approach modeling object activity atomic view want consider view composite view want refine 
model activity atomic object refer case describes behavior object system interacting environment 
model activity set interacting component objects refer collaboration 
accordance uml definition collaboration set participants relationships meaningful set purposes models distinguish types policies 
actor policies attached individual actors cases community policies attached collaborations 
goal policy driven design recurrent types tasks perform design systems 
take object atomic object develop view composite object 
includes steps identify goals community actors community policies govern activities engage order achieve goals 
actors component objects object interest 
transform community policies goals actor policies goals 
doing understand things system 

take activity atomic activity develop view composite activity 
decision system 
done activity component object activity composite object 
complete model combination models produced task 
complete model defines system 
models trace stereotype show connections models 
case goal outcome actor policies system interest case collaboration goal outcome community policies trace fig 

goal policy driven design system interest collaboration actor actor trace trace trace trace trace view actor case view actor case case case case goal outcome actor policy actor actor trace trace view actor case view actor shows approach call goal policy driven design 
order understand walk construction model 
having walked construction diagram model interesting reader come back see relationships diagrams expressed trace relationships 
trace case case case actor actor collaboration goal outcome community policies fig 

organization collaboration system interest collaboration actor actor modeling organization usually begins definition different actors organization collaborations involved 
shows organization collaboration actors having goal policies governing collaboration 
notice customer typically viewed inside organization convenient way forgetting goals 
collaboration goal governed set rules call community policies 
seen discussion catalysis joint actions considering collaboration concept external actors prevents modeler considering individual actors goals 
order view actors goals need view collaboration point view actors 
take decision actors system 
move view actor considered part collaboration 
transformation allows name activities cases actor actor vocabulary 
distribute collaboration different actors fact define set cases actor 
cases represent actor part collaboration 
set actors cases represent collaboration 
community policies guide collaboration exist format actor case 
call actor policies 
say actor policies trace community policies 
view actor case case goal outcome actor policy actor fig 

organization set interacting actors view actor case actor important note transformation changed nature collaboration simply described context actor 
actor centric view equivalent collaboration centric view 
case traditionally seen system centric description system set actors 
translates representation accept view participant collaboration system interest 
generalization way usually think system computer system 
approach system actor 
system case describes system behavior interactions environment 
write case system environment comprised users systems interacts 
write case user user system system people comprise environments 
refine actor case activity composite activity 
refinement done considering case policies impose constraints execution case defining actor sub goals carried component activities 
types policies policies impose invariants system security related policies access control obligation policies cases policy seen need entity take action activity policy relates executed 
example access control policy says people allowed access information viewed goal entity system check people credentials authorize deny access 
policy guarantees invariant atm customers obtain cash available account translated goal entity atm verify amount requested customer exceed amount available account 
view actor case case case fig 

actor composite activity actor view actor case case case actor approach just described appears purely top process 
bottom process better mixed mode 
know people start modeling level organizational hierarchy probably expand downward upward keep modeling learning model 
approach supports mixed process enabling modelers ask goals associated policy actor needs implement actor goal defines policy upper organizational level 
ask kind questions diagram 
instance ask organization engaged collaboration collaboration goal 
generally find model see organization doing 
activity doing expressed case goal actor policies 
diagram represents instance enterprise topmost level goal probably resemble mission statement 
interesting note outcome case may match goal outcome enterprise eventually demise goal 
case goal outcome actor policies system interest case fig 

organization activity example apply approach example store 
highest organizational level simply say store exists 
goal continuing exist 
governed actor policy says sell exchange money 
identify actors store customer vendor related sale collaboration 
collaboration defined post condition goods delivered customer exchange money 
community policies guarantee fairness exchange customer pay goods goods delivered customer defining sale context actors define cases customer buy vendor sell customer buy actor policies customer pay goods 
customer accept delivered goods vendor sell actor policies vendor deliver goods 
vendor get paid sub goals customer pay goods receive delivered goods sub goals vendor get paid deliver goods example shows defining goal collaboration vendor customer terms goals vendor customer define policies constrain actors 
policies gave sub goals actor 
evidently go find subgoals say pay take delivery 
noted weinberg heuristics don tell approach exception 
smallest sub goals produce behavioral model probably specified unusable 
useless specify sub goals detailed example object needs created important model understandable 
modeler know depending goals constraints 
goal buy goods outcome goods delivered customer actor policies 
customer pay goods 

customer accept delivered goods goal outcome actor policies goal outcome actor policies fig 

store example goal deliver goods money outcome goods delivered customer exchange money community policies 
customer pay goods 

goods delivered customer view customer buy store exist store sale customer vendor trace vendor trace view vendor view customer trace trace view vendor trace trace pay take delivery vendor sell get paid deliver goods goal continue exist outcome store exist actor policies exchange goods money customer customer goal sell goods outcome money received exchange goods actor policies 
vendor deliver goods 

vendor get money goal outcome actor policies goal outcome actor policies described design approach dual consideration actors goals business rules 
showed defining actors goals context enables formulate policies govern activities related achievement goals 
rules turn help formulate new goals implemented actors 
merged seemingly separate domains goals business rules 
result integrated process enables development teams produce models take account actors goals constraints help defining goals tracing goals reasons actors may formulating goals 
knowing relationship exists goals rules may help challenge way things goals pursue rules goals change 
defined refined approach case studies point sale video store demonstrates feasibility value making design decisions explicit 
noticed case tool support significantly help application approach complex systems 

bock goal driven modeling journal object oriented programming 
september vol 

cockburn writing effective cases 
addison wesley reading ma 
constantine lockwood software 
acm press ny ny 
souza wills objects components frameworks uml catalysis approach 
addison wesley reading ma 
capturing business rules 
ambler constantine unified process inception phase best practices implementing 
cmp books lawrence kansas 
iso iec itu open distributed processing basic model part foundations 
standard recommendation 
jacobson booch rumbaugh unified software development process 
addison wesley reading ma 
kilov business specifications key successful software engineering 
upper saddle river nj 
activity theory applications information systems research design 
nissen klein hirschheim 
eds 
information systems research arena north holland amsterdam pp 


lakoff women fire dangerous things categories reveal mind 
chicago press 
applying uml patterns 
prentice hall upper saddle river nj 
mylopoulos chung yu object oriented goal oriented 
communications acm january vol 



le la mod des syst mes complexes 
paris 
robertson robertson mastering requirements process 
addison wesley reading ma 
sloman policy driven management distributed systems 
journal network systems management plenum press 
vol 

omg unified modeling language specification 
version www omg org 
von general system theory 
george ny ny 
wegmann role roles case diagrams 
lecture notes computer science springer verlag berlin heidelberg new york pp 

wegmann conceptual representation complex systems rm odp ontology 
epfl dsc technical report 
weinberg general systems thinking 
wiley sons ny ny 
