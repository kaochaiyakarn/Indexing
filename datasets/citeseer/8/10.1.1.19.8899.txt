modeling context information pervasive computing systems karen henricksen indulska rakotonirainy school information technology electrical engineering university queensland st lucia qld australia karen itee uq edu au 
computing pervasive nature applications change accordingly 
particular applications flexible order respond highly dynamic computing environments autonomous reflect growing ratio applications users corresponding decline attention user devote 
applications context aware 
facilitate programming applications infrastructure required gather manage disseminate context information applications 
concerned development appropriate context modeling concepts pervasive computing form basis context management infrastructure 
model overcomes problems associated previous context models including lack formality generality tackles issues wide variations information quality existence complex relationships context information temporal aspects context 
motivation emergence new types mobile embedded computing devices developments wireless networking driving spread domain computing workplace home office facets everyday life 
trend lead scenario termed pervasive computing cheap interconnected computing devices ubiquitous capable supporting users range tasks 
widely acknowledged success pervasive computing technologies require radical design shift sufficient simply extrapolate existing desktop computing technologies 
particular pervasive computing demands applications capable operating highly dynamic environments placing fewer demands user attention 
order meet requirements pervasive computing applications need sensitive context 
context refer circumstances situation computing task takes place 
reported funded part operative research centre program department industry science tourism commonwealth government australia 
mattern naghshineh eds pervasive lncs pp 

springer verlag berlin heidelberg henricksen indulska rakotonirainy currently programming context aware applications complex laborious 
situation remedied creation appropriate infrastructure facilitates variety common tasks related contextawareness modeling management context information 
addresses issue presenting model context pervasive computing able capture features diversity quality complex relationships context information 
structure follows 
section examines nature context information pervasive computing environments order determine requirements model context satisfy 
section characterizes related field contextawareness evaluates ability support requirements outlined section 
section describes context modeling approach section presents concluding remarks outlines topics research 
defining context term context poorly understood overloaded wide variety meanings 
various definitions context put forward literature offer clues properties interest modeling context 
section explore characteristics context information case study basis discussion 
case study context aware communication compelling uses context communications applications 
context aware communication widely researched reasonably understood 
discuss variation application order illustrate nature context information required pervasive computing applications return case study order illustrate context modeling concepts 
bob finished reviewing alice wishes share comments 
instructs communication agent initiate discussion alice 
alice meeting student agent determines behalf interrupted 
agent recommends bob contact alice email meet half hour 
bob agent consults schedule realizing available time suggested alice agent prompts bob compose email workstation currently dispatches instructions alice agent 
minutes alice supervisor charles wants know report requested ready 
alice agent decides query needs answered immediately suggests charles telephone office number 
charles agent establishes call mobile phone charles carrying 
modeling context information pervasive computing systems agents scenario rely information participants communication devices channels 
participant require knowledge participant activities current planned devices owns currently able 
know relationships exist people supervises works 
agents require information communication channels participant devices required channel 
information collected range sources 
information explicitly supplied users concerned relationships people ownership devices communication channels 
information may obtained hardware software sensors proximity users computing devices 
information may derived multiple sources example user activity may partly determined information stored user diary partly derived related context user location 
result context information exhibits diverse array characteristics discuss 
characteristics context information section number observations nature context information pervasive computing systems 
determine design requirements model context 
context information exhibits range temporal characteristics 
context information characterized static dynamic 
static context information describes aspects pervasive system invariant person date birth 
pervasive systems typically characterized frequent change majority information dynamic 
persistence dynamic context information highly variable example relationships colleagues typically endure months years person location activity change minute 
persistence characteristics influence means context information gathered 
reasonable obtain largely static context directly users frequently changing context obtained indirect means sensors 
pervasive computing applications interested current state context example case study agents rely information current activity activities planned 
accordingly context histories past frequently form part context description 
context information imperfect 
second feature context information pervasive systems imperfection 
information may incorrect fails henricksen indulska rakotonirainy reflect true state world models inconsistent contains contradictory information incomplete aspects context known 
problems may roots number causes 
pervasive computing environments highly dynamic means information describing quickly date 
problem compounded fact frequently sources repositories consumers context distributed information supplied producers requires processing order transform form required consumer factors lead large delays production context information 
second context producers sensors derivation algorithms users may provide faulty information 
particularly problem context information inferred crude sensor inputs example person activity inferred indirectly context information location sound level 
disconnections failures mean path context producer consumer cut meaning part context unknown 
context alternative representations 
context information involved pervasive systems derived sensors 
usually significant gap sensor output level information useful applications gap bridged various kinds processing context information 
example location sensor may supply raw coordinates application interested identity building room user 
requirements vary applications 
context model support multiple representations context different forms different levels abstraction able capture relationships exist alternative representations 
context information highly interrelated 
case study relationships evident people devices communication channels example ownership devices channels proximity users devices 
obvious types relationships exist context information 
context information may related derivation rules describe information obtained pieces information 
case study person current activity may partially derived context information person location history past activities 
refer type relationship characteristics derived information persistence quality intimately linked properties information derived dependency 
context modeling management pervasive systems requirements having identified features context information pervasive systems address issue represent manage information 
modeling context information pervasive computing systems approach model context existing data modeling techniques field information systems store manage information database management system 
alternatively object modeling techniques commonly software engineers uml employed construct model context information support mapping model implementation object oriented programming language 
having explored approaches suggest natural appropriate describing context 
attempted model scenario section entity relationship model class diagrams uml experienced particular difficulties distinguishing different classes context information example static versus dynamic information sensed information versus information supplied users representing temporal error characteristics context expressing relationships dependencies 
uml constructs expressive provided er correspondingly cumbersome 
result experiences suggest appropriate approach modeling context information special constructs designed characteristics context mind 
section modeling approach 
related relatively new field context awareness concerned providing frameworks support abstraction context information sensors high level models context information queried context aware applications 
section review areas research examine shortcomings surveyed approaches 
context toolkit sensor architecture schmidt support acquisition context data sensors processing raw data obtain high level context information :10.1.1.41.2924
programming toolkit assists developers context aware applications providing components context widgets interpreters aggregators connected gather process context information sensors 
provides layered model context processing sensor output transformed cues undergo processing form context description comprising set values associated certainty measure estimates certainty value correct 
field context awareness largely ignores issues context derived sensors focuses modeling context information delivering information applications 
goals closer 
pioneering area carried schilit proposed dynamic environment servers manage disseminate context information environment environment represent person place community 
model context 
henricksen indulska rakotonirainy extremely simple context information maintained set environment variables 
cooltown project proposed web model context entity person place thing corresponding description retrieved url 
model relatively informal entity descriptions take form web pages may unstructured intended human application consumption 
context modeling approach proposed sentient computing project formal object modeling paradigm 
conceptual model context constructed language entity relationship model context information stored run time relational database 
gray salber model context aims support design activities associated context awareness 
model mainly concerned capturing meta information context describes features format representation context information quality attributes source transformation processes actuation means controlled 
model informal concerned supporting processes associated development context aware software including requirements analysis exploration design issues capturing context information format queried applications 
owl context service currently development ebling aims gather maintain supply context information clients 
tackles various advanced issues including access rights historical context quality extensibility scalability 
currently early research results published underlying modeling concepts clear 
context models exhibit number limitations 
lack formal basis required order capture context unambiguous way support reasoning various properties 
formal models underpin sentient computing approach context processing framework schmidt address characteristics context identified section 
additionally models restricted narrow classes context particular support sensed context information derivatives 
ignore temporal aspects context including need represent histories context information address context quality 
remainder model context addresses shortcomings 
modeling context information section presents collection modeling concepts accompanying graphical notation designed capture features context information relevant design construction pervasive systems applications 
modeling concepts provide formal basis representing reasoning properties context information identified section persistence temporal characteristics quality interdependencies 
modeling context information pervasive computing systems fig 

modeling scenario section sections modeling concepts incrementally starting fundamental modeling concepts building express complex aspects context 
return case study section discussion order illustrate modeling concepts example 
core modeling concepts modeling concepts founded object approach context information structured set entities describing physical conceptual object person communication channel 
properties entities name person identifier communication channel represented attributes 
entity linked attributes entities uni directional relationships known associations 
association originates single entity refer owner association participants 
associations viewed assertions owning entity context description correspondingly viewed set assertions 
remainder terms assertion association interchangeably 
provide graphical notation modeling concepts order allow context models specified diagrammatically 
notation takes form directed graph entity attribute types form nodes associations modeled arcs connecting nodes 
example case study section illustrate notation 
example model constructed entity types people communication devices communication channels 
entity type associated number attributes people associated names activities channels devices associated identifiers types 
addition associations entities attributes associations exist entities 
capture relationships henricksen indulska rakotonirainy association static association dynamic association sensed association derived association profiled association fig 

classification scheme context associations people works supervised people devices devices person authorized devices currently located person people communication channels channels belong user devices channels devices user requires order communication channel 
model shown captures types context information involved scenario describe characteristics information ideally known context aware applications developers 
sections address problem 
sections schemes classifying associations type structure 
section describes approach capturing dependencies associations section concerned characterizing imperfection context information 
classifying associations section recognized existence classes context information exhibit markedly different properties accordance persistence source 
distinction static dynamic context showed dynamic context exhibit wide range persistence characteristics linked means context information obtained 
section formalize observations scheme categorizing assertions context illustrated 
static associations relationships remain fixed lifetime entity owns 
context captured type association typically known high degree confidence example includes associations involving device channel types 
dynamic associations associations static 
classify source 
sensed associations obtained hardware software sensors 
frequently information inserted directly model straight sensor transformed way bring closer level abstraction required applications 
sensed context typically changes frequently consequently suffer problems staleness long lag time readings taken sensor time corresponding context information delivered client 
subject sensing errors arising limitations inherent sensing technology 
examples sensed context case study modeling context information pervasive computing systems association simple association composite association collection association alternative association temporal association fig 

structural constraints context associations user device location coordinates assume derived location sensing mechanisms gps receivers outdoors bats indoors 
derived associations obtained associations derivation function may range complexity simple mathematical calculation complex ai algorithm 
type context assumes properties class es information derived example derived context information obtained sensed information similar magnified persistence error characteristics 
addition derived context class typically suffers inherent limitations 
particular derivation functions liable draw incorrect imprecise result reliance crude inputs overly simplistic classification models 
example derived context case study located near relationship person describes set devices located nearby 
relationships type need modeled explicitly derived person examining location coordinates attribute device comparing location coordinates attribute person 
third class dynamic association captures profiled information information supplied users 
class information typically reliable sensed derived context longer lived suffer staleness users may neglect update information date 
examples profiled context include user names works supervised associations exist people 
main benefit classifying context information described reasoning information persistence quality possible 
example conflicts resolved favoring classes context reliable static followed profiled subject error sensed derived 
structural constraints associations context information vary simple atomic facts complex histories 
support different types context categorizing associations structure shown 
association simple entity participating owner association participates role 
example type association named association person 
henricksen indulska rakotonirainy fig 

modeling different association types case study association composite simple 
refine composite associations collection alternative temporal associations 
collections represent fact owning entity simultaneously associated attribute values entities example people may people may communication channels 
alternatives differ collections describe alternative possibilities considered logically linked operator operator 
example association type requires relationship channels devices 
classifying role alternative collection acquires semantics channel requires devices associated 
type association useful context model capture number different representations information described section sources context information supply contradicting information desirable capture different possibilities 
temporal association associated set alternative values attached time interval 
type association viewed function mapping point time unique value 
example user activity captured temporal association 
distinguish various different types associations discussed preceding section diagrammatically annotating association arcs shown 
modeling dependencies dependency special type relationship common context information exists entities attributes case associations associations 
dependency captures existence reliance association 
say associa modeling context information pervasive computing systems fig 

context model case study showing derivation dependencies tion dependson association iff change potential cause change 
derived association accompanied dependency dependencies exist independently derived associations 
example mobile device change usage network bandwidth influence battery life battery life dependson bandwidth 
importance capturing dependencies pointed 
knowledge dependencies inappropriate decisions context aware applications lead instability 
knowledge dependencies important context management perspective assist detection context information date 
model dependency dependson directed arc leading shown 
dependency qualified participation constraint limits pairs associations dependency applies 
capture derivation dependencies 
show engaged association links people activities dependent located association 
qualify association indicate associations types linked describe person person activity dependent person location person location 
similarly show set devices located near person dependent person location location devices 
modeling context quality section identified imperfection characteristics context information pervasive systems 
errors context information may arise henricksen indulska rakotonirainy result sensing classification errors changes environment leading staleness 
context information relied applications decisions user behalf essential applications means judge reliability information 
reason incorporate measures information quality model context 
need address varying quality context information widely recognized existing addresses problem adequate general way 
dey suggest ambiguous information resolved mediation process involving user 
considering potentially large quantities context information involved pervasive computing environments rapid rate context change approach places unreasonable burden user 
ebling describe context service allows context information associated quality metrics freshness confidence model context incomplete lacks formality 
castro defined notion quality measures accuracy confidence considers location information 
schmidt associate context values certainty measure captures likelihood value accurately reflects reality 
concerned sensed context information take narrow view context quality 
gray salber include information quality type meta information context model describe quality attributes coverage resolution accuracy repeatability frequency timeliness 
information model quality model formally defined intended support requirements analysis exploration design issues support development context model populated data queried applications 
quality modeling extensively researched information systems community 
modeling concepts borrow ideas wang describe quality model attributes tagged various quality indicators 
model support quality allowing associations annotated number quality parameters capture dimensions quality considered relevant association 
parameter described appropriate quality metrics represent precise ways measuring context quality respect parameter 
types quality parameters metrics relevant dependent nature association 
example quality information user location characterized accuracy measured standard error location system freshness determined time location information produced average lifetime information related user location 
hand quality assertion user activity described certainty information source supplied information measured probability estimate accuracy information source described probability value 
illustrate tagging associations quality parameters metrics 
modeling context information pervasive computing systems fig 

context model case study annotated quality parameters metrics associations concluding remarks explored characteristics context information pervasive systems described set context modeling concepts designed accommodate 
concepts case study section sufficiently generic capture arbitrary types context information support diverse range context aware applications 
currently process developing context management system founded modeling constructs 
system allow models described notation mapped little effort corresponding implementation models populated context information queried applications 
responsible range management tasks integration context information variety sources management sensors derived context detection conflicting information 
concurrently implementing context aware communication application described 
case study validate context modeling concepts hope implementation case study validate context management infrastructure 
aside implementation efforts envisage areas 
involve extension context modeling concepts order address key issues pervasive computing systems privacy distribution context information 
privacy model required order prevent henricksen indulska rakotonirainy abuses context information particularly personal information limiting dissemination 
similarly distribution model needed support appropriate partitioning replication context information pervasive systems 
model balance requirement globally consistent view context need timely retrieval continued access information periods network disconnection 

norman invisible computer 
mit press cambridge massachusetts 
henricksen indulska rakotonirainy infrastructure pervasive computing challenges 
informatik workshop pervasive computing vienna 
hong landay context communication information agent 
personal ubiquitous computing special issue situated interaction context aware computing 
schmandt messaging 
st international symposium handheld ubiquitous computing huc 

rvi context aware telephony wap 
personal technologies 
dey salber abowd context infrastructure smart environments 
st international workshop managing interactions smart environments 

schmidt advanced interaction context 
st international symposium handheld ubiquitous computing huc karlsruhe 
schilit theimer welch mobile applications 
usenix symposium mobile location independent computing 

kindberg people places things web presence real world 
technical report hpl hewlett packard labs 
harter hopper steggles ward webster anatomy context aware application 
mobile computing networking 

gray salber modelling sensed context design interactive applications 
th ifip conference engineering human computer interaction toronto 
ebling hunt lei issues context services pervasive computing 
middleware workshop middleware mobile computing heidelberg 
cheverst davies friday architecture effective support adaptive context aware applications 
mobile data management mdm hong kong china springer 
castro chiu muntz probabilistic room location service wireless networked environments 
ubicomp conference atlanta 
dey mankoff abowd distributed mediation imperfectly sensed context aware environments 
technical report git gvu georgia institute technology 
wang reddy kon quality data attribute approach 
decision support systems 
