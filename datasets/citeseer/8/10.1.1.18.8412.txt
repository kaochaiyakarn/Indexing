effect delays tcp performance andrei cellular systems development key words tcp delay gprs eifel 
contributions 
report long sudden delays data transfers uncommon gprs wireless wan 
long sudden delays lead spurious tcp timeouts unnecessary retransmissions 
second show new reno algorithm increases penalty spurious tcp timeouts aggressive tcp retransmission timer may trigger chain spurious retransmissions 
third test widely deployed tcp implementations recover spurious timeout notice severe problems recover 
discuss existing ways alleviate problems 

number nomadic users access internet wireless technology grows rapidly 
nowadays wireless wide area networks wan primary means nomadic users access data services 
advantages mobile computing introduces environment quite different fixed networks due scarce radio bandwidth intermittent connectivity 
data services provided wans allow low link speed error losses changing line rate variable delays additional challenges efficient data transport 
global system mobile communications gsm widely successful effort build wan system millions users europe worldwide 
gsm data high speed circuit switch data general packet radio service gprs data transmission services offered gsm 
popular internet applications including world wide web www file transfer protocol ftp email require reliable data delivery network 
transmission control protocol tcp widely transport protocol purpose traffic studies internet report dominant fraction traffic belongs tcp 
tcp designed tuned perform fixed networks key functionality utilize available bandwidth avoid overloading network 
nomadic users want run favorite applications built tcp wireless connection 
packet losses due andrei transmission errors high latency long sudden delays occurring wireless link may confuse tcp yield throughput far available line rate 
wireless networks try hide data losses sender performing link level retransmissions seamless mobility deep buffering inside network 
reliability comes cost variable delays data transmission create problems tcp 
optimizing tcp wireless environment active research area years attention paid ensure tcp implementations react long sudden delays sudden delays typical fixed networks 
rest organized follows 
section give background information tcp protocol list possible sources delays wans 
section describe reaction tcp large sudden delays 
section effect new reno algorithm tcp retransmission timer spurious tcp timeouts considered 
section test widely deployed tcp implementations recover spurious timeouts 
section discusses existing methods strengthen tcp spurious timeouts 

background tcp transmission control protocol tcp transport protocol internet 
tcp provides applications reliable byte oriented delivery data top internet protocol ip 
tcp sends user data segments exceeding maximum segment size mss connection 
byte data assigned unique sequence number 
receiver sends acknowledgment ack reception segment 
tcp acknowledgments cumulative sender information data acknowledged byte received 
tcp important property self clocking equilibrium condition arriving ack triggers transmission new segment 
data delivered tcp continuous way network lose duplicate re order packets 
arrived bytes number unacknowledged byte called order data 
response order segments tcp sends duplicate acknowledgments dupack curry acknowledgment number previous ack 
combination retransmission timeout rto sender side acks provide reliable data delivery 
retransmission timer set smoothed round trip time rtt variation 
rto backed exponentially unsuccessful effect delays tcp performance retransmit segment 
rto expires data transmission controlled slow start algorithm described 
prevent fast sender overflowing slow receiver tcp implements flow control sliding window 
total size outstanding segments segments flight exceeds window advertised receiver transmission new segments blocked ack opens window arrives 
early evolution tcp enhanced congestion control mechanisms protect network incoming traffic exceeds capacity 
tcp connection starts slow start phase sending initial window number segments 
current congestion control standard allows initial window segments 
slow start transmission rate increased exponentially 
purpose slow start algorithm get ack clock running determine available capacity network 
congestion window cwnd current estimation available capacity network 
point time sender allowed segments outstanding minimum advertised congestion windows 
reception acknowledgment congestion window increased sender allowed transmit number acknowledged segments plus 
roughly doubles congestion window rtt 
slow start ends segment loss detected congestion window reaches slow start threshold ssthresh 
slow start threshold exceeded sender congestion avoidance phase increases congestion window roughly segment rtt 
segment loss detected taken sign congestion load network decreased 
slow start threshold set half current congestion window 
retransmission timeout congestion window set segment sender proceeds slow start 
tcp recovery enhanced fast retransmit fast recovery algorithms avoid waiting retransmit timeout time segment lost 
recall dupacks sent response order segments 
network may re order duplicate packets reception single dupack sufficient conclude segment loss 
threshold dupacks chosen compromise danger spurious loss detection timely loss recovery 
reception dupacks fast retransmit algorithm triggered 
segment considered lost retransmitted 
time congestion control measures taken congestion window halved 
fast recovery algorithm controls transmission new data non duplicate ack received 
fast recovery algorithm treats additional arriving dupack indication segment left network 
allows inflating congestion window temporarily mss dupack 
congestion window inflated andrei arriving dupack triggers transmission new segment ack clock preserved 
non duplicate ack arrives fast recovery completed congestion window 
sources delays latency wan links typically close second times higher typical route wireline internet 
tcp adapts type constant delay 
tcp retransmission timeout updated dynamically smoothed mean variance rtt samples connection 
tcp retransmission timer considered overly conservative 
tcp react large delays times usual rtt occur suddenly 
chance adapt retransmission timer delay tcp assume outstanding segments lost retransmits 
number possible reasons type delays wans 
link level error recovery 
widely known source varying delays presents possibility competing link level protocols recovering error losses data link 
example error burst requiring high number link level retransmissions may caused partial loss radio signal driving tunnel 
persistence link level error recovery exceeds typical rto tcp connection spurious timeouts may result 
studies report cases competing error recovery infrequent basic gsm data service situation may different wans 
wireless networks include layers protocols capable error recovery link level 
example gprs wireless network includes radio link control rlc protocol operating small sized frames lower level logical link control llc protocol operating ip datagrams higher level 
protocols reliable unreliable mode maximum number retransmissions set network parameter 
optimally configuring persistence individual protocol may difficult task network operator 
tcp protocol guaranteed operation highly persistent link introducing long delays data transfers 
handovers 
handover mobile terminal may perform time consuming actions data transmitted new cell 
include example collection signal quality transmitting new base station authentication wans case try provide seamless mobility internally re route packets old new base station expense additional delay 
result data transfer suspended tens seconds 
effect delays tcp performance blocking high priority traffic 
packet switched voice calls exist wan network cases network operator assigns higher priority voice calls 
incoming voice call temporarily preempt radio resources packet switched traffic causing delay data transfer order tens seconds 
currently support quality service qos introduced wans 
interactive traffic example web browsing may higher priority best effort bulk data transfers 
situations lower priority traffic delayed higher priority connections active 

tcp delays tcp reaction delays large sudden delays concern past detailed study 
briefly summarize results study 
method visualize tcp traces described 
tcp traces collected tcpdump program time sequence plot 
highest sequence number data segment versus capture time plotted compared acknowledgment number advertised window ack 
tcp traces collected sender receiver look differently seen 
rest sender side plots provide better picture behavior tcp connection 
receiver side traces verify segments arrived receiver lost network 
details displaying tcp traces 
sudden delay exceeds current value tcp retransmission timer occurs data transfer tcp times retransmits oldest outstanding segment 
data segments delayed lost retransmission unnecessary timeout spurious 
spurious tcp timeout shown taken 
delay test generated tool delayed segments marked plot 
retransmission happens nd second delayed 
sender interprets ack generated receiver response delayed segment related retransmission original segment 
happens due retransmission ambiguity problem ack bears information segment original retransmitted generated 
encouraged arriving acks tcp retransmits outstanding segments slow start algorithm 
number new segments allowed congestion window transmitted 
andrei retransmission policy refereed go back sender forgets segments earlier transmitted 
sequence number time day snd data snd ack rcv data rcv ack 
reaction tcp second delay sender receiver traces 
time retransmitted segments arrive receiver generate dupacks original segments delivered 
threshold dupacks reached sender th second spurious fast retransmit triggered 
presumably missing segment retransmitted congestion window reduced causes pause transmission new segments seconds starting th second connection returns normal 
tcp implementation experiment recovered relatively spurious timeout 
delays live network evaluation new gprs wireless packet switched data service frequently observed pauses bulk data transfers tcp 
tests performed public gprs network operated stationary conditions driving helsinki surroundings 
test configuration shown 
typically blackout periods packet losses causing performance slow 
interested cases packets lost delivered long delay 
observed cases example shown 
approximately seconds connection second sudden delay 
segments lost delay effect delays tcp performance tcp connection recover delay lifetime unnecessary retransmitting segments 
preliminary measurement results indicate handover delay live gprs network exceed seconds reason spurious tcp timeouts 
shows handover delay measured cells standard ping program byte packets 
general round trip time stable seconds seconds time cell forced mobile terminal 
win mobile host serial link gprs network lan fixed host 
configuration measurements live gprs network 
effort done identify remove sources delay spikes completely eliminated 
furthermore hardly possible avoid spurious tcp timeouts occurring delay spikes require extremely conservative tcp retransmission timer hampering recovery lost data 
actual ensure existing tcp implementations recover reasonably spurious timeouts 
sequence number bytes data sent ack rcvd win time 
delay downlink bulk tcp transfer gprs network 
andrei rtt seconds ping sequence number 
rtt spikes gprs cell forced mobile terminal 

interaction tcp algorithms section examines effect tcp algorithms recovery spurious retransmission timeout 
effect new reno new reno small important modification tcp fast recovery algorithm 
normal fast recovery suffers timeouts multiple packets lost flight segments 
new reno recover multiple losses rate packet round trip time 
fast recovery non duplicate ack acknowledge outstanding data prior fast retransmit ack called partial acknowledgment 
new reno algorithm observation partial acknowledgment strong indication segment lost 
recovery phase new reno retransmits presumably missing segment transmits new data congestion window allows 
recovery phase ends segments outstanding fast retransmit acknowledged retransmission timer expires 
description tcp spurious timeout section missing important point new reno algorithm implemented sender 
dupack arrives sender segments outstanding 
non duplicate acknowledgments start arrive th ideas discussed section interest list august effect delays tcp performance second 
point view new reno algorithm acknowledgments partial confirming reception foremost outstanding segment time 
algorithm retransmits presumably missing segment new partial acknowledgment 
case number unnecessary retransmitted segments increases increasing penalty spurious timeout half 
practical example spurious new reno retransmissions shown discussed 
multiple fast retransmits context segment losses considered section 
extend discussion tcp recovery spurious timeout 
variant new reno transmit new segments partial acks worsen recovery 
note segments retransmitted partial acks generate dupacks foremost outstanding segment 
dupacks arrive sender false fast retransmit triggered followed new reno retransmissions 
continue packets flight trigger spurious fast retransmit fortunately preventing false fast retransmit spurious timeout problem non issue 
spurious timeouts fast recovery long delay tcp transfer triggers spurious timeout go back retransmissions spurious fast retransmit 
tcp implementations aggressive tcp retransmission timer may time times fast recovery dupacks generated go back retransmissions arriving 
spurious timeout causes damage just unnecessary retransmitting outstanding segments 
retransmissions create new series dupacks long cause spurious rto 
behavior continues connection life time segments left flight trigger new spurious timeout 
suggest problem independent problem spurious new reno retransmissions multiple spurious fast retransmits discussed 
preventing necessary prevent chain spurious rtos 
practical example behavior shown discussed 
tcp connection experiencing problems send data times single packet lost 
avoid spurious timeouts fast recovery may useful reset rfc permits sending new segments partial acks allowed congestion window 
available space congestion window depends retransmitted segments counted clearly said rfc 
sending new segments partial acks conformant version new reno 
idea generated reiner ludwig private communication andrei retransmission timer dupack arrives currently considered 
absence spurious timeouts fast recovery chain spurious retransmissions 
note rto expire exceptionally long fast recovery especially rto backed preceding delay 
furthermore resetting rto dupacks conservative delaying recovery lost segments scenarios 

test tcp implementations test setup software emulator analyzing wireless data transfers replaces actual wireless link model allows examining tcp behavior configurable controlled environment 
capturing exact scenario delay real data link difficult performance comparison different tcp implementations may valid 
reproduces basic properties wireless data link limited line rate large propagation delay allows placing long sudden delay certain time connection 
intercepts flow packets mobile host server delays ip packets emulating effect wireless link 
advantage emulation approach tests example ns simulator ability experiment compare performance different existing tcp implementations 
linux linux win freebsd mobile host serial link linux emulator lan linux fixed host 
configuration measurements emulated wan link 
configured emulate link similar characteristics provided data services gsm 
line rate set bps propagation delay ms second delay introduced seconds tcp connection 
testing selected major tcp implementations form larger part deployed tcps freebsd windows linux linux 
effect delays tcp performance tcp implementation linux undergone major revision kernel release 
linux distribution redhat 
tcp parameters experiment follows mss bytes receiver window kilobytes sack option disabled 
new reno algorithm enabled linux disabled freebsd unknown status windows 
bulk data transfer sending kilobytes data mobile fixed host generated ttcp 
test results delay behavior tested tcps generally accordance 
tcp timer expires approximately seconds delay oldest outstanding segment retransmitted 
acks delayed segments arrive outstanding segments retransmitted go back policy 
point tested tcp implementations differ behavior 
freebsd showed particularly poor performance 
huge initial window discussed section leads large number outstanding segments delay occurs 
go back retransmissions generated dupacks spurious fast retransmit rto expired times 
timeout outstanding segments retransmitted non duplicate acks arrived clear implementation fault 
extensive number unnecessary retransmissions triggered series spurious fast retransmits timeouts collapsing throughput 
double triple transmissions segments separated idle times due congestion avoidance procedures done timeout fast retransmit 
continues point segments flight trigger spurious timeout 
windows having similar problems delay freebsd small initial window 
large number spurious retransmissions case caused incorrect rto computation strange version new reno algorithm segments retransmitted reception partial ack 
point time th th second tcp stopped retransmitting segments due unknown reasons 
connection proceeds normally 
live network tests observed behavior similar shown major part traces data segments transmitted times link resulting inadequate throughput 
andrei sequence number bytes data sent ack rcvd win time 
recovery tcp freebsd spurious timeout complete connection 
sequence number bytes data sent ack rcvd win time 
recovery tcp windows spurious timeout zoomed total connection time seconds 
effect delays tcp performance sequence number bytes data sent ack rcvd win time 
recovery tcp linux spurious timeout zoomed total connection time seconds 
sequence number bytes data sent ack rcvd win time 
recovery tcp linux spurious timeout zoomed total connection time seconds 
andrei linux recovers relatively spurious timeout 
arriving dupacks trigger spurious fast retransmit followed additional retransmissions caused new reno algorithm 
old new segment transmitted partial ack resulting additional unnecessary retransmissions 
second pause partial acks caused congestion avoidance procedures 
point connection proceeds normally additional retransmissions 
linux similar linux spurious fast retransmit spurious new reno retransmissions 
noticed problem linux reported developers corrected kernel release implementing careful version restriction described section 
tcp implementation faults number tcp features noticed examining tcp traces measurements live gprs network tests 
implementation problems discussed 
huge initial window 
surprised observe freebsd initial window kilobytes segments currently allowed 
apparently initial window set value sender receiver located ip subnetwork 
clearly desired tcp connection established slow ppp link case 
default initial window set proper value changing system parameter 
receiver window overruns 
see tcp sender exceeds receiver advertised window places th th second 
observed windows nt examined tcp traces 
exceeding advertise window allowed may create additional performance problems tcp implementations discard tcp segments outside advertised window 
incorrect retransmission timeout 
part problem excessive spurious retransmissions windows may caused incorrect calculation retransmission timer 
official support page microsoft problem described follows 
windows windows windows nt tcp ip may retransmit packets prematurely retransmit timer computed incorrectly math error 
result unnecessary retransmissions lower throughput high delay networks 
early fast retransmit 
order avoid spurious fast retransmits packets re ordered network tcp required collect threshold dupacks presumably missing segment retransmitted effect delays tcp performance 
examining tcp traces showed windows triggering fast retransmit second dupack windows nt dupack 

methods strengthen tcp spurious timeouts careful version rfc 
due performance considerations fast retransmits tcp disabled rto packets transmitted earlier acknowledged 
careful version restriction allows fast retransmit dupacks arrive foremost outstanding packet careful version 
see spurious timeout presents exactly situation dupacks arrive foremost outstanding segment 
careful version restriction section allow spurious fast retransmit case spurious timeouts limiting penalty go back retransmissions 
possibility second spurious rto retransmission timer reset dupacks 
scenario unrelated spurious timeouts careful version avoids unnecessary retransmissions 
empirical evidence suggests careful version implemented tcps 
sack 
selective acknowledgment option sack tcp allows conveying information sender exactly packets missing receiver 
sack extension sack duplicate sack allows reporting sequence number packet triggered dupack 
sender information determine segment unnecessary retransmitted avoid unnecessary retransmissions 
case spurious fast retransmit new reno retransmits avoided 
sack help prevent go back behavior spurious timeout retransmission ambiguity problem resolved 
eifel 
eifel algorithm timestamp option distinguish original data retransmissions 
resolves retransmission ambiguity problem entirely avoids unnecessary retransmissions spurious timeout 
ack retransmitted segment received timestamp compared timestamp retransmission 
ack older retransmission ack generated original transmission timeout spurious 
eifel algorithm allows detect abort spurious retransmissions preventing go back behavior spurious fast retransmits 
andrei packet lifetime 
assigning appropriate lifetime packets inside wan network discarding expired packets tcp apply loss recovery mechanisms intended way efficient recovery spurious timeout 
example gprs specifications support packet lifetime network components 
long delay exceeding rto tcp exceed lifetime packets network 
tcp timeout ceases spurious leads retransmission discarded segments 
dupacks generated case avoiding problems seen tcp traces 

long sudden delays data transfers typical wireline networks effect tcp protocol extensively studied 
delays uncommon wans due link level retransmissions handovers temporal resource preemption high priority packet traffic voice calls 
example give preliminary measurements cell delay gprs network 
shown new reno algorithm increases amount retransmissions spurious timeout roughly half aggressive retransmission timer may expire fast recovery generating chain spurious retransmissions 
tested widespread tcp implementations reaction long delay 
implementations freebsd windows linux linux exhibited go back retransmissions behavior different 
freebsd windows recovering especially poorly partly due implementation problems listed 
highlight importance eifel algorithm known solution prevents go back retransmissions nearly altogether eliminating penalty spurious tcp timeout 
recommend tcps implement careful version new reno prevents discussed problems 
resetting retransmission timer reception dupack avoid spurious timeouts fast recovery study effect modification detail 
include examination delay sources gprs umts wireless networks designing new algorithms improve response tcp long sudden delays 
acknowledgments reiner ludwig sally floyd mark allman rod venkat pasi comments suggestions material 
effect delays tcp performance experiment live gprs network done 
am grateful timo checking invaluable advice research methodology 
bss gprs protocol 
gpp ts october 
allman paxson stevens 
tcp congestion control 
ietf rfc april 
braden 
requirements internet hosts communication layers 
ietf rfc october 

concepts services protocols new gsm phase general packet radio service 
ieee communications magazine pages august 
fall floyd 
simulation comparisons tahoe reno sack tcp 
acm computer communication review july 
floyd henderson 
newreno modification tcp fast recovery algorithm 
ietf rfc april 
floyd mahdavi mathis podolsky 
extension selective acknowledgment sack option tcp 
ietf rfc july 

tcp performance presence congestion corruption losses 
master thesis department computer science university helsinki december 
available www cs helsinki fi group papers 
isi university south california 
network simulator 
available www isi edu nsnam ns 
jacobson 
congestion avoidance control 
proceedings acm sigcomm pages august 
jacobson leres mccanne 
tcpdump 
available ee lbl gov june 

wireless network emulator 
submitted 
korhonen 
measured performance gsm gprs 
proceedings ieee international conference communications 
appear 
ludwig 
eliminating inefficient cross layer interactions wireless networking 
phd thesis aachen university technology april 
ludwig katz 
eifel algorithm making tcp robust spurious retransmissions 
acm computer communication review january 
available www acm org sigcomm ccr archive jan ccr ludwig html 
ludwig konrad oden joseph 
multi layer tracing tcp reliable wireless link 
proceedings acm sigmetrics international conference measurement modeling computing systems sigmetrics volume sigmetrics performance evaluation review pages new york may 
acm press 
ludwig 
eifel retransmission timer 
acm computer communication review july 
mathis mahdavi floyd romanow 
tcp selective options 
ietf rfc october 
standards track 
andrei microsoft 
tcp ip may retransmit packets prematurely 
available support microsoft com support kb articles asp 

gsm system mobile communications 
europe media duplication 
paxson 
automated packet trace analysis tcp implementations 
proceedings acm sigcomm conference applications technologies architectures protocols computer communication sigcomm volume computer communication review pages cannes france sept 
acm press 
paxson allman 
computing tcp retransmission timer 
ietf rfc november 
standards track 
paxson allman dawson fenner semke volz 
known tcp implementation problems 
ietf rfc mar 
postel 
transmission control protocol 
ietf rfc 
standard 

overview gsm system protocol architecture 
ieee communications magazine april 
stevens 
tcp slow start congestion avoidance fast retransmit fast recovery algorithms 
ietf rfc jan 

network management tool catalog tools monitoring debugging tcp ip internets interconnected devices 
ietf rfc apr 
tanenbaum 
computer networks 
prentice hall international 
thompson miller wilder 
wide area internet traffic patterns characteristics 
ieee network november december 
