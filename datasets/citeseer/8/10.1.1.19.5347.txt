probabilistic atomic broadcast pascal felber institut eurecom route des bp sophia antipolis france pascal felber eurecom fr fernando pedone hewlett packard laboratories palo alto ca usa swiss federal institute technology ch lausanne switzerland fernando pedone epfl ch reliable distributed protocols consensus atomic broadcast known scale poorly large number processes 
research shown algorithms providing probabilistic guarantees promising alternative environments 
propose specification atomic broadcast probabilistic liveness safety guarantees 
algorithm implements specification truly asynchronous system assumptions process speeds message transmission times 

message ordering abstractions known group communication protocols useful design reliable distributed systems 
message ordering abstractions ensure agreement messages delivered system order messages delivered 
problems related reliable computation active replication solved communication primitives total order guarantees :10.1.1.20.4762
scalability achilles heal reliable protocols 
shown group communication protocols scale past couple hundreds processes degrade rapidly executed wide area networks 
promising approach increasing scalability weaken deterministic guarantees protocols probabilistic 
provided adequately high probabilistic guarantees applications 
deterministic protocols implicit assumptions probabilistic nature failures independent 
probabilistic protocols proposed solve various group problems reliable broadcast group membership 
protocols aware probabilistically live deterministically safe 
study problem probabilistic atomic broadcast take account probabilistic liveness probabilistic safety properties 
believe applications take advantage faster scalable algorithms deterministic safety safety violations infrequent detected 
contributions propose probabilistic specification atomic broadcast 
atomic broadcast specifications safety liveness probabilistic 
second protocol implements probabilistic atomic broadcast 
protocol resilient message loses process failures parameter protocol 
processes execute sequence rounds vote broadcast messages 
protocol features messages receive votes round delivered correct processes order 
initially basic version protocol discuss extended 
analyze probabilistic behavior protocol various conditions 
analytical simulation results demonstrate protocol highly reliable scalable number outof order messages small scenarios 
rest organized follows section describes system model 
section defines probabilistic atomic broadcast problem presents algorithm solves 
section analyzes probabilistic behavior protocol section discusses related 
section concludes 

system model consider system composed finite set processes pi fp png communicate message passing 
system truly asynchronous bounds time takes processes execute operations time takes messages transmitted 
processes fail crashing consider byzantine failures 
process fails correct processes correct faulty 
simplicity include process recovery model 
discuss issue see section 
processes communicate primitives send receive 
communication links fair lossy sends correct process infinite number times receives infinite number times sends finite number times receives finite number times receives time sent fair lossy links lose messages correct processes construct reliable communication links top fair lossy links periodically retransmitting messages 
correct process keeps sending message correct process eventually receives 
probabilistic atomic broadcast 
problem definition section introduce probabilistic atomic broadcast 
defined primitives broadcast deliver guarantee agreement order validity integrity 
properties probabilistic deterministic 
processes pi 
probabilistic agreement 
correct 
delivers probability fl delivers probabilistic order 
deliver probability fl order 
probabilistic validity 
correct broadcasts message probability fl delivers integrity 
message delivered process previously broadcast 
generalizes traditional atomic broadcast properties allow messages delivered subset processes probabilistic agreement order probabilistic order probabilistic validity probabilistic agreement order independent illustrated figures 
deliver deliver deliver deliver deliver deliver 
agreement order deliver deliver deliver deliver deliver deliver deliver deliver 
order agreement run depicted processes deliver messages deliver delivers agreement satisfied order 
run depicted deliver processes deliver deliver order order satisfied agreement 
probabilistic properties associated probability fl 
fl deterministic property 
refer deterministic agreement example fl 

solving probabilistic atomic broadcast algorithm incrementally 
section introduce simple efficient version algorithm 
section discuss various improvements basic algorithm 
basic idea 
processes executing algorithm proceed sequence rounds process starts round broadcast message round 
broadcast message round wants broadcast message wait round terminated 
depicts execution algorithm message reception shown 
deliver message broadcast round terminated round deliver deliver deliver deliver deliver deliver broadcast deliver deliver broadcast start round start round broadcast detect round termination random propagation 
algorithm execution execution round processes vote broadcast messages 
process cast vote round message broadcast round message process broadcast round 
process keeps list message votes round list 
item list pair message broadcast current round set processes voted simplify algorithm assume messages list ordered unique identifier associated message 
message unique identifier generated process broadcasting message uses unique identifier local sequential number associated broadcast message 
starts round wants broadcast initializes list fpg process periodically chooses random subset processes send list process receives list updates list follows ffl cast vote round list empty initializes list list chooses message list smallest number votes casts vote 
ffl voted round list empty updates list items list votes list list copied list process starts termination round receives directly indirectly gamma votes cast round remember number processes may fail system vote received directly sends message vote vote received indirectly learns vote process 
terminate round delivers messages received deterministic order unique identifier associated message 
starts round empty list set 
due asynchrony system possibility message losses may happen process executes round processes execute round may prevent making progress terminate round proceed round may need messages processes longer round ensure progress processes include messages exchange sequence messages delivered previous rounds 
round receives message round delivers messages delivered delivered jumps round discuss ways avoid sending previously delivered messages section 
detailed algorithm 
depicts algorithm 
tasks execute concurrently instance task executing time 
assume task scheduler fair tasks get equal chances execute 
line executed atomically 
example operations line interrupted 
processes start new round setting round number creating empty list message votes round lines 
broadcast message includes broadcast sequence line 
messages appended sequences concatenation operator phi 
messages broadcast eventually gossiped processes system 
initialization rp list rp start round ffl locally broadcast ffl delivered execute broadcast phi deliver occurs follows receive rq list rq rq rp receive message qg sequence order ffor delivered deliver phi hmi keep track itg rq rp rp rq list rp fif ahead start new list rp fif hasn cast vote rp ffl fif message broadcast message item list rq smallest message list rq list rp fpg message mg mq list rq list mq list rp fif seen message mq list rp list rp mq votes list rp list rp mq fif hasn seen mq list rp list rp mq new entry list votes rp gamma fif collected votes terminate list rp id order ffor list hasn delivered deliver phi hmi keep track itg rp rp list rp random propagation messages periodically random subset pi size set send rp list rp list 
probabilistic atomic broadcast algorithm process receives message line delivers messages delivered delivered lines 
message receives related round ahead round executes jumps round line 
just started current round list rp empty line vote message broadcast message delivered vote lines chooses message list message votes received smallest number votes votes lines 
merges message votes list list lines 
process detects round evaluating predicate votes line defined votes def gamma list reaches round iterates messages list delivers done lines starts new round line 
processes periodically choose random subset pi size parameter algorithm send processes list message votes current round lines 
algorithm properties 
characterize algorithm presenting properties 
propositions show acquiring votes messages sufficient condition having delivered order processes 
proposition shows eventually single vote cast message guarantee delivery 
proposition proves algorithm eventually deterministic 
results hold faulty processes crashed 
provide proposition statements proofs :10.1.1.19.5347
proposition 
message received votes round delivered process terminates proposition 
messages received votes rounds respectively processes deliver order 
proposition 
processes fail message receives vote round delivered correct processes 
proposition 
processes fail broadcast message delivered correct processes order 

improving algorithm discuss improvements 
reducing propagation delays 
process votes message updating list message votes 
list periodically sent random subset processes execution task 
assuming task executed ffi milliseconds takes average ffi milliseconds time casts vote message time vote propagated processes 
problems 
delivery latency increased ffi average processes chance vote receive 
second process waits propagate vote lower chances receive votes condition deterministic agreement ordering stated properties mean time processes may receive vote messages 
delay propagation votes suppressed having processes execute task right vote message line addition task periodic execution 
increasing throughput 
allows processes broadcast message round reducing throughput system 
limitation addressed ways 
processes bundle broadcast messages vote single message 
second approach increase throughput processes insert message round list message votes broadcasts message round wants broadcast message say finished add list empty vote set 
happens early round chances collects votes delivered processes round vote round broadcast round 
note approach increases throughput algorithm increases chances having order messages see section 
third alternative processes overlap round executions 
executing rounds sequentially processes participate multiple rounds time 
requires process maintain distinct list message votes round keep track round terminated 
processes embed message sent processes 
receiving message process process checks greater delivers messages delivered terminates round receives message round voted votes message round 
deliver messages round wait previous round terminated 
coping process recovery 
process recovery requires processes access stable storage disk 
process votes message round forget message voted vote different round recovery 
order accommodate process recovery voting message processes store vote stable storage 
guarantee messages delivered integrity property processes remember messages previously delivered recovering crash 
reducing message size 
prevent processes systematically sending sequence messages previously delivered mechanism similar described process executing round receives message process related round requests messages delivered subset 
processes need propagate messages previously delivered 
deterministic guarantees 
propositions show takes messages delivered order gather votes 
propagating messages system processes sure get votes 
way doing divide system groups size greater equip processes group deterministic atomic broadcast protocol 
atomic broadcast defined primitives broadcast deliver executed members group belongs 
broadcast message system processes group broadcast processes deliver messages order cast vote messages 
delivering casting vote message protocol continues basic protocol processes propagate votes soon gamma votes received round round terminates 
message votes delivered processes order 
scheme exist described basic algorithm allowing deterministic probabilistic guarantees subsets processes broadcast messages deterministic guarantees 
solution increases delivery latency messages messages deterministic guarantees powerful depend directly size system argue grows grow 
largescale system shows local interactions effect system 

analysis diffusion message gossiping follows complex mathematical models studied epidemiology see instance 
focus probabilistic analysis asymptotic behavior protocol 

probabilistic model probabilistic analysis algorithm assume failures independent 
probability message loss smaller constant loss processes fail 
probability process crashing higher fail processes subset pi process gossips message chosen randomly uniform distribution 
size parameter algorithm process probability including 

agreement probabilistic agreement states probability fl correct processes deliver set messages 
compute fl interested finding scenarios agreement violated 
simplify analysis assuming periodic gossiping lines performed synchronously processes gossip time 
call synchronous sending gossip messages process gossip step 
message sent process round received process ways part list round part delivered round cases triggered reception gossip message line 
interested computing fl function number gossip steps sent 
note gossip messages contain list messages delivered process delivered probability agreement eventually converge 
practice delivered bounded older messages deleted number gossip steps 
probabilistic analysis fl help determine perform garbage collection 
informally gossip message sent correct process received process part message dropped network fail 
probability receives message step calculated gamma loss gamma fail gammap probability receive step 
denote probability process received message gossip steps probability receive expected number processes received gossip steps 
conservatively assume initially fact sender copy 
step gamma np compute probabilities subsequent steps note process receive message steps receive previous step 
derive recursive relation step gamma gamma gamma np figures show expected behavior message diffusion loss fail 
expected number processes reached message gossip steps converges different speeds depending fanout value similarly probability processes received message converges number gossip steps grows 
expected agreement probability fl eventually converges processes keep gossiping message forever 
practice process sending message garbage collect messages delivered gossiped certain number times 
gossip step expected nb 
processes reached 
number processes received message gossip steps gossip step probability reaching processes fl 
probability processes received message gossip steps example gossip steps sufficient 

validity scenario may deliver message round broadcast terminates 
process terminates round receives gammaf votes round message round simplify pessimistically concentrate case assume single message broadcast round receive gamma votes gamma processes receive receive vote processes 
similarly analysis probabilistic agreement compute lower bound fl function number gossip steps sent 
probability process receives gossip message process steps 
calculated value section 
probability receives vote steps broadcast complement probability receive vote steps gamma gamma gamma gossip step probability receiving votes fl 
probability processes receives gamma votes gossip steps probability receives gamma votes terminates current round steps single message broadcast gammaf shows values function number gossip steps loss 
probability receiving gamma votes converges different speeds depending fanout value note lower bound fl practice fl converge significantly faster messages send concurrently process terminate round waiting gamma messages 

order messages delivered lines 
easy see processes execute line round deliver messages order process deliver messages lines different order 
interested computing probability order violated line 
processes deterministic function order messages line independent number votes associated messages 
messages delivered different order list list contain different set messages execute line 
process cast vote messages guaranteed ordered receive votes 
gamma votes messages list list vice versa 
probability fl directly depends maximum number failures number messages broadcast concurrently round 
addition fanout influences fl number gossip steps required obtain gamma votes decreases grows fewer gossip steps increase probability having unordered messages 
built simulation model protocol conducted experiments evaluate probability having order messages different values simulator models distributed system fair lossy communication links 
processes implemented concurrent tasks gossip messages sent random intervals uniform distribution 
experiments set loss 
consider failures measuring fl probability having order messages decreases processes fail 
shows simulation results obtained different values 
expected number unordered messages increases maximal number failures 
observed unordered messages larger fanout values fewer gossip steps round 
varied 
observed significant increase number unordered messages high values reaching approximately broadcasting messages simultaneously fanout 

scalability order analyze protocol scales computed expected number gossip steps required reliably broadcast message increasing number processes system 
purpose diffusion model section 
shows number gossip steps required reach processes probability note case chances messages get spontaneously delivered order 
unordered messages fl 
unordered messages function number failures unordered messages fl 
unordered messages function concurrent messages various fanout value function number processes represented logarithmic scale loss fail 
number steps increases linearly logarithm number processes demonstrates probabilistic broadcast algorithm scales large numbers processes 

background related epidemic protocols known gossip protocols introduced context replicated database consistency management 
idea build failure detection mechanisms garbage collection leader election algorithms group communication protocols review 
gossip mechanism proposed implement reliable broadcast large networks 
protocol proceeds phases number processes probability gossip step reaching processes 
number gossip steps reach processes probability phase processes unreliable gossip dissemination information transmit messages second phase messages losses detected repaired re transmissions 
papers considered probabilistic approaches solve reliable broadcast 
discusses ways reduce number gossip messages exchanged processes 
processes communicate pre determined graph minimal connectivity attain desired level reliability 
heuristics garbage collect messages gossip broadcast algorithms 
approach aims identify aging buffered messages 
group membership issues gossip reliable broadcast protocol discusses :10.1.1.15.2698
idea provide processes partial view membership system propagate broadcast messages gossip phase algorithm 
problem solved orthogonal problem addressed interesting open question adapt algorithm run top membership service :10.1.1.15.2698
probabilistic atomic broadcast algorithm aware 
execution proceeds rounds notion round gossip propagation messages differs rounds 
protocol assumes processes determine number rounds needed messages reach correct processes time takes execute round 
achieve total order processes delay delivering message earlier messages de 
processes assign timestamps messages broadcast 
process determines round terminated delivers messages broadcast round timestamp order 
different aspects 
solve probabilistic atomic broadcast truly asynchronous model discuss integrate recovering processes algorithm 
second algorithm allows probabilistic deterministic message delivery execution 
protocol exhibits unique property eventually deterministic property theoretical practical interest holds faulty processes crashed 

addresses scalability group communication protocols 
propose specification probabilistic atomic broadcast probabilistic safety liveness properties basic probabilistic atomic broadcast protocol extend overcome shortcomings 
probabilistic behavior protocol analyzed various conditions 
analytical simulation results demonstrate high reliability scalability achieved 
specifically results show number outof order messages small scenarios 
bailey 
mathematical theory epidemics 
charles griffin limited 
birman hayden xiao budiu minsky 
bimodal multicast 
acm transactions computer systems may 
demers greene hauser irish larson shenker sturgis swinehart terry 
epidemic algorithms replicated database maintenance 
proceedings th annual acm symposium principles distributed computing pages vancouver bc canada aug 
eugster guerraoui kermarrec 
lightweight probabilistic broadcast 
proceedings th annual acm symposium principles distributed computing newport rhode island usa aug 
felber pedone :10.1.1.19.5347
probabilistic atomic broadcast 
technical report bell labs lucent dec 
appears hewlett packard technical report hpl 
guo hayden van renesse vogels birman 
efficient garbage collection scheme scalable reliable multicast 
technical report tr cornell university computer science dec 
gupta chandra goldszmidt 
scalable efficient distributed failure detectors 
proceedings th annual acm symposium principles distributed computing newport rhode island usa aug 
hadzilacos toueg 
fault tolerant broadcasts related problems 
distributed systems 
addison wesley nd edition 
hayden birman 
probabilistic broadcast 
technical report tr cornell university computer science sept 
gupta van renesse 
probabilistically correct leader election protocol large groups 
proceedings th international symposium distributed computing pages toledo spain oct 

kermarrec massoulie ganesh 
probabilistic reliable dissemination large scale systems 
technical report microsoft research june 
guerraoui 
kermarrec 
reducing noise reliable broadcast 
proceedings th international symposium reliable distributed systems pages new orleans la usa oct 

lin marzullo 
directional gossip gossip wide area network 
technical report cs university california san diego june 

lin marzullo masini 
gossip versus deterministic flooding low message overhead high reliability broadcasting small networks 
technical report cs university california san diego nov 
renesse minsky hayden 
gossip style failure detection service 
technical report tr cornell university may 
schneider :10.1.1.20.4762
implementing fault tolerant services state machine approach tutorial 
acm computing surveys dec 
sun sturman 
gossip reliable multicast large scale high throughput applications 
proceedings international conference dependable systems networks dsn new york usa june 
