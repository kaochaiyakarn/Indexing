randomized heuristics max cut problem pardalos resende ribeiro 
undirected graph edge weights max cut problem consists finding partition nodes subsets sum weights edges having endpoints different subsets maximized 
known np hard problem applications fields including vlsi design statistical physics 
greedy randomized adaptive search procedure grasp variable neighborhood search vns path relinking pr intensification heuristic max cut proposed tested 
heuristics combine grasp vns pr proposed tested 
computational results indicate randomized heuristics find near optimal solutions 
set standard test problems known solutions produced instances 

undirected graph set vertices set edges weights wij associated edges max cut problem consists finding subset vertices weight cut maximized 
decision version max cut problem proved np complete karp 
applications vlsi design statistical physics see 
reader referred poljak introductory survey 
max cut problem formulated integer quadratic program subject max wij wij yi set yi induces cut wij 
years continuous semidefinite programming relaxations formulation considered 
idea max cut problem naturally relaxed semidefinite programming problem observed date june 
key words phrases 
max cut grasp variable neighborhood search path relinking metaheuristics 
pardalos resende ribeiro sz shor 
goemans williamson proposed randomized algorithm uses semidefinite programming achieve performance guarantee 
approximation algorithms np hard problems devised sdp relaxations 
algorithms solving semidefinite programming relaxation particularly efficient explore structure max cut problem 
approach line interior point methods 
particular benson ye zhang semidefinite relaxation approximating combinatorial quadratic optimization problems subject linear quadratic boolean constraints 
proposed dual potential reduction algorithm exploits sparse structure relaxation 
nonlinear programming approaches max cut semidefinite programming relaxation 
homer reformulated constrained problem unconstrained standard steepest ascent method 
variant homer algorithm proposed monteiro 
idea constrained nonlinear programming reformulation max cut semidefinite programming relaxation obtained change variables 
monteiro zhang proposed rank relaxation heuristic max cut described computer code called circut better solutions practice randomized algorithm goemans williamson 
remainder organized follows 
section propose various randomized heuristics finding approximate solutions max cut problem instantiation metaheuristics hybrids 
computational results reported section 
concluding remarks section 

randomized heuristics surveys randomized metaheuristics 
randomization effort implementations grasp greedy randomized adaptive search procedure metaheuristic involves construction phase :10.1.1.145.1638
hand strategies vns variable neighborhood search vnd variable neighborhood descent rely entirely randomization local search escape local optima 
respect issue probabilistic strategies grasp vns may considered complementary potentially capable leading effective hybrid methods 
attempt direction done martins 
construction phase hybrid heuristic steiner problem graphs follows greedy randomized strategy grasp local search phase different neighborhood structures vnd strategy 
heuristic improved ribeiro key components new algorithm strategy exploration different neighborhoods 
ribeiro souza combined grasp vnd hybrid heuristic minimum spanning tree problem 
resende ribeiro path relinking grasp prize collecting steiner tree problem 
designed implemented tested pure hybrid heuristics randomized heuristics max cut problem procedure grasp 
build greedy randomized solution localsearch return grasp 
pseudo code generic grasp 
pure grasp grasp uses path relinking intensification pure vns vns uses path relinking intensification grasp uses vns implement local search phase grasp uses vns implement local search phase intensification 
algorithms described subsections combined main characteristics state art heuristics attempt take advantage best properties terms computation time solution quality 

pure grasp 
grasp randomized multistart iterative method proposed feo resende 
comprehensive study grasp strategies variants reader referred survey chapter resende ribeiro annotated bibliography resende survey applications 
generally speaking grasp randomized heuristic having phases construction phase local search phase 
construction phase adds element time set ends representation feasible solution 
iteration element randomly selected restricted candidate list elements ranked greedy function 
feasible solution obtained local search procedure attempts improve producing locally optimal solution respect neighborhood structure 
construction local search phases repeatedly applied 
best solution returned approximation optimal 
depicts pseudo code generic grasp heuristic 
construction phase adaptive greedy function construction mechanism restricted candidate list probabilistic selection criterion 
greedy function takes account contribution objective function achieved selecting particular element 
case max cut problem intuitive relate greedy function sum weights edges cut 
formally cut 
vertex define 
greedy choice consists selecting vertex highest highest 
placed placed define construction pardalos resende ribeiro procedure localsearch change true 
change change false 

change circularly change true 
change true 
return localsearch 
pseudo code local search phase 
mechanism restricted candidate list wmin min min min max max max max set vertices assigned subset subset wmin wmax wmin cut value parameter restricted candidate list vertices value greedy function greater equal 
vertex randomly selected restricted candidate list 
local search phase neighborhood structure 
current solution 
vertex associate neighbor ifv neighbor thevalue represents change objective function associated moving vertex subset cut 
possible moves investigated 
current solution replaced best improving neighbor 
search stops possible moves evaluated improving neighbor 
pseudo code local search procedure 

hybrid grasp path relinking 
path relinking enhancement basic grasp procedure leading significant improvements solution quality 
path relinking originally proposed glover intensification strategy exploring trajectories connecting elite solutions obtained tabu search scatter search 
starting elite solutions paths solution space leading guiding elite solutions generated explored search better solutions 
accomplished selecting moves introduce attributes contained guiding solutions 
successful applications path relinking combined grasp described 
randomized heuristics max cut problem procedure pr partition defined randomly select solution compute symmetric difference 
xi zi max argmax place vertex partition set yi yi return pr 
pseudo code path relinking heuristic 
implementation strategies described investigated detail resende ribeiro 
briefly describe integration path relinking pure grasp algorithm described subsection 
context path relinking applied pairs solutions locally optimal solution obtained local search initial solution andz guiding solution randomly chosen pool limited number high quality solutions search 
pseudo code path relinking procedure shown 
solution represented characteristic vector yi yi 
path relinking procedure starts computing set 
xi zi variables different values initial guiding solutions 
iteration procedure steps 
step evaluate incremental cost resulting changing subset partition vertex currently placed see description local search procedure section 
second step vertex argmax largest incremental cost selected value variable yi flipped set new iteration resumes 
relinking procedure stops guiding solution attained 
best solution trajectory returned 
pool elite solutions originally empty 
best solution relinking trajectory considered candidate inserted pool 
pool solutions candidate better best elite solution replaces worst elite solution 
candidate better worst elite solution better best replaces worst sufficiently different see section elite solutions 
pool full candidate simply inserted 
depicts pseudo code proposed grasp path relinking hybrid algorithm 
pardalos resende ribeiro procedure grasp pr 
construct greedy randomized solution localsearch pr update return grasp pr 
pseudo code hybrid grasp path relinking 

pure vns 
variable neighborhood search vns metaheuristic proposed hansen mladenovi exploration dynamic neighborhood model 
contrary metaheuristics local search methods vns allows changes neighborhood structure search 
vns explores increasingly distant neighborhoods current best solution step major phases neighbor generation local search jump 
nk 
kmax set pre defined neighborhood structures nk set solutions kth order neighborhood solution phase neighbor nk current solution applied 
solution obtained applying local search current solution jumps case improved 
order neighborhood increased steps repeated stopping condition satisfied 
pseudo code typical vns procedure illustrated 
case max cut problem kth order neighborhood defined solutions derived current selecting vertices transfering subset partition 
local search strategy pure grasp algorithm described section vns heuristic 

hybrid vns path relinking 
case grasp vns hybridized path relinking 
major vns cycle intensification phase path relinking carried 
shows pseudocode hybrid heuristic 

hybrid grasp vns 
hybrid procedure simply obtained replacing local search phase grasp procedure described section line pseudo code vns procedure section 
speed search smaller value kmax vns 
resulting pseudo code depicted 

hybrid grasp vns path relinking 
path relinking intensification added grasp vns resulting hybrid randomized heuristics max cut problem procedure vns kmax 
generate starting solution random kmax generate nk random localsearch return vns 
pseudo code generic vns heuristic 
procedure vns pr kmax 
generate starting solution random kmax generate nk random localsearch pr update return vns pr 
pseudo code vns path relinking 

pardalos resende ribeiro procedure grasp vns kmax 
build greedy randomized solution kmax generate nk random localsearch return grasp vns 
pseudo code hybrid grasp vns 
procedure grasp vns pr kmax 
build greedy randomized solution kmax generate nk random localsearch pr update return grasp vns pr 
pseudo code grasp vns path relinking 
randomized heuristics max cut problem grasp vns path relinking heuristic pseudo code shown 
experimental results section describe computational experience heuristics proposed 
describe computer environment discuss implementation details describe instances report experimental evaluation different algorithms 
computational experiments performed sgi challenge computer mhz mips processors memory 
runs done single processor 
codes written fortran compiled sgi compiler flags 
rank relaxation heuristic circut compiled sgi compiler flags 
processing times measured system function etime 
portable random number generator schrage 
initial objective compare heuristics randomized algorithm goemans williamson show solutions produced randomized heuristics better quality theirs fraction time taken algorithm 
monteiro zhang showed circut fortran implementation rank relaxation heuristic max cut produces higher quality approximate solutions practice randomized algorithm goemans williamson 
addition running times shown small 
reason section compare heuristics directly circut 
compiled version circut computer solve test problems test heuristics 
set circut parameters default values exception intensive parameter settings 
implemented heuristics described section 
pure grasp independent grasp iterations executed 
iteration uses restricted candidate list parameter selected uniform distribution interval 
grasp iteration value change 

gpr pure grasp forward path relinking path relinking local search solution randomly chosen elite solution see executed grasp local search phase 

vns pure vns cycles starting randomly constructed initial solution maximum neighborhood parameter kmax 

vnspr variable neighborhood search vns forward path relinking path relinking locally optimum vns solution randomly chosen elite solution done vns cycle 

pure grasp vns kmax local search phase 

forward path relinking path relinking locally optimum vns solution randomly chosen elite solution done vns local search 
path relinking performed gpr vnspr 
elite set set 
recall characteristic vector solution pardalos resende ribeiro xi xi inclusion elite set strategy suggested glover 
case candidate solution better worst elite set solution better best characteristic vector candidate compared characteristic vectors elite set solutions 
candidate differs elite solutions replaces worst solution elite set 
experiments consisted parts 
part tested circut randomized heuristics test problems andg 
test problems created rendl graph generator written rinaldi monteiro benson monteiro zhang testing algorithms 
consist toroidal planar randomly generated graphs varying sparsity sizes 
graphs vary size nodes density 
ran randomized heuristics rendl instances random number generator seed single iteration 
objective show value guaranteed achieved randomized algorithm goemans williamson easily achieved randomized heuristics 
iteration algorithm done path relinking 
weights optimal cuts instances known 
compare solutions randomized heuristics value sdp upper bound large value guaranteed achieved randomized algorithm goemans williamson 
table summarizes results 
observations results table pure grasp iteration cut weight large sdp upper bound instances 
grasp vns local search pure vns vns iteration cut weight large sdp upper bound instances 
expected processing time increased going vns 
pure grasp times varied second seconds 
pure vns times went little seconds seconds 
heuristics appeared sensitive problem characteristics 
sparsest problems nodes andg runs heuristics find cut weight large sdp upper bound 
likewise sparsest problems nodes heuristic cut weight large sdp upper bound 
instances heuristics cut weight large sdp upper bound 
table 
experimental results rendl instances 
total solution times cut values iteration heuristics 
times seconds sgi challenge computer mhz processor 
cut values bold larger sdp bound 
randomized heuristics max cut problem randomized heuristics problem vns sdp sdp name density time cut time cut time cut bound bound pardalos resende ribeiro table 
experimental results rendl instances 
best solution iterations gpr vns vnspr 
rank relaxation heuristic circut monteiro zhang uses parameters 
sdp ub best known semidefinite programming upper bound 
heuristics sdp bound rows table list sum cuts bounds instances sums normalized total sdp upper bounds 
problem cut values name density circut gpr vns vnspr sdp ub sum table 
experimental results rendl instances 
total solution times rank relaxation heuristic circut monteiro zhang iterations heuristics gpr vns vnspr 
column lists time heuristic vnspr solution improvement 
heuristics time best heuristic vnspr rows table list sum processing times instances sums normalized time taken heuristic circut 
times seconds sgi challenge computer mhz processor 
randomized heuristics max cut problem processing time seconds problem total best name density circut gpr vns vnspr vnspr sum sum circut pardalos resende ribeiro heuristic circut randomized heuristics run single time rendl test instances 
instance ran heuristics total iterations 
random number generator seed runs 
instance table shows cut weights circut randomized heuristics best known semidefinite programming upper bound sdp ub 
table lists times seconds run circut parameters run iterations randomized heuristic 
class problems observations heuristics average semidefinite programming upper bound 
exceptions heuristics cuts greater sdp upper bound 
exceptions occured pure grasp instances 
randomized heuristics incorporation beneficial improving solutions little additional computational burden 
expense increased running times vns local search phase grasp beneficial 
likewise expense increased running times pure vns strategy larger neighborhoods improved grasp vns smaller neighborhood 
randomized heuristics variable neighborhood search path relinking vnspr best cuts 
heuristic circut slightly better solutions randomized heuristic vnspr instances 
instances vnspr slightly better cuts remaining instances cuts weight circut vnspr 
quality solutions circut vnspr differed 
terms solution quality circut vnspr sensitive problem characteristics 
problems circut better solutions densest classes densities vnspr better solutions sparsest class density 
likewise problems circut better solutions densest classes densities vnspr better solutions sparsest class density 
problems density circut better solutions instances vnspr better solution instance 
largest sparsest instances density algorithms equally solutions 
solutions heuristics optimal 
running times iterations randomized heuristics went factor respect running time circut factor 
considers time best vnspr orders magnitude slower circut 
running times iteration randomized heuristics vary substantially plot empirical distributions random variable time target solution value considering instances andg values pure grasp iteration runs randomized heuristics max cut problem respectively 
performed independent runs heuristic random number generator seeds recorded time taken find solution target solution 
plot empirical distribution associate th sorted running time ti probability pi plot points zi ti pi 

observations runs shown pure grasp heuristic benefited path relinking 
running times varied second seconds grasp path relinking gpr runs andg respectively target solution seconds 
second heuristic benefit path relinking grasp vns local search procedure 
heuristic target solution seconds runs instances andg runs respectively path relinking target solution seconds runs andg runs respectively 
grasp grasp vns local search pure vns benefited slightly path relinking 
pure grasp path relinking fastest heuristic find sub optimal solutions cut weights large target values 
second part experiments report instance pm benchmark problem set th dimacs implementation challenge instance nodes density 
generated nger liers ising model spin glasses 
best known solution prior best known upper bound 
sdp upper bound far optimal 
monteiro zhang report solution circut parameters 
variable neighborhood search path relinking vnspr able improve best known solution instance 
ran algorithm times random number generator seeds maximum iterations 
runs vnspr solution weight 
remaining runs new best known solutions weight 
recorded time taken find solution weight plotted empirical distribution random variable time target solution value 
plot empirical distribution associate th sorted running time ti probability pi plot points zi ti pi 

considered instances max cut problems arising physics proposed monteiro zhang 
instances correspond cubic lattice graphs modeling ising spin glasses 
instances sg dl sg dl sg dl density larger sparser instances sg dl sg dl sg dl density 
best knowledge sdp upper bounds known instances 
ran circut intensive parameter settings 
randomized heuristics gpr iterations 
table summarizes results 
instance table lists best cut weights heuristic dimacs rutgers edu challenges seventh pardalos resende ribeiro cumulative probability cumulative probability cumulative probability gpr target solution vns vnspr time target solution seconds target solution gpr vns vnspr time target solution seconds target solution gpr vnspr vns time target solution seconds 
empirical probability distributions time target solution randomized problems 
target solution solution pure grasp iteration run 
cumulative probability randomized heuristics max cut problem pm target value time target solution seconds 
empirical probability distributions time target solution value vnspr problem pm 
target solution value new best known solution value 
total processing times time vnspr solution improvement 
sums cut weights heuristic instances listed 
sums processing times sums normalized sum processing times circut listed heuristic 
observations runs processing time circut smallest 
randomized heuristics gpr cut weights increased processing times 
smaller set problems runs circut times faster iterations randomized heuristics 
larger set problems runs circut times faster iterations randomized heuristics 
considering time vnspr stopped making solution improvements circut average times faster vnspr smaller larger set instances respectively 
vnspr best cuts followed circut 
set smaller instances vnspr best solution instances circut best solution instances 
instance tie 
set larger instances vnspr best solution instances circut best solution instances 
instances heuristics solutions weight 

pardalos resende ribeiro table 
experimental results ising spin glasses cubic lattice graphs monteiro zhang 
best cuts weights circut parameters iterations gpr 
total processing times heuristics 
column lists time improvement heuristic vnspr 
bottom table sum cut sum processing times set instances sum processing times normalized sum processing times heuristic circut 
processing time seconds problem cut values total best name density circut gpr vnspr circut gpr vnspr vnspr sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sum time circut processing time seconds problem cut values total best name density circut gpr vnspr circut gpr vnspr vnspr sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sg dl sum time circut randomized heuristics max cut problem 
concluding remarks proposed implemented tested randomized heuristics max cut problem 
heuristics derived greedy randomized adaptive search procedure grasp variable neighborhood search vns path relinking pr 
adding additional computational burden path relinking able improve basic grasp basic vns grasp vns local search 
grasp benefits path relinking vns enjoying benefit 
grasp path relinking fastest randomized heuristics converge solution weight specified sub optimal value 
vns path relinking best quality solutions required longest running times 
randomized heuristics quickly find solutions competitive randomized algorithm goemans williamson implemented benson ye zhang expense additional processing time find solutions come semidefinite programming sdp upper bound 
sparse instances better cuts rank relaxation heuristic monteiro zhang identified 
problems arising physics randomized heuristics variable neighborhood search path relinking improved best known lower bound pm problem th dimacs implementation challenge 
ising spin glasses problems lattice graphs variable neighborhood search path relinking smaller cut weights circut instances expense longer processing times 
shown random variable time target solution value grasp path relinking fits parameter exponential distribution 
consequently expect speed ups parallel implementation algorithm 
experimented neighborhood parameter setting grasp vns local search pure vns 
systematic investigation different parameter settings may yield algorithm improved performance 
resende 
parallel grasp path relinking job shop scheduling 
parallel computing 
appear 
resende pardalos 
grasp path relinking index assignment problem 
technical report labs research 
resende ribeiro 
probability distribution solution time grasp experimental investigation 
journal heuristics 
barahona gr tschel rgen reinelt 
application combinatorial optimization statistical optimization circuit layout design 
operations research 
benson ye zhang 
mixed linear semidefinite programming combinatorial quadratic optimization 
optimization methods software 
benson ye zhang 
solving large scale sparse semidefinite programs combinatorial optimization 
siam optimization 
monteiro 
projected gradient algorithm solving max cut sdp relaxation 
optimization methods software 
monteiro zhang 
rank relaxation heuristics max cut binary quadratic programs 
siam optimization 
pardalos resende ribeiro resende ribeiro 
local search perturbations prize collecting steiner tree problem graphs 
networks 
chang 
du 
efficient algorithms layer assignment problems 
ieee trans 
computer aided design cad 
chen chan 
graph theoretic minimization algorithm printed circuit boards 
ieee trans 
circuits systems cas 
feo resende 
probabilistic heuristic computationally difficult set covering problem 
operations research letters 
feo resende 
greedy randomized adaptive search procedures 
global optimization 
resende 
grasp annotated bibliography 
hansen ribeiro editors essays surveys metaheuristics pages 
kluwer academic publishers 
glover 
improved constructive multistart strategies quadratic assignment problem adaptive memory 
informs journal computing 
fujisawa nakata 
exploiting sparsity primal dual interior point methods semidefinite programming 
mathematical programming 
fujisawa fukuda nakata 
numerical evaluation semidefinite programming algorithm 
high performance optimization pages 
kluwer academic publishers 
glover 
tabu search adaptive memory programing advances applications challenges 
barr editors interfaces computer science operations research pages 
kluwer 
glover 
multi start strategic oscillation methods principles exploit adaptive memory 
laguna gonz les editors computing tools modeling optimization simulation interfaces computer science operations research pages 
kluwer 
glover laguna 
tabu search 
kluwer academic publishers 
glover laguna mart 
fundamentals scatter search path relinking 
control cybernetics 
goemans williams 
improved approximation algorithms max cut satisfiability problems semidefinite programming 
acm 
hansen mladenovi 
developments variable neighborhood search 
ribeiro hansen editors essays surveys metaheuristics pages 
kluwer academic publishers 
rendl 
spectral bundle method semidefinite programming 
siam optimization 
homer 
distributed memory parallel approximation algorithms max cut 
parallel distributed computing 
rendl clausen 
solving graph bisection problems semidefinite programming 
siam computing 
karp 
reducibility combinatorial problems 
miller thatcher editors complexity computer computations pages 
plenum press ny 
laguna mart 
grasp path relinking layer straight line crossing minimization 
informs journal computing 
lov sz 
shannon capacity graph 
ieee trans 
information theory 
martins resende ribeiro pardalos 
parallel grasp steiner tree problem graphs hybrid local search strategy 

mladenovi hansen 
variable neighborhood search 
computers operations research 
pardalos resende editors 
handbook applied optimization 
press 
pinter 
optimal layer assignment interconnect 

syst 
randomized heuristics max cut problem poljak rendl wolkowicz 
recipe semidefinite relaxation quadratic programming 
global optimization 
poljak 
max cut problem survey 
cook lov sz seymour editors special year combinatorial optimization dimacs series discrete mathematics computer science 
american mathematical society 
resende ribeiro 
grasp path relinking permanent virtual circuit routing 
technical report labs research 
resende ribeiro 
grasp 
glover editors state art handbook metaheuristics 
kluwer appear 
ribeiro souza 
variable neighborhood search degree constrained minimum spanning tree problem 
discrete applied mathematics 
ribeiro 
hybrid grasp perturbations steiner problem graphs 
informs journal computing 
schrage 
portable fortran random number generator 
acm transactions mathematical software 
shor 
quadratic optimization problems 
soviet computer systems science 
department mathematics applications university napoli fed ii napoli italy 
mail address paola pardalos industrial systems engineering department university florida gainesville fl usa 
mail address pardalos ufl edu resende internet network systems research center labs research park avenue room florham park nj usa 
mail address research att com ribeiro department computer science catholic university rio de janeiro rua de vicente rio de janeiro rj brazil 
mail address ribeiro inf puc rio br 
