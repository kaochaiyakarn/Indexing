referee open framework practical testing recommender systems researchindex dan department computer science engineering university minnesota minnesota mn usa cs umn edu steve lawrence david pennock nec research institute independence way princeton nj research nj nec com automated recommendation personalized product recommendation ecommerce web site increasingly valuable service associated databases typically online retail catalogs web logs 
currently major obstacle evaluating recommendation algorithms lack standard public real world testbed appropriate task 
attempt fill gap created referee framework building recommender systems researchindex huge online digital library computer science research papers research community develop deploy evaluate recommender systems relatively easily quickly 
researchindex ways ideal evaluating recommender systems especially called hybrid recommenders combine information filtering collaborative filtering techniques 
documents database associated wealth content information author title full text collaborative information user behaviors permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference hong kong china linkage information citation structure 
framework supports realistic evaluation metrics assess user buy directly resorting offline metrics prediction accuracy may little user utility 
sheer scale researchindex documents thousands user accesses hour force algorithm designers real world tradeoffs consider performance just accuracy 
tradeoff decisions building example hybrid recommender called pd live 
algorithm uses contentbased similarity information select set documents recommend collaborative information rank documents 
pd live performs reasonably compared recommenders researchindex 
keywords researchindex citeseer collaborative filtering recommender systems personalization content social filtering information retrieval digital libraries number databases product catalogs limited web access grows unstructured web database grows exponentially finding desired information increasingly difficult 
recommender systems tackle information overload opinions group people identify information individuals group find valuable methodology complements traditional formation filtering techniques analyze content documents 
working applications recommender systems realm ecommerce recommending products web store 
example amazon com uses recommender systems 
gives simple non personalized recommendations users bought men mars women venus bought space invaders 
second system allows user post comments item customers read comments buy 
third system personalized recommendations books user bought explicit ratings books scale entered 
third amazon recommender described example pure collaborative filtering cf system computes recommendations ratings explicit implicit users ignoring product attributes 
result cf systems completely domain independent 
cf systems fail data sparse recommending new items recommending new users 
sophisticated recommender systems combine user ratings domain specific descriptive information items reason throw bagof words trash 
content information promising way overcome sparsity new user problems referred cold start problem 
serious impediment progress recommender systems research lack standard framework evaluating competing algorithms real world setting 
argue researchindex serve excellent testbed recommendation algorithms especially hybrid algorithms combine collaborative content information 
developed recommender framework evaluator researchindex referee 
referee allows quickly implement field evaluate recommenders documents researchindex 
competing systems evaluated actual user behavior click rates download rates measures predictive accuracy may may translate user satisfaction 
believe referee potential stimulate research areas recommender systems merge content collaborative data systems tradeoffs sacrifice accuracy elegance speed memory savings systems recommend context meaning recommendations depend current user actions 
hope referee stimulate research areas contemplated 
start ball rolling provide skeleton system researchers developed hybrid recommender called pd live 
pd live uses novel method combining content collaborative information take context account allowing recommendations documents researchindex milliseconds 
preliminary results showing compares baseline systems content recommenders provided researchindex 
related brief history cf term collaborative filtering introduced tapestry broader sense usually denoted recommender systems today 
tapestry saw documents structured entities model email users create structured queries today email filters 
example user say ignore mail subject containing sender address ended hotmail com 
addition users add annotations votes ratings text document create queries operate annotations 
approach gives users great control flexibility filtering information drawbacks 
user manually create filters 
second tapestry best suited small groups people know 
tapestry queries form documents mark likes requires know mark generally know people opinions value 
requires community cohesion example mark doesn mind know likes 
automated collaborative filtering addresses drawbacks model recommendations users assign ratings items 
system uses ratings find users similar user uses opinions recommendations 
grouplens uses approach filter usenet news systems approach recommend items music movies web pages jokes :10.1.1.37.8212:10.1.1.42.639:10.1.1.33.4026
cf algorithms original algorithms similarity metrics computed users ratings items users explicitly entered ratings values likert scale 
grouplens example users asked rate usenet news articles scale bad 
common similarity metrics include pearson correlation mean squared difference vector similarity :10.1.1.21.4665:10.1.1.21.4665:10.1.1.30.6583
system chooses set neighbors similar user computing predictions typically system choose neighbors highly correlated users users similarity score threshold 
computes predicted ratings items user seen neighbors ratings items 
system sorts items predicted rating presents user order 
pearson correlation works reasonably quick compute making dominant algorithm deployed systems today 
researchers machine learning suggested recommendation problem cast classic problem classification 
applied number machine learning techniques including inductive learning clustering neural networks bayesian networks :10.1.1.21.4665:10.1.1.21.4665:10.1.1.33.4026
approaches tend employ probabilistic models 
personality diagnosis assumes users report ratings error forms neighborhoods computing probability user type users system 
probabilistic clustering similar assumes users fall fixed number types uses expectation maximization em estimate probabilities user personality type ratings 
general cf algorithms machine learning techniques perform slightly better original correlation methods 
methods advantage compute user model fast predictions online cost building models paid point 
pennock explore axiomatic justifications theoretical limitations apply cf algorithms 
hybrid systems combining content cf original motivations collaborative filtering complement traditional approaches field information retrieval 
approaches content items filtering decisions difficult 
domains movies music little machine understandable content 
cases literature personal taste dominates notion relevance 
case making recommendations ratings independent content general technique domain 
wasteful throw away content information available 
content information allows recommender systems overcome startup problems available user item interaction data sparse extreme case user item new system 
researchers tried different hybrid systems combine content collaborative information 
model developed sarwar injects content information collaborative filtering environment :10.1.1.42.639
agents act users recommender system rate items enter system 
agents rules content amount quoted text usenet posts genre movies determine ratings allowing introduce content similarity judgments recommender system 
class systems content information collaborative information separately 
claypool developed tango online newspaper combines results separate recommenders content uses cf 
system merges results recommenders assigning weight performed better user 
researchindex uses separate recommenders content uses collaborative information 
combining results recommenders simply presents recommender results separately allows user decide recommenders working 
approaches combine notions contentbased collaborative similarity 
systems preferences build keyword user models recommend models fab 
basu derive artificial features merge content collaborative information train ripper learning system outperform collaborative recommender 
pazzani uses data syskill webert system explore contentbased collaborative demographic information recommendations 
popescul extend hofmann probabilistic model create model relates words documents users preferences documents set implicit topics :10.1.1.21.8827
standard testbed evaluating recommender systems situ standard datasets eachmovie dataset movie ratings exist testing pure cf algorithms 
case hybrid recommenders 
papers described explore hybrid systems different datasets metrics making hard compare 
standard machine learning datasets useful collaborative information researchers typically taken cf dataset grafted content outside 
case movies example researchers supplement eachmovie information internet movie database www imdb com 
compared common dataset best offline algorithms may best recommender systems real world settings 
algorithm may computationally inefficient offline evaluation criteria usually predictive accuracy may reflect true user sentiment 
section describe referee framework implementing recommender systems context researchindex 
describe resources provides developers 
argue metrics typical accuracy metrics evaluate recommenders impact user behavior 
researchindex 

researchindex known citeseer autonomous citation indexing system indexes large fraction computer science literature available web 
system locates papers downloads automatically extracts information abstracts authors citations 
computes forms similarity documents including citation links document sentence similarity amazon users viewed viewed similarity 
users perform keyword searches citations documents navigate documents similarity measures computed system 
shows typical document details page researchindex 
document details pages show users metainformation document title authors ways download document 
pages display number links documents generated recommenders similarity metrics mentioned 
believe researchindex excellent testbed investigating hybrid recommenders number reasons 
domain research papers objective related mine taste think interesting components suggesting content collaborative similarity valuable 
researchindex easy observe user behavior automatically assigning user ids allowing users create user ids computers 
recommender system developers install local copy researchindex mirror actual site rich api access enormous amounts content information documents database 
researchindex large active system allow recommender systems developers ensure algorithms scale systems demand quick response time servicing thousands requests hour database hundreds thousands users items 
researchindex provide standard defined recommendation task researchers evaluate algorithms systems 
researchindex terminology basic entities researchindex users documents citations citation groups 
users people robots queries access documents citations 
researchindex generates user ids uids stores cookies 
mentioned users want carry identity machines create explicit accounts 
documents actual research papers downloaded processed 
document assigned document id 
documents multiple locations may wind multiple document ids researchindex attempts unify 
citations actual text citations extracted documents 
citation receives unique citation id cid 
citation groups relate individual citations cite document citation group receiving group id gid 
researchindex store cited documents cited documents available web distinct dids 
researchindex calls user actions events 
events happen user interacts document citation issues query 
kinds events events interest recommender systems developers shown table 
note referee built notion important interesting event recommender systems developers infer event signifies user preferences 
known implicit ratings opposed explicit ratings user effectively says item 
implicit ratings play important role ecommerce recommenders burden users ask explicit ratings 
researchindex provide way users give rating scale users give explicit ratings compared number events users generate 
referee referee main purpose help recommender systems communicate researchindex 
recommender framework daemon runs researchindex site allows recommenders receive user events 
requests recommendations form user looking document documents want look 
system generally issues recommendation requests second usually requires recommenders respond milliseconds 
shows referee architecture 
addition providing standard testbed major goal construction referee minimize amount recommender system developers order implement test working systems 
skeleton clients perl manage connections researchindex call hook methods receive user events recommendation requests 
developers implement system methods extract event recommendation data forward working system 
skeleton client handles catching user events occur recommender offline 
addition skeleton client developers start complete recommender written called pd live 
pd live translation typical document details page researchindex includes meta information ways download document recommendations documents pursue 
recommendations generated number recommenders built researchindex recommenders referee framework 
event name happens parameters user visits document details page uid related doc info download user downloads document uid rate user assigns explicit rating uid rating user viewing document pages uid user searches documents query string uid query table sample user actions researchindex 
actions involve user interacting document citation database 
overview referee architecture 
recommender engine writers need write engine portion making shaded components referee provides 
researchindex events users items ratings maintains memory sparse matrix representation ratings matrix remembers state runs compute recommendations milliseconds variant personality diagnosis pd algorithm pennock 
order develop referee recommender researcher contact researchindex access framework codebase optionally source data 
researcher develop recommender testing locally instance researchindex researcher run 
recommender ready researcher change client point actual researchindex site go live 
recommender run machine long network latency plus computation time required recommendations deadline researchindex imposes 
researchers arrangements run recommenders researchindex machine necessary 
metrics measure user behavior prior research recommender systems referee metrics focus retrospective prediction accuracy static dataset 
uses metrics rely users behave viewing recommendations 
metrics borrow ecommerce notions click purchases 
metrics match users experience researchindex users click follow recommended link document details page purchase document download 
define click soon purchase soon metrics users view details download recommended document short number actions recommendation 
metrics give recommenders credit suggesting documents user path came back short diversion 
accuracy story prefer metrics measure users respond recommendations prediction accuracy metrics mean absolute error mae 
absolute error absolute value difference user rating item system prediction user item mae average error set ratings 
accuracy metrics place offline retrospective analysis static datasets may best situation 
accuracy tell story 
actual accuracy achieved algorithm poorly defined user ratings precise consistent 
quest accuracy may misguided users need precise predictions order help guide decision making 
analysis static datasets ignores fact recommender systems decision support tools classification systems researchers model 
recommenders affect users behavior suggestions effect difficult impossible model static datasets 
discuss objections accuracy metrics detail 
user ratings precise depend son mood time recommendation items user seen example hill asked users re rate set movies rated weeks earlier pearson correlation ratings 
statistically speaking fairly strong correlation inconsistencies cloud small accuracy improvements reported literature fact meaningful 
user ratings explicit system infer rating user behavior 
features user ratings lend cast quest prediction accuracy 
open question users notice difference systems mae mae 
hersh instance users performed question answering tasks baseline text search engine just better search engine 
cases absolute prediction accuracy needed 
recommender systems decision support tools help users decision pursue item 
important system computes exact score user give item confidence score indicates strongly system believes recommendation useful 
important system recommendations give user little additional information 
example system recommend famous research knows 
recommendation tells user little 
important items system recommends help user decision item choose 
reasonable way measure see impact recommender users behavior 
mae measure impact 
recommender system changes users behavior 
suggesting set items recommender provides user set choices user 
breese note users rate items system presents :10.1.1.21.4665
means recommender systems influence items users consume rate influence actual ratings users give system recommended 
important cases captured evaluating recommenders accuracy metrics static dataset 
despite critique static datasets valuable tool evaluating recommendation algorithms 
static datasets convenient experiments 
datasets weed unsuitable algorithms increase effectiveness online experiments suggested rashid 
providing fixed unchanging world static datasets allow researchers compare prediction accuracy different algorithms easily live data stream 
virtues static datasets accuracy metrics simply believe retrospective analyses accuracy fail tell story recommender system algorithms 
case researchindex captures raw data logs user events recommendation requests documents recommended 
create anonymized static datasets prediction accuracy metrics 
pd live example recommender show referee usable framework built example hybrid recommender pd live freely available developers 
mentioned keeps sparse memory matrix users items ratings uses variant personality diagnosis pd algorithm predictions 
chose pd reasonably fast working offline version algorithm shown accurate standard correlation methods eachmovie researchindex data 
took programmer days implement algorithm framework weeks achieve performance meet speed requirements researchindex imposes 
describe strategy exploiting content collaborative similarity compromises required recommender fast deploy 
recommending context strategy building hybrid recommenders consider customer electronics store ecommerce site requested information portable cd player 
site place personalized recommendation page containing information 
site cf recommender finds customer neighbors looks items database suggests 
toaster 
probably recommendation time item system believes customer rate highest 
amazon com researchindex recommenders address problem users bought bought 
lists 
knowledge user personalize recommendations 
call recommending context user viewing information goto considered harmful papers recommend 
recommender balance knowledge user notion user interested right 
example original grouplens recommender treated usenet group separate set items users viewing recipes recommended jokes microsoft flames 
general cf recommenders consider context explicitly drawing recommendations items know 
get implicit context fact people tend similar types items dan likes science fiction movies recommender tend match sci fi fans recommend science fiction 
attempt recommend serendipitous items items usual scope user interests 
approach problematic recommender researchindex 
computing recommendation items presents problem scale 
second researchers typically areas interest meaning documents highest predicted scores fields user currently interested 
approach content similarity information researchindex extracting citations documents order restrict items recommender considers 
citation links similarity measures form directed graph documents nodes similarity relationships edges 
pd live breadth search document user currently looking select candidate set documents 
uses pd algorithm generate predictions documents conducts lottery biased higher scoring documents select ones recommend 
user new neighbors rated document system falls back non personalized average ratings documents 
document new similarity information available system chooses set recommendable documents randomly 
phase approach nice properties 
researchindex generated content similarity information easy fast access 
content information separately collaborative don find way combine weigh disparate notions similarity 
content select set plausible documents collaborative information rank reasonable model people decisions eliminate obviously wrong alternatives choose best 
approach fits notion relevance adopted ir community 
trec information retrieval competitions relevance assumed binary document relevant relevant topic 
allows comparisons different systems simplifies notion relevance degrees varies person person varies person situation :10.1.1.2.7018
recommender starts impersonal binary notion relevance uses cf include personal notions relevance 
compromises order produce recommendations reasonable amount time pd live compromises 
discussed follows similarity graph short distance recommending small subset typically documents known researchindex 
reduces number documents considered recommending documents ratings documents rated users seldom recommended anyway 
eats memory trading space speed 
obvious case ratings currently maintains ratings memory 
locating potential neighbors users rated item common time consuming system caches information user begins session updates minutes 
users large number potential neighbors cache considers potential neighbors specific document ranges neighbors documents 
number potential neighbors rises document range narrows 
allows prediction algorithm consider fewer potential neighbors prediction gaining speed cost memory 
pd live user actions user interacting document stored system 
users take actions exploring researchindex pertain documents database viewing citations documents database 
possible probably desirable recommend documents citations point users go sources download actual documents 
baseline results fielded recommenders course testing referee including random recommender versions pd live 
preliminary measurements quality recommendations produced recommenders compare results similarity recommenders built researchindex 
recommenders researchindex number built recommenders content 
sentence overlap recommends documents significant sections identical text current document 
cited documents cite current document 
active bibliography documents similar citations algorithm similar bibliographic coupling 
users viewed documents seen seen current document 
citation documents cited current document 
site documents web page current document 
fielded recommenders referee 
pd lottery pd live described earlier 
pd top pd live holding weighted lottery recommends documents 
sim random selects documents recommend similarity graph pd live assigns random scores documents 
users receive recommendations researchindex looking document details page 
researchindex recommenders may suggest documents order recommenders fixed appear relative order page 
user interface permutes order recommenders difficult users 
slot page referee recommenders multiple recommenders running framework issues requests recommendations system round robin order 
recommenders suggest document 
case recommendation displayed recommender appear page 
gives advantage recommenders appear earlier page fixed order presentation 
limits ability comparisons referee recommenders built researchindex recommenders 
referee recommenders appear position page page shows recommendations recommender comparisons recommenders reasonable 
metrics metrics measure user accepted recommendation 
distinguish user looking document details page user downloading document 
click measures user immediately follows link document details page suggested recommender 
buy measures user downloads recommended document immediately clicking document 
click soon buy soon similar buy give credit recommender documents recommended user accessed actions user came back recommendation different 
results table shows performance prototype recommenders developed performance researchindex similarity recommenders 
data represent day worth user activity researchindex 
metric raw number recommendations recommender followed user percentage total recommendations user followed 
part metrics produce rank ordering recommenders 
best pd live recommender places middle pack outperforming researchindex built recommenders site citation users viewed lagging sentence overlap cited active bibliography 
note percentages click add actions users take recommendation link 
discussion sentence overlap cited recommenders better rest 
believe happens reasons 
recommenders produce documents related current document 
sentence overlap allows researchers find detailed describing particular piece research 
cited locates papers build come criticize current helps researchers find newer papers related research interest 
second recommenders displayed document details page 
shows important step framework come way account placement order recommendations 
recommenders built pd live recommenders outperform sim random 
shows personalization adds random selection nearby documents similarity graph turn lends support belief hybrid systems perform 
pd lottery outperforms pd top 
believe occurs documents receive high scores similarity users words recommendations 
possible name recs click click soon buy buy soon sentence overlap cited active bibliography pd lottery users viewed pd top citation site sim random table performance hybrid content recommenders researchindex 
percentages represent user followed link downloaded document recommended recommender 
users visit document times may receive different recommendations lottery giving pd lottery opportunity recommend documents 
apart dominating performance sentence overlap cited pd live performed reasonably 
see ways improve pd live 
easy fix detect robots exclude neighbors 
google web crawler turns neighbor users probably conducive accuracy 
improvement abandon poor similarity measures building graph 
uses similarity information provided citation site recommenders 
measures serendipity going collection papers site draw research areas users may discover interesting research areas considered 
searching researchindex probably involves finding papers relevant specific current project conference deadline tomorrow 
serendipitous discovery considered advantage collaborative filtering systems content systems recommending context advantage 
pd live currently scratches surface content available 
principle ir techniques document text compute similarity cluster documents 
information included similarity graph lead consideration relevant documents researchindex built recommenders discover 
possible interesting document similarity information encoded citations papers interesting see text similarity measures correlate similarity measures 
believe referee help advance state art recommender systems especially attempt combine collaborative contentbased similarity information 
provides open standard useful tools rapid development evaluation recommender systems 
uses metrics evaluate recommender system affects user behavior believe useful absolute accuracy metrics dominated past 
developed prototype hybrid recommender pd live uses novel way exploiting contentbased collaborative similarity measures 
content similarity limit population documents recommend collaborative information order pd live great flexibility corresponds problem recommending items user context 
prototype version reasonably recommendations compared contentbased recommenders performance appears potential improvement 
involves getting researchers interested recommender systems participate project 
particular researchers develop systems referee evaluate usefulness 
invite discussion click buy metrics appropriate way judge recommender systems 
hope researchindex standard testbed exploring new issues collaborative filtering 
hybrid recommenders problem include recommending context implicit ratings 
interested please email authors 
ic shoham fab content collaborative recommendation 
communications acm mar 
basu hirsh cohen recommendation classification social content information recommendation 
proceedings th national conference artificial intelligence aaai menlo park july aaai press pp 

billsus pazzani learning collaborative information filters 
proceedings th international conference machine learning morgan kaufmann san francisco ca pp 

bollacker lawrence giles discovering relevant scientific literature web 
ieee intelligent systems march april 
breese heckerman kadie empirical analysis predictive algorithms collaborative filtering :10.1.1.21.4665
proceedings th conference uncertainty artificial intelligence uai san francisco july cooper moral eds morgan kaufmann pp 

claypool gokhale miranda combining content collaborative filters online newspaper 
acm sigir workshop recommender systems berkeley ca 
cohen learning trees rules features 
proceedings thirteenth national conference artificial intelligence eighth innovative applications artificial intelligence conference menlo park aug aaai press mit press pp 

goldberg nichols oki terry collaborative filtering weave information tapestry 
communications acm dec 
goldberg roeder gupta perkins eigentaste constant time collaborative filtering algorithm :10.1.1.37.8212
information retrieval 
schafer konstan borchers sarwar herlocker riedl combining collaborative filtering personal agents better recommendations :10.1.1.42.639
proceedings th national conference artificial intelligence aaai menlo park cal july aaai mit press pp 

hill stead rosenstein furnas recommending evaluating choices virtual community 
proceedings acm chi conference human factors computing systems pp 

hofmann puzicha latent class models collaborative filtering 
proceedings th international joint conference artificial intelligence ijcai vol july aug thomas ed morgan kaufmann publishers pp 

lawrence giles bollacker digital libraries autonomous citation indexing 
computer june 
lee collaborative learning recommender systems 
proceedings eighteenth international conference machine learning morgan kaufmann publishers pp 

mcjones eachmovie collaborative filtering data set 
www research digital com src eachmovie 
pazzani framework collaborative content demographic filtering 
artificial intelligence review 
pennock horvitz giles social choice theory recommender systems analysis axiomatic foundations collaborative filtering 
proceedings seventeenth national conference artificial intelligence pp 

pennock horvitz lawrence giles collaborative filtering personality diagnosis hybrid memory modelbased approach 
proceedings th conference uncertainty artificial intelligence uai sf ca june july morgan kaufmann publishers pp 

popescul ungar pennock lawrence probabilistic models unified collaborative content recommendation sparse data environments :10.1.1.21.8827
th conference uncertainty artificial intelligence seattle washington august pp 

rashid albert lam konstan riedl getting know learning new user preferences recommender systems 
proceedings international conference intelligent user interfaces san francisco ca pp 

resnick iacovou suchak bergstrom riedl grouplens open architecture collaborative filtering netnews 
proceedings acm cscw conference computer supported cooperative pp 

sarwar konstan borchers herlocker miller riedl filtering agents improve prediction quality grouplens research collaborative filtering system 
proceedings acm cscw conference computer supported cooperative pp 

popescul ungar pennock methods metrics cold start recommendations 
appear proceedings th annual international acm sigir conference research development information retrieval sigir 
shardanand maes social information filtering algorithms automating word mouth :10.1.1.30.6583
proceedings acm chi conference human factors computing systems pp 

hersh batch user evaluations give results 
proceedings th annual international acm sigir conference research development information retrieval new orleans la september pp 

ungar foster clustering methods collaborative filtering :10.1.1.33.4026
aaai workshop recommendation systems 
voorhees harman overview ninth text retrieval conference trec :10.1.1.2.7018
nist special ninth text retrieval trec gaithersburg maryland pp 

