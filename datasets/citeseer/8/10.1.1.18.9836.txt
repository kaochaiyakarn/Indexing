robust positioning algorithms distributed ad hoc wireless sensor networks distributed algorithm determining positions nodes ad hoc wireless sensor network explained detail 
details regarding implementation algorithm discussed 
experimentation performed networks containing nodes randomly placed square area resulting error magnitudes represented percentages node radio range 
scenarios errors distance measurements anchor node population nodes known locations average connectivity levels neighbors nodes algorithm shown errors average 
shown average connectivity nodes anchors algorithm performs errors distance measurements 
ad hoc wireless sensor networks developed monitoring host environmental characteristics area deployment light temperature sound 
data common characteristic useful considered context data measured sensor data stamped position information 
ad hoc networks acquiring position data quite challenging 
ad hoc systems strive incorporate assumptions possible characteristics composition chris savarese jan rabaey berkeley wireless research center eecs berkeley edu savarese jan koen langendoen faculty information technology systems delft university technology netherlands koen pds twi tudelft nl network relative positioning nodes environment network operates 
calls robust algorithms capable handling wide set possible scenarios left open degrees freedom 
specifically assume nodes considered instance positioning problem connected network exist network minimum anchor nodes 
connected network network path pair nodes anchor node node priori knowledge position respect global coordinate system 
consequence ad hoc nature networks lack infrastructure inherent 
exceptions nodes considered equal difficult rely centralized computation solve network wide problems positioning 
consider distributed algorithms achieve robustness iterative propagation information network 
positioning algorithm considered relies measurements limited accuracy distances pairs neighboring nodes call range measurements 
techniques generate range measurements including time arrival angle arrival phase measurements received signal strength 
algorithm indifferent method different methods offer different tradeoffs accuracy complexity cost power requirements 
methods generate range measurements errors large measurement 
note errors come multiple sources including multipath interference line sight obstruction channel inhomogeneity regard direction 
concerned problem determining accurate range measurements 
assume large errors range measurements represent agglomeration multiple sources error 
able cope range measurements errors major challenges positioning ad hoc space termed range error problem 
second major challenge ad hoc positioning algorithms henceforth referred sparse anchor node problem comes need points known location dimensional space order uniquely determine location unknown object 
points results ambiguities lead underdetermined systems equations 
recalling assumptions anchor nodes positioning information start algorithms assume anchor nodes located randomly arbitrarily large network 
limited radio ranges highly randomly selected node network direct communication sufficient number points derive position estimate 
response primary obstacles algorithm split phases start phase refinement phase 
start phase addresses sparse anchor node problem cooperatively spreading awareness anchor nodes positions network allowing nodes arrive initial position estimates 
initial estimates expected accurate useful rough approximations 
refinement phase algorithm uses results start algorithm improve initial position estimates 
range error problem addressed 
presents algorithms detail discusses network design guidelines taken consideration deploying system algorithm 
section discuss related field 
section elaborate phase algorithm approach exploring depth start refinement phases solution 
section discuss subtleties algorithm relation simulation environment 
section reports experiments performed characterize performance algorithm 
section discussion design guidelines algorithm limitations section concludes 
related survey taxonomy hightower borriello provides general overview state art location systems 
systems locating sensor nodes ad hoc network described aforementioned range error sparse anchor node problems 
systems attractive option rf radio measuring range nodes example observing signal strength 
experience shown approach yields inaccurate distances 
better results obtained time flight measurements particularly acoustic rf signals combined accuracies percent transmission range reported 
acoustic signals temperature dependent require unobstructed line sight 
furthermore small errors accumulate propagating distance information multiple hops 
drastic approach avoids range error problem altogether connectivity nodes 
gps system bulusu employs grid beacon nodes known locations unknown node sets position centroid locations beacons connected unknown 
position accuracy third separation distance beacons implying high beacon density practical purposes 
doherty connectivity nodes formulate set geometric constraints solve convex optimization 
resulting accuracy depends fraction anchor nodes 
example anchors accuracy unknowns order radio range 
serious drawback currently addressed convex optimization performed single centralized node 
dv hop approach niculescu nath contrast completely ad hoc achieves accuracy third radio range networks dense populations highly connected nodes 
phase anchors flood location nodes network 
unknown node records position minimum number hops anchors 
anchor infers position anchor computes distance divides number hops floods average hop distance network 
unknown uses average hop distance convert hop counts distances performs triangulation distant anchors estimate position 
dv hop works dense regular topologies sparse irregular networks accuracy degrades radio range 
accurate positions obtained range measurements individual nodes errors small 
fraction anchor nodes high iterative multilateration method 
nodes connected anchors compute position upgrade anchor status allowing additional unknowns compute position iteration number approaches proposed require anchors 
quite similar operate follows 
node measures distances neighbors broadcasts information 
results node knowing distance neighbors distances neighbors 
allows construction partial local maps relative positions 
adjacent local maps combined aligning mirroring rotating coordinate systems 
known positions anchor nodes obtain maps absolute positions 
anchors network single absolute map results 
style robust range errors accumulate combining maps 
phase positioning mentioned earlier primary obstacles positioning ad hoc network sparse anchor node problem range error problem 
order address problems sufficiently algorithm separated phases start refinement 
start phase hop terrain house algorithm similar dv hop 
hop terrain algorithm run positioning algorithm overcome sparse anchor node problem refinement algorithm run iteratively improve refine position estimates generated hop terrain 
note emphasis hop terrain getting highly accurate position estimates getting rough estimates starting point refinement 
conversely refinement concerned nodes exist hop neighborhood focuses increasing accuracy position estimates possible 
hop terrain positioning algorithm started nodes network positioning data exception anchors 
networks considered algorithm scalable large numbers nodes spread large areas relative short radio ranges nodes expected possess 
furthermore expected percentage nodes anchor nodes small 
results situation small percentage nodes network able establish direct contact anchors probably nodes network able directly contact anchors derive position estimate 
order overcome initial information deficiency hop terrain algorithm finds number hops node anchors nodes network multiplies hop count average hop distance see section estimate range node anchor 
computed ranges anchor nodes known positions perform triangulation get node estimated position 
triangulation consists solving system linearized equations ax means squares algorithm earlier 
anchor nodes launches hop terrain algorithm initiating broadcast containing known location hop count 
hop neighbors surrounding anchor hear broadcast record anchor position hop count perform broadcast containing anchor position hop count 
node hears broadcast hear previous broadcasts record anchor position hop count rebroadcast 
process continues anchor position associated hop count value spread node network 
important nodes receiving broadcasts search smallest number hops anchor 
ensures conformity model estimate average distance hop greatly reduces network traffic 
broadcasts may omni directional may reach nodes broadcasting node relative direction flow information algorithm causes nodes hear packets necessary 
order prevent infinite loop broadcasts nodes allowed broadcast information stale 
context information stale refers anchor node heard hop count included arriving packet greater equal hop count stored memory particular anchor 
new information trigger broadcast stale information trigger broadcast 
node received average hop distance data regarding anchor nodes network existing dimensional space able perform triangulation estimate location 
node subsequently receives new data having performed triangulation smaller hop count new anchor node simply performs triangulation include new data 
procedure summarized piece pseudo code positioning packet received new anchor lower hop count store hop count anchor 
broadcast new packet anchor hop count hop count 

average hop count known number anchors dimension space triangulate 

resulting position estimate coarse terms accuracy provides initial condition refinement launch 
performance algorithm discussed detail section 
refinement initial position estimates hop terrain start phase objective refinement phase obtain accurate positions estimated ranges nodes 
refinement operate ad hoc network distances direct hop neighbors node considered 
limitation allows refinement scale arbitrary network sizes operate low level networks support multi hop routing local broadcast required 
refinement iterative algorithm nodes update positions number steps 
step node broadcasts position estimate receives positions corresponding range estimates neighbors computes squares triangulation solution determine new position 
cases constraints imposed distances neighboring locations force new position true position node 
number iterations position update small refinement stops reports final position 
note refinement nature ad hoc distributed algorithm 
beauty refinement simplicity limits applicability 
particular priori clear conditions refinement converge accurate final solution 
number factors influence convergence accuracy iterative refinement accuracy initial position estimates magnitude errors range estimates average number neighbors fraction anchor nodes 
previous experience assume redundancy counter influences large extent 
node neighbors dimensional space induced system linear equations defined errors averaged squares solver 
example data collected shows large range errors standard deviation tolerated locating node surrounded anchors dimensional space average distance estimated true position node radio range 
despite positive effects redundancy observed straightforward application refinement converge considerable number reasonable cases 
close inspection sequence steps taken refinement revealed important causes 
errors propagate fast network 
network diameter error introduced node step indirectly affected node network step triangulate hop triangulate hop pattern 

network topologies inherently hard impossible locate 
example cluster nodes anchors connected single link main network simply rotated entry point network keeping exact intra node ranges 
example 
mitigate error propagation modified refinement algorithm include confidence associated node position 
confidences weigh equations solving system linear equations 
solving ax solve ax vector confidence weights 
nodes anchors high faith position estimates select high confidence values close 
node observes poor conditions neighbors poor constellation associates low confidence close position estimate consequently impact outcome triangulations performed neighbors 
details confidence selection discussed section 
usage confidence weights improved behavior refinement greatly cases converge accuracy positions improved considerably 
improvement refinement necessary handle second issue ill connected groups nodes 
detecting single node ill connected easy number neighbors node ill connected dimensional space 
detecting group nodes ill connected complicated global overview necessary 
employ heuristic operates ad hoc fashion centralized computation able detect ill connected nodes 
underlying premise heuristic sound node independent anchors 
multi hop routes anchors link edge common 
example node taken meets criteria considered sound 
example topology 
anchor unknown determine node sound hop terrain algorithm records id node immediate neighbor shortest path anchor 
multiple shortest paths available discovered approximates intended condition considerably simpler 
ids collected set sound neighbors 
number unique ids set reaches node declares sound may enter refinement phase 
neighbors sound node add id sets may turn sound sound sets sufficient 
process continues network 
result ill connected nodes able fill sets sound neighbors entries may participate refinement phase 
example topology node sound node 
note restrictive participating node definition renders unknown nodes ill conditioned 
refinement modifications confidence weights detection ill connected nodes performs quite satisfactorily shown experiments section 
simulation algorithm details study robustness phase positioning algorithm created simulation environment easily control number network parameters 
implemented hop terrain refinement algorithms code running control discrete event simulator 
algorithms event driven event incoming message periodic timer 
processing event usually involves updating internal state generates output messages broadcast 
simulated sensor nodes run exactly code 
library control simulated time enforces semi concurrent execution code running multiple sensor nodes 
network layer positioning algorithm designed ad hoc network presumably employs multi hop routing algorithms algorithm requires node able broadcast message hop neighbors 
important result ability system designers allow routing protocols rely position information positioning algorithm relying routing capabilities 
important issue network provides reliable communication presence concurrent transmission 
assume message loss corruption occur message delivered neighbors fixed radio range sending node 
concurrent transmissions allowed transmission areas circles overlap 
node wanting broadcast message message area progress wait transmission possibly queued messages completes 
effect employ csma policy 
functionality network layer local broadcast implemented single object connected sensor node objects simulation 
network object holds topology simulated sensor network read scenario file generated random initialization time 
time zero network object sends pseudo message sensor node object telling role anchor unknown attributes position case anchor node 
relays messages generated sensor nodes sender neighbors radius units 
hop terrain time zero hop terrain algorithm nodes network waiting receive hop count packets informing positions hop distances associated anchor nodes 
time zero anchor nodes network broadcasts hop count packet received repeated anchors hop neighbors 
information propagated network ideally nodes network positions hop counts anchors network average hop distance see 
point nodes performs triangulation create initial estimate position 
number anchors particular scenario known nodes network difficult define stopping criteria dictate node waiting information performing triangulation 
solve problem nodes perform triangulations time receive information stale having received information anchors dimensional space see section definition stale information 
nodes rely anchor nodes inform value assumed average hop distance calculating estimated range anchor 
initially experimented simply maximum radio range quantity 
better position results attained dynamically determining average hop distance comparing number hops anchors known distances separating calibration procedure dv hop see section 
implemented calibration procedure separate pass follows initial hop count flooding 
anchor node receives hop count anchor computes estimate average hop distance floods back network 
nodes wait estimate arrive performing triangulation outlined 
subsequent estimates anchor pairs simply discarded reduce network load 
details sufficient controlling hop terrain algorithm simulated environment nodes start time 
important consequence real network nodes network start enter network random times relative 
allows possibility late node waves propagated broadcast messages originating anchor nodes 
solve node programmed announce comes online new network 
likewise node programmed respond announcements passing new node position estimates positions anchor nodes know hop counts hop distance metrics associated anchors 
note rebroadcast rules regarding stale information information new new node causing new node rebroadcast information hop neighbors 
important cases new node forms link clusters nodes previously connected 
cases new node hop neighbors came online new node information considered stale broadcasts repeated past distance hop 
refinement refinement algorithm implemented periodic process 
information incoming messages recorded internally processed immediately 
allows accumulating multiple position updates different neighbors responding single reply outgoing broadcast message 
task anchor node simple broadcasts position detected new neighbor preceding period 
task unknown node complicated 
new information arrived preceding period performs triangulation compute new position estimate determines associated confidence level decides send position update neighbors 
confidence value 
anchors immediately start confidence unknown nodes start low value may raise confidence subsequent refinement iterations 
node performs successful triangulation sets confidence average neighbors confidences 
general raise confidence level 
nodes close anchors raise confidence triangulation raising turn confidence nodes hops away anchors iteration triangulations fail new position rejected grounds see 
cases confidence set zero neighbors erroneous information inconsistent node iteration 
generally leads new neighbor positions bringing faulty node back consistent state allowing build confidence level 
unfortunate cases node keeps getting back inconsistent state converging final position confidence 
warrant termination simply limit number position updates node maximum 
nodes poor confidence discarded excluded reported error results considered located included results 
avoid flooding network insignificant erroneous position updates triangulation results classified follows 
triangulation may simply fail system equations underdetermined neighbors bad constellation 
second new position may close current rendering position update insignificant 
tight cut radius radio range experimentation showed refinement fairly insensitive value long small radio range 
third check new position reach anchors hop terrain 
similarly doherty check convex constraints distance position estimate anchor length shortest path hop count times radio range 
position drifts outside convex region reset position original initial position computed hop terrain 
validity new position checked computing difference sum observed ranges sum distances new position neighbor locations 
dividing difference number neighbors yields normalized residue 
residue large residue radio range assume system equations inconsistent reject new position 
avoid trapped local minima occasionally accept bad moves chance similar simulated annealing procedure cooling reduce confidence 
unexpected source errors hop terrain assigns initial position nodes identical hop counts anchors 
example twin error anchors anchors anchors anchors connectivity average position error hop terrain range errors 
nodes share exact set neighbors assigned initial position 
consequence neighbor look confronted large inconsistency nodes share position different range estimates 
simply dropping equations triangulation yields better position estimates iteration refinement noticeable impact accuracy final position estimates 
experiments order evaluate algorithm ran experiments hop terrain refinement simulation environment 
data points represent averages trials networks containing nodes 
nodes randomly placed uniform distribution square area 
specified fraction anchors randomly selected range connected nodes blurred drawing random value normal distribution having parameterized standard deviation having true range mean connectivity average number neighbors controlled specifying radio range 
allow easy comparison different scenarios range errors errors position estimates normalized radio range position error means half range radio 
shows average performance hop terrain algorithm function connectivity anchor population presence range errors 
seen plot position estimates hop terrain zero 
ranges enforced non negative clipping values error anchors anchors anchors anchors connectivity average position error refinement range errors 
located unknowns hop terrain refinement connectivity fraction located nodes anchors range errors 
average accuracy error scenarios anchor population average connectivity level greater 
extreme situations anchors exist connectivity network low hop terrain errors reach 
displays results experiment depicted position estimates hop terrain subsequently processed refinement algorithm 
shape similar showing relatively consistent error levels scenarios anchor population average connectivity level greater 
refinement problems low connectivity anchor populations shown climb position error harsh conditions 
refinement improves accuracy position estimates hop terrain factor 
helps explain sharp increases positioning errors low anchor populations sparse error anchors anchors anchors anchors connectivity average position error hop terrain grid range errors 
error hop terrain refinement lower bound range error std dev range error sensitivity anchors connectivity 
networks shown figures 
shows average connectivity nodes network decreases past certain points algorithms break failing derive position estimates large fractions network 
due simply lacking sufficient information necessary consequence loosely connected networks 
nodes located connected neighbors refinement requires minimal confidence level 
noted results imply reported average position errors low connectivities figures low statistical significance points represent small fractions total network 
general drawn figures hop terrain refinement perform poorly networks average connectivity levels 
connectivity pronounced effect position error interested topological characteristics show large effects 
percentage nodes connectivity anchors connectivity anchors connectivity anchors connectivity anchors error cumulative error distribution range errors 
experiment randomly place nodes vertices grid allowing nodes sit square area 
grid layout result better performance refinement algorithm relative performance refinement algorithm random node placement 
include plot looks identical 
find difference performance hop terrain 
shows placing nodes grid dramatically reduces errors hop terrain algorithm cases connectivity anchor node populations low 
example anchors connectivity nodes average position error decreases random distribution grid 
suspect due consistent distances nodes ideal topologies clusters result form grid layout inherently optimized connectivity levels entire network 
sensitivity average error levels range measurements major concern positioning algorithms 
shows results experiment held anchor population connectivity constant nodes respectively varying average level error range measurements 
hop terrain completely insensitive range errors 
result binary nature procedure routing hops counted nodes see pass incremented hop counts time nodes attempt measure actual ranges 
hop terrain refinement rely range measurements performed nodes shows dependence accordingly 
error range measurements average refinement offers improved position estimates hop terrain 
results improve steadily range errors decrease 
error error connectivity anchors confidence connectivity anchors confidence relation confidence positioning error average standard deviation 
determined best possible position information obtained case 
node performed triangulation true positions neighbors corresponding erroneous range measurements 
resulting position errors plotted lower bound 
suggests room improvement refinement 
point reported average position errors 
contrast gives detailed look distribution position errors individual nodes different scenarios 
note distributions similar shapes nodes small errors large tails outliers 
refinement confidence metrics extent capable pinpointing outliers 
shows relationship position error levels corresponding confidence values assigned node 
data taken best worst case scenarios experiment generate 
desired nodes higher position errors assigned lower confidence levels 
easier case confidence indicators reliable difficult case 
large standard deviations show confidence error anchors geographic error distribution anchors connectivity range errors 
indicator position accuracy 
unfortunate reliable confidence metric useful applications example identify regions bad nodes 
currently value confidence levels improved average positioning error compared naive implementation refinement confidences 
useful way looking distribution errors individual nodes take geographical location account 
plots positioning errors function node location square testing area 
experiment randomly placed nodes anchor population average connectivity level range errors 
error distribution quite typical scenarios showing areas edges network lacking high concentration anchor nodes particularly susceptible high position errors 
discussion interesting compare results previous section alternative approaches discussed section 
discuss performance hop terrain related algorithms range measurements 
hop terrain similar dv hop algorithm niculescu nath get consistently higher position errors example hop terrain versus dv hop scenario anchors connectivity 
poorer network conditions hop terrain robust dv hop showing factor improvement position accuracy sparsely connected networks 
regardless trend observed studies fraction anchors drops position errors rapidly increase 
convex optimization technique doherty accurate hop terrain low fractions anchors 
example convex optimization achieves position errors scenario nodes anchors connectivity hop terrain errors gap grows lower fractions anchors 
mentioned earlier convex optimization centralized algorithm 
results refinement comparable reported iterative multilateration scenario nodes anchors connectivity range errors 
algorithm handle low anchor fractions low connectivities positioning starts nodes connected anchors 
refinement performs acceptably anchors low connectivity 
furthermore preliminary results advanced collaborative multilateration algorithm show refinement able determine position larger fraction unknowns refinement versus collaborative multilateration scenario just anchors nodes connectivity 
euclidean algorithm niculescu nath uses range estimates construct local maps unified single global map 
results reported random configurations show euclidean sensitive range errors especially low fractions anchors case anchors hop terrain equivalent dv hop outperforms euclidean 
refinement achieves better position estimates robust cross hop terrain occurs range errors see 
summary performance hop terrain refinement comparable algorithms case easy network topologies high connectivity anchors low range errors outperforms competition difficult cases low connectivity anchors large range errors 
results refinement improved placement anchors nodes controlled positive experience reported 
largest errors occur edges network see anchors placed perimeter network 
approach increase accuracy systems sources information 
locating sensors room example knowing sensors wall mounted eliminates degree freedom 
incorporating knowledge localization algorithms requires great care 
example knowing sensors communicate imply located far apart wall may simply prohibit radio communication 
experimental results section discussion recommend number guidelines installation wireless sensor networks place anchors carefully edges ensure high connectivity employ reasonable fraction anchors 
create best conditions positioning algorithms general hop terrain refinement particular 
completely distributed algorithm solving problem positioning nodes ad hoc wireless network sensor nodes 
procedure partitioned algorithms hop terrain refinement 
algorithm described detail 
simulation environment evaluate algorithms explained including details specific implementation algorithm 
experiments documented algorithm showing aspects performance achieved different scenarios 
results show able achieve position errors scenario range measurement error anchor population average connectivity nodes 
guidelines implementing deploying network algorithms explained 
important aspect wireless sensor networks energy consumption 
near plan study amount communication computation induced running hop terrain refinement 
particularly interesting aspect accuracy vs energy consumption trade changes subsequent iterations refinement 
darpa funding berkeley wireless research center pac program 
koen langendoen supported usenix research exchange rex program allowed visit summer refinement algorithm 
anonymous reviewers shepherd mike spreitzer constructive comments draft version 

geolocation pico radio environment 
master thesis eth rich december 
bulusu heidemann estrin 
density adaptive beacon placement algorithms localization ad hoc wireless networks 
ieee infocom new york ny june 
bulusu heidemann estrin 
gps lowcost outdoor localization small devices 
ieee personal communications oct 
capkun 
hubaux 
gps free positioning mobile ad hoc networks 
hawaii int 
conf 
system sciences hicss pages maui hawaii january 
doherty pister el ghaoui 
convex position estimation wireless sensor networks 
ieee infocom anchorage ak april 
girod estrin 
robust range estimation acoustic multimodal sensing 
ieee rsj int 
conf 
intelligent robots systems iros maui hawaii october 
hightower borriello 
location systems ubiquitous computing 
ieee computer aug 
hightower want borriello 
spoton indoor location sensing technology rf signal strength 
uw cse university washington department computer science engineering seattle wa february 
hudson pottie yao 
protocol distributed node location 
ieee communication letters published 
niculescu nath 
ad hoc positioning system 
ieee globecom november 
savarese rabaey 
distributed ad hoc wireless sensor networks 
ieee int 
conf 
acoustics speech signal processing icassp pages salt lake city ut may 

han srivastava 
dynamic fine grained localization ad hoc networks sensors 
th acm int 
conf 
mobile computing networking mobicom pages rome italy july 
varga 
discrete event simulation system 
european simulation multiconference esm prague czech republic june 
