configuring online problem solving resources internet reasoning service monica crub zy lu enrico motta mark musen stanford medical informatics campus drive stanford ca usa 
email musen smi stanford edu knowledge media institute open university milton keynes mk aa uk 
email motta lu open ac uk existing services world wide web tend integral instance online services data analysis available usually possible modify underlying reasoning system configure different domain integrate different services produce new functionalities 
research goal develop technological framework needed provide sophisticated online problem solving resources configurable different applications 
describe design initial implementation internet reasoning service web front enabling developers prototype knowledge applications quickly reusable components distributed libraries 
aim reliable problem solving technology available wider audience provide level intelligent support needed allow rapid generation web reasoning services 
key words problem solving methods ontologies reusable components knowledge systems knowledge acquisition adapters web services 

resources web dynamic services provide functionality users booking plane analyzing gene data 
services tend integral usually possible modify underlying reasoning system services configure different domain integrate different services produce new functionalities 
necessary technologies frameworks service identification configuration interoperability web remain developed 
foster objective competence monica crub zy lu enrico motta mark musen web service specified brokering agents locate services match user needs configure realize specific user tasks 
approach central ibrow project 
context focus configurable reasoning services goal develop methodology tool support needed provide sophisticated problem solving facilities heuristic classification technology web different users biologists configure specific applications 
note approach differs appeared web services tend offer predefined limited reasoning functionalities specific domain context see section 
approach stems research knowledge system kbs development reuse 
area identified domainindependent problem solving strategies problem solving methods psms provide standard ways addressing stereotypical knowledge intensive problems generic tasks diagnosis design classification 
foster reuse psms structured libraries developed methods indexed retrieved different domains purposes 
furthermore comprehensive frameworks take psm centered view support kbs development reusable components 
process involves modeling user problem generic task configuring appropriate psm integrating generic components domain specific information 
reuse centered approach established robust paradigm knowledge engineering 
level actual component reuse quite low due pragmatic barriers libraries problem solving components far available online different libraries interoperable knowledge level symbol level 
furthermore existing frameworks kbs development offer sufficient guidance users select configure reasoning component system 
describe internet reasoning service irs web front enables developers prototype knowledge applications quickly reusable components distributed libraries 
welldefined process model irs overcomes limitations frameworks providing semi automated support step application configuration process 
implemented irs web server integrated ocml reasoning platform generic prot knowledge modeling environment 
provide overview irs show produce classification problem solver domain roman 
www swi psy uva nl projects ibrow home html configuring online problem solving resources irs 
internet reasoning service problem solving libraries contain reusable software components configured running application solve users problems 
components primarily tasks psms model reasoning building blocks kbs 
example developed library reusable components heuristic classification problem solving task matching unknown object denoted set observables solution space classes similar objects 
irs supports users operating set distributed libraries problem solving resources achieve tasks domain 
irs provides different levels support interactive browsing facilities manual selection configuration reasoning resources intelligent semi automated assistance building executable application 
irs relies knowledge level descriptions problemsolving components libraries 
unified problem solving language upml web compatible framework designed ibrow modeling reusable components knowledge system 
upml distinguishes kinds components tasks functions kbs achieve classification psms methods implement reasoning process kbs realize task optimal heuristic classifier domain models views domain knowledge tasks psms 
component domain model defines particular ontology specification important concepts involved component model notion solution space classification task 
psms tasks specify set input output roles 
psm defines functional competence form set logical preconditions postconditions 
instance competence optimal heuristic classifier states output solutions optimal respect input solution space 
task characterized logical goal expression set assumptions domain knowledge 
components kbs configured combined different running systems creation explicit architectural elements adapters 
particular bridge adapters connect kinds components psm domain model way mapping relations ontologies components 
way bridge optimal heuristic classifier psm domain maps notion introduced psm data abstraction function observables 
www cs vu nl upml monica crub zy lu enrico motta mark musen process configuring reasoning component kbs involves activities mapping generic tasks psms domain model mapping generic classification task database artifacts produce artifact classification application mapping psms tasks selecting particular abstraction method performing subtask classification general adapting existing components specializing data solutions matching component classification process introducing fuzziness matching process 
precisely identified clear process model irs involves steps task selection application execution 
manual completion step requires significant skills users goal irs guide users entire configuration process 
detail step irs process model 
approach agnostic specific problem solving library illustrate irs examples taken experiment configuring components classification problem solving library domain 
domain user wishes develop automated support classifying roman artifacts information collected artifacts 

irs scenario process model 
task selection 
irs users need characterize goal application terms tasks known irs classification 
task selection hard means adopting particular viewpoint impose application 
instance solutions benchmark sisyphus office allocation problem included approaches modeled problem design problem ii approaches modeled classification problem 
words specific application necessarily fall particular task model 
task model provides conceptual viewpoint characterizing application configuring online problem solving resources irs focusing knowledge acquisition process 
irs supports users browsing navigating upml descriptions various tasks available libraries examples ways tasks applied previously 
users select task choosing refinement highlevel task optimal solution classification 
task configuration 
crucial step users configure selected task single solution classification particular domain providing relevant domain knowledge fill input output roles defined task 
irs provides support adapted understanding users configuration process allowing direct reuse pre existing configurations advanced experimentation 
irs supports direct acquisition value input role task ontology 
example users define new match criterion mechanism assess degree fit data solutions terms task ontology 
alternatively users simply select default value input role library 
domain knowledge conform task ontology irs supports users constructing mapping relation task role domain knowledge 
domain task mapping relation defines transformation piece domain knowledge instantiated role task 
experiment mapped role solution space hierarchy artifact types notion observables attributes artifacts provenance material application execution step attributes instantiated case data values 
output roles clearly instantiated actual knowledge structures stage mappings may required outputs conform domain ontology 
creating explicit architectural elements isolate configuration knowledge set components maximizes reusability components 
activity requires users understand connections adaptations needed knowledge components assembled working system 
irs reduces complexity configuration process providing structured mapping templates users instantiate particular case 
research needed ease configuration process 
irs generates task domain bridge relevant task domain ontologies store set mapping relations created step 
irs allows users backtrack task selection step domain match expectations task task expects single valued observables domain observables multivalued select refinement high level task 
domain selection 
phase users specify domain knowledge intend application 
irs provides range pre monica crub zy lu enrico motta mark musen existing domain models stored available upml compliant libraries users simply selection 
advantage selecting available domain model cases configuration effort needed mappings reusable 
experiment see mappings discussed earlier tend generic observables artifact features solution space hierarchy artifact types 
alternatively irs enables users provide domain knowledge directly filling knowledge acquisition forms 
possibility users provide knowledge base 
case users need solve related interoperability problems knowledge symbol level see section 
task verification step consists checking assumptions selected task defines domain knowledge 
irs performs step automatically running assumption checking engine task input roles possibly obtained domain inputs mapping relations assumptions task 
irs notifies users inputs satisfy assumptions task 
case irs guides users back task configuration step re specify erroneous inputs 
important note assumptions necessarily verifiable 
instance task model single solution classification includes assumption solution exists target domain 
clearly assumption verified general case 
psm selection 
step focuses selecting psm realize configured task 
similarly task selection step irs provides users list psms match configured task supports users browsing description psm 
irs uses different means compute list psm candidates realizing task 
upml description library may include set psm task bridges 
bridge encodes connection task psm realize task set mapping relations task psm ontologies 
bridge connects single solution classification task heuristic admissible solution classifier psm classification library 
alternatively irs carries competence matching process reasoning competence psms goal current task 
general reasoning requires full order logic theorem proving support part current implementation irs 
users choose available psms library 
psm configuration 
step similar task configuration step level selected psm irs guides users specifying domain entities fill input output roles psm 
roles psm inherited configured task corresponding configuring online problem solving resources irs psm task bridge 
provided library irs supports creation bridge map inputs outputs configured task ones selected psm 
addition selected psm may define supplemental roles 
example heuristic admissible solution classifier psm defines notion function computes observables raw data 
domain defined function specific geographical site artifact provenance feature coarse grained area useful classify artifact 
irs supports acquisition domain method mapping knowledge way similar domain task mapping task configuration 
irs stores result psm configuration psm domain bridge created user domain 
psm verification 
step focuses verifying selected psm applied task domain accordance assumptions psm results configuration process 
step essentially task verification step 
instance case chosen heuristic classifier assumption checking engine verify solution hierarchy hierarchy artifact types contains cycles 
result irs notifies users domain inputs satisfy assumptions preconditions psm 
case irs guides users back task configuration step psm configuration step re specify inputs satisfied 
application execution 
final step consists running configured psm realize specified task domain case data entered user 
irs acquires case data user instantiates case inputs psm interpreting domain task task psm domain psm mapping relations 
irs checks preconditions psm task mapped case data 
irs invokes psm code mapped inputs running code interpreter locally remotely 
knowledge location type psm code stored pragmatics fields upml description psm 
irs fills domain outputs results psm execution possibly transformed domain psm mapping relations defined psm configuration time 

initial implementation irs implemented irs design prototype tool exploits knowledge web hci technologies available groups 
implemented irs generic design java web frontend ocml modeling language 
implemented monica crub zy lu enrico motta mark musen irs design service integrated widely prot knowledge modeling environment 
irs web front 
implementation irs capitalizes knowledge web technologies available knowledge media institute mainly ocml modeling execution language large library problem solving components compliant upml framework accessible online knowledge level api 
ocml describe upml properties knowledge components actual contents 
irs directly connected server online interpreter processes ocml requests 
developed initial implementation irs supports activities process model described section 
browsing support ontology driven knowledge acquisition facilities enable users instantiate role values directly select pre existing ones library 
irs supports mapping pre defined ocml constructs free form constructs expressing arbitrary mappings 
irs provides library specific high level mapping templates map hierarchy template classification library allows user simply state particular domain hierarchy instantiates role solution space 
irs supports assumption checking limited form competence matching relies pre existing relations tasks psms 
irs supports application execution step invoking ocml environment interpret psm code case data inputs user enters special purpose forms 
integration irs design prot 
implemented irs design extension prot tool developed stanford ontology development ontology driven knowledge base construction 
irs extension interfaces domain knowledge bases libraries tasks psms specified upml prot upml editor 
extension implements user interface irs ontology driven graphical support prot enable users select configure application components 
importantly prot brings additional support irs configuration steps providing structured methodology mapping roles reasoning components corresponding domain entities 
methodology provides typology mapping relation templates mapping ontology covers wide range mapping relations simple renaming mappings complex numerical lexical expressions entities 
prot guides users configuration steps prot stanford edu configuring online problem solving resources irs mapping ontology input output definition task psm 
addition prot incorporates mapping interpreter runs mapping relations domain entities create psm level entities 
irs extension prot connected irs web server delegates steps task psm verification execution configured psm case data users enter knowledge acquisition forms 

discussion research related existing area web knowledge technologies 
comparison highlights strengths approach main issues addressed 
configurable web services 
industrial efforts aim provide online configurable services web 
address syntactic level interoperability web services standardized protocols description communication uddi wsdl net jini 
software components discovered usually centralized look service 
distributed web services cooperate achieve certain goal typically provide predefined functionalities 
semantic approaches stem research earlier agent technology 
web services declare capabilities requirements specialpurpose agents mediate services users locating matching connecting 
shared ontologies web services plan procedures described designed daml language enable agents perform tasks users dynamically chaining primitive steps realized web sites 
services implement relatively fine grained ad hoc procedures solve limited problems 
furthermore approaches assume users services share domain discourse ignoring issue mapping domain task method ontologies 
web services reusable different domains 
goal provide configurable services web 
services provide complete robust reusable methods achieving common knowledge intensive tasks various domains 
ontology driven approach component configuration provides www uddi org msdn microsoft com xml general wsdl asp www microsoft com net www sun com jini www daml org services monica crub zy lu enrico motta mark musen full framework model problem solvers irs uses constructing knowledge applications different contexts 
competence matching 
currently address adequately issue retrieving psms realize user specified task 
list possible candidate psms computed competence matching process 
process involves reasoning competence configured task available psms candidate psms selected postcondition statement fulfills goal task preconditions contradict assumptions task 
agent approaches retsina include efficient competence matching process retrieves agents services larks language 
larks provides relatively weak representational machinery express formal competence agents 
similar approach investigation members ibrow consortium 
important issue design contents specification formalisms strike right balance expressiveness efficiency support competence matching 
irs address possible mismatch ontologies task available psms 
usually different ontologies domains tasks ontologies tasks psms need mapped explicit relations turn need interpreted part process 
interoperability 
component interoperability center irs generally ibrow approach 
typically problemsolving library uses specific knowledge modeling language express properties components includes pieces code particular programming language 
federated upml framework alleviates difficulty modeling level 
knowledge level interoperability requires shared ontologies common modelling languages standard knowledge level apis okbc 
prot brings irs support okbc compliant languages 
execution level configured components including possible domain knowledge provided users proprietary format need assembled interoperable system 
distributed computing standards corba proven successful means encapsulating problem solving components combining platform independent operational systems 
initial ibrow broker prototype architecture operate heterogeneous components implemented generic corba interface irs enables library providers components available irs 
www corba org configuring online problem solving resources irs 
irs approach strongly builds proven knowledge engineering techniques 
key asset irs adds techniques principled methodology user centered tool support prototyping knowledge systems configuring reusable components structured libraries 
symbol level knowledge level interoperability issues remain addressed believe irs approach foster wider diffusion knowledge engineering paradigms lowering current conceptual engineering barriers applying 
web vehicle allow perform large evaluation experiment irs approach promises simplify system construction component reuse 
plan evaluate aspects speed system construction exploitation efficacy utility built systems application building process domain users 
time heterogeneous distributed versatile nature web challenge incorporate automated support irs simplified procedures customized interactions experienced users benefit advanced distributed problem solving services 
current users irs reasonably skilled developers wish prototype kbs application simply explore kbs technology 
time aim broaden target audience irs making possible experienced developers create applications irs 
current focus research facilitating user access sophisticated reasoning services involve heterogeneous ontologies expect harness technologies produced research support mundane levels service provision web 
cases take advantage scenarios ontology mapping service interoperability issues greatly simplified 
part ibrow project funded ist program european community 
ibrow collaborators stimulating discussions topics discussed 
anonymous reviewers helpful comments 
monica crub zy lu enrico motta mark musen 
benjamins problem solving methods diagnosis university amsterdam 

benjamins plaza motta fensel studer wielinga schreiber zdrahal decker intelligent brokering service knowledge component reuse world wide web 
kaw 

breuker van de velde 
ed commonkads library expertise modeling 
ios press amsterdam 

chandrasekaran generic tasks knowledge reasoning high level building blocks expert system design 
ieee expert 


chaudhri farquhar fikes karp rice okbc programmatic foundation knowledge base interoperability 
aaai madison wisconsin aaai press mit press 

eriksson shahar tu puerta musen task modeling reusable problem solving methods 
artificial intelligence 


fensel motta structured development problem solving methods 
ieee transactions knowledge data engineering 


gennari cheng altman musen reuse corba knowledge systems 
international journal human computer studies 


problem statement sisyphus models problem solving 
international journal human computer studies 


mcilraith son zeng semantic web services 
ieee intelligent systems 


motta reusable components knowledge modelling principles case studies parametric design 
ios press amsterdam 

motta lu library components classification problem solving 
sydney australia 

musen modern architectures intelligent systems reusable ontologies problem solving methods 
amia annual symposium orlando fl 

musen fergerson grosso noy crub zy gennari component support building knowledge acquisition systems 
conference intelligent information processing iip international federation information processing world computer congress wcc beijing china 

crub zy fensel benjamins wielinga motta musen ding upml language tool support making semantic web alive 
fensel hendler wahlster eds 
appear creating semantic web mit press press 

park gennari musen mappings reuse knowledge systems 
eleventh banff knowledge acquisition knowledge systems workshop banff alberta 

schreiber akkermans de shadbolt van de velde wielinga knowledge engineering management commonkads methodology 
mit press cambridge 

sycara lu klusch matchmaking heterogeneous agents internet 
aaai spring symposium intelligent agents cyberspace stanford ca 
