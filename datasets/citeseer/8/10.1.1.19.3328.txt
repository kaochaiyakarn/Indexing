formal approach protocols strategies legal negotiation guido governatori dumas arthur ter hofstede oaks cooperative information systems research centre queensland university technology gpo box brisbane qld australia propose formal executable framework expressing protocols strategies automated legal negotiation 
framework party involved negotiation represented software agent composed modules communication module manages interaction agents ii control module iii reasoning module specified defeasible theory iv knowledge base bridges control reasoning modules keeping track past decisions interactions 
choice defeasible logic justified set desirable criteria negotiation automation languages 
suitability framework illustrated case studies 
keywords 
automated legal negotiation auctions defeasible logic software agents 

legal negotiation 
negotiation mean process involving parties aimed reaching agreement acceptable parties involved 
perspective legal negotiation negotiation legal content negotiation legal issues taken account 
legal negotiations far common expect 
example agreement conceived form private contract contracts subject current relevant legislation 
kinds negotiation typical legal areas example cf 
frequent economics commerce related fields cases considered normative eye 
addition affecting content legal issues affect negotiation process 
negotiation guided funded arc self describing transactions operating large heterogeneous distributed environment involving qut pty permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
st louis missouri usa copyright acm 
dumas arthur oaks qut edu au protocol describes rules dispute parties exchange offers negotiation go terminate 
protocols seen agreements take form contract subject law 
example auction negotiation governed rules auction 
public auctions rules procedures established law cf example articles italian code civil procedure private auctions self regulated auction house states rules auction conducted rules subject law 
clear main normative aspects negotiation concerns definition protocols rules negotiations carried 
negotiation protocols classified bargaining divorce tenders english auction double auctions 
classification refined depending negotiation carried single step sealed bid auctions iteratively open cry auctions 
provides classification schema captures dimensions 
sealed bid bargaining tender vickrey divorce auction english auction open cry sealed bid dutch call market auction taxonomy negotiation protocols open cry continuous double auction classification dimensions orthogonal ones include single issue vs multiple issues 
legal negotiations involve interdependent issues 
auctions involving multiple items multiple units item example multiple issue negotiations 
direct vs mediated 
mediator neutral party judge opposed representative parties lawyer 
legal negotiations mediated 
anonymous vs identity open 
auction houses carry anonymous semi anonymous auctions 
brief overview shows protocols manifold difficult impossible capture single universal framework 
believe logic approach cope easily 
kind approach specify behaviour parties involved negotiation strategies 
interestingly expressing protocols strategies logic framework possible reason internal mutual consistencies 
motivation aims assessing feasibility suitability logic approach legal negotiation develop framework specifying protocols strategies setting 
organised follows section introduce list desiderata automated negotiation system satisfy section describe agent architecture systems section 
section defend defeasible logic desiderata section introduce defeasible logic formally section 
section develop case studies order illustrate framework works 
conclude discussion related section directions research section 

rationale approach desiderata choosing languages specification protocols strategies automated negotiation important establish set criteria languages need satisfy 
criteria inspired formulated context techniques information modelling 
encompass known principles language design 
firstly language specifying negotiation protocols strategies needs formal sense syntax semantics properly defined 
ensures protocols strategies interpreted unambiguously machines human beings predictable explainable 
addition formal foundation prerequisite verification validation purposes 
secondly language negotiation automation conceptual 
known conceptualization principle effectively means language allow users focus exclusively aspects related negotiation having deal aspects related implementation 
stated examples conceptually irrelevant aspects aspects external internal data representation physical data organisation access aspects related platform heterogeneity message passing formats 
thirdly order ease interpretation protocols strategies facilitate documentation language comprehensible 
comprehensibility achieved ensuring formal intuitive meaning line possible offering structuring mechanisms decomposition 
structuring mechanisms lead modularity setting means slight modification protocol strategy concern specific part specification 
closely related comprehensibility language aim suitable offer concepts close involved negotiation 
worth noting suitability criterion content dependent specialised sub fields ac cording nature phenomenon hand aim intended modelling 
interested actual execution negotiation process negotiation automation language executable 
furthermore setting open environment internet execution language expressions exhibit acceptable performances complex strategies involving issues great number participants execution performances scalable 
negotiation automation language sufficiently expressive able precisely capture existing negotiation protocols wide spectrum negotiation strategies 
architecture classical agent approach automated negotiation view negotiation process set software agents interact order reach agreement 
agents participating negotiation interact directly case negotiation mediator broker case multi party negotiation 
mediator may considered software agent guided set rules 
architecture agents memory proposed previous software agents composed modules 
communication module responsible receiving sending messages agents ensuring messages satisfy constraints imposed protocol 

memory contains history past decisions interactions agent including current intentions 

reasoning module encodes decision making part agent 

control module coordinates interactions modules 
remainder choose express control reasoning modules agent defeasible theories consequently memory knowledge base strict defeasible facts 
choice defended subsection 
address issue designing communication module 
believe defeasible logic applied 
roles communication module check incoming outgoing messages conform protocol 
protocol specified set strict defeasible rules rules derive partial specification communication module 
negotiation discussion parties purpose reaching agreement cf example 
suggests representing negotiation dialogue parties dialogue articulated progressive stages parties offers reject accept offers propose counter offers 
context negotiation involving parties call proponent opponent architecture depicted 
bilateral negotiation modeled sequences defeasible theories 
sequence records evolution protocol second third theories store knowledge bases defeasible theories dt parties 
graphically bilateral negotiation depicted follows inference engine defeasible logic proponent agent knowledge base control module knowledge base opponent agent inference engine defeasible logic system architecture bilateral negotiation stage stage protocol protocol proponent dt proponent dt opponent dt opponent dt 
stage proponent dtn opponent dtn 
agreement negotiation model think kinds negotiation strategies 
single fixed theory party uses single defeasible theory negotiation evaluated new data available negotiation 
fixed sequence theories party fixes sequence theories negotiation 
parameterised theories party defines set rules triggered modified stage negotiation 
revision theories party modifies actual theory stage stage result previous stage 
case studies section single fixed theory approach 
information privacy important aspect negotiation 
long protocol allows parties disclose piece information 
partition defeasible theory party parts public part disclosed party private part 
proponent computes theory obtaining set public passed opponent communication modules parties 
opponent uses facts supplement knowledge base re computes theory 
result computation possible results opponent accepts proponents offer negotiation terminated successfully opponent rejects proponents offer counter offer negotiation continued pass stage opponent rejects offer parties converge agreement point negotiating negotiation terminated failure 
context legal bilateral negotiation consider external rules example laws regulating trade hand rules negotiation define legal outcome agent consider knowledge base take account defeasible theory corresponding relevant 
worth noting legal issues considered levels 
involved negotiation phase evaluation offers subsequently verify legality validity reached agreement 
architecture applicable multi party negotiations sellers buyers 
setting architecture depicted 
seller agent defeasible rules knowledge base control module bidder agent control module knowledge base defeasible rules seller agent defeasible rules knowledge base control module auction broker memory control module reasoning bidder agent control module knowledge base defeasible rules seller agent defeasible rules knowledge base control module bidder agent control module knowledge base defeasible rules system architecture auctions 
conceptually time bidding agent notified new event regarding auction logic program invoked 
program reads knowledge base attempts deduce new facts refute existing ones updates knowledge base accordingly 
depending new state knowledge base agent determines submit bid immediately wait event retract auction 
process carried sellers applicable 
choice formalism reasons defeasible logic considered appropriate tool formalize legal negotiation 
examine 
negotiation thought dialogue parties concerning resolution common dispute cf 

perspective authors cf 
suggested argumentation reasoning formalisms characterise proposed argumentation supplement negotiation procedures cf 

shown defeasible logic characterised argumentation semantics formal semantics defeasible logic line argumentative nature legal negotiations 
close con derivations defeasible logic arguments defeasible logic offers predictable explainable formalism legal negotiation 
defeasibility normative reasoning established phenomenon facets 
consequently plethora non monotonic systems proposed capture unfortunately proposed non monotonic systems different incompatible intuitions 
shown defeasible logic flexible deal intuitions non monotonic reasoning modular way applying paradigm 
nute proposed extend defeasible logic deontic operators capture normative phenomena shows regulations represented conceptually defeasible logic 
undoubtedly context legal negotiations strict sense negotiations governed norms suitability defeasible logic protocol specification language finds utmost degree 
procedure negotiation leave space open exceptions subject defeasibility case protocol section 
regarding strategy specification current systems adopt quantitative approach utility functions 
easy find right utility functions set negotiation issues especially situations needs express preferences attaching metric 
utility functions determine preferences expressed comprehensible suitable way defeasible rules priorities rules 
reason believe context legal negotiations defeasible logic suitable complementary strategy specification approaches purely utility functions 
complexity defeasible logic linear existing implementations able deal non trivial theories consisting propositional rules offering executable scalable system 

basics defeasible logic section describe defeasible logic formally 
defeasible logic sceptical formalism meaning support contradictory 
seeks resolve differences 
cases support concluding support concluding logic conclude name sceptical 
support priority support concluded 
sceptical reasoning appropriate study normative reasoning 
set norms rules represented defeasible theory 
defeasible theory knowledge base defeasible logic consists different kinds knowledge facts strict rules defeasible rules defeaters superiority relation specification conflicting literals 
facts denote simple pieces information deemed true regardless knowledge items 
typical fact john minor minor john briefly strict defeasible rules represented respectively expressions form possibly empty set prerequisites rule 
strict rules rules classical sense premises rule allowed apply rule get 
premises facts 
example strict rule minor person 
written formally minor person worth noting technically facts represented strict rules empty antecedent 
idea non monotonic reasoning difference facts strict rules empty antecedents pragmatic facts capture snapshot case hand may change case case rules description scenario analysis depended case hand 
defeasible rules rules defeated contrary evidence 
example rule person capacity perform legal acts extent law provide written formally person idea know person may conclude legal capacity evidence suggesting 
defeaters special kind rules 
prevent support 
example guilty rule states pieces evidence assessed weak prevent derivation guilty verdict hand support guilty 
superiority relation rules define priorities rules rule may override rule 
example defeasible rules person minor contradict conclusive decision minor legal capacity 
introduce superiority relation conclude minor legal capacity 
turns need define superiority relation rules contradictory 
notice cycle superiority relation counter intuitive knowledge representation perspective 
example sense consequently defeasible logic discuss requires acyclic superiority relation 
literal define set complementary literals set literals hold 
consider example suppose predicates innocent guilty 
define constant innocent innocent guilty 
know usual interpretation predicates true time individual 
stipulate negation literal complementary literal rest give set complementary literals shall omit negation literal 
formally defeasible logics 
rule consists antecedents body finite set literals arrow consequent head literal 
kinds arrows correspond respectively strict rules defeasible rules defeaters 
body rule empty consists formula set notation may omitted examples 
set rules denote set strict rules rs set strict defeasible rules rsd defeasible rules rd set defeaters 
denotes set rules consequent andr denotes set rules consequent defeasible theory structure finite set facts finite set rules binary relation andc function mapping literal set literals 
tagged literal tag may positive negative polarity 
intended mean definitely provable strict rules 
intended mean proved definitely provable intended mean defeasibly provable intended mean proved defeasibly provable basically supported rule prerequisites supported case hand stronger rule prerequisites fail supported 
provability concept derivation proof derivation finite sequence tagged literals satisfying conditions correspond inference rules kinds 
denotes initial part sequence length rs rs definition describes just forward chaining strict rules 
literal definitely provable need find strict rule head antecedents definitely proved previously 
establish proven definitely establish strict rule head antecedent shown non provable 
turn complex case defeasible provability 
giving formal definition provide idea notion 
defeasible proof literal consists phases 
phase strict defeasible rule put forth order support consider attack rules negation attack fails rule discarded possible prove part antecedent defeasibly provable provide stronger applicable strict defeasible rule stronger rule attacking worth noting defeaters phase 
rsd rsd rsd rsd condition analogous explanation holds 
show provable defeasibly choices show definitely provable need argue defeasible part 
particular require strict defeasible rule head applied 
need consider possible attacks reasoning chains support complementary specific prove defeasibly show complementary literal definitely provable 
consider set rules known inapplicable head note consider defeaters support line motivation defeaters 
essentially rule attacks provable rule rule head properties applicable point ii stronger attack stronger rule 
explain mechanism defeasible derivations showing time appropriateness defeasible logic normative reasoning consider rule australian civil aviation regulations aircraft converging headings approximately height aircraft right shall give way power driven air aircraft shall give way balloons norm represented defeasible logic follows rule states aircraft aircraft right way aircraft second states aircraft right way aircraft right idea rules power driven aircraft right way non power driven 
balloon classify balloons non power driven aircraft assumes aircraft power driven information 
superiority relation determined follows exception specificity 
examine cases aircraft type power driven non power driven converging aircraft non power driven aircraft converging 
case apply prerequisites hold prove antecedent 
second case apply prerequisites hold established apply derive non power driven aircraft right way power drive 
stated section defeasible logic protocol specification language finds utmost degree suitability context legal negotiations strict sense negotiations governed norms 
example consider auction consisting bidding rounds winners highest bids second round offer second round second round case winners highest bids round 
describe protocol need predicates bidder offered second round bid actual bid bidder point scenario captured defeasible rules bid bid complementary literals defined bid bid remain determine highest bids easily done simple inspection form bid 
case studies section detail examples application defeasible logic automated legal negotiation scenarios 
example section consider simple case negotiation single issue bargaining 
second example section examine model english auction automated bidder defeasible logic 
bargaining scenario buyer wants buy house negotiates price seller 
describe simple defeasible theory capturing strategy normative rules strategy subject 
sake simplicity strategy consisting fixed single theory 
buyer strategy offer minimum price wait maximum price buyer accept maximum price offered 
rules corresponding simple strategy price offer accept offer protocol similar italy auction concession umts radio frequencies 
offer offer condition states point time offer 
point need set rules establish initial maximum prices 
cash finance appliances appliances appliances tax 
complementary literals predicates appliances defined follows appliances appliances explain shortly rules says maximum price sum available cash finance obtained rule states price inclusive taxes appliances rule exceed maximum price 
installed appliances sold house buyer needs appliances pay price pay higher price brand new 
negotiation external considerations taken account order determine price 
example july gst service tax introduced australia settlement date occurs date transaction subject gst rule house brand new rule 
case home buyers entitled rule permanent residents australian citizens 
rules determining amount taxes applied 
gst gst resident gst tax gst tax gst tax 
tax tax english auction english auction popular negotiation mechanisms 
simplest form serves select buyer item establish price multi party single issue negotiation 
variants english auction see survey 
variant currently biggest internet trading communities ebay may roughly described follows 
seller starts setting reservation price may may announced bidders 
sets timing constraint expressed firm deadline maximum duration successive bids 
potential buyers issue increasingly higher bids 
increment bid constrained greater threshold 
auction stops timing constraint violated deadline reached bid registered longer established maximum duration 
bidder buys item price bid 
bid issued reservation price item sold 
assume role seller english auction implemented auction broker 
system registers parameters auction publishes processes incoming bids continuously accessible auction status 
control module auction broker described task structure 
task structure straightforwardly translated defeasible theory 
new bid evaluate bid reject bid terminate accept bid auction broker control module hand bidder represented software agent control reasoning module capture bidder strategy 
illustrate bidder strategy expressed defeasible logic consider scenario 
mark wishes participate auction item 
doesn know exactly item worth thinks value lies bounds keen item decides assume auction item worth eventually increase valuation situations occurs bids current valuation registered somebody bid current valuation 
soon conditions met mark raise valuation minimum possible amount allows stay auction 
accept item usual case english auctions mark start bidding minimum amount reservation price needed subsequently participants bids minimum increment long resulting bid current valuation 
eventuality auction deadline close hold current highest bid bid current valuation just bidding minimum increment 
formally parameters status history auction modeled predicates constants constant denotes minimum amount bidders allowed 
constant denotes minimum amount acceptable bid 
reservation price usually greater 
fact assume sequel bidders know reservation price 
predicate provides time remaining auction 
predicate provides current highest bid 
predicate holds bids amount registered 
predicate provides aggregated view history auction available predicate called list pairs time bid 
rules deriving predicate predicate strict defeasible omit sequel 
parameters mark strategy modeled constants predicates constant duration deadline mark estimates bid valuation just bidding minimum increment 
constant number bidders bid mark current valuation considers raising 
constant amount expressed percentage bidder bid mark current valuation considers raising 
constant self explainable 
predicates states bid amount submitted 
auction agent knowledge base contains fact predicate valuation provides current valuation 
states valuation raised bidding agent finds fact form knowledge base immediately deletes updates predicate valuation accordingly valuation hold subsequently 
predicate gives amount accepted bid issued bidder 
auction holds 
rules modeling strategy valuation timet valuation min increment timet timet timet valuation signi valuation signi superiority relation rules defined follows precedence 
sets complementary literals state amount bid new valuation valuation valuation rules model bidding strategy 
rule states time remaining agent current bid highest increased minimum increment provided current valuation allows 
rule states deadline close bidder hold item bid amount current valuation submitted immediately 
rules similar apply valuation raised 
rules determine valuation raised rule model conditions valuation raised rule defeater modeling fact bidder circumstances willing item amount 
defeater provides strong modularity defeasible program 
instance user wanted modify strategy statement form raise valuation reservation price met highest bid current valuation just extend corresponding logic program rule valuation having worry reservation price greater maximum valuation raising valuation maximum prevented rule 
control module bidding agent described task structure process agent activates defeasible inference engine replies defeasible fact form accordingly agent contacts auctioneer submit bid amount auctioneer task structure straightforwardly translated defeasible theory 
new bid evaluate bid bidder control module replies stating bid accepted rejected 
bid accepted bidding agent introduces facts knowledge base waits auction broker notifies participant triggers inference engine 
hand submitted bid rejected participant higher amount submitted bid processed auction broker provides current price quote highest bid 
agent updates predicates reflect triggers inference engine determine new bid submitted 
bid submitted agent waits notifications new bids issued participants updating knowledge base triggering inference engine 

related propose legal negotiation support system tailored australian family law 
system bi directional fuzzy cognitive map relies essentially numerical fuzzy values negotiation issues parties involved 
values determine order decomposition allocation content dispute 
trade fuzzy relationships resolving conflicts 
clear approach meet desiderata listed section general easy define appropriate value functions corresponding trade relationship numerical functions easily explainable system natural intuitive approach problem 
secondly take account legal issues deal defeasibility normative reasoning 
architecture legal negotiation support system outlined 
main feature user interface uses toulmin diagram represent status negotiation 
additionally supports defeasible reasoning mechanisms prioritized logic programming adviser 
reasoning modules negotiation contents describe protocols seen legal context protocols negotiation defeasible 
advisor module utility functions argued approach lacks suitability comprehensibility 
michigan auctionbot auction management server supporting creation location enactment different kinds auctions 
users manually interact system html interface alternatively develop arbitrarily complex bidding agents connect auction manager tcp ip level api 
api generic deal kinds auctions english dutch double common set primitives 
auctionbot host trading agent competition similar platform called 
auctionbot address issue specifying bidding agent strategies 
auction management server called released 
interesting feature supports combinatorial auctions auctions bidder may place bids combinations items may issue simultaneous bids combinations ensuring bids win 
house supports mobile agents issue bids behalf user 
user allowed specify bidding strategy choose set predefined ones 
classifies techniques designing negotiation strategies categories game theoretic heuristic 
approach models negotiation situation game attempts find dominant strategies participant applying game theory techniques 
simple negotiation protocols specific assumptions rationality attitude risk participant kind analysis leads simple optimal strategies 
results generalize easily complex situations 
approaches hand strategy consists family tactics method generating counter offers set rules selecting particular tactic depending stage negotiation 
strategies bargaining bidding discussed previous section seen belonging family 
interestingly case studies show defeasible logic suitable express tactics rules tactic selection 
argumentation approaches extend heuristic ones introducing communication performatives threats offer rewards accept offer clever negotiation performatives modeled approach defeasible predicates shared participants negotiation 
concretely bargaining case study section addition having predicate offer theory include predicates threat reward derivation rules predicates 
logic formalisms rule prioritisation context automated negotiations studied 
garcia suggests variant defeasible logic express strategies agents trading stock markets 
variant defeasible logic authors consider support explicit ranking rules theory derives ranking specificity criterion arguments 
roughly speaking argument specific defeat argument takes account information 
addition fact approach allows tie breaks defeasible arguments may lead counterintuitive situations 
semantics user concept information may potentially line defeasible logic inference method 
reeves logic programs clp express knowledge user preferences constraints negotiation structures 
authors address issue specifying negotiation strategies directly deriving set negotiation structures carried order transform contract template executable contract 
interestingly defeasible logic programming dlp expressive clp sense allows user express stratified theories 
question remains open possible express useful contract templates dlp expressed clp 

proposed qualitative logic approach automated legal negotiation shown meets set desiderata negotiation framework satisfy 
particular believe defeasible logic inference engine proposed architecture approach suitable legal negotiation far allows capture effectively defeasibility law close way 
worth noting approach offers great deal flexibility compared approaches argued approaches particular utility functions fail satisfy criteria listed section 
problems understood behaving utility functions defined cases may useful combine approaches 
usually utility functions applied evaluate offers party willing concede issues opponent party conceded issues utility functions defined different weight conceded attributes 
example utility functions defined set attributes 
supplement functions set defeasible rules choose appropriate utility function solved issues example concession concession meaning rules follows usually offer evaluated concessions counter party utility functions 
advantages method possible formulate trade strategies easy way utility functions simplified 

survey auctions 
www com new html 
grigoris antoniou david billington guido governatori michael maher 
modeling analysis regulations 
proceedings australian conference information systems 
grigoris antoniou david billington guido governatori michael maher 
flexible framework defeasible logics 
proc 
american national conference artificial intelligence aaai pages 
aaai mit press 
grigoris antoniou david billington guido governatori michael maher andrew rock 
family defeasible reasoning logics implementation 
werner horn editor ecai 
proceedings th european conference artificial intelligence amsterdam 
ios press 
grigoris antoniou maher david billington 
defeasible logic versus logic programming negation failure 
journal logic programming 
john 
ai techniques modelling legal negotiation 
pages 
acm press 
instituto de en artificial iiia 
project 
www iiia csic es projects 
ebay 
home page 
www ebay com 
garcia simari 
deliberative stock market agents defeasible logic programming 
proc 
ecai workshop engineering societies agents world berlin germany august 
springer verlag 
thomas gordon 
pleadings game 
kluwer academic press dordrecht 
guido governatori michael maher 
argumentation theoretic characterization defeasible logic 
werner horn editor ecai 
proceedings th european conference artificial intelligence amsterdam 
ios press 
guido governatori michael maher grigoris antoniou david billington 
argumentation semantics defeasible logics 
mizoguchi john slaney editors pricai topics artificial intelligence volume lnai pages berlin 
springer verlag 
van editor 
concepts terminology conceptual schema information base 
publ 
nr 
iso tc sc wg ansi west nd street new york ny 
benjamin grosof 
prioritized conflict handling logic programs 
editor proc 
int 
logic programming symposium pages 
mit press 
ter hofstede 
information modelling data intensive domains 
phd thesis university nijmegen nijmegen netherlands 
iiia upc organizers 
trading agents tournament 
www iiia csic es projects agents june 
jennings parsons sierra faratin 
automated negotiation 
proc 
conference applications intelligent agents multi agent systems paam manchester uk 
ronald loui 
process policy resource bounded non demonstrative reasoning 
computational intelligence 
michael maher 
propositional defeasible logic linear complexity 
technical report department mathematical computer sciences university chicago 
michael maher guido governatori 
semantic decomposition defeasible logic 
proc 
american national conference artificial intelligence aaai pages 
aaai press 
michael maher andrew rock grigoris antoniou david timothy miller 
efficient defeasible reasoning systems 
proc 
international conference tool artificial intelligence 
computer society press 
nitta akira 
legal negotiation support system 
pages 
acm press 
donald nute 
apparent obligation 
donald nute editor defeasible deontic logic pages 
kluwer 
donald nute 
norms priorities defeasibility 
paul mcnamara henry prakken editors norms logics information systems 
new studies deontic logic pages 
ios press amsterdam 
university michigan artificial intelligence laboratory 
michigan internet auctionbot 
auction eecs umich edu 
parsons sierra jennings 
agents reason negotiate arguing 
journal logic computation 
henry prakken 
relating protocols dynamic dispute logics defeasible argumentation 
synthese 
howard raiffa 
art science negotiation 
harvard university press cambridge ma 
daniel reeves michael wellman benjamin grosof chan 
automated negotiation declarative contract descriptions 
seventeenth national conference artificial intelligence workshop knowledge electronic markets austin texas july 
aaai aaai press 
sandholm 
generation electronic commerce server 
international conference autonomous agents agents barcelona spain june 
betsy strother 
tac trading agent competition 
acm exchanges august 

home page 
www com 
weiss editor 
multiagent systems modern distributed artificial intelligence 
mit press 
wooldridge 
intelligent agents 
weiss 
wurman wellman walsh 
michigan internet auctionbot configurable auction server human software agents 
proc 
nd int 
conference autonomous agents 
acm press may 
