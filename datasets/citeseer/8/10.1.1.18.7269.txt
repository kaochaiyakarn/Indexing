obligation monitoring policy management claudio bettini sushil jajodia sean wang policies widely modern systems applications 
recognized simple decisions just systems applications 
policies require actions performed decision accordance policy 
address need studies notions obligations conditions actions ful filled users system decision 
obligations investigates mechanisms monitoring obligations 
especially discusses various aspects system may compensate unfulfilled obligations 
policies widely play important role different contexts 
computer system policies provide basis design underlying control mechanisms 
example access control policy defines information users authorized read modify 
research policies traditional static policies decisions user requests 
modern applications business business business consumer ap plications traditional static policies inflexible meet complex requirements 
example consider loan application management payment collection system 
allows users initiate loan application process registered system 
users opportunity register system supplying necessary information dsi universit di milano italy 
bert unimi 

info software systems eng george mason university va jajodia grau edu step successful permission proceed loan application process 
note initiation loan application statically assigned permission users 
users permission apply loan long satisfy conditions don satisfy conditions may chance perform certain actions satisfy 
continuing example assume loan application approved 
case applicant access funds con dition user agrees pay loan certain payment schedule 
condition different statically assigned permission sense user promises satisfy certain obligations system needs able monitor obligations take appropriate actions obligations met 
example see policies applications complex system requires flexible powerful mechanisms handle condi tions actions certain decisions access loan funds applicant example 
sets conditions actions conceptually different require different management techniques distinguish calling provisions obligations respectively 
intuitively provisions specific actions performed decision taken obligations actions taken 
previous introduced mal policy model logic rules 
addition usual logic rules attach sets predicates provisions obligations 
pa focused reasoning policy rules presence provisions obligations 
specifically system deduce actions user may perform order gain access promises user gaining access 
discuss issues involving obligations policy management 
obligations user system actions taken decision system needs monitor progress obligation fulfillment 
furthermore obligations fulfilled system able take compensatory actions 
purposes discuss obligation specifications corresponding compensatory actions 
investigate issues involving system operations monitor obligations 
rest organized follows 
section briefly introduce policy rules defined 
section obligation specification related issues 
study section system issue monitoring obligations 
relate contributions section conclude section summary remarks re search directions 
policy rules provisions obligations intuitively policy represented set basic rules associated specification provisions obligations 
rules form datalog program 
formally consider finite sets variables constants predicate symbols atom formula predicate symbol li constant variable symbol 
atom said ground variable free 
rl formula written bm atoms called head bod rule 
clausal form rule expressed 

fact ground atom represented rule empty body atom head 
assume variable appearing head rule appears body 
represent provisions obligations disjoint sets predicate symbols consider positive datalog program easy extension framework discussed allows stratified locally stratified negation 
disjoint set predicate symbols allowed policy rule specification language 
contrary set variable constant symbols admitted predicates policy rules 
predicate symbols may nonnegative arity 
atom symbols predicate pi lk lk constant variable clear context distinguish atoms policy calling atoms 
formula atom disjunction formulas conjunction formulas 
atom ground variable free formula onc atoms formula ground 
interpretation formula mapping ground atom constant true false atoms 
mapping constants true false respectively 
satisfaction formula defined inductively structure formula usual considering ground atoms basis conjunction disjunction operators appear formula 
section specification obligation simply predicate considered depth affect formal framework 
policy rule associated po formula denoted representing provisions obligations rule 
impose intuitive constraint vari able appearing appear body 
note predicates part policy rule specification datalog program appear model example give set rules provisions obligations predicates 
observing note obligation may involve constant symbols case ap pear rule body necessarily appear rule 
example may accept deal imposing obligation party part income charity organization 
organization may identified constant appear policy rules 
rule po formula oi pl set rules provisions obligations 
deal provisions obligations policy rules define global provision obligation set gpos atom intuitively gpos represents alternative sets provisions obligations satisfied derive policy rules 
example consider derivation rules exam ple 
easily seen ways derive rs 
collecting provisions tions formulas get gpos representing possible derivations 
gpos computed computing model datalog program top procedure interested specific atom 
algorithms illustrated 
transform global provision set gpos certain ground atom disjunctive normal form dnf form example conjunctive sub formula represents set provisions obligations sufficient satisfy order derive atom 
policy decision may involve different derivations invoke different provisions obligations user system selecting certain minimum set provisions obligations gpos interesting issue 
number possibilities immediately clear 
example may assume provisions obligations predicate weight heavier weight means predicate difficult satisfy 
case may simply choose set provisions obligations minimum weight gpos 
various issues involved selection scheme detailed 
example illustrate 
example mentioned earlier gpos 
sets provisions obligations alternatives decision pi ol vpos 
assume satisfied 
assume weights provisions obligations predicates follows 
satisfied give difficulty satisfied ignored obtain vpos vpos 
case better choice provisions obligations ql 
user system need satisfy provision promise satisfy obligation 
considered provisions mainly actions external user perform order policy rule applicable 
cases actions system perform considering policy rule applicable call system provisions syntactically disjoint set predicates distinguish 
provisions associated weight 
reasonable strategy may consider provisions secondary importance respect ones ask user satisfy 
obligation management stated system specifies user obligations time user accepts policy agreeing pay monthly fee services 
acceptance implies user agrees fulfill obligations 
order ensure system monitor obligation fulfillment case failure take necessary compensating actions 
compensating actions range decreasing trustworthiness user replacing un fulfilled obligations costly alternatives actions informing relevant authorities default terminating policy 
order replace obligations stringent ones user needs informed changes contractual obligations 
similarly obligations fulfilled promised may appropriate positive compensating action acknowledging payment monthly fees user rewarding user upgrading ness 
specifying actions provisions obligations order specify part obligation consequences user accepting obligation monitoring fulfillment system introduce notion action 
actions may performed system customer external entities 
actions may represented special predicates having number parameters conveying information system user specified predicate send possibly parameters 
parameter action name second parameter recipient identity third parameter time action executed 
example action taken system send customer time loan 
action informs recip customer loan celled time time sending notice 
recipient retrieves action messages executing receive predicate set parameters send 
continuing example action send customer time loan effect execution action receive time loan 
predicate eval true customer customer time time 
semantic interpretation implies actions take effect immediately action propagation takes time 
history obligation ful access control deci sions long term success system obligations increases user community honoring obligations 
example banks lower loan default rates get financial difficulties 
user histories obligation fulfillment need utilized deal ings 
may done assigning numerical measure trustworthiness referred reliability rating similar credit rating lending institutions united states 
ternary predicate reliable reliable subject score time true policy rule score reliability rating subject subject time time 
order update reliability ratings subjects system special action term send system time subject score adjusts reliability score subject subject score time time 
score non negative real number 
example rule uses reliability rating 
access customer loan approve customer buyer reliable customer score time score customer loan customer income income 
rule states customer buyer approved loan provided reliability rating higher income times monthly payment arising proposed loan 
hierarchical definition complete definition obligation entails consequences fulfilling defaulting obligation 
addition may allow hierarchical construction obligations 
consequences fulfilling defaulting gation specified respectively fulfill clause obligation 
fulfilling clause specifies actions taken obligation fulfilled defaulting clause specifies actions taken obligation fulfilled user follows fulfilling clause consists finite set actions invoked system specified times instance obligation satisfied 
defaulting clause consists finite set compensating activities 
compensating activity consists obligation instance 
finite set actions 
semantics compensating activity consists replacing un fulfilled obligation new set obligations set actions taken system 
refer actions fulfilling defaulting clauses obligation 
specification constraint require chain compensating activities defaulting clause finite 
example obligation specification fulfilling defaulting clauses 
obl definition customer loan time payment penalty ful action list send customer time loan payment send system time customer def obl customer time payment penalty action list send reminder customer time loan payment penalty send system time customer example shows obligation definition name having parameters 
fulfilling component ful action set consisting actions 
intended customer second intended system 
accepting obligation entails consequences obligation fulfilled acknowledgment sent customer reliability customer increased amount system 
original obligation fulfilled customer obligated fulfill new obligation receive reminder message reliability customer decreased amount 
previous example defaulting clause def obligation uses obligation requires definition 
consequently pair forms obligation chain sense definition uses 
specification constraint requires obligation chains finite length 
addition definition obligation defaulting clause obligation allow types hierarchical constructions obligations 
follows 
obligations 
obligation definition free integer variable integer obligation 
predicate formed boolean combinations instances predicates may include receive obligation obligation 
notice obligation equivalent 
loop construct considered syntactic sugar 
conversely semantics obligation evaluated evaluating condition evaluates true obligation fulfilled 
truth evaluated classical truth tables 
example hierarchically defined obligation 
customer loan time obl obl receive customer loan obl customer customer example refers tn payment period 
assume time days refers days policy enforced 
syntactically obligation conjunction obligations obl obl 
obl constructed loop obligation obl 
obl constructed loop construct obl turn disjunction obligations 
notice condition obl receive customer loan constructed conjunction instances receive predicate comparison operator order obligation sense obligations defined 
semantically example says fined obligation combination obligations customer purchase loan days 
second conjunct forces customer pay loan back provided loan cancelled system pay period 
payment done ways paying time fulfill obligation paying extended payment date fulfilling obligation 
example specifies rules governing loan application potential consumer buying item credit 
rule states customer satisfy provision registering order read loan application 
rule states customer having read permission loan application apply loan provided signs conditional purchase agreement vendor purchase 
rule states customer applied loan get loan self approved provided ity rating customer higher monthly income times monthly payment purchase 
furthermore approval consumer accept loan days credit approval 
stated obligation 
customer fulfills obligation system setup customer sign loan allow purchase proceed stated definition obligation 
customer receive cancellation notice loan application 
customer accepting loan obligated equal payments tn month additional payment tn month stated gation rule 
paying time paying tn month customer reliability rating increased payment acknowledged 
delayed payments customer sent notice remind date extended payment period result decrementing reliability measure 
delayed payments acknowledged 
customer defaults pay extended date notice sent reliability score reduced reprocessing loan 
details stated definitions obligations 
term self approved mean loan approval process fully automated loan officer involved process 
access customer loan read register customer access customer loan apply access customer loan read customer access customer loan applicant loan customer reliable customer score time score customer loan customer income income 
bl customer loan time bl lto receive customer loan customer customer obligation definitions obl definition customer loan time ful action list customer loan customer time def action list send customer time loan obl definition customer loan time payment penalty ful action list send customer time loan payment send system time customer def obl customer time payment penalty action list send reminder customer time loan payment penalty send system time customer obl definition customer time payment ful action list send customer time loan payment def action list send customer time loan send system time customer customer time loan send customer time loan example specification obligations actions monitoring compensating actions system depends users fulfill obligations monitor 
monitoring useful ways 
firstly system outcomes monitoring take nec essary compensatory actions honored defaulted obligations 
secondly impact dealing users adjusting reliability ratings 
obligations defined hierarchically give algorithm express complex obligation monitoring terms atomic counterparts 
explain basis algorithm 
monitoring condition free tions stated obligation form equivalent 

loop free obligation stated disjunction conjunctions referred disjunctive normal form 
say obligation disjunctive normal form fulfilled disjuncts fulfilled 
similarly obligation normal form fulfilled conjuncts fulfilled 
order simple procedure verify obligation fulfilment need mechanism check atomic obligation fulfilment predicates defined terms predicates 
example consider obligation definition 
fort lto customer customer removing loop obligation written normal form ai customer customer disjunctive normal form vii de fined follows customer customer 
case atomic obligations monitored ways example setting appropriate system triggers certain events briefly explained section 
monitoring conditional obligations monitoring conditional obligations conditions expressions form evaluated 
notice instance boolean combinations receive predicates comparison equality predicates 
evaluated context keeps history receive predicates 
consider example obligation 
receive customer loan customer customer order verify obligation honored system verifies event entry exists having taken action send customer loan time satisfying checks customer customer fulfilled customer 
order check satisfied notice customer customer normal form component satisfied 
means customer pay amount time amount time 
notice condition receive customer loan transformed form send customer loan verified inspecting history messages sent server 
addition verifying obligation server responsible specified actions 
case obligation fulfilled defaulting clause defaulted obligation replaces defaulted obligation alternative server monitor new obligation 
algorithm addressing issues provided 
obligation monitoring algorithm shows complex obligation monitored monitoring constituents 
explained algorithm assumes server mechanism monitor atomic obligations 
addition algorithm derives set actions server take complex obligation algorithm set actions taken gation defaulted algorithm 
algorithm send receive obtained replacing receive send 
monitoring time considering examples section proposed formalism specify complex obligations clear need temporal reasoning support order efficiently monitor obligations timing constraints 
example order monitor obligation system set trigger check buy event specified number days obligation accepted 
event compensating action obligation defaulting taken 
may pretty easy task case complex temporal distance constraints involved 
may clear set obligations associated policy decision atom datalog program consistent 
despite problems investigated approach plan represent set temporal distance constraints specified set obligations temporal constraint network apply known algorithms compute satisfiability polynomial time 
exam ple suppose constraints part obligation specification 
represent constraints graph called temporal constraint network nodes labelled variables respectively edge labelled minimum maximum temporal distance variables associated nodes example constraints edge labeled 
arc path consistency algo rithms graph decide consistency derive implicit temporal relationships find lution 
solution constraint network assignment event occurrence times variables constraints satisfied 
different time granularities constraints hours business days weeks techniques proposed adopted 
deciding temporal consistency specification sufficient identify appropriate triggers system set order monitor obligation fulfillment 
purpose introduce concept guarding time 
intuitively time partially instantiated set temporal constraints guarding time ta rep resents time event occurs ta compensating action defaulting obligation performed ta guaranteed constraint violated ta 
definition tk variables constraint net guarding time tg defined min vs definition says minimum time solution partial instantiation value words solutions exist values greater tg 
satisfy constraints event occur tg 
finite guarding time computed impose upper bound domain obligation form 
fulfilled oi fulfilled oi fulfilled defaulted obligation form 
fulfilled fulfilled oi oi defaulted oi fulfilled obligation form apply clause 
obligation form replace instances receive send obtain send receive qb send receive true context server fulfilled fulfilled fulfilled obligation forms described obligation defaulting clause fulfilment atomically axiomatic fulfilled defined fulfilment clause defaulted defined default clause obligation forms described obligation defaulting clause fulfilled atomically fulfilled defaulted atomically fulfilled 
defaulted defaulted atomically defaulted obligation monitoring algorithm temporal variables maximum time event occur 
restriction imposed syntactically ensuring node graph directed path instantiated node involving oo constraints edges 
new guarding time generated event occurrence obligation monitoring 
result shows compute value 
proposition tk variables constraint graph guarding time computed rain tj tj tj domain uninstantiated variable tj computed consistency algorithm 
intuitively consistency algorithm find inconsistency constraints returns non empty domain values vari able 
known solution net obtained considering minimum values domains considering maximum values 
guarding time minimum maximum values 
related examples languages policy specification ponder language policy description language pdl tt 
obligation po ponder event triggered rules policy management networks distributed systems 
similarly pdl polices event condition action rule paradigm active databases define policy function maps series events set actions 
goal propose policy specification language ponder contrary contribution emphasizes role policy rule conditions true actions external agents 
particular focus obligations imposed policy impact fulfillment defaulting policy 
numerous papers access control polices see modeling number aspects including role access control delegation time dependent access control multiple access control policies 
models assume system authorizes access request denies 
concept provisional authorizations introduced 
proposes ac cess control system xml documents optional provisional actions included specification authorization 
provisional action defined set functions log verify encrypt transform write create delete extending semantics authorization policy 
case actions taken system part xml document transformation triggered user request 
concept generalized formal treatment pro authorizations rules proposed 
provisional authorization imposes access granted provided user system take certain actions prior authorization request 
identifies class logics specify provisional authorizations elaborates notion weakest precondition access granted 
approach briefly section elaborate ideas providing algorithms automatically derive weakest provisions obligations considering semantic relations 
focus monitoring management obligations history defaulting im pact choice weakest provisions obligations 
different aspect temporal dimension polices investigated 
focus conflict detection resolution set constraints specified policy actions 
temporal connectives past linear time temporal logic proposed included constraint specification language 
example constraint impose action executed action executed time granule called epoch action address prob lem conflicting actions rules obligations may seen kind constraint possibly temporal component satisfaction needs monitored system 
main difference addition different nature tt syntax constraints satisfaction dependent external events generated users 
argue policy management complex system calls dynamic mechanisms provisions obligations 
briefly introduced formal framework represent reason policy rules presence provisions obligations 
particular focused specification management obligations 
despite preliminary topic identified discussed relevant issues policy refinement obligation ful defaulting hierarchical obligations obligation monitoring including monitoring presence quantitative temporal constraints 
foresee interesting applications concepts techniques access control polices polices defined online financial services domain 
gives rise number interesting issues explored 
example integration temporal reasoning techniques basic monitoring algo rithm technical issues addressed 
consider aspects involved policy refinement user obligation monitoring promising directions 
rakesh agrawal cochrane bruce lindsay 
maintaining priorities production rule system 
proc vldb pp 

elisa bertino claudio bettini elena ferrari samarati 
access control model supporting periodicity constraints temporal reasoning 
acm transactions database systems 
bettini jajodia wang 
provisions obligations policy rule management security applications 
publication 
bettini wang jajodia 
ing multi granularity temporal constraint networks 
artificial intelligence appear 
preliminary version proc 
rd intern 
conf 
principles practice constraint programming springer verlag lncs pp 

chomicki lobo monitors history policies 

damianou dulay lupu sloman ponder policy specification language 
dechter meiri pearl 
tempo ral constraint networks 
artificial intelligence 
kudo satoshi 
xml document security provisional authorization 
proc 
th acm conference computer communications security pp 

provisional authorizations 
jajodia kudo subrahmanian 
commerce security privacy ed pp 
kluwer academic press 
jajodia samarati subrahmanian 
flexible support multiple access control policies 
acm transactions database systems 
lobo bhatia naqvi 
pol icy description language 
proc 
na tional conference american associa tion artificial intelligence orlando fl usa 
policies distributed systems net works international workshop policy bristol uk proceedings sloman lobo lupu eds springer lncs 
woo lain 
authorizations distributed systems new approach 
journal computer security 

