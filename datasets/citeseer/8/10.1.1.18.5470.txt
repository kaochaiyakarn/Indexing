kaon large scale semantic web erol marc ehrig siegfried handschuh andreas hotho alexander maedche boris motik daniel oberle christoph schmitz steffen staab stojanovic stojanovic rudi studer gerd stumme york sure julien raphael volz valentin forschungszentrum informatik fzi karlsruhe www fzi de wim institute aifb university karlsruhe karlsruhe www aifb uni karlsruhe de wbs 
semantic web bring structure content web pages extension current web information welldefined meaning 
especially commerce applications semantic web technologies form ontologies metadata increasingly prevalent important 
introduce kaon karlsruhe ontology semantic web tool suite 
kaon developed jointly eu funded projects specifically designed provide ontology metadata infrastructure needed building accessing semantics driven applications web desktop 
web current form impressive success growing number users information sources 
tim berners lee inventor www coined vision semantic web background knowledge meaning web resources stored machine processable meta data 
semantic web brings structure content web pages extension current web information defined meaning 
semantic web able support automated electronic services semantics descriptions 
descriptions seen key factor finding way growing problems traversing expanding web 
sense ontologies metadata increasingly prevalent important wide range commerce applications 
technical foundation semantic web rdf resource description framework provides generic core data model 
software components parsers schema metadata editors repositories developed 
generally fail meet requirements sophisticated commerce projects 
support advanced applications specialized comprehensive tools required 
karlsruhe ontology semantic web tool suite kaon builds available resources provides tools engineering discovery management presentation ontologies metadata 
establishes platform needed apply semantic web technologies commerce scenarios 
important design goals robustness scalability key quality factors enterprise application 
vision current status kaon 
official kaon community web site provides date information project allows downloading newest version software 
organized follows section introduces layered architecture technologies underlying semantic web 
section collects summarizes requirements infrastructure semantics services applications 
subsequently formal ontology model kaon 
ontology model implemented conceptual architecture section section 
current status actual implementation effort described briefly section 
conclude give short overview related provide overview steps kaon 
semantic web term semantic web encompasses efforts build new www architecture enhances content formal semantics 
enable automated agents reason web content carry intelligent tasks behalf user 
expressing meaning main task semantic web 
tim berners lee conceived layer architecture semantic web xml syntax layer xml allows markup arbitrary content means nested attributed elements 
names elements don say structure means means required semantic web role xml reduced syntax carrier 
rdf data layer rdf allows encoding exchange reuse structured metadata 
principally information represented generic means directed partially labeled 
graph may serialized xml 
contrary xml rdf allows assign global identifiers resources allows refer extend statements documents 
feature main motivation data layer 
ontology layer third basic component semantic web ontologies 
ontologies describe formal shared conceptualizations particular domain interest 
description describe structurally heterogeneous distributed information sources web 
defining shared common domain theories vocabularies ontologies help people machines communicate concisely supporting exchange semantics syntax 
basic building block ontologies concepts typically hierarchically organized concept hierarchy 
concepts properties establish named relations concepts 
representation languages kaon semanticweb org proposed specification ontologies 
section provides concise description representation language kaon 
rdf generic ontologies stored rdf 
logic layer logic layer consists rules enable inferences choose courses action answer questions 
current research mainly focused layers focus 
formal ontology model cf 
section includes means extend ontology rules arbitrary logic language 
step transition fourth layer semantic web 
proof layer proof layer conceived allow explanation answers generated automated agents 
naturally want check results deduced agent require translation internal reasoning mechanisms unifying proof representation language 
requirements building semantics applications commerce knowledge management web portals gained insight application features warrant success 
experience order enabling reuse projects decided build framework addressing issues 
extensive requirement gathering process undertaken come set requirements framework fulfill 
key requirements identified framework enable loose coupling allowing access standard web protocols close coupling embedding applications 
done offering sophisticated standard apis 
consistency consistency information critical requirement enterprise system 
update consistent ontology result ontology consistent 
order achieve goal precise rules defined ontology evolution evolution service implementing rules provided 
updates ontology transactions assuring usual properties atomicity consistency isolation durability acid 
concurrency possible access modify information concurrently 
may achieved transactional processing objects modified transaction time 
durability trivial requirement easily accomplished reusing existing database technology 
sophisticated storage system offer facilities replication ontologies redundant copies maintained address scalability availability problems 
security guaranteeing information security means protecting information unauthorized disclosure transfer modification destruction accidental intentional 
realize operation accessible properly authorized agents 
proper identity agent reliably established employing known authentication techniques 
sensitive data encrypted network communication persistent storage 
means auditing logging sensitive operations 
reasoning reasoning engines central components semantics applications 
tools access engines provide reasoning services required fulfill certain task 
mapping multiple ontologies supported ontology system 
support complete means mapping mediating heterogeneous ontologies provided 
discovery assume data semantic web distributed 
means ontology focused intelligent discovery metadata required 
semantic description search target system able discover relevant information web 
framework allow users create ontologies instances different languages support non latin character sets 
formal ontology formal semantics specified ontology unambiguous clear 
formal model ontologies formal semantics ontologies important requirement 
notion formal semantics ontologies currently supported tools section 
definition 
core ontology structure consisting disjoint sets elements called concept identifiers relation identifiers resp ii partial order called concept hierarchy taxonomy iii function called signature iv partial order called relation hierarchy implies call concept identifiers relation identifiers just concepts relations resp sake simplicity 
definition 
relation define domain range subconcept superconcept subrelation direct subconcept direct superconcept note direct direct defined analogously 
definition 
logical language 
axiom system ontology set elements pair called axiom identifiers ii mapping 
elements called axioms 
ontology axioms pair axiom system definition 
ontology axioms ontology consistent consistent 
sequel ontology stands core ontology ontology axioms 
definition 
lexicon ontology structure consisting sets elements called signs concepts relations resp ii relation called lexical concepts holds iii relation called holds lexical relations ontology lexicon pair ontology lexicon requirement support provided lexicon 
definition 
knowledge base structure consisting sets ii set elements called instance identifiers instances objects short iii function called concept instantiation iv function called relation instantiation 
instances technically represented rdf may physically located documents 
definition 
instance lexicon knowledge base pair consisting set elements called signs instances ii relation knowledge base lexicon pair instance lexicon conceptual architecture called lexical instances 
knowledge base section introduce general architecture basis kaon 
mainly distinguish layers conceptual architecture data remote service layer middleware layer applications services layer 
depicts layered architecture 
fig 

kaon architecture applications service layer application service clients components java application ontomat application framework ii applications extending web kaon portal web site management framework 
application clients connect middleware layer kaon api application programming interface accessing ontology elements 
api realizes application model providing set object oriented abstractions ontology elements 
application clients provide views controllers model realized kaon api 
middleware layer primary role middleware layer provide abstraction ontology access 
second role dynamic instantiation delegation requests underlying external services layer 
role implemented kaon api isolates clients different api implementations provides unified interface 
example transient ontology model provided implementing kaon api top rdf files 
implementation may inmemory processing ontologies stored files stand deployment tools 
kaon rdf server data source specialized storing rdf data 
allows concurrent modification supports transactions persistence 
non rdf data sources may accessed implementations kaon api creating view data format semantic web standards 
dynamic instantiation delegation requests services scope 
implementation relies framework provided java management extensions 
data remote service layer layer roles 
offers access physical data stores databases file systems 
second groups external services reasoning engines aforementioned mapping engine announces availability middleware layer 
implementation conceptual architecture kaon tool family section explains conceptual architecture implemented describing current status underlying technologies 
mainly distinguish tools intended directly users frontend tools tools intended applications backend tools 
frontend tools kaon portal kaon portal ontology web portal generator 
underlying idea kaon portal application ontology web application automatically generated 
important mention kaon portal capable automatically provide metadata driven services web 
data additionally published rdf 
ontomat application framework ontomat component ontology metadata application framework 
initially developed ontology annotation html markup tool 
account flexible component architecture chosen platform realize functionalities includes multi lingual ontology engineering evolution environment ontomat allows manual development maintenance ontologies 
provides means database reverse engineering ontomat reverse tool approach allows mapping jdbc compliant relational databases ontologies 
ontomat silva tool implements comprehensive methodology ontology mapping mediation consisting means normalization heterogeneous ontologies detecting similarities providing graphical means specifying associations semantic bridges ontologies 
ontomat tool provides user support ontology focused discovery rdf metadata web 
important mention due flexible component approach component able communicate components realized ontomat 
backend tools kaon api server backend tools provide middleware layer offer access external services 
due lack space restrict attention focal components layer kaon api kaon server 
kaon api kaon api focal point layer 
provides objects representing various pieces ontology concept relation attribute instance objects creating applying changes ontology entities objects providing query facilities 
kaon api doesn realize persistence concurrency security 
relies lower layers provide features 
observable design pattern notifications model changes achieving low coupling model associated views 
changes application model local remote propagated registered listeners allowing display model updates immediately happen 
java messaging service jms propagate change notifications distributed environment 
api entirely interfaces allowing users choose appropriate implementation depending needs 
provide ontology compliant access data stored existing systems relational xml databases special mapping implementations may 
implementations align respective data sources ontologies 
conversion dynamic modifications ontology queries transformed propagated underlying data source 
kaon api responsible providing consistency underlying ontology 
access api performed dedicated evolution strategy purpose define implement set change rules 
example concept removed ontology decided subconcepts may deleted attached parent deleted concept attached ontology root concept 
evolution strategies implemented policies allowing user choose appropriate ontology instantiated 
order improve performance kaon api allows pluggable caching scheme 
way costly requests kaon server may avoided application performance increased 
connectors apis protocols security authorization authentication auditing data query update validation inferencing man transaction replication naming storage fig 

kaon server modules request processing services tp monitors databases inf 
engine map 
engine kaon server kaon server responsible providing persistent transactional secure rdf repository accessible multiple users time 
realized ee framework technically component hosted ejb application servers 
conceptual architecture system follows layers architectural pattern 
connectors layer apis provided connect kaon server rdf api accessing rdf data querying api rdf querying inferencing 
additionally special remote implementation kaon api provided 
kaon server realized ee framework server accessible non java clients corba iiop protocol 
security layer server operations available client caller properly authenticated authorized access 
authentication authorization implemented java authentication authorization service allowing easy integration existing corporate security services 
nutshell provides role authentication 
users mapped roles set privileges determined role 
data access layer layer allows management rdf model elements inferencing querying 
queries supported rdf qel query language designed edutella project 
kaon server implement inference interfaces systems 
integration systems seamless users kaon server distinguish inferred ground facts 
management layer encapsulates basic services commonly information systems 
transaction management system responsible ensuring commonly known acid transaction properties 
replication service ensure external systems data sets inference engine kept synchrony persistent storage 
naming service replication service manage duplicate rdf models enhance scalability availability 
naming service maps model identifiers uris persistent identifiers urns keeps information location information 
system configuration modules realized layer 
external services systems services external kaon server 
databases persisting rdf model data 
inference engines reused offer reasoning capabilities 
transaction processing monitors ensure transactional integrity data replicated external systems 
resume proliferation ontologies metadata need comprehensive managing infrastructure recognized 
comprehensive overview state art survey ontology library systems respect dimensions management adaptation standardization provided 
ontology library systems mainly focus ontology storage reuse approach provides rdf framework including ontology management semantics driven applications 
comparing available rdf data stores approach available rdf data store dealing replication 
approach comes close see www org rdf ds datastore lists existing rdf data stores 
open source framework commercial system ontology builder server proposed 
contrast system approach completely rdf semantic web conform 
additionally provide access existing relational data sources ontomat reverse 
introduced kaon karlsruhe ontology semantic web tool suite 
gathered requirements large scale semantic web systems formal ontology model mapped logic languages may extended axioms stated logic languages 
established step fourth layer semantic web 
conceptual architecture allows realize established requirements steps taken implementation architecture 
tools mentioned freely available web kaon semanticweb org 
focus making existing corporate data sources available ontology applications 
working extensions formal ontology model provide expressive core language 
working query language ontologies offer view support 
additionally extend accessibility system peerto peer systems enabling new level knowledge interchange ontology communication 

das wei wu deborah mcguinness 
industrial strength ontology management 
proceedings semantic semantic web working symposium swws stanford usa august 

ying ding dieter fensel 
ontology library systems key successful ontology re 
proceedings semantic semantic web working symposium swws stanford usa august 

erich gamma richard helm ralph johnson john 
design patterns 
addison wesley 

gruber 
translation approach portable ontology specifications 
knowledge acquisition 

wolfgang nejdl boris wolf qu stefan decker michael sintek naeve mikael nilsson matthias palmer tore risch 
edutella networking infrastructure rdf 
proceedings th world wide web conference www hawaii usa 

stojanovic stojanovic volz 
migrating data intensive web sites semantic web 
appear proceedings acm symposium applied computing sac madrid 
