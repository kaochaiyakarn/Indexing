synthesis web services agent behaviors paul buhler college charleston dept computer science george street charleston sc usa cs edu today software systems net centric distributed heterogeneous 
hardware software networking technology combine milieu ubiquitous inseparable 
acceleration technology time market pressures increasingly difficult produce software 
order achieve promise information age software developers require new abstractions allow manage overwhelming complexity digital landscape 
short position describes novel technique agent software dynamically configured capabilities 
capabilities described daml represent atomic orchestrated web services 
daml specification transformed executable program written composition language named 
executed composite service available semantically described behavior fipa compliant agent 
proposed architecture designed scalability mobile pda devices wireless connectivity resource rich server class systems 

nsf sponsored workshop discuss software engineering research strategies 
participants workshop drew software engineering research particularly relevant vision thesis proposal 
summarized phrase puck going meaning researchers need forward thinking 
heterogeneous distributed systems dynamically changing software structures interactions autonomous agents explicitly mentioned requiring focused research 
software development needs progress handcrafted time techniques methodologies support reuse existing software assets 
words software development needs shift paradigms purely creational support compositional approaches 
traditional software engineering methodologies giving way new software jos vidal university south carolina computer science engineering columbia sc usa vidal sc edu development paradigms 
component software engineering agent oriented software engineering paradigms attention 
typically thought separate disciplines related ultimately dependent 
passive software components liberated proactive social nature agents 
effect agent technologies provide mechanism components seek enter cooperative agreements address requirements dynamic heterogeneous environments 

software components range component software engineering practice constrained definition software component 
definition software component debated sampling common definitions 
purposes definition 
definition selected reasons undergone extensive review revision definition architecturally neutral favor specific implementation language component model inclusive commonly referenced definitions software component 
software component definition pg software component software element conforms component model independently deployed composed modification composition standard 
component model defines specific interaction composition standards 
component model implementation dedicated set executable software elements required support execution components conform model 
component models component model provides standards govern interaction composition software components conform model 
standards essential concept open systems 
open system collection interacting software hardware components 
interaction open system defined interface specifications complete publicly available non proprietary 
web services components businesses organizations participants collectively perform 
usually occurs form workflow 
workflow process documents information tasks passed participant way governed rules procedures 
businesses achieve efficiencies analyzing redesigning workflows fact major focus early business process reengineering bpr commonly practiced 
workflow perspective composite software system viewed sequence services operating data 
ideally services language platform location independent 
services interoperable interoperability characterized ability software components cooperate despite differences language interface execution platform 
new class interoperable web enabled software services emerging 
services known web services defined web service software application identified uri interfaces binding capable defined described discovered xml artifacts supports direct interactions software applications xml messages internet protocols 
specifications developed forming basis component model web services specifically soap simple object access protocol wsdl web service description language uddi universal description discovery integration 
specifications describe publish discover invoke web services 
web service specifications embrace open systems viewpoint xml extensible markup language utilized exchange data neutral format component communication occurs transport protocol 
comprehensive overview industry players respective web service architectures 

workflow specifications ongoing initiatives defining compositional notations web services 
large commercial entities ibm microsoft hewlett packard actively participating believe web service integration presents enormous business opportunity 
likewise consortium players oasis organization advancement structured information standards bpmi business process management initiative complementary efforts 
web service architectures stack lower layers contain open networking web service protocols higher layers comprised proprietary integration orchestration protocols 
proprietary nature upper layers allow corporations differentiate products services 
ibm produced markup language named web services flow language wsfl designed specification workflows encompass multiple web services 
currently ibm integrating wsfl technologies websphere product 
microsoft xlang provides capabilities 
microsoft biztalk application designer graphical tool allows business process flow charted output xlang executed microsoft biztalk server orchestration engine 
notably anticipated wsfl xlang merged submitted proposed web standard 
hewlett packard produced web services conversation language wscl specify conversation policies web services 
remains seen marketplace react multiple overlapped initiatives 
announced web service interoperability organization ws includes ibm microsoft founding members 
goal ws speed adoption web service technologies maintaining interoperability lower layer protocols 
overview workflow description standards including ebxml bpml 
agent workflow approaches discussed anticipated generation workflow systems employ agent technologies 
share view specifically 
place perspective agent system exhibits properties situatedness autonomy reactivity pro activeness social ability 
properties allow agent perceive reason act environment communicate agents 
collection sociable agents representing individual services cooperate coordinate capability enact workflow composed represented services 
words agents capability dynamically form social structures share commitments common goal workflow enactment 
individual agents coordinated interactions achieve globally coherent behavior act collective entity known multi agent system 
social metaphor gives power agent oriented paradigm 
characteristics agent abstraction particularly suitability developing complex distributed systems 
fields sociology organizational theory provide valuable abstractions multi agent systems 
term describe new field research combination sociology distributed artificial intelligence 
cross disciplines created useful vocabulary framing describing problems issues multi agent systems encounter 
workflow enactment multi agent system example cooperative problem solving 
cooperative problem solving occurs group autonomous agents choose achieve common goal 
cooperative problem solving occur agent multi agent society recognize best path achieving goal enlist help agents 
social commitments arise agent commitment 
typically social commitment comes due social dependency 
defined pg social dependence defined goal eventually meaning agent depends agent regard act realizing state goal unable realize able 
indicated social dependency established agent agent able reason ability perform act knowledge performance establish state concept order ability introduced pg states agent order ability regarding establishment state know explicitly eventually 
agent desires achieve state knows solicit assistance order attain goal 

confluence views share common theme 
theme cooperating agents acting workflow components order enact business processes 
agents treated components conform component model 
adherence component model necessary allow interoperability sufficient condition interoperability open environments 
foundation intelligent physical agents fipa essentially creating component model allows agents heterogeneous origins collaborate open agent environments 
open agent environments challenges 
previously demonstrated agents determine conditions social dependency ability reason capabilities 
likewise order effectively negotiate services agent agent need reason abilities potential partners 
open environments common agent communication language acl facilitates message exchange agents true communication occur agents understand message contents 
ontologies help provide meaning contents messages panacea ontological mismatches take place 
potential solution problem define proprietary service description language described solution limited utility open environments 
belief authors semantic web emergence web services component model facilitate agent workflow management open environments 
agents wrap semantically described web services semantic service descriptions basis determining agent order abilities 
likewise common semantic markup web services facilitate effective communication agents 
intend build experimental system utilize daml composition language named 
daml semantic web initiative developing technologies locating web resources semantic content 
included vision daml specification providing semantic markup web services 
daml designed support web service related tasks discovery invocation composition interoperation execution monitoring 
daml provides machine interpretable ontology backed semantic description atomic composite web services 
discussion relationship daml standards uddi wsdl ebxml see 
previously described wsfl xlang designed capture flow composition services 
likewise daml expressive power encapsulate composition services single service description 
likewise daml expressive power encapsulate composition services single service description 
agent enact composite service behavior intuitive expand agent order abilities 
expanded order abilities help agent preserve autonomy reducing social dependencies 
agents reduce social dependencies create efficiencies operating environment 
effect approach analogous business process reengineering typical goal reduce transactional costs providing better service 
providing agents capability enact services described daml streamlines workflow increasing agent goal attaining efficiency reducing need cooperative problem solving multi agent environments 
daml composite service recursively decomposed set atomic services 
control constructs provided daml orchestrate services compose workflow 
constructs shown table 
table 
daml control constructs 
construct description sequence execute list processes sequential order concurrent execute elements bag processes concurrently split invoke elements bag processes split join invoke elements bag processes synchronize unordered execute processes bag order choice choose alternatives execute specified condition holds execute execute repeat iterate execution bag processes condition holds repeat iterate execution bag process condition holds examination table hints potential complexity daml described workflow contain including capabilities concurrent execution synchronization 
enactment daml described workflows difficult problem extensively studied initial done 
daml execution semantics inspired milner calculus 
calculus useful modeling systems concurrent communicating mobile processes 
fortunately milner development composition language named 
development specialized programming languages expressing composition components recurring idea 
early evidence provided utility attributed unix shell scripting 
pipes filters architecture unix shell combination scripting language demonstrate power flexible composition pipelining streams commands 
authors introduce rationale requirements general purpose composition language 
authors describe composition language providing integration framework computational compositional views system 
composition language requirements proposed authors designed support open systems development openness characterized need face changing system requirements 
authors propose development composition language calculus theoretical foundation 
requirements groundwork ultimately results publication describe composition language named 
platform neutral implementation language exists java named 

agentcities related research agentcities initiative intends provide platform demonstrate interoperation independently authored agents geographically dispersed executing heterogeneous environments 
interoperation accomplished open systems technologies protocols 
protocols utilized agentcities framework defined fipa standards 
intent authors agentcities research platform delivery contextually appropriate web services context defined geographic location 
proposed research overlaps research goals agentcities defined specifically listed desire investigate seamless interaction wireless wire line agents dynamically compose services user location pg 
proposed research aligns objectives proposed agentcities working groups 
groups engineering self organizing applications wg service description composition agentcities wg ontologies semantics wg 
architecture proposed research 
architecture designed scalability mobile pda devices wireless connectivity resource rich server class systems 
architecture designed compatible existing emerging open standards interoperability open agent societies web services maximized 

proposed architecture 
major components architecture lightweight mobile agent implemented leap 
platform ipaq dual slot expansion pack expansion pack hold wireless network card gps receiver 
server store daml descriptions services associated specific geographic locations 
return contextually appropriate daml descriptions physical location mobile device 
home server provide charleston south carolina usa node agentcities network daml translation services execution 
web services provide dynamic set behaviors mobile agent 
operationally mobile agent receive absolute gps position onboard gps receiver 
location consumed internal behavior communicate server 
server return set daml descriptions services appropriate physical region 
region defined circle selectable radius center point current location 
daml descriptions passed home server transformed programs 
anticipated transformation leverage transformation api xml 
execution engine execute programs home server 
executing programs communicate mobile agent jxta protocols unidirectional pipes jxta provides discovery services allow mobile agent find pipe points home server 
result delivery contextually appropriate web services mobile agent views semantically described behaviors 
alternatively processes wrapped agent registered home server agent management system ams 
home server directory facilitator df link mobile agent agent behavior 
behavior longer required mobile agent teardown remote agent violating autonomy 
intended enacted daml descriptions private internal behaviors mobile agent 
advertising existence df defeats intent 
mobile agent processes communicate peers master slave relationship exists 
mobile agent longer requires behavior send teardown request process execution 
limitations research daml transformation 
robust translation service prove useful numerous domains focused subset daml known daml core 
noted proposed architecture leverages server daml discovery 
mechanism suitable described system usefulness limited domains 

agentlink 
agentlink news issue november www agentlink org 
com 
business process reengineering com sid gci html 
daml services coalition 
daml related www daml org services daml survey pdf 
daml services coalition 
daml semantic markup web services www daml org services daml daml pdf 
workflow management coalition 
workflow management coalition www wfmc org htm 
web services interoperability organization 
ws www ws org 
apache xml project 
transformation api xml xml apache org xalan html 
schneider 
nierstrasz small composition language 
bowman derrick eds 
formal methods distributed processing survey object oriented approaches cambridge university press new york ny 
nierstrasz application components scripts tour 
aksit ed 
software architectures component technology kluwer academic press 
ankolekar huch sycara concurrent execution semantics daml subtypes 
international semantic web conference iswc 
poggi leap fipa platform handheld mobile devices 
workshop agent theories architectures languages atal 
boehm basili gaining intellectual control software development 
ieee computer 
xml cover pages 
web services conversation language wscl xml org wscl html 
xml cover pages 
web services flow language wsfl xml org wsfl html 
xml cover pages 
xlang xml org wscl html 
curbera weerawarana emergence web services component model 
workshop component oriented programming 
glass web services building blocks distributed systems 
prentice hall ptr upper saddle river nj 
griss software agents generation software components 
eds 
component software engineering putting pieces addison wesley boston 
griss agent call agent 
software development magazine 
griss pour accelerating development agent components 
ieee computer 
definition software component elements 
eds 
component software engineering putting pieces addison wesley boston 
sims business component factory comprehensive overview component development enterprise 
john wiley new york 
huhns stephens multiagent systems societies agents 
weiss ed 
multiagent systems modern approach distributed artifical intelligence mit press cambridge ma 
jennings agent approach building complex software systems 
communications acm 
jennings agent software engineering 
artifical intelligence 
nierstrasz formal language composition 
leavens sitaraman eds 
foundations component systems cambridge university press new york 
sutherland intelligent business objects 
communications acm 
naming sociological turn distributed artificial intelligence 
autonomous agents multi agent systems 
meyers managing software acquisition open sytems cots products 
addison wesley boston 
judith myerson 
web service architectures stack www com content articles myers asp 
nierstrasz requirements composition language 
ciancarini nierstrasz yonezawa eds 
proceedings ecoop workshop models languages coordination parallelism distribution lncs springer new york 
riordan business process standards web services dan ruby 
xml web services magazine 
speaking interop www com magazine depart ments 
software engineering reusable components 
springer verlag new york 
sangiorgi walker pi calculus theory mobile processes 
cambridge university press cambridge england new york 
singh huhns multiagent systems workflow 
international journal intelligent systems accounting finance management 
subrahmanian dix eiter kraus ross heterogeneous agent systems 
mit press cambridge ma 
szyperski component software object oriented programming 
acm press new york 
daml services coalition 
daml web service description semantic web 
international semantic web conference iswc 
web services architecture working group 
web services architecture requirements working draft april www org tr wd wsa reqs 
wegner interoperability 
acm computing surveys 
wooldridge agents software engineering 
ai ia xi 
wooldridge reasoning rational agents 
mit press cambridge mass 
jim 
technical overview www org technical html 
