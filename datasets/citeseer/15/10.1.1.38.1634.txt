international computer science institute center st ffl suite ffl berkeley california ffl ffl fax counting lattices combinatorial problems statistical mechanics dana randall tr october thesis consider classical combinatorial problems arising statistical mechanics counting matchings self avoiding walks lattice graphs 
problem arises study properties monomers dimers molecules crystals 
fisher temperley discovered elegant technique exactly count number perfect matchings dimensional lattices applicable matchings arbitrary size higher dimensional lattices 
efficient approximation algorithm computing number matchings size periodic lattice arbitrary dimension 
algorithm monte carlo simulation suitable markov chain rigorously derived performance guarantees rely assumptions 
addition show results generalize counting matchings graph cayley graph finite group 
second problem counting self avoiding walks lattices 
problem arises study thermodynamics long polymer chains dilute solution 
number monte carlo algorithms count self avoiding walks practice heuristic correctness relies unproven conjectures 
contrast efficient algorithm relies single widely believed conjecture simpler preceding assumptions importantly algorithm test 
algorithm reliable sense outputs answers guaranteed high probability correct finds counterexample conjecture 
case know trust results algorithm guaranteed run polynomial time 
algorithm counting self avoiding walks error bounds rigorously controlled 
supported part fellowship university california dissertation year fellowship esprit working group rand 
part done visiting icsi university edinburgh 
committee chair alistair sinclair acknowledgments am extremely fortunate worked alistair sinclair 
enthusiastic approach research left deep impression certainly shaped thinking problems 
stage research constant source insight encouragement 
mike luby similar impact graduate school experience acting second advisor 
working luby greatly influenced appreciation research 
offered lot direction advice friendship important berkeley 
faculty berkeley truly wonderful place student 
benefitted tremendously classes conversations dick karp umesh vazirani 
discussions manuel blum fostered curiosity excitement initial stages thinking research 
am grateful dick karp david aldous thesis committee 
claire wonderful 
learned precise approach research 
am grateful rob pike implementing walk algorithm friendship 
lars rasmussen deserves special implementing earlier version algorithm 
greatest aspect graduate life berkeley exceptional student body 
turned diane technical questions appreciated generosity friendship humor 
evans available bounce ideas greatly enhanced time 
going got tough helped put things perspective 
enjoyable times spent eric enderton wilkinson sara robinson 
graduate school experience complete friendships nina amenta sandy irani rubinfeld david zuckerman david wolfe dan jurafsky seth teller leonard schulman michael mitzenmacher 
love support family richard barbara lisa randall lori wood 
contents physical systems partition function free energy model computational complexity counting problems efficient algorithms hardness approximation algorithms markov chains summary matchings historical background results overview algorithm rectangular lattices lattices bipartite cayley graphs non bipartite cayley graphs concluding remarks open problems self avoiding walks background monte carlo simulations results algorithms markov chain mixing time algorithm making algorithm self testing improved time bounds numerical results concluding remarks open problems list figures examples typical ising configurations low high temperatures 
monomer dimer arrangement 
self avoiding walk 
union near perfect matchings 
mapping near perfect matchings perfect matchings 
union proof theorem 
proof theorem hexagonal lattice bad graph gn concatenation self avoiding walks 
algorithm self tester improved algorithm number self avoiding walks dimensions number self avoiding walks dimensions cont 
number self avoiding walks dimensions number self avoiding walks dimensions cont 
chapter statistical mechanics provides rich source fundamental combinatorial questions natural applications 
physicists sophisticated algorithms problems order understand various physical systems algorithms non rigorous inefficient 
developments computer science designing efficient algorithms rigorous performance guarantees increasing demand exchange ideas tackle combinatorial problems 
standard scenario follows 
set combinatorial structures corresponding allowable configurations physical system 
primary challenge count number configurations 
second sample configuration set random 
solutions problems provide valuable insight related physical systems 
thesis focuses types combinatorial structures matchings self avoiding walks lattices 
classical problems arise context monomer dimer systems long polymers chains 
provably efficient approximation algorithms solving counting sampling problems case 
algorithms monte carlo simulations similar widely statistical mechanics analysis uses insights computer science deriving rigorous statistical bounds accuracy simulations 
feature distinguishes results area special structure lattice critical way 
lattices represent precisely set graphs greatest physical significance 
sections intended motivate thesis provide essential background 
section gives brief overview statistical mechanics applications section places physical problems framework computational complexity theory section formalizes definitions approximation algorithms gives basic outline algorithmic machinery 
physical systems statistical mechanics endeavors relate observable macroscopic properties physical system density temperature microscopic interactions particles system 
goal understand simple local interactions small numbers particles determine macroscopic behavior predict various parameters system contribute observable effects 
complicated dynamic interplay large numbers particles system precise characterization microstates impossible state information captured probability distribution feasible configurations particles configuration captures essential information microstate assigned probability likelihood associated microstates 
partition function weighted sum set possible configurations key relating levels description 
thermodynamic properties describing macrostate system derived knowledge goal thesis develop tools help compute close approximations partition function classical physical systems 
partition function configuration system description possible microstate 
example consider system particles volume held constant temperature interaction external heat source 
configuration includes positions particles relevant information magnetic moments 
system modeled discretely positions atoms coincide vertices finite lattice 
thought finite theta theta theta subset cartesian lattice finite subgraph regular lattice 
associated configuration energy 
probability distribution configurations defined simple function energy 
form function depends configurations consistent fixed parameters system example describe distribution typical families systems 
simplest case isolated system internal energy held constant 
configurations energy considered equally considered impossible 
probability distribution configurations fixed values fo parameters known distribution 
interesting cases concern thesis system isolated interacts external source 
case parameters held constant energy system allowed vary 
likelihood particular configuration canonical boltzmann gibbs distribution 
configurations equal energy equally probability different configurations exponentially distributed energies 
precisely denote lattice graph energy configuration probability exp gammae kt boltzmann constant normalizing constant exp gammae kt weighted sum configurations equation known partition function canonical distribution 
third common distribution arises physical systems interact membrane allowing number particles vary 
likelihood configuration fixed number particles controlled parameter known activity system 
fixed grand canonical distribution function parameter probability configuration jsj particles exp gammae kt delta jsj normalizing constant partition function distribution 
zn partition function canonical distribution number particles fixed number vertices lattice graph write grand canonical partition function exp gammae kt delta jsj zn computing partition function system primary objective statistical mechanics 
significance stems fact thermodynamic properties physical system related log derivatives illustrate relationship subsection 
computational purposes useful view partition function generating function 
possible energy levels discrete 
specifically set possible values energy configuration ae number configurations particular energy exp gamma kt number particles fixed partition function canonical distribution defined equation just generating function ae number particles varies number configurations particles energy partition function grand canonical distribution equation computing partition function cases reduced computing coefficients ae relevant generating function 
give classical examples physical systems demonstrate concepts 
problems defined finite lattice easily generalize finite graph 
cases convenient think special case theta rectangular lattice chessboard 
example ising model ising model introduced study famous models statistical mechanics see history review 
system modeled finite lattice vertices represent atoms material 
configuration oe consists assignment spin oe vertices representing magnetic moment atom 
ising model nearest neighbors tend align parameter atoms tend align external magnetic field energy configuration oe oe gamma oe oe gamma oe summation taken nearest neighbor pairs 
equation partition function canonical distribution oe exp gammae oe kt low temperature high temperature examples typical ising configurations low high temperatures 
low temperatures parameters greater influence see large clusters spins 
higher temperatures tend organization 
shows typical configurations cases 
ising model represent lattice gases indicates lattice site occupied molecule indicates vacant 
high low temperature diagrams reflect fact higher temperatures gases move freely particles influence neighbors lower temperatures particles attract tend cluster solid state 
partition function provides information phase transition gaseous solid states 
example monomer dimer systems fundamental challenge chemical physics monomer dimer problem sites regular lattice covered non overlapping arrangement dimers monomers 
dimer molecule covers adjacent vertices lattice monomer covers vertex covered dimer see monomer dimer arrangement 
history problem 
graph theoretic terms monomer dimer arrangement just matching matching size set lattice edges edges share vertex 
shows typical monomer dimer arrangement dimers monomers 
dimensional monomer dimer problem serves model molecules crystal surface monomers correspond empty sites 
dimensional problem occurs classically theory mixtures molecules different sizes cell cluster theory liquid state 
consider monomer dimer arrangement consisting dimers gamma monomers lattice vertices 
energy sj energy derived covering particular edge dimer 
set monomer dimer arrangements dimers jm cardinality set 
partition function canonical distribution fixed number dimers ms exp kt jm exp kt grand canonical distribution describes interesting systems number dimers varies 
activity dimer equation grand canonical distribution exp kt jm exp kt letting exp gammaj kt delta gives gives generating function jm evaluating coefficients generating function exactly problem counting numbers monomer dimer arrangements numbers dimers 
example lattice animals lattice animal set vertices lattice subgraph induced self avoiding walk 
connected see 
important subclass animals self avoiding walks animals vertex degree 
equivalently self avoiding walk length starts fixed origin follows lattice edges steps constraint visits lattice site twice see 
partition function generating function coefficients number walks length letting number vertices lattice monomer grand canonical partition function equation jwj self avoiding walk models dilute solution long polymer chains solvent 
model arises polymer chain thought tracing random walk space physical restriction molecules occupy position forces self avoidance condition 
dilute solution enables study single polymer worrying restrictions caused interactions polymer chains see survey 
general class lattice animals arises similarly study branched polymers dilute solution 
stated physical systems primary objective calculate partition function 
interpreting function generating function study underlying combinatorial problems intrinsically tied systems 
typical problem computing coefficients partition function generally entail counting number configurations set number self avoiding walks length 
interested problem randomly sampling configurations likelihood appropriate canonical distribution 
sampling allows examine typical configurations system 
recognized large classes combinatorial problems counting sampling problems closely related 
problems consider addressing questions 
free energy indicated earlier partition function key relating microscopic macroscopic levels description physical system 
partition function defined sum microstates captures essential information determining macroscopic behavior system 
particular free energy log thermodynamic primitive thermodynamic properties derived 
appreciate role free energy consider relation studied macroscopic functions entropy average energy system 
entropy defined log represents measure disorder unavailable energy closed system 
canonical distribution equation exp gammae kt gamma kt log gamma expected average energy system 
significantly derive information thermodynamic properties physical system studying free energy changes due small perturbations fixed parameters system 
important example partial derivative respect temperature 
discontinuities derivative identify phase transitions 
interpretation ising model phase transition corresponds point spontaneous magnetization 
examples phase transitions melting boiling see 
discussions far restricted attention idealized finite systems particles coincide lattice sites 
fact discrete models really computational tools studying continuous analogues partition function free energy infinite lattices 
actual thermodynamic properties system realized considering successively larger lattices studying behavior lattice size tends infinity 
known thermodynamic limit 
limit observations regarding behavior free energy determine properties actual system study 
cases known way directly compute asymptotic behavior thermodynamic functions defining discrete analogues functions appears promising approaches 
calculating partition function various finite lattices provides valuable insight corresponding real physical systems 
model typically think lattice finite theta theta theta subgraph cartesian lattice families lattices studied 
cases appropriate talk finite configurations infinite lattice periodic lattice opposite sides identified 
choice lattice clear application 
explained generally accepted modeling various systems families successively larger lattices tell limiting continuous behavior 
immediately clear choice combinatorial structures realistic model physical constraints particles systems 
particular self avoiding walks cartesian lattice appear quite different set constraints polymers bond angles rarely rectilinear 
fact bond angles typically tetrahedral align regular lattice 
justification self avoiding walks model polymers combinatorial idealizations employed field comes empirical existence universality classes 
parameters studied thermodynamic limit appear dimension dependent lattice independent 
means study universal quantities particular member class including physically realistic models polymers sufficient determine member 
mathematically simpler model self avoiding walks lattices lets deduce thermodynamic properties realistic polymer models 
computational complexity counting problems viewing partition function generating function identified combinatorial problems essential ingredients understanding physical system 
recall energy discrete partition function form coefficient cardinality set configurations example partition function monomer dimer system represents monomer dimer arrangements dimers number arrangements see equation 
primary combinatorial questions fall categories counting calculate number elements 
ii sampling pick element uniformly determine expected value function elements explained earlier counting problem compute coefficients partition function 
sampling problem gain information typical configuration 
example monomer dimer arrangement gamma dimers interested studying expected distance monomers 
alternatively appropriate try solve weighted analogues problems 
set element associated weight exp gammae kt interested questions evaluate weighted sum 
ii generate element random weight 
solving weighted counting problem allow calculate partition function directly know individual coefficients 
unweighted weighted versions counting generation problems fall similar framework 
ideally analytic solutions counting weighted counting problems 
discovered closed form expression partition function dimensional ising model zero external field 
possible find precise solution physical systems ising model higher dimensions presence external field 
consequently research years concentrated designing efficient algorithms solve counting generation problems 
algorithms monte carlo simulations particular provided great insight various physical systems 
useful tools algorithms statistical mechanics applications methods reliable 
progress design provably accurate efficient approximation algorithms enables develop new monte carlo algorithms guaranteed error bounds 
efficient algorithms algorithm practical efficient sense running time grow fast input size 
generally accepted formalization notion efficiency polynomial time algorithm 
algorithm takes input natural description problem instance compute output time bounded fixed polynomial size input description see 
problems statistical mechanics involving lattices input size taken number vertices lattice polynomial time algorithm counting generation problems solve problem time fixed natural measure input size number solutions exponential requires steps just write typical configuration 
note physical problems section trivial design exponential time algorithm computes output time exp number configurations lattice size exponential exhaustively enumerating configuration 
course algorithm polynomial time impractical size lattice small 
note polynomial time algorithms necessarily efficient practice polynomials large degree infeasible run algorithm small inputs 
polynomial time algorithm certainly dramatic improvement trivial exponential time typically algorithms improved genuinely practical 
breakthrough design efficient algorithms statistical mechanics achieved fisher temperley independently discovered polynomial time algorithm special case monomer dimer problem known dimer problem see section 
dimer problem asks number perfect matchings coverings lattice dimers monomers 
generally perfect matching graph matching vertex graph incident edge matching 
fisher temperley technique generalizes counting perfect matchings planar graph construct polynomial time algorithm partition function dimensional ising model zero external field 
despite major efforts generalize techniques appear solve monomer dimer problem presence monomers ising model non zero field dimensions 
similarly techniques rely critically planarity appear generalize higher dimensional lattices 
formalization limitation came hammersley proved straightforward way extending approach dimensional lattices 
hardness computational complexity theory offers evidence apparent hardness problems 
valiant defined class classify counting problems 
counting problem asking number elements set representing configurations graph belongs non deterministic polynomial time turing machine input number accepting computations exactly js number elements note exactly framework class np np set problems non deterministic machine decides accepting computation exists class problems non deterministic machine counts accepting configurations exist see survey 
computational problems previous section expressed general graph theoretic problem 
instance problem matching takes input graph integer asks matchings size exist 
problem construct non deterministic turing machine guesses set edges checks time polynomial number vertices valid configuration 
similarly saw takes input graph integer designated vertex asks number self avoiding walks length starting vertex ising takes input graph asks configurations particular energy problems design non deterministic algorithm guesses candidate configuration decides polynomial time configuration included count 
class subclass complete problems characterize precise sense hardest problems class 
formalize need definition 
counting problems polynomial time turing reducible exists polynomial time algorithm uses subroutine 
polynomialtime reducible existence polynomial time algorithm implies exists problem complete problem polynomialtime reducible showing complete problem solved polynomial time imply polynomial time algorithm problem completeness regarded strong evidence intractability exhibiting polynomial time algorithm complete problem provide efficient solutions hard problems counting number satisfying assignments boolean formula 
expected polynomial time algorithm decide satisfying assignment exists efficient algorithm exists count number satisfying assignments 
valiant showed matching problem counting perfect match ings graph vertices complete 
helps explain fisher temperley algorithm fails generalize non planar graphs 
furthermore jerrum showed counting total number matchings sizes graph complete graph planar 
gives evidence fisher temperley algorithm easily generalize counting matchings arbitrary size 
similarly consider problem saw gamma asks count self avoiding walks length gamma graph vertices starting just problem counting number hamiltonian paths starting problem known complete 
course claim complete problems hard arbitrary graph input remain hard input graph restricted lattice 
hardness results suggest polynomial time algorithm solve problems properties lattice non trivial manner 
polynomial time algorithm known 
fact exploiting lattice properties design efficient algorithms proven notoriously difficult 
initially discouraging completeness important combinatorial problems shifted focus designing efficient approximation algorithms 
approximation algorithm uses randomization produce close estimate true answer high probability 
progress design analysis efficient randomized algorithms approximately counting 
approximation algorithms generally sufficient combinatorial problems arising statistical mechanics interested studying limiting behavior quantities associated system algorithms allow approximate true values arbitrary precision 
approximation algorithms approximation algorithms computer simulations random process assumed important role wide range combinatorial problems 
idea follows 
large finite set combinatorial structures 
information gained sampling elements appropriate probability distribution example suppose chosen uniform distribution 
intuitively sampling elements uniformly useful studying properties typical element fact sampling uniformly turns useful tool approximate counting 
formally interested designing algorithms meet specifications 
standard definitions approximation algorithms counting sampling see example 
set configurations size lattice size example set self avoiding walks length theta lattice 
number elements definition randomized approximation scheme lattice size probabilistic algorithm input ffl ffi outputs number ffl gamma ffl gamma ffi approximation scheme fully polynomial guaranteed run time polynomial ffl gamma log ffi gamma definition uniform generator lattice size probabilistic algorithm input ffl outputs element oe probability fixed polynomial conditional probability distribution elements variation distance ffl uniform distribution 
generator fully polynomial runs time polynomial log ffl gamma parameter ffl determines accuracy required estimate ffi controls confidence level 
fully polynomial randomized approximation scheme provides efficient means numerically computing sense running time grows slowly polynomially lattice size accuracy parameter ffl confidence parameter ffi similarly fully polynomial uniform generator gives efficient means solving sampling problem 
cases interested represents exponentially large set combinatorial objects self avoiding walks length naive methods exhaustive enumeration infeasible 
focus designing efficient solution corresponding sampling problem show provide tool solving counting problem 
suppose want sample distribution standard approach simulate markov chain state space gamma includes point time visit combinatorial structure gamma time step move possibly new structure performing random local perturbation structure example set self avoiding walks length suppose want sample walk uniformly 
gamma set self avoiding walks length choose distribution gamma conditional probability uniform distribution 
simulate markov chain start empty walk point time currently self avoiding walk step move appropriately chosen probability walk gamma differs edge 
iterating process sufficient number steps examine walk output start 
order method satisfy requirements fully polynomial uniform generator see definition final distribution sampling reasonably concentrated gets valid sample quite markov chain converge rapidly stationary distribution number simulation steps required large 
guaranteeing conditions particular markov chain difficult 
monte carlo algorithms markov chains appearing satisfy properties extensively physical sciences 
simulations provided great insight asymptotic behavior physical systems 
common difficulty arises knowing long simulate markov chain 
sample taken simulating markov chain steps chosen unknown distribution quite far stationary distribution 
consequently variation distance measures distance distributions sn defined gamma gamma maxa gamma statistics inferred samples appear similar properties tested results fact say true distribution studied 
necessary rigorously show markov chain desired properties simulated sufficient number steps 
markov chains markov chains variants metropolis algorithm discovered 
review concepts markov chains context algorithm 
assume set want sample distribution define markov chain possibly larger state space gamma containing choose graph underlying markov chain vertices states gamma element gamma small number neighbors furthermore assume edge acceptance probability markov chain designed take random walk edges transition probabilities starting state eventually converge stationary equilibrium distribution state space gamma choose graph transition probabilities stationary probability gamma small conditional probability particular state know stationary distribution advance simulating markov chain sufficiently steps sample distribution 
choose graph connected possible get state markov chain state markov chain called irreducible 
addition know time positive probability state chain aperiodic 
markov chain properties ergodic unique stationary distribution markov chain converges 
transition probabilities defined follows 
starting arbitrary point perform steps choose random neighbor probability 
ii move probability stay transition probabilities represented matrix gamma metropolis algorithm define min easy verify satisfies detailed balance equation informally detailed balance equation says stationarity markov chain equally move way 
markov chain satisfies condition states called reversible unique stationary distribution markov chain converges starting initial state 
markov chains reversible 
framework lets design markov chains eventually converge particular conditional distribution state space useful efficiently sampling need bound rate convergence 
property called mixing rate markov chain 
state space typically exponentially large description combinatorial problems need strong condition says polynomial number steps close stationarity 
called rapid mixing characterized expansion properties conductance graph underlying markov chain 
explain connection greater detail section 
summary remainder thesis divided chapters 
chapter addresses monomer dimer problem 
show fully polynomial randomized approximation scheme counting number matchings cardinality periodic finite lattice generally cayley graph 
periodic lattice includes wrap edges lattice torus 
results extend counting matchings non periodic planar lattices 
gives approximation algorithm solves monomer dimer problem exactly cases fisher temperley algorithm fails counting matchings arbitrary size counting matchings non planar lattices 
results approximation algorithm due jerrum sinclair broder 
cases uniform generator corresponding sampling problems 
chapter claire alistair sinclair 
chapter address problem counting self avoiding walks lattices 
testable algorithm solve problem 
introduce notion testable algorithm describe efficient algorithm correctness conjecture algorithm systematically verifies 
algorithm discovers counterexample conjecture produces numerical answers correct high probability 
outputs produced algorithm correct 
design algorithm counting generating self avoiding walks finite rectangular lattice arbitrary dimension 
algorithm relies single conjecture widely accepted physics community 
consequently expect algorithm output correct numerical outputs hand algorithm find conjecture incorrect interesting implications 
algorithms counting generating self avoiding walks error bounds rigorously controlled 
results alistair sinclair 
optimized version algorithm implemented rob pike yielding numerical estimates number self avoiding walks dimensions estimates section 
chapter matchings historical background problem consider monomer dimer problem sites regular lattice covered non overlapping arrangement monomers molecules occupying site dimers molecules occupying sites neighbors lattice 
monomer dimer arrangement dimers gamma monomers lattice size dimer density defined interested counting number monomer dimer arrangements fixed density 
section highlights history problem 
information see 
monomer dimer problem gained prominence early fowler 
breakthrough achieved independently fisher temperley provided analytic solution case dimer coverings arrangements dimer density dimensional rectangular lattice 
key idea express number dimer coverings pfaffian turn evaluated square root associated determinant 
calculations give precise asymptotics number dimer coverings theta rectangular lattice specifically ln gamma problem reduced evaluation determinant quantity computed numerically value efficient manner 
fact technique general allows number dimer coverings planar graph family graphs fixed genus computed efficiently 
unfortunately methods extend dimensional lattices dimer density lattices higher dimensions dimer density remains 
fact dimensional dimer covering problem asks number ways filling theta theta rectangular lattice dimers classical unsolved problems solid state chemistry 
facts known example ln tends finite limit tends infinity 
hammersley proved lower bound early fowler showed upper bound conjectured lies bhattacharjee studied phase transition behavior dimensional model 
reliable method known computing accuracy 
similar lack rigorous results holds problem dimer densities dimensions 
notable exceptions series expansions valid low densities lower bounds free energy 
results progress monomer dimer problem cases technique fisher temperley fails 
specifically give polynomial time algorithm computing arbitrary precision number coverings rectangular lattice dimension specified dimer density 
precisely fixed dimension dimensional rectangular lattice periodic boundary conditions 
denote number coverings dimers gamma monomers 
main result fully polynomial randomized approximation scheme see definition computing function rectangular lattices dimension extends previous computational techniques ways 
enables compute number dimer coverings lattices higher dimensions 
second enables count coverings dimer density problem methods fisher temperley dimensions 
algorithm provides feasible approach numerical computation quantities number dimer coverings theta theta rectangular lattice dimensions 
apparently method running time provably grows polynomially inject caveats 
running time algorithm polynomial small genuinely practical quite careful honing algorithm analysis lead practical method 
secondly algorithm provides statistical estimates precise values stress error bars estimates arbitrarily small contrast previous monte carlo approximation methods completely rigorous require assumptions kind 
thirdly algorithm allows computed efficiently provide bounds time required compute asymptotics tends infinity entropy require addition bounds rate convergence series ln result holds lattices periodic boundary conditions edges lattice wrapped toroidal 
dimensional case method extends lattices fixed boundaries get computing number coverings specified dimer density 
result goes technique fisher temperley planar graphs holds dimer density 
extend results broader class lattices 
specifically get counting coverings specified dimer density bipartite graph cayley graph finite group 
includes commonly studied lattices hexagonal lattice periodic boundary conditions 
overview algorithm algorithms mentioned monte carlo procedure due jerrum sinclair broder approximating number matchings graph 
matching vertex graph subset edge set edges common endpoint 
clearly matchings cardinality correspond precisely monomer dimer arrangements dimers gamma monomers 
classical monomer dimer problem discussed previous subsections special case dimensional rectangular lattice associate matching weight jm jm denotes cardinality matching positive real number 
recall monomer dimer partition function generating function coefficient number matchings cardinality see equation 
monomer dimer problem trying compute coefficients various values monte carlo method described simulates metropolis style markov chain state space set matchings see section 
stationary distribution markov chain jm stationary probability matching proportional weight normalizing factor just partition function 
transitions correspond local random perturbations addition deletion exchange edge matching 
precisely suppose state matching 
graph underlying markov chain defined state number monomers fixed constant dimer density tends fisher temperley technique principle follows 
possible set positions monomers technique count dimer coverings graph formed removing sites lattice works graph remains planar 
sum possible positions monomers 
approach longer runs polynomial time allowed grow inefficient quite small fixed values analytic solution dimer covering problem planar lattice known time 
contrast rectangular lattice assumption periodic boundary conditions important solved dimer covering problem hexagonal lattice fixed boundaries shown result depends significantly shape boundary 
jej neighbors jej number edges move new state randomly choose edge graph edge corresponds new state manner described case move probability remain transitions markov chain follows 
move state gamma 
ii exactly vertices matched edge move state gamma 
iii endpoint matched move state probability 
iv cases 
markov chain ergodic reversible detailed balance equation easy see unique stationary distribution case defined greater physical interest computation purposes useful define markov chain markov chain underlying graph matching set neighbors markov chain defined 
new transition probabilities defined formed removing edge formed adding exchanging edge 
detailed balance equation follows stationary distribution algorithm works observing process equilibrium various values running series experiments suitable values estimate successive ratios coefficients gamma estimates sufficiently appropriate products estimates yield estimate coefficients details algorithm see 
dominant factor running time algorithm number steps need simulated order markov chain reach equilibrium values needed experiments 
quantity analyzed rigorously shown polynomial function ratio ff am gamma am specifically ff jej 
improved ff jv see 
monte carlo procedure efficient graphs ratio ff small 
matchings cardinality called perfect matchings cardinality gamma called near perfect matchings correspond respectively dimer coverings coverings precisely monomers 
ratio ff measures amount number near perfect matchings exceeds number perfect matchings 
transition probabilities actual markov chain described slight variant allow self loops state ensure 
shown approach yields partition function coefficients arbitrary graph regardless value ff possible obtain coefficients gamma time polynomial gamma enables approximately count number coverings fixed dimer density gamma running time grows exponentially gamma note ratio removal edge perfect matching yields unique near perfect matching 
efficient algorithm want ratio larger specifically bounded polynomial function family graphs question 
note trivial property hard construct family vertex graphs ratio grows exponentially discuss issue detail section 
main technical contribution prove ratio small lattices generally arbitrary cayley graphs 
specifically show dimensional rectangular lattice periodic boundary conditions ff ensures monte carlo algorithm fact running time grows polynomially fixed dimension similar bound holds arbitrary cayley graphs 
stress monte carlo algorithm differs earlier ones monomer dimer systems see guaranteed independent heuristic arguments provide statistically reliable estimates running time grows polynomially number lattice sites 
proofs bound lattices cayley graphs sections elementary rely novel translation technique strong symmetry properties lattice arbitrary cayley graphs allow matching configuration translated turn permits symmetry broken 
conjecture technique may shed light quantities related systems particular correlation monomers specified sites studied dimensions fisher stephenson 
remainder chapter organized follows 
section prove bounds form rectangular lattices periodic boundary conditions dimension fixed boundaries dimensions 
section extend technique handle arbitrary cayley graphs 
section conclude remarks physical combinatorial significance ratio open problems 
rectangular lattices introducing definitions notation concerning lattices 
interested classes lattices class fixed boundary conditions lattice perfectly regular distinguished boundary vertices 
consider dimensional rectangular cartesian lattice vertices integer lattice points points connected edge iff unit distance apart 
second class lattices periodic boundary conditions lattice includes wrap edges toroidal augment edge gamma gamma write periodic lattice 
shall adopt terminology graphs matchings introduced section 
view graphs vertices assume contain perfect matching dimer covering 
vertex graph set perfect matchings set near perfect matchings monomer dimer coverings exactly monomers 
matching monomer dimer covering refer set unmatched vertices graph holes write set near perfect matchings holes graphs consider bipartite vertices side bipartition 
convenient view vertices side bipartition colored white side black 
case dimensional lattice coloring corresponds usual black white coloring checker board squares form dual graph 
note near perfect matching hole white black 
recall previous section aim construct efficient approximation algorithms number monomer dimer coverings various lattice graphs specified number dimers 
indicated earlier algorithms earlier result jerrum sinclair counting matchings graph subject certain condition graph 
state result precisely 
recall vertex graph quantity ff jn jmj defined ratio number matchings number perfect matchings theorem jerrum sinclair theorem exists number perfect matchings family vertex graphs satisfies ff fixed polynomial result points polynomial relationship numbers near perfect perfect matchings allows construct counting matchings arbitrary cardinality proceed prove relationship fact hold families lattice graphs section general cayley graphs 
technique proofs relies structure union matchings graph 
consider subgraph consisting union edges perfect matchings color edges red blue find vertex adjacent exactly red edge blue edge union length cycles alternates colors 
cycles may trivial consisting single edge colored red blue 
clearly converse true covering graph length cycles alternate colors defines perfect matchings set red edges set blue edges 
similarly suppose near perfect matchings holes holes distinct vertices 
subgraph defined union red edges blue edges vertices degree vertices degree 
consists length alternating cycles plus alternating paths endpoints paths length odd length 
see 
proofs rely observation neighbor neighbor augmenting edges ensure vertex degree 
graph bipartite resulting subgraph consist solely length cycles cycle containing contain edges new cycle force alternate colors oe union near perfect matchings 
cycle cover defines perfect matchings 
observation define mapping set pairs theta set pairs theta injective turn virtue symmetry properties lattice implies jn larger jmj position state result 
theorem dimensional periodic lattice ratio ff bounded 
proving theorem combine theorem obtain immediate corollary 
corollary exists number monomer dimer coverings specified number dimers dimensional periodic lattice fixed dimension proof theorem 
sets perfect near perfect matchings respectively ff jn jmj fix holes neighbor right mod similarly neighbor right proceed construct injection oe theta theta consider subgraph defined union red edges blue edges special edges color special edges red adjacent red edges vertex adjacent edge color flip colors edges paths vertex adjacent exactly edge color 
avoid ambiguity choose path pass saw earlier sets colored edges define perfect matchings 
see 
need check map oe injective pair perfect matchings image map show uniquely reconstruct pair near perfect matchings holes holes mapped oe note union pair matchings image oe contains alternating cycle includes edges oe mapping near perfect matchings perfect matchings 
color edges matching containing red edges matching blue 
flipping colors edges path choosing path avoids consistency adjacent red edges 
holes near perfect matching lie opposite sides bipartition path odd length 
flipping operation adjacent red edges vertices adjacent edge color 
remove edges colored edges correspond near perfect matchings mapped oe construction demonstrates jn delta jn jmj finish proof structure lattice periodic lattice operation shifting matching position right bijection sets jn jn relationship gives jn jmj implies jn jmj summing choices black vertex white vertex find jn jmj ff claimed 

clear proof theorem corollary generalizes hybrid lattices fixed boundary conditions dimensions provided exists dimension lattice periodic boundary conditions 
holds general bipartite rectangular lattices size theta theta theta periodic boundary conditions dimension boundary periodic 
theorem extends technique handle dimensional lattices fixed boundaries 
show lattices number near perfect matchings large compared number perfect matchings appeal theorem 
theorem dimensional lattice fixed boundaries ratio ff bounded 
corollary exists number monomer dimer coverings specified number dimers dimensional lattice fixed boundaries 
proof theorem 
prove theorem slightly general case theta lattices fixed boundaries 
map shifts lattice position right vertex define map extends matchings natural way matching theta just iff sets perfect near perfect matchings respectively lattice proof fix holes show jn jmj define injection oe theta 
theta follows 
near perfect matchings 
consider subgraph obtained union shifted version adding special edges vertices leftmost column rightmost column degree vertices degree 
union length cycles paths endpoint st column see 
color edges red edges blue 
union argue dimensional lattice planar path cycle passes pass immediate lie cycle focus case lie path 
proof contradiction cases consider see 
suppose path column st column passes loss generality assume lie starts red edge ends blue edge special edge odd length 
follows starts black vertex ends white vertex conversely 
number vertices column opposite parity number vertices st column 
corresponding vertices columns fall side black white bipartition 
consider set vertices lie path number vertices lying nth columns vertices matched number lying second st columns vertices matched contradiction 
proof theorem 
second suppose path going starts ends column 
interchanging roles necessary may assume loss generality lie outside cycle defined path column 
starts ends red edge special edge length 
starts black vertex ends black vertex conversely odd number vertices column lie endpoints 
set points lie strictly inside path jsj matches vertices matches vertices lie column contradiction number odd 
conclude lie length cycle path 
case proceed proof theorem color special edges red flip colors edges path case cycle ambiguous choose path pass 
sets colored edges define perfect matchings furthermore matchings image map oe uniquely reconstruct pair near perfect matchings preimage oe injective 
see note element image oe consists perfect matchings contains cycle path passes reconstruct holes holes reversing color flipping operation proof theorem 
jn jmj summing choices get jn jmj yields required bound ff lattices bipartite cayley graphs theorem extends techniques section handle lattices 
precisely polynomial time approximately count number coverings specified number dimers vertex bipartite graph cayley graph finite group 
recall cayley graph group set generators defined identifying vertices words connecting vertices edge graph generator xa class graphs includes finite hexagonal lattice periodic boundaries fundamental domain 
group generates lattice ha abc ab bc ca integer generators words follow relators equivalent identity group 
see 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma oe oe oe oev proof theorem hexagonal lattice ha abc ab bc ca theorem vertex bipartite graph cayley graph finite group 
ff note theorem applied cayley graph yields precisely bound ff theorem 
corollary exists number monomer dimer coverings specified number dimers bipartite graph cayley graph finite group 
proof theorem 
group consider cayley graph assume bipartite 
choose vertex label identity element determines label vertex graph corresponding product labels path leading identity vertex 
fix pair holes graph 
ua neighbor defined fixed generator oe vu gamma word maps multiplication left 
group multiplication left preserves adjacency neighbor group finite exists oe show jn jmj exhibiting injection oe cartesian product theta oe gamma oe gamma define map oe gamma stages 
oe gamma oe gamma set near perfect matchings 
stage maps pair perfect matching auxiliary near perfect matching 
stage gamma map pair auxiliary near perfect matching previous stage 
gamma st stage maps gamma final pair perfect matchings gamma stage consider subgraph color edges red blue 
vertices degree oev degree vertex edges color incident 
flipping colors edges portion path oev force path oev alternating colors 
graph bipartite vertices degree oev adjacent blue edge 
blue edges form perfect matching red edges form auxiliary near perfect matching holes oev th stage mapping mapped theta oe gamma oe gamma gamma theta oe gamma theta theta oe gamma oe gamma stage consist injection oe gamma theta oe oe theta oe particular map pair follows 
consider subgraph oe oe gamma get odd length path oe flipping colors edges portion path oe gamma oe get perfect matching near perfect matching holes oe gamma st stage mapping terminates 
mapping gamma oe gamma oe gamma oe gamma oe gamma oe oe group identity 
subgraph gamma oe gamma oe gamma consists length cycles 
flipping colors paths oe gamma choosing path passes avoid ambiguity get cycles alternating colors follows cayley graph bipartite 
sets colored edges define final perfect matchings gamma labels holes vertex ua uniquely determined word oe vu gamma inverse 
invert map oe working backwards stages stage similar proof theorem 
shows oe injective jn oe gamma oe gamma jmj step see word oe translation oe bijection matchings matchings oe oe precisely extend oe matchings defining oe oe oe iff valid neighbors cayley graph generator xb oe oe oe xb neighbors 
unmatched oe oe unmatched vertices oe oe oe oe jn jn oe oe combining fact oe injective see jn jmj jn jmj vertices summing gives jn jmj claimed 
proof theorem holds larger class graphs call neighbor automorphism graphs 
graph class pair vertices exists automorphism oe oe neighbor notice class includes cayley graphs vertex transitive 
includes larger set graphs need regular 
proof theorem demonstrates bipartite neighbor automorphism graph vertex sets ratio ff jv jjv noteworthy coupled theorem 
theorem counting number perfect matchings bipartite neighbor automorphism graph complete 
proof uses reduction counting perfect matchings arbitrary bipartite graph shown valiant complete 
briefly idea reduction follows 
arbitrary bipartite graph 
construct new bipartite graph subgraph induced isomorphic subgraph induced edge set connecting multigraph consisting copies complete graph 
similarly copies complete graph connect easy verify neighbor automorphism graph 
fixed value number perfect matchings linear combination number matchings size determine number perfect matchings able solve system linear equations determine value including am number perfect matchings non bipartite cayley graphs jerrum pointed ratio ff near perfect matchings perfect matchings bounded cayley graph argument techniques previous sections 
gives important periodic lattices triangular lattice face body centered cubic lattices 
include argument completeness 
theorem jerrum vertex graph cayley graph finite group 
ff course gives immediate corollary corollary exists number monomer dimer coverings specified number dimers graph cayley graph finite group 
proof theorem 
recall cayley graph vertices labeled words group 
consider near perfect matchings fixed holes graph show jn summing choices pairs give bound ratio ff fixed pair vertices cayley graph define distance length shortest path clearly graph vertices 
show jn induction suppose neighbors cayley graph 
map set near perfect matching holes set perfect matchings adding edge jn jmj neighbors 
assume inductively verified claim vertices distance cayley graph 
neighbor shortest path consider set near perfect matchings holes vertex number near perfect matchings holes maximized jn jn 
note graph vertex transitive jn jn choices define map oe pairs near perfect matchings theta choose color edges red blue 
consider union edges vertex degree 
cases formed path cycle including formed single path case flip colors cycle remove edge red edges form near perfect matching holes blue edges form near perfect matching holes second case color edge red flip colors part path red edges form near perfect matching holes blue edges form perfect matching 
case uniquely reconstruct original near perfect matchings image map 
summarizing discussion find oe injective map sets oe theta 
theta theta follows jn delta jn jn delta jn jn delta jmj recall jn chosen maximal choices holes particular jn jn jn jn combining equation find jn delta jn jn delta jn jn delta jmj jn jn jmj distance gamma know inductively jn gamma jmj combining equation find jn completing induction 
choice jn summing distinct pairs vertices conclude jn jmj note gives alternative proof theorem 
bipartite graph cases described proof possible equation jn jm proves bound ff bipartite cayley graphs 
concluding remarks open problems elementary combinatorial techniques show cayley graph quantity ff small number near perfect matchings monomer dimer coverings monomers exceeds number perfect matchings dimer coverings small polynomial factor 
allowed deduce rigorous polynomial time bounds monte carlo algorithm counting coverings graphs specified number dimers 
results show vertex bipartite cayley graph quantity ff lies range 
upper bound comes theorem lower bound trivial see section interesting know bounds improved cayley graphs determine precise value ff dimensional rectangular lattice similarly non bipartite lattices know weaker bound ff apart inherent interest improving bounds affect efficiency monte carlo algorithm quantity ff enters running time explained section 
technique breaks case lattices fixed boundary conditions dimensions higher 
techniques similar reduce question bounding ff establishing local property number near perfect matchings fixed holes polynomially related number matchings holes neighbor neighbor unable observation obtain proof fixed boundary conditions higher dimensions 
go ask characterization families graphs ratio ff polynomially bounded monomer dimer problem tractable monte carlo approach 
question considerable combinatorial interest counting perfect matchings dimer coverings bipartite graph equivalent computing permanent matrix 
widely studied problem combinatorics existence efficient approximation algorithm important open question theory computation 
monte carlo algorithm sketched runs polynomial time wider class graphs currently known algorithm interest establish precisely graphs amenable 
simpler apparently widely applicable approximation algorithms see 
conceivable graph ff large efficiently decomposed way resulting components small value ff fall scope monte carlo algorithm idea obtain approximation scheme general graphs running time exponential improves substantially naive deterministic methods 
question ff polynomially bounded family graphs apparently subtle 
hard construct bad examples 
consider example family graphs fg defined vertices 
easy see perfect matching gamma near perfect matchings consider just holes ratio ff exponentially large 
hand ff known polynomially bounded sufficiently dense graphs graphs sufficiently expansion properties random graph suitable model 
interestingly technique prove property cases applicable lattices involves constructing short augmenting paths near perfect matchings paths exist lattice graphs large diameter 
injective mapping technique new approach hope lead better understanding behavior ratio ff general graphs 
bad graph case lattices conjecture explicit mappings exhibited near perfect matchings fixed holes perfect matchings shed light behavior number near perfect matchings function positions holes 
physical terms corresponds correlation pair monomers sea dimers quantity partial results obtained dimensions fisher stephenson 
techniques immediately yield simple rigorous proof dimension number configurations monomers fixed pair vertices bounded gammad times number configurations adjacent monomers 
careful analysis may enable precise statements correlation 
chapter self avoiding walks background self avoiding walks studied mathematicians natural scientists years subject extensive literature state art survey see book madras 
see book lawler related topics 
important applications model spatial arrangement linear polymer molecules chemical physics 
walk represents molecule composed monomers linked chain self avoidance constraint reflects fact monomers may occupy position space 
length jwj self avoiding walk number edges fixed dimension denote set self avoiding walks length js number walks length fundamental computational problems concerning self avoiding walks count number walks length compute ii determine characteristics typical walk length example compute mean square displacement expected squared distance free walk origin uniform probability distribution walks length despite research area heuristic arguments empirical studies known rigorous terms problems interesting cases low dimensional lattices higher dimensions known essentially self avoidance constraint significant behavior resembles simple non self avoiding walks understood 
algorithmic results stated arbitrary dimensions greatest interest case low dimensional lattices key fact holds dimensions discovered hammersley morton observed lim exists lim straightforward consequence obvious fact sequence log subadditive hammersley welsh showed constant celebrated long standing conjecture fact polynomially bounded 
precisely conjecture upsilon pi xi sigma fl gamma log fl dimension dependent constants 
note dominant behavior exponential function comparing case simple walks number precisely see effect self avoidance constraint reduce effective number choices walk step number known connective constant 
crude behavior modified correction term conjecture 
fl called critical exponent 
note fl known exist 
unproven conjecture supported extensive non rigorous empirical studies ingenious heuristic arguments employed obtain numerical estimates constants fl elementary considerations show gamma proven 
see similar bounds higher dimensions 
rigorous bounds weaker non rigorous estimates obtained empirical methods typically quoted decimal places 
precise conjectured values critical exponent fl dimensions despite fact fl known exist fl believed believed approximately 
see detailed summary numerical estimates 
effort invested obtaining statistical estimates quantities monte carlo simulations 
error bars estimates justified heuristically 
chapter attempt put experiments footing 
monte carlo algorithms approximating number self avoiding walks length dimension generating self avoiding walks length uniformly random 
running time algorithms polynomial walk length grows slowly parameters controlling accuracy confidence levels estimates 
polynomial time algorithms statistical errors rigorously controlled 
algorithms modifications extensions monte carlo approach studied originally sokal 
subsection sketch approach point limitations 
section summarize algorithms explain overcome problems 
monte carlo simulations interested sampling uniform distribution set walks length natural markov chain state space set walks lengths chain currently walk extends walk allowable direction probability probability deletes edge backtracks shorter walk 
note naive approach simply growing walk edge time breaks self avoidance constraint number possible extensions length vary different walks due possibility walks getting stuck 
require sophisticated dynamic scheme provided markov chain 
type markov chain considered sokal single parameter fi control relative probabilities extending contracting walk edge 
walk length lattice edges incident free endpoint walk chosen equal probability 
edge extends walk self avoiding added probability fi edge edge walk removed done 
assuming conjecture sokal argue value fi sufficiently close smaller gamma connective constant ensures stationary distribution assigns reasonably high weight polynomial furthermore assuming conjecture sokal thomas argue values fi markov chain rapidly mixing gets close stationarity number steps polynomial see 
order appreciate role fi consider truncated version markov chain length walk allowed exceed stationary distribution defined fi smaller gamma generate short walks fi larger markov chain backtrack consequently take long time reach stationarity 
fi carefully chosen 
sokal perform experiments fine tuning fi observing markov chain observations suggest fi sufficiently close gamma sokal algorithm suffers drawbacks 
assume conjecture appropriate values constants fl order bound time required markov chain reaches stationarity 
long conjecture remains open choices constants guarantee algorithm produces reliable answers polynomial time 
second order implement algorithm necessary estimate fi needs taken little smaller gamma leads circularity determining principal goals algorithm 
similar monte carlo algorithms study walks see chapter summary suffer similar lack rigorous justification offer guarantee results reliable 
transition probabilities slightly simplified version difference inessential behavior chain 
results develop monte carlo algorithm self avoiding walks modifying markov chain sokal overcome difficulties discussed subsection 
elementary important innovations 
allow parameter fi vary level markov chain fi depend length walks calculate appropriate value fi level observations markov chain earlier levels 
require prior knowledge fi second show efficiency markov chain simulation assumption conjecture defined weaker conjecture importantly tested advance algorithm region assumed 
run algorithm gather strong evidence form counter example conjecture false know trust simulations 
notion self testing gives confidence results warns may erroneous previously explored context program checking see 
conjecture require conjecture dimension fixed polynomial conjecture says choose random self avoiding walks lengths non negligible probability glue walks produce self avoiding walk length precise self avoiding walks define concatenation ffi walk formed union edges translates origin coincides free endpoint note ffi need self avoiding 
selected uniformly random sm respectively quotient cn represents probability ffi self avoiding see 
conjecture asserts gamma lower bound probability 
conjecture restrictive conjecture previous monte carlo methods including sokal rely 
see note fl gamma implies cn nm fl gamma gamma delta fl gamma conjecture widely believed hold 
dimension precise conjectured value polynomial calculation shows essentially just function conjecture appropriate values constants fl behavior algorithm may stated precisely follows 
fix dimension polynomial suppose conjecture holds 
inputs ffl ffi algorithm outputs sequence numbers time output polynomial function ffl gamma log ffi gamma probability gamma ffi approximates ratio ffl hand tt concatenation self avoiding walks 
conjecture happens fail value high probability error reported know algorithm reliable region previously explored may unreliable larger values case algorithm discovered counter example conjecture polynomial consideration precise conjectured values exist substantial interest theory self avoiding walks 
details self tester described explicitly section 
note presence self tester answers output algorithm correct high probability algorithm guaranteed run polynomial time 
algorithm fact flexible addition solve problem ii section generating random self avoiding walks specified length region conjecture holds algorithm output provides method generating time polynomial log ffi gamma random self avoiding walk length distribution variation distance uniform distribution ffi gives fully polynomial uniform generator self avoiding walks see definition obvious fashion obtain statistical estimates polynomial time quantities mean square displacement 
section approximation algorithms assuming conjecture 
section show algorithms robust adding self tester verify conjecture 
section efficient version algorithm implemented get numerical estimates tabulated section 
algorithms goal design fully polynomial randomized approximation scheme uniform generator self avoiding walks length quantity associated self avoiding walks play important role algorithms 
fixed dimension define ff min kn quantity ff lower bound probability concatenation walks self avoiding chosen sum lengths note conjecture says precisely ff gamma polynomial depends 
theorem fixed dimension exists randomized approximation scheme self avoiding walks runs time polynomial ffl gamma log ffi gamma ff gamma uniform generator runs time polynomial log ffl gamma ff gamma interesting observe result combined asymptotic bound hammersley welsh quoted section immediately gives approximation algorithms self avoiding walks running time sub exponential 
specifically bound implies ff gamma constant closer inspection running time algorithms theorem see section reveals dependence ff gamma linear 
get randomized approximation scheme uniform generator running times grow exp assume conjecture get stronger 
conjecture asserts ff gamma polynomial immediately deduce 
corollary assuming conjecture exists fully polynomial randomized approximation scheme fully polynomial uniform generator self avoiding walks fixed dimension algorithms randomly sampling walks length monte carlo simulation series successively larger markov chains section define nth markov chain section derive bound rate convergence stationarity 
machinery place section assemble markov chains single scheme provides algorithms satisfying requirements theorem 
markov chain indicated section consider markov chain explores space walks letting walk expand contract randomly time influence weighting parameter fi working single markov chain global value parameter fi incrementally construct markov chains nth state space set self avoiding walks length transition probabilities depend parameters fi fi discussed 
transitions markov chain defined follows 
state walk length choose edges incident free endpoint uniformly random 
chosen edge coincides step remove edge chosen edge extends walk self avoiding length add edge probability fi leave unchanged 
precisely define partial order oe set self avoiding walks oe jwj jw jwj steps coincide define oe oe jw jwj extends step 
transition probabilities markov chain defined fi jw oe oe chosen probabilities sum state space jwj jw 
note may view weighted random walk tree defined partial order oe tree trivial walk length root children walk walks oe tree levels ith contains walks length gamma transition probability state parent state level children fi case fi fi gamma just markov chain sokal truncated level evident markov chain irreducible states communicate aperiodic 
implies ergodic converges asymptotically defined stationary distribution straightforward show lemma stationary distribution markov chain jwj fi normalizing factor 
proof 
suffices show chain reversible respect distribution satisfies detailed balance condition see equation 
readily verified definition 
note stationary distribution uniform walks length choice values parameters fi choosing fi carefully achieve distribution lengths assigns sufficiently high weight ideally value want fi ratio gamma 
fact ratio strictly proven surprisingly brien 
course unrealistic know quantities gamma precisely trying compute see section determine approximations ideal values needed 
moment consider ideal behavior markov chain assuming fi equal gamma assumption lemma says stationary probability walk jwj gamma jwj stationary distribution uniform lengths probability walk length follows stationary distribution reasonably concentrated uniform may principle generate random self avoiding walks length simulating reached equilibrium starting say empty walk outputting final state length need show number simulation steps required markov chain small 
key component running time algorithms quantified subsection 
mixing time mixing time bounds time takes markov chain get close equilibrium addresses question simulation steps required produce sample distribution close note running time algorithm polynomial markov chain rapidly mixing sense mixing time small compared number states grows exponentially 
years useful analytical tools devised analyzing mixing time complex markov chains kind 
idea canonical paths developed 
consider ergodic reversible markov chain state space transition probabilities stationary distribution view chain weighted undirected graph vertex set edge pair vertices states give oriented edge capacity note detailed balance ordered pair distinct vertices specify canonical path fl xy graph collection paths gamma ffl xy yg define ae gamma max fl xy maximization oriented edges ae measures maximum loading edge paths gamma fraction capacity path carries flow note existence collection paths gamma ae gamma small implies absence bottlenecks graph suggests markov chain rapidly mixing 
intuition formalized bound obtained mixing time terms quantity ae min gamma ae gamma measure known conductance 
get slightly sharper bound case idea diaconis alternative measure ae min gamma ae gamma gamma gamma maximum length path gamma appropriate version bound combining proposition corollary stated precisely theorem 
measure rate convergence delta probability distribution markov chain time starting state ffl define ffl minft kp delta gamma ffl tg delta denotes variation distance distributions gamma gamma maxa gamma theorem ergodic reversible markov chain stationary distribution ffl ae log gamma log ffl gamma logarithms assumed base 
theorem show mixing time markov chain bounded terms quantity ff defined section 
assuming conjecture imply markov chain rapidly mixing 
simplicity idealized version discussed section fi exactly equal gamma clear analysis unduly sensitive small perturbations values fi theorem markov chain starting empty walk ffl dn ff gamma log log ffl gamma proof 
graph corresponding markov chain tree choice simple paths pair vertices denote collection paths gamma ffl xy depth tree gamma result follow theorem show ae gamma gamma constant edge tree suppose endpoints walk length walk length subtree rooted gamma cut edge clear ae gamma max gamma follows essential fact tree defining tree number vertices level subtree bounded total number vertices level tree 
evident initial segment self avoiding walk self avoiding 
dz ww jf wj jgj jf wj jgj gammak gamma ff inequality follows sub cayley property tree 
putting see gamma gamma gamma arbitrary gives required upper bound ae gamma 
similar bound mixing time sokal markov chain obtained ad hoc methods sokal thomas 
essential feature argument sub cayley property tree underlying chain 
weaker bound obtained lawler sokal discrete cheeger inequality conductance 
proof similar spirit essentially effect replace ae ae bound theorem 
algorithm subsection show assemble family markov chains just described single algorithm outputs sequence numbers fe estimate corresponding accuracy estimates controlled parameters ffl ffi exactly definition randomized approximation scheme definition 
shall see algorithm provides approximation scheme uniform generator properties claimed theorem 
main new ingredient algorithm bootstrapping procedure computing parameters fi governing transition probabilities markov chains 
recall analysis far assumed fi gamma values available fact calculating quantities main objectives 
algorithm computes estimates ideal values gamma turn previous markov chain gamma consistent time fi required markov chain algorithm spelled detail works sequence stages corresponding iterations loop 
call stage algorithm runs completion computes value fi approximates value gamma ratio ffl ffl ffi accuracy confidence inputs 
consider operation stage detail 
compute approximation fi ratio gamma randomly sample walks length gamma markov fi gamma generate sample size nt close distribution gamma gamma set walks sample length gamma ext oe gj jy ext abort set fi jy ext output gamma fi algorithm chain gamma estimate average number step extensions walk compute number step extensions walk explicitly checking gamma possibilities 
note random walk bounded random variable values gamma mean gamma 
sample size controlled parameter simple generalization estimator theorem see handle non negative bounded random variables shows need large obtain estimate sufficiently high probability 
fact sampling larger set gamma need generate sample size nt ensure high probability get walks length gamma sample large follows fact stationary distribution chain gamma walks length gamma weight algorithm abort event sample contain walks length gamma summarizing discussion get lemma algorithm assuming stages gamma stage probability gamma ffi provided sample size cn ffl gamma log log ffi gamma suitable constant depends dimension 
algorithm designed assuming previous stages gamma stage probability gamma ffi reason requirement markov chain simulating precisely analyzed sections parameters fi differ slightly ideal values 
clear lemma stationary distribution uniform level tree previous stages distribution levels tree differs uniform distribution constant factor 

stages value fi gamma output algorithm stage approximates gamma ratio ffl ffl happens probability gamma ffi gamma ffi get randomized approximation scheme principal goals 
stage computed values fi constructed markov chain simulate generate random walks length second principal goal 
running time stage algorithm dominated nt cn ffl gamma log log ffi gamma times time required produce single sample gamma analysis previous subsection theorem time gamma ff gamma log log ffl gamma delta fixed dimension run nth stage algorithm approximation scheme satisfying requirements theorem 
note exponent running time improved refined statistical analysis 
reasoning simulating markov chain gamma ff gamma log log ffl gamma delta steps gives uniform generator claimed theorem 
making algorithm self testing section show place algorithm previous section theoretical basis replacing assumption conjecture algorithmic test conjecture 
particular instance believe generally useful idea self testing algorithm correctness depends conjecture robust 
recall reduced problem constructing polynomial time approximation algorithms self avoiding walks verifying single widely believed conjecture behavior walks 
important feature reduction structure conjecture 
conjecture bounds probability glue random self avoiding walks produce new self avoiding walk algorithm lets generate random self avoiding walks estimate probability 
specified polynomial allows verify conjecture algorithm new value algorithm region tested 
precisely idea self tester introduce section 
showed section construct sequence markov chains uniformly generating counting self avoiding walks successively longer lengths 
running time algorithms polynomial walk length unknown parameter ff gamma quantity enters time bound governs mixing time markov chains see theorem 
appealed conjecture argue ff gamma polynomially bounded idea self tester obtain estimate ff gamma advance know long simulate markov chains ensure samples sufficiently close stationary distribution 
give point analysis theorem refers idealized markov chain values fi exact 
simple matter check assuming stages effect mixing time small perturbations fi constant factor 
ff ff gamma gamma repeat times generate generate gammai ae ffi ff minf ff ff gamma output warning conjecture fails continue self tester probabilistic guarantee algorithm correct independent conjecture 
examining growth rate successive values ff gamma simultaneously test conjecture 
algorithm proceed successfully long exceed projected upper bound ff gamma ff gamma grow quickly detect fact counter example conjecture 
precisely stage algorithm previous section procedure shown compute quantity ff high probability ff ff ff conservative estimate ff gamma place ff gamma stage computing mixing time markov chain theorem 
test conjecture comparing estimates ff gamma stage constant multiple projected polynomial upper bound algorithm self tester properties high probability ff gamma conjecture holds algorithm outputs reliable numerical answer ii ff gamma conjecture fails badly algorithm outputs error message iii ff gamma algorithm outputs error message outputs reliable numerical answer 
furthermore case algorithm runs polynomial time 
method computing estimate ff uses random sampling stationary distribution markov chain gamma idea generate self avoiding walks lengths gamma uniformly random estimate probability pair glued form walk length self avoiding 
details 
elementary statistics show sample size required ensure estimate ff bounds specified high probability polynomial function self testing portion algorithm runs polynomial time 
theorem algorithm section self tester incorporated runs time polynomial ffl gamma log ffi gamma satisfies properties iii 
worth noting primary motivation self tester check conjecture idea greatly increase efficiency algorithm conjecture proven polynomial self tester computing close estimate ff simulating markov chain ff gamma steps sufficient allow sample close stationary distribution 
far efficient basing number simulation steps proven potentially loose upper bound idea tester restrictive sense 
example sokal propose testing possible errors scaling due conjecture fl gamma trying specific polynomial forms gives evidence correct form falls short proving probabilistically 
contrast tester designed verify exactly conjecture require offers precisely quantified statistical evidence algorithm operating expect 
improved time bounds sections testable algorithm running time polynomially bounded 
section concerned improving efficiency 
numerical results section improved algorithm 
careful honing analysis algorithm produces significant improvements running time 
restrict discussion conceptual changes algorithm yield greater improvements running time 
run algorithm stages nth stage simulating markov chain state space set self avoiding walks length gamma inputs nth stage parameters fi fi gamma produce new numerical estimate number self avoiding walks length new parameter fi modification algorithm involves generate outputs 
recall previously calculated estimate fi set gamma fi contrast calculate directly set fi quotient gamma calculate take median independent random variables kn estimate determine take product independent random variables estimate number step extensions walk length stage update values random variables 
improvement running time comes observations 
standard trick reducing number samples required get estimate product random variables see 
requiring variance random variables extremely small product close mean bound variance product directly 
allows reduce number samples needed factor longer needs quite deviations tend cancel 
second observation specialized features process 
previously stage sample walks length rejected 
new implementation sample walk length update estimate nth stage taken samples calculate accurate 
consequently able tolerate relatively weaker estimate close product estimate successive stages estimates improve 
find requiring polynomial number samples size ideas require log samples size nth stage 
markov chains designed outputs uniformly distributed levels lead large improvement running time 
new algorithm 
median algorithm standard trick boosting confidence parameter 
show independent trials estimate approximate factor ffl probability 
follows median fz approximate ffl probability gamma ffi log chosen log log ffi constant probability outputs correct gamma ffi log gamma ffi buffer data alluded algorithm get anomaly arising fact increases number trials required compute median 
additional sample size stage algorithm remedy problem 
increases previous stage buffer samples size evaluate est gamma samp gamma kth trial proceed usual 
high probability sufficient number buffer samples size 
position analyze algorithm 
call stage runs completion computes estimate approximates factor ffl clearly stages gamma stationary distribution nth markov chain close jwj gamma analysis unduly affected small deviations probabilities 
analyze behavior stage assume previous stages show stage high probability 
delta expected value random variable var delta variance 
note stage number samples size cffl gamma dlog je cffl gamma gamma dlog show sufficient bound variance appropriate choice lemmas perform role lemma original algorithm 
fi cffl gamma dlog ne cnm dc log log ffi gamma buffer data create new sample buffer sample small abort gamma generate sample size close distribution gamma gamma set walks sample length gamma jy abort ext ext gamma oe gj samp samp gamma jy ext samp output median kn fi gamma gamma generate buffer sample size improved algorithm lemma assume algorithm stages gamma 
stage var ffl assuming stage runs completion 
proof 
random variable product independent random variables theta theta theta fact sum independent random variables bound variance 
var gamma var gamma gamma dp gamma gamma min get bound right hand side inequality take natural logarithms log dp jj log dp dp dp ffl gamma ji log ffl log ffl fact small log second inequality follows equation number samples size 
monotonicity log function equation gives dp ffl choose substituting equation back equation find var ffl bound variance allows analyze performance algorithm chebyshev inequality proof 
lemma algorithm assuming stages gamma stage probability gamma ffi log 
proof 
assuming previous stages outputs markov chains gamma reliable 
bound probability stage estimate factor ffl chebyshev inequality tells independent trial pr jz gamma ffl var ffl lemma 
standard technique boosting confidence parameter median log log ffi independent trials get pr gamma ffl ffi log algorithm nffl gamma log log log ffi gamma samples required stage 
large improvement corresponding bound lemma included factor summarizing discussion 
theorem algorithm outputs estimates estimates ffl number self avoiding walks length probability gamma ffi running time incremental value ff gamma ffl gamma log log ffl gamma log log ffi gamma numerical results section estimates number self avoiding walks dimensional cartesian lattices 
obtained implementing algorithm section improvements constants 
substantial effort physics community count number self avoiding walks exactly especially dimensions 
various ingenious exponential time algorithms number self avoiding walks dimensional lattice known length 
include published results length comparison estimates 
dimensions far self avoiding walks dimensions exact enumerations successful exact number walks dimensional cartesian lattice computed length 
contrast notice algorithm performs better higher dimensions assuming conjecture suggests factor ff gamma expected decrease dimension increases 
consequently concentrated efforts dimensional lattice greatest physical significance 
program implemented dimensional lattices 
accuracy parameter ffl chosen confidence parameter ffi chosen expect answers factor sigma real counts reliability 
dimensional problem ran just weeks processor sgi challenge 
dimensional problem ran week half processor sgi challenge 
results computation figures 
comparing exact numbers exist see program achieves greater accuracy relative error guaranteed analysis typically 
error calculated relative larger number jc gamma max walk length exact count estimates relative error number self avoiding walks dimensions walk length exact count estimates relative error number self avoiding walks dimensions cont 
walk length exact count estimates relative error number self avoiding walks dimensions walk length exact count estimates relative error number self avoiding walks dimensions cont 
concluding remarks open problems obvious compelling open problem arising chapter verifying conjecture 
constitute substantial breakthrough classical theory self avoiding walks 
studied conjecture elementary combinatorial nature task feasible 
results show proving conjecture polynomial yield provably polynomial time monte carlo approximation algorithms self avoiding walks 
addition predict natural applications self testing convert heuristics robust algorithms 
example candidate statistical mechanics uniformly generating counting lattice trees 
lattice tree acyclic lattice animal gamma lattice edges 
lattice trees model branched polymers dilute solution believed fall universality class lattice animals 
strong evidence expression number lattice trees size similar form conjecture 
techniques design testable algorithm self avoiding walks extended wider class lattice animals 
feature discussed chapter lead approximation algorithms lattice structures sub cayley trees monte carlo simulations 
lattice trees example imagine describing tree unique path created breadth search traversal edges 
natural sub cayley tree describes set paths stages breadth search 
adding appropriate weights modify sub cayley tree guarantee stationarity paths represent complete traversal lattice tree significant weight 
usual difficult guarantee reach stationarity rapidly 
sub cayley feature graph underlying closely related markov chain may useful tool demonstrating rapid convergence 
notice restricted attention chapter unweighted problem want sample walk length equal probability 
generalization worth exploring sampling self avoiding walks attractive repulsive forces bonds 
associate self avoiding walk weight describing spread tightly wound walk want sample walk proportional weight 
addition obvious applications long polymer chains problems arises computational biology context protein prediction 
sites self avoiding walk represent carbon atoms long protein chain forces carbon atoms adjacent lattice protein determine structure protein 
biologists interested generating potential protein structures likelihood order infer properties actual proteins difficult probe directly 
bibliography aldous inequalities reversible markov chains 
journal london mathematical society pp 

alm upper bounds connective constant self avoiding walks 
combinatorics probability computing 
appear 
sokal new monte carlo method self avoiding walk 
journal statistical physics pp 

bhattacharjee nagle fisher critical behaviour dimensional dimer model 
journal statistical physics pp 

blum luby rubinfeld self testing correcting applications numerical problems 
proceedings nd acm symposium theory computing pp 

bondy welsh note monomer dimer problem 
proceedings cambridge philosophical society pp 

broder hard marry random 
approximation permanent proceedings th acm symposium theory computing pp 

erratum proceedings th acm symposium theory computing pp 

ising model 
american mathematical monthly pp 

cohen de boer cell cluster theory liquid state ii 
physica xxi pp 

conway algebraic techniques enumerating self avoiding walks square lattice 
journal physics pp 

diaconis group representations probability statistics 
lecture notes monograph series vol 
institute mathematical statistics hayward california 
diaconis geometric bounds eigenvalues markov chains 
annals applied probability pp 

dyer frieze computing volume convex bodies case randomness provably helps 
probabilistic combinatorics applications proceedings ams symposia applied mathematics volume pp 

solution dimer problem hexagonal lattice boundary 
journal physics math 
gen pp 

fisher statistical mechanics dimers plane lattice 
physics review pp 

fisher stephenson statistical mechanics dimers plane lattice ii 
dimer correlations monomers 
physics review pp 

fowler statistical theory perfect solutions 
transactions society pp 

garey johnson computers intractability 
freeman san francisco 
exact series expansion study monomer dimer problem 
physics review pp 

mixtures 
clarendon press oxford 
hammersley existence theorems monte carlo methods monomer dimer problem 
research papers statistics festschrift neyman david ed john wiley new york pp 

hammersley improved lower bound multidimensional dimer problem 
proceedings cambridge philosophical society pp 

hammersley calculation lattice statistics 
proceedings computational physics conference london institute physics physical society pp 

hammersley number polygons lattice 
pp 
hammersley negative finding dimensional dimer problem 
journal mathematical physics pp 

hammersley menon lower bound monomer dimer problem 
journal institute mathematics applications pp 

hammersley morton poor man monte carlo 
journal royal statistical society pp 

hammersley welsh results rate convergence connective constant lattice 
quarterly journal mathematics oxford pp 

hara sokal new lower bounds self avoiding walk connective constant 
journal statistical physics pp 

lieb theory monomer dimer systems 
communications mathematical physics pp 

hopcroft ullman automata theory languages 
addison wesley reading ma 
jerrum dimensional monomer dimer systems computationally intractable 
journal statistical physics pp 

jerrum analysis monte carlo algorithm estimating permanent 
proceedings rd conference integer programming combinatorial optimization core louvain la neuve belgium pp 

jerrum sinclair approximating permanent 
siam journal computing pp 

jerrum sinclair polynomial time approximation algorithms ising model 
siam journal computing appear 
jerrum valiant vazirani random generation combinatorial structures uniform distribution 
theoretical computer science pp 

jerrum vazirani mildly exponential approximation algorithm permanent 
proceedings rd ieee symposium foundations computer science pp 

karmarkar karp lipton lov asz luby monte carlo algorithm estimating permanent 
preprint 
appear journal algorithms 
karp luby madras monte carlo approximation algorithms enumeration problems 
journal algorithms pp 

statistics dimers lattice number dimer arrangements quadratic lattice 
physica pp 

dimer statistics phase transitions 
journal mathematical physics pp 

graph theory crystal physics 
graph theory theoretical physics harary ed academic press london pp 

randall sinclair matchings lattice graphs 
proceedings th symposium computer science pp 

extended version appear journal statistical physics title approximating number monomer dimer coverings hyper rectangular lattice 
landau lifshitz statistical physics 
pergamon press new york 
lawler intersections random walks 
birkhauser boston 
lawler sokal bounds spectrum markov chains markov processes zation cheeger inequality 
transactions american mathematical society pp 

lengauer algorithmic research problems molecular 
proceedings nd israel symposium theory computing systems pp 

madras self avoiding walk 
birkhauser boston 
metropolis rosenbluth rosenbluth teller teller equation state calculations fast computing machines 
journal chemical physics pp 

mihail winkler number eulerian orientations graph 
proceedings rd acm siam symposium discrete algorithms pp 

minc 
addison wesley reading ma 
brien monotonicity number self avoiding walks 
journal statistical physics pp 

crystal statistics dimensional model order disorder transition 
phys 
rev pp 

randall sinclair testable algorithms self avoiding walks 
proceedings th acm siam symposium discrete algorithms pp 

rasmussen approximating permanent simple approach 
random structures algorithms pp 

roberts properties films oxygen 
proceedings royal society london pp 

ruelle statistical mechanics rigorous results 
addison wesley new york 
sinclair improved bounds mixing rates markov chains multicommodity flow 
combinatorics probability computing pp 

sinclair algorithms random generation counting markov chain approach 
birkhauser boston 
sinclair jerrum approximate counting uniform generation rapidly mixing markov chains 
information computation pp 

sokal monte carlo methods self avoiding walk 
manuscript 
sokal thomas exponential convergence equilibrium class random walk models 
journal statistical physics pp 

temperley fisher dimer problem statistical mechanics exact result 
philosophical magazine pp 

valiant complexity computing permanent 
theoretical computer science pp 


triangular ising net 
physics review pp 

welsh computational complexity classical problems statistical physics 
disorder physical systems grimmett welsh eds clarendon press oxford pp 

lattice animals rigorous results wild guesses 
disorder physical systems grimmett welsh eds clarendon press oxford pp 


