th international conference data engineering icde february orlando florida 
fast nearest neighbor search high dimensional space stefan berchtold bernhard ertl daniel keim hans peter kriegel thomas seidl institute computer science university munich 
munich germany ertl keim kriegel seidl dbs informatik uni muenchen de current address labs research research att com current address university halle keim informatik uni halle de similarity search multimedia databases requires efficient support nearest neighbor search large set high dimensional points basic operation query processing 
theoretical results show state art approaches nearest neighbor search efficient higher dimensions 
new approach precompute result nearest neighbor search corresponds computation voronoi cell data point 
second step store voronoi cells index structure efficient high dimensional data spaces 
result nearest neighbor search corresponds simple point query index structure 
technique precomputation solution space dynamic supports insertions new data points 
extensive experimental evaluation technique demonstrates high efficiency uniformly distributed real data 
obtained significant reduction search time compared nearest neighbor search tree factor 
important research issue field multimedia databases content retrieval similar multimedia objects images text videos alt fal jag mg sh 
contrast searching data relational database content retrieval requires search similar objects basic functionality database system 
approaches addressing similarity search called feature transformation transforms important properties multimedia objects high dimensional points feature vectors 
similarity search corresponds search points feature space close query point corresponds nearest neighbor search 
lot research done field nearest neighbor search high dimensional spaces ary ber hs pm 
existing approaches solving nearest neighbor problem perform search priori built index expanding neighborhood query point desired closest point reached 
theoretical results show index approaches access large portion data points higher dimensions 
searching index expanding query region general inefficient high dimensions 
way dilemma exploiting parallelism efficient nearest neighbor search ber 
suggest new solution sequential nearest neighbor search indexing solution space indexing data 
solution space may characterized complete overlap free partitioning data space cells containing exactly data point 
cell consists potential query points corresponding data point nearest neighbor 
cells correspond dimensional voronoi cells ps 
determining nearest neighbor query point equivalent determining voronoi cell query point located 
voronoi cells may complex high dimensional polyhedra require disk space stored explicitly approximate cells minimum bounding hyper rectangles store multidimensional index structure tree bkk 
nearest neighbor query simple point query processed efficiently multidimensional index 
order obtain approximation quality high dimensional cells additionally introduce new decomposition technique high dimensional spatial objects 
organized follows section introduce new solution nearest neighbor problem approximating solution space 
formally define solution space necessary cell approximations outline efficient algorithm determining high dimensional cell approximations 
section discuss problems related indexing high dimensional cell approximations introduce solution new decomposition approximations 
section experimental evaluation new approach uniformly distributed real data 
evaluation significant speedups tree tree nearest neighbor search 
approximating solution space new approach solving nearest neighbor problem solution space 
solution space means determining voronoi diagram cf 
data points database 
recall definition voronoi cells provided 
definition 
voronoi cell voronoi diagram db database points 
subset db size distance function order voronoi cell defined order voronoi diagram db defined note primarily interested nearest neighbor query point assume voronoi cells bounded data space ds 
consider bounded voronoi cells order called nn cells cf 

pi pj db xp db db diagram order nn diagram cf ps voronoi diagram nn diagram definition 
nn cell nn diagram point db distance function nn cell defined nn cell ds db xp nn diagram database points db defined nn diagram db nn cell db definition sum volumes nn cells volume data space cf 
vol nn vol ds able efficiently determine nn cells explicitly store directly find nn cell contains query point costly nearest neighbor query executed access corresponding nn cell 
general determining nn cells time consuming requires nlogn worst case ps euclidean distance function 
addition space requirements nn cells number faces nn diagram min worst case ede making impossible store explicitly 
practicable solution necessary approximations nn cells known technique successfully improving query processing context geographical databases bks 
principle approximation hyper rectangles rotated hyper rectangles spheres ellipsoids may employed 
application approximation nn cells minimum bounding hyper rectangles store multidimensional index structure tree bkk 
nearest neighbor query executed simple efficient point query index 
define approximation nn cells 
definition 
mbr approximation nn cells mbr approximation nearest neighbor cell nnc minimum bounding hyper rectangle mbr ld hd nnc li min pi nnc hi max pi nnc consider examples nn cells mbr approximations number different data distributions 
show nn diagram corresponding approximation diagram independent uniformly distributed dimensions show diagrams regular multidimensional uniform distribution show diagrams sparse distribution 
uniform distribution usually generated random number generator produce data values dimensions independently 
generation process produces data set projected dimension axes provides uniform distribution 
mean data distributed uniformly multidimensional space partitioning data space cells equal size uniform data nn cells 
uniform data nn cells 
uniform data mbr appr 
sparse data mbr appr 
sparse data nn cells nn cells mbr approximations cells contains equal number data points 
distribution fulfills requirement called multidimensional distribution 
note regular multidimensional uniform distribution corresponds best case approach sparse distribution corresponds worst case case regular multidimensional uniform distribution mbr approximations identical nn cells means approximations overlap point query index accesses page 
contrast case sparse distribution approximations identical ds means approximations completely overlap point query index accesses data pages 
consider space time complexity approximations mbr approximation nn cell requires space means need total twice size database points de approximation voronoi cell seen typical linear programming problem number linear constraints try find maximum extension nn cell directions directly correspond borders bounding box 
time needed determine approximations time linear programming runs linear constraint 
known solutions linear programming problems 
widely approach simplex method dan 
simplex method observation solution exists corner point solution space 
basic idea simplex method start valid potentially sub optimal solution move boundary polyhedra valid solutions find corner point optimal optimization function 
problem simplex method step finding valid starting point 
revised version simplex method avoids problem algorithm best ritter br 
complexity algorithm worst case number points considered determining approximation ps 
average case complexity sei 
problem linear programming algorithms usually need consider constraints resulting points database making linear programming prohibitively expensive large databases 
important observation usually small number points contributes maximum extension nn cell 
general may restrict number points obtaining correct extension nn cell 
interested approximation nn cell may omit data points contribute nn cell loosing correct approximation nn cell 
acceptable determined approximation may larger correct approximation means get false dismissals compromise correctness approach cf 
lemma 
observation optimized algorithms calculating approximations accept slightly suboptimal approximations exchange reducing number points examined linear programming considerably 
determining points linear programming index search number points close considered point 
closeness may defined multidimensional point sphere query experiments obtained heuristic value executed efficiently multidimensional index 
experiments uniformly distributed data approach provides results determined approximations close correct approximations 
real data higher variation number points resulting multidimensional point sphere query varies wide range result high clustering real data 
largely differing numbers points considered linear programming results high variance quality determined ap 
radius quality performance ratio dimension dimension dimension dimension quality performance ratio algorithms time needed determining approximations 
worst case number data points resulting point sphere query order means complexity algorithm similar complexity correct algorithm 
real data distributions developed heuristics determining relevant points 
heuristic provides results real data constant number points nearest neighbor points directions points smallest deviation orthogonal axes directions 
heuristic complexity linear programming algorithm od 
number considered points constant experiments aver age performance algorithm turned 
presents insertion algorithm including optimized algorithms determining nn cells 
name possibilities determining data points linear programming follows correct points considered point points rectangle index contains point sphere points rectangle index intersects sphere nn direction nn points directions points smallest deviation orthogonal axes show results experimental comparison 
shows performance time needed calculate approximations directly corresponds insertion time shows quality linear programming overlap approximations depending dimensionality data expected independent strategy determining points time needed compute approximations increases dimension quality approximations decreases dimension overlap approximations increases 
note accurate algorithm correct poorest performance tree insert datapoint dp dim alg set mbr mbr switch alg case point set dp break case sphere set dp break case nn direction set add dp set add dp break default set mbr dp set left mbr dp set right insert mbr insertion algorithm accurate algorithm nn direction best performance 
obviously trade index creation query execution time 
may choose spend time creating index save time executing query save time creating index spend time executing query 
note determination approximations done index creation time query execution time point query index performed 
obtain evaluation criterion takes accuracy performance account may consider quality performance ratio 
quality performance curves 
note lower dimensions sphere algorithm provides best quality performance ratio higher dimensions nn direction algorithm 
correctness approach important optimized algorithms point sphere performance overlap dimension dimension nn direction determine approximations induce false dismissals 
lemma show approximations determined algorithms may larger correct approximations implies point query index created optimized algorithms provides superset results obtained point query index created correct approximations 
lemma lemma show correctness approach 
lemma correctness optimized algorithms arbitrary point set db db holds ob db alg point sphere nn direction appr correct appr alg correct point sphere nn direction correct point sphere nn direction comparison algorithms proof 
correct approximation appr point mbr approximation results linear programming constraints 
show lemma show approximation resulting algorithms provides possibly larger mbr correct ld hd li hi appr alg ld hd li li hi hi loss generality consider arbitrary point arbitrary dimension consid eration analogously apply points dimensions 
consider simplex algorithm determine lj hj principle idea revised simplex method determine corner polyhedra valid solutions optimal optimization function 
difference correct algorithm point sphere nn direction algorithms number constraints optimized algorithms subset constraints correct algorithm 
result polyhedra valid solutions correct algorithm ph contained polyhedra valid solution optimized algorithms due main theorem linear programming theory corner points polyhedra follows dealt case static database obviously realistic real databases 
algorithms dynamic case 
dynamically update approximations nn cells affected update operation 
case insertion operation need find nn cells existing nn cells may smaller insertion 
able sphere query new point center update nn cells intersected sphere 
deletions modifications efficient algorithms dynamically update nn cells proposed roos 
dynamic algorithms calculate nn cells may applied approach obtain sufficiently efficient solutions dynamic case 
correct ph alg lj hj ph correct ph alg lj lj hj hj indexing solution space problem approach introduced far overlap approximations rapidly increases dimension correct approximations cf 

direct result increasing overlap query processing time increasing dimension 
section introduce solution problem reduces overlap decomposition technique 
concept decomposing objects improve query processing originally proposed sk improving query processing geographical databases 
decompositions proposed decomposing objects triangles trapezoids convex polyhedra combinations heterogeneous decompositions 
decompositions directly applicable high dimensional case 
going examine specific properties high dimensional nn cells properties define adequate decomposition 
recall example provided showing regular multidimensional uniform data distribution 
mentioned approach index resulting approximations optimal nn cells coincide mbrs 
consequently approach accesses data page nearest neighbor search query point located exactly candidate approximation identical corresponding voronoi cell 
unfortunately exceptions real multidimensional data correspond perfect multidimensional uniform distribution 
cases data closer high dimensional sparse distribution 
reason high dimensional space filled completely clusters occur 
indicated mbr approximations nn cells induce high degree overlap sparse data 
problem volume approximations far larger volume nn cells 
sparsely populated high dimensional space volume may high ds worst case means access database simple point query 
required decomposition minimizes volume approximations 
looking decomposition provides minimum volume possible decompositions 
formally define terms decomposition optimal decomposition 
definition 
decomposition optimal decomposition decomposition nn diagram consisting nn cells partitioning cells partitions dc 
decomposition called optimal iff minimal 
determining optimal decomposition requires examining possible decompositions prohibitively expensive 
heuristic provides results especially real high dimensional data distributions 
heuristic observations observation high dimensional data possible decompose nn cells dimensions result high number mbr approximations exponential number dimensions 
second observation obtain smallest vol vol ume decompose nn cells dimensions nn cells oblique 
algorithms possibility choose maximum shortest diagonals 
provides example show approximations nn cell cf 
decomposition dir 
oblique nn cell decompositions nn cells approximations decomposing nn cell direction cf 
direction cf 

example decomposition partitions 
decomposition oblique dimension direction provides lower volume approximations lower overlap 
idea decomposition approximations determine oblique dimensions simple linear decomposition dimension 
assume want decompose nn cells oblique dimensions loss generality assume oblique dimensions dimensions dd nn cells decomposed dimensions 
number partitions dimensions chosen depending 
dimensions dd sorted decreasing number partitions dimensions nd decreasing nd resulting total number partitions ni 
decomposition dir 
practical purposes small number index entries large 
ni assumed constant ni chosen ni chosen ni ni may equal 
formally define mbr decomposition definition 
mbr decomposition minimum bounding hyper rectangle ld hd mbr approximation nn cell decomposition nn cell defined set defined ij ij nj determined sequentially maximum values definition mbr decomposition fulfills properties decompositions defined definition 
completeness property guaranteed hd ld ld id ld id hd ld ld hd ld ij nj guaranteed defined disjoint hyper rectangles disjoint 
show correctness approach approach induce false dismissals 
correctness includes proof approximations decompositions exclude correct solution 
lemma correctness approach approach induce false dismissals arbitrary point set db db point query index containing approximations decomposed nn cells provides result set rs containing nearest neighbor nn 
nnc proof 
show correctness approach show steps induce false dismissals 
usage approximations nn cells 

usage optimized algorithms determining nn cells 

usage decomposition nn cells 
correctness step easy show result set rs point query contains correct nn cell usage approximations induce false dismissals 
correctness second step shown lemma 
correctness third step shown follows definition follows approximations decomposed nn cells index result set rs point query contains correct nn cell usage decomposition nn cells induce false dismissals 
experimental evaluation show practical relevance approach performed extensive experimental evaluation nn cell approach compared tree bkss tree bkk 
experimental results sections computed hp workstation mbytes main memory gbytes secondary storage 
programs implemented 
test data experiments real point data consisting fourier points high dimensional space synthetic data consisting uniformly distributed points high dimensional space 
block size experiments kbytes index structures allowed amount cache 
realistic evaluation large amounts data experiments 
evaluated nn cell approach synthetic databases varying dimensionality 
experiments uniformly distributed data points dimensionality 
shows total search time nn cell approach classic nn search tree tree 
expected search time increases grow total search time sec dim ing dimension 
lower dimensions total search time nn cell approach tree tree comparable higher dimensions nn cell approach faster tree tree 
show speed nn cell approach tree increasing 
high speed factors caused fact tree needs access directory data pages nn cell approach takes advantage solution space 
show detailed comparison time needed accessing pages time needed processing tree tree nn cell approach comparison tree tree nn cell approach depending dimensionality speed tree dim speed nn cell approach tree depending dimensionality queries 
turned cpu time page accesses nn cell approach better tree comparison tree cpu time better 
effect may explained fact side tree uses overlap free split strategy minimizes overlap directory reduces number page accesses 
side tree perform consuming nn query nn cell approach performs simple point query 
note contrast database operations total search time nn queries dominated number page accesses nearest neighbor algorithm requires sorting nodes min max distance nn cell approach provides better total search time tree 
page accesses cpu time sec dim dim series experiments compared nn cell approach tree tree depending size database number tuples 
show total search time depending size database varied 
nn cell approach performed significantly better tree tree shows logarithmic behavior number database tuples 
tree tree nn cell approach tree tree nn cell approach number page accesses versus cpu time total search time sec database size may argue synthetic databases uniformly distributed data realistic high dimensional space real data experiments 
access databases containing high dimensional fourier points 
tree turned consistently better tree experiments compared nn cell approach tree 
results experiments cf 
show significant improvement nn cell approach tree speed 
comparing page accesses cpu time needed fourier database cf 
revealed nn cell approach performed better categories due fact approximations nn cells turned better approximations uniformly distributed data 
experiment evaluated impact decomposing approximations cf 
section 
comparison exact approximation algorithm determining approximations correct 
measure quality approximations tree tree nn cell approach comparison nn cell approach tree tree depending size database total search time sec database size tree nn cell approach comparison nn cell approach tree real data page accesses cpu time sec decomposition average overlap approximations directly corresponds query performance 
shows results comparison clearly reveals significant improvement correct algorithm determining approximations addition increases dimensionality 
note quality improvement optimized algorithms point sphere nn direction higher 
database size database size tree nn cell approach tree nn cell approach number page accesses versus cpu time proposed new technique efficient nearest neighbor search set high dimensional points 
technique precomputation solution space arbitrary nearest neighbor search 
corresponds computation voronoi cells data points 
voronoi cells may complex going higher dimensions new algorithm approximation high dimensional voronoi cells set minimum bounding hyper rectangles 
technique precomputation solution space dynamic supports insertions new data points 
showed experimental evaluation technique efficient various kinds data clearly outperforms state art nearest neighbor overlap gorithms 
experiments obtained significant reduction search time factor 
research interests focussed application technique nearest neighbor search 
exact decomposed exact decomposed exact decomposed dimension dimension dimension alt altschul gish miller myers lipman basic local alignment search tool journal molecular biology vol 
pp 

ary arya nearest neighbor searching applications ph thesis university maryland college park md 
berchtold hm keim kriegel cost model nearest neighbor search high dimensional data spaces proc 
th acm sigact sigmod sigart symp 
principles database systems pods tucson az pp 

ber berchtold hm ller keim kriegel fast parallel similarity search multimedia databases proc 
acm sigmod int 
conf 
management data tucson az pp 

best award 
bkk berchtold keim kriegel tree index structure high dimensional data proc 
nd conf 
large data bases mumbai india pp 

bks brinkhoff kriegel schneider comparison approximations complex objects approximation query processing spatial database systems proc 
th int 
conf 
data engineering vienna austria pp 

bkss beckmann kriegel schneider seeger tree efficient robust access method points rectangles proc 
acm sig mod int 
conf 
management data atlantic city nj pp 

br best ritter linear programming 
active set analysis computer programs englewood cliffs prentice hall 
dan dantzig linear programming extensions german springer berlin 
ede edelsbrunner algorithms geometry eatcs monographs computer science springer berlin 
overlap effect decomposing nn cells overlap fal faloutsos barber flickner hafner efficient effective querying image content journal intelligent information systems vol 
pp 

hs samet ranking spatial databases proc 
th int 
symp 
large spatial databases portland pp 

jag jagadish retrieval technique similar shapes proc 
acm sigmod int 
conf 
management data pp 

kriegel horn performance object decomposition techniques spatial query processing proc 
nd symp 
large spatial databases zurich switzerland lecture notes computer science vol 
springer pp 

mg mehrotra gary feature retrieval similar shapes proc 
th int 
conf 
data engineering vienna austria pp 

pm papadopoulos manolopoulos performance nearest neighbor queries trees proc 
th international conference database theory delphi greece lncs pp 

ps preparata shamos computational geometry springer 
roussopoulos kelley vincent nearest neighbor queries proc 
acm sigmod int 
conf 
management data pp 

roos dynamic voronoi diagrams ph thesis university germany 
kuntz molecular docking shape descriptors journal computational chemistry vol 
pp 

sei seidel linear programming convex hulls easy proc 
th annual symp 
computational geometry berkeley ca pp 

sh sawhney hafner efficient color histogram indexing proc 
int 
conf 
image processing pp 

sk kriegel query processing spatial objects complexity versus redundancy proc 
rd int 
symp 
large spatial databases singapore lecture notes computer science vol 
springer pp 

