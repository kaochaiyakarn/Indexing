hybrid logics characterization interpolation complexity carlos patrick blackburn maarten marx university amsterdam universit des saarlandes university amsterdam netherlands germany netherlands carlos wins uva nl patrick coli uni sb de marx wins uva nl hybrid languages expansions propositional modal languages refer quantify worlds 
strong hybrid languages dates back pri example bs bt bt focussed constrained system called 
show detail modally natural 
studying expressivity provide model theoretic characterizations restricted notion ehrenfeucht fra ss game enriched notion bisimulation syntactic characterization terms bounded formulas 
key result emerge corresponds fragment rst order logic invariant generated submodels 
show enjoys strong interpolation provide counterexamples nite variable fragments show weak interpolation holds sublanguage 
provide complexity results fragments variants sharpen known undecidability results 
simplest form hybrid languages modal languages formulas refer worlds 
build simple hybrid language take ordinary language propositional modal logic built collection propositional variables add second type atomic formula 
new atoms called nominals typically written types atom freely combined form complex formulas usual way example formed formula 
key idea insist nominal true exactly world model 
nominal names world true 
simple idea gives rise richer logics note example previous formula valid antecedent satis ed world unique world named accessible true enables de ne classes frames ordinary modal languages ll see examples 
idea formulas terms noted arthur prior pri uenced unpublished meredith rst grasp potential way lies open 
obvious regard nominals names variables individual worlds add quanti ers 
allow expressions formed 
sentence satis ed world world accessible reach re exive world formula property exists ordinary modal languages modal languages enriched nominals 
unsurprisingly allowed quantify worlds manner straightforward de ne hybrid languages er rst order expressivity models 
early hybrid languages notably bull pt pt largely concerned systems 
idea binding variables worlds underlies current hybrid languages purposes binder arguably strong obscures locality intuition central kripke semantics 
fundamental kripke semantics relativization semantic evaluation worlds 
evaluate modal formula need specify world current world evaluation 
function modalities scan worlds accessible worlds accessible worlds short starting point step wise local exploration model 
languages allow variables bound arbitrary worlds don mesh intuition 
hybrid languages focussed language called 
extends simplest type hybrid language propositional modal logic plus nominals new mechanisms 
binds variables worlds intrinsically local way binder binds variables current world 
essence enables create name 
operator bind variables natural counterpart 
stores current world binding variable enables retrieve worlds 
precisely formula form instruction move world labeled variable evaluate 
previous concentrated relating hybrid languages bs studying axiomatically bt developing analytic proof techniques bla 
taken suggests certain sublanguages notably important systems 
purpose demonstrate detail impression justi ed 
follows 
de ning noting basic results section turn section task characterizing expressivity 
key result emerge merely local language characterizes locality 
precisely corresponds fragment rst order logic invariant generated submodels 
previous discussions stressed modally natural characterization con rms impression precise 
section discuss consequences characterization frame de nability completeness tense logic 
section show behaved way strong arrow interpolation property sublanguage weak interpolation 
section turn complexity decidability 
known undecidable satis ability problem clear characterization result known decidable 
provide complexity results fragments variants sharpen known undecidability results 
particular show satis ability problem undecidable sentences containing nominals propositional variables 
complexity undecidability proofs heavy spypoint arguments 
close discussion key open problem 
largely self contained literature hybrid languages relatively small possible give reader swift overview available 
early papers hybrid languages pt deserve widely read contain important technical ideas interesting motivation hybrid languages 
second done basic hybrid languages modal tense languages enriched nominals additional mechanisms early gg bla 
third bt bt basic interesting discussion part stronger system gor 
addition proof theoretical investigations bla sel sel 
detailed guide eld see hybrid logic home page turing wins uva nl carlos hybrid 
preliminaries section de ne syntax semantics note basic properties 
de nition language prop fp countable set propositional variables nom fi countable set nominals fx countable set world variables 
assume prop nom pairwise disjoint 
call nom set world symbols atom prop nom set atoms 
formed formulas hybrid language signature nom atom 
set formed formulas 
prop nom denote respectively set propositional variables nominals world variables occur formulas drop brackets usual way singleton set 
ip denote prop nom called language follows assume signature nom xed 
usually write propositional variables nominals world variables 
usual de ned note types atomic symbol formulas 
note syntax simply ordinary unimodal propositional modal logic extended clauses 
di erence nominals world variables simply nominals bound world variables 
fact nominals dispensed possible free world variables useful special kind world symbol accidentally bound 
de nition notions free bound world variable substitution world symbol substitutable de ned manner familiar rst order logic binding operator 
denote formula obtained replacing free instances world symbol world symbol sentence formula containing free world variables 
formula pure contains propositional variables nominal free contains nominals 
de nition semantics hybrid model triple hm non empty set binary relation prop nom pow nominals nom singleton subset 
letters models italic roman domains 
usually call elements worlds call times states accessibility relation valuation 
frame pair hm ri frame model valuation 
assignment mapping assignment de ne variant hm model assignment 
atom fg world variable 
forcing relation de ned follows atom rmm fm 
understood context simply write 
write 
write 
rst clauses essentially standard kripke forcing relation propositional modal logic di erence standard de nition semantic evaluation worlds relativize variable assignments 
note second clause covers types atom propositional variables nominals world variables model assignment world symbol nominal world variable forced unique world immediate consequence way de ned valuations assignments 
promised binds world variables world evaluation performed shifts evaluation world named just rst order logic sentence irrelevant assignment perform evaluation assignment assignments sentences relativization assignments forcing relation dropped simply write 
formula satis able model assignment world 
formula valid models 
formula local consequence set formulas nite subset valid 
formula global consequence set formulas models denote local consequence global consequence glo 
ordinary propositional modal logic local consequence strictly stronger global consequence 
ers considerable expressive power models 
example de ne operator note works name current world move accessible world name jump back modalities insist holds world named holds successors current world precede labeled world 
obvious modally natural limit expressive power nominal free sentence preserved formation point generated rooted submodels 
sentence satis ed world model form submodel mm discarding worlds reachable making nite possibly empty sequence transitions mm satis es 
key point observe subformula form world variable bound previous occurrence 
binds current world bound world submodel generated una ected restriction mm genuinely local reachable worlds relevant semantic evaluation 
section shall generalize observation merely preservation invariance show characterizes expressivity 
ers considerable expressive power respect frames 
modal logicians view modal languages tools talking frames concept frame validity 
formula valid frame hm ri valuation assignment hf 
formula valid class frames valid frame formula de nes class frames valid precisely frames de nes property frames example transitivity accessibility relation de nes class frames property 
interesting properties de nable pure nominal free sentences irre exivity asymmetry antisymmetry density transitivity right discreteness exception transitivity density properties de nable ordinary modal logic 
section shall characterize classes frames pure nominal free sentences de ne 
bt provides complete axiom system de nition axiomatization formulas metavariable world variables metavariables world symbols 
hybrid logic smallest subset containing instances propositional tautologies instances axiom schemes closed deduction rules mp 



free occurrences 

substitutable 


self dual 



self dual 


label 
nom 


swap 
scope 


back 

bridge 

paste 
sg 
paste 
sg 
axiomatization help prove strong interpolation section 
purpose derived theorems useful derivation axiomatization simple exercise see bt lemma bt lemma details 
proposition formula schemes distr belong 
distr 
ii 
nominal world variable occurring 
free variable nominal occurring 
interested axiomatization reason 
completeness result proved bt general axiomatization generate valid formulas automatically extends stronger logics 
particular add pure sentence additional axiom resulting system strongly complete respect class frames de nes 
section shall characterize completeness results covered extensions 
starting investigations nal 
de ned expansion unimodal propositional modal logic 
course equally straightforward add nominals variables multimodal language language containing indexed collection modalities interpreted separate relation language tense logic propositional modal logic enriched modality scans converse relation 
part version results go formulations essentially unchanged interesting switch richer underlying modal language especially discuss computational complexity section 
characterizing section characterize rst order fragment corresponding 
providing syntactic characterization 
particular shall rst extend standard translation st modal logic rst order logic cf 
vb 
clear range translation lies certain bounded fragment shall de ne reverse translation ht maps bounded fragment back hybrid language 
free think terms corresponding bounded fragment 
languages characterized semantically 
clear genuine hybrid modal rst order ideas combines kripke semantics idea binding variables worlds obvious ways proceed 
rst essentially rst order look weaker notion ehrenfeucht fra ss game 
second essentially modal try looking stronger notion bisimulation 
shall pursue options 
shall see yield natural notions equivalence models relating drawing syntactic characterization provide detailed picture ers 
translations focus kinds signature rst order logic equality 
modal signatures familiar modal correspondence theory vb consist binary predicate countably unary predicates constant symbols 
convenient set rst order variables disposal explicit signature just de ned hybrid signatures de nition modal signature form un rel fg vari 
hybrid signature expansion modal signature countably constant symbols hybrid signatures form un rel cons vari 
note hybrid model hm regarded rst order model domain accessibility relation interpret binary predicate unary predicates interpreted subsets assigns propositional variables constants interpreted worlds nominals name 
context determine thinking rst order hybrid models continue notation hm rst extend known standard translation 
translation st hybrid language nom rst order logic signature fp nom fx de ned mutual recursion functions st st recall means replace free instances 
st prop 
st prop 
st nom 
st nom 
st 
st 
st st 
st st 
st st st 
st st st 
st rxy st 
st st 
st st 
st st 
st st 
st st 
element domain model write st shorthand st 
translation di ers bt authors handle follows st st 
bt translation quanti ect clear translation draws attention perspective adding ect enriched modal language explicit substitution operator 
operators study cylindric algebras added cylindric modal logic ven 
link explicit substitution clear expand rst order language explicit substitution operator theory cylindric algebras adjust de nition st take advantage 
follows 
add clause grammar generating rst order language formula variables formula 
interpret follows clearly equivalent 
expansion axiomatized adding axiom schemata complete axiomatization rst order logic equality give transparent translations st st st st note theorems follow immediately st st equivalent st 
shall stick original formulation st follows 
proposition st preserves truth hybrid formula 
hybrid models assignments st 
proof 
straightforward extension induction familiar ordinary modal logic 
cases new st st 
ih st st 
argument st similar 
qed interesting question range st fact belongs bounded fragment rst order logic 
rst order signature un rel cons vari de ne bounded fragment set formulas generated grammar rtt rtx 
var var cons 
side condition generation existentially quanti ed formulas crucial prevents sentences rxx falling fragment 
sentence rxx probably simplest example rst order sentence invariant generated submodels 
fact preserved formation generated submodels true model generated submodel clearly st generates formulas bounded fragment 
translate bounded fragment back 
translation ht bounded fragment un rel cons vari hybrid language hun rel cons vari de ned follows 
var cons ht rtt ht ht ht ht 
ht ht ht 
ht ht 
construction ht hybrid formula built boolean combination formulas formulas main operator 
prove strong truth preservation result 
proposition ht preserves truth bounded formula 
rstorder model assignment ht 
proof 
proof uses fact boolean combinations formulas formula exists 
interesting case ht 
interpretation restriction variables bounded quanti cation interpretation rtm holds 
inductive hypothesis ht ht ht ht ht 
qed simple corollaries corollary bounded formula free 
models ht 
corollary rst order formula hybrid signature 
equivalent equivalent standard translation hybrid formula 
ii 
equivalent formula bounded fragment 
ective translations bounded fragment 
generated back forth systems turn problem providing semantic characterizations equivalently bounded fragment 
section adopt essentially rst order approach de ne generated back forth systems basically restricted form ehrenfeucht fra ss game link concept generated submodels 
de nition partial isomorphism hybrid models 
function subset subset called partial isomorphism bijection ii 
dom prop nom iii 
dom xy 
generated back forth systems rst order models hybrid signature 
generated back forth system non empty family nite partial isomorphisms satisfying extension rules extension forth dom xy ig back rn xy 
nominal extension forth exists fxg nominal exists fhx ig back similar condition backwards 
means generated back forth system linking contains partial isomorphism sending 
note closely de nition follows familiar rst order logic cf 
hod 
fact think system describing ehrenfeucht fra ss game sole di erence generated back forth game universal player choose moves successors worlds named nominal choice allowed full rst order game 
play restricted accessible worlds generated back forth systems linked modal notion generated submodels 
de nition generated submodel hm hybrid model named denote subset elements interpretation nominal 
submodel generated substructure domain fm named sm re exive transitive closure 
called generated submodel note ordinary non hybrid language named familiar modal notion generated submodel addition singleton set usual modal notion point generated rooted submodel 
de ne notions invariance 
rst taken vb 
rst order formula free variables signature binary relation unary predicates constants equality invariant generated submodels models generated submodel similarly say rst order formula signature invariant generated back forth systems models implies theorem rst order formula hybrid signature 
equivalent equivalent formula bounded fragment 
ii 
invariant generated submodels 
iii 
invariant generated back forth systems 
proof 
ii 
obvious 
ii 
iii 
note invariant generated submodels suppose invariant generated submodels preserved generated back forth systems 
models generated back forth system linking 
generated submodel 
invariance clearly 
rst order theory argument 
existential player winning strategy games universal player plays immediate successors points named nominal 
models generated played classic ehrenfeucht fra ss game play worlds accessible nite path root named worlds 
means winning strategy classic ehrenfeucht fra ss game contradicting claim 
iii 
fairly standard diagram chasing argument cf 
vb 
hypothesis bc bounded consequences consequences belong bounded fragment 
show bc result follows compactness 
notation interpret constants equivalently local version rst order consequence cf 

bc inconsistent done 
model bc model bounded theory 
model easily shown exist 
take saturated extensions 
create family nite functions follows bounded formulas true 
easy show generated back forth system linking start diagram chasing elementary extension invariance passing elementary submodel desired 
qed hybrid bisimulations just seen weakening notion ehrenfeucht fra ss game link bounded fragment generated submodels 
spite binding apparatus distinctly modal avor 
possible strengthen notion bisimulation standard notion equivalence models modal logic clauses characterize intrinsically modal terms 
section 
approach advantage generated back forth systems preservation results easily obtained reducts 
recall ordinary propositional modal logics bisimulations non empty binary relations linking domains models restriction worlds identical atomic information matching accessibility relations connected see vb de nition bisimulations called relations 
want extend notion need take care assignments world variables 
hybrid bisimulations simply link worlds link pairs world assignment 
start de ning bisimulations correct notion bisimulation formulas fx bisimulation 
hybrid models 
binary relation relates tuples tuples 
write tuples 
notice seen assignment 
non empty relation called bisimulation satis es properties prop prop nom 
var 
forth mm exists nn 
back similar condition 
nominal nom 

note self dual collapse back forth clauses modalities 
write exists bisimulation models 
extend notion full language need add condition 
bisimulation 
hybrid models 
bisimulation non empty family bisimulations satisfying storage rule sto 
denotes tuple obtained concatenating tuple tuple 
means exists bisimulation length remarks 
bisimulations restricted set propositional variables nominals prop nom restricting prop accordingly 
second modular de nition bisimulation lead results reducts language 
instance delete language just delete clause de nition bisimulation obtain appropriate notion 
course delete variables language don need assignment tuples anymore bisimulation just relation worlds usual 
language variables standard de nition bisimulation applies condition prop takes care nominals 
add language just add clause nominals fmg fng preservation results alternatives required proofs follow lines proofs shall prove result section 
rst important fact hybrid bisimulations preserve truth proposition hybrid models set prop nom formulas signature nom fx gi implies 
ii 
set prop nom sentences signature nom 
recall sentences choice assignment irrelevant 
proof 
straightforward inductive argument 
ii 
hybrid sentence 
contains variables renaming say fx hmi hni applications storage rule gives tuple consisting similarly sentence 
qed notion bisimulation distinct modal avor 
rst order notion hidden inside partial isomorphism 
proposition function de ned partial isomorphism fm mg fn ng 
proof 
map bijection var 
prop preserves nominals propositional variables 
see preserves accessibility relation suppose xy 
cases 
case forth exists nn 
var nf 
case 
exists assumed 


continue case 
case 
continue case 
xy implies 
direction back way 
qed note condition crucial 
store information model rm holds clear link earlier generated back forth systems theorem shouldn come surprise theorem models 
equivalent 

ii 

proof 
ii 

de ne family maps follows exists de ned proposition 
clearly connected map 
proposition maps partial isomorphisms 
show forth side nominal extension conditions similar proofs 
suppose fzg nominal de nition sto 
fz wanted extension ii 

de ne family relations tuple th power domain domain set 
easy check bisimulation 
qed possible prove direct characterization result terms invariance bisimulations diagram chasing argument 
going section shall take detour bounded fragment reach result 
possible develop pebble versions generated back forth systems notion takes exact number variables formulas account 
dicult see pebble generated back forth systems correspond bisimulations 
harvest time draw threads developed 
note consequences expressivity models 
note consequences frames tells hybrid completeness 
discuss hybrid tense logic 
expressivity models fold characterization theorem rst order formula hybrid signature equality 
equivalent equivalent standard translation formula 
ii 
invariant generated submodels 
iii 
invariant generated back forth systems 
iv 
invariant bisimulation 
equivalent formula bounded fragment rst order logic 
proof 
corollary theorem proposition theorem 
qed obvious consequences ordinary modal correspondence language 
particular consider nominal free hybrid sentences obtain fold characterization fragment rst order logic classical modal signature invariant generated submodels corollary rst order formula modal signature equality 
equivalent equivalent standard translation nominal free sentence 
ii 
invariant generated submodels standard modal sense 
iii 
invariant generated back forth systems generated forth system back forth system satisfying extension rule 
iv 
invariant bisimulation 
equivalent formula bounded fragment rst order logic constants 
frames completeness late central theme modal logic linking modal formulas properties frames investigating give rise complete axiomatizations frame classes de ne 
previous section yields characterization frame de ning abilities pure nominal free sentences 
axiomatic investigations bt bt tableaux investigations bla show perfect match de nability completeness pure nominal free sentences 
combining results obtain matching de nability completeness results wide range rst order de nable frame classes 
modal correspondence theory rst order language equality signature consisting simply binary symbol called rst order frame language 
shall call formula frame language containing exactly free variable frame condition 
class frames de ned frame condition class universal closure true call class frames 
proceeding simple observations order 
note apply standard translation st pure nominal free sentence st frame condition free variable furthermore note frame hw ri st immediate consequence de nition frame validity 
theorem axiomatization section hybrid sentence system obtained adding additional axiom 
frame condition invariant generated submodels usual modal sense bounded fragment pure nominal free sentence ht de nes frames 
ht strongly complete respect frames 
ii 
bounded fragment pure nominal free sentence de nes frames st equivalent 
strongly complete respect frames 
conversely pure nominal free sentence de nes frames st complete respect frames st 
proof 
converse condition proved bt examine direction 
item rst belongs frame language contains unary predicate symbols ht pure formula ht pure nominal free sentence clear 
corollary model ht means ht contains unary predicate symbols ht propositional variables irrelevant ht means ht de nes frames 
completeness follows arguments bt 
item ii know invariant generated submodels equivalent formula bounded fragment equivalent frame condition 
fact established modifying diagram chasing argument proof theorem 
key point observe showing bc show method fc fc frame conditions implied 
equivalent frame condition take ht 
remainder proof item qed hybrid tense logic characterization results particularly natural interpretation setting hybrid tense logic 
recall tense logic write disposal operator operator scans converse accessibility relation dual operator scans converse accessibility relation 
straightforward tense logic adding nominals natural talk time variables world variables forming language 
cope backward looking operators need slightly liberal notion generated submodel point belongs submodel temporally generated subset reachable point making nite sequence moves accessibility relation forward backward steps allowed 
characterization results proved hold notion generated submodel 
press matters little 
note nominal free sentences occurrences eliminable 
simple example consider de nition operator fy simply de nition section written tense logical notation 
observe nominal free sentence ect fy retrieving point named operator reach back point observation rst bt completely general 
long formula doesn contain nominals free time variables possible simulate zig back binding point tense operators 
precisely suppose nominal free sentence temporal depth maximal depth embedding tense operators satis ed time evaluate subformula form point note forward back steps know bound point forward back steps 
separated forward back steps 
de ne operator allows zig zag named time lying steps follows 
zz set non empty nite sequences operators length 
formula variable de ne zz nominal free sentence temporal depth eliminate occurrences follows 
subformula contains occurrences 
replace form repeating procedure starting produces equivalent nominal free sentence containing occurrences 
setting tense logic characterization results nominal free sentences go help 
pleasing result non technical reasons viewing key system language viewed marriage ideas arthur prior hans reichenbach 
captures ideas arthur prior clear invented tense logic precisely capture internal perspective time underlies temporal discourse natural language see particular pri 
perspective gets lot right misses crucial fact temporal discourse tenses referential 
tenses natural language achieve ect referring speci points time semantic distinctions natural language tenses drawn referential ects account 
importance temporal rst clear hans reichenbach modern theories tense example com adopt fundamentally stance 
clear heading seen device par excellence 
sense gives sort generalized tense enables store evaluation point making possible insist certain events happened time certain events viewed particular perspective 
precisely kind expressive power need encode reichenbach ideas 
crucially sense con ict prior tense operators 
quite reverse beautifully 
auxiliary apparatus required blend approaches result language exactly captures rst order temporal reachability 
interpolation section show behaved sense interpolation property 
interpolation studied notion 
originally considered property deductive systems proved rst order logic cra proof theoretic argument 
shall view interpolation property consequence relations prove semantic arguments done example ck 
incidentally jerry seligman announced proof theoretic proof interpolation 
details note modal logic distinguish strong arrow interpolation aip weak turnstile interpolation tip 
aip implies tip conversely 
prove aip disprove aip tip nite variable fragments earlier bisimulations enable construct straightforward counterexamples show tip holds sublanguage 
de nitions concepts aip logic arrow interpolation property aip exists formula ip ip ip 
tip logic turnstile interpolation property tip exists formula ip ip ip 
rst order logic notions equivalent modal logic case see equivalence depends compactness availability deduction theorem cf 

note meaning tip depends way de ne consequence relation section introduced consequence relations local consequence global consequence see vb mv discussion relative merits 
plausible de nitions turnstile interpolation property tip loc tip glo modal logic di erent notions interpolation related follows proposition aip tip loc equivalent 
ii 
local consequence relation compact aip implies tip glo reason take tip de ned global consequence relation 
aip tip referred strong weak interpolation properties respectively shall terminology 
turn technicalities interpolation result 
usual interpolation proofs language related issues require special care replace notion consistency de nition consistency set formulas consistent model assignment 
ner grained notion separability de nition separability sets formulas say pair ht ui separable respect exists formula 
ht ui inseparable respect separable respect ready prove main result section 
theorem arrow interpolation formulas exists formula ii 
ip ip ip 
proof 
suppose formulas interpolant prove producing model hm assignment proof uses method ck related models simultaneously built fresh constants nominals playing role constants 
assume consistent interpolant 
furthermore inseparable formulas propositional variables nominals ip ip 
hybrid language signature nom fn countably nite set new nominals 
formula de ne restricted language ip ip ip ip ng 
enumeration formulas enumeration formulas de ne sequences fn fn follows separable 
separable 
fresh nominals play role henkin witnesses rst order proofs ensure obtain models world name 
de ne 

claim ht inseparable respect ht inseparable pair respect furthermore 
resp 
maximal consistent resp 

particular 
proof claim 
proof induction separability inseparability respect mentioned 
base case 
suppose ht separable 
formula 
contain nominals say fn 
don occur 
write formula obtained replacing making complete axiomatization section 

proposition 
twice 
similarly 
proposition 
self dual formula hf gi separable contradiction 
inductive hypothesis ht inseparable pair going step step construction inseparability ht easily established 
construct model 
rst recall notion pasted maximal consistent sets mcs labeled models bt 
maximal consistent set pasted implies nominal ii 
implies nominal pasted mcs labeled nominal precisely pasted mcs labeled nominal world symbols appearing 
labeled model yielded hm 
world symbol 




propositional variable nominal 
de ne natural assignment fm mg 
construction pasted mcss labeled nominal hm labeled model obtained hm obtained 
denote 
resp 
elements resp 

claim 


ii 


equivalently 


similarly 
proof claim 
show 
case similar 
mcs self dual 
sucient show 



maximal language 
de nition 
ii 
lemma bt 


prove case formula theorem sg added new nominal follows 


claim results bt follows hybrid models satisfying truth lemma natural assignment models really assignment 
obtain 


furthermore models closely related 
claim function de ned 

bijection respects accessibility relation propositional variables nominals common language natural assignment 
proof claim 
de ned member domain claim ii fact 

uniquely de ned 
bijection nominals interpreted singletons 
proposition variables 


relation 



similar argument shows models share frame agree common language model union languages reducts 

proved theorem 
qed prove stronger result restrict free variables occurring interpolant appearing easy argument 
proof intrinsically tied number modalities language arrow interpolation holds multi modal versions modalities allowed freely interpolant 
conjecture interpolation goes interpolant modalities restricted common language 
important generalization strong interpolation holds minimal logic pure axiomatic extension 
shown pt gg bt named models validate pure axioms 
showed named models prove interpolation theorem 
construction extension obtained adding pure axioms resulting frame validate extra axioms 
view earlier characterization bounded fragment theorem frame condition bounded fragment 
theory hybrid language class frames enjoys strong interpolation aip 
result stands sharp contrast scarcity general interpolation results obtained basic modal language see example mak 
viewed delineating syntactic form interpolants modal logic follows 
modal logic basic modal language rst order de nable class frames frames 
nd interpolants modal language nd rst order interpolants interpolation theorem rst order logic standard translation 
theorem tells don move full rst order language repair modal interpolation failures frames de ned universal closure theory bounded fragment nd interpolants bounded fragment 
clear proof interpolation theorem number world variables needed bounded quantify away nominals proof claim 
restrict nite number variables arrow interpolation fails 
notion bisimulations disposal fairly straightforward provide counterexamples 
consider rst case restricted world variable 
take models formulas 
easy prove valid model having world di erent accessible worlds unique accessible world accessible worlds named nominal second accessible world named dicult see arrow turnstile interpolant 
sentence variables interpolant containing world variable 
note common empty language relation depth depth depth depth depth distance root 
furthermore true false proves interpolant variable exist 
interpolant variables exists bisimulation de ned 
incidentally formulas provide simpler counterexample strong interpolation variable fragment weak interpolant example prove failure weak case 
notice heart counterexample just counting argument reproduced nite variable fragment bigger bigger models exhibiting basic pattern 
theorem strong interpolation aip fails nite variable fragments 
complex counterexample idea set prove failure weak turnstile interpolation 
consider formulas 
clearly glo take model de ne linking new copies terminal world nite model obtained iterating operation times similarly 
globally true 
suppose interpolant variable 
glo globally true 
need stronger mere bisimulations linking want transfer global truth 
ordinary modal languages requiring total surjective take care assignments 
shall say bisimulation full pair mi exists ni mi ni vice versa 
de ne full bisimulation glo 
de ned previous case full 
glo globally true 
theorem weak interpolation tip fails nite variable fragments 
see proof theorem binder needed claim 
interpolation sublanguage 
models prove arrow interpolation fails restricted version bisimulation leaves condition 
framework de ne bisimulation 
proves arrow interpolant free variables allowed 
theorem strong interpolation aip fails 
weak interpolation holds role played implicit quanti cation de nition glo 
way looking say de nition glo implicit quanti cation global hybrid binder mentioned 
theorem sentences glo formula may contain additional free variables glo glo ii 
ip ip ip 
outline proof 
outline proof arrow interpolation modi ed obtain result 
construction pasted sets needs adjusted need ensure labeled models obtained globally true 
run formula form paste new nominal formulas want globally true 
example clause de nition read 
need show ht globally inseparable respect base case simple including new nominals fn separates ht separates hf gi new variables fx precisely free variables interpolant needed 
inductive step 
consider example case assume ht inseparable want prove ht inseparable 
suppose separates pair 
glo glo 
formula case sg glo 
furthermore new nominal de nition implies 
sg glo 
contradiction 
proof follows lines 
obtain labeled models sharing frame build model holds globally 
qed known decidable undecidable see section 
decidable system tip undecidable system aip natural ask open question decidable hybrid language extending enjoys arrow interpolation 
close section remarks beth de nability 
beth de nability property bet commonly studied interpolation interpolation considered just step proof beth property 
loosely speaking logic beth property implicit de nition explicit de nition 
precisely hybrid languages de ne de nition beth de nability hybrid logic beth de nability property formulas propositional letters free world variables nominals occur 
formula 

standard argument cra easily derive beth de nability property theorem 
theorem beth de nability property 
careful analysis weaker versions beth property carried fragments interpolation property 
complexity undecidable known bs unpublished valentin goranko proved directly bounded fragment woo sublanguage decidable easy consequence results pt gg bla 
section examine computational complexity related systems sharpen undecidability result 
study local satis ability problems formula exist model assignment world 
re ects fact place restrictions satisfying models ect measuring complexity minimal logic language working 
note don need bother variable assignments working replace world variables nominals obtaining satis able restrict attention variable free formulas 
de nitions complexity classes pspace exptime background information see pap 
language behaved sublanguage 
just seen enjoy strong interpolation weak interpolation 
simple tableaux sequent systems de ned exploiting interplay nominals see sel bla 
furthermore doesn er exciting new expressivity level models example binder de ne provide new expressivity level frames de ne properties de nable ordinary propositional modal logic including irre exivity asymmetry antisymmetry correspondences easy check standard translation 
pure formulas automatically yield complete axiomatizations frame classes de ne see bt bt bla 
reasons interested natural question ask high computational price pay bene ts 
turns polynomial extra computational costs expanding unimodal logic multimodal logic nominals free variables 
theorem satis ability problem multimodal language enriched nominals pspace complete 
lower bound follows directly pspace hardness local satis ability problem ordinary unimodal language lad matching upper bound easy obtain means model construction games abm 
language matters di erent change underlying modal logic tense logic 
know spa satis ability problem usual language tense logic pspace complete 
expanding language single nominal free variable results exptime hard satis ability problem 
happens don add needed nominal 
prove spypoint technique introduced bs 
sophisticated version technique sharpen undecidability result 
theorem satis ability problem language tense logic containing nominal exptime hard 
proof 
shall reduce exptime complete global satis ability problem ordinary unimodal languages see hm spa local satis ability problem language tense logic contains nominal 
global satis ability problem modal language formula modal language exist model words true worlds 
spypoint argument 
de ne translation function 
ordinary unimodal formulas formulas tense language contains nominal pi xed nominal translation 
clearly 
linear reduction 
claim formula globally satis able pi locally satis able 
left right direction hm ordinary kripke model 
de ne follows fig mg fig nominals ng 
hybrid model nominals including interpreted singleton set fig spypoint 
claim follows induction 
interesting step rmm mm im ih de nition pi follows pi desired 
direction pi hm hybrid model 
de ne follows fm note empty claim inductive step pi rmm rmm mm ih de nition holds pi 
pi claim 
qed matching upper bound 
fact addition just nominal language tense logic yields exptime hard satis ability problem adding nominals multiple forward backward looking modalities universal modality take higher complexity hierarchy 
established extending known results nominal propositional dynamic logic 
satis ability problem propositional dynamic logic pdl enriched nominals solvable exptime see pt 
de giacomo observes de results pdl description languages containing operator show satis ability problem nominal pdl converse programs solvable exptime 
connected frames assuming nite repertoire atomic programs universal modality de nable converse pdl 
establish upper bounds want need know access converse programs arbitrary frames stay exptime 
fact theorem satis ability problem nominal propositional dynamic logic converse programs universal modality solvable exptime 
proof 
proved abm spypoint argument 
qed corollary local satis ability problem plus universal modality exptime complete 
availability kleene star pdl establish exptime completeness transitive frames 
interestingly complexity drops back pspace considering structured classes frames linear orders transitive trees 
full discussion see abm 
sharpening undecidability rst encountered common reaction decidable plausible sort elimination argument reduce satis ability problem 
theorem tells formula bounded fragment rst order logic equivalent formula clear done 
fact undecidable sophisticated spypoint argument show stronger fragment consisting pure nominal free sentences undecidable satis ability problem 
proceed follows 
rst sketch easy undecidability proof full language 
generalizing underlying argument lead spypoint theorem undecidability result just stated 
spa shown ordinary modal global satis ability problem class class frames hw ri state successors step successors undecidable 
shall reduce problem satis ability problem 
grid conjunction formulas grid express 
suppose satis ed model frame hm ri 
exists state named spypoint 
related 
related state state reached steps reached step 
means submodel generated state reachable step 
express precisely conditions characterizing class successors get intuition note simple formula expresses successor successor 
follow pattern 
claim formula globally satis able frame grid satis able 
proof simple copy constructions proof theorem 
shall sharpen result 
analyzing undecidability proof just generalizing underlying ideas 
model certain characteristic form 
pin de nition model hm called spypoint model element spypoint srs ii 
srw wrs 
notice ii 
spypoint model generated spy point 
show easily create spypoint models 
models create variable introduced formula precisely meaning proposition hm 
submodel generated spypoint model spypoint 
ii 
de nable 
iii 
assignment 

proof 
immediate 
ii 
iii 
follow properties spypoint models 
qed spypoint models powerful encode lots information kripke models nitely propositional variables inside spypoint model 
precisely kripke model de ne notion spypoint model de nition hm kripke model domain nite set fp propositional variables 
spypoint model notation spy structure hm fsg fw pn pn ii 
iii 

fs pn set state variables 
spypoint assignment set assignment sends spypoint abbreviation pn note evaluated spypoint assignment denotation spy precisely spy encodes valuation take advantage fact 
de ne translation unimodal formulas variables fp hybrid formulas proposition kripke model unimodal formula 
spypoint assignment spy proof 
immediate fact spypoint related states domain interpretation spypoint assignment qed modify hybrid translation ht relativized version ht de nes away occurrences 
de ne ht ht replace symbols de nition indicated proposition ii iii 
crucial step fact strong encode frame conditions 
proposition hm kripke model 
formula bounded fragment signature fr spypoint assignment hm ri spy ht proof 
immediate properties ht proposition fact spypoint related states domain qed theorem spypoint theorem unimodal formula fp rst order frame condition fr bounded fragment 
equivalent 
exists kripke model hm hm ri 
ii 
pure hybrid sentence language satis able 
spy pn dis val fr spy dis ng val fr ht proof 
way written contains occurrences matter proposition occurrences term de ned 
check works claimed 
implication ii kripke model claim spy rst conjunct true spy proposition 
diamond part second conjunct satis ed spypoint assignment spypoint model pairwise disjoint spy dis propositions spy val fr 
direction proposition submodel hm generated spypoint model 
assignment dis val fr 
dis srs de ne kripke model hm fg pn fw note spy precisely spypoint assignment 
propositions fact val fr obtain hm 
qed proof claimed undecidability result straightforward 
corollary fragment consisting pure nominal free sentences undecidable satis ability problem 
proof 
reduce undecidable global satis ability problem unimodal language class just easy undecidability result 
rst order frame conditions de ning form bounded fragment 
easy check 
instance successors written 
apply spypoint theorem 
formula occurrences term de ned pure nominal free sentence result follows 
qed long sparse history hybrid languages attracted number enthusiastic advocates 
claimed hybridization natural way power expressive power modal languages impressed proof theoretical options open ease general completeness results proved 
underlying lies simple idea exploiting notion formulas terms full possible de ne systems sense combine best modal classical techniques 
believe results con rm interest hybridization 
start characterization shows relatively simple tools capable capturing rst order fragments central modal perspective invariance generated submodels mirrors key notion locality pleasing pinned simply 
furthermore results interpolation complexity tend con rm dealing natural collection ideas ideas behaved relatively weak sublanguages 
writing clear working hybrid languages involves genuine interplay modal classical methods example ehrenfeucht fra ss games bisimulations involved expressivity result interpolation proved blending modal canonical models classical henkin models 
previous writers hybrid languages emphasized see example pt natural way methods blend developments 
close appropriate emphasize remains done fact remains compared orthodox modal languages study hybrid languages infancy 
fundamental questions satisfactorily resolved close going discuss regard particularly important classes frames de nable formulas atoms world variables equivalently nominals 
sense standard translation st gives answer 
class frames de ned sentence rst order frame language 
de nable formula atoms world variables formula fragment equivalent universal closure st 
unfortunately helpful 
ideally syntactic characterization range st restricted formulas atoms world variables reverse translation earlier ht 
partial results direction 
semantic characterization 
little better introducing concept bisimulation 
models relation called bisimulation satis es conditions modal bisimulation ii 
iii 
iv 
denote 
rst order formula called invariant bisimulation models tuples theorem rst order formula invariant bisimulation equivalent standard translation formula containing variables proof 
proof follows standard modal lines 
sketch di erences due new operator variables 
preservation part suppose implies formulas inductive hypothesis 
characterization part standard diagram chasing argument 
hybrid theory 
de ne relation elements saturated extensions follows standard proof shows modal bisimulation 
check extra conditions 
holds argument 

conditions satis ed 
nishes outline proof 
qed result easy show example rxy equivalent formula free variable rxy rxz equivalent formula free variables 
tell frame de nability corollary class frames de ned sentence rst order frame language 
de nable formula atoms variables equivalent universal closure formula invariant bisimulations 
practice characterization particularly helpful 
important aspect characterization way notion bisimulation linked notion generated submodels yield natural geometric characterization de nable frame classes 
hard see de nition bisimulation invariance tells frame geometry 
clearly new ideas called 
acknowledgments authors want johan van benthem 
suggestion bounded fragment greatly improved presentation results section 
maarten marx supported project logic action 
article arose visit marx blackburn partially funded dutch research school logic program netherlands organization scienti research 
abm blackburn marx 
roadmap complexity hybrid logics 
flum rodr guez artalejo editors computer science logic number lncs pages 
springer 
proceedings th annual conference madrid september 
abm blackburn marx 
computational complexity hybrid temporal logics 
appear logic journal igpl 
bet beth 
method theory de nition 

akad 

proc 
ser 
math 
bla blackburn 
nominal tense logic 
notre dame journal formal logic 
bla blackburn 
internalizing labelled deduction 
journal logic computation 
bs blackburn seligman 
hybrid languages 
journal logic language information 
special issue decompositions rst order logic 
bs blackburn seligman 
hybrid languages 
kracht de rijke wansing zakharyaschev editors advances modal logic volume pages 
csli publications stanford university 
bt blackburn 
hybrid completeness 
logic journal igpl 
bt blackburn 
hybrid languages temporal logics full version 
technical report claus report universit des saarlandes 
www coli uni sb de cl claus 
bt blackburn 
hybrid languages temporal logics 
logic journal igpl 
bull 
approach tense logic 
theoria 
ck chang keisler 
model theory volume studies logic foundations mathematics 
north holland publishing amsterdam third edition 
com 
tense 
cambridge university press 
cra craig 
uses herbrand gentzen theorem relating model theory proof theory 
journal symbolic logic 

logical matrices amalgamation property 
studia logica xli 
de de giacomo 
decidability class knowledge representation formalisms 
phd thesis universit di roma la sapienza 
enderton 
mathematical logic 
academic press new york 
gg goranko 
modal logic names 
journal philosophical logic pages 
gor goranko 
hierarchies modal temporal logics pointers 
journal logic language information 
hm halpern moses 
guide completeness complexity modal logics knowledge belief 
arti cial intelligence 
hod hodges 
model theory 
cambridge university press cambridge 
lad ladner 
computational complexity provability systems modal propositional logic 
siam journal computing 
mak 
amalgamation interpolation normal modal logics 
studia logica 
mv marx venema 
multi dimensional modal logic 
applied logic series 
kluwer academic publishers 
pap papadimitriou 
computational complexity 
addison wesley 
pri prior 
past 
clarendon press oxford 
pt 
quanti ers combinatory pdl completeness de nability incompleteness 
fundamentals computation theory cottbus pages 
springer berlin 
pt 
essay combinatory dynamic logic 
information computation 
rei reichenbach 
elements symbolic logic 
random house new york 
sel seligman 
cut free sequent calculus elementary situated reasoning 
technical report hcrc rp hcrc edinburgh 
sel seligman 
logic correct description 
de rijke editor advances intensional logic pages 
kluwer 
spa spaan 
complexity modal logics 
phd thesis illc 
university amsterdam 
spa spaan 
complexity propositional tense logics 
diamonds defaults amsterdam pages 
kluwer acad 
publ dordrecht 

tableaux calculi hybrid logics 
murray editor conference tableaux calculi related methods tableaux saratoga springs usa volume lnai pages 
springer verlag 
vb van benthem 
modal logic classical logic 
bibliopolis 
vb van benthem 
exploring logical dynamics 
studies logic language information 
csli publications stanford 
ven venema 
modal logic quanti cation substitution 
bulletin igpl 
woo woods 
problems logic number theory connections 
phd thesis university manchester 

