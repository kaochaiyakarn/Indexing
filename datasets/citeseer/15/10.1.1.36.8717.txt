little theories william farmer joshua guttman javier thayer mitre october little theories version axiomatic method di erent portions mathematics developed various di erent formal axiomatic theories 
axiomatic theories may related inclusion theory interpretation 
argue little theories approach desirable way formalize mathematics describe imps interactive mathematical proof system supports 
argue favor implementing particular version axiomatic method mechanical theorem provers 
axiomatic method mean practice reasoning logically set sentences formal language 
set sentences called axiomatic theory 
instance peano arithmetic theory ordered eld familiar axiomatic theories 
supported mitre sponsored research program 
th international conference automated deduction saratoga springs ny usa june 
published kapur ed automated deduction cade lecture notes computer science vol 
springer verlag pp 

usage theory amounts set axioms speci ed formal language 
word theory frequently mean set sentences closed logical consequence 
usage allows speak instance di erent axiomatizations theory 
purposes convenient focus axioms express idea alternative axiomatizations saying theories consequences 
contrasting ways axiomatic method established modern mathematical practice 
refer big theory version little theories version 
big theory version select powerful highly expressive set axioms property model axioms contain objects interest 
logical derivation powerful axioms allow prove theorems objects reasoning carried single theory 
zermelo fraenkel set theory frequently mathematicians purpose 
little theories version axiomatic method number theories course developing portion mathematics 
di erent theorems proved di erent theories depending amount structure required 
instance theorem may true arbitrary topological space may hold metric space 
theorems proved particular theory logical derivation axioms available theory 
goal demonstrate usefulness little theories approach mechanized reasoning 
addition indicate imps interactive mathematical proof system supports approach 
focus logical issues related little theories approach including theory interpretations 
contrary logic theory interpretations understood version particular logic available 
interpretations ectively logical literature mathematics longer 
interpretations especially attractive 
goal imps traditional tools classical mathematical reasoning partly understood wide range potential users partly intellectual power demonstrated long period time 
little theories mathematics example utility little theories approach mathematics largely due power theory interpretations provide 
theory interpretation syntactic translation languages theories preserves theorems 
formula theorem source theory image theorem target theory 
establish translation theory interpretation show source theory axioms translated target theory theorems additional tions depend details logical context 
theory interpretations crucial ways little theories approach reuse theorems source theory target theory establish consistency source theory relative target theory 
special case establish formula independent theory may show consistent 
theory interpretation source theory target theory allows infer relation models theories 
arbitrary model interpretation tells select subdomain distinguished values furnish model partly usefulness establishing consistency independence little theories approach deeply entrenched way organizing mathematical knowledge 
instance foundations geometry hilbert wrote aims bring clearly possible signi cance di erent groups axioms scope derived individual axioms 
expresses major themes modern mathematics aims determine just mathematical statements true assumptions needed deduce 
foundations geometry illustrates axiomatic method serve organizing principle examining axiomatization euclidean geometry 
goal book study relations independence subsets axioms combination crucial theorems pascal theorem theorem 
tool hilbert considers number algebraic theories primarily theory ordered eld 
simple example theory interpretation xx certain line segments shown form ordered eld appropriately chosen operations 
particular case concerned independence proof hilbert introduces theory interpretation familiar algebraic theorems carry computations course giving geometrical proofs 
interpretation guarantees results algebraic computation sound geometrical context 
illustrates theorem reuse helpful case equations conditional equations 
cases hilbert particular model theory usual semantic sense 
cases language ambiguous appears working speci model instance reals 
explicit algebraic axioms construction relies emphasizes theory denumerable models see instance 
cases easily recast terminology unambiguously concerned theory interpretations 
little theories mechanized reasoning quite apart intellectual appeal ne grained knowledge logical power particular axioms relations little theories approach important practical advantages mechanized reasoning 
allows minimal axiomatizations speci groups theorems 
ensures maximal generality reuse results interpretation theories direct inclusion larger theories 
equipped procedures construct great majority interpretations needed interactive theorem prover er user great power applying previously proved theorems wide range new theories 
hand crafted framework little theory allows theorems written simpler forms 
cues suggesting applicability particular lemmas techniques easier identify 
establishing applicability group theorems carried encoded theory interpretation 
theory interpretation serves license authorizing repeatedly 
rst advantages discussed primarily section 
second focus section 
section discusses big theory see section mechanism imps implementing similar kind reuse 
elaborate theory interpretations hilbert see instance xx exploits sequence theory interpretations 
approach 
argue little theory approach create disadvantage may want powerful theory zf 
point cases desirable 
section substantial piece mathematics appears little theory approach example developed interactive theorem prover imps 
previous imps spite utility little theories version axiomatic method lies main path previous mechanized theorem proving 
little theories idea familiar ingredient speci cation languages probably rst introduced burstall goguen 
central tenet clear motivating idea larch 
idea ingredient logical frameworks 
logical frameworks context appears unusual guise just theories logics may combined 
clear additional generality prove bene practical may impede process users develop strong reliable semantic intuitions 
single familiar logic simple type theory suces formalize conveniently wide range problems 
supporting little theories mechanized theorem proving 
sannella burstall undertook implement ideas clear extended version lcf 
published description theory interpretation parameterized theories implemented pp 

obj incorporates translation view mechanism user responsible deciding translation fact theory interpretation obj attempt prove images source theory axioms 
obj equational logic usefulness theorem prover opinion highly restricted 
curiously larch prover lp give strong support little theories approach theory available prover time theory interpretations proofs 
gunter start implementing little theories hol 
far know imps interactive mathematical proof system rst interactive theorem prover designed start support little theories 
imps implements strong logic weak systems generally algebraic speci cation languages suited expressing proving sophisticated mathematical statements 
example simple inverse function theorem banach spaces section 
general description imps see :10.1.1.37.5713
examples imps proofs 
examples explicitly noted represent material developed imps 
concept formulation calculation inference imps performed respect formal logic version simple type theory 
logic called lutins provides strong support specifying reasoning partial total functions equipped system types subtypes 
types subtypes collectively called sorts 
treatment partial functions lutins studied treatment sorts interpretations subject 
detailed presentation syntax semantics lutins see 
language built imps signature list sort constant declarations 
theory consists language plus set axioms sentences 
theories basic units imps specifying mathematical objects concepts organizing automated deduction 
theory interpretations theorem reuse notion interpretation axiomatic theory fundamental concept mathematics logic 
mentioned notion formalized certain syntactic translations known logic theory interpretations 
intuitively theory interpretation speci es possibly ways embedding preserving theorems 
logicians theory interpretations prove metamathematical properties theories particularly consistency decidability undecidability 
classic tarski mostowski robinson example illustrates theories proved undecidable means theory interpretation 
theory interpretations include 
pronounced word french 
theory interpretations imps notion theory interpretation lutins similar standard notion rst order logic see 
lutins admits partial functions subtypes notion lutins necessarily complicated 
precise de nition lutins theory interpretation 
brief lutins translation theory theory speci ed pair functions maps sorts sorts sets unary predicates maps constants expressions satisfy certain syntactic conditions 
translation homomorphism expressions source theory expressions target theory compound expression composed logical constant subexpressions translation determines set formulas target theory called obligations includes axiom interpretation theorem lutins obligation theorem translates theorem theorem theory interpretation 
theorem reuse mathematics mathematicians commonly kind informal theory interpretation reusing theorems 
result theory group applied concrete theory eld instance observing multiplication nonzero elements structure group 
little theories version axiomatic method mathematical reasoning distributed network theories linked theory interpretations 
theory interpretations provide means transport theorem theory proved number theories 
instance theorem sequence points converges limit proved theory metric space applied sequence reals sequence points normed space 
similarly theory monoid associative operator identity taken integers additional type allows de ne iterated monoid summation operator maps sorts sets unary predicates expressions variable binders relativized 
example maps sort unary predicate sort 

facts derived theory applied large class iterated operators including normal numerical sum product operators 
interesting facts algorithms developed general framework 
useful technique interpret theory subtheories 
example similar theorems algebraic groups just di erent instantiations particular theorem group actions pp 

theorem proved theory group action includes theory group subtheory various instantiations obtained transporting appropriate interpretations 
second technique provides proofs symmetry duality 
instance duality points lines projective geometry formalized observing translation interchanges interpretation 
having done prove theorem form immediately infer dual theorem 
theorem reuse imps theory interpretations imps di erent ways theorem reuse certainly important application 
imps user build translations verify theory interpretations transport theorems desired 
development portion mathematics imps usually involve theories great theory interpretations quite simple 
building theory interpretations distracting burdensome especially midst proof 
user responsible explicitly creating theory interpretations dicult concentrate major task hand 
consequently great majority theory interpretations needed imps user built software user assistance 
addition hand crafted interpretations added user system retrieve right situations 
half dozen mechanisms imps automatically nd extend create theory interpretations 
useful kind polymorphic matching called translation matching allows inter theory matching expressions 
expression theory example done imps examples proof symmetry formalized imps interpretations 
translation matches pattern expression theory theory interpretation substitution translation matching algorithm works imps follows 
variables constants matched subexpressions yielding sort association list constant association list 
entries lists compatible constant associated distinct expressions imps try nd theory interpretation de ned sort constant association lists specify subfunctions respectively 
fails imps try build theory interpretation directly association lists 
theory interpretation obtained matches ordinary sense just substitution matches expressions 
translation matching employed kinds machinery imps theorem reuse 
example theorems generic objects sets sequences appropriate form rewrite rules imps uses translation matching automatically create theory interpretations substitutions needed apply relevant course simpli cation 
collection theorems applied conditional rewrite rules organized way imps extremely simple procedures called exact behavior elementary built particular theorem depends syntactic form theorem 
central case theorem form elementary replaces matches corresponding matches instances recognized true 
compound may constructed elementary kinds atomic small number simple combining forms 
instance repeat form takes list applies repeatedly longer applicable 
small number special atomic allow user beta reduction de nition expansion calls simpli er 
transportable elementary kind atomic built theorem 
working theory apply theorems reside outside mechanism similar elementary translation matching ordinary matching 
portuguese means chisel informal usage clever trick 
controlling theorem provers axiomatic theory natural unit organizing guiding behavior theorem prover 
section discuss ways information gathered axiomatic theory order control behavior imps 
expressing theorems simple form frequently advantage expressing facts simple form theorem prover special way course computing expressions 
instance equations unconditional rewrite rules course simpli cation 
logical framework ways little theories approach aids recasting facts simplest syntactic form 
theorem pure logic take form may written form axiomatic theory axioms include entail formulas naturally order apply theorem new theory translation possibly identity translation check translations assumptions fact satis ed 
requirement amounts proving translation interpretation 
discharging obligations done advantage approach 
interpretation treated theorem proving program data object certi ed theorems source theory may available 
similarly interpretation data object easy avoid proving conditions repeatedly theorem group related theorems applied times 
second lutins logic supports subtypes called sorts 
instance theory arithmetic natural numbers integers subtypes reals 
axiomatic theory involves subtype type replace unary predicate corresponding membership subtype 
magic way eliminate term ensure de ned value sort 
semantically similar discharging assumption theorem prover may equipped algorithms resolve questions form ectively 
imps gains considerably range algorithms sort de nedness assertions 
information extracted theorems closed particular functions 
frequently reduce assertion complicated term de ned value assertions small subterms 
turn discharged simpli er may user proof 
simpli cation decision procedures theorem provers ecient algorithms exploiting facts particular operators simplify expressions decide formulas syntactic class 
hand coded procedures call processors may far ecient applying basic inferences derive 
algorithm sound range theories long satisfy number presuppositions 
suppose number formal symbols represent operations algorithm applied 
processor generate number concrete formulas representing presuppositions manipulations perform 
instance presuppositions assert operators associative satisfy distributive property 
simpli er theory soundly call processor presuppositions theorems 
processor may installed subsets possible operations processor simplifying polynomials eld installed commutative ring unit simply supplying division operator 
alternatively properties operator may optional processor designed commutative ring may applied non commutative ring simply stipulating multiplication may commute 
code processor course written optional choices sense 
imps allows user tailor processor theory need write code 
instance theory bitstrings needed trivial instantiate existing algebraic processor provide ecient simpli cation expressions involving bitstring operations 
theory natural unit sort theorem proving aid 
relation big theory approach thought disadvantage little theories approach 
situations may want big theory zf context reason structures satisfying di erent properties 
naturally set theories treated imps 
theorems proved little axiomatic theories characterize structures 
fact sacri ce opportunity big theory connection results proved little theories approach 
instance suppose collection theorems proved theory monoids 
asserts constants identity associative 
chosen big theory de ne ternary relation monoid set object binary function condition monoid df suppose establish formula form monoid possibly relative assumptions want apply theorems assumptions structure hs represents 
context theory interpretations 
see accomplished consider syntactic translation sends domain constant operator usual notion interpretation ways expressions may involve free variables image closed expression need closed set assumptions non empty images monoid axioms may theorems properly theory interpretation call context theory interpretation relative context containing assumptions context theory interpretations imps way ordinary theory interpretations long position proof licenses assumptions case hand justify citing theorems reasoning context theory interpretations greatly extend power little theories approach 
consequence commitment little theories approach need entail ort structures zf interest 
proving consistency 
objection raised free axiomatic theories formal veri cation software hardware 
sophisticated users introduce axioms wrong inconsistent 
naturally formal method prevent user writing speci cation accurately re ect intent 
instance speci cation built means sequence de nitions xed big theory user may select wrong de nitions may de ne unsatis able predicates 
theorems truths formal system working content correspond intuitive understanding 
little theories approach prevent user doing stupid things means worse alternative 
interpretation allow assure theory consistent established theory trusted consistent 
theory interpretation conveys information 
user may conception sort structures ought satisfy interpretation gives way isolating structure satisfying structure satisfying structures look expects reason think got formulation wrong 
method means limited formal methods commonly giving relative consistency proofs standard big theories approach particularly useful theorem concerns arbitrary family structures collection xed number structures 
zf family structures simply represented set zf advantageous framework reasoning 
contrast case theorem concerns xed number structures kind arbitrary metric spaces imps provides convenient mechanism synthesizing suitable theory 
ical practice 
instance consistency generalized continuum hypothesis zf proved essentially way see instance 
case happen theory zf 
example section discuss imps proof exempli es number advantages little theories approach 
example known inverse function theorem theorem mapping banach space near identity see 
describing sophisticated network interrelated theories proof 
network theories theories constructed step step theory extension theory instantiation recommended general mathematical theories theory ring 
theory module ring 
theory metric space denoted 
theory real arithmetic formalized complete ordered eld 
theories build number theories interpretations theory real vector space obtained instantiating ring module theory eld real numbers obvious interpretation module theory theory real arithmetic 
theory normed space built extension real vector space theory adding new constant denoted 
axioms characterize constant norm 
theory interpretation denoted metric space theory normed space theory speci ed interpreting distance example done imps 
function function 
kx yk sort points sort points normed space 
de nitions constants open connected complete transported normed space theory 
theory banach space denoted formed adding axiom says propositional constant complete normed space holds 
theory theorem stated proved illustrates variety ways theories built imps 
theorem proof stating theorem preliminary de nitions 
symbols denote sort points distance function metric space theory denote sort vectors norm banach space theory partial function contraction modulus domain 

denote respectively open closed balls center radius illustrated de nitions readily transported normed space theory partial function partial function 
provided de ned 
theorem contraction domain open 
range open 
key idea proof result classical theorem analysis attributed banach theorem contraction principle contraction complete metric space unique xed point 
contraction principle proved imps theory proof similar standard textbook proof 
perspective machine aided deduction proof noteworthy reasons easy show mapping homeomorphism continuous continuous inverse 
involves reasoning various levels abstraction secondly uses widely di erent proof techniques 
speci cally proof uses de nitions properties naturally stated theory metric space time uses assorted facts real numbers 
facts convergence zero follows bernoulli inequality involve order metric algebraic structure real numbers 
pertinent facts purely algebraic nature geometric series formula 
holds provided bernoulli inequality geometric series formula turn proved induction algebraic order properties reals 
proof theorem requires lemmas lemma suppose metric space complete contraction modulus de ned 

xed point 
lemma suppose contraction modulus de ned 

proof theorem imps 
lemma stated proved follows 
technical convenience new theory constructed adding individual constants sort respectively axiom version lemma formulated statement lemma individual constants universally quanti ed variables 
derived appropriate instantiation contraction principle 
instantiation obtained transporting contraction principle interpretation interprets sort distance function restriction 
get version lemma universally quanti ed variables transported context interpretation created automatically imps 
lemma transported interpretation de ned 
lemma derived translation lemma unfolding de nition open set performing straightforward manner user directed logical reasoning 
theorem follows lemma straightforward proof theorem proved technique similar outlined picard existence theorem ordinary di erential equations see 
proof involves application contraction principle space continuous functions interval 
proof involves construction large network theories carried robert givan imps system 
mathematics complexity requires mixture strikingly di erent kinds reasoning 
instance proof contraction principle depends numerical properties reals geometric series formula induction integers properties metric space 
sequence points built applying second order iteration operator contractive mapping argument show sequence cauchy 
algebra ordering properties lemmas compute various subgoals arise 
proof illustrates wittgenstein called mathematics 
little theories provide way organizing variety implementation level conceptual level 
bird 
theory lists 
technical report prg oxford university computing laboratory 
burstall goguen 
putting theories speci cations 
proceedings fifth international joint conference arti cial intelligence pages 
burstall goguen 
semantics clear speci cation language 
advanced course software speci cations volume lecture notes computer science pages 
springerverlag 
burstall goguen 
informal speci cations clear 
boyer moore editors correctness problem computer science pages 
academic press 
foundations modern analysis 
academic press 
enderton 
mathematical logic 
academic press 
farmer 
partial functions version church simple theory types 
journal symbolic logic 
farmer 
simple type theory partial functions subtypes 
annals pure applied logic 
farmer guttman thayer 
imps system description 
kapur editor automated deduction cade volume lecture notes computer science pages 
springerverlag 
farmer guttman thayer 
imps interactive mathematical proof system 
journal automated reasoning 
farmer thayer 
computer supported proofs metric space topology 
notices american mathematical society 
garland guttag 
guide lp larch prover 
technical report mit 
available ftp larch lcs mit edu 
goguen 
principles parameterized programming 
technical report sri international 
goguen winkler 
introducing obj 
technical report sri csl sri international august 
gunter 
implementation theories hol 
third hol users meeting 
computer science department aarhus university 
guttag horning wing 
larch easy pieces 
technical report digital systems research center 
guttman 
proposed interface logic veri cation environments 
technical report mitre 
harper sannella tarlecki 
structure representation lf 
fourth annual symposium logic computer science pages 
ieee computer society 
hilbert 
foundations geometry 
open court chicago 
jacobson 
basic algebra freeman second edition 
krivine 
axiomatic set theory 
reidel dordrecht 
monk 
inference rules local contexts 
journal automated reasoning 

lattice interpretability types theories 
journal symbolic logic 
sannella burstall 
structured theories lcf 
caap trees algebra programming th colloquium volume lecture notes computer science pages 
springer verlag 
eld 
mathematical logic 
addison wesley 

interpretability elementary theories 
hintikka editors logic foundations mathematics computability theory pages 
reidel 
tarski mostowski robinson 
undecidable theories 
north holland 
van pearce 
mathematical characterization interpretation theories 
logica studia 
visser 
formalization interpretability 
studia logica 

