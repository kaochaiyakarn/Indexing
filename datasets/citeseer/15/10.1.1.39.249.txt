overview knowledge sharing reuse components ontologies problem solving methods mez rez dia technical university madrid spain dia fi upm es ontologies problem solving methods promising candidates reuse knowledge engineering 
ontologies define domain knowledge generic level problem solving methods specify generic reasoning knowledge 
type components viewed complementary entities configure new knowledge systems existing reusable components 
give overview approaches ontologies problem solving methods 
arpa knowledge sharing effort nff envisioned new way intelligent systems built 
proposed building knowledgebased systems today usually entails constructing new knowledge bases scratch 
done assembling reusable components 
systems developers need worry creating specialized knowledge reasoners new specific task system 
new system interoperate existing systems perform reasoning 
way declarative knowledge problem solving techniques reasoning services shared copyright belongs papers authors 
permission copy fee part material granted provided copies distributed direct commercial advantage 
proceedings ijcai workshop ontologies problem solving methods krr stockholm sweden august benjamins chandrasekaran gomez perez guarino uschold eds 
sunsite informatik rwth aachen de publications ceur ws vol richard benjamins swi university amsterdam netherlands richard swi psy uva nl systems 
approach facilitate building bigger better systems cheaply considerable progress developing conceptual bases needed building technology allows knowledge component reuse sharing 
far ultimate objective 
enable sharing reuse knowledge reasoning behavior domains tasks ontologies problem solving methods psms developed 
ontologies concerned static domain knowledge psms dynamic reasoning knowledge 
integration ontologies psms possible solution interaction problem bc hampered reuse eighties 
interaction problem states representing knowledge purpose solving problem strongly affected nature problem inference strategy applied problem 
ontologies psms interaction explicit notion assumptions taken consideration 
psms ontologies seen complementary reusable components construct knowledge systems reusable components 
order build full applications information knowledge systems reusable components psms ontologies required tightly integrated way 
ontologies aim capturing domain knowledge generic way provide commonly agreed understanding domain may reused shared applications groups cjb 
ontologies provide common vocabulary area define different levels formality meaning terms relations 
ontologies usually organized taxonomies typically contain modeling primitives classes relations functions axioms instances gru 
popular applications ontologies include knowledge management natural language generation enterprise modeling knowledge systems ontology brokers interoperability systems 
mez rez benjamins problem solving methods psms describe reasoning process knowledge system kbs implementation domain independent manner 
psm defines way achieve goal task 
inputs outputs may decompose task subtasks 
addition psm specifies data flow subtasks 
control knowledge determines execution order iterations subtasks psm 
sections discuss aspects ontologies problem solving methods 
mention directions area 
ontologies aims section provide answers questions ontology 
principles follow build ontology 
components ontology 
types ontologies exist 
ontologies organized libraries 
methods build ontology 
techniques appropriate step 
software tools support process building ontologies 
known ontologies 
uses ontologies 
principles select best ontology application 
answer questions section organized follows 
theoretical foundations ontological engineering field 
followed presentation existing ontologies 
second part address methodologies building ontologies 
third part tools building ontologies 
related uses ontologies applications 
theoretical foundations ontology 
word ontology taken philosophy means systematic explanation existence 
artificial intelligent field neches colleagues nff defined ontology follows ontology defines basic terms relations comprising vocabulary topic area rules combining terms relations define extensions vocabulary 
say definition tells proceed build ontology giving vague guidelines identify basic terms relations terms identify rules combine provide definitions terms relations 
note definition ontology includes terms explicitly defined terms inferred rules 
gruber definition gru famous ontology explicit specification conceptualization definition referenced literature 
borst bor slightly modify gruber definition saying ontologies defined formal specification shared conceptualization 
definitions explained studer colleagues follows conceptualization refers model phenomenon world having identified relevant concepts phenomenon 
explicit means type concepts constraints explicitly defined 
formal refers fact ontology machine readable 
shared reflects notion ontology captures consensual knowledge private individual accepted group definition gruber definitions ontology proposed literature 
guarino giaretta gg collected definitions provided corresponding syntactic semantic interpretations 
definitions ontology hierarchically structured set terms describing domain skeletal foundation knowledge base ontology provides means describing explicitly conceptualization knowledge represented knowledge base 
main section say literature provides definitions word ontology 
different definitions provide different complementary points view reality 
principles follow build ontologies 
summarize design criteria set principles proved useful development ontologies 
clarity objectivity gru means ontology provide meaning defined terms providing objective definitions natural language documentation 
completeness gru means definition expressed terms necessary sufficient conditions preferred partial definition defined necessary sufficient condition 
coherence gru permit inferences consistent definitions 
maximum monotonic extendibility gru 
means new general specialized terms included ontology way require revision existing definitions 
minimal ontological commitments gru means claims possible world modeled giving parties committed ontology freedom specialize instantiate ontology required 
ontological commitments refer agreement shared vocabulary coherent consistent manner 
guarantee consistency completeness ontology go 
mez rez benjamins ontological distinction principle bgm means classes ontology disjoint 
diversification hierarchies increase power provided multiple inheritance mechanisms 
modularity minimize coupling modules 
minimization semantic distance sibling concepts means similar concepts grouped represented primitives 
standardization names possible 
components ontologies 
knowledge ontologies formalized kinds components classes relations functions axioms instances gru 
classes ontology usually organized taxonomies 
notion ontology diluted sense taxonomies considered full ontologies 
concepts broad sense 
concept said description task function action strategy reasoning process relations represent type interaction concepts domain 
formally defined subset product sets cn 
examples binary relations include subclass connected 
functions special case relations th element relationship unique preceding elements 
formally functions defined cn cn 
examples functions mother price car calculates price second hand car depending car model manufacturing date number kilometers 
axioms model sentences true 
instances represent elements 
main components ontologies represented ontology implemented various languages highly informal semi informal semi formal rigorously formal languages usc 
types ontologies exist 
nowadays easy get information organizations ontologies www 
ontologies ontolingua ontologies ontology server ffr wordnet mil freely available internet 
ontologies cyc ontologies lg partially freely available web 
majority ontologies developed companies available 
ontology page known top agent ontology www broker helps select ontologies help select ontologies 
section seek give exhaustive typology ontologies 
presents commonly types ontologies 
knowledge representation ontologies capture representation primitives formalize knowledge knowledge representation paradigms 
representative example frame ontology gru captures representation primitives frame languages 
allows ontologies specified frame conventions 
implemented kif gf 
general common ontologies include vocabulary related things events time space causality behavior function cyc ontology lg common sense ontology provides vast amount fundamental human knowledge :10.1.1.20.8643
cyc ontology divided micro theories 
cyc ontologies implemented cycl language 
top level ontologies provide general notions terms existing ontologies related 
examples top level ontologies sowa boolean lattice sow pan gloss kl penman upper level cyc lg mah guarino top level proposal :10.1.1.20.8643
meta ontologies called generic ontologies core ontologies reusable domains 
mereology ontology bor typical example 
defines part relation properties 
relation allows express devices assembled components turn decomposed subcomponents 
www ksl stanford edu european mirror site www ksl svc lia dia fi upm es www tio darpa mil summaries html www cyc com www lcs mit edu doyle top dia fi upm es ontology mez rez benjamins domain ontologies reusable domain 
provide vocabularies concepts domain relationships activities take place domain theories elementary principles governing domain 
domain engineering ontologies eng math ontology go bor deserve special mention 
engmath ontolingua ontology developed mathematical modeling engineering 
engineering ontology modeling simulating designing physical systems 
domain enterprise modeling process enterprise ontology usc collection terms definitions relevant business enterprises 
ontologies built tove gf toronto virtual enterprise project enterprise design ontology project ontology scheduling ontology service ontology :10.1.1.44.8723
illustrative example ontologies knowledge management ka ontology knowledge annotation initiative knowledge acquisition community 
ontology built jointly distributively people different locations 
illustrative linguistic ontologies generalized upper model bmf wordnet mil sensus 
generalized upper model gum general task domain independent linguistic ontology 
portable different languages english german spanish italian gum ontology includes main linguistic concepts organized languages omits details differentiate languages 
wordnet lexical database english psycholinguistic principles 
information organized units called synsets sets synonyms interchangeable particular context represent different meanings 
sensus natural language ontology goal provide broad conceptual structure machine translation 
developed merging extracting information existing electronic resources 
task ontologies provide systematic vocabulary terms solve problems associated tasks may may domain 
include generic names generic verbs generic adjectives scheduling tasks 
www aiai ed ac uk project enterprise www utoronto ca eil www aifb uni karlsruhe de wbs broker ka html www darmstadt gmd de publish komet gen um html domain task ontologies task ontologies reusable domain domains 
method ontologies provide definitions relevant concepts relations specify reasoning process achieve particular task cjb 
application ontologies contain necessary knowledge modeling particular application 
meta ontologies domain ontologies applications ontologies capture static knowledge problem solving independent way psms ontologies task ontologies domain task ontologies concerned problem solving knowledge 
kind ontologies combined build new ontology 
trade problem kbd applied ontology field states reusable ontology usable vice versa 
thing model new ontology existing ontologies library decide knowledge representation paradigm formalize knowledge committed knowledge representation ontology 
having selected knowledge representation ontology step decide general common ontologies needed new ontology 
required new ontologies built entered library reused library 
knowledge component modeling starts 
simultaneously domain knowledge problem solving knowledge modeled 
domain knowledge modeled generic ontologies domain ontologies application domain ontologies built 
problemsolving knowledge modeled task psms ontologies domain task ontologies application domain task ontologies modeled 
method task ontologies allow assumption interaction problem solving domain ontologies explicitly stated bfs bpg fs 
methodologies building ontologies ontology building process craft engineering activity 
development team usually follows set principles design criteria phases ontology development process 
absence commonly agreed guidelines methods hinders development shared consensual ontologies teams extension ontology reuse ontologies final applications 
ontologies built small scale activities skipped 
intend build large scale ontologies guarantees correctness completeness advisable steer clear constructions follow methodological approach 
mez rez benjamins uschold methodology ug usc experience building enterprise ontology includes set ontologies enterprise modeling proposes steps identify purpose scope ontology build ontology capturing knowledge coding knowledge integrating knowledge existing ontologies evaluate ontology documentation guidelines phase 
gr fox methodology gf experience building enterprise modeling ontology framework tove project :10.1.1.44.8723
essentially involves building logical model knowledge specified ontology 
model built directly 
specifications met ontology described informally identifying set competency questions description formalized language order predicate calculus 
competency questions basis rigorous characterization knowledge ontology cover specify problem constitutes solution problem 
composition decomposition mechanism competency questions answers answer complex competency questions ontologies allowing integration ontologies 
framework gp enables construction ontologies knowledge level 
includes identification ontology development process refers tasks planning control specification knowledge acquisition conceptualization integration implementation evaluation documentation configuration management carry building ontologies life cycle evolving prototypes identifies stages ontology passes lifetime methodology specifies steps taken perform activity techniques products output evaluated 
main phase conceptualization phase 
specification conceptualization process integration completed house external ontologies 
framework partially supported software environment called ontology design environment ode 
ontologies developed ode chem environmental ontologies gpr ontology restructured version ka ontology 
methodology proposed build ontologies foundation intelligent physical agents fipa 
methodologies common start identification purpose ontology need domain knowledge acquisition 
having acquired significant amount knowledge uschold www fipa org methodology proposes coding formal language proposes expressing idea set intermediate representations ir 
ontology generated translators 
irs bridge gap hand people see domain hand languages ontologies formalized 
intermediate representations provide user friendly approach knowledge acquisition evaluation computer scientists domain experts knowledge engineers abb 
need ontology evaluation identified methodologies 
uschold methodology includes activity state carried 
gr fox propose identifying set competency questions 
ontology expressed formally compared set competency questions 
proposes evaluation activities carried entire lifetime ontology development process 
evaluation done conceptualization phase 
main point say group uses methodology exist common methodology everybody agrees 
additional research performed direction 
languages environments building ontologies commonly languages build ontologies 
basically representation systems reported formalizing ontologies frame modeling approach logic approach 
representative languages ontolingua gru cycl lg loom mac flogic klw 
ontolingua language kif frame ontology ontology building language ontology server 
ontolingua language allows ontologies built manners kif expressions exclusively frame ontology vocabulary languages time depending ontology developer preferences 
case ontolingua definition composed heading informal definition natural language formal definition written kif frame ontology vocabulary 
gfp cff application required order reason ontolingua ontologies 
cycl cyc knowledge representation language 
cycl declarative expressive language similar order predicate calculus extensions 
cycl uses form circumscription includes unique names assumption closed world assumption appropriate 
cycl inference engine perform kinds reasonings 
mez rez benjamins loom high level programming language order logic belongs kl family 
loom language provides expressive explicit declarative model specification language powerful deductive support programming paradigms knowledge base services 
flogic integration frame languages order predicate calculus 
includes objects simple complex inheritance polymorphic types query methods encapsulation 
deductive system works theory predicate calculus structural behavioral inheritance 
software tools support process building ontologies 
main tools building ontologies ontology server ffr ode tadzebao webonto dom 
ontology server best known environment building ontologies ontolingua language 
set tools services support building shared ontologies geographically distributed groups 
developed context arpa knowledge sharing effort knowledge systems laboratory stanford university 
ontology server architecture provides access library ontologies translators languages prolog corba idl clips loom ki editor create browse ontologies 
modes interaction remote collaborators able write inspect ontologies remote applications may query modify ontologies stored server internet generic frame protocol stand applications 
developed information sciences institute university south california 
consists parts ontology server uses loom knowledge representation system ontology browser server dynamically html pages including image textual documentation displays ontology hierarchy uses html forms allow user edit ontology 
translators loom ontolingua kif krss developed 
ode ontology design environment developed computer science school universidad polit cnica de madrid 
main advantage ode conceptualization module building ontologies allows develop ontology knowledge level set intermediate representations irs independent target language ontology implemented 
conceptualization complete code generated automatically ode code generators ontolingua flogic rela isi edu tional database 
non experts languages ontologies implemented specify validate ontologies environment 
tadzebao webonto complementary tools developed knowledge media institute open university 
tadzebao enables knowledge engineers hold synchronous asynchronous discussion ontologies webonto supports collaborative browsing creation editing ontologies 
applications ontologies ontologies communicate systems people organizations interoperate systems support design development knowledge general software systems usc number applications built ontologies model application knowledge small 
times ontologies built just application special consideration sharing reuse 
problems difficult reuse existing ontologies applications ontologies dispersed servers formalization differs depending server ontology stored ontologies server usually described different levels detail common format presenting relevant information ontologies users decide ontology best suits purpose 
problems probably cause relatively small number known applications 
applications ontologies proceedings workshop applications ontologies psms held conjunction ecai 
exist applications natural language ontologies 
gum natural language generation applications different languages penman komet bat techdoc ros scc abb language 
wordnet hermes hoe ontoseek 
domain enterprise modeling enterprise tool set see www aiai ed ac uk project enterprise information relevant environment built enterprise ontology 
enterprise design workbench integrated supply chain management project tove ontologies 
ontologies www brokers different domains 
ontobroker knowledge management context knowledge annotation initiative knowledge acquisition community agent selecting ontologies satisfy set constraints chemical teaching chemistry 
www aifb uni karlsruhe de wbs broker mez rez benjamins domain information systems design comet supports design software systems cosmos supports engineering negotiation 
systems give design feedback users 
esprit project modeling knowledge complex technical systems multiple role ontologies support 
semi automatic knowledge acquisition system natural language text domain ceramic materials properties production processes 
problem solving methods problem solving methods psms nowadays recognized valuable components constructing knowledgebased systems 
manifested fact notion psm leading knowledge engineering frameworks task structures cjs role limiting methods mar commonkads prot mus mike afs components expertise ste expect sg gdm vital 
psms describe reasoning process knowledge system kbs implementation domain independent manner 
psms covers different areas identification task specific psms diagnosis planning assessment store index psms libraries formalize psms issues involved reusing psms include finding right psm part job checking applicable situation hand modifying fit domain 
order reuse psms successfully real life application understand processes 
psm may characterized follows psm specifies inference steps carried achieving goal task 
psm defines control structures steps 
knowledge roles specify role domain knowledge plays inference step 
knowledge roles define domain independent generic terminology 
types roles static roles describe domain knowledge needed psm dynamic roles form input output inference steps 
psms play important role knowledge engineering knowledge acquisition 
instance efficiently achieve goals tasks application domain knowledge fs guide acquisition process domain knowledge facilitate kbs development reuse 
realized operational specification inf inf role inf role inf role uses requirements assumptions architecture psm 
discussing different approaches psms briefly general architecture psms taken bfs 
architecture psms approaches agree psm consists related parts describing psm achieve achieves needs achieve respectively referred psm competence operational specification requirements assumptions see 
competence competence psm declarative description input output behavior describes achieved psm 
operational specification operational specification psm describes reasoning process delivers specified competence required knowledge provided 
consists inference steps knowledge control flow 
inference steps specify reasoning steps accomplish competence method 
described input output relation achieved method means psm hierarchically decomposed primitive inference atomic reasoning step decomposed 
knowledge flow takes place dynamic roles stores act input output inferences 
control psm describes order execution inference steps 
control knowledge specified advance known opportunistically determined run time depending dynamic problem solving situation ben 
problem solving methods efficiently achieve goals tasks application domain knowledge fs 
play roles knowledge engineering process guiding acquisition process domain knowledge facilitating kbs development reuse 
mez rez benjamins domain knowledge psm task possible gaps may prevent psm applied context 
requirements assumptions requirements assumptions psm describe domain knowledge needed psm achieve competence 
examples requirements parametric design task include availability heuristics link violated constraints possible repair actions fixes fact preference relation describe complete ordering 
requirements describe psm expects return competence provides 
internal relationship competence operational descriptions method ensured assuming knowledge requirements satisfied operational description describes way achieve competence fs 
psm context psms realize tasks applying domain knowledge 
external context psm formed parties task realized domain knowledge applied 
want psm build knowledge system connect psm task domain knowledge 
psms generic reusable components may fit perfectly context words may gaps see 
gaps exist reasons 
directions domain knowledge task psm may different terminology domain knowledge task case renaming process bridge gap 
direction task may happen psm competence strong realize specified task 
case bridge gap task may weakened making simplifying assumptions 
domain knowledge knowledge required psm may fully domain knowledge case additional knowledge needs acquired assumed exist 
issues psm research problem solving methods play important role knowledge acquisition knowledge engineering purposes kbs construction knowledge engineering psm helpful describe process creating problem solver achieves goal particular task 
implies task decomposition approach 
kbs specification reasoning psm describe efficient reasoning process achieves goal task 
sense psm concerns product creation process related design model kbs 
cognitive modeling psm describe cognitive model human problem solving 
interesting question extent psms generate cognitively adequate explanations reasoning process knowledge system 
psm development area concerned psms constructed place 
way analyzing human problem solving behavior representing behavior computationally 
traditionally focus cognitive psychology 
way perform reverse engineering existing expert systems performed clancey cla discovered heuristic classification 
ways developing psms essentially involve creative activity methodological support exists 
decade methodologies developed support knowledge modeling development knowledge systems commonkads saa prot mus mike afs components expertise ste gdm vital 
approaches propose principled semiautomatic approaches psm development 
example start specifying global required competence problem solving method step step refine competence description operational problem solver 
approach views construction process psms specific type configuration problem applies known problem solving method solve problem modify 
coming psms thing coming correct psms psms correct provides specified competence 
formal methods applied develop correct psms pg fs 
reuse libraries psms psms successfully developed particular application worthwhile formulate psms generic level 
reusable parts psms identified stored repository library 
building new application library consulted preventing system engineer developing complete new system scratch 
generally reuse psms includes questions generic psms exist library methods mez rez benjamins organized 
psms indexed way support selection application 
support process adapting generic psm specific circumstances application 
individual psms library configured coherent problem solver 
psm libraries central importance aim reuse possible correct way 
current psm area focuses method description languages upml 
problem solving methods reside libraries annotated languages accessible people software agents 
libraries psms psms represent kind best practice kbs construction cf 
design patterns object oriented approaches ghjv 
knowledge engineers construct problem solvers scratch benefit previous successful experiences developers 
best practice components benefits reflect years experience enabling thorough validation verification components enhances quality software 
collection reasoning patterns interesting issues arise structure organize collection index components 
types psm libraries currently exist libraries psms 
aim facilitating knowledge engineering process differ various ways 
particular libraries differ dimensions generality formality granularity size 
generality dimension describes psms library developed particular task 
libraries contain psms specialized solving parts specific task diagnosis design 
task resides mainly terminology psms formulated 
examples include libraries design cha mz assessment vl diagnosis ben planning 
commonkads library viewed extensive collection task specific psms 
task independent libraries provide problem solving methods formulated task specific terminology abe 
formality dimension divides libraries informal formal implemented ones 
implemented libraries provide operational specifications psms directly executable 
formal libraries allow formal verification properties psms abe abe ba tt 
informal libraries provide structured textual representations psms 
note informal approaches psm descriptions vary just textual descriptions cha highly structured descriptions diagrams ben 
granularity dimension distinguishes libraries complex components sense psms realize complete task mz libraries fine grained psms realize small part task 
libraries contain large small building blocks built ben cha 
size dimension 
comprehensive general library commonkads library contains psms diagnosis prediction behavior assessment design planning assignment scheduling engineering modeling 
extensive library diagnosis ben contains psms realizing tasks related diagnosis 
library parametric design mz consists psms variations propose revise mar 
design library cha mentions psms 
type library determined characterization terms dimensions 
type specific role knowledge engineering process strong weak points 
general psms library reusable commitment particular tasks 
time applying psm particular application requires considerable refinement adaptation 
phenomenon known reusability usability trade kbd 
research conducted overcome dichotomy introducing adapters gradually adapt task neutral psms ones fg semi automatically constructing mappings task neutral psms domain knowledge 
libraries informal psms provide support conceptual specification phase kbs help significantly constructing reasoning part expertise model kbs swb 
psms informal relatively easy understand malleable fit particular application 
disadvantage surprisingly done arriving implemented system 
libraries formal psms particularly important psms need guaranteed properties safety critical systems nuclear power plants 
disadvantage hard understand humans bh limit expressiveness knowledge engineer 
apart possibility prove properties formal psms additional advantage mez rez benjamins ing step closer implemented system 
libraries implemented psms allow construction fully operational systems 
side coin probability operational psms exactly match requirements knowledge engineer lower 
developing kbs libraries coarse grained psms amounts selecting suitable psm adapt particular needs application mz 
advantage process quite simple involves component 
disadvantage library broad coverage application need different coarse grained psm 
alternative approach library fine grained psms combined configured reasoner manually automatically ben 
organization libraries alternatives organizing library consequences indexing psms selection 
finding best organization principle libraries issue debate 
organization principles 
researchers propose organize libraries task method decomposition structure cjs ste available libraries organized way ben bre 
organization structure task realized psms consisting primitive composite subtasks 
composite subtasks realized alternative methods principles library design principle discussed ors ors 
library organized task method principle psms indexed factors competence psms specifies psm achieve assumptions specify assumptions psm applied correctly requirements domain knowledge hy 
selection psms libraries considers competence psms selecting competences match task hand assumptions psms selecting assumptions satisfied 
libraries organized functionality psms case psms similar functionality stored 
addition functionality psms configured pre established parameters values tt 
criterion structure libraries psms assumptions specify conditions psms applied 
assumptions refer domain knowledge certain psm needs causal domain model task knowledge certain psm generates locally optimal solutions 
knowledge exist library organized principle currently performed shed light role assumptions libraries knowledge engineering bfs fb fg 
proposal organize libraries psms suite called problem types tasks purpose article tasks problem types treated synonyms bre bre 
suite describes problem types way problems depend 
solution problem forms input problem 
example output prediction task certain state form input monitoring task tries detect problems turn input diagnosis task 
turns problem dependencies recur different tasks 
principle psms stored problem type solve 
selection psms library identify problem type involved task look respective psms task 
industrial applications building reusable components academic setting thing 
doing real industrial applications 
far industrial applications built reported literature 
reports successful library diagnostic problem solving methods building knowledge system diagnosing chemical production processes sa sa 
road traffic management knowledge system mhc operational cities madrid barcelona spain 
ibm japan reports knowledge system job scheduling production processes hy 
system built domain oriented library scheduling problemsolving methods 
metrics show significant percentage existing code reused new application 
knowledge systems plant classification service support printing machines rheumatology developed reusable methods reported pup 
reviewed area ontologies st ut gp problem solving methods bf 
current state art fairly understanding ontologies 
current takes body existing starts new directions 
ontology world emphasis put integration heterogeneous ontologies characterizing brokering ontologies www 
efforts connect object oriented world databases 
ontologies clearly important large variety areas 
problem solving method world moves 
libraries methods exist mez rez benjamins efforts libraries accessible interoperable 
european ibrow project www swi psy uva nl projects ibrow home html aims building brokering service configure knowledge system reusable psms reside libraries internet 
integration ontologies psms promising new direction especially ontologies databases integrated 
psms provide reasoning services top databases lead dynamically configured active databases passive repositories static knowledge waiting queried 
relevant links extensive collection alphabetically ordered links ontologies problem solving methods including proceedings events see www cs utexas edu users related html 
homepage psm mailing list accessed www swi psy uva nl mailing lists home html 
list relevant workshops accessible www included applications ontologies problem solving methods ecai european conference ai dia fi upm es workshop ecai index html building maintaining organizational memories ecai www aifb uni karlsruhe de wbs ecai om formal ontologies information systems fois krr irst itc fois program html intelligent information integration ecai www tzi de grp ws ecai sharable reusable components knowledge systems kaw workshop knowledge acquisition modeling management ksi cpsc ucalgary ca kaw kaw kaw proc html ontological engineering aaai spring symp 
series stanford calif www aaai org symposia spring sss html problem solving methods ijcai int joint conf 
ai www aifb uni karlsruhe de wbs dfe psm main html ontological engineering ecai cs utwente nl kbs homepage html sharable reusable ontologies kaw ksi cpsc ucalgary ca kaw kaw kaw proc html sharable reusable problem solving methods kaw ksi cpsc ucalgary ca kaw kaw kaw proc html abb bateman ba fern ndez mez rez plaza sanchez 
eration reusing domain linguistic ontologies spanish text generation 
gomez perez benjamins editors proceedings workshop applications ontologies problem solving methods held conjunction ecai pages brighton uk august 
ecai 
abe 
formally specifying re usable knowledge model components 
knowledge acquisition 
abe 
formal methods knowledge engineering 
phd thesis university amsterdam amsterdam 
afs angele fensel studer 
developing knowledge systems mike 
journal automated software engineering appear 
mez rez lozano pinto 
agent ontology www broker select ontologies 
gomez perez benjamins editors proceedings workshop applications ontologies problem solving methods held conjunction ecai pages brighton uk august 
ecai 
ba benjamins 
kbs development reusable libraries case study diagnosis 
international journal human computer studies 
bat bateman 
komet penman multilingual development environment 
technical report gmd ipsi darmstadt germany 
benjamins van heijst 
reusability usability tradeoff problem solving methods 
gaines musen editors proceedings th banff knowledge acquisition knowledge systems workshop pages alberta canada 
publications university calgary 
bc bylander chandrasekaran 
generic tasks knowledge reasoning right level abstraction knowledge acquisition 
gaines editors knowledge acquisition knowledge systems volume pages 
academic press london 
mez rez benjamins ben benjamins 
problem solving methods diagnosis 
phd thesis university amsterdam amsterdam netherlands 
ben benjamins 
problem solving methods diagnosis role knowledge acquisition 
international journal expert systems research applications 
bf benjamins fensel 
editorial problem solving methods 
international journal human computer studies october 
special issue problem solving methods 
benjamins fensel decker gomez perez 
ka building ontologies internet mid term report 
international journal human computer studies page press 
bl zquez fern ndez garc mez rez 
building ontologies knowledge level ontology design environment 
proceedings eleventh workshop knowledge acquisition modeling management kaw banff canada 
bfs benjamins fensel 
assumptions problem solving methods role knowledge engineering 
wahlster editor proc 
ecai pages 
wiley sons 
bgm borgo guarino masolo 
stratified ontologies case physical objects 
proceedings workshop ontological engineering held conjunction ecai pages budapest august 
ecai 
bh bowen hinchey 
commands formal methods 
ieee computer 
barros nunes de hendler benjamins 
par kap knowledge acquisition tool building practical planning systems 
pollack editor proc 
th ijcai pages japan 
international joint conference artificial intelligence morgan kaufmann publishers published proceedings ninth dutch conference artificial intelligence van daelemans eds university antwerp belgium pages 
bateman kasper moore whitney 
general organization knowledge natural language processing penman upper model 
technical report usc isi marina del rey ca usa 

building reusing ontologies electrical network applications 
proceedings th ecai pages 
bmf bateman magnini 
generalized upper model knowledge bare organization 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam nl 
bor borst 
construction engineering ontologies 
phd thesis university twente enschede 
bpg benjamins 
assumptions problem solving methods 
shadbolt hara schreiber editors lecture notes artificial intelligence th european knowledge acquisition workshop ekaw pages berlin 
springer verlag 
bre breuker 
components problem solving types problems 
steels schreiber van de velde editors lecture notes artificial intelligence th european knowledge acquisition workshop ekaw pages berlin germany 
springer verlag 
bre breuker 
suite problem types 
breuker van de velde editors expertise modeling pages 
ios press amsterdam netherlands 
barros nunes de valente benjamins 
modeling planning tasks 
third international conference artificial intelligence planning systems aips pages 
american association artificial intelligence aaai 
breuker van de velde editors 
commonkads library expertise modeling 
ios press amsterdam netherlands 
cff chaudhri farquhar fikes karp rice 
generic frame protocol 
technical report stanford 
cha chandrasekaran 
design problem solving task analysis 
ai magazine 
cjb chandrasekaran josephson benjamins 
ontologies 
need 
ieee intelligent systems applications 
special issue ontologies 
cjs chandrasekaran johnson smith 
task structure analysis knowledge modeling 
communications acm 
cla clancey 
heuristic classification 
artificial intelligence 
domingue motta watt 
emerging vital workbench 
editor ekaw knowledge acquisition knowledge systems 
lecture notes artificial intelligence lncs berlin germany 
springer verlag 
mez rez benjamins dom domingue 
tadzebao webonto discussing browsing editing ontologies web 
proceedings eleventh workshop knowledge acquisition modeling management kaw banff canada 
fb fensel benjamins 
role assumptions knowledge engineering 
international journal intelligent systems 
fensel benjamins motta wielinga 
upml framework knowledge system reuse 
proceedings th international joint conference ai ijcai page appear sweden 
fensel decker erdmann studer 
ontobroker high idea 
proceedings th international flairs conference flairs island florida 
ffr farquhar fikes rice 
ontolingua server tool collaborative ontology construction 
international journal human computer studies june 
fg fensel 
specifying knowledge systems reusable components 
proceedings th int 
conference software engineering knowledge engineering pages madrid 
fernandez gomez perez alejandro 
ontology tasks methods 
ieee intelligent systems applications january february 
fs fensel sch 
kiv specify verify systems 
proc 
th ieee international conference automated software engineering asec 
ieee 
fs fensel 
essence problem solving methods making assumptions gain efficiency 

frohlich van de 
multiple ontologies framework natural language generation 
gomez perez benjamins editors proceedings workshop applications ontologies problem solving methods held conjunction ecai pages brighton uk august 
ecai 
gf genesereth fikes 
knowledge interchange format version manual 
technical report logic computer science dept stanford university 
gf gr fox :10.1.1.44.8723
methodology design evaluation ontologies 
proceedings workshop basic ontological issues knowledge sharing held conjunction ijcai montreal canada 
gg guarino giaretta 
ontologies knowledge bases terminological clarification 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam nl 
gennari grosso musen 
method description language initial ontology examples 
gaines musen editors proceedings th banff workshop knowledge acquisition modeling management kaw pages share share alberta canada 
publications university calgary 
ghjv gamma helm johnson vlissides 
design patterns elements reusable object oriented software 
addison wesley 
guarino masolo 
ontoseek large linguistic ontologies accessing online yellow pages product catalogs 
ieee intelligent systems applications page appear 
go gruber olsen 
ontology engineering mathematics 
technical report knowledge systems laboratory stanford university ca 
gp guarino poli 
role ontology information technology 
international journal human computer studies 
special issue ontology 
gp mez rez 
knowledge sharing reuse 
liebowitz editor handbook applied expert systems 
crc 
gpr gomez perez rojas 
ontological reengineering reuse 
fensel studer editors proceedings ekaw page appear 
springer verlag 
gru gruber 
translation approach portable ontology specifications 
knowledge acquisition 
gru gruber 
principles design ontologies knowledge sharing 
international journal human computer studies 
gennari tu musen 
mapping domains methods support reuse 
international journal human computer studies 
guarino :10.1.1.20.8643
ontological principles designing upper level lexical resources 
proceedings international conference language resources evaluation pages granada 
hoe 
spotting ontological spectrum analysis retrieved documents 
gomez perez benjamins editors mez rez benjamins proceedings workshop applications ontologies problem solving methods held conjunction ecai pages brighton uk august 
ecai 
hy hori yoshida 
domain oriented library scheduling methods design principal reallife application 
international journal human computer studies 
special issue problem solving methods 
kbd klinker marques mcdermott 
usable reusable programming constructs 
knowledge acquisition 
kl knight luk 
building large knowledge base machine translation 
aaai 
klw kifer lausen wu 
logical foundations object oriented frame languages 
journal acm 
lg lenat guha 
building large knowledge systems 
representation inference cyc project 
addison wesley reading massachusetts 
mac macgregor 
inside loom classifier 
sigart bulletin june 
mah mahesh 
ontology development machine translation ideology methodology 
technical report computer research laboratory new mexico state university 
mar marcus editor 
automating knowledge acquisition expert systems 
kluwer boston 
mar marcus 
salt knowledge acquisition tool propose revise systems 
marcus editor automating knowledge acquisition expert systems pages 
kluwer boston 
mhc molina hern ndez 
structure problem solving methods real time decision support traffic control 
international journal human computer studies 
special issue problem solving methods 
mil miller 
wordnet online lexical database 
international journal lexicography 
mus musen 
overview knowledge acquisition 
david krivine simmons editors second generation expert systems 
springer verlag 
mizoguchi ikeda 
task ontology reuse problem solving knowledge 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam nl 
mz motta zdrahal 
library problemsolving components integration search paradigm task method ontologies 
international journal human computer studies 
special issue problem solving methods 
nff neches fikes finin gruber senator swartout 
enabling technology knowledge sharing 
ai magazine 
ors rn 
knowledge modelling libraries task decomposition methods 
phd thesis swedish institute computer science 
ors rn 
principles libraries task decomposition methods case study 
shadbolt hara schreiber editors lecture notes artificial intelligence th european knowledge acquisition workshop ekaw pages 
springer verlag 
puerta tu musen 
multiple method shell automatic generation knowledge acquisition tools 
knowledge acquisition 
pg 
supporting organization problem solving methods libraries formal methods 
international journal human computer studies 
special issue problem solving methods 
pup 
knowledge reuse diagnostic problem solving methods shell kit 
international journal human computer studies 
special issue problem solving methods 
ros rosner 
generating multilingual documents knowledge base techdoc project 
technical report ulm ulm germany 
sa 

applying library problem solving methods real life task 
international journal human computer studies may 
sa 

preserving conceptual structures design implementation industrial 
international journal human computer studies 
special issue problem solving methods 
saa th 
schreiber akkermans de shadbolt van de velde wielinga 
engineering managing knowledge commonkads methodology 
mit press 
studer benjamins fensel 
knowledge engineering principles methods 
data knowledge engineering 
scc stock carenini cecconi franconi magnini 
mez rez benjamins enjoying combination natural language processing hypermedia information exploration 
mark maybury editor intelligent multimedia interfaces chapter pages 
mit press 
sg swartout gil 
expect explicit representations flexible acquisition 
proceedings ninth knowledge acquisition knowledge systems workshop 
sow sowa 
knowledge representation logical philosophical computational foundations 
book draft 
swartout patil knight russ 
distributed large scale ontologies 
spring symposium series ontological engineering pages stanford 
aaai press 
st swartout tate 
coming terms ontologies 
ieee intelligent systems applications 
special issue ontologies 
ste steels 
components expertise 
ai magazine summer 
ste steels 
componential framework role reusability 
jean marc david jean paul krivine reid simmons editors second generation expert systems pages 
springer verlag berlin heidelberg germany 
swb th 
schreiber wielinga breuker editors 
kads principled approach knowledge system development volume knowledge systems book series 
academic press london 
th 
schreiber wielinga de akkermans van de velde 
commonkads comprehensive methodology kbs development 
ieee expert december 
th 
schreiber wielinga 
view word 
ijcai workshop basic ontological issues knowledge sharing 
tt 
automated configuration problem solving methods diagnosis 
phd thesis university amsterdam amsterdam netherlands 
van harmelen th 
schreiber wielinga 
construction problem solving methods parametric design 
international journal human computer studies 
special issue problem solving methods 
van heijst wielinga 
knowledge acquisition support generalised directive models 
jean marc david jean paul krivine reid simmons editors second generation expert systems pages 
springer verlag berlin heidelberg germany 
ug uschold gruninger 
ontologies principles methods applications 
knowledge engineering review 
usc uschold 
building ontologies unified methodology 
expert systems 
ut uschold tate 
special issue ontologies 
knowledge engineering review 
van de vet 
mars 
ontology ceramic materials 
mars editor working papers european conference artificial intelligence ecai workshop implemented ontologies pages amsterdam 

vl valente 
organization guidance library assessment models 
proceedings seventh european knowledge acquisition workshop ekaw lecture notes artificial intelligence lncs pages 
van heijst schreiber wielinga 
explicit ontologies kbs development 
international journal human computer studies 
wielinga akkermans th 
schreiber 
competence theory approach problem solving method construction 
international journal human computer studies 
special issue problem solving methods 
mark kerber 
ontological commitments domain specific architectures experience comet cosmos 
mars editor large knowledge bases knowledge building knowledge sharing pages 
ios press amsterdam nl 
mez rez benjamins 
