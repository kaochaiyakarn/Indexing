constraint model relative quantitative orientation points fachbereich informatik universit hamburg vogt hamburg germany informatik uni hamburg de models qualitative spatial reasoning qsr built distinctions necessary belief partition universe values nite number regions elements lying region qualitatively equal indistinguishable 
purpose tackle foundational arguments qsr strongly believe believe application domains need representational model partition universe values ne grained possible say quantitative model 
investigate model constraint model ternary relations triples points relation model describes relative quantitative orientation arguments 
contrary qualitative models reasoning task involving case ternary relations operations converse rotation intersection composition reduced mainly table look ups reasoning process quantitative system committed ective procedures dealing arithmetic operations adding real numbers order compute algebraic operations applied relations model 
deal detail problem providing model ective methods computing operations applied relations 
system implementable constraint system expressive combined existing qualitative orientation systems freksa double cross calculus argue combining qualitative quantitative knowledge looked answer refer qualitative quantitative dilemma similar authors refer context related issues representation time space niteness density dilemma 
supported spatial inference project dfg priority program spatial cognition fr 
key words quantitative spatial reasoning constraint satisfaction knowledge representation robotics 
qualitative spatial reasoning qsr particularly constraint qsr established research area arti cial intelligence ai community 
application domains cover route description robot navigation reasoning shape tackle applications models built far dealing aspects space topology orientation distance see cohn survey article qsr :10.1.1.30.5832
tasks robot navigation instance need deal quantitative knowledge landmark degrees left landmark 
models space dealing quantitative knowledge far know 
relative versus absolute localisation 
dimensional space points localise third point relative localisation means absolute system parent object may instance speaker location object primary object 
localisation relative consists describing compares observer placed relative localisation considering relative orientation instance angular distance observer placed 
words angle determined directed straight lines ab ac 
quantitative versus qualitative orientation 
qsr models particularly qsr models orientations see partition universe values universe positions nite number equivalence classes qualitatively equal values distinction values lying equivalence class 
reason applications ones interest qsr community distinctions introduced necessary model particular aspect domain respect task hand argued cohn freksa :10.1.1.30.5832
partitioning nite universe nite number equivalence classes related habel instance refers niteness density dilemma 
illustrate consider double cross calculus relative orientation de ned freksa developed zimmermann freksa 
calculus contains atomic relations correspond regions speci partition plane determined parent object say object say 
partition 
left straight right dichotomy determined observer placed parent object looking direction object front neutral back back neutral front right left straight partition universe positions double cross calculus 

front neutral back dichotomy determined observer 
similar front neutral back dichotomy obtained swap roles parent object object 
combining dichotomies leads partition universe positions calculus 
reasoning constraint qualitative model done symbolic way need go details arithmetic operations adding real numbers needed instance computing composition constraints framework 
model allen known algebra time intervals uses converse table composition table store result applying operations converse composition atomic relations set theoretic operations compute tables converse composition general relations model 
property simplifying reasoning task qualitative spatial reasoning attractive especially task hand require quantitative knowledge 
de ning qsr model important keep mind number cognitive adequacy criteria 
reason model qualitative distinctions represented world 
ideally model partition universe values values lying equivalence class values system distinguish correspond situations represented world distinguished need case instance human perception system distinction simply task hand need temporal constraint satisfaction problems 
distinction 
calculus relative orientation mentioned built certain cognitive adequacy criteria instance human perception system judging object left right front object 
slows bit attractiveness qualitative models restrict speci category tasks case group tasks category requirements terms distinctions need summing requirements groups category lead large number distinctions need model style algebra la allen huge number atomic relations 
addition possibility consider large partition universe qualitative model distinctions captured partition world xed time model built 
say way model built cognitive adequacy criteria su ers having ability re ne discrete structures necessary 
task needs distinction captured nite xed partition model get trouble see forbus nielsen faltings poverty conjecture 
solution solution 
de ne model ne grained possible quantitative model 
disadvantage having quantitative model deals arithmetic operations adding real numbers compensated universality model representation world distinguishes situations distinct represented world matter represented world important distinguish situations 
words quantitative model worry distinctions 
organised follows 
section detail quantitative csp model extends combined calculus 
section devoted spatial csps constraints relations model triples variables variables turn range set points dimensional space 
section discuss issue combining qualitative quantitative knowledge argue looked solution refer qualitative quantitative dilemma 
nish summary discussion 
csp model model expresses ternary relations triples points dimensional space 
refer rst argument relation parent object rst object come existence second object object parent object object angle determined directed lines corresponding move describing surrounding world third primary referred object object described parent object relative object 
relation model represents relative quantitative angular distance primary object object viewed parent object describes angular distance roles parent object object swapped 
case binary csps operations relations needed unary converse binary intersection composition 
relations model ternary additional operation needs introduced rotation operation unary gives new relation arguments rotated position left 
presenting detail model provide needed background 
background angles mathematically angle represented element set fx ir stands set real numbers zz set integers 
assumption angle represented unique representative set 
convention 
notation represents subset 
notations de ned similar way 
convention angle determined directed lines denoted corresponding move see 
addition standard addition modulo mod angles triangle verify property sum equals 
special case general case illustration types simple relations model left right relations respectively 
simple relation holds triple points con guration points shown corresponding illustration 
relations model explicitly stated relation considered ternary 
model contains simple relations general relations general relation union simple relations 
simple relations obtained considering special case corresponding parent object object rst arguments equal general case corresponding arguments special case equality rst arguments leads relations corresponding respectively primary object third argument equal distinct parent object de ned follows general case disequality rst arguments leads types simple constraints correspond primary object equal parent object primary object equal object primary object di erent parent object object rst subcases lead simple relations de ned follows subcase corresponds arguments pairwise distinct 
need describe orientation directed line xz relative directed line xy orientation directed line yz relative directed line yx words need provide information angles xy xz 
corresponds simple relation convex subsets de ned follows xy xz illustrates types simple relations model 
de nition general relation general relation nite set simple relations 
interpretation relation say follows universe ternary relation notations denote holds triple universal relation relation holds triple points dimensional space examples provide examples illustrating expressive power model 
example express triple points points equal simple relations general case points points pairwise distinct possible con gurations back pairwise distinct colinear back relative observer placed looking direction pairwise distinct colinear front pairwise distinct colinear front relative observer placed looking direction relations back front illustrated equivalent relations back front points left right back front 
fz fz fz fz fz fz fz fz fz fz fz fz fz fz fz representation model atomic relations calculus 
instance back clearly angles xy xz equal respectively 
explains equivalence relations back example double cross calculus refer illustrates partition plane determined distinct points double cross calculus 
region gure corresponds atomic relation say fz calculus 
region consists points fz 
atomic relation fz simple relation fz model equivalent fz fz 
fz provides corresponding fz notice fz fz fz correspond respectively relations back front previous example 
example purely quantitative relations purely quantitative relations mean relations expressed qualitative relations relations qualitative double cross calculus 
provides examples relations example dashed area represents set points illustrated relation holds triple 
part gure represents relation 
part represents relation examples purely quantitative relations model 

part represents relation 
part represents disjunctive relation fg part example value dashed area angle xy xz belongs angle belongs 
furthermore set strict subset set equivalent strict 
say simple relation minimal simple relation minimal simple relation equivalent example combining qualitative purely quantitative relations consider robots moving landmark environment denote landmark robots equipped cameras illustration example 
allowing situate relative environment relative landmark 
landmark appears robot left robot see words left directed line joining represent situation left 
relation left disjunction atomic relations fz fz fz fz fz double cross calculus see left fz fz fz fz left relation translates model follows 
robot appears robot cone shaped area bisected see words robots verify 
robot appears robot cone shaped area bisected landmark see 
robot appears robot situated relative cone shaped area depicted 
robot appears human observer placed cone shaped area bisected robot see 
combining situations depicted get situation 
operations model rst need introduce region relation 
de nition region relation points dimensional space relation 
region plane determined points relation denoted reg de ned follows reg relation convex reg reg convex region ir pre convex reg topological closure reg convex region ir de nition operations relations model intersection composition converse rotation de ned follows sg sg rg rg terms expressiveness said converse rotation relation record information 
binary relations converse operation sucient possible ordered pairs involving objects say converse operation allows going pair 
ternary relations converse operation longer sucient altogether possible ordered triples involving objects say 
converse operation allows going ordered triple ordered triple allow going ordered triples 
addition rotation operation move converse rotation rotation 
expressions full parentheses unary operators computed rst followed composition intersection order 
problem computing operation problem computing converse rotation relation composition relations central 
qualitative model see problem solved providing tables recording results applying operations atomic relations applying operations general relations reduced matter look ups tables arithmetic operations adding real numbers needed 
quantitative model similar tables longer sucient niteness number possible relations rule procedure facing computation arithmetic operations adding real numbers needed 
method allowing computation operation applied general relations model need terminology 
left simple relation simple relation form 
left simple relation say veri es property triple points left directed line xy 
similar way de ne right simple relation simple relation form 
straightforward relation model written union relations set back lsr rsr back front relations respectively see example lsr set left simple relations rsr set right simple relations 
notice relation pre convex relations convex 
show compute di erent operations applied relations method compute operations applied general relations say model 
decompose unions relations possible 
rest method notice general provide method computing di erent operations applied relations conv conv set convex simple relations model 
method general presentation easy follow method considers subset conv expected easy follow especially concepts left colinear right humans generally familiar 
problem open closed intervals relation lsr simple relation form forms similar way forms 
representing bracket rue parenthesis alse similar way representing respectively 
consider usual addition sets de ned follows fc consider convex subsets say ft fg addition simple formula logical minimality condition left simple relation left simple constraint form 
proceed enumerating possible cases 
condition case replace 
see 

condition case replace 
see 

condition case replace 
see 
similar method intervals addition kautz ladkin 
problem open closed intervals 

condition case replace 
see 
minimality condition right simple relation done minimality condition left simple relation get minimality condition right simple relation 
right simple relation relation left simple relation 
computing converse rotation relation simple relations model nite de ne extension respective de nitions intension follows ir ag ir ag ir ag ir bg ir ab ac ba bc tg start converse rotation simple relations set back represents qualitative part model relatively easy task 
deal dicult case rotation converse simple relations lsr rsr 
back back front front front back relation back converse rotation 
get equivalent ag 
ag ag 
cg 
get bg 
back ac ab ca cb 
conjunction ac ab ca cb equivalent conjunction ab ac ba bc 
back ab ac ba bc back 

ac ab ca cb 
conjunction ac ab ca cb equivalent conjunction ab ac ba bc 
ab ac ba bc front 

converse operation involutive front 
rotation relations back computed similar way leave task interested reader 
table summarises situation 
focus attention simple relations lsr rsr 
start simple relations lsr show computing converse rotation simple relation rsr transformed problem computing converse rotation relation lsr 
case left simple relations 
left simple relation 
triple points see illustration xy xz de nition needed done reg nd hand variations angles xz xy zx zy get hand variations angles zy zx derive variations determined xz xy derive directly xy xz xz xy similar way know variation zx zy derive variation zy zx zy zx zx zy 
lower bound upper bound zx zy get respectively upper bound lower bound zy zx 
lower bound zx zy upper bound zy zx need consider separately case reg unbounded case bounded case reg unbounded refer illustration supposition minimality possible case limit zx zy tends nitely far limit positive neighbourhood 
corresponding upper bound zy zx left neighbourhood 
case reg bounded 
case situation looks illustration 
lower bound reached coincides fact sum angles triangle lower bound 
corresponding upper bound zy zx 
upper bound zx zy reached xy xz coincides illustrations zx zy equal 
corresponding lower bound zy zx 
summarise lsr tables hr hr unbounded ir bounded ir ir case right simple relations 
computing converse rotation right simple relation 
rsr seen rsr lsr 
de nition equivalences get left simple relation procedure just described compute computing composition relations simple relations model con guration points hold 
speci relation infer triple 
words composition triples share points need deal cases case con guration necessary sucient condition nsc conjunction hold case con guration nsc verify con guration points conjunction hold case composition empty relation 
dealing detail cases show theorem theorem proof 
sg case 
get get ag 
get get ag 
get theorem get 
get get ag case 
get get ag 
get get ag 
get get ad ac da dc ag 
get theorem get 
get get bg composition simple relations left table case right table case missing entry marked corresponds composition dealt separately 

get get ad ac da dc ab ac ba bc ab ac ba bc tg 
get ab ad ba bd get ag 
get ab ad ba bd get ab ac ba bc ab ac ba bc tg situation composition dealt separately summarised left table case right table case tables entry row column relation consisting composition leftmost element row top element column 
rest presentation left simple relation written right simple relation write implicitly say similar argument applies 
coming back composition remaining case corresponds general case 
split simple relation back front way case gives rise composition table see 
illustrates compositions back front top row left right back middle row respectively left right bottom row respectively left right front 
comment case back top row back front back back back back front back front composition simple relations general case ir ir ir ir ir ir ir ir ir ir ir ir ir 

back back 

back back 

back front back 

back ab ac ba bc nitely far limit angle ba bc coincides limit ba bc 

back ab ac ba bc coincides limit lower bound ba bc nitely far limit angle ba bc 
illustrates compositions back front top row left right bottom row respectively left right comment case top row 
back ab ac ba bc 

ab ac ba bc 

front ab ac ba bc 
composition simple relations illustration general case 
composition simple relations illustration general case 
entries table corresponding rows columns provide refer weak composition 
de nition weak composition relations lsr rsr strongest relation 
model represent reason orientation knowledge aim section show model really constraint system 
input knowledge system csp constraint satisfaction problem variables range set dimensional points constraints consist relations model triples variables 
csp continuous variables range continuous domain ir rst formal de nition spatial csp needed background 
provide constraint propagation procedure implements algebraic operations converse rotation intersection composition achieves strong consistency input csp 
come termination computational complexity propagation procedure 
part section consist procedure searching strongly consistent re nement input csp expressed model 
spatial constraint satisfaction problems de nition spatial constraint satisfaction problem spatial constraint satisfaction problem order consists 
variables ranging set points dimensional space 
ternary relations expressed model provided relative orientation triples variables standing constraints 
consider variables xn variables altogether possible ordered triples 
constraint involving ordered triple converted constraint ordered triple nite combination converse rotation operations 
instance constraint form equivalent assume constraints involve variables consist ternary relations rm ordered triple required belong 
constraints converted single constraint rm loss generality assumption variables constraint involving 
constraint matrix matrix de ned follows 
initialise entries universal relation ijk 
initialise diagonal elements identity relation iii 
triple variables constraint speci ed ijk ijk ijk jki ijk jik jki kij jki kji kij assumption explicitly speci ed csp constraint matrix 
instantiation tuple positions representing assignment value variable 
consistent instantiation instantiation solution ijk 
fx subset set variables sub csp generated denoted jv csp set variables constraint matrix obtained projecting constraint matrix jv klm 
consistent subset containing variables variable solution jv extended solution jv fxg strongly consistent consistent consistency consistency consistency correspond node consistency arc consistency path consistency respectively 
strong consistency corresponds called global consistency 
global consistency facilitates important task searching solution done property met backtracking 
re nement csp set variables ijk ijk 
re nement re nement entries relations 
consistent re nement re nement consistent 
assumption include empty constraint indicates trivial inconsistency strongly consistent 
constraint propagation procedure constraint propagation procedure 
input variables xn constraint matrix 
procedure completes veri es properties ijk jki ijk ijl ijk ikl procedure queue queue 
initially assume variable triples entered queue 
procedure removes variable triple queue time 
triple removed queue procedure eventually updates constraints neighbouring triples triples sharing variables 
constraint successfully updated corresponding triple sorted way variable smallest index rst variable greatest index sorted triple placed queue may turn update constraints neighbouring triples done add queue 
process terminates queue empty 
termination computational complexity propagation procedure de ne simple qi relation quantitative model simple relation form ir ir qi general qi relation nite set simple qi relations 
hand qi constraints consist qi relations triples variables qi qi constraints relations triples variables 
de nition rational numbers 
greatest common divisor denoted gcd greatest rational number zz 
greatest common divisor strictly positive 
qi order de nition ints ijk set intervals ijk ijk interval 
ints ijk form fh pm rm ft fg qi input output csp strongly consistent 
procedure 
initialise queue 

get triple queue 
nf 
temp ijm ijk 
temp exit csp inconsistent 
temp ijm 
fadd queue xm update temp 
temp ijm 
temp exit csp inconsistent 
temp 
fadd queue xm update temp 
temp jki jim 
temp exit csp inconsistent 
temp 
fadd queue xm update temp 


queue empty procedure update 
ijk jki kij jki 
kji jik kji constraint propagation procedure 
de nition scr ijk number simple relations appearing ijk scr ijk ijk gj 
de nition 
epi ijk union fp qg ijk contains simple relation form ir ir interval epi ijk ir ints ijk fp qg 

epi epi ijk 
greatest divisor gd greatest common divisor rationals epi gd gcd fq epi 
de nition range ijk range ijk range range de ned follows 
range ijk scr ijk ir ints ijk gd 

range range ijk 
suppose gd ints ijk fh pm rm ft fg qi nd am zz range ijk range ijk scr ijk 
set strictly positive integers 
theorem applied qi procedure terminates runs completion rn range number variables proof sketch 
main operation constraint propagation procedure refer operation ijk ijk ijl ilk triple variables added queue operation alters relation ijk hand time relation altered range reduced integral multiple worst case 
triple entered queue range times 
triple taken queue propagation composition operations intersection operations performed 
triples variables procedure terminate rn time units range 
theorem procedure achieves strong consistency qi 
sketch proof applied qi terminates theorem 
strongly consistent 
procedure clearly achieves consistency achieves strong consistency 
searching strongly consistent re nement procedure searching strongly consistent re nement provided 
algorithm proceeds forward checking manner style provided cohn ternary csps cyclic ordering orientations turn adaptation ternary relations ladkin algorithm allen temporal interval csps 
algorithm interleaves instantiation variable triples ltering constraint propagation procedure provided 
algorithm outputs strongly consistent re nement re nement exists outputs false 
combining qualitative purely quantitative knowledge model provided strictly expressive combined double cross calculus useful models literature reasoning qualitative relative orientation 
real applications double cross calculus representation qualitative knowledge model representation purely quantitative knowledge 
reasoning task loss information desired translate qualitative knowledge quantitative knowledge transformation provided example advantage obtained knowledge equivalent original price pay reasoning task face arithmetic operations free meal 
prepared accept loss information solution translate purely quantitative constraint speci implied qualitative constraint words translate purely quantitative relation speci qualitative relation verifying disadvantage loosing information compensated advantage bene tting qualitative spatial reasoning techniques consist mainly table look ups need arithmetic operations 
summary discussion provided constraint model representing reasoning relative quantitative orientation knowledge dimensional space 
model strictly expressive freksa double cross calculus qualitative orientation calculus known literature 
discussed qualitative spatial reasoning qsr models nite number distinctions re ecting way qsr input output true strongly consistent convex re nement function ref 

contains empty relation return false 

contains triples labelled relations 
choose triple say 
ijk 
decompose union relations 
relation tf 
re ne ijk ijk 
ref return true 

ijk 
return false 

return true procedure searching strongly consistent re nement 
belief distinctions necessary major problem application model need distinctions captured model gain hand reasoning task mainly reduced table look ups 
quantitative model overcomes limitation due niteness number distinctions distinctions price pay application quantitative model committed face arithmetic operations 
draw refer qualitative quantitative dilemma similar habel niteness density dilemma idea qualitative quantitative dilemma intuitively get nite partition able needed distinctions nite universe consideration 
partition universe problem transforms nd nite partition nite universe best captures real world said way plausible cognitively ideally partition distinctions applications potential candidates model need 
practice restrict speci class applications impossible know time model built kinds distinctions potential applications need 
solution qualitative quantitative dilemma discussed speci cally representation knowledge combined qualitative quantitative manner depending loss information tolerated translate quantitative knowledge strongest implied qualitative knowledge compensating way loss information easy qualitative spatial reasoning techniques translate loss qualitative knowledge quantitative knowledge price pay loss information translation committed face arithmetic operations 
important question constraint propagation procedure provided complete convex 
answer question mean algorithm searches strongly consistent convex re nement complete 
acknowledgments christian freksa christopher habel discussions related topic 
habel rejected idea continuous model time favour dense model enormous cognitive complexity restricted discussion niteness continuity dilemma weaker version niteness density dilemma 
allen 
maintaining knowledge temporal intervals 
communications association computing machinery 
cohn 
qualitative spatial representation reasoning techniques 
proceedings ki german annual conference arti cial intelligence volume lecture notes arti cial intelligence pages 
springerverlag 
dechter 
local global consistency 
arti cial intelligence 
dechter meiri pearl 
temporal constraint networks 
arti cial intelligence 
forbus nielsen faltings 
qualitative spatial reasoning clock project 
arti cial intelligence 
frank 
qualitative spatial reasoning distance directions geographic space 
journal visual languages computing 
freksa 
conceptual neighborhood role temporal spatial reasoning 
singh es editors proceedings imacs workshop decision support systems qualitative reasoning pages north holland amsterdam 
freksa 
orientation information qualitative spatial reasoning 
frank campari editors proceedings international conference theories methods spatio temporal reasoning geographic space berlin 
springer verlag 
freuder 
synthesizing constraint expressions 
communications association computing machinery 
freuder 
sucient condition backtrack free search 
journal association computing machinery 
habel 
discreteness niteness structure topological spaces 
habel smith editors topological foundations cognitive science pages 

habel 
representing space time discrete dense continuous 
question 
editors parts wholes integrity granularity pages 

rm haralick elliott 
increasing tree search eciency constraint satisfaction problems 
arti cial intelligence 
cohn 
algebra cyclic ordering orientations 
proceedings aaai pages madison wi 
aaai press 
kautz ladkin 
integrating metric qualitative temporal reasoning 
proceedings aaai pages anaheim california 
ladkin 
ective solution qualitative constraint problems 
arti cial intelligence 
ligozat 
tractable relations temporal reasoning pre convex relations 
rodr iguez editor proceedings ecai workshop spatial temporal reasoning 
mackworth 
consistency networks relations 
arti cial intelligence 
montanari 
networks constraints fundamental properties applications picture processing 
information sciences 
randell cui cohn 
spatial logic regions connection 
proceedings kr pages san mateo 
morgan kaufmann 
zimmermann freksa 
qualitative spatial reasoning orientation distance path knowledge 
applied intelligence 

