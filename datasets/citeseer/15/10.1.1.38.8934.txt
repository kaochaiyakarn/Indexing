explicitly defined introns destructive crossover genetic programming peter nordin universitat dortmund frank wolfgang banzhaf universitat dortmund system analysis department computer science university dortmund germany genetic programming introns play substantial roles structural protection role allowing population preserve highly fit building blocks global protection role enabling individual protect entirely destructive effect crossover 
introduce explicitly defined introns genetic programming 
results suggest explicitly defined introns improve fitness generalization cpu time 
explicitly defined introns partially replace role implicit introns introns emerge crossover mutation explicitly defined 
explicitly defined introns implicit introns appear situations tandem produce better training fitness generalization occurs explicitly defined introns 
introns important part genomes cells 
genes dna sequence expressed amino acids 
watson classify material introns genetic code apparently express individual produced genome 
genetic programming gp heavy methods borrowed natural evolution 
genetic programming systems variable length code 
factor permits evolution code effect fitness individual 
gp analog naturally evolved introns evolution code fragments effect fitness individual 
fact code fragments appear evolved gp populations 
tackett pointed tendency gp structures undergo bloat 
simply put bloat term describe accumulation gp population apparently useless code code effect result calculated gp individual 
researchers borrowing term biology referred fragments apparently useless code introns 
begun investigating introns devising way measure order intron content genetically evolved programs linear genomes compiling gp system :10.1.1.57.2133
researchers studied introns earlier evolutionary algorithms 
continue research introns 
summary argue introns gp just useless code 
play significant roles training 
specifically introduce explicitly defined introns edi gp structures 
edi instruction segment inserted nodes 
definition act intron 
effect calculated result individual 
effect probability crossover nodes universitat dortmund fachbereich informatik lehrstuhl fur dortmund email nordin ls informatik uni dortmund de email prodigy com email banzhaf ls informatik uni dortmund de side edi see definitions genetic operators 
way contrast refer introns emerge code implicit introns ii 
situation depicted 
working node edi working node edi linear genome node implicit intron explicitly defined introns implicit introns working nodes linear genome previously researchers experimented edi fixed length ga structures suggestion edi enhance preservation better building blocks 
results suggest edi effects variable length gp structures 
fitness generalization cpu time frequently improve edi explicitly defined introns 

ii implicit introns edi frequently ii probably serving chain edi 

circumstances edi replace ii population completely 

ii edi frequently protect entire individual code blocks destructive effects crossover 

combination parsimony pressure edi allows population keep structural advantages ii carrying computational overhead ii 
definitions defined edi explicitly defined introns ii implicit introns 
additional terms tend clarify discussion node atomic crossover unit gp structure 
crossover occur sides node node 
particular implementation gp works bit machine code instructions see node bit instruction 
node comprised working code see definition ii implicit intron 
edi explicitly defined intron node plays role fitness calculation crossover occurs effectively edi side edi see genetic operators 
working code exon gp node ii implicit intron 
working code effects fitness calculation individual fitness case 
absolute size number nodes gp individual 
effective size number nodes gp individual constitute working code number nodes gp individual difference result individual fitness calculation fitness cases 
shows evolution effective absolute size training 
generations absolute complexity efficient complexity absolute length efficient length growth genome size evolution absolute effective size 
reproduced :10.1.1.57.2133
intron equivalent unit ieu 
ii implicit intron edi explicitly defined intron probability crossover equal implicit intron comprised single node 
designate ii ieu value ii 
designate edi ieu value edi 
purpose defining unit allow deal ii edi designation consistently reflects effect probability crossover 
explicitly defined intron value 
edi explicitly defined intron stores integer value initialized randomly different ranges 
explicitly defined intron integer value shall referred 
value affects probability crossover edi discussed genetic operators 
experimental setup problem chose straightforward problem symbolic regression second order polynomial 
large constants polynomial small terminal set ranges deliberately chosen prevent trivial solutions 
runs chose fitness cases tested best individuals generalization data elements included training set 
run performed population individuals 
completed runs parsimony values edi enabled ranges initialization edi values values high medium low 
total runs comprised individuals 
additional runs look specific issues performed described 
implementation gp problem evolutionary algorithm advanced version described composed variable length strings bit instructions register machine 
register machine performs arithmetic operations small set registers 
instruction include small integer constant maximum bits 
bits instruction represents simple arithmetic operations 
actual format bits corresponds machine code format sun enables genetic operators directly manipulate binary code 
thorough description system implementation see 
implementation gp easier define measure intron sizes code register machines instance functional expressions see 
setup motivated fast execution low memory requirement linear genome reasoning information content complex 
intron measurements classes code segments varying degree intron behavior defined :10.1.1.57.2133
instance 
code segments crossover changes behavior program individual input problem domain 

code segments crossover changes behavior program individual fitness cases 

code segments contribute fitness node replaced affecting output input problem domain 

code segments contribute fitness node replaced affecting output fitness cases 

continuously defined intron behavior nodes numerical value sensitivity crossover 
introns measure fourth type 
determine node ii implicit intron replacing node instruction 
instruction neutral instruction change state register machine registers 
replacement affect fitness calculation individual fitness cases node classified implicit intron procedure completed number order introns summed intron length individual 
effective length computed absolute length intron length 
intron checking facility computationally expensive operates linear time relation size individuals 
genetic operators follows brief description evolutionary operators details operators system see 
selection fitness proportionate 
note technique measures presence order introns 
examples intron segments length called order introns higher order introns appear second order 
case intron segment acts intron long instructions kept 
chose limit measurement manner observations theoretical argumentation support claim higher order introns small proportion total intron length :10.1.1.57.2133
table objective symbolic regression polynomial large constants terminal set integers range function set addition subtraction multiplication raw stand 
fitness sum taken fitness cases absolute value difference actual desired value wrapper parameters maximum population size crossover prob mutation prob selection fitness proportional selection termination criteria maximum number generations exceeded maximum number generations parsimony pressure init value maximum number nodes total number experiments table summary parameters training 
crossover arbitrary subsegments nodes selected copy parent swapped form children 
chosen segments different length length children vary 
crossover edi runs edi explicitly defined introns crossover point selected examining integer values stored edi nodes individual 
probability crossover nodes proportional edi separating nodes 
values parents transmitted children follows 
summed 
sum divided randomly edi appear crossover point children 
operator allows crossover equivalent crossing individuals middle chains ii 
felt important duplicate phenomenon frequency observed long chains ii prior 
mutation changes bits inside bits instruction node change operator source destination registers value constants 
parsimony pressure external parsimony pressure experiments 
feature system punishes absolute size individual adding parsimony factor times absolute size individual fitness expression 
parsimony factor means absolute size individual added computed fitness 
parsimony applied penalize explicitly defined introns 
table summarizes parameters training different training runs constitute basis analysis 
protection destructive crossover definitions terms meanings destructive crossover crossover operation results fitness offspring fitness parents constructive crossover crossover operation results fitness offspring fitness parents 
neutral crossover crossover operation results combined fitness offspring fitness parents 
histogram demonstrates relative proportions different types crossover typical early generation typical run 
fitness change crossover effect crossover generation crossover effect typical proportion destructive neutral constructive crossover early generation 
reproduced :10.1.1.57.2133
axis gives change fitness deltaf percent crossover 
best 
deltaf percent gamma delta area zero represents neutral crossover area left zero represents destructive crossover area right zero represents constructive crossover 
dimensional extension important analysis tool finding takes place evolution 
constructed compiling type generation enabling study distribution crossover effect complete training session 
fitness parents effects crossover evolution crossover effect fitness change crossover generations number crossover events distribution crossover effects training 
reproduced :10.1.1.57.2133
effective fitness protection destructive crossover concept destructive crossover formulate equation describing proliferation individuals generation 
details see :10.1.1.57.2133
ej size program aj absolute size 
standard genetic programming parameter giving probability crossover individual level 
probability crossover segment working code program lead worse fitness individual probability destructive crossover dj fitness individual average fitness population current generation 
fitness proportionate selection block exchange crossover program average proportion program generation delta delta gamma delta ej aj delta dj short equation states proportion copies program generation proportion produced selection operator proportion programs destroyed crossover 
interpret crossover related term direct subtraction fitness expression reproduction selection 
words reproduction selection crossover acts reproduction selection fitness adjusted term gammap delta delta ej delta aj delta dj interpreted term fitness proportional program size 
define effective fitness ej ej gamma delta delta ej delta aj delta dj effective fitness determines number individuals certain kind generation 
equations suggest may number strategies individual increase survival rate proportion generations contain effective offspring 
example 
improve fitness 
increase absolute size 
decrease effective size 
rearrange code segments vulnerable crossover 

take advantage special representation reduce probability destructive crossover 
address strategies individual improve effective fitness terms global protection individual destructive effects crossover refers changes effective fitness caused changes absolute effective size 
structural protection refers changes effective fitness caused proportion ii code fragments better protect high fitness code crossover 
edi provide special representation argue increase effective fitness allowing individual improve global protection structural protection 
intron protection analysis introns protect destructive crossover different ways structurally globally 
global protection mean protection working code individual destructive crossover 
structural protection mean protection portions individual working code destructive crossover 
improve effective fitness individual 
structural protection crossover represent nodes working code 
ii represent node implicit intron 
consider individuals gamma gamma ii gamma possible crossover points gamma gamma possible crossover points probability crossover occur block code 

block code greater structural protection destructive crossover block code 
block code highly fit individual higher effective fitness individual 
global protection crossover ii protect entire individual destructive effects crossover 
consider individuals gamma gamma gamma ii gamma gamma probability crossover occur manner disrupt working code 
probability 
working code better protected destructive crossover individual higher effective fitness individual 
edi protection crossover probability crossover nodes separated edi explicitly defined intron proportional explicitly defined intron value edi see genetic operators infra 
individual code block relatively protected disrupted crossover block 
gamma edi gamma gamma edi gamma likewise individuals highly protected working code disrupted crossover second individual 
gamma edi gamma gamma edi gamma ii gamma edi gamma gamma ii intron equivalent units ieu protection crossover defined ieu value nodes sum number implicit intron ii nodes sum explicitly defined intron values nodes 
analysis suggests ii edi provide global structural destructive crossover predict ieu value nodes measure amount global structural crossover protection nodes 
predict runs edi component ieu ii component may save cpu time fitness calculation individual unaffected edi 
ii course consume cpu time working code 
similarly cpu time consumed crossover reduced expensive computation selection number nodes 
experimental results divide discussion sections 
addresses global effect intron equivalent units ieu protecting entire individual destructive effects crossover 
second addresses structural effect ieu protecting blocks code destructive effects crossover 
third discusses effects edi fitness generalization cpu time 
global protection crossover generations runs measured destructive crossover far prevalent effect crossover operation 
see figures infra 
runs notable exception discussed destructive crossover falls rapidly fraction initial state 
shows relative amounts different types crossover generation typical run 
constructive crossover appears higher actual level scaling purposes multiplied 
generation proportion destructive crossover events starts fall rapidly 
generation total incidents crossover 
obviously protecting population destructive crossover 
protection comes believe concurrent growth intron equivalent units ieu 
shows growth ieu run 
generation implicit introns ii absolute size explicitly defined intron values increase rapidly 
ieu simply number ii plus total 
predicted global protection effect ieu destructive crossover appears translate reality 
destructive neutral constructive crossover generation 
edi enabled 
parsimony 
average absolute size average implicit intron size average value generation 
edi enabled 
parsimony 
scaling purposes divided 
test persistence phenomenon performed runs generations middle range initialization see table 
runs described table destructive crossover fell total crossover events eventually 
runs examined fall destructive crossover accompanied comparable increase average ieu value population 
runs destructive crossover fell runs edi parsimony factor 
see table 
runs exceptions prove rule 
runs parsimony measure forces number ii implicit introns zero early training 
course edi runs 
result entire population low ieu value run 
destructive crossover remains high 
hand edi explicitly defined introns enabled destructive crossover fall run parsimony penalty 
runs ii grow rapidly undergo rapid growth late training 
total intron equivalent units ii plus undergoes rapid growth late training edi enabled parsimony 
runs population percent table percent runs destructive crossover fell total incidents crossover runs 
doing apparently inhibit destructive crossover way ii parsimony factor see table 
short ieu grew rapidly destructive crossover fell time 
ieu grow rapidly destructive crossover fall 
table suggests correlation rapid ieu growth equally rapid decline destructive crossover 
fact confirm prediction effect ieu global protection crossover 
structural protection crossover argued ieu intron equivalent units include ii implicit introns edi explicitly defined introns theoretical ability protect blocks code destructive effects crossover 
predict evolutionary algorithm may capability protect blocks code bear highest likelihood producing fitter offspring 
altenberg terminology predict ieu may increase survivability blocks code high constructional fitness increase evolvability population 
constructional fitness protection crossover assume code block working code relatively high constructional fitness 
assume code block working code relatively low constructional fitness 
consider individuals intron equivalent unit ieu configurations parent gamma gamma gamma gamma parent gamma gamma gamma gamma offspring parent survive offspring parent contain highly fit block expect code block parent multiply population rapidly code block parent 
blush imply average ieu individual population decrease training continues 
code block configuration take low value replicates unbroken 
factor 
consider similar individuals parent gamma gamma gamma gamma parent gamma gamma gamma gamma configuration parent offspring survive highly fit block disrupted crossover 
increases amount protection accorded block 
factor tend increase ieu low fitness blocks code training continues 
factors setting average ieu value population early constructional phases training pressure decrease ieu values blocks high constructional fitness pressure increase ieu values blocks low constructional fitness 
lowest possible value 
hand upper limit value accordingly selection pressure putting upward pressure values expect balance factors result exponential increase ieu values early constructional phase training 
third factor 
exponential increase strategy works highly fit individuals training counterproductive constructive crossover early training 
consider figures 
result rapidly increasing ieu values dramatic increase neutral crossover 
early stages training individuals high ieu values protected globally crossover long survive 
allow constructive crossover pass 
factor considered 
significant difference way ii implicit introns edi explicitly defined introns function 
parsimony altogether suppress emergence ii ii capable chaining edi 
edi capable chaining edi 
expect find differences behavior edi ii depending parsimony factor 
possible find edi ii working chains entirely 
expect amount ieu population result balance factors plus ability ii string edi 
theory suggests balance evolutionary algorithm select presence ii ieu constructional phase training exponentially 
finding evolutionary algorithm selecting amount ieu population selecting presence ieu inconsistent hypothesis testing intron equivalent unit ieu contribution constructional fitness global protection effect discussed dramatic really signals training decisively 
spotting effect easy long way measure intron equivalent units 
measuring structural effect ii edi considerably difficult measuring global effect 
global protection effect expect structural protection effect cause easily measurable exponential increases number ii 
able devise tests hypothesis 
test 
measuring selection ieu values 
discarded absolute level ieu individual population measure evolutionary algorithm selecting presence ieu 
researchers pointed way useless code replicates population adjacent blocks highly fit code 
findings way inconsistent observation 
phenomenon implies average ieu intron equivalent unit individual poor way measure evolutionary algorithm selecting presence ieu 
average amount working code changes substantially training progresses expect amount ieu population fluctuate 
phenomenon precludes average ieu individual measure evolutionary algorithm selecting presence ieu 
chose average intron equivalent units ieu node population measure 
words look average sum ii node 
measure eliminates possibility really measuring changes ieu caused edi enabled parsimony runs population table edi parameters measuring evolutionary algorithm selecting presence ieu 
predictions regarding measure hypothesis false source ieu growth ieu node remain constant fluctuate randomly late stages training 
second 
hypothesis correct hand ieu node increase early exponentially 
calculated average ieu node runs parsimony edi 
plotted average best individual fitness generation results reported 
tests edi parsimony measure unhelpful evaluating hypothesis way 
edi measure parsimony measure suppressed growth ii 
components ieu regard result runs unhelpful way 
tests considerably helpful 
figures show results tests runs individuals populations 
ieu node best individual fitness generation averaged runs edi parsimony results parameter sets consistent hypothesis 
figures illustrate greatest clarity 
average ieu node increases training average best individual fitness runs stops improving 
point ieu node drops 
ieu node rises 
climb ieu node best individual fitness stops improving consistent prediction evolutionary algorithm select existence ieu constructional phase training 
presents results edi enabled parsimony measure somewhat ambiguous 
ieu node rises discovery best individual periods apparently exponential increase 
examined cause exponential increases discovered runs average quickly best individual went exponential growth runs ieu node best individual fitness generation averaged runs edi enabled parsimony ieu node best individual fitness generation averaged runs edi enabled parsimony best individual 
accounted exponential increases runs best individual 
note exponential increases pattern similar pattern figures 
regard inconsistent hypothesis 
summary results test suggest ii edi merely passive units training 
expect find evidence evolutionary algorithm actively selecting presence 
conclude test consistent hypothesis inconsistent notion ii edi useless code 
test 
measuring interactions ii edi 
hypothesis predicts edi explicitly defined introns ii implicit introns may interact replacing working 
edi ii merely useless code ii come go accord unaffected presence lack edi population 
tested interactions ways measured percentage average absolute size population edi enabled parsimony implicit introns sample size individuals table effect adding edi percentage average absolute size individuals composed ii 
runs perfect individual 
comprised implicit introns 
test performed runs test 
test performed edi enabled 
measured effect adding edi percentage ii table contains results runs perfect individual addition edi reduced percentage ii population time perfect individual significant degree 
figures runs examined pattern percentage ii population drops edi added 
drop runs half drop runs perfect individual 
suggests runs best runs perfect individual runs edi replaced ii greatest extent 
data viewed support notion extent edi replace ii edi added population may runs successfully find perfect individual 
consistent hypothesis inconsistent notion ii edi merely useless code 
second looked evidence ii edi 
interaction suggestive 
refer back 
parsimony measure run ii apparently change values lockstep 
changes 
added parsimony factor result different 
details run random seed 
explicitly defined intron value implicit intron ii size typical run edi enabled parsimony 
include edi measure absolute size addition edi effect measurement indirectly effecting number ii 
point run finds best individual appeared important prior reported results measured change percentage point run best individual fitness stopped improving 
note discovery perfect individual ii values move lockstep 
important despite parsimony pressure ii persisted population proportion typical run parsimony factor 
soon best individual number ii drops effectively zero typical parsimony runs 
interpret figures evidence presence edi improve survival value ii perfect individual 
perfect individual ii lose selection advantage revert normal pattern runs parsimony 
speculate effect adding edi ability ii string long chains edi rapidly increase decrease amount protection accorded various blocks code 
edi ability 
event edi ii merely blocks useless code expect interaction 
evidence consistent hypothesis 
intriguing possibility raised average ii values population may practical way improve training parsimony factor 
possibilities 
ran tests higher parsimony measure parsimony factor 
runs ii suppressed altogether demonstrate pattern 
fitness generalization worse higher parsimony factor 
may pattern means parsimony factor just right 
looking pattern preliminary runs may way set parsimony factor 
second pattern persists types problems ii size generically fluctuates best individual falls close zero measure may way determine training 
having measure population better invaluable tool gp training 
regard important area research 
regarding structural role ieu tests devised tend reject hypothesis early stages training ii edi useless code happens adjacent highly fit blocks code 
results suggest ii edi play important role finding highly fit individual 
final note 
section show edi frequently improved fitness generalization cpu time 
edi merely useless code expect effect 
proving edi ii useless prove position role played ii edi protect code blocks high constructional fitness destructive effects crossover 
merely consistent role 
evidence highly suggestive role theoretical reasoning play structural role strong 
regard area ripe research 
effect edi fitness generalization cpu time addition edi profoundly affect measure performance 
summary best performances various categories rank order set forth tables measure edi proved capable improving performance algorithm 
edi enabled best categories measure performance 
runs edi quite sensitive range edi initialized 
example illustrates possible pitfalls training edi directions research 
far best average cpu time find perfect individual parsimony wide initialization range edi 
average fitness category bottom list 
reason runs edi enabled parsimony edi range average fitness medium narrow narrow wide wide medium table average fitness best individual runs smaller better edi enabled parsimony edi range average generalization narrow medium wide narrow wide medium table average generalization best individual runs smaller better edi enabled parsimony edi range average cpu time wide narrow medium medium wide narrow table average time seconds find perfect individual 
runs perfect individual category perfect individual 
runs perfect individuals quickly 
reason apparent discrepancy may protection destructive crossover edged sword 
wide range edi helped runs find perfect individual quickly may helped remaining runs find local minima quickly get stuck 
little protection crossover narrow medium ranges parameters resulted slower cpu performance runs perfect individuals 
extend current results canonical gp system hierarchical crossover tree representation 
shed light potential differences behavior evolution induced representation crossover operators 
far done initial experiments canonical gp system doing symbolic regression 
results indicate distribution destructive crossover similar system 
shows distribution crossover effect expression gp system doing symbolic regression generations 
suggests results may apply wider domain systems 
effects crossover evolution crossover effect fitness change crossover generations number crossover events crossover effects expression style gp regard plan perform intron size measurements tree gp system 
addition believe investigation structural effects ieu warranted investigations continuously defined intron properties see section 
study exons introns distributed genome evolution 
believe edi tested real world problems intractable solution spaces 
acknowledgments walter tackett genetic programming system gp archive 
research supported ministry wissenschaft und forschung watson hopkins roberts wiener molecular biology gene menlo park ca benjamin cummings publishing koza 
genetic programming cambridge ma mit press 
nordin banzhaf :10.1.1.57.2133
complexity compression evolution 
proceedings sixth international conference genetic morgan kaufmann publishers tackett 

greedy recombination genetic search space computer programs 
foundations genetic algorithms iii whitley vose eds 
morgan kaufmann san mateo california 

inserting introns improves genetic algorithm success rate cue biology 
proceedings fourth international conference genetic algorithms belew booker editors morgan kauffman 
san mateo california pp 

forrest mitchell relative building block fitness building block hypothesis foundations genetic algorithms whitley ed 
san mateo ca morgan kaufmann publishers pp 
nordin 
compiling genetic programming system directly manipulates machine code 
advances genetic programming kinnear jr 
ed cambridge ma mit press 
sparc architecture manual sparc international menlo california 
nordin banzhaf 
evolving turing complete programs register machine self modifying code 
proceedings sixth international conference genetic morgan kaufmann publishers altenberg 
evolution evolvability genetic programming 
advances genetic programming kinnear jr 
ed cambridge ma mit press 
pp 

