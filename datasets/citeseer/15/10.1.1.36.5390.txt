natural deduction intuitionistic non commutative linear logic jeff frank pfenning department computer science carnegie mellon university pittsburgh pa usa mail cs cmu edu fp cs cmu edu 
system natural deduction associated term calculus intuitionistic non commutative linear logic conservative extension intuitionistic linear logic 
prove subject reduction existence canonical forms implicational fragment 
intuitionistic logic captures pure functional computation logical way seen curry howard isomorphism constructive proofs functional programs 
structural properties programs captured intuitionistic framework resource usage computational complexity sequentiality 
intuitionistic linear logic gir abr bar thought refinement intuitionistic logic resource consumption properties functions expressed internally 
refine allow expression sequencing computations 
achieve controlling structural rule exchange arrive intuitionistic non commutative linear logic 
research non commutative linear logic focused simply removing exchange rule underlying logic allowing exchange tandem structural rules modal formulas 
alternative propose system distinguishes unrestricted linear ordered hypotheses 
presentation form natural deduction proof terms departing previous formulations sequent calculus bg abr rue 
establishes connection functional computation extension curry howard isomorphism 
conservative extension dual intuitionistic linear logic bar means strictly increase expressive power 
motivating applications logic space permit detailed analysis 
direct application partially supported national science foundation ccr 
partially supported national science foundation ccr 
logical explanation ordering properties terms continuation passing style investigated danvy second author dp 
ordering inherent non commutative function arguments internalize properties program evaluation fragment large capture case terms resulting standard cps transformation 
furthermore system integrates lambek calculus lam functional framework permits ordinary linear functions consistent manner 
coexistence linear ordered functions logically describe natural language phenomena example piping unbounded filler gap dependencies par hod 
related approaches similar problems computational linguistics pursued example km 
show calculus permits canonical long fij normal forms means candidate foundation logical framework logic programming language lines lolli hm linear lf cp 
related sequent calculus formulation pp developed efficient proof search mechanism suitable logic programming applied algorithms natural language parsing sorting execution machines pp 
section introducing implicational fragment characterized implications intuitionistic linear gammaffi left ordered ae right ordered 
functional point view corresponds having different types functions restrictions placed arguments arguments order arguments specified order 
prove fragment satisfies subject reduction validating elimination rules 
strong normalization church rosser property hold elided extended 
section prove typed term equivalent canonical form important applications logic programming logical frameworks 
proof property employs logical relations develop necessary machinery substitutions 
introduce logical connectives section include modal operator mobility usual connectives linear logic 
subject reduction continues hold existence commutative conversions destroys canonical form property 
implicational fragment define intuitionistic non commutative linear logic judgment gamma delta omega gamma context unrestricted hypotheses allowing exchange weakening contraction delta context linear hypotheses allowing exchange omega context ordered hypotheses proof term formula 
associativity assumed implicitly contexts 
general formula type interchangeably justified curry howard isomorphism 
reflect kinds hypotheses connectives language types obtain familiar intuitionistic 
linear gammaffi implications forms ordered implication depending hypotheses taken left ae right ordered context 
lambek calculus lam left ordered implication ae written anb right ordered implication ai written types atomic types intuitionistic implication gammaffi linear implication ordered right implication ae ordered left implication proof terms drawn calculus style church valid term unique type essential logical framework applications mind 
distinguish intuitionistic linear ordered variables write variable declared contexts 
terms variables intuitionistic functions linear functions gammaffi right ordered functions ib left ordered functions ae contexts gamma delta omega simply lists assumptions variables distinct category intuitionistic linear ordered 
delta stand empty context omit context 
allow bound variables renamed tacitly 
order describe inference rules need auxiliary operations contexts context concatenation omega omega context merge delta delta concatenation preserves order assumptions non deterministic merge allows interleaving assumptions 
viewing natural deduction bottom think context concatenation omega omega ordered context split context merge delta delta context split 
non deterministic read way may ways split context omega omega omega delta delta delta elimination rules implicational connective turn 
connectives treated section 
generally gamma delta omega stand contexts declaring intuitionistic linear ordered variables respectively 
intuitionistic functions linear ordered context admit weakening rule unrestricted variables requires empty 
rule new variables added right gamma just added left intuitionistic context admits exchange see lemma 
elimination rule allow derivation minor premise depend linear ordered assumptions proof unrestricted subject reduction fail 
intuitionistic context premises indicates rules biased bottom reading distribute hypotheses gamma premises relying validity contraction intuitionistic context 
ivar gamma gamma delta delta gamma delta omega gamma delta omega gamma delta omega gamma delta delta gamma delta omega linear functions gammaffi rules linear functions exhibit new phenomenon linear contexts premises elimination rules interleaved form linear context expresses linearity condition concisely 
lvar gamma delta gamma delta omega gamma delta omega gammaffi gamma delta omega gammaffi gamma delta delta gamma delta delta omega ordered variables 
ordered variables ones hypothesis rule expresses ordered variables linear 
words order seen restriction linearity independent property conceivable 
gamma delta right ordered functions aib 
rule right ordered functions variable new general convention variables context unique appear right ordered context 
matching elimination rule ordered contexts premises concatenated order form ordered context 
linear context interleaving violate linearity 
gamma delta omega ii gamma delta omega ib gamma delta omega gamma delta omega gamma delta delta omega omega left ordered functions ae rules left ordered implication symmetric right ordered implication assumption appears left ordered context rule contexts concatenated reverse order elimination rule 
fact rules consistent demonstrated subject reduction theorem 
gamma delta omega aei gamma delta omega ae gamma delta omega ae gamma delta omega gamma delta delta omega omega give intuition formulation reconsider rules bottom construction proof 
variable rules ivar lvar linear ordered contexts empty contain subject variable intuitionistic context unrestricted 
forces linear ordered assumptions appear term 
rules linear context split disjoint parts reading bottom means assumption 
rules linear assumptions propagate left premise 
observations show linear variable 
observation variable rules linear assumptions occur exactly 
rule ordered context split order preserving way leftmost assumptions omega going left premise rightmost assumptions omega going right premise 
converse applies rule 
rules ordered context omega goes left premise 
observations observation variable rules show ordered assumptions occur exactly order 
see emptiness restrictions linear ordered contexts rules necessary guarantee subject reduction 
reduction rules simply fi reduction kinds functions 
consider expansion 
reduction rules 
order prove subject reduction proceed establish expected structural properties contexts substitution lemmas 
lemma structural properties 

gamma gamma delta omega gamma gamma delta omega 
gamma gamma delta omega gamma gamma delta omega 
gamma gamma delta omega gamma gamma delta omega 
gamma delta delta omega gamma delta delta omega proof induction structure derivations 
lemma substitution properties 

gamma gamma delta omega gamma delta delta gamma gamma delta omega 
gamma delta delta omega gamma delta delta gamma delta delta delta omega 
gamma delta omega omega gamma delta omega gamma delta delta omega omega omega proof induction structure typing derivation case lemma 
subject reduction follows immediately 
theorem subject reduction 
gamma delta omega gamma delta omega proof reduction apply inversion typing derivation substitution lemma obtain typing derivation 
subject reduction demonstrates rule immediately followed elimination rule connective reduced 
form local soundness theorem expressing elimination rules strong 
corresponding global soundness property states derivation normalized entirely 
easy establish standard forgetful interpretation simply typed calculus 
normal form unique direct consequence confluence 
formally state theorems main interest 
proof confluence completely standard developing theory residuals tait martin lof method parallel reduction 
local soundness expressed subject reduction guarantees connective elimination rules strong 
check weak need show way apply elimination rules original judgment recovered rules 
property local completeness expressed proof terms subject expansion expansion refers expansion 
theorem subject expansion 

gamma delta omega gamma delta omega 

gamma delta omega gammaffi gamma delta omega gammaffi 
gamma delta omega ib gamma delta omega ai 
gamma delta omega ae gamma delta omega ae proof direct derivation case weakening lemma part 
corresponding global property existence long normal forms 
subject section 
canonical forms existence canonical long fij normal forms critical logical framework applications calculus canonical forms bijective correspondence objects represented 
property inherited logical framework lf hhp linear refinement llf cp 
intuitionistic case syntactic semantic proofs exist see example gha 
pursue proof logical relations development sheds light nature substitutions calculus 
formalize property term converted canonical form deductive system easily related usual notion long fij normal form 
deductive system read algorithm converting term canonical form 
prove typed term converted canonical form 
proof argument kripke logical relations called tait method consisting parts typed term type logical relation represented logical relation represented canonical term convertible reduction strategy weak head reduction defined 
fi 
gamma 
gamma 

gamma 
fi gammaffi gamma 
gamma 
gammaffi gamma 
fi ae gamma 
gamma 
ae gamma 
fi gamma 
gamma 
gamma 
intuitively canonical terms atomic terms atomic type abstractions canonical terms 
atomic terms variables applications atomic terms canonical terms 
formalized judgments gamma delta omega denotes canonical form type gamma delta omega denotes atomic form type atomic types 
gamma delta omega coercion gamma delta omega gamma 
gamma delta omega reduction gamma delta omega intuitionistic functions 
ivar gamma gamma delta delta gamma delta omega gamma delta omega 
gamma delta omega gamma delta delta gamma delta omega linear functions 
lvar gamma delta gamma delta omega gamma delta omega gammaffi gamma delta omega gammaffi gamma delta delta gamma delta delta omega ordered functions 
gamma delta gamma delta omega ii gamma delta omega ib gamma delta omega ib gamma delta omega gamma delta delta omega omega gamma delta omega aei gamma delta omega ae gamma delta omega ae gamma delta omega gamma delta delta omega omega expected structural properties intuitionistic linear contexts hold system 
furthermore gamma delta omega gamma delta omega long fij normal form 
properties follow immediate structural inductions 
unary kripke logical relation crux argument 
defined induction type note structural properties intuitionistic linear ordered contexts captured definition 
gamma delta omega iff gamma omega delta gamma delta omega iff gamma gamma gamma delta delta gamma gamma omega delta 
gamma delta omega gammaffi iff delta gamma delta delta gamma delta delta omega 
gamma delta omega iff delta omega gamma delta omega gamma delta delta omega omega 
gamma delta omega ae iff delta omega gamma delta omega gamma delta delta omega omega 
formally state prove second part proof typed terms logical relation types canonical forms 
prove simultaneously reverse statement terms atomic form 
lemma logical relations canonical forms 

gamma delta omega gamma delta omega 
gamma delta omega gamma delta omega 
proof induction structural properties contexts 
lemma closure head expansion 
gamma 
gamma delta omega gamma delta omega 
proof induction making lemma 
order show gamma delta omega implies gamma delta omega need explicitly manipulate substitutions 
shall define substitution triple fl ffi component list term variable pairs 
fl ffi delta delta delta fl ffi fl ffi 
fl ffi assume variable defined fl ffi write fl ffi occurs fl ffi 
define typed substitutions judgment gamma delta omega fl ffi gamma delta omega means fl ffi supply appropriate terms variables declared gamma delta omega respectively 
gamma delta omega delta delta delta delta delta delta gamma delta omega fl ffi gamma delta omega gamma delta delta gamma delta omega fl ffi gamma delta omega gamma delta omega fl ffi gamma delta omega gamma delta delta gamma delta delta omega fl ffi 
gamma delta omega gamma delta omega fl ffi gamma delta omega gamma delta omega gamma delta delta omega omega fl ffi gamma delta omega note restrictions prohibit example substitution term linear variable depends ordered variable 
dependence falsify theorem 
computing result applying substitution term maintain invariant substitution matches contexts term formed 
means split substitution applications 
define application substitution term follows fl ffi fl ffi fl ffi fl ffi fl ffi fl ffi fl delta delta fl ffi fl ffi fl ffi ffi fl ffi fl ffi delta fl ffi fl ffi fl ffi ffi fl ffi fl ffi fl ffi fl ffi fl ffi ffi fl ffi fl ffi glance substitution splitting may non deterministic 
proper split easily determined typing derivation term substitute 
typing derivations unique ambiguity 
rely proof fundamental theorem logical relations lemma 
lemma typing substitutions 
gamma delta omega gamma delta omega fl ffi gamma delta omega gamma delta omega fl ffi proof induction structure derivation gamma delta omega substitutions compose obvious way investigate properties substitutions 
write id gamma delta omega identity substitution variables declared gamma delta omega define logical relations substitutions induction structure contexts 
gamma delta delta delta delta delta delta gamma delta omega fl ffi gamma delta omega iff gamma delta omega fl ffi gamma delta omega gamma delta delta gamma delta delta omega fl ffi ffi gamma delta omega iff gamma delta omega fl ffi gamma delta omega gamma delta delta gamma delta delta omega omega fl ffi gamma delta omega iff gamma delta omega fl ffi gamma delta omega gamma delta omega lemma identity 
gamma delta omega id gamma delta omega gamma delta omega proof immediate definition lemma 
lemma typing logical relations 
gamma delta omega gamma delta omega fl ffi gamma delta omega gamma delta omega fl ffi 
proof induction structure derivation lemma 
theorem canonical forms 
gamma delta omega gamma delta omega proof immediate lemmas 
logical connectives considering standard connectives linear logic note structural properties 
theorem demotion 

gamma delta delta omega gamma delta delta omega 
gamma delta omega omega gamma delta omega omega proof cases induction structure derivation 
considering typing rules new connectives shall take care preceding property continues hold 
subject reduction strong normalization theorems continue hold straightforward extensions proofs mentioned section 
new connectives ordered conjunction ffl multiplicative unit disjunction phi falsehood mobility exponential 
introduce commutative conversions proof term calculus 
unique canonical forms longer exist connective remains locally sound complete 
means connectives ruled restricted logic programming logical frameworks applications 
fortunately serious drawback practice pp 
ordered conjunction ffl gamma delta omega gamma delta omega ffli gamma delta delta omega omega ffl ffl gamma delta omega ffl gamma delta omega omega ffle gamma delta delta omega omega omega ffl reduction rule ffl ffl multiplicative unit 
right left unit element ordered conjunction connective 
ic iff iff ae ffl iff iff ffl rule shows multiplicative unit 
gamma delta delta gamma delta omega gamma delta omega omega gamma delta delta omega omega omega reduction rule additive conjunction additive linear ordered contexts order preserve theorem 
gamma delta omega gamma delta omega gamma delta omega hm ni gamma delta omega gamma delta omega fst gamma delta omega gamma delta omega reduction rules fst hm ni snd hm ni additive unit 
additive left right units coincide 
gamma delta omega elimination rule reductions additive unit 
disjunction phi 
disjunction additive split left right versions 
gamma delta omega phii gamma delta omega inl phi gamma delta omega phii gamma delta omega inr phi gamma delta omega phi gamma delta omega omega gamma delta omega omega gamma delta delta omega omega omega case inl inr reduction rules case inl inl inr case inr inl inr additive falsehood 
unit disjunction 
gamma delta omega gamma delta delta omega omega omega abort rule new reductions 
linear exponential gamma delta delta gamma delta delta gamma delta omega gamma delta omega omega gamma delta delta omega omega omega reduction rule mobility modal may consider modality linear logic allows ordered hypothesis order 
analogy wish ae ib gammaffi gamma delta delta gamma delta delta gamma delta omega gamma delta omega omega gamma delta delta omega omega omega reduction rule natural deduction version intuitionistic non commutative linear logic conservatively extends intuitionistic linear logic 
shown proof term calculus satisfies subject reduction strong normalization canonical forms exist implicational fragment 
pp sequent calculus prove cut elimination show closely corresponds natural deduction system 
applications lie areas logical frameworks functional programming logic programming natural language processing 
applications sketched subject current research 
example shown ordering properties functional programs result cps conversion discovered danvy dan captured completely internally term calculus 
shown uniform derivations sound complete respect calculus means implicational fragment considered logic programming language 
prototype implementation advanced resource management strategies analogous lolli hod concise expression various algorithms sorting natural language parsing execution machines 
systems examples may pp 
operational semantics extension functional core investigating connection intermediate values ordered function arguments 
abr michele 
non commutative intuitionistic linear propositional logic 
zeitschrift fur mathematische logik und grundlagen der mathematik 
abr samson abramsky 
computational interpretations linear logic 
theoretical computer science 
bar andrew barber 
linear type theories semantics action calculi 
phd thesis department computer science university edinburgh 
bg brown gurr 
relations non commutative linear logic 
technical report daimi pb computer science department aarhus university november 
cp cervesato frank pfenning 
linear logical framework 
clarke editor proceedings eleventh annual symposium logic computer science lics pages new brunswick new jersey july 
ieee computer society press 
appeared preprint department mathematics technical university darmstadt germany 
dan olivier danvy 
back direct style 
science computer programming 
dp olivier danvy frank pfenning 
occurrence continuation parameters cps terms 
technical report cmu cs department computer science carnegie mellon university february 
gha neil ghani 
eta expansion dependent type theory calculus constructions 
philippe de groote roger hindley editors proceedings rd international conference typed lambda calculi applications tlca pages nancy france april 
springer verlag lncs 
gir jean yves girard 
linear logic 
theoretical computer science 
hhp robert harper furio honsell gordon plotkin 
framework defining logics 
journal association computing machinery january 
hm joshua hodas dale miller 
logic programming fragment intuitionistic linear logic 
information computation 
extended proceedings sixth annual symposium logic computer science amsterdam july 
hod joshua hodas 
logic programming intuitionistic linear logic theory design implementation 
phd thesis university pennsylvania department computer information science 
km michael 
structural control 
blackburn de rijke editors specifying syntactic structures 
csli publications 
lam joachim lambek 
mathematics sentence structure 
american mathematical monthly 
dale miller nadathur frank pfenning andre scedrov 
uniform proofs foundation logic programming 
annals pure applied logic 
par pareschi 
type driven natural language analysis 
phd thesis university edinburgh edinburgh scotland july 
available technical report ms cis department computer information sciences university pennsylvania 
pp jeff frank pfenning 
ordered linear logic programming 
technical report cmu cs department computer science carnegie mellon university december 
pp jeff frank pfenning 
relating natural deduction sequent calculus intuitionistic non commutative linear logic 
andre scedrov achim jung editors proceedings th conference mathematical foundations programming semantics new orleans louisiana april 
appear 
rue paul 
non commutative logic concurrent constraint programming 
phd thesis universit denis paris 

