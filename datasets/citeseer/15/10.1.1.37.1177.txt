dsc haptic rendering surface surface model interaction previous haptics surface tracing virtual prototyping surface design applications point model virtual finger surface interaction 
extend tracing method surface surface interactions 
straightforward extension point surface formulation surface surface yield extraneous undesirable solutions rework formulation yield satisfactory solutions 
additionally derive alternative novel velocity formulation surface surface tracing paradigm exhibits additional stability newton methods 
methods require evaluating surface point second surface partial derivatives surfaces efficient rate computation 
methods integrated step tracking process uses global minimum distance method local newton formulation new velocity formulation 
behaved finger penetration surface shown penetration cylinder 
velocity method modified newton method return maximum distance surfaces penetration 
donald nelson david johnson elaine cohen university utah computer science dept central campus dr rm salt lake city ut email cohen cs utah edu virtual proxies important penetrating case 
maximal distance required haptics tracing algorithm 
global solution discontinuities chopping object desirable 
velocity formulation shown local method choice penetrating case 
user interactions surfaces force feedback important design visualization tool 
current utilized point position hand model interaction desirable extension allow realistic geometry hand model 
extension creates severe geometric computation challenges complicated contact response scenarios 
address portion surface surface haptic rendering problem computation proper penetration depth surfaces 
penetration vector obtained rendering force feedback done established haptics techniques thompson 
penetration depth computation placed framework reliably finding tracking multiple contact points models 
framework breaks haptic rendering problem phases distant tracking global minimum distance methods nearby tracking local newton methods tracking contact reformulated newton method novel velocity formulation 
distance extrema baraff extremal distance may defined minimum distance models disjoint zero tangential contact locally maximum penetration depth inter penetrated 
measure related minimum translation distance defined cameron cameron 
user touches virtual surface virtual finger model curve embedded finger surface curve embedded model surface define path distance extrema required haptics tracing algorithm 
distance extrema goal find piecewise continuous curves penetration depth computations real time haptics tracing environment 
finger model penetrated cad model maximal distance required force computations shown fig 
finger penetrating surface curves may discontinuous distance surface models non differentiable general 
surfaces may moving 
minimal distance measure surfaces useful case global monitoring restarting mechanism 
curves distance extrema embedded finger surface model cad model 
background robotics community considerable literature area finding minimal distance point model model model quinlan gilbert lin 
minimum distance models zero penetration desire penetration depth haptic force computations 
minimum distance parametric surfaces may described system equations fu fv gs gt correctly describes line closest points normal surface 
system solved search dimensional parameter space snyder global high dimensional resultant methods lin euclidean space bounding methods johnson 
note haptic applications interested local solution distance 
local solution constrains force computation continuous solution similar god object zilles virtual proxy ruspini polygonal methods see fig 
assumption situation penetration local haptics tracing fortunate haptics controller requires greatest update rates precisely impact penetrating event 
greater stability achieved high update rates 
local solution methods applied point surface analogs equations 
order solution minimum distance described thompson extended newton formulation johnson stewart 
parametric surface point describe minimum distance constraint equations fu fv 
offset surfaces extend finger model sphere surface model ruspini thompson 
surface offset original surface constant amount traced point surface model 
original surface displayed point model effectively performing sphere surface tracing 
sphere simple finger model rotating finger effect 
develop method allows complicated finger models 
approach broken haptic rendering surface surface interactions phases 
phase far phase global monitoring mechanism returns portions surface distance part surface 
second phase near phase local newton methods determine closest points portions surfaces returned far phase 
third phase penetration phase uses closest points initiate velocity formulation maintains proper penetration depth vector surfaces 
global minimum distance global minimum distance mechanism depends subdivision properties surface 
nurbs surfaces surface patchwork polynomial pieces 
polynomial piece contained convex hull defining control points 
pieces may refined piece splits pieces maintain original surface shape additional control points 
additional control points converge quadratically surface refinement increased 
exploit properties prune away portions surfaces away threshold refine remaining portions repeat johnson 
remaining areas may find approximate minimum distances initiate faster local newton methods 
local minimum distance local minimum distance phase uses newton methods quickly update minimum distance portions model 
reformulated extremal distance approach described section extra stability relative standard minimum distance formulation minimum distance formulation equations 
local penetration developed methods maintaining proper penetration depth vector surface surface interactions 
reformulation newton minimum distance method 
second velocity formulation 
newton method advantage able find extremal distance nearby starting locations surfaces 
velocity formulation able maintain proper extremal distance shows stability reformulated newton method 
extremal distance representation minimum distance equations adequate properly describe extremal distance needed surface surface haptics 
root extremal distance set roots occurs curve intersection surfaces goes zero 
local methods may easily slide solutions 
formulations avoid zero distance roots 
methods applicable parametric surface representation including nurbs subdivision surfaces commonly representations 
designate closest parametric contact coordinates parametric surfaces 
denote surface evaluations mappings parametric space cartesian space 
newton extremal distance formulation extremal distance parametric surfaces may described equation surface normal 
wish find extrema may simultaneous zeros partials 
partials fu nu fv nv gs gt 
noting normal orthogonal tangent plane formed partials fu fv may remove fu fv terms 
additionally partials lie tangent plane equivalent constraint may formulated replacing partials partials substitutions form simplified set equations 
gs gt fu fv 
equations constrain solution collinear normals second maintain collinearity closest points surface normals 
set equations analogous baraff snyder expressed form suitable demands haptic rate computation 
system equations may locally solved incremental updates multi dimensional newton method constraint violation defined eqs 
jacobian formulation may result extraneous zeros may multiple locations surfaces tangent planes parallel local distance extrema 
undesired roots typically polar opposites model common minimum distance formulation 
velocity extremal distance formulation different approach penetrating case take surface velocity account 
relation parametric contact differentials relative linear angular velocity surfaces provide incremental tracing updates 
appendix authors extended results cremer montana arbitrary surface parameterizations contact velocity relations extended surfaces partials perpendicular making relations useful common models 
parametric contact coordinates may integrated time relation derived appendix vx relative linear angular velocity surfaces relative frame xg gu gu zg gu gv gu gv yg zg xg located contact point fig xf yf fu xf zu yf zu cos sin sin cos represents angle parametric axes gs fu distance contacts xf fu fu zf fu fv fu fv yf zf xf 
defined similar manner 
authors developed relation terms world frame quaternion velocity body coordinates appendix may convenient haptics 
comparing methods advantage newton iterative method converges solution close initial guess 
required newton method non penetrating case obtain exact starting point velocity method 
advantage velocity space method exact relation instant time iterative numerical method 
integration provides highly accurate strictly continuous tracing update 
conditioned suffer optimization problems newton method 
converge true minimal distance approximate starting point 
algorithm generating virtual proxy information strictly local distance update curves continuous may discontinuous small intervals newton method 
authors haptics surface tracing minimally confusing possible 
choice switching non local point cause discontinuous force feedback experience local choice desirable 
choice enforced continuous updates provided velocity method 
algorithm implementation sum algorithm non penetrating penetrating case far global distance refinement obtain approximate near newton iteration obtain exact near penetrating velocity formulation exact tracking outside non penetration case global monitoring mechanism 
newton iteration velocity method run concurrently case 
rate updates critical haptics control returning force non penetration 
newton velocity methods detect penetration monitoring newton tracking turned 
assumed non local jumps possible haptics device hold user mm surface 
global jumps desirable need virtual proxies finger model see fig 
due extremal points tracking tracing parametric surfaces existing nurbs trimming implementation thompson may 
model approximation effects falling transitioning edges middle finger considered completely soon extremal point 
full model tracing edges considerably costly terms computation subject 
important perception falling edges remarkably rendered haptic devices significantly diminished approximate model 
results approach efficient surface evaluations contact points surface partial derivatives points required velocity newton formulations 
timing results johnson shown point partial evaluations slightly slower evaluating point 
running times sgi onyx surface evaluations inside alpha milliseconds 
operations including inverse matrix required velocity newton formulation insignificant run milliseconds cost methods excluding surface evaluations 
single processor system easily perform control surface surface analysis update rates 
shows concurrent global monitoring local newton velocity parametric tracing enable surface surface contact analysis rates haptics control 
combined global monitoring local parametric tracing enable surface surface contact analysis rates haptics control 
avoided unstable artifacts purely iterative numerical method time impact felt user 
generally accepted noticeable level vibration order micron various frequencies hz khz nrc 
artifacts caused numerical methods may orders magnitude greater just noticeable error user may perceive 
numerical integration results velocity formulation may done simple euler method short intervals time haptics environment due small step sizes servo loop cycles 
applications larger timesteps occurs simulation debugging code standard fourth order numerical integration techniques 
long tracing sequence order seconds typical user motions performed practice integration technique accumulating noticeable errors 
periodic restarts due user transition non penetrating condition subsequent tracking newton method occur quite 
higher order integration methods employed unusual circumstance application requires excessive cost due efficiency tracking techniques 
reliability distance methods depends partially underlying stability numerical methods 
singular regions case point surface computations derived johnson expect similar conditions surface extremal distance computations 
nearly singular concave cases fig condition numbers iteration newton method roughly usually configurations 
velocity method maintains condition number roughly reformulated newton local distance method top may problems concave cases velocity bottom 
cases tried far nearly singular cases 
condition numbers considered small loss precision matrix inverse operations shown small methods 
absolute singular configurations methods singular matrices 
newton method additional convergence requirements mccalla produce additional instability concave regions condition number small 
velocity method exhibit instabilities 
investigating sophisticated numerical methods improve reliability newton method approach 
tracing update formulations provide improved surface tracing interactions 
fast compact method updates nearly penetrating penetrating case developed analyzed 
velocity formulation introduced haptics penetration 
acknowledgment go students staff alpha project developed 
support research pro vided nsf mip darpa nsf darpa science technology center computer graphics scientific visualization asc 
appendix surface contact velocity formulation number different derivations kinematics contact developed years 
formulations relate rate change parametric contact coordinates cartesian velocity angular velocity bodies contact 
previous works limited surfaces parameterized orthogonal surface partial derivatives 
limited contact case montana montana murray cai 
surface may reparameterized orthogonal may expensive impractical find parameterization 
finger may bend application 
finding reparameterization full numerical precision problem 
develop new derivation contact non orthogonal surface parameterizations 
surfaces partials orthogonal fu fv gs gt domain original result montana extended cremer contact case derives surface kinematics uf iig iif iig iif wy wx ug ig iig iif iif iig wy iif wx vx iig vy vx iif vy signed distance contacts identity matrix relative linear angular surface velocities surface relative surface denoted surface contact velocities fundamental form ii surface curvature second fundamental form subscripts surfaces represents angle cos sin parametric axes gs fu letr ii sin cos iir 
relation may written matrix form vx 
non orthogonal parameterizations provide new derivation regular parametric surfaces partials orthogonal result eqn 
typical models constructed cad systems 
parametric contact frames fig 
extremal distance context defined orthonormal set vectors 
rf xf yf zf rotation matrix local contact frame world frame xf fu fu zf fu fv fu fv yf zf xf rg similarly defined 
zf zg parallel free vectors fig 

comparison relative surface velocities re subscript ax denote component vector 
subscripts represent vector containing negative component second component superscript denote vector matrix transpose 
partitions matrices may selected row column indexing range rows columns matlab tm notation 
operator extract skew symmetric retrieves independent components elements skew symmetric matrix 
surface surface closest point surface contact frames 
velocity relations allow contact coordinate velocities 
late parametric contact coordinates uf ug linear angular surface velocities 
surface velocities relative surface velocity frame xg extremal distance context see fig 
yg zg vx 
terms contain uf ug equations due chain rule differentiation 
derive matrices surface analogously surface relations linear angular velocity separate uf ug terms fx fx xf yf fu uf uf extract skew symmetric rf rf xf zu yf zu uf uf 
eqns 
general non orthogonal case reduced system fg uf ug vx system solved quickly pseudocode fragment arbitrary surface parameterizations 
rewrite inverse coefficient matrix eq 
fg solved efficiently series matrix inverses multiplications xy inv xy xy ff xy xy xy fg xy fg xy xy xy ef xy fg xy xy xy xy ih inv ih fg xy eye xy xy xy eye zeros proof eqs may write ug uf uf 
substituting eq uf uf uf 
gathering uf uf 
expressing equation linear system uf solve contact coordinates surface uf convenience represent uf substituting solution back eq ug yj xj yj xj 
letting jb yj xj may write jb 
matrix eq completing proof 
solution roughly efficient previous methods inverse matrices matrix multiplications matrix inversions matrix multiplications required see pseudocode fragment 
optimized matrix inverse multiplication implementation constant cost small fraction cost associated surface evaluation 
jb cartesian quaternion generalized velocities express relative surface velocities terms world frame body coordinate velocities integration orientation possible integration angular velocity meaningless 
define local contact frame rotation matrix xg yg zg 
gf qf rot gg qg rot matrix operator mapping quaternion velocities angular velocities 
velocity motion surface relative surface write world space velocities terms local frame 
shown relative surface velocities related cartesian quaternion velocities qg tr qg tr rf gf rt rf gf gg eq 
denotes skew symmetric matrix performs operation cross product obtained az ay components vector 
az ax ay ax eq 
truncated part required 
contain rows rows eq 

sub eq 
yields ab qf qg 
non orthogonal surface curve velocity formulation similarly may shown surface curve extremal distance equations may extended arbitrary surface parameterizations 
time derivative parametric contact coordinates surface curve may written function linear angular velocity multiplying matrix operator df vx gu kg gu angle curve normal extremal distance case curve curve axis gu 
gu 
gu eq 
establish relation terms quaternion cartesian velocities rows 
bajaj bajaj hoffmann lynch hopcroft tracing surface intersections computer aided geometric design vol pp 

baraff baraff curved surfaces coherence rigid body simulation computer graphics proceedings siggraph 
cai cai roth spatial motion rigid bodies point contact international conference robotics automation pp 
march 
cameron cameron enhancing computing minimum penetration distances convex polyhedra international conference robotics automation april 
cremer cremer formulating contact dynamics problems mech 
struct 
mach vol 
pp 
nov 
cohen cohen discrete splines subdivision techniques computer aided geometric design computer graphics computer graphics image processing vol number october 
de de srinivasan rapid rendering tool tissue interactions surgical simulations thin membrane models phantom user group proceedings pug www com community pug papers htm 
gregory gregory lin gottschalk taylor collide framework fast accurate collision detection haptic interaction unc report currently unpublished 
gilbert gilbert johnson keerthi fast procedure computing distance complex objects dimensional space ieee journal robotics automation pp 
april 
intermediate dynamics prentice hall 
johnson johnson cohen framework efficient minimum distance computations proc 
ieee intl 
conf 
robotics automation leuven belgium may pp 

johnson johnson cohen improved method haptic tracing surfaces symp 
haptic interfaces asme international mechanical engineering congress exposition anaheim ca nov press 
topological differential equation methods surface intersections computer aided design vol 
january pp 

lin lin manocha canny 
fast contact determination dynamic environments 
ieee conference robotics automation pp 

wolter lines curvature shape interrogation computer aided geometric design vol 
march 
mccalla mccalla numerical methods fortran programming john wiley sons 
montana montana tactile sensing kinematics contact ph thesis division applied sciences harvard university 
montana montana kinematics contact grasp int 
rob 
res vol 
june 
murray murray robotic control nonholonomic motion planning phd 
dissertation electronics research laboratory college engineering university california berkeley 
nrc national research council virtual reality scientific technological challenges committee virtual reality research development national academy pres 
quinlan quinlan efficient distance computation non convex objects ieee int 
conference robotics automation pp 

ruspini ruspini khatib haptic display complex graphical environments computer graphics proceedings siggraph august 
ruspini ruspini khatib dynamic models haptic rendering systems advances robot kinematics ark june salzburg austria pp 
sato sato hirata maruyama efficient collision detection fast distance calculation algorithms convex non convex objects proceedings ieee international conference robotics automation april pp 

dynamics multibody systems cambridge university press 
stewart stewart chen cad data representations haptics virtual prototyping proceedings detc asme design engineering technical conferences sept sacramento ca 
snyder snyder interactive tool placing curved surfaces interpenetration computer graphics proceedings siggraph los angeles august pp 

thompson thompson ii nelson cohen hollerbach nurbs models haptic virtual environment th annual symp 
haptic interfaces virtual environment teleoperator systems dsc vol 
dallas tx pp 
nov 
thompson thompson ii cohen direct hap tic rendering complex trimmed nurbs mod els th annual symp 
haptic interfaces virtual environment teleoperator systems nashville tn 
zilles zilles salisbury constraintbased god object method haptic display proc 
iee rsj international conference intelligent robots systems human robot interaction cooperative robots vol pp 

