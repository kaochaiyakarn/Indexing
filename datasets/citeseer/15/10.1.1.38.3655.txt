databases graphical algebras algebraic graph approach data modeling database design diskin boris lab 
database design frame inform systems str 
riga lv latvia mail diskin frame riga lv fax 
approach suggest graphical specification language possessing formal semantics graphical images precise specifications suitable implementation 
specifications similar sketches developed category theory contrast enjoy possibility setting arbitrary signatures diagram properties operations 
important crucial step process database design schema view integration activity aimed producing global conceptual schema database set locally developed user oriented schemas views 
approach correspondence semantic schemas integrated specified equations integration procedure reduced algebraic manipulations sketches representing schemas 
provides possibility automated view integration correspondingly automated database design 
mathematical foundations approach discussed institution framework metamodeling database concepts formulated 
distinctive feature modeling query languages setting additional algebraic structure monad category specifications correspondingly databases eilenberg moore algebras monad 
specifications thought sketches databases algebras diagram operations sketches graphical algebras 
supported council science preliminary discussion category theory known high level polymorphic framework suitable specifying complex structures formalisms 
quite unexpectedly turned elementary category theory notions valuable practice software engineering summer wrote manifesto claim belief extreme incorporating category theory machinery database db area 
practical application commutative diagrams information modeling described suggests quite new methodologies area 
described bit involved algebraic machinery solves problem schema integration long time challenge information modeling methodologies tools see survey 
reviews machinery refined algebraic standpoint motivates framework entitled algebraic graph model theory databases cf 

term schema view integration refers activity aimed producing global conceptual schema database set locally developed user oriented schemas views 
integration called local schemas specified different data definition languages 
schema integration main component conceptual design part activity database design 
explains significant interest schema integration methodologies vast diversity various approaches techniques tools proposed see surveys 
date value issue increased greatly due evident tendency organizing modern nearest information systems cooperative federal principals 
context federated database systems fdbs integration function regularly performed different levels different services depending organization fdbs environment 
focus schema integration context database design extension schemas integrated virtual called views stored databases minds users application domain experts 
machinery forms base data integration 
main difficulty view integration consists managing structural conflicts view schemas occur data modeled differently different views 
normally semantic interpretations extensions local schemas overlapped due possible different perception piece reality different groups users common part modeled different constructs 
global schema obtained simple merging local schemas required certain additional information expressed language correspondence assertions correspondence local view models common data 
searching correspondence reveal necessity adding set local schemas new constructs describing semantics interschema correspondence data connecting local schemas captured 
constitutes heuristic hard formalize nature subject leads abundance ad hoc solutions methodologies see 
lot approaches classifying managing structural conflicts proposed fundamental date research taxonomy distinguishing semantic descriptional structural heterogeneity conflicts suggested 
appears informal descrip phenomenon called semantic relativism 
semantic model just rich support relativism supply user modeling constructs suitable perception 
example er data model object real world entity attribute relationship 
tion various intuitions conflicts properly encompasses diversity precise specification capable support automated integration 
phenomenon semantic relativism known formal explication words formal definition mean data structured differently 
appears semantic relativism explained precise terms general resolution structural conflicts sufficiently rich data model challenge 
conflicts little done apart setting problem declarations see 
papers proposed new approach schema database integration graphical specification language rigorously formalized semantics graphical images considered precise specifications 
similar idea developed category theory concept sketch standard 
category theorists prefer deal fixed diagram properties commutativity enjoy possibility set arbitrary signatures diagram properties 
addition possible algebraic treatment diagram properties introducing diagram operations certain part diagram result applying operation part full similarity say presenting predicate phi 
respect sketch framework employ similar fol theories written arbitrary vocabularies predicate operation symbols 
principal distinction firstly arities symbols sketches sets graphs sketches vocabulary preceding symbols secondly semantic interpretations symbols relations operations elements diagrams sets functions 
sketch framework kind amalgamation fol ordinary categorial logic framework provides sufficient flexibility practical 
approach conceptual database schema generalized sketch graph diagrams nodes arrows labeled special markers 
addition queries schema coded diagram operations denoted labeling corresponding diagrams special operation markers 
words unifying graphical mechanism denoting basic data queries 
conflicts views demonstrated diversity structural conflicts reduced single kind 
universal conflict known mathematical logic phenomenon basic operations relations sorts theory basic derived theory 
database context means data specified basic local view schema intended stored db considered derived corresponding queries local view intended retrieved computation requested 
hand semantic descriptional distinctions views specified additional correspondence information sketch sci demonstrated setting overlapping views completely specified finite set correspondence equations eci items local sketches including sci 
sketch ci syntactically similar local schemas integration local schemas turns disjoint merging sketches sn sn sn ci factorizing result congruence generated ci gluing certain items merge ci equations 
quasi formally result mentioned manipulations described phi phi sn phi sci eci denote results extending local sketches derived items result integration 
graph means directed multigraph procedure performed steps 
consists disjoint merging graphs underlying local sketches factorizing merge ci equations step performed fully automatic way 
second step consists converting integrated graph sketch integrating diagram markers local sketches 
diagram conflicts arise real conflicts views bring light inconsistency 
interestingly just real conflicts identified db theory literature 
essence resolving structural conflicts consists discovering suitable augmentations local sketches correspondence described equations 
integrated sketch integration procedure determines mappings local sketches global oe addition images mappings cover nodes arrows belongs oe provides computing extension global schema extension local ones 
great advantage sketch specification language provably 
universal follows familiar topos theoretic arguments formal data specification replaced semantically equivalent sketch appropriate type 
sketches provide real possibility handle heterogeneity consistent effective see way 
addition rigor semantics sketches possible distinguish general integration procedure parts fully automated performed integrating person db designer administrator dba 
turn phases computer aided sketch framework brings light limitations possibilities automation schema data integration 
hand experience shown sketches turn handy machinery semantic modeling integration cf 

particular convenient semi automated phases integration performed interactive mode 
addition sketch treatment integration essentially algebraic extensive integration steps reduced formal algebraic manipulations terms equations provides effective computer realization 
approach suggest provides real possibility automated integration 
call ago graph oriented specification framework integration reduced formal algebraic manipulations 
said companion aiming algebraically refined description foundation ago 
machinery admits natural algebraic treatment levels internal level data modeling operations components schema database external level metadata modeling operations schemas views databases considered entities 
relevance algebraic framework internal aspects db theory known goes back classical codd papers 
semantic issues schema integration need graph algebraic machinery 
certainly natural framework developing framework categorial logic algebra treatment queries schema diagrams classifying category proposed independently addition proposed internal logic classifying category query language 
doubts statements internal logic serve query specifications unfortunately language hardly suitable communication database designers hand users application domain experts contradicts setting view integration problem 
graph specifications convenient communication usually formalized computer implementation graphical conceptual schemas need transformed logical relational schemas 
required algebraic framework graphical diagram operations semantic schemas 
external level metadata modeling attempts develop formalized metatheory databases 
papers mapping oriented arrow approach problem suggested 
show arrow machinery allows formulate precisely multi base interoperability issues polymorphic style data models parameters 
example expression considered abbreviation composition operations schemas commutative associative 
immediately proves properties integration operation compared involved reasoning fact 
rest organized follows 
section briefly describe principals semantic modeling sketches particular familiar aggregation generalization grouping constructs 
simple demonstrating example schema integration considered section 
section mathematical framework integration problem discussed principal lines pointed 
methodologically section focus 
particular argue natural formalizable framework understanding managing issues area framework finitely presentable graphical algebras 
metamathematics databases outline institution framework query languages treated monads categories specifications respectively databases eilenberg moore algebras monads 
specifications thought sketches databases sketch graphical algebras collections sets functions endowed operations sending diagrams sets functions diagrams sets functions 
due space limitations technicalities precise definitions necessarily involved omitted forthcoming 
amast terminology constitutes report software technology developed algebraic methodology forthcoming intended algebraic foundation software 
believe order corresponds spirit amast conference 
fact nowadays database designer forced alter scylla easy scarcely formalized graphbased approaches logically clear perfect inflexible relational languages 
due evident tendency practitioner exists field today cookbook approaches poorly formed having subjective human considerations specifications mixed implementations procedural description problem statement resolving algorithm simultaneously 
data modeling sketches glance graphical images currently semantic modeling shows abundance various kinds conventional graphical constructs symbols labels markers 
specialist semantic modeling db designer uses kind semantic schemas finds suitable convenient purposes 
natural reasonable problems arise 
natural theoretical question existing collection modeling constructs sufficient specifying possible semantic constructions complete sense sense mean 
problem universality view integration techniques tools independence data model 
field strongly needs data definition manipulation language combining evidence user friendliness graph oriented object semantic models formal rigor clearness relational models 
demonstrate sketch approach provides proper respect managing heterogeneity universal framework data modeling view integration 
suggesting idea want force db designers universal specification language collection markers likes 
suggest concerns marked semantic schemas 
majority semantic schemas particularly er diagrams kind de facto standard area conceptual design modeling order specify intended semantic meaning node schema marks node corresponding label 
instance specify node relation set relationship objects tuples labels diamond 
user perceives data objects entities labels corresponding node schema rectangle 
node integrated schema labeled 
observe structural conflicts caused determining internal structure set determining structure elements relation set tuples powerset set subsets contrast thinking terms elements category theory paradigm arrow thinking suggests specify internal structure elements set characterizing labeling corresponding diagram functions adjoint set 
simple example sketch specification relations 
source mean set say equipped family functions gamma 
function fn gamma 
theta theta yn determined standard way setting fx fn 
easy see injective relation isomorphism iff family separating satisfies separation condition implies specify set set tuples safely leave set imposition constraints constrain corresponding source outgoing functions separating 
correspondingly syntax level specify node relation safely leave node marking mark corresponding source outgoing arrows label say arc denoting separation condition known idea designating key relation 
leftmost sketch fig 
describes node ternary relation 
semantics sketch extension mapping say gamma assigns sets functions corresponding nodes arrows constraint expressed arc marker satisfied family functions separating 
shown relation isomorphism 
similar arrow treatments conventional semantic constructs grouping table 
example pictures sketches fig 
explain node relation disjoint sum coproduct union image function subset powerset respectively precise formulations easily built example specifying relations described 
ffi fl oe ffi fl fl ffi oe ffi fl ae oe oe ae omega psi oe oe fig 

simple sketches 
revision conventional constructs semantic modeling shown tackling graph specifications naive way careful respecting delicate points category theory teaches lead awkward irrelevant constructions confusing terminology ambiguities quasi formal ad hoc considerations 
hand revision demonstrated necessary notions constructs familiar community intuitive implicit form 
instance familiar semantic modeling constructs aggregation generalization grouping special kinds limit colimit powerset constructions 
fact years db theory community trying manage explicitly framework connected notion constructive topos term course 
database perspective concepts leads new category theory construct called bounded topos attractive purely mathematical point view 
quite briefly informally bounded topos category finite limits colimits object family indexed relations words single universal ae theta object prb def fa ag def fb 
described corresponding universal property thomas streicher gives rise categorial definition bounded topos 
note finitary case finite subsets bounded powersets tractable contrast intractability finitary unbounded powersets 
example view integration sketches equations demonstrate main features approach suggest consider slight modification convenient expository purposes library example view integration described survey 
views universes discourse er diagrams depicted fig 
diamonds denote relations entity classes rectangles 
lines going rectangles denote attributes classes 
suppose views overlapped follows book publication semantics left view relation book publisher coincides semantics right view attribute publisher 
topic embedded keyword way attributes name code coincide relationships book topic relationships publication keyword 
description informal terminology adopted semantic modeling 
precise set theoretic meaning clear topic area name gamma gamma code book gamma gamma name publisher address keyword name code gamma gamma publication publisher fig 

er schemas integrated topic code upsilon sigma xi pi integer upsilon sigma xi pi string tname gamma upsilon sigma xi pi string area book title bo upsilon sigma xi pi string gamma bk upsilon sigma xi pi string publisher psi phi address pname pr upsilon sigma xi pi string keyword code upsilon sigma xi pi integer upsilon sigma xi pi string gamma publication title upsilon sigma xi pi string upsilon sigma xi pi string fig 

transforming er schemas sketches tak keyword gamma bap kwd gamma kwd gamma bk book bap bk pbn pbr pname oe upsilon sigma xi pi string pbr sci book book publication pname pname publisher gamma gamma bk bk pbr pr gamma gamma kwd pbn gamma gamma bk bo kwd bap title title tak code code tak tname extended correspondence sketch sci correspondence equations eci fig 

specifying correspondence information equations upsilon sigma xi pi string oe area topic tak keyword code upsilon sigma xi pi integer gamma fl fi bap kwd gamma kwd upsilon sigma xi pi string gamma bk book bap bk publication title pbn upsilon sigma xi pi string psi phi pbr pname oe upsilon sigma xi pi string pbr upsilon sigma xi pi string address mapping oe bo bk pr code tname title kwd bk bk pbr tak code tak bap title mapping oe title kwd pbn pbr title full integrated sketch si mappings local sketches fig 

integration merging factorizing upsilon sigma xi pi string oe area topic tak keyword code upsilon sigma xi pi integer gamma kwd upsilon sigma xi pi string psi phi pname upsilon sigma xi pi string book bap publication title pbn upsilon sigma xi pi string upsilon sigma xi pi string address upsilon sigma xi pi string equational constraints topic im bap pbn bap kwd generating sketch si fig 

integration ii removing redundant derived items key question automated integration express information describing schema correspondence formal way put computer 
convert er diagrams sketches fig 
add sketch specifying books publications book bap nodes framed predefined value domains semantics priori known dbms 
rectangle nodes classes extension stored db retrieved query 
note ago integer string markers precise sense hung corresponding nodes constraints imposed intended semantic interpretations 
time book name labeling node imposing constraints 
step extend original sketches nodes arrows denoting derived data correspondence schemas explicit described equations 
collection diagram operations extending table 
operation specified output sketch containing designated input semantics follows extension extensions output items belonging computed corresponding procedure 
operation arity specifies query 
proceed follows 
extend correspondence sketch sci derived arrow pbr equal composition bap fig 
marker hung corresponding diagram just denotes equality 
order obtain relation book publication apply pull back pb operation couple arrows pbr pname specify resulting relation pbr bk just relation left schema writing equations table correspondence equations fig 

similar way specify remaining part correspondence information augmenting sketches derived items writing correspondence equations table fig 

specified correspondence views formal way correspondence assertions equations 
emphasize sketch sci set correspondence equations eci built automatically 
integrating person db designer administrator possesses information inter schema correspondence carries responsibility specifying information setting sketch sci equations eci process building sketches supported intelligent graphical editor 
particular augmentation sketches derived items assisted built parsing checker verifying correctness hanging operation markers input items operation output items preceding operations 
step integration process performed 
consists gluing generally speaking give names nodes labeled integer say number 
intended semantics marked nodes fixed remains schemas adopt convention markers names printed typewriter font 
nodes labeled names printable nodes datatypes addition labeled markers expressing intended semantics names omitted 
distinguishing names markers semantic schemas precise formal description known differentiation printable classes usually treated formally 
convenient picture initial sketches colour say black derived components colour say green 
typographical reasons replace green painting derived items hanging various superscript names 
addition derived nodes arrows obtained simultaneously applying operation marked superscript superscript labels marker operation 
nodes arrows appear correspondence equations fact quotient disjoint sum graphs congruence generated equations 
resulting glued node arrow coloured green iff origins green 
result gluing fig 
consider markers moment denoted phi phi gci eci denotes graph underlying sketch symbol denotes operation quotient 
name full integrated graph refers fact graph contains necessary structural information addition derived green information 
full graph integration procedure determines mappings oe extended local sketches integrated graph 
mappings carry diagrams diagrams shape 
example diagram comes simultaneously different local sketch integrated graph immediately converted sketch called full integrated sketch fig 

general emerge situation diagram image marked diagrams different local sketches labeled different markers 
case order mark appropriate marker resolve conflict markers 
merging sketch graphs performed fully automatic way converting merge graph sketch hanging markers corresponding diagrams needs human assistance 
general undecidable see discussion section 
integration choose full sketch items contained extracted means query operations prescribed list 
call generating fig 

certainly different possibilities choosing generating discuss point detail section 
note derived green node removed source basic black arrow area 
implies imposing special equational constraint integrated sketch written graphical image fig 

equation component sketch constraint markers involved picture contrast written analytically 
briefly compare result ago integration obtained survey 
exposition purposes contrast assume class keyword attribute area attribute assigned class topic immediately 
explains difference upper integrated schema obtained survey 
difference lower shown fig 
needs explanation assumptions semantics fragment reality 
integration survey erroneous 
integrated er diagram attribute address defined publishers kinds publications books time right view fig 
assume address publishers left view publishers publications books 
spent lot time thinking formal integration algorithm gives incorrect result discussion algebraic logical aspects schema integration resolving marker conflicts said integration local sketch graphs performed fully automatic way converting integrated graph sketch hanging markers corresponding diagrams needs general human assistance marker conflicts may occur follows 
book publication publisher publisher address name book publication gamma gamma publisher address name ago integrated er diagram fragment integrated er diagram survey fig 

comparison results integration integrated graph integration procedure determines mappings oe extended local sketches mappings carry diagrams diagrams shape 
emerge situation diagram image labeled diagrams local sketches say oe oe diagram labeled marker diagram labeled marker satisfy constraints simultaneously satisfy logical conjunction 
marker conflict labeled labeled conjunction new marker abbreviating happen predicates inconsistent diagram conjunction false universally unsatisfied constraint qualified insurmountable marker conflict pointing inconsistency views 
resolving marker conflicts integrated graph consistently labeled converted full integrated sketch 
mappings oe sketch morphisms mappings sketches 
problem detecting markers inconsistency evidently undecidable 
graphbased counterpart known problem relational data model dependencies consistent known undecidable see 
special interesting particular cases decidable 
example marker hm ni hung node bounds cardinality class interpreting node greater sketch consisting single node marked hm sketch consisting single node marked hm integrated equation clearly result integration single node sketch hm phi hm hm ihm oe oe hm hm hm ni minfn insurmountable marker conflict pointing views inconsistent 
logical correlations markers exhausted consistency inconsistency 
diversity described framework ordinary logical connectives quantifiers introduce variables ranging diagrams diagram shape gives sort variables 
example may happen diagram shape satisfying constraint satisfies constraint written implication 
marker hung diagram entail marker diagram related 
example arrow source separating jointly monic entire source separating 
general set order logic theory signature markers suggested 
distinctive peculiarity logic addition logical correlations specified relationships diagrams involved formulas examples 
story specify logical structural relationships sketch language omit due space limitations 
mention fact usual topos theoretic arguments set theoretic construct described horn theory suitable signature markers 
constructive set theory interpreted general topos toposes described essentially algebraic way 
graph algebras simple example integration considered clearly demonstrates schema integration leads general database specifications schemas involving collection equational constraints expressing equality certain queries schema 
terminology tradition relational db theory call constraints type equational query dependencies eqd 
commutative diagrams special case eqd mean equality queries composed consecutive arrow compositions 
example real practice show general eqd occur situations specifying databases particular schema integration 
algebraic view point queries operations process augmenting schema derived items process free applying operations schema 
correspondingly level semantics database states algebras carriers specified database schemas operation signature query language question 
furthermore equations specifying correspondence schemas considered defining relations system generators determined local schemas names nodes arrows 
entire collection local schemas correspondence equations instance known way specifying algebras generators defining relations 
contrast ordinary universal algebra generating collections sets operations applied lists elements deal generating graphs sets functions operations applied diagrams graphs 
usual defining relations explicitly stated lot predefined defining relations satisfied universally conditional identities 
totality essentially algebraic theory logical doctrine database states assumed related 
database specification considered finite presentation classifying category database states models 
semantic issues schema integration naturally lead considering finitely presentable fp graphical algebras sets functions believe lot db theoretic problems properly stated examined framework 
words area needs graph universal algebraic machinery signatures sets operation symbols usual arity operation graph sketch designated subgraph input data 
note view point arity ordinary say ternary operation trivial node graph arrows node subgraph designated 
main difficult developing machinery find proper construction composing diagram operations 
contrast ordinary operations sets diagram ones composed diversity ways inputs outputs complex data structures specified sketches needs unified concise framework 
developed framework basic definitions providing algorithm sketch parsing unfortunately forced omit due space limitations 

speaking general subject fp algebras established focus universal algebra see standard textbooks cohn category theory see survey large bodies results known disciplines 
utilized db theory purposes immediate way 
universal algebra technique suitable subject needs graphbased algebraic machinery 
hand graphical algebras developed category theory considered fixed small collection standard diagram markers denoting universal constructs sufficient constitute toposes 
contrast semantic modeling issues schema integration needs arbitrary collections diagram markers operations similar arbitrary signatures model theory 
respect approach proposed makkai suitable 
makkai addresses completeness theorems classical sense integration focuses query operations query completeness definability sense beth see 
algebraic framework diagram operations graphical algebras possible makkai works diagram predicates diagram inference cone injectivity words terminology computation deduction paradigm interested algebra proofs makkai provability 
limitation usual categorical approaches data modeling category theory standard treat subset relationships monic arrows relevant semantic modeling 
special class constitute distinguished subcategory fact dominion sense consider merely sidestep problem 
addition mono property arrow admits equational description pull back operation algebraic characterization exist isa property external partial order collection classes involved schema introduced signature basic predicate arity ffl ffl 
metamathematics graph algebras standard categorial framework finitary monads locally fp categories suitable due internalization constructs including signatures operation symbols arities 
contrast seen area needs framework algebra carriers operation arities internalized fp objects base category graphs context signatures external sets operation symbols considered objects base category 
development graph logic algebra suitable db applications needs special elaboration internal meta levels amounts new research direction entitled algebraic graph model theory computer science see 
thought graphical algebraic counterpart direction displayed 
metatheory data modeling schema integration algebraic issue utility inferred schema integration construct closure schema sketch er diagram classifying category 
construction provides formal explication bundle db theory concepts semantic relativism information capacity schema usually treated informally worst 
speak schema integration issue appears extremely actual various ways 
choose different ways extending initial sketches state correspondence respect example characteristic 
get full integrated sketch correspondingly get generating 
various choices equational specifications correspondence information lead different results integration addition different generating integrated sketch sketches equivalent sense equality closures derived information extracted queries 
speak reason questions convenient introduce closure operator der acting schemas sketches schema closure containing possible derived items extension extracted extension items queries 
equivalent information capacity schemas listed means certainly particular tasks need finite parts concept full closure useful 
precise terms speaking formulated setting monad der category schemas schema constitutes polymorphic specification machinery data model parameter schema substitute collections relational er extended er sketch schemas der appropriate query mechanism relational algebra kind er algebra see sketch algebra 
addition subcategory sem moore der algebras designated semantic model algebras arising schema structured universes semantic objects 
schema database state schema morphism fixed sem 
der algebra extended uniquely morphism explains query mechanism setting precise morphism constituting der algebra 
fact query language ql gives rise monad der ql category schemas question 
considerable debate db literature general notion view database particular object oriented framework see 
setting notion explained quite immediate clear way 
database schema view pair oe sv schema view schema oe der ql view morphism fact morphism category monad 
soon extent database extent sv computed composition oe framework centralized db system system views specified diagram fig 

note corresponding graphical image merely picture convenient heuristic discussion precise formal specification 
integration result integrating set local schemas schema local schemas form covering system views remind correspondence sketch considered st local schema 
words result integration strict local schemas 
see framework provides precise metatheory data modeling specifically schema integration 
characteristic respect theory invoked conference organized practitioners report underlined great need languages specifying data interoperation difficult problems developing integrated systems figuring schemas data application code mean 
solution suggest fix category schema properties objects thought schemas develop formal specification framework db theory framework offered schema known ae der ql delta delta delta sn ae der sn ql oe oen ae der ql ql oe oe ql schema query language ith view oe fig 

meta schema centralized db system views categories toposes offers extremely rich specification machinery 
specifically partial answer request cited general architecture federal db system substantially described shown fig 
meta schema sketch 
depicted fig 

shown federal system external views similar system shown 
external schema data model external schema data model external schema data model phi phi phi phi phi phi federated global schema common data model federated global schema common data model phi phi phi phi phi phi xxxxxxxxxx export schema common data model export schema common data model export schema common data model phi phi phi phi phi phi component schema common datamodel component schema common datamodel local schema native data model local schema native data model component pre existing database system component pre existing database system fig 

general architecture federal db system explanation column left data model means triple schema der sem external data models ae der ql delta delta delta ak ae der ql ak translation ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi delta delta delta ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ae der ql delta delta delta san ae der san ql oe oen common federal data model ae der ql ae der ql delta delta delta delta delta cia phi phi phi phi phi phi phi phi hy ci ak na nb delta delta delta ae der ql delta delta delta ae der ql translation ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi delta delta delta ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi local data models ae der ql delta delta delta sn ae der sn fig 

meta schema federal db ordinary arrows morphisms corresponding category schema contrast nice arrows functors categories functors components data model morphisms similar institution morphisms extensively studied institution theory see 
justification nonsense precise specification compared informal schema fig 

reader familiar institution framework note constructions explained set schema mod fe schema assume additional category structure schema mod category morphisms arrows schema remarkable category structure database schemas implicitly known db theory see appendix 
usual categorial logic composition provides forgetful functors oe oe def oe couple schema mod instance specification system considered institution theory 
principal distinction approach setting additional algebraic structure described monad 
addition mod category monad pseudo sends identity morphisms isomorphism identities 
noted similar algebraic superstructure relevant institutions consider framework model theory 
morphisms theories basic operations relations sorts theory interpreted derived items theory morphisms necessary provide conceptual completeness logic question 

attempts adopt institutions metamodeling database concepts 
turned successful improper treatment queries set valued satisfaction relation 
known db theory queries operations enjoying equational constraints query languages collections operations give rise algebraic theories 
known modeled monads natural convenient way 
paradigm query language monad extremely relevant db theory 
turn satisfaction relation treated algebraically assumes additional logical structure sem algebras simplest case designated subset carrier sem algebra sentence oe oe iff oe development institution framework lines leads non trivial results explaining familiar lindenbaum tarski construction emerges provides generic models see details 
written specialist database design decade experience semantic modeling designing large databases year experience applying category theory concepts subject mathematician decade experience categorical treating logical metamathematical concepts year experience db theoretical interpretations categorical constructs 
year guess collaboration easy due obvious reasons convinced unexpectedly high relevance category theory nonsense concrete things semantic modeling database design management systems database theory 
current situation relating category theory db theory practice similar th century interaction differential integral calculi hand mechanics engineering 
excited discovery year half ago decided propagating observations brief manifesto particular predicted fast growth ct db interaction fruitful areas 
time know works johnson coauthors see publications real influence ct machinery db field 
real mutual liking ct db years old 
say relations years confirm predictions list ct db publications growing rapidly hoped int workshop advances databases special section ct db methodologies developed sydney riga meet methodological course partly technological challenges db area 
forecast intensive growth ct db interaction particular expected soon ct db line main streams amast conferences 

abiteboul bonner 
objects views 
proc acm sigmod conf 
management data pages 

astesiano cerioli 
relationships logical frames 
trends data type specification lncs pages 

barr wells 
category theory computing science 
prentice hall international series computer science 

batini lenzerini navathe 
comparitive analysis methodologies database schema integration 
acm computing surveys 

buneman davidson 
theoretical aspects schema merging 
proceedings edbt 

diskin 
algebraic graph oriented category theory 
manifesto categorizing database theory 
technical report frame inform systems riga latvia 
ftp ftp cs chalmers se pub users diskin manifest 

diskin 
algebraic graph oriented approach view integration 
part specification framework general strategy 
technical report frame inform systems riga latvia 

diskin 
algebraic graph approach management systems schema integration sketches equations 
generation information technologies systems nd int workshop pages israel 
extended available ftp ftp cs chalmers se pub users diskin 


unsolvable problems related view integration 
int conf database theory roma pages 

dayal hwang 
view definition generalization database integration system 
ieee trans 
software eng 

diskin 
algebraic graph model theory computer science 
talk accepted logic appear bulletin symbolic logic 
ftp ftp cs chalmers se pub users diskin lc abstr 

diskin 
mathematical framework comparing expressive powers different data model 
methods database design baltic int conference pages riga latvia 

diskin 
institutions incorporating algebraic logic methodology institution framework building specifications 
technical report frame inform systems riga latvia 

diskin 
formalization graphical schemas general sketch logic vs heuristic pictures 
th int congress logic methodology philosophy science 
volume abstracts florence italy page 
ftp ftp cs chalmers se pub users diskin florence 

diskin 
formalizing graphical schemas conceptual modeling sketch logic vs heuristic pictures 
technical report frame inform systems riga latvia 
appear proc th int symp methodologies information systems ismis springer lnai 
ftp ftp cs chalmers se pub users diskin kruse 

diskin 
queries schema transformations algebraic theories application categorical algebra database theory 
acta 
volume pages 
university latvia riga latvia 

bubenko yu 
program committee chairs 
proc 
nd int workshop advances databases information systems adbis moscow 
drew king mcleod rusinkiewicz silberschatz 
report workshop semantic heterogeneity interoperation multidatabase systems 
sigmod record 

ehrig orejas 
trends specifications 
proc 
icalp lncs 

freyd 
aspects topoi 
bull austral math soc 

goguen burstall 
institutions model theory specification programming 
journal acm 

goguen burstall 
study foundations programming methodology specifications institutions charters parchments 
proc int conf 
category theory computer programing lncs pages 

johnson 
value commutative diagrams information modeling 
algebraic methodology software technology amast proc rd int conf twente holland 


methods tools equivalent data model mapping construction 
advances database technology edbt pages 

larson navathe elmasri 
theory attribute equivalence databases application schema integration 
ieee trans 
software eng 

makkai 
generalized sketches framework completeness theorems 
technical report mcgill university 
appear pure applied algebra 
ftp triples math mcgill ca pub makkai sketch 


model theory computer science appetizer 
abramsky gabbay maibaum editors handbook logic computer science volume 
oxford university press 


galleries institutions 
technical report aarhus university daimi pb 

neuhold 
integrating heterogeneous information bases object views 
proc th int ieee conf 
data engineering icde 

motro 
virtual integration multiple databases 
ieee 

navathe 
years modeling methodologies tools 
entity relationship modeling er germany number lncs 

parent spaccapietra 
complex object modeling entity relationship approach 
nested relations complex objects databases lncs pages 

pitoura elmagarmid 
object orientation multidatabase systems 
acm computing surveys 

robinson 
variations algebra monadicity generalizations equational theories 
technical report university sussex 
ftp ftp theory doc ic ac uk papers 

robinson rosolini 
categories partial maps 
information computation 

scholl 
schek 
object algebra views object bases 
int workshop distributed object management edmonton canada 

larson 
federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 

spaccapietra parent 
conflicts correspondence assertions interoperable databases 
acm sigmod record 

spaccapietra parent dupont 
model independent assertions integration heterogeneous schemas 
large databases journal 

spaccapietra parent dupont 
view integration step forward solving structural conflicts 
ieee transactions kde 


views decompositions categorical perspective 
th int conf 
database theory icdt volume springer lncs pages 

hull 
approach merging persistent object bases 
th int workshop persistent object systems 

andersson dupont spaccapietra 
schek scholl 
experience 
semantics interoperable database systems ifip ds 
name arity shape designation denotational semantics separating source sigma pi oe yn fn implies monic arrow implies isa arrow inclusion ae ae covering flow sigma pi xn oe fn cover inversion oe commutativity gamma fk gamma fk maximal separating source sigma pi sigma pi oe yn fn implies yn yn fn yn disjoint covering flow sigma pi sigma pi xn oe fn implies ffl relation sigma pi oe oe implies ff gamma yg ff gamma embedding construction trivial case previous 
tradition omit marker commutativity 
considered default marker 
contrast diagrams assumed commutative marked sign table 
collection diagram constraints table 
collection diagram operations name arity shape denotational linear input sketch output sketch semantics notation image ae ff xg im composition inversion gamma graph fl ffi oe fx xg projections graph function fl ffi oe gamma fun difference fx ag push nc nc cg po universal arrow po oe oe oe oe ae pull back theta fa projections pb tradition omit marker composition 
considered default marker 
contrast diagrams assumed commutative marked sign name arity shape denotational linear input sketch output sketch semantics notation fx fx bg restriction gamma fdb element set hni ffl fi ing 
hni ae hi ae upsilon ff theta sigma ae hin hni ng hi fjg ae hni gamma set partition 
upsilon ff theta sigma ae ae ff upsilon ff theta sigma ae ae ae ffn ae bn fb hb fb ae gamma ff fa ae part attributing 
upsilon ff theta sigma ae ff ae ff ae ffn 
upsilon ff theta sigma ff ae ae hni upsilon ff theta sigma ae ae ae ffn ae hni ng ff ff attr powerset ae oe ae oe fi ae oe fg gamma ae ag theta mg fi projections gr fr power unnesting psi fi psi fi theta gr theta theta gr mb mg theta ae rb mg projections unnest article processed macro package llncs style 
