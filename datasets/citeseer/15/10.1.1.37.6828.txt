design feedback control algorithms abr service atm paolo kai yeung siu available bit rate abr service asynchronous transfer mode atm networks achieves congestion control data traffic requiring data sources adjust rates feedback network 
difficulties providing effective abr service due burstiness data traffic dynamic nature available bandwidth feedback delay 
control theoretical framework propose new design methodology abr congestion control algorithms separating problem simpler components rate control rrc queue control qrc 
rrc component matches input rate switch output available link bandwidth qrc component maintains queue level certain threshold minimizes queue oscillation threshold 
qrc component shown correct errors computed rrc component measurements queue length viewed error observer control theoretic sense 
new theoretical insights allow design congestion control algorithms achieve fair bandwidth allocation high throughput small buffer requirement presence large delay 
rigorous analysis simulation results substantiate claims 

siu laboratory information systems technology massachusetts institute technology 
please direct correspondences 
siu rm 
massachusetts ave mit cambridge ma 
email siu list mit edu 
supported part nsf young investigator awards program mip department energy de fg er 
asynchronous transfer mode atm generally considered promising transport technology integrated communication services momentum rapid standardization atm technology come data networking applications 
data applications predict bandwidth requirements usually require service allows competing connections share available bandwidth 
satisfy service requirement atm forum de facto standardization organization atm defined available bit rate abr service support data traffic atm networks 
atm forum initiated abr service idea design simple feedback mechanism sources reduce increase rates basis current level network congestion 
objective maximize effective throughput achieving fair allocation bandwidth competing connections 
minimize implementation cost early proposals single bit data cells indicate feedback information fifo queueing discipline switches 
realized single bit algorithms provide fast response transient network congestion require large buffers avoid cell loss sophisticated explicit rate control algorithms needed yield satisfactory performance 
cost implementing vc queueing separate queue connection atm switches prohibitive past switch vendors currently implement vc queueing tens thousands vcs switch architectures relatively low cost 
implementation cost atm switches continues decline vendors looking efficient congestion control algorithms 
difficulties providing effective abr service due burstiness data traffic dynamic nature available bandwidth feedback delay 
proposed algorithms abr service shown perform empirically designs intuitive ideas performance characteristics analyzed theoretical basis 
example current standards abr service quite parameters need set signalling phase establish abr connection 
commonly believed abr service performance quite sensitive changes parameters 
known tune parameters attain optimal performance complexity involved nonlinear relationship dynamic performance changes parameters 
control theoretic framework propose new design methodology abr congestion control algorithms principle separating controller key components rate control rrc queue control qrc 
rrc component determines rate command measurements available bandwidth link objective adapting input source rate match output link rate steady state 
hand qrc component computes rate command measurements queue level switch goal maintaining queue level certain threshold 
desirable source rate equal sum qrc rrc rate commands 
advantage separation principle decouples complex dynamics closed loop control system simpler control problems analytically tractable solved independently 
related lot research papers written subject congestion control sparked interest abr service atm networks see survey papers 
shall discuss papers approaches similar 
control theoretic approach analyze closed loop dynamics congestion control algorithms 
pointed author approach uses complex flow update rule part fuzzy logic amenable efficient implementation high speed networks 
control theory analyze stability properties specific congestion control algorithm 
pointed algorithm fairly complex quite difficult analyze 
congestion control problem modeled simple order system cascaded delay 
control algorithm idea smith predictor tool overcome possible instabilities caused delays network 
objective algorithm minimize cell loss due buffer overflow 
algorithm uses queue level determining rate command knowledge service rate results steady state error respect desired queue level 
sufficiently high service rates algorithm may lead utilization link capacity 
furthermore new framework allows derive dual controller structure stable estimated delay model inaccurate 
basic model control algorithm interested transient steady state responses congestion control algorithm 
steady state queue level kept minimum 
data traffic bursty nature desirable fast transient response small overshoot steady state queue level minimize cell loss 
works literature analysis fluid approximation traffic flow network 
words model assumes traffic flow infinitely divisible assume instantaneous data rate 
small size atm cell bytes large link capacity mbps oc link general fluid approximation quite accurate predicting dynamics network shown simulation results 
assume switches model vc queueing discipline separate queue vc 
assume data sources greedy 
send data allowed 
current standards abr service connection established stream resource management rm cells distinguished data cells circulate source destination 
purpose rm cells probe network congestion status carry appropriate feedback network source network switches 
rm cells incorporated model 
shall start analysis single source single node case 
basic model single source single switch connected data link 
bandwith output rate switch varies time objective request data rate source queue switch minimized throughput maximized 
section extend model multi node networks 
service rate queue size simplest mechanism control flow data source switch command user send data rate greater service rate switch 
steady state link fully utilized cell loss due buffer overflow 
available bandwidth connection varies case abr service propagation delay link prevent source reacting time changes service rates 
steady state error measuring service rate queue empty grow overflows 
mechanism involves measuring queue size switch 
switch computes user data rate order fill queue queue size 
calculated rate sent command source 
computation rate requires controller outputs rate command error actual queue sizes 
discussed link delay prevent source reacting time generating cell loss reducing throughput 
furthermore gain large system may unstable 
effective queue size instability inefficiency control mechanism actual queue size corrected incorporating notion effective queue controller 
effective queue includes cells actual queue switch cells traveling user switch cells flight cells requested rm cells traveling switch source 
words effective queue size equals current queue size plus number cells bound enter actual queue matter switch commands 
stabilizing actual queue level controller try stabilize effective queue size certain level 
advantage method switch act effective queue instantaneously command delay instability due delay 
interpretation system queue level interested modified easier control 
disadvantage approach effective queue really want control 
data rate small actual queue comparable effective queue approach useful 
data rate increases actual queue smaller effective queue 
point steady state actual queue empty data rate increase 
connections high delay bandwidth product link capacities severely underutilized 
control problem effective queue overcome making knowledge service rate 
shall examine model combined effects mechanisms 
control theoretic model shows block diagram network model general control system 
left side control system sends rate command source 
command sent source returns actual data rate 
desired queue level denoted input control system 
analysis usually assumed constant ffifl fflfi ffifl fflfi ffifl fflfi ffifl fflfi general system size estimator effective queue oe oe oe oe oe controller roundtrip delay integrator uq ur generic block diagram flow control system roundtrip delay time assumed constant transfer function feedback data channel rate incoming data integrated obtain actual queue size 
time integral service rate subtracted queue size reflect data queue serviced 
rate command sum commands service rate effective queue size information respectively 
refer subsystems outputs rate referenced control rrc queue referenced control qrc respectively 
rrc contains system necessarily linear takes input approximation service rate outputs rrc part source rate 
general model disturbance added actual service rate 
qrc contains observer estimates effective queue size 
presence rrc effective queue size defined sum actual queue size number cells requested qrc command arrive switch 
estimate compared desired queue size error fed controller determines correct rate decrease error 
model allows combination methods described preceding section 
way computing effective queue size smith predictor 
method simply adds actual queue size time number cells qrc controller requested time gamma est est estimate round trip delay 
estimate effective queue gammat est smith predictor approach estimating effective queue robust disturbances rate command constant error produce constant error 
resulting system smith predictor illustrated 
ffifl fflfi ffifl fflfi ffifl fflfi ffifl fflfi ffifl fflfi ffifl fflfi general system oe ak omega omega ae bm oe 
oe controller roundtrip delay integrator delay roundtrip integrator uq ur flow control system smith predictor single node model analysis input output relations moment assume subsystem linear time invariant lti system lti 
dynamics completely characterized terms transfer functions inputs outputs 
relevant inputs desired queue level available bandwidth service rate disturbance model errors measuring service rate 
relevant output queue size 
transfer functions inputs output respectively gamma gamma gamma transfer functions determine total response system superposition response input 
shall examine system response inputs individually 
response desired queue level ideally follow desired queue level closely fast possible 
constant steady state terms transfer impulse response function shown means close small simple efficient way obtaining results set constant resulting transfer function large follows closely low frequencies small 
furthermore impulse response order exponential followed delay 
means unwanted oscillations due step change output follows input steady state 
larger offer faster response 
practice gain constant limited frequency rm cells 
shall discuss implementation issues 
response service rate examine varies service rate 
knowledge particularly important allows switch designer determine type service rate behavior queue overflow empty 
calculation accomplished convolving impulse response system 
moment assume constant queue response impulse service rate simplifies gammau gamma gammak gammat gamma gamma ge gammak gamma gamma gamma denotes unit step function 
impulse response set parameters illustrated 
sufficiently large gain constant impulse response desirable property approximating contiguous rectangles width heights gamma response queue size due service rate time approximated gammat gamma gamma gammat approximation sufficiently close implies determined knowledge time interval gamma length equal round trip time 
service rate vary significantly respect round trip time quantity computed easily 
note depend instantaneous service rate averaged time intervals gamma gamma gamma 
means varies rapidly queue size affected long average reasonably stable 
consider effect response varying parameter assuming disturbance 
corresponds case pure qrc control negative service rate implies 
desired queue level maximum queue capacity queue overflow 
special case equivalent scheme proposed 
mentioned earlier main disadvantage steady state difference desired queue size actual queue size 
case high service rates queue empty link fully utilized 
time positive negative depending service rate 
case actual queue overflow empty 
advantage scheme steady state constant queue level equal desired level 
case queue stable link fully utilized 
obtain queue behavior weighted average previous ones 
want minimize cell loss due buffer overflow shall choose small throughput important occasional cell loss shall choose large step response continuous time model analysis system response focus step changes service rate service rate constant certain intervals time changes abruptly constant level 
change happen example new connection established available bandwidth existing connection reduced 
easy determine analytically react unit step change gamma gamma gamma gammak gammat gamma gamma gamma gamma gamma gammak gamma gamma step response denotes unit step function 
illustrates reacts unit step change different values time system received feedback information difference initial value increases time 
interesting observe varies respect time stabilizes recover change restored time previous value system stabilizes onwards 
partially recovers previous value 
frequency response interesting characteristic system frequency response 
frequency response describes reacts sinusoidal inputs different frequencies unit amplitude 
illustrates magnitude frequency response varies parameter ideally queue level remain desired constant value regardless change service rate 
mean ideal frequency response close zero possible 
model steady state response constant service rate corresponding zero desired 
steady state response constant service rate nonzero increases gets smaller 
peak magnitude frequency response frequencies decreases smaller mentioned earlier response queue level high frequency oscillations negligible frequency increases 
perturbing frequencies ones comparable inverse delay time 

frequency response jh error sensitivity analyze system sensitivity disturbance models inaccuracy measuring service rate 
algorithm purely rrc finite cause entire queue unstable overflow empty 
qrc added rrc model stable 
eqns 
see response constant proportional delayed part response 
input output relations stable 
means finite cause finite 
finite error rate measurement cause finite error real queue size 
model discussion improvements examining qrc rrc independently examine system dynamics controllers qrc rrc independently 
qrc corresponds case rrc corresponds case 
eqn 
see impulse response situation rrc gammau gamma qrc gammau gamma gammak gammat gamma gammau gamma large type control response changes service rate 
case dynamics qrc rrc working independently identical 
algorithms effective utilizing link bandwidth queue nonempty overflow 
time time queue size rate step response qrc rrc isolated systems algorithm effective stabilizing queue level 
increase steady state lead decrease 
seen step change algorithm changing time recover change time see delay response rrc qrc large causes change queue size deltaq equal shaded area gamma curves 
difference independent qrc rrc controllers arises system reaches limits linearized model 
linearity model hold longer queue emptied cells serviced queue overflows cells enter queue 
cases qrc behaves freezing rate command rrc continues moving 
queue level nonempty queue capacity qrc operating region rrc operating region 
case queue level resulting rrc constant offset resulting qrc 
general qrc algorithm generate queue level constant service rate rrc algorithm generate queue level depends cells lost buffer overflow utilized queue empty 
qrc rrc window linear operation limits rate command issue system linear regime 
example system initialized zero service rate constant desired queue level initial window operation constrained min gamma qmax umax qmax maximum queue size 
limits system enters nonlinear regime 
min cells lost due queue overflow max service slots link capacity underutilized 
case qrc window fixed constraints 
hand rrc linear operation window slides delay inside window 
width window constant max boundaries window move follow operating nonlinear regime 
qrc max min min negative 
queue overflow 
fact queue size resulting qrc reason qrc control scheme scenarios want guarantee cell loss 
disadvantage max qrc continuously missing service opportunities bandwidth 
rrc window operation takes units time follow 
delay rrc lose cells service slots 
time rrc back linear regime fully utilize link loss 
reason rrc control scheme service rate vary significantly full utilization available bandwidth main concern 
superposition qrc rrc problems associated independent controllers qrc rrc corrected combining mechanisms single controller 
original model equivalent adding output output obtain rate command 
happens desired queue level attainable throughput maximized 
shall explain algorithms complementary nature correct defects 
illustrates behavior cell arrival rate gamma combined controller positive step change service rate 
time interval change service rate system react queue size increases amount equal shaded area 
time compensates right amount previous queue level restored time notice area second shaded region region 
time equal queue size stabilized 
qrc perspective think rrc modifying net service rate gamma gamma gamma arrival rate due rrc 
rrc command follows actual service rate average net service rate qrc sees converge zero 
words qrc sees net service rate transients tries cancel net changes queue caused transient rates 
interpretation qrc sees rrc means eliminate dc level service rate causes effective queue size differ actual queue size 
way desired queue level commands actual queue size effective queue size 
rrc perspective think qrc feedback needed correct previous outputs 
seen time step change service time queue size rate time time rate step response superposition qrc rrc rate qrc causes arrival rate equal difference arrival rate due rrc time general arrival rate due qrc approximated see eqn 
gamma gamma gamma equation shows qrc corrects error rrc time superposition rrc qrc creates new linear operating window borrows characteristics rrc sliding window qrc fixed window 
new window redefined period changes 
boundaries window fixed relative 
denotes desired queue level max maximum buffer capacity boundaries new window see eqn 
boundaries window qrc min min gamma gamma gamma max max max gamma gamma combined rrc qrc scheme possible slide window operation remaining linear region 
means varies slowly follow closely cell loss missed service slots 
window argument step change service rate guarantee cell loss missed service slots cell loss deltar gamma max gamma cells deltar choosing appropriately adjust safety margins 
example choosing maximize negative range deltar minimize probability cell loss 
qrc error observer rrc interpretation qrc observer estimates error rrc measurements actual queue size 
mentioned previously rrc algorithm working tries match arrival rate service rate round trip delay time late 
delay causes queue size increase decrease period time denote rate change queue size due rrc error rrc algorithm working 
ideally want zero average 
accomplished estimating subtracting rate command rrc 
words correct creating command gammae time 
order estimate simply take derivative actual queue size yield rate change due rrc correction 
determine rate change due rrc implement observer simulates rrc system 
observer uses feedback queue size ensure states variables converge actual system 
integrator st integrator roundtrip delay gain st integrator st roundtrip delay integrator roundtrip delay gain rrc observer error rrc observer error st st delay roundtrip integrator rrc rrc correction roundtrip delay integrator gain qrc rrc qrc observer rrc error shows different stages observer realized final design equivalent qrc system 
stage shows observer independent rrc 
second stage shows modify observer gammae added correct errors due rrc 
third stage way second stage 
shows rrc error observer correction displayed second stage equivalent superposition rrc qrc 
linear control weighted rrc qrc previous sections discussed performance combined rrc qrc algorithm 
algorithm able maximize throughput 
changes rapidly safety margin large prevent cell loss 
safety margin enlarged reducing role rrc control 
model done making gain rrc controller smaller 
maximum negative step change service rate prevent cell loss gamma deltar 
gamma max gamma operating window adjusted step change done time 
gives maximum safe discrete rate decrease averaged av gammat gamma av gamma av gamma 
gamma qmax gammax note sufficiently small jump zero causing cell loss 
drawback small throughput diminished 
modifying eqn 
accordingly throughput channel steady state follows throughput min delta delta gammag queue empty link underutilized 
choosing appropriate gain rrc depends characteristics functionality system 
smaller yield lower cell loss larger improve link utilization 
service rate average low max varies rapidly qmax small preferable 
average high varies slowly large efficient 
dual control scheme section proposed general model single node data connection showed effective queue estimated qrc smith predictor 
shall alternative structure general model 
assume controller gain large 

accounting qrc smith predictor effective queue size estimated accounting method 
accounting method works adding register number cells requested switch subtracting register number cells arrived switch 
words register counts cells bound arrive switch 
sum register actual queue size gives controller size effective queue size gamma rate command switch arrival rate cells switch time zero 
qrc replacing smith predictor accounting system change behavior control 
advantage scheme estimate round trip time rrc qrc replacing smith predictor qrc accounting system cause control unstable 
order maintain control scheme need change rrc change qrc 
choose subsystem rrc lti system transfer function gamma equivalently time domain description gamma gamma new system modified qrc accounting subsystem place smith predictor modified rrc behavior previous system 
call new system dual qrc rrc system opposed primal qrc rrc system discussed 
dual qrc rrc system subsystem shown figures respectively 
moment assume dual qrc rrc system dynamics primal system 
observations section hold 
transfer functions inputs output 
note gain function dual structure primal structure 
primal vs dual rrc qrc control structure input output relations primal dual control systems equivalent structure inner functioning systems different 
general system oe oe oe oe oe controller roundtrip delay integrator ur uq integrator dual qrc rrc control st phi phi phi phi phi new subsystem dual structure primal structure observe rrc responsible requesting data traffic steady state operation 
qrc responsible correcting error rrc transients 
hand dual structure way 
qrc requests data traffic steady state rrc corrects qrc actions transients 
primal structure qrc tries correct errors due rrc needs predict behavior network 
achieve qrc uses artificial delay simulates real round trip delay network 
hand dual structure rrc predicts behavior network incorporates simulated delay 
shifting primal dual structure moving burden simulating round trip delay qrc rrc 
primal structure simulated delay qrc real roundtrip delay network 
shown difference real simulated delays cause queue size oscillate unstable 
long error certain limits queue size guaranteed stable oscillations centered desired queue size 
hand dual structure error round trip time estimate cause oscillations create instabilities 
timing error cause steady state error queue size 
real round trip delay network estimate artificial delay steady state error queue deltaq gamma applications service rate low max dual structure qrc rrc control preferable guarantees oscillations instabilities cost small proportional offset queue size 
applications large queue size offset unacceptably large primal qrc rrc structure preferable eliminates offset cost oscillations queue level 
varying dual rrc artificial delay dual rrc opens ways new variations obvious primal control structure 
specifically vary parameter suggested create different subsystem shown larger parameter cause positive part impulse response stretch smaller cause contract 
total area impulse response zero steady state error systems zero smaller corresponds faster energetic response system variations 
larger corresponds slower softer response 
part impulse response corresponds time system starting react variations 
round trip delay takes amount time results initial reaction take place 
second part impulse response shaped way dual control structure 
superimposing weighted sum delayed set second part dual impulse response arbitrary function 
single node implementation far assumed fluid model abr service 
discuss implementation issues schemes 
mentioned abr feedback information transported backward rm cells network source 
practice rm cells arrive discrete time intervals control scheme modified discrete feedback 
qrc feedback expiration natural approach discretize feedback takes advantage meaning information carried sample switch sends discrete command source saying needs cells fill effective queue level 
source accomplish sending data rate time 
time rate longer valid source shuts 
new rm cell arrives source time command new valid rate time 
rm time nth rm cell arrived command rm cell current source rate rm rm cell arrives whichever comes 
algorithm operation source switch summarized follows time queue size time queue size time queue size possible impulse responses obtained varying switch deltaq res rm min rm gamma rm gamma theta gamma res rm res rm gamma deltaq res rm gamma deltaq res rm rm gamma gamma rm rm gamma rm rm res rm rm gamma rm source qrc rate gamma rm gamma rm number cells requested rm cell interval added cells requests flight res 
sum cells requested round trip time earlier subtracted res operation discrete time implementation smith predictor 
feedback scheme enables controller gain large want 
switch request cells fill level system stable qrc integrated credit rate feedback previous qrc feedback guarantees stability specify value gain rm cell inter arrival time deltat rm large little sense large response slow 
having 
deltat rm provide marginal increases system response velocity 
large create bursty data flows incoming links disturb connections traveling links 
feedback system incorporate dynamic vary deltat rm expiration time equal proportional rm cell inter arrival time deltat rm gain valid 
interval deltat rm known interval estimate 
new rm cell arrives time rm estimate computed 
denote estimate pi rm rm gamma rm gamma rm gamma time rm cell passed 
current rm ff pi rm ff rm gamma rm gamma ff constant 
ff 
feedback samples expected expire arrival rm cell 
system responding fast feedback rate enables 
ff feedback samples expected expire arrival rm cell 
source send data period time 
effect create bursty rates incoming cells 
value constant ff 
switch needs inform source expiration time backward rm cell contain sample command rate expiration time exp sample 
note sending rate time information rm cell equivalent sending joint credit rate information 
rate perspective switch tells source send data rate certain amount time 
credit perspective switch tells source send certain amount cells rate 
integrated credit rate method sending feedback improvement purely credit rate mechanisms 
pure credit feedback source know rate send requested cells 
pure rate feedback source know long rate valid rm cells arrive 
incorporating rate time feedback information provide extra information improve performance feedback schemes working independently 
feedback rate goes infinity rate feedback perform integrated credit rate feedback 
continuous feedback case discussed previous sections 
rrc feedback feedback rrc control straightforward follows qrc feedback 
switch estimates service rate algorithms described subsection 
estimate sent source expiration time exp source receives rm cell send data rate rm cell received shutdown exp expiration time sufficiently large rate shutdown rrc rare event happens extreme cases feedback interrupted 
determining service rate extend model case users served single switch 
rate allowed vc fair rate max min sense 
assume switches vc queuing users guarantee particular channel send data switch rate faster fair rate 
furthermore vc queuing fair rate channel available rate switch 
available rate maximum rate vc cells serviced switch 
vc queue computational device estimate fair available rate vc passing switch 
case available rate vc hypothetical service rate queue particular vc empty 
case switch service vc exactly cycle round robin 
time switch services cells channel time delta needed service cell cycles times round robin available cell rate channel computed iteration delta delta min 
gamma delta min calculation requires switch count interval cells services channel 
furthermore switch perform theoretically infinite number calculations determine different channel 
exact calculation simplified considerably zeroth order iteration 
number vcs large total real number cells serviced hypothetical number cells serviced vc approximately equal 
means making zeroth order approximation quite accurate 
calculation requires switch keep count number round robin cycles performing interval time 
max approximate algorithm tend overestimate available rate channels low initial data rates 
source starts sending data overestimated rate time queue channel nonempty 
increase traffic decrease max specifically non empty queue new lower give channel exact available rate 
rate excess caused error max approximation round trip delay 
approximation cause rate overshoot round trip delay overshoot negligible large number virtual channels 
example suppose vcs passing switch vcs sending data full capacity vc sending data 
vcs receiving exact available rate vc receiving rate higher exact value 
small error persist round trip delay effects approximation error negligible 
multiple node extension section extend primal control model multi node case assuming vc queuing switch 
primal control extension multi node case switch data source destination virtual channel 
primal controller switch obtain separate information qrc rrc cell requests switch sum rate needed stabilize vc queue switch source accommodate data rate demands switches vc needs set sending rate minimum requests data rate min node lowest data rate request able stabilize queue level 
queues virtual channel nodes empty emptying 
qrc rrc control scheme described previous sections regulates flow data source bottleneck node 
refer node active node 
multi node control implemented integrated credit rate feedback discussed section 
backward rm cells carry fields information ffl total requested rate ffl rm inter arrival time time rm periodically receiver sends backward rm cell upstream source 
originally field empty second field contains time backward rm cell expected sent 
node rm cell received calculates requested rates gain rm 
field rm cell replaced backward rm cell arrives source contain lowest sum switches 
max min fairness implemented qrc rrc control algorithm multi node case observations global performance 
algorithm establishes feedback mechanism source active node vc 
dynamics vc queue active node single node case analyzed preceding sections 
single node case multi node algorithm stabilize effectively queue level active node 
steady state fully superposing qrc rrc active node queue size equal level 
nodes vc empty queues 
statement global behavior 
theorem full superposition qrc rrc algorithms multi node case provides max min fair allocation bandwidth different virtual channels 
proof steady state virtual channel include node active node queue size equal level 
service discipline round robin active node particular vc service vc slower vc passing node 
link active node vc bottleneck link vc 
vc bottleneck link rate allocation max min fair 
note weighted superposition rrc qrc qrc allocation max min fair 
sufficient high rates active node empty queue 
link active node underutilized cease bottleneck link 
vc having bottleneck link allocation max min fair 
simulations section simulation results primal qrc rrc flow control algorithm 
algorithm simulated single node case matlab simulink package 
multi node case simulated 
single node case scenario simulate consists single node network 
round trip delay source switch milliseconds 
primal rrc qrc control algorithm fully utilizes rrc 
switch operating rates cells sec 
control information sent source constant frequency maximum data rate hz 
qrc gain set rm gamma single node case simulated extensively simulink package 
single node network controller modeled adders delays gains integrators zero order holds 
model equivalent continuous time system exceptions 
feedback discretized zero order hold releases new feedback information rm cell period msec example 
second total rate requested negative minimum qrc command limited negative rrc command 
random service rate simulation service rate band limited white noise 
sampling time simulation service rate random value cells sec 
left side observe oscillations service rate 
rrc command shown follows actual service rate 
right side observe qrc command scenario 
observe real queue size changes response service rate control algorithm 
desired queue size set cells 
notice service rate changes tens thousands cells sec queue size changes tens cells 
small impact service rate queue size accordance theory states oscillations response queue size smaller frequency service rate increases 
algorithm shown stable unsteady service rates 
step changes service rate second simulation random service rate replaced service rate step changes 
service rate starts cells sec jumps cells sec seconds 
rate jumps back cells sec seconds 
left side observe time sec time sec rrc qrc commands band limited white noise service rate time sec queue size band limited white noise service rate time sec time sec rrc qrc commands step changes service rate rrc command follows service rate 
right side see corresponding qrc command 
round trip delay msec rrc command msec late 
see msec sec qrc commanding rate cell sec change rate step compensates error due rrc command lateness 
negative qrc rate subtracted rrc command 
time sec qrc commands rate refill empty queue caused lateness rrc command 
observe queue size varies time 
time sec queue size increases steadily due decrease service rate 
time sec command time sec starts effect steadily decreases queue size reaches desired level sec 
accordance theory established sections 
predicts queue size changes linearly round trip time corrected round trip time 
time sec step change service rate causes queue empty 
qrc controller respond commanding cells sec round trip delay commands just cells fill queue desired level sec 
queue size saturates queue empties rrc error step change rate times round trip delay 
qrc controller observer rrc error qrc knows decreases command accordingly 
multiple node case multiple node scenario simulate algorithm 
simulation uses multi node extension algorithm discussed section 
switch estimates service rate order iterative method shown 
estimation rrc rate performed cycles vc queue round robin ensure error 
backward rm cells routed separate channels 
switch implements vc queue servicing discipline output port 
network configuration simulating depicted 
sources time sec queue size step changes service rate source switch switch source source source receiver receiver receiver receiver switch switch subnet top multiple node simulation configuration sending data receivers respectively 
propagation delays switches msec switches users usec 
switches transmit data ports rates cells sec respectively 
single node case rm cell frequency set hz qrc gain set gamma desired queue level cells vc queues 
initialization sources sending data 
receivers continuously sending rm cells source fixed frequency 
time sec source starts sending data receiver vc 
switch slowest node active node 
time sec source starts sending data receiver vc 
switch transmit cells belonging vcs active node 
time sec source starts sending data receiver vc 
causes switch active node 
time sec source starts sending data receiver vc 
switch active node 
shows rrc commands switches compute sources 
data samples recorded time rm cell command arrives corresponding source 
initially rrc command source cell sec rate slowest link path 
source starts sending data rrc command sources cells sec half rate node share switch 
source starts transmission rrc commands sources cells sec half capacity node share switch 
source switch capacity rrc command source increased switch capacity cells sec 
source starts sending data rrc command sources cell sec half switch capacity sources increase rates cells sec respectively utilize unused bandwidth switches 
rrc commands shown max min fair sources 
see takes time delay switch source new rrc command computed switch followed source 
example time sec switch send lower rrc command source 
command reaches source time sec 
times sec switch receiving sources cells service 
error corrected rrc controller latency inherent characteristic network 
error corrected time qrc controller 
observe qrc commands arrive source 
initially source starts sending data initial qrc command high order source send initial burst cells fill vc queue active node desired size cells case 
initial burst qrc source quickly settles close zero 
time sec qrc command source goes negative order slow source 
needed source started sending data time sec switch congested 
qrc controller switch observe error caused delay request exact qrc rate needed correct error 
single node simulation qrc command negative step qrc command times sec slightly deformed due extra cells arrive switch queue fact previous qrc commands switch satisfied active node 
total area source qrc command effect identical single node case 
likewise time sec qrc command source goes negative reduce congestion switch caused activation source 
simulation small qrc commands correct small errors rrc due errors estimation actual service rate 
observe queues vc vc source receiver switches 
time sec queue active node switch fills desired queue size cells 
notice ramp close order exponential oscillations 
time sec source starts sending data switch active node queue starts increasing steadily sec round trip delay 
notice analogous situation shown single node case 
figures show behavior queue active node multi node network similar queue single node network 
time sec switch active node queue increases sec round trip delay 
qrc command forces queue size decrease desired level 
time sec switch active node 
delay source negligible overshoot 
note node ceases active queue empties 
moment time sec active node non empty queue 
rrc commands source vcs qrc commands source vcs vc output queues switches vc output queues switches observe vc queues vcs 
vc queue path size desired queue size 
queue fills soon corresponding vc starts transmitting data 
vcs queue sizes remain stable simulation rrc rate reduced 
concluding remarks control theoretic framework designing congestion control algorithms abr 
key idea separate flow controller simplified decoupled complementary parts rrc qrc 
analytic perspective qrc part primal structure rrc part dual structure seen error observer part 
analyzed dynamics algorithm single node case shown stability 
multiple node case proven max min fairness 
shown varying parameters obtain different algorithms suitable different networks fast data rate rapidly varying rate different applications needs low cell loss high throughput 
feedback control congestion packet switching networks case single congested node ieee acm transactions networking vol 

bertsekas gallager data networks prentice hall 
keshav control theoretic approach flow control proceedings acm sigcomm vol 
august 
mascolo cavendish gerla atm rate congestion control smith predictor implementation proceedings ieee infocomm vol 

murata suzuki ikeda 
rate congestion control atm networks computer communication review vol 

schulzrinne switch mechanisms abr service comparison study tdp la les france www fokus gmd de step dor 
smith controller overcome dead time isa journal vol 
february 

