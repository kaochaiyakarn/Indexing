competitive learning network diagram layout bernd meyer university munich department computer science 
munich germany bernd meyer acm org applications generate diagrammatic representations automatic layout techniques crucial component 
graph network diagrams commonly important types diagrammatic displays layout techniques graphs extensively studied 
problem current graph layout methods capable producing satisfactory results wide range graphs put extremely high demand computational resources 
introduces new layout method consumes little computational resources need preprocessing 
declarative layout algorithms costly repeated evaluation objective function required 
method competitive learning algorithm extension self organization strategies known unsupervised neural networks 
applications generate diagrammatic representations output automatic layout techniques crucial component 
automatic presentation components particular importance web setting page designer anticipate exact viewing conditions size aspect ratio particular display 
optimize presentation particular conditions encountered time retrieval automated layout methods indispensable 
graph network diagrams commonly types diagrammatic displays layout techniques graphs studied extensively number different techniques emerged 
major disadvantage current graph layout methods capable producing satisfactory results reasonable range graph types put extremely high demand computational resources 
pose severe problems small graphs 
fl ieee 
published proceedings vl september nova canada 
personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
contact manager copyrights permissions ieee service center lane box piscataway nj usa 
telephone intl 

graphs originate real world tasks re engineering easily reach sizes nodes 
cases limiting factor layout algorithm clearly demand computational resources faster method preferable speed paid limitations quality 
introduces new layout method comparison techniques consumes little computational resources 
heavy duty preprocessing costly repeated evaluation objective function required 
method competitive learning algorithm derived known selforganization strategies unsupervised neural networks 
knowledge connectionist approach graph layout 
structured follows 
section gives overview important graph layout methods 
section provides brief competitive learning kohonen networks 
section show twist perspective kohonen networks extended stochastic method graph layout 
layout algorithm intuition relation methods discussed 
experimental evaluation section possible extensions discussed section 
concluding remarks section 
graph layout methods section reviews important approaches graph layout 
detailed survey comprehensive slightly outdated bibliography 
graph layout task computing spatial embedding representation graph structure visually apparent aesthetically pleasing 
main reasons inherently difficult problem easy formalize objective criteria structured clearly aesthetically pleasing effective method layout computation partial formal definitions criteria turns corresponding optimization tasks computationally hard problems 
commonly aesthetic layout criteria ffl displaying symmetries ffl uniform distribution nodes ffl uniform distribution edge length ffl minimal number edge crossings ffl minimal number bends 
unfortunately turned optimization simplest layout objectives minimization edge crossings minimization maximum edge length np complete 
heuristics approximate optimal layout 
probably best established method model eades inspired large number related force directed methods 
evaluation techniques 
spring embedder method uses physical model graphs node viewed steel ring edges considered springs connecting rings 
starting initial random positions nodes algorithm proceeds computing forces act rings moving rings incrementally force field 
result iterative process minimizes energy state physical system 
terms geometry means symmetric layout uniform edge length approximated 
exhibiting symmetry graph having derive explicit knowledge graph symmetric properties greatest advantage method 
finding global minimum energy state computationally hard problem various possibilities approximate optimal solution 
closely related approach kamada kawai defines energy system sum differences euclidean distance graph theoretic distance nodes 
system interdependent non linear equations differences solved newton raphson method single node moved obtain better energy state 
repetition process system falls certain threshold forces system locally minimal energy state 
modern implementations force directed models stochastic algorithms 
reviewed separately 
strictly procedural methods known restricted subfields graph layout heuristics derived application area 
example specialized layout algorithms pert charts data flow diagrams er diagrams 
procedural approaches rely certain topological properties restricted graph class rooted trees directed graphs 
probably best known example procedural approach sugiyama method works layered directed digraphs strict hierarchies proceed layout computation layer layer 
optimization attempted layer avoiding global optimization 
approach yields fast restricted method 
contrast procedural approaches declarative methods emphasize importance complex userdefined layout constraints applied specific types graphs 
particular importance additional layout criteria derived structure graph need take structure depicted domain account 
variants declarative approaches mentioned grammar constraint rule methods important group stochastic techniques 
grammar approach uses graph grammars specify hierarchical decomposition input graph 
layouts subgraphs computed isolation recombined parse tree 
placement individual graph objects defined annotating grammar productions geometric computation rules 
usage context free vertex replacement possible fast polynomial parsing algorithms imposes severe limitation important graph classes handled grids planar graphs strictly hierarchical graphs 
idea parsing graph inferring constraints parse structure layout computation constraint solving 
general constraint approach highly configurable versatile rely availability generic solver required types constraints 
efficient general constraint solving possible linear equations quadratic objective functions limited subset geometric conditions captured 
general survey constraints graph drawing methods 
rule approach discussed 
uses layout stereotypes define incremental composition layout 
production rule specifies typical pattern example shape 
rule fire existent current graph extended pattern inserting processed nodes 
applied generating positions candidate nodes specified pattern generated 
backtracking supported lead unacceptable performance 
common drawback grammar rule approaches allow specify global layout criteria symmetries directly 
general optimizing visual organization graph computationally hard global optimization task 
implementation compute approximation optimal layout 
stochastic approaches done generic heuristic optimization method capable optimizing arbitrary objective function 
stochastic approaches regarded declarative methods 
best global optimization methods simulated annealing sa physical model originally applied problems operations research 
original approach graph layout sa uses cost function sums number edge crossings node distribution edge length node edge distances cost functions possible 
example generalization sa approach dimensional layout 
genetic algorithms regarded generic stochastic search global optimization method applied graph layout 
performance problematic 
major important disadvantage stochastic methods search methods com expensive particular approximation optimal solution large number iterations required 
situation worse evaluation cost function checked iteration costly checking potentially quadratic number edge crossings 
connectionist approach introduce competitive learning connectionist approach graph layout 
author knowledge connectionist methods neural networks nn studied graph layout 
somewhat surprisingly nn rarely visualization tasks despite known capabilities clustering automatic structure detection 
seen major reason graph layout difficult task computationally hard optimization problems solved 
optimization tasks particular strengths nn 
excellent solutions travelling salesman problem graph theoretic problems optimal bipartitioning may serve proof 
sufficient motivation study nn graph layout 
main advantage gained connectionist approach fast flexible layout method easily extended time trivial implement 
section briefly introduce competitive learning methods particular kohonen self organizing maps som 
course general neural networks familiarity basic concepts assumed 
interested reader refer excellent collection kohonen books papers 
competitive learning nn important distinguish supervised unsupervised learning 
supervised learning requires external teacher enables network perform predefined objective function 
unsupervised learning hand require teacher known objective function net discover optimization criteria 
unsupervised layout task hand means objective function prescribing layout aesthetics 
net discover criteria 
best known nn models unsupervised learning hebbian learning models competitive learning adaptive resonance theory self organizing map kohonen network illustrated section 
major application areas competitive learning ffl similarity rating ffl principal component analysis ffl clustering ffl encoding particular vector quantization ffl feature mapping 
basic idea competitive learning number units compete winner input signal 
winner unit adapted responds better signal 
nn typically unit highest response selected winner 
problem obviously winner selected supervision network 
solved employing recursive feedback connections net 
units competitive layer connected input units 
additionally competitive unit connected excitatory positive connection connected units competitive layer inhibitory negative connections see 
unit computes response stimulus function oe sum signals received inputs lateral connections weighted respective connection strengths oe 
happens node greatest response input increases activation self excitation time strongly inhibiting units inhibitory lateral connections 
suitable choice usually sigmoidal activation function oe lateral weights network eventually settle state winner unit active nodes activation reduced zero 
process called competitive dynamics 

schematics competitive layer switch different perspective looking weights competitive units response 
weight set represented vector 
assume input vectors weight vectors normalized vectors represented arrows surface dimensional unit hypersphere 
starting initial random distribution weight vectors task network align weight vectors input vectors seeing 
viewed clustering weight vectors input vectors moving initial random configuration left side configuration right side 
procedure realized way 
input vector net 
net settle equilibrium 
node enforce weight correction deltaw ff gamma ff suitable learning factor 
ideal competitive net single winner node response nodes hard competitive winner take learning single unit adapted 
soft learning adapts units 
unsupervised competitive networks simple structure discussing single layer nets 

adjusting weights zero updated 
terms means weight vector winning unit turned current input vector 
computer simulation course simplify situation observation process select winner 
need lateral connections need wait network settle stable state 
way network response computed faster constant time 
kohonen network far described train network perform clustering input vectors similarity rating 
taken regard spatial geometrical arrangement cells network 
biological systems spatial arrangements importance strength location neural excitation conveys information 
natural metric sensory signals talk inputs close 
enables analyze relationship proximity input signals spatial proximity resulting network excitation 
surprisingly mammal brain case spatially close regions cells respond input stimuli proximity 
mapping metric regions input space spatial regions brain abstractly metric regions output space occurs speak topology preserving feature map topographic map 
striking examples topographic maps mammal brain retinotopic map close regions retina mapped close regions cortex somatosensory map close regions body surface mapped close regions somatosensory cortex 
spatial metrics examples metrics 
map ear auditory cortex example works spatially close cells correspond hearing similar frequencies 
classical study established phenomenon orientation receptor cells react specific orientations visual stimuli grids 
spatial arrangement cells located proximity correspond similar angles stimulus 
topographic maps frequent phenomenon self organization mechanism automatically arranges corresponding wiring brain 
original studies von der showed possible competitive learning 
kohonen extended simplified model casting computationally adequate form called self organizing map som 
obviously topological feature mapping important define topology network 
topologies kohonen method rectangular grids hexagonal arrangements implying neighborhood neighborhood respectively 
network structure single layer output units lateral connections layer input units 
output units connected input unit 
allow external supervision procedure search winner adjust weights kohonen learning procedure formulated 
stimulus vector network 
find winner largest response 
adapt weights nodes neighborhood certain radius function delta gamma 

th stimulus decrease radius time dependent adaption factor neighborhood function value decreases increasing topological distance winner adapted strongly influence input decays increasing distance winning unit 
process iterated learning rate falls certain threshold 
fact necessary compute units responses order find winner 
kohonen shows select winner unit smallest distance gamma stimulus vector 
think adaption determined cooling parameter decreases adaption increasing training time decay parameter decreases adaption increasing distance winning unit narrowing parameter decreases spatial extent adaption time 
kohonen demonstrates impressively suitable choice learning parameters output network organizes topographic map input 
various forms possible parameter functions negative exponential functions produce best results intuition coarse organization network quickly achieved early phases localized fine organization performed slowly phases 
common choices gammad oe gammaff topological distance oe time dependent width factor form oe gammaff get intuitive view happening switch attention weight space network 
restrict input dimensions weight vector interpreted position dimensional space 
depicting neighborhood relation straight lines neighbors illustrates adaption process 
starting random distribution weights left hand side distinct random input stimuli positions marked black dots net normalized vectors criteria identical 

simple topographic map eventually settle organized topographic map right hand side units moved positions input stimuli 
isom layout inverting som see 
lewis carroll hunting example reveals striking resemblance trying achieve graph layout 
fact concepts topographic mapping graph layout closely related went unnoticed 
set turn back original purpose modified som graph layout mechanism 
obviously clue look weight space output response interpret weight space set positions space 
abstractly speaking som constructs metric preserving mapping dimensional weight space dimensional input space 
inspect closely look various ways intuitively interpret way som works cite think sort elastic net input space wants come close possible inputs net topology output array line plane points net weights coordinates 
words learning process stretches network nodes cluster input positions time matching topology network metric input space 
clearly quite similar task solve graph layout want find embedding nodes euclidean distance pair nodes matches graph theoretic distance 
case som course dealt simple fixed dimensional network topologies rectangular hexagonal grids 
theoretically reason totally different topologies 
fact models competitive neural networks problem domains growing neural gas different topologies topologies evolve training process 
idea train competitive network topology graph laid 
unit network identified node graph unit weight vector interpreted spatial embedding node 
analogously som expect network settle configuration nodes clustered input positions euclidean distances match graphtheoretic distances 
point reader may wonder reasonable set input stimuli training phase obtained 
distribution input positions determines final weight distribution node embedding 
solution problem surprisingly simple set points distributed uniformly input area set input stimuli 
apart eliminating need find reasonable input set uniform distribution important advantage causes net stretch fills available input space uniformly 
note method cater possible type layout area varying aspect ratios different shapes layout area pose problem 
network automatically find layout graph uses entire layout area 
note training network perform certain computation 
regard training process desired computation network trained 
contrast original som really input stimuli fixed uniform distribution 
real problem input network topology fixed original som 
reason layout model called inverted self organizing map isom 
force directed layout quickly give intuitive comparison layout methods 
force directed layout minimizing energy edges understood springs attached nodes 
springs model attraction forces forces neighboring nodes 
process computing force directed layout means find configuration forces balance 
isom hand optimizing embedding objectives graphtheoretic distance node pairs matched metric distance uniform space filling distribution nodes generated 
understand analogue forces neighboring nodes move stimulus positions analogue forces nodes trying drift apart order fill space 
objectives isom layout closely related 
main differences force directed layout uses optimization procedure achieve explicitly stated goals isom achieves byproduct stochastic self organization process 
avoids computationally hard optimization procedure isom potentially faster 
detailed analysis making algorithm precise 
just force directed layout symmetries graph automatically displayed isom layout 

planar versus non planar layout may observed theoretical reason isom prefer planar embeddings embeddings minimal number edge crossings 
observation confirmed experimental results 
despite fact layout methods give preference planar layouts planar layout automatically better non planar 
important property layout structure graph plainly recognizable 
example cube convincingly demonstrates may better done non planar layout 
fact layout solution generated isom 
isom algorithm detail isom algorithm 
apart different treatment network topology input stimuli closely resembles kohonen method 
slightly different cooling decay parameters proven useful experiments 
algorithm isom input graph output spatial embedding epoch radius max initial radius cooling factor forall pos random vector max adaption ff max min adaption gammac max delta max adaption random vector uniformly distributed input area pos gamma minimal successors pos pos gamma gammad ff pos gamma mod interval min radius gamma 
please note node positions pos take role weights som vectors corresponding operations vector operations 
note presence extra parameters minimal maximal adaption minimal initial radius cooling factor maximum number iterations 
values parameters experimentally 
experimental evaluation give experimental results small examples space permitting 
implemented java applet investigate algorithm behaviour parameter variations interested reader invited exploration 
applet available author homepage www bounce 
experiments confirm theoretical expectations show isom converges unexpectedly fast reasonable layouts 
medium sized graphs approximately nodes typically epochs required produce nice layout 

isom applet choice parameters important 
algorithm fairly robust small parameter changes network usually quickly settles stable configurations 
rule thumb graphs epochs cooling factor yield results 
initial radius obviously depends size connectivity graph max initial adaption examples 
important intervals radius decrease code typesetting examples automatically produced isom applet 
chosen major part adaption happens phase say 
final phase small adaption factors approximately cases dropped altogether 
case long phase high adaption factors advisable symmetry layout destroyed 
surprising know som dimensional network chain nodes nodes eventually arranged spacefilling peano curve phase active long 
computation single iteration inexpensive 
winner linear time logarithmic time suitable spatial index structures graph dense constant number successor nodes updated due limited radius 
nodes accessed constant time predecessor correction factor computed constant time 
graph bounded degree number epochs initial radius considered fixed entire layout computation done linear time 
interesting fact arbitrary layout area lead quite different layouts 
consider example layouts complete graph generated triangular layout area generated rectangular layout area 

complete graph 
rectangular layout free trees handled illustrates 
drawback straightforward possibility draw rooted tree usual layout conventions basic form algorithm 
happen nodes edges graph layout obscure partially position 
call clash 
theoretically types clashes occur edge edge clashes node edge 
layout free tree 
example clashes node node clashes 
node node clashes avoided choosing larger layout area choosing different cooling factors epochs final phase extended node distribution space filling 
alternative way deal node node clashes post process zooms cluster generates new local layout applying isom layout nodes zoomed area 
nodes outside area ignored remain unchanged post process 
edge edge clash implies node edge clash sufficient eliminate 
simple way achieve post process substitutes edge running node adjacent curved edge avoids node 
extensions basic schema performs satisfactory number extensions investigated 
particular possibility different metric spaces input stimuli opens number interesting opportunities 
obviously method directly applied dimensional graph layout changes algorithm 
additionally currently exploring possibilities generate fisheye views circular stimulus area non uniform distribution 
idea clamp elements focus center area input distribution density increasing center periphery 
way space filling property achieve higher density nodes periphery center 
experimenting extension method rooted trees applying second dynamic layout phase transforms free tree layout rooted tree 
interesting direction combine isom methods structured graph decomposition graph grammars algorithms finding planar subgraphs 
subgraphs laid separately layouts recombined global layout structured manner 
particularly interesting layout graphs aesthetics governed different rules 
theoretical perspective statistical analysis network behaviour desirable 
far suitable values layout parameters experimentation 
great improvement develop statistically justified heuristics estimating suitable parameter values 
notion network energy state useful 
customary fruitful method look neural network learning methods point view energy minimization rarely done kohonen networks 
steps reported 
notion key thorough theoretical analysis isom reveal formal connections force directed layout 
introduced isom layout method extension competitive learning algorithm self organization kohonen networks 
author knowledge connectionist approach automatic layout 
interesting note solutions hard optimization problems simulated annealing models genetic algorithms neural networks ant colonies isom inspired natural metaphors 
major advantages isom extremely simple implementation consumes little computational resources comparatively fast 
advantage flexibly adaptable type shape dimension layout area different metric spaces 
planning investigate threedimensional layout complex output spaces fisheye lenses projections spherical surfaces 
furthermore intend investigate network behaviour concept energy state intuition addition experimental results supported formal analysis 
anderson rosenfeld editors 
neurocomputing 
mit press cambridge ma 
brandenburg 
designing graph drawings layout graph grammars 
tamassia tollis editors graph drawing gd pages princeton nj october 
springer 
brandenburg editor 
graph drawing gd 
springer passau germany september 
brandenburg himsolt rohrer 
experimental comparison force directed randomized graph drawing algorithms 
pages 
cruz 
graph drawing simulated annealing 
pages 
davidson harel 
drawing graphs nicely simulated annealing 
acm transactions graphics october 
eades tamassia tollis 
algorithms drawing graphs annotated bibliography 
journal computational geometry theory applications 
dorigo maniezzo colorni 
ant system optimization colony cooperating agents 
ieee transactions systems man cybernetics 
eades 
heuristic graph drawing 
congressus numerantium 
frick 
integration declarative approaches 

fritzke 
competitive learning methods 
unpublished manuscript 
www neuroinformatik ruhr 
de ini vdm research april 
sejnowski 
unifying objective function topographic mappings 
neural computation 
grossberg 
competitive learning interactive activation adaptive resonance 
cognitive science 
marriott 
constrained graph layout 

hertz krogh palmer 
theory neural computation 
addison wesley redwood city ca 
hubel wiesel 
receptive fields binocular interaction functional architecture cat visual cortex 
journal physiology 
kamada kawai 
algorithm drawing general undirected graphs 
information processing letters 
kohonen 
self organized formation topologically correct feature maps 
biological cybernetics 
kohonen 
self organization associative memory 
springer new york 
kohonen 
self organizing maps 
springer new york 
marks shieber 
automating layout network diagrams specified visual organization 
ieee transactions systems man cybernetics 
luttrell 
bayesian analysis self organizing maps 
neural computation 

graphic object layout interactive genetic algorithms 
ieee symposium visual languages pages seattle wa 
north editor 
graph drawing gd 
springer berkeley september 
sugiyama 
cognitive approach graph drawing 
cybernetics systems international journal 
tamassia 
constraints graph drawing algorithms 
constraints international journal 
von der malsburg 
self organization orientation sensitive cells striate cortex 
kybernetik 
