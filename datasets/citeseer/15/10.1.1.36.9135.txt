fast intuitive clustering web documents oren zamir oren etzioni madani richard karp department computer science engineering university washington box seattle wa zamir cs washington edu conventional document retrieval systems alta vista return long lists ranked documents response user queries 
document clustering put forth alternative method organizing retrieval results cutting :10.1.1.34.6746
person browsing clusters discover patterns overlooked traditional presentation 
describes novel clustering methods intersect documents cluster determine set words phrases shared documents cluster 
report experiments evaluate clustering methods collections snippets returned web search engines 
show word intersection clustering produces superior clusters faster standard techniques 
second show log time phrase intersection clustering method produces comparable clusters orders magnitude faster methods tested 
conventional document retrieval systems return long lists ranked documents users forced sift find relevant documents 
web problem exacerbated high recall low precision search engines alta vista 
typical user trouble formulating highly specific queries take advantage advanced search options 
problem gets worse web continues grow 
attempting reduce number documents returned filtering methods shakes langheinrich etzioni attempt search engine results easy browse 
investigate document clustering method enables users efficiently navigate large collection documents 
addition clustering enables user discover patterns structure collection overlooked traditional ranked list copyright american association artificial intelligence www aaai org 
rights reserved 
presentation 
context document clustering method requires 
ease browsing user needs determine glance cluster contents interest 

speed web users expect results seconds 

scalability method able quickly cluster thousands documents 

snippet tolerance method produce reasonable clusters access short document snippets returned search engines users unwilling wait system download original documents 
describe experimentally evaluate novel clustering methods meet requirements varying degrees 
document clustering document clustering traditionally investigated mainly means improving document search retrieval 
technique named scatter gather cutting introduced document clustering document browsing method :10.1.1.34.6746
follows paradigm 
hierarchical agglomerative clustering hac algorithms commonly methods document clustering willet 
algorithms start document cluster iterate merging similar clusters terminate halting criterion reached 
hac algorithms require definition similarity function documents sets documents 
document typically represented weighted attribute vector word entire document collection attribute vector 
similarity documents taken normalized function dot product attribute vectors 
halting criteria hac algorithms suggested milligan cooper typically predetermined constants halt clusters remain 
hac algorithm backtrack sensitive halting criterion algorithm mistakenly merges clusters resulting cluster meaningless user 
domain search engines receive irrelevant snippets snippets correlation query snippets 
sort noise reduces effectiveness commonly halting criteria 
hac algorithms typically slow applied large document collections 
single link rijsbergen group average methods typically take time complete link methods typically take time voorhees 
terms quality hand complete link algorithms shown perform comparative studies document retrieval voorhees tend produce tight clusters clusters documents similar 
single link lesser degree group average methods exhibit tendency creating elongated clusters 
elongated clusters undesirable property documents cluster similarity small 
experience web domain algorithms produce elongated clusters result large clusters plus extremely small ones 
lead clusters 
discussion suggests traditional document clustering methods fail meet requirements listed 
methods generate elongated clusters easy browse difficult determine glance contents cluster 
furthermore time clustering slow web users 
experience shows standard techniques perform poorly short noisy snippets web documents 
word intersection clustering word intersection clustering word ic new method designed address problems mentioned 
word ic results tight clusters motivated halting criterion captures desirable trade number clusters size cohesion 
word ic hac algorithm relies novel global quality function quantify quality clustering 
heuristic guide hac algorithm halting criterion 
iteration hac algorithm denotes number documents clustered 
number words document assumed bounded constant 
clusters union result highest increase merged 
algorithm terminates merge increases ll describe definition cluster cohesion central define cohesion cluster number words common documents cluster 
define score single cluster product size jcj cohesion 
score singleton cluster defined 
clustering product components function proportional fraction documents non singleton clusters 
component captures notion singleton clusters bad 
jcj jcj increasing function number nonsingleton clusters 
component captures notion fewer clusters better 
sum scores clusters clustering 
jcj notice factors jcj create tension extremes having small number large clusters low cohesion vs having small clusters high cohesion 
provides tradeoff extremes 
investigated different functional forms components experiments revealed results obtained simply ratio number documents non singleton clusters number documents jcj number nonsingleton clusters raised power 
word ic performed time 
result classification documents cluster contain certain terms belong 
word ic set common words centroid cluster user concise description contents 
believe approach results high quality clusters documents cluster share words centroid 
experimental results section show word ic faster results higher quality clusters commonly group average hac algorithm cosine inter document similarity function 
phrase intersection clustering suffix trees standard document clustering paradigm word ic treats document set words arding word sequences 
conjecture word proximity information may valuable cases 
furthermore clusters centroid shared phrase particularly easy browse 
observations formulate phrase intersection clustering phrase ic novel intersection approach looks phrases common group documents indication group cohesion 
hac algorithms mentioned previously time complexity obstacle speed scalability goals 
phrase ic suffix trees weiner log time algorithm results large speedup degradation quality 
suffix tree set strings compact trie containing suffixes strings 
application construct suffix tree documents 
node suffix tree represents group documents phrase common label node represents common phrase documents corresponding leaves descendants node group 
node viewed potential cluster 
node assigned score function length phrase words appearing number documents cluster 
nodes sorted score 
clusters determined directly sorted list potential clusters simple selection algorithm 
notice selected clusters may overlap 
believe feature advantageous user topics overlap 
selecting clusters display sure overlap selected clusters high 
currently exploring option merging potential clusters high overlap 
space requirement suffix tree constructed time ukkonen 
suffix tree built incrementally documents arrive 
allows free cpu cycles system waits additional documents 
number potential clusters sorting selecting user performed log time 
preliminary experiments hard measure quality clustering algorithm know correct clustering test cases 
chose apply algorithms snippet collections created merging distinct base collections 
scored resulting clustering measuring deviation original partition snippets base collections 
created base collections snippets returned metacrawler selberg etzioni response different queries 
queries contained keywords defined topic computer science kernel architecture biology computational compiler 
base collection contained approximately snippets snippet contained words average 
test collections created merging randomly chosen base collections giving test collections ranging snippets size 
test collections size created total test collections 
need scoring method compare original partition snippets base collections algorithm generated clustering 
look pairs documents single cluster count number true positive pairs documents base collection false positive pairs 
quality clustering function difference quantities normalized size collection clustered 
quality score means perfect reproduction original partition 
number base collections word ic phrase ic word ic cos number snippets word ic phrase ic word ic cos quality clusters produced different algorithms 
execution time different algorithms 
execution time algorithm seen scale shown clusters snippets seconds 
algorithm exhibits tradeoff quality speed achieves high quality clusters log time 
compares quality clusters produced algorithms function number base collections merged 
compare clustering algorithms group average hac algorithm cosine inter document similarity function referred cos commonly document clustering algorithms 
word ic includes principal components definition cohesion investigate definition cohesion influences cluster ing measured performance variation word ic algorithm algorithm defines similarity clusters cohesion cluster formed merging clusters cohesion defined word ic 
performs hac algorithm merging step similar clusters terminates halting criterion cos 
top see omitting degrades performance word ic 
algorithms show expected quality degradation number merged base collections increases 
cos algorithm performs poorly experiments 
fact clustering short noisy snippets probably contributes poor quality results 
word ic shows highest quality results 
advantages seen comparing word ic regular word ic 
believe mainly due motivated halting criterion algorithm 
suffix tree clustering algorithm produces results worse produced word ic 
compare execution time algorithms clustered snippet collections snippets dec alpha station mhz ram 
algorithms implemented optimized degree 
presents results experiment 
times measured actual times spent clustering including idle periods system waiting snippets arrive 
cos algorithm slower intersection ones requires longer attribute vectors 
adds constant factor execution time word ic added complexity 
performance suffix tree clustering algorithm seen scale shown clusters snippets seconds 
experimenting system certain queries lend nicely phrase ic queries 
word ic phrase ic yield complementary presentations collection need viewed alternatives allow user view results algorithms 
interesting question users find multiple sets clusters worthwhile visualization techniques best task 
question answered clustering results change download original documents web 
result substantial improvement quality improvement outweigh increased delay 
currently deploying clustering module top metacrawler enable conduct user studies aimed answering questions empirically 
described experimentally evaluated novel clustering methods enable users quickly navigate results web search engines word phrase intersection clustering 
phrase ic suffix trees log time algorithm appears promising terms stringent requirements outlined including ease browsing speed scalability 
course additional experiments extensive user studies necessary definitive claims performance algorithms practice 
acknowledgments ronen feldman early discussions erik selberg help integrating system metacrawler 
sigal important contributions implementation 
research funded part office naval research arpa rome labs gift rockwell international palo alto research national science foundation iri 
cutting karger pedersen tukey 
scatter gather cluster approach browsing large document collections 
th international acm sigir conference research development information retrieval 
milligan cooper 
examination procedures detecting number clusters data set 
psychometrika 
rijsbergen 
algorithm information structuring retrieval 
computer journal 
selberg etzioni 
multi service search comparison metacrawler 
proc 
th world wide web conf 
shakes langheinrich etzioni 
ahoy 
home page finder 
proc 
th world wide web conf 
ukkonen 
line construction suffix trees 
algorithmica 
voorhees 
effectiveness efficiency agglomerative hierarchic clustering document retrieval 
ph dissertation cornell university 
voorhees 
implementing agglomerative hierarchical clustering algorithms document retrieval 
information processing management 
weiner 
linear pattern matching algorithms 
th annual symposium foundations computer science focs 
willet 
trends hierarchical document clustering critical review 
information processing management 
