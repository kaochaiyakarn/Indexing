suede wizard oz prototyping tool speech user interfaces scott anoop sinha jack chen james landay annie wang group user interface research cs division eecs department university california berkeley berkeley ca usa landay cs berkeley edu berkeley edu speech user interfaces growing popularity 
unfortunately technology expertise required build speech uis precludes individuals participating speech interface design process 
furthermore time knowledge costs building simple speech systems difficult designers iteratively design speech uis 
suede speech interface prototyping tool describe allows designers rapidly create prompt response speech interfaces 
offers electronically supported wizard oz woz technique captures test data allowing designers analyze interface testing 
informal tool enables speech user interface designers non experts quickly create test analyze speech user interface prototypes 
keywords wizard oz speech user interfaces prototyping design low fidelity informal user interfaces design tools speech user interfaces appropriate graphical user interfaces settings common user interface paradigm near 
speech user interfaces difficult design 
speech uis hard prototype due high costs terms time technology expertise required build 
iterative design difficult results poor user interfaces 
developed interactive prototyping tool called suede address problem 
suede lightweight easy design tool concepts example test scripts prompt response state transitions wizard oz studies analysis user study data 
speech uis today graphical user interfaces guis users communicate ways naturally human beings 
additionally non trivial percentage population blind trouble seeing words ordinary age 
limited literacy skills age typing skills hands 
standard gui users situations users moving hands eyes interacting person 
enjoy benefits ubiquitous computing need newer better interface paradigms 
speech user interfaces paradigm successfully address aforementioned problems 
supporting speech interface designers researchers industry analysts believe speech user interfaces commonplace number factors hinder incorporation everyday 
key limiting factor speech interface design lack basic knowledge user performance computer spoken interaction 
interaction designers contribute body knowledge excluded speech design complexities core technologies formal representations specify ing technologies lack appropriate design tools support iterative design 
complex recognizer synthesizer technologies inherent speech ui require high level technical competency understand 
systems generally large number knobs parameters adjusted order get optimum performance 
previous research studying visual design tools showed knobs designers spend hours manipulating parameters exploring design space 
effective method constructing high quality user interfaces iterative approach 
requires fast repeated cycle design prototyping evaluation 
successful speech interface design tool easy learn require little programming expertise support rapid creation testing modification interface designs 
requirements form 
suede design mode allows easy creation example scripts top speech ui designs bottom 
basis user interface prototyping tool targeted interface designers 
grammar state machine representations design speech systems formal 
awkward contrast informal concrete representations scenarios sketches storyboards designers commonly employ explore design ideas examples :10.1.1.114.3319
designers typically start usage scenarios move abstractions time 
basic mismatch approach important issue resolved tool successful 
previously argued informal interface approach unrecognized natural input sketching speech successfully supports designers early stages design 
tools designers encouraged explore design space detail design idea far 
suede embodies approach 
rest organized follows 
give overview design test analysis methodology practicing speech ui designers supported suede 
section describe detail suede supports early stages speech user interface design process 
give overview system implementation 
review related prototyping methodologies tools speech user interface design 
finish plans 
design test analysis methodology suede design interviews speech ui designers industrial research sri sun microsystems laboratories development organizations nuance communications sun microsystems 
suede interface organized important phases designers perform early stages design design test analysis 
design phase creating conversation examples see top 
examples evolve provide foundation actual interface design shown progress bottom 
test phase try design target users 
analysis designers examine collected test data deciding influence design iteration 
problems real world speech user interfaces arise users know say speak outside system grammar say misrecognized system 
designers spoke wanted help analyzing test data deal types errors 
developed design test analysis methodology explicit model interface design tools result remarks edward tufte presenting data information seminar december san francisco 
tufte argued usability testing practiced today entails repeated cycles design test resulting ui popularity contest 
argued design process repeated application design analysis 
believe approaches insufficient approach successful design usability specialists repeated application design test analysis 
suede provides interface mode tasks see figures 
suede works explain functionality suede example designing telephone speech interface reading sending email system 
typical session system starts prompting user name asking want read email send email get summaries hang 
design mode speech designers design process writing linear dialog examples word processor 
suede allows linear dialog examples created horizontally top area called script area design mode see top 
prompts recorded designer phrases computer speaks 
responses phrases participants response prompts 
system prompts alternate user responses accomplishing different tasks 
orange prompt cards script represent system speech prompts green response cards represent example responses enduser 
designer record voice speech types cards type corresponding label cards 
playing recordings left right designer see hear example interaction 
see second script top designer recorded alternating prompts responses hello name annie read email messages read message jack important 
creating examples typically index cards small pieces designer creates flowchart representation dialog flow 
suede constructing example scripts working familiar dialog flow designer starts construct design graph representing actual interface prototype see bottom 
design graph represents dialog flow user responses system prompts 
designs created dragging cards script design area creating new cards design area linking dialog flow 
orange script cards orange prompt cards design area 
green script cards green response links design area 
important interaction techniques illustrated diagrams dragging orange script prompt card design area creates orange prompt card 
dragging green script response card canvas area creates green response link design graph 
dragging script response card existing design graph prompt card creates outbound response link prompt 
left mouse drag gesture cards creates link 
dragging background prompt creates global 
globals groups voice balloons suede supports special types prompt cards called globals groups mechanism called voice balloon parameterizing prompt test participant actual speech response 
global speech command spoken time user test session main menu help test mode clicking global transition participant connected prompt card 
group set prompt cards possible prompts specific participant response 
example prompt welcome weather system response weather san francisco prompt group sunny raining example message options group containing possible prompts resulting read email command 
wizard option choosing replies participant testing 
logical structure interface 
designer message options group enable wizard test different scenarios yielding interface appearance database backed fully implemented system probably 
groups tapering speech technique different prompts number times prompt previously played 
groups give different error messages different participants 
voice balloon corresponds filling blanks directed dialog system user responses subsequent prompts 
participant unmodified recorded audio automatically spliced prompt 
example prompt flight response air prompt day take flight response tuesday prompt schedule air tuesday voice balloons added prompt follows voice balloon added card dragging response link prompt card 
voice balloon represents run time response test participant 
prompt design time placeholder participant utterance 
flight scheduling example designer created voice balloon corresponding user response prompt flight voice balloon dragged prompt schedule resulting schedule 
run time filled user response prompt 
scalable design visualization designers spoke building prompt response interfaces nodes 
designer currently visio early stage design felt frustrated designs spread dozen pieces visio designs fifteen nodes page 
interested having entire design fit display 
suede supports scaling ways 
scrollbars allow designers pan interfaces larger screen 
importantly prompts groups shown different scales 
largest prompts display full text prompt audio controls prompt 
default prompts display line text audio controls prompt 
smallest prompts display line text record play controls prompts inside message options 
groups similar scales 
large scale displays prompts full size 
default groups display prompts compact size message options 
compacted groups display title 
designers switch representations gesture 
left mouse gesture upward expands prompt group left mouse gesture downward contracts prompt group 
test mode suede designs immediately executed clicking test button 
designer try design ideas soon created need speech back 
speech recognition speech synthesis necessary create prototypes suede 
wizard oz methodologies long tradition design speech systems 
conventional woz studies designers test scenarios manually walking different steps dialog flow 
wizard simulates dialog transitions computer reading system prompts participants processing responses 
suede designer switches test mode clicking test button upper right corner main 
test mode web browser allows wizard focus current state ui top available responses state bottom 
screen see 
designer switches test mode suede generates appropriate html file prompt card design graph 
hyperlinks page represent corresponding response links possible card 
clicking link moves card card 
testing window browser interface see 
screen broken distinct sections top bottom session menu transcript current session barge timeout controls html page valid user responses current prompt card 
global responses available pages 
test mode wizard works front computer screen 
participant performs test away wizard space speakers hear system prompts microphone hooked computer record responses 
wizard starts test session suede automatically plays pre recorded audio current prompt card 
wizard waits test participant respond clicks appropriate hyperlink response 
course test session transcript sequence generated containing original system audio output recording participant spoken audio input 
wizard job click appropriate controls links test interface html area see bottom 
suede incorporates functionality automatically insert simulated speech recognition errors described error modeling section 
wizard monitor progress session transcript area top test interface shows prompts played far matched responses 
continuing example see test session just played participant respond write email please wizard interpret user response click send email link 
note distinct choices read email illustrating test view suede group structure 
test time wizard choose grouped prompts transition 
speech recognition system underlying wizard oz test early stages design wizard opportunity accept alternative inputs 
example wizard accept send want send write email valid utterances send email response link 
actual audio responses recorded associated response link reviewed analysis mode help determine input grammar final design 
error modeling session menu area parameter marked errors 
value sets simulated speech recognition error 
wizard running system suede insert random errors real speech recognizer described 
random error happens suede overrides wizard choice informs fact randomly chooses possible links page 
wizard tasked mimicking error rate 
representative example random error follows prompt day fly response thursday prompt flights tuesday typical participant response scenario response meant thursday handling situation part robust speech interface design 
recording participants say response errors helps designer analyze handle errors design iterations 
plan extend suede allow automatic backup previous prompt assist handling types errors 
timeouts speech interfaces treat lack response certain time window timeout error 
common strategy timeout interfaces repeat played prompt hope participant able respond case hear prompt time 
clicking timeout button test mode executes behavior 
sophisticated timeout handling response give cooperative incremental feedback participant 
suede incremental feedback modeled prompt groups response links 
barge barge fairly sophisticated speech interface technique participant responds prompt prompt played 
especially important conversational interfaces prompts long repetitive 
suede allows wizard simulate barge stopping current prompt switching recording audio barge button pressed 
manual nature button pressing process capture response audio 
real speech systems automatically recognize barge incorporate feature ease burden wizard completely capture participant response 
transcript entire participant session recorded set prompt cards response links transcript area test interface see top 
transcript appears test participants script area analysis mode see top 
analysis mode designers take notes test sessions 
enlist help help keep track statistics tests 
suede eases burden statistics collection automatically recording audio automatically 
analysis mode displays transcripts user test sessions top annotated version design summarizes aggregate test results bottom 
annotated version provides ability hear set responses particular link 
creating transcripts events providing means accessing data 
data collected test mode displayed analysis mode see 
analysis interface similar design interface top screen contains user transcripts test sessions just examples annotated version design graph displayed design area 
annotated design includes information number participants took particular path actual responses long took respond prompt 
pleasing duality designer examples actual session transcripts 
testing statistics collected number participants traverse path design 
switching analysis mode displays statistical information 
response links scaled width show number times link traversed user sessions 
counters displayed response link show number times link traversed 
visualizations give designer feel parts design need optimization parts may need 
collecting examining data real users designer understand bad features design iteratively improve 
continuing example see test participants followed read email link participant followed send email link see bottom 
audio user session available script area designer review specific responses prompt 
analysis mode allows designer review responses participants specific prompt directly design graph node clicking link counter illustrated read email node 
examining test transcripts reviewing individual responses aids transition formal input grammar final interface design 
analysis visualization shows average time took participants respond prompt 
represented length time bar lower right response link 
coarse feedback glance suede presents time bar green average response time short yellow medium response time red long response time 
mentioned previously problems speech interfaces arise users know say say invalid words system recognition errors 
suede addresses issues support tool 
displayed timing data lets designer see participants paused test dialog possibly indicating participant know say 
playback transcript allows designer hear participants thought say point 
designer manually text transcriptions data editing card labels transcript area textual transcriptions help generate input grammar 
error simulation allows designer see participants cope recognition errors interface designs 
resulting test data designer appropriate design decisions flow interface proper input grammar design 
speech interface styles linguists shown human computer conversation quite different human human conversation :10.1.1.56.3398
offer characterization current speech interface application styles largely survey existing speech systems 
simple prompt response interfaces automated call routing interfaces united airlines larger vocabulary command interfaces portable voice controlled system storing navigating retrieving recorded lists interactive speech car guidance system system browsing collection hyperlinked audio segments 

full sentence conversational interfaces speech acts calendar office monitor developed sun personal assistant system manages contact lists answers places calls manages voice mail messages 

dictation orientated applications dragon systems dragon dictate ibm 

speech manipulating interfaces speech system scanning collection speech segments speech document editing system 

multimodal applications multimodal maps pen speech input 
designed suede support speech interface styles 
current form suede suited prototyping applications alternative modes feedback text dictation graphics multimodal application involve manipulating editing audio 
implementation suede implemented sun java jdk package audio java awt java swing java packages graphics 
built custom set vector graphics widgets create visual representations 
suede software architecture employs model view controller paradigm 
manages scripts prompts cards responses links displayed screen 
individual items corresponding visual view corresponding reusable audio data structure supports multiple audio streams 
suede uses xml file format file implemented top java xml parser 
related suede inspired previous low fidelity prototyping wizard oz studies existing systems prototyping testing speech multimodal user interfaces 
low fidelity prototyping low fidelity prototyping popular design evaluation technique prototype systems quickly easily 
suede aims provide benefits speech interfaces rapid prototyping testing little expert knowledge necessary 
ordinary low fidelity prototyping fallible task complexity wizard human computer simulates prototype 
suede employs computational element perform operations concert wizard user test stimuli interface logic correctly participants 
primary goals research test mode simple possible wizard react quickly accurately test participant responses 
suede offers manageable visualization interface design offered domain independent flowchart tools visio 
addition suede designs stored form may allow semi automatically converted fully working systems done sketched guis silk 
wizard oz studies tools toolkits wizard oz technique years simulate speech recognition systems performing low fidelity tests proposed design ideas user studies finished interface designs :10.1.1.56.3398
standard wizard oz study human simulates speech system 
participants hear prompts read wizard face face remotely computer intercom phone 
decide prompt read wizard follows script flowchart participants responses 
suede electronic support woz testing improves traditional woz making easy carry repeatable tests keep track happens test sessions 
designer easily capture review evaluation statistics specific parts interface 
yankelovich frequent pre design studies speech acts 
studies involve observing natural dialogues people target setting performing woz simulations speech system design office monitor 
pre design studies important component speech interface design goals easier designers carry 
suede session recording analysis features data generated studies easily accessible valuable 
system platform study multimodal systems sri open agent architecture toolkit implementing multimodal applications 
attempt improve difficult task designing multimodal user interfaces woz techniques 
systems require functioning software written testing 
contrast suede oriented early stage speech ui design software requirement 
freedom requiring completed software creating interfaces suede accessible designers typically 
suede woz methodology performing automated speech recognition offers advantage designers worry early stage participants different accents genders matter language speaking 
woz process especially appealing non english uis current recognizers generally perform worse english 
speech ui construction tools existing speech ui construction tools similar suede respects rapid application developer rad natural language speech assistant 
rad combine speech recognition speech synthesis wizard oz technique integrated tool building speech applications 
suede tools visual state machine representation speech ui 
rad oriented specifying testing implementing finished application interface 
imagine designer prototyping testing suede transferring concrete design idea add details create test final implementation 
possibly code additions similar ways suede informal user interface appropriate early phase design 
earlier gui design tools showed letting designers ignore details fonts colors alignment enabled focus interaction design 
speech user interfaces need adjust recognition parameters tempting 
suede woz mode recognition part tool offers support creating synthetic errors woz studies suede oviatt 
addition rad offers tools analyzing test data 
instance suede record undefined utterance associated transition 
lets designers know things users say 
common limiting factor tools state metaphor appropriate prompt response interfaces 
released suede speech design community evaluate scenarios appropriate 
see berkeley edu suede discussed suede professional speech ui designers 
common interest way migrate suede interfaces development environments various speech recognition systems 
plan extend suede analysis tools support grammar creation standard speech recognition system 
suede open source interested parties add additional modeling test mode reflect characteristics systems 
suede supports early stage speech interface design 
informal tool suede offers significant flexibility designers 
adding sophisticated support speech design features tapering error handling cooperative prompts possible model right 
logical extension allow suede designs function reusable components higher level designs 
extend test mode collect additional user session data wizard annotations 
analysis mode information help designer evolve dialog design 
suede ability save designs disk xml format provides primitive method design versioning 
develop sophisticated versioning strategy designer compare past designs current designs 
speech interface design problem complicated know advance users say speech system 
high quality speech user interface developed iterative design evaluation 
suede significant progress support early stages process 
interviews suede design test analysis paradigm maps quite speech designer mental process 
designers scripts initial concrete examples 
suede supports process 
script facilitates designer reflection building dualism script transcript helps close iterative design loop 
high level frustration associated speech interfaces current incarnation may prevent preferred customers 
problem believe medium design design speech interface users come value system 
cindy chen help developing software david testing suede creating software download online manual 
greatly appreciate jason hong james lin sage java advice comments drafts 
designers spoke nuance sri sun insight offered speech design process 
reviewers valuable feedback insight 

arons navigating speech hypermedia proceedings acm hypertext 


arons system interactively skimming recorded speech 
acm transactions computer human interaction 


balbo coutaz salber automatic evaluation multimodal user interfaces proceedings international workshop intelligent user interfaces 


black visible planning screen impact working medium decision making novice graphic designers 
behaviour information technology 


buchanan computers communication design exploring rhetoric hci 
interactions 


carroll scenario design envisioning technology system development john wiley sons 


cheyer julia martin unified framework constructing multimodal experiments applications proceedings cmc tilburg netherlands 


clarke scenarios user interface designers 
proceedings hci conference people computers vi 
pp 


cohen johnston mcgee oviatt smith 
efficiency multimodal interaction case study 
proceedings international conference spoken language 

cohen oviatt role voice input human machine communication 
proceedings national academy sciences 


coutaz salber usability lab observing analyzing multimodal interaction proceedings acm chi conference human factors computing systems 


ck nsson 
wizard oz studies 
proceedings intelligent user interfaces 
pp 


davies bertrand speech oriented editor proceedings acm chi conference human factors computing systems 


dragon dragon dictate 
dragon systems 
www com 
goel sketches thought 
cambridge ma mit press 


gould lewis designing usability key principles designers think proceedings acm chi conference human factors computing systems 


voicemail hell management today pp 


hearst gross landay sketching intelligent systems 
ieee intelligent systems 


ibm 
ibm 
www ibm com software speech 
kelley iterative design methodology user friendly natural language office information applications 
acm transactions office information systems 


landay interactive sketching early stages user interface design unpublished ph carnegie mellon university pittsburgh pa 
www cs berkeley edu landay research ons thesis pdf 
landay myers 
interactive sketching early stages user interface design 
proceedings human factors computing systems chi 
denver pp 
may 

landay myers 
sketching storyboards illustrate interface behavior 
proceedings human factors computing systems chi conference companion 
vancouver canada 
pp 
april 

lin newman hong landay denim finding tighter fit tools practice web site design 
chi letters human factors computing systems chi 


speech interface 
systems 
www uk 
marx schmandt 
message presentation navigation nonvisual environment 
proceedings acm chi conference human factors computing systems 
pp 


modelling spoken dialogues state transition diagrams experiences toolkit 
proceedings th international conference spoken language processing icslp 
sydney australia dec 

moran cheyer julia martin park multimodal user interfaces open agent architecture 
knowledge systems 


national research council screen deep citizen interfaces nation information infrastructure 
washington national academy press 


oviatt mutual disambiguation recognition errors multimodal architecture 
proceedings acm chi conference human factors computing systems 
pp 


oviatt cohen fong frank 
rapid semi automatic simulation technique investigating interactive speech handwriting 
proceedings international conference spoken language processing 
banff canada october 

pallett fiscus garofolo martin przybocki 
broadcast news benchmark test results english non english word error rate performance measures 
proceedings darpa broadcast news workshop 

pearl personal communication 

prototyping tiny fingers 
communications acm 


sidner creating interfaces founded principles discourse communication collaboration screen deep citizen interfaces nation information infrastructure national research 
council editor 
national academy press washington 

stifelman arons schmandt speech interface hand held voice proceedings acm interchi conference human factors computing systems 


sutton cole toolkit rapid prototyping spoken language systems proceedings uist acm symposium user interface software technology 


sutton building spoken dialogue systems proceedings icslp international conference spoken language processing editors 
vol 

smalltalk environment byte magazine vol 
pp 


department education national adult literacy survey 
washington dc government printing office 

natural language speech assistant 
www com marketplace nlu html 
united united airlines customer service 
united airlines 

robust gender dependent acoustic phonetic modelling continuous speech recognition new automatic male female classification proceedings icslp 
fourth international conference spoken language processing editors philadelphia pa usa 


personal assistant 

www com 
wagner prototyping day life interface designer art human computer interface design laurel editor 
addison wesley reading ma 


weiser computer science issues ubiquitous computing 
communications acm 


yankelovich talking vs speech access remote computers proceedings acm chi conference human factors computing systems 


yankelovich lai designing speech user interfaces proceedings acm chi conference human factors computing systems summary 


yankelovich 
marx designing issues speech user interfaces proceedings acm chi conference human factors computing systems 


yankelovich office monitor proceedings acm chi conference human factors computing systems 

