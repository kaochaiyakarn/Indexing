inductive program synthesis therapy plan generation arnold klaus jantke universitat leipzig institut fur wirtschaftsinformatik 
leipzig germany email oki uni leipzig de leipzig fh fachbereich postfach leipzig germany email janos informatik th leipzig de 
planning investigated area classical strips approaches usually fail 
application domain therapy repair complex dynamic processes 
peculiarities domain discussed detail convincingly developing characteristics inductive planning approach 
plans intended run process therapy 
plans programs 
unavoidable vagueness uncertainty information complex dynamic processes case disturbance therapy plan generation turns inductive program synthesis 
developed graph theoretically approach inductive therapy plan generation 
approach investigated inductive inference perspective 
particular emphasis put consistent incremental learning therapy plans 
basic application scenarios developed compared 
inductive inference approach invoked develop investigate couple planning algorithms 
core versions algorithms successfully implemented lisp prolog 
partially supported german federal ministry research technology joint project development methods intelligent monitoring control contract iw additionally second author learning theory received support german federal ministry research technology joint project algorithmic learning knowledge systems contract iw motivation main intention establish new link areas research program synthesis therapy planning 
preceding version aj appeared condensed conference presentation 
endeavour reported authors wish advance areas research active 
program synthesis intended integration may result new exciting problems characterized particular constraints investigated classical approaches far 
approach may widen view automatic program synthesis general 
therapy planning integration may initiate certain shift typical ai approaches theoretical computer science 
extend amount methodologies techniques available plan generation 
author pointing relationship plan generation program synthesis link established opinion 
may exception robotics action plans necessarily interpreted programs 
wer relationship explicit 
previously developed connections program synthesis planning mw instance deductive spirit 
approach considerably different seen 
initially want briefly exemplify type interaction mind 
automatic program synthesis exists particular concept consistency denoting ability hypothetical programs reflect information built 
understood formalizations consistency inductive learning cf 
overview jb couple results wie date discussion 
therapy plan synthesis process control application consistency relevant 
purpose notion consistency needs refined distinguished executability point 
may raise new theoretical concepts investigations 
investigations driven attempts develop integrate therapy plan generation methods comprehensive knowledge processing approach cf 
aj needs complex dynamic processes 
peculiarities target application discussed depth aj 
investigation briefly reflected suggests abandon strips planning approaches 
consequence faced task developing approach 
presents examines basic concepts knowledge therapy planner viewpoint program synthesis 
developed core algorithm implemented lisp running sun os sparc stations cf 
arn 
developed planner cf 
fat man plane als eine von auf ist es nur mit zu und konzepte und zu um auch plane mit wie zu 
jm prolog running swi prolog version pc quintus prolog version sun workstations 
may considered report working program synthesis method 
addendum developed implemented plan tracer cf 
arn tool plan inspection supporting program synthesis plan generation research 
organized follows 
chapter completed short introductions basic areas integrated automatic program synthesis therapy plan generation 
dealing sophisticated knowledge processing approaches reasonable closer look peculiarities intended application area 
chapter describes essentials problem domain 
may develop appropriate knowledge processing approach 
part clear emphasis generating plans programs developed chapter 
chapter supplements key underlying concepts detail 
final chapter deals application notions notations introduced far 
contains collection therapy plan generation algorithms derived approach developed 
key intentions illustrate fundamentals introduced set stage development implementation family planning algorithms refining approaches 
automatic program synthesis automatic program synthesis bb excellent design implementation correct software meeting requirements continues relevant practical scientifically challenging problem 
lines research directed solving problem 
automatic programming 
study techniques generating executable code information may fragmentary may indirectly specify target behavior 
field idea ultimately need engage machine process programming machines machines offer important property needed task ability making mistakes 
automatic name necessarily refer full automation programming considerably higher degree automation lines software production pursued literature 
adopt view sequel 
approaches program synthesis relevant problems inductive program synthesis appropriate 
generating therapy plans process control dynamic environments needs incomplete information 
processing incomplete information coming complete solutions crux problems attacked inductive inference research cf 
kw ang wie general inductive program synthesis cf 
sum bbp bk sum bau sha sha jk bk dp fd dr particular :10.1.1.157.566
approaches referred vary purely recursion theoretic synthesizing lisp expressions prolog programs sum sum sha sha 
type want relate therapy plan generation 
type control problems attacked require explicit handling multiple knowledge cf 
arn considered papers mentioned 
regard approaches bar mw mw neu appropriate deductively oriented 
worth mentioned functional logic programming paradigm respectively essentially different approaches sum sum sha sha referred 
implemented planning algorithms lisp prolog going exploit peculiarities programming paradigms synthesize lisp prolog programs particular 
therapy plan generation control synthesis planning major research area artificial intelligence cf 
bgh dw gin ham wil type planning faced substantially different approaches cited explained arn arn aj aj conventional process supervision control system interface diagnosis therapy planning execution static dynamic technology representation fig 

system architecture intended roughly illustrate role therapy planning comprehensive knowledge processing environment 
conventional process supervision control system extended knowledge system activated disturbances occur handled successfully conventional process control 
focus investigation emphasized shaded area 
focus exclusively inductively synthesizing therapy plans confine ourself peep embedding knowledge processing scenario 
therapy control engineering ordering control actions therapy plan order influence technical process timely response 
aim remove causes detected disturbance perform new control regime minimize losses production adapt situation recognition monitors alarm boundaries 
tasks done sending new setpoint values control values alarm boundaries conventional supervision control system informing operator mechanical measures cf 
fri 
corresponding control synthesis modules embedded comprehensive knowledge systems integrating process supervision diagnosis simulation 
dependence discovered fault current reserves system state process control synthesis derive execute appropriate therapy plan cf 
arn details 
therapy plans formal objects having operational semantics process consideration 
programs 
control synthesis consists planner und execution module triggered disturbance analysis 
system architecture slightly simplified 
dropped modules simulation cf 
jal related discussions ignored interactions 
particular display interesting internal structure knowledge base 
knowledge base called technology representation comprises dynamic static part 
dynamic part blackboard architecture containing data points carry available information values process parameters 
static part technology representation contains information available technological equipment necessary derivation 
certain hierarchies representing essentials underlying process 
knowledge diagnosis therapy action scripts particular attached nodes hierarchy describing technological objects 
inheritance fundamental searching knowledge base 
details knowledge representation concept interested reader directed arn 
problem domain intention chapter introduce main peculiarities underlying class problem domains 
distinguished areas investigated approaches literature planning 
essentials executability formal concept 
need concept verifying generated plans 
concept plans respect knowledge represented technology representation 
consequently domain consideration requires inductive planning algorithm deductive approach 
executability confused fundamental concept process control cf 
dw 
characteristics processes defined respect pairs process states executability relates plans resp 
programs process states 
characteristics dynamic processes lot properties problem domain cf 
aj detailed discussion issue published far having impact modelling planning knowledge planning execution 
fundamental program synthesis approach 
important aspects essential characteristics domain values process parameters may set indirect influence 
consequently effects actions postconditions definite 
parameters necessary describe complete state device accessible 
success actions depends general availability technological resources preconditions energy pipes storage capacity 
furthermore resource dependencies actions limited fulfilled actions 
resource constraints met execution time actions 
may need simultaneous actions resulting structure equipment running processes 
particular dynamic process chemical installation seriously disturbed usually results missing essential knowledge state process ranging parameter values appropriate mathematical models describing parts process 
consequence hope way overcome problems incompleteness mentioned 
properties relevant domains 
context difficulties described complicate planning problem additionally 
ii characteristics domain actions require certain amount time completed 
time taken account may unknown advance 
setpoints process parameters may unstable 
process subject permanent changes 
general exist alternative actions differ resource constraints costs 
items listed may find hints time plays crucial role 
insight led particular temporal logic underlying cf 
arn 
consequently therapy control contingent duration primary fault current reserves system 
duration determined residence time units capacity stores therapy execution conditions may change substantially due process conditions due unexpected side effects therapy including interferences individual therapy actions 
roughly speaking hope complete information 
order take peculiarities domain account approach necessary develop appropriate language expressing action operators 
language generated therapy plans executable meet goal specification semantically correct program synthesis 
indirect setting values exhibits executability determined process dynamics 
executability generated plan formal concept domain 
correctness completeness planner completely formalized respect underlying process 
far discussed classes peculiarities peculiarities complex dynamic systems discriminate applications toy block worlds essentially discrete domains scheduling ii 
secondary peculiarities may occur domain interfere primary peculiarities mentioned particular difficulties arise 
third class peculiarities exists 
peculiarities occur phenomena knowledge representation 
hand peculiarities consequences aspects discussed far 
hand unavoidable 
view point planning peculiarities assumptions taken account 
discuss phenomena course investigating knowledge representation planning 
reasons new approach different 
quite impossible strips action definitions 
useless way define postconditions precisely 
furthermore applicable face interest sequential plans 
second want information possible process disturbance states therapy measures manuals experience physical models 
plans programs plans built action scripts represent basics language therapy planning 
want introduce syntactic structure action scripts 
going describe plans formal way chapter set stage formal concepts correctness completeness therapy planning investigating properties executability consistency 
action scripts action scripts syntactic constituents therapy plans 
elementary compound action scripts frame structure depicted 
create action action object preference start conditions interval conditions procedure fig 

syntax elementary action scripts elementary action scripts represent operational semantics plans 
refer procedures general rule bases particular 
rule bases dedicated action units atomic technological meaning single parameter changes 
testing monitoring process conditions changing process parameters corresponding conditions true rule bases express elementary counter actions close valve wait till temperature decreases open valve 
compound action scripts devoted decompose goal specification different subgoal specifications determine time relations corresponding subactions 
goal specification consists action name name technological object 
name object slot action script indicates goal specification applicable 
described information kinds action scripts allows compose plans stepwise unfolding implicitly hierarchical structure network elementary action scripts refering rule bases obtained 
urgent need clear notions notations 
statements plan ilp interval logic planner taken set assumptions pel vague quite useless 
particular deeper questions certain plan sequentially structured object need formal basis consideration 
create action action object preference start conditions interval conditions subactions time relations fig 

syntax compound action scripts unfolding process constraints play crucial role 
express dependency action script technological resources auxiliary energy pipes storage capacity certain process states 
provide useful basis generating plans distinguished consistency see 
understanding program synthesis approach syntax knowledge elementary action scripts carrying operational semantics 
constraints formulae arn developed investigated particularly temporal logic 
logic underlying approach 
includes signature sigma defining different sorts operators predicates 
chapter sketching core concepts underlying formalism 
logical expressions called constraints express necessary restrictions process parameters general 
occur different places particular ffl start conditions action scripts checked plan generation calling rule bases execution time ffl interval conditions action scripts checked plan generation repeatedly rule base execution ffl guards rules sitting rule bases validity checked execution time 
formulae higher level constructs constraints 
formula get assigned truth value constraint 
temporal sorts logic time points time intervals time durations 
formulae built pairs consisting ground term sort time intervals constraint 
may true false dependence knowledge refer exclusively plan generation execution constraints occur nodes building causal nets instance 
behaviour process parameters 
essential difficulty checking formulae course planning usually needs information values 
particularly difficult target process undesirable unknown state cap dynamically changing 
consequence knowledge values process parameters unavoidably vague uncertain incomplete 
validity formulae specified arn 
process parameters interpreted called histories assembled elementary objects called episodes 
case numerical process parameters episode quadruple gamma 
gamma understood time interval values taken lower resp 
upper bound value corresponding process parameter expected time interval gamma 
knowledge base called technology representation containing histories describing dynamic knowledge available 
particular technology representation tr may ask validity constraint interval represented tr 
investigation intuitive idea validity truth temporal logics may suffice 
formal treatment cf 
ghr general basis requires considerably prerequisites 
executability consistency plan revision mentioned ultimate goal therapy plan generation come executable plans meeting goal specifications 
due ensemble peculiarities difficulties explained general way dream come true 
particular complete set postconditions unpredictable 
additionally persistency assumption dropped 
need develop flexible approach needs explained 
executability turns unprovable advance needs complement property treated formally plan generation plan execution plan revision 
property consistency 
idea concept consists excluding action scripts planning process known lead planner garden path 
needs check constraints knowledge values process parameters leads concepts constraint monitoring consistency 
side effect search space planning narrowed 
basic modal temporal logic assumed including validity introduced arn aj ja 
obvious constraint checking respect values process parameters requires certain knowledge 
fortunately hope getting kind knowledge 
appropriate sources simulation tools human experts maintenance schedules 
integrating simulation therapy planning direct reader jal 
knowledge remains vague uncertain incomplete 
cases plan revision necessary 
considerations inside architecture therapy control module corresponds shaded module displayed suitable solving control synthesis problem 
therapy planner plan execution constraint monitoring including plan revision rule interpreter goal action operators rule bases control sequences values quantities plan failed operators constr 
violations activations choice critics specification fig 

architecture therapy control module therapy control module triggered goal specification 
therapy planner starting generation hierarchically structured plan 
choice action scripts building plan requires checking validity certain constraints time intervals 
constraint monitoring module doing deductions dynamic part technology representation 
may find past current values process parameters 
action scripts constraints known violated time interval expected activation rejected accepted 
planner successful completing plan forwarded plan execution module activating step step rule bases control disturbed target process 
certain rules depend conditions verified 
branching conditions checked directly 
rule bases may posses termination conditions may inherited interval conditions 
refinements reactive planning time approaches considerably exceed 
constraints need monitored execution 
case execution rule base completed plan revision triggered 
done incrementally accordance state plan execution 
vagueness uncertainty plan generation due necessity reason values process parameters imprecisely specified time intervals 
worth mentioned constraints formulae handled differently different stages knowledge processing 
assume action script interval constraint 
planner expecting action script started time interval described term sending request constraint monitoring module 
tr derived action script rejected 
action script may incorporated hypothetically generated plan 
note consistency particular formula respect knowledge tr imply executability execution time 
theoretically imply tr general 
contrast tr provably valid plan execution 
sum therapy plans programs executed process control 
elementary action scripts defined operational semantics 
peculiarities domain executability plans resp 
programs derived automatically planning time 
tries generate consistent plan hypotheses 
time proceeds consistent plan may inconsistent dynamics underlying process need correct imprecise forecasts 
therapy plan generation essentially inductive program synthesis 
perspective exhibits importance number standard investigations inductive inference novelties area planning 
illustrate going detail core planning algorithm developed consistent inductive inference program 
inconsistent version developed implemented tested 
turns non trivial problem planning may proceed incrementally iterative inductive inference 
interesting start constraints interval constraints handled identically plan generation differently plan execution 
underlying concepts basic concepts invoked graph theoretic 
going introduce basic formalisms 
graph theoretic fundamentals built concepts graph rewriting fact describe graph grammars cf 
aj ja 
second fundamentals need refinement ultimate goal therapy plan generation consistent plans 
invoking underlying logic constraints cf 
arn ja developed consistent graph rewriting basic formal activity plan generation 
concepts hierarchically structured plans point view therapy plans hierarchically structured graphs cf 
aj 
therapy plan synthesis resp 
program synthesis synthesis certain hierarchically structured graphs 
introduced hierarchy formal concepts denoted ffl hierarchically structured family plans ffl rooted family ffl hierarchically structured plan ffl plan 
derived hierarchically cellular graphs pin graphs lw wan 
basic concept hierarchically structured family plans corresponds amount action scripts available knowledge base 
concept defined follows definition hierarchically structured family plans finite collection fg pin graphs sub kg 
finite directed acyclic graph set vertices set edges 
called pins defined 
vertices understood subgoal specifications substituted 

sub kg mapping indicating graphs may substituted compound nodes preference implicitly specified indices graphs 
graphs alternative substitutions greater index higher preference 
preference values may steps therapy planning algorithms learning experience 
note redundant subsets nodes defined 
prefer explicit handling concepts crucial role rewriting introduced 
building disjoint union sets nodes assume mechanism adopting notational conventions codd relational database theory 
assume substitution 
node substituted node renamed denotes set nodes defines definition assume hierarchically structured family plans fg sub 
substitution yields pin graph denoted sub defined follows 

fcg 
theta fcg fcg theta fv theta theta fv 
ae fcg 
ae fcg 
fcg 
sub sub sub sub substitution mappings sub considered binary relations sets pairs 
motivates assignment sub just sub definition easily generalizes graphs belong may iteratively substitute graphs rules 
definition assume hierarchically structured family plans fg sub 
pin graph holds sub 

denote transitive closure compound action scripts specify new goals may satisfied applying action scripts substitution ordering hierarchically structured family plans fg indicating graphs substituted ordering simply defined holds sub 
transitive closure denoted trivially hierarchically structured family plans allows finitely derivations respect exactly relation irreflexive 
termination confluence rewrite relation may interest 
normal form denoted 
freedom trigger therapy plan generation quite unconstrained initial goal specifications interactively designed initial pin graph constrained belong underlying hierarchically structured family plans 
may important installation parameters changing production definition assume hierarchically structured family plans fg pin graph sub kg 

called rooted family 

rooted family called hierarchically structured plan uniquely defined normal form 
normal forms called flat plans specified expressiveness therapy knowledge specified formal languages graphs potentially generated 
flexible concept defined arbitrary initial goal specification contrasted selfcontained concept variants generated maximally exploiting knowledge formalized definition assume hierarchically structured family plans fg pin graph sub kg 


confine study 
note language possible plans implicitly may finite dependence irreflexive 
cases may practical relevance 
cases finite explicitly exhaustively searching space possible plans turns highly inefficient 
restricted chemical application came graphs instance 
modelling therapy knowledge installation may yield action scripts formalized graphs building underlying hierarchically structured family plans 
plan normal form consists certain partially ordered set elementary nodes 
elementary node particular operational semantics 
therapy plans programs admitting simultaneous operations operations run independently parallel 
plan turn executable heavily depends underlying process dynamics 
constraint monitoring consistency language possible plans select plans explicitly contradict knowledge 
needs exploit knowledge time available 
second requires appropriate integration graph theoretic logical concepts 
sequel need logical concepts exceeding considerations chapter 
set ground terms sort set denoted sigma 
sigma specifies set ground terms time points sigma refers set ground terms time durations definition assume hierarchically structured family plans fg corresponding set elementary vertices 
exists mapping sigma determines vertex timeout procedural semantics 
planning starts estimated expected computation time planner 
taken basis estimating expected start time therapy plan generated 
requires constraints action scripts violated time interval ranging latest start time considered action script 
time interval crucial reasoning consistency called integral predecessor timeout 
therapy plan generation planning system arrives intermediate hypotheses hierarchically structured plans irreducible expansion compound nodes tried 
compound nodes particular interest elementary predecessors predecessors propagate integral predecessor timeout 
order formalize need transitive closure set edges going denote transitive closure definition assume pin graph sub 

called active holds 
max vis active nc undefined providing sufficient basis restricting alternative substitutions consistent respect underlying technology representation tr 
sc ic denote set start constraints interval constraints respectively action script denotes constant sort time points exp represents operator maps time points time interval 
operator means addition usual 
definition assume pin graph sub initial time sigma time sigma 
sub cons sub sc ic tr exp active undefined definition refuting constraint automatically deriving tr exp key step reject action script therapy plan synthesis 
definition assume hierarchically structured family plans fg assume pin graph sub start time 
holds substitution certain pin graph compound vertex tr holds active sub cons 

usual tr denotes transitive closure tr restricts original rewrite relation consistent dependence expected start time plan execution 
definition assume hierarchically structured family plans fg tr denotes underlying technology representation point time 

nf tr denotes set normal forms graphs respect tr nf tr tr tr 
cons tr nf tr note efforts construct consistent plans may result empty substitution mappings sub cons may hold certain compound vertices particular pin graphs 
may exist normal forms respect tr reasonably interpreted executable plans 
target language defined smoothly 
particular graph normal form tr briefly indicated tr parameters omitted readability 
rewrite relation tr inheriting termination may terminate earlier 
implies immediately cons tr 
language cons tr structurally complex 
proved examining sequential part cons tr 
context free 
note vertex gets latest start time integral predecessor timeout 
individual elementary action script acceptable tr sc ic see structure action scripts tr exp hold 
plan said consistent tr vertices acceptable tr 
planning process finished normal form 
backtracking activated sub cons returns empty set 
task backtracking hypotheses causing interesting problems metaprogramming cf 
jm particular logic programming paradigm chosen basis therapy plan generation 
due complexity behaviour dynamic systems formal way prove plans general 
introduced concept consistency verifying plans planning process 
consistency guarantee executability 
plans generated execution may fail replanning necessary 
state explicitly consistency hierarchically structured plan imply executability normal form 
due difficulties knowledge representation opposite statement true unfortunately may inconsistent plans executable normal form 
circumstances therapy plan generation program synthesis task considerably different approaches plan generation investigated far 
particular common strips approaches 
chapter presenting basic therapy planning resp 
program synthesis algorithm developing underlying inductive inference scenario investigating inductive inference concepts therapy plan generation 
program synthesis algorithms plan generation chapman explicitly convincingly stressing need better foundation planning planners promising sort complicated heuristic ill defined ai programs clear conditions 
rigor formulation gives confidence program may needed stable base research 
cf 
cha formal concepts introduced preceding part chapter deals development investigation implementation therapy plan generation 
fact going couple inductive program synthesis algorithms 
algorithm planner input te output 

fg 
fv active gg forall sub cons find repeat max ii fjg iii part fg gg iv part planner te part find ii iii part iv 
return fig 

basic planning algorithm particularly worth mentioned implementations lisp prolog respectively directly reflecting formalisms developed cf 
jm illustration 
may taken basis investigations validate verify programs technological considerations exceed scope considerably 
core synthesis algorithm going basic planning algorithm depicted 
input expected start time therapy plan execution rooted family 
graph understood goal specification received primary fault diagnosis 
family graphs representing relevant part therapy knowledge technology representation action scripts graphs attached technological objects 
naturally family explicitly constructed practice 
denotes amount therapy knowledge possibly accessed reasoning 
current dynamic knowledge past process parameters essential constraint checking 
tr denotes knowledge base time underlying reasoning processes invoked 
default holds initially 
lucid structure basic algorithm allows number depth discussions 
particular recursive structure quite clear 
crucial call line iv 
logical reasoning collected particular subroutine hidden assignment sub curr sub cons line 
quite involved total predecessor timeout defined locally graph consideration 
node expansion called position ii 
local variable storing intermediate version therapy plan construction 
firm basis investigations need underlying inductive inference scenario explicit 
fact careful investigation exhibits choice specifying application scenarios 
inductive inference scenarios knowledge structure underlying installation including abstraction aggregation hierarchies topological relations knowledge underlying inferences causal nodes diagnosis action scripts therapy quite stable knowledge process behaviour usually changing time 
dependence process characteristics general occurred disturbances particular changes may quite dramatic 
progressing time sequence different knowledge bases tr tr tr underlying therapy plan generation inductive program synthesis 
roughly speaking dependence knowledge base tr hypothesized particular hierarchically structured plan normal form denoted flat plan taken program executed replanning necessary 
planning algorithm may applied certain slightly different scenarios 
authors opinion benefit may drawn inductive inference perspective differences explicit 
scenario time inductive plan synthesis proceeds follows 
planning time planning algorithm trying generate plan acceptable tr respect algorithm specification 
core algorithm succeeds cons constraint checking invoked definition cons cf 
definitions tr recognized time point acceptable plan therapy plan generation starts tr quite simple basic scenario comes close standard scenario inductive inference cf 
kw jan ang sequences information fragments fed inductive inference machine response generating sequences hypotheses 
interestingly tradeoff simplicity usability scenarios 
quite simple turns difficult implement general 
key difficulty knowledge representation assumes called technology representation blackboard knowledge base 
difficult trace back particular entries coming precise time origin reasoning may time consuming underlying knowledge base changes plan generation complete bookkeeping 
leads cumbersome scenario 
scenario ii plan generation starting time generating hypothesis may take time 
plan generation dynamic knowledge changes states tr tr applies plan constructions 
subsequently hypothesized therapy plans changing knowledge bases tr tr potentially certain parts therapy plan generated may different knowledge bases 
note incremental learning issue 
obviously second scenario difficult analyze 
require extra effort implementation assumes therapy planning algorithm take knowledge base refining scenarios focus attention aspects inductive program synthesis 
seeing therapy planning problems right inductive inference perspective leads couple considerations rarely occur planning literature far ffl core planning algorithm works consistently respect underlying dynamic knowledge 
global behaviour change giving consistency 
ffl deemed practical importance design algorithms incrementally 
inductive inference called iterative learning algorithms known restricted power general 
apply therapy plan generation 
joint project application basic scenario turned adequate flood prevention upper river werra 
ffl monotonic inductive inference algorithms improve quality guesses succeed completely 
hope monotonic planning algorithms 
ffl inductive inference typically unknown certain generated hypothesis correct respect target phenomenon approach 
reasonable conditions successful termination plan generation dynamic conditions assumed decided 
ffl combinations properties resp 
questions therapy plan generation 
known seemingly natural properties inductive inference algorithms may turn quite restrictive 
particular certain combinations requirements may enormously reduce application domain corresponding algorithms programs cf 
jb 
requirements remarkably large space combinations potential interest 
initial approach confine investigation consistency incrementality 
algorithm planner input output 

fg 
fv active gg forall sub find repeat max ii fjg iii part planner part find ii iii part iv 
return fig 

possibly inconsistent basic planning algorithm inductive inference concepts planning trivial modify core algorithm abandon consistency 
illustrated 
implementation planner difficult scenario scenario ii planner behaves identically time constraint checking involved 
constraint refutation postponed plan execution cf 

disadvantage planner adapts process dynamics replanning 
heavily depends ffl general process characteristics ffl disturbances treated ffl incoming dynamic knowledge basic versions preferred practical applications 
advantage planner planner usually works remarkably algorithm planner input te output 

fg 
fv active gg find sub cons repeat max ii fjg iii part fg gg iv part planner te part find ii iii part iv 
return fig 

consistency checking expansion time efficient 
degree speed depends efficiency theorem proving facility invoked difficulty access dynamic knowledge 
advantage unknown deterministic areas deductive planning difficult process dynamics may inconsistent plans turn executable 
planner potentially able generate plans 
unfortunately sufficient statistical evidence go detail moment 
algorithm planner input te output 

fg 
fv active gg forall sub cons find repeat max ii fjg iii part fg gg iv sub cons part planner te part find ii iii part iv 
return fig 

consistency checking call time contrast classical inductive inference time dependence therapy plan generation leads refinements consistency approaches 
quite obvious scenario ii may crucial check consistency 
refinement global consistency check cf 
statement fig usually humans consider fortune processes dealing disturbed 
ure leads consistency checking expansion time see line 
application scenario discriminate planner planner 
scenario ii planner may appropriate checks consistency substitutions individually 
thorough development approach leads version consistency checks postponed recursive call planning algorithm see iv 
complete collection variants discussed 
variants algorithms aimed illustrating benefit research area planning general area therapy plan generation complex dynamic systems particular draw adopting inductive inference perspective 
illustration chosen consistency 
approach therapy plan generation developed intentionally incremental 
considerably involved inductive inference 
corresponding concept inductive inference iterative learning cf 
wie jb 
inductive inference algorithm works iteratively exactly generates hypotheses dependence hypothesis information provided 
sense look back history knowledge processing 
basic scenarios introduced hypothesized plan particular versions dynamic knowledge bases named tr tr gamma tr respectively 
subsequently generated hypothesis usually depends dynamic knowledge tr resp 
tr tr needs clarified step done incrementally 
contrasting arguments ffl really complex dynamic systems dynamic part technology representation may understood huge blackboard 
agents process conventional process supervision control system simulation module permission write spontaneously asynchronously knowledge base 
hope form efficient bookkeeping 
effective way particular need base hypotheses exclusively new part dynamic knowledge 
formal terms tr tr usually known explicitly 
ffl output plan generation hierarchically structured plan expansion 
available hierarchical structure provides information necessary incremental replanning 
particular action script turns inconsistent respect information quite easy choose alternative plan modification 
approach particularly incremental plan generation 
key difference arguments putting emphasis underlying information second stressing way processing information therapy plan generation 
jan proposed distinction informationally incremental operationally incremental 
fact efficiency hypothesis formation mainly means operationally incremental construction 
claim original inductive inference concept iterative learning meet needs formalizing incremental therapy plan generation sufficiently 
key reasons discussed brief 
reasons lies constraint checking 
knowledge gets constraints possibly refutable search consistent substitutions 
instance assume interval constraint required valid time interval denoted new information written tr may imply violated subinterval interval depends knowledge tr suffice conclude tr 
words refuting constraints essentially non iterative spirit 
reason technological spirit 
usually assume explicit knowledge part information new certain point time tr tr formal terms 
way changing underlying application scenario considerably 
knowledge base called technology representation active module knowledge processing cf 
able trigger certain reasoning modules case receives particular input data 
developing approaches knowledge process supervision control exceeds scope 
note recognizing importance constraint checking problem designing iterative planning algorithms nicely bridges gap consistent iterative learning iterative logics flexible knowledge processing approaches bring closer informationally incremental planning methodologies algorithms 
go details 
say precisely therapy plan generation approach focusses operationally incremental hypothesis generation 
algorithms non incremental 
planner check constraint sense look incremental version 
sequel briefly developing essentials incremental therapy plan generation complex dynamic systems 
learning algorithms build hypotheses specified operational dependence hypotheses generated immediately 
needs assume way produce initial plan 
subse recursion theoretic inductive inference heavily depends underlying scenario information arrangements consistent iterative learning related 
case consistent learning algorithms translated directly iterative versions 
case 
reader directed jb couple related results 
inductive inference iteratively solvable learning problems find consistent learning algorithm 
quent planning step scenario incremental learning quite clear 
assume hierarchically structured plan generated far 
operationally incremental planner expected start time plan execution input 
knowledge dynamics underlying process scenarios 
tr tr tr respectively planner generates hypothesis 
case consistent changing process dynamics may expect algorithm planner input te output 

fv active gg find find gk gamma sub sub cons part gk ii part part iii part iv part planner part gk te part gk sub cons gk ii sub fkg repeat iii max sub cons iv fjg part fg vi part planner te part find ii iii part iv 
return fig 

basic incremental planning algorithm notations may help simplify presentation 
basis hierarchically structured family graphs partial mapping gamma yields index corresponding set graphs case exists 
gamma canonically extended sets indices 
compound node substitution mapping sub family graphs intersection gamma sub singleton set identify set unique member readability 
perspective incremental version core planning algorithm may viewed illustrated 
key idea plain see 
top manner active nodes checked consistency line 
case contradiction occurs unique substitution underlying hierarchically structured plan 
substructure checked way plan 
planner called recursively cf 
iv 
current substitution consistent cf 
hypothesis changed incrementally 
essentially requires call underlying planning algorithm statement vi 
may derive couple variants invoking consistent planning algorithms planner planner 
experimental comparison exceeds intention approach 
closer look peculiarities complex dynamic systems exhibited need planning approaches differ considerably classical strips approaches 
roughly speaking unavoidable vagueness uncertainty dynamic knowledge including problems unknown durations imprecisely known effects actions leads approach inductive spirit 
therapy plan generation inductive program synthesis 
focussed investigation integrating inductive inference planning 
ultimate goal invoke inductive inference ideas development families planning algorithms application domain consideration 
came couple results 
inductive inference planning benefit viewing therapy plan generation inductive inference perspective 
planning perspective allows derive couple algorithmic approaches extract essentials reasoning problems 
inductive inference key result finer classification natural properties 
particular approaches consistent iterative learning substantially refined 
want discuss selected issues illustrating progress areas consideration 
chosen aspect research discipline 
consistency inductive inference classical inductive inference simple scenario 
inductive inference algorithms getting fed particular information 
respond certain hypotheses 
particular hypothesis defined respect clearly distinguished amount information 
sense hypothesis formation take time 
words dynamics surrounding world affect consistency concept 
therapy plan generation quite obvious world may change reasoning 
interestingly handled quite smoothly 
easier construct hypotheses consistently changing world reflected blackboard technology representation adapting rigid inductive inference approach require extensive bookkeeping 
consider motivated hint realistic inductive inference formalizations 
particular investigate inductive inference algorithms time consuming devices admit slightly different concepts consistency 
incremental plan revision deemed practical importance perform replanning incrementally usually developed detail 
difficulty particularly planner triggered replanning turns necessary 
call planner replanning differ planning 
easily answered plan hierarchical structure consistency crucial property determining part hierarchically structured plan updated 
inductive inference considerations essential analyzing resp 
developing planning approaches 
amount necessary incremental changes previously plan determined outcome consistency checks 
nicely illustrates importance logical reasoning locates constraint refutation planning approach 
gratefully acknowledge intensive stimulating discussions students daniel kirsten torsten lehmann daniel christoph particular aspects therapy plan generation complex dynamic systems 
specific contributions advancing project 
colleague steffen lange competent critic area inductive inference 
keep scientific communication high respect 
michael richter enormous impact investigating fundamental problems knowledge processing underlying approach 
aj arnold klaus jantke 
therapy plan generation program synthesis 
arikawa klaus jantke editors algorithmic learning theory proc 
th international workshop analogical inductive inference aii th international workshop algorithmic learning theory alt october castle germany volume lnai pages 
springer verlag 
aj arnold klaus jantke 
therapy plan generation complex dynamic environments 
icsi report tr international computer science institute berkeley california october 
aj arnold klaus jantke 
therapy plans hierarchically structured graphs 
fifth international workshop graph grammars application computer science williamsburg virginia usa november 
aj arnold klaus jantke 
therapy plans hierarchically structured graphs 
report leipzig fh fb informatik mathematik naturwissenschaften april 
aj arnold klaus jantke 
anwendung einer logik der constraints der 
peter schmitt editor logik der informatik 
der gi pages 
universitat karlsruhe fakultat fur informatik bericht 
ang dana angluin 
computational learning theory survey selected bibliography 
acm symposium theory computing stoc pages 
acm press 
arn arnold 

report technische hochschule leipzig fb mathematik informatik october 
arn arnold 
zur analyse plane plan tracer 
report leipzig fh fachbereich december 
arn arnold 
logic constraints dynamic process control 
report leipzig fh fachbereich december 
arn arnold 
ein system zur und technischer prozesse accepted 
leipzig zu und forschung 
dana angluin carl smith 
survey inductive inference theory methods 
computing surveys 
bar david 
experiment knowledge automatic programming 
artificial intelligence 
bau michael bauer 
programming examples 
artificial intelligence 
bb bibel biermann 
special issue automatic programming foreword guest editors 
journal symbolic computation 
bbp alan biermann richard baum frederick 
speeding synthesis programs traces 
ieee transactions computers 
bgh susanne andreas gunter joachim hertzberg josef wolfgang tank 
und 
gunther editor die kunstliche intelligenz pages 
addison wesley 
bk alan biermann ramachandran krishnaswamy 
constructing programs example computations 
ieee transactions software engineering se 
bk 
generalized regular expressions language synthesis programs branching loops 
theoretical computer science 
dietrich balzer volker may knowledge process control 
martin editors integration design implementation application measurement automation control congress pages munchen 
oldenbourg verlag 
miller hajek 
language representation operation safety maintenance procedures nuclear power plants 
proceedings third international conference industrial engineering applications artificial intelligence expert systems iea charleston sc july pages new york ny 
acm 
cha david chapman 
planning conjunctive goals 
artificial intelligence 
dp nachum dershowitz eli :10.1.1.157.566
inductive synthesis equational programs 
aaai proceedings eighth national conference artificial intelligence pages 
mit press 
dr nachum dershowitz reddy 
deductive inductive synthesis equational programs 
journal symbolic computation 
dw dean wellman 
planning control 
morgan kaufmann 
fd pierre yves deville 
logic program synthesis incomplete specifications 
journal symbolic computation 
fri gerhard friedrich 
model diagnosis repair 

ghr dov gabbay ian hodkinson mark reynolds 
temporal logic 
mathematical foundations computational aspects 
oxford logic guides vol 

clarendon press oxford 
gin matt ginsberg 
essentials artificial intelligence 
morgan kaufmann 
ham kristian hammond 
case planning 
viewing planning memory task 
academic press 
joachim hertzberg 

die der intelligenz 
bi 
joachim hertzberg 
ki wir arbeiten und wir arbeiten 
herzog thomas dieter editors grundlagen und anwendungen der intelligenz 

fur kunstliche intelligenz ki pages 
springer verlag 
franz thomas lengauer egon 
processing defined graphs graph families 
burkhard monien thomas ottmann editors data structures efficient algorithms volume lecture notes computer science pages 
springer verlag 
ja klaus jantke arnold 
konzepte der fur prozesse 
markus editor 
gi und formale sprachen proc pages 
universitat tubingen wilhelm 
ja klaus jantke arnold 
modal temporal logic models underlying variants planning algorithms 
time intern 
workshop key west fl usa may 
jal klaus jantke arnold torsten lehmann 
flexible simulation scenarios real time planning dynamic environments 
proc 
florida ai research symposium flairs special track real time planning reacting key west fl usa may 
jan klaus jantke 
algorithmic learning incomplete information principles problems 
jurgen jozef kelemen editors machines languages complexity volume lecture notes computer science pages 
springer verlag 
jan klaus jantke 
types incremental learning 
working notes aaai symposium training issues incremental learning march stanford ca usa pages 
stanford university 
jb klaus jantke hans rainer 
combining postulates naturalness inductive inference 
eik 
jk jean pierre jouannaud yves kodratoff 
program synthesis examples behavior 
alan biermann erard editors computer program synthesis methodologies pages 
reidel publ 

klaus jantke torsten lehmann arnold 
meeting real time constraints therapy plan generation complex dynamic systems flexible simulation scenarios 
proc 
karlsruhe june 
verlag 
jm klaus jantke daniel 
developing implementing planning heuristics prolog 
proc 
florida ai research symposium flairs key west fl usa may 
daniel kirsten 
properties formal languages therapy plans created graph grammars 
communications algorithmic learning group hochschule fur technik und leipzig fb informatik mathematik und naturwissenschaften september 
daniel kirsten 
redundant edges therapy planning 
communications algorithmic learning group hochschule fur technik und leipzig fb informatik mathematik und naturwissenschaften december 
kw reinhard rolf 
research theory inductive inference gdr mathematicians survey 
information sciences 
lw thomas lengauer egon 
efficient solution connectivity problems hierarchically defined graphs 
siam journal computing 
daniel klaus jantke arnold 
von mit der logischen programmierung 
peter schmitt editor logik der informatik 
der gi pages 
universitat karlsruhe fakultat fur informatik bericht 
mw zohar manna richard waldinger 
knowledge reasoning program synthesis 
technical note stanford research institute menlo park ca usa november 
mw zohar manna richard waldinger 
deductive synthesis unification algorithm 
alan biermann erard editors computer program synthesis methodologies pages 
reidel publ 

mw zohar manna richard waldinger 
fundamentals deductive program synthesis 
ieee transactions software engineering 
neu gerd neugebauer 
volume zur intelligenz 
infix 
pel richard 
planning simultaneous actions external events 
james allen henry kautz richard josh tenenberg editors reasoning plans chapter pages 
morgan kaufmann 
sha ehud shapiro 
algorithm infers theories facts 
proc 
th intern 
joint conference artificial intelligence vancouver canada pages 
sha ehud shapiro 
algorithmic program debugging 
mit press 
sum philip summers 
program construction examples 
phd thesis yale university dept comp 
sci 
sum philip summers 
methodology lisp program construction examples 
journal acm 
wan egon 
algorithms graph problems structured graphs 
information computation 
wer gerhard 
von bei der montage volume zur intelligenz 
infix 
wie rolf 
characterization problems theory inductive inference 
automata languages programming th icalp volume lecture notes computer science pages 
springer verlag 
wie rolf 
inductive inference algorithmic learning theory 
furukawa klaus jantke editors proc 
rd workshop algorithmic learning theory alt october tokyo volume lecture notes artificial intelligence pages 
springer verlag 
wil david wilkins 
practical planning extending classical ai planning paradigm 
morgan kaufmann 
article processed macro package llncs style 
