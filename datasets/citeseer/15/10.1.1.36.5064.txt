agent model incentive production scheduling computer automation research institute hungarian academy sciences budapest pob 
hungary agent models manufacturing hard reconcile autonomy cooperation 
proposes solution problem context dynamic production scheduling problem 
organizational model economic concepts uses market rules incentive mechanism 
solution integrates dynamic order processing advance commitment scheduling dispatching 
manufacturing needs new organizational principles structures face new challenges customer driven production volatile market environment globalization potential electronic commerce virtual enterprises need integrating human resources 
redundant functions distributed responsibilities tasks resources necessary responding changes come internal disturbances external market conditions 
transformations manufacturing organizations point network dynamic recon gurable federations production carried autonomous cooperative production units 
nowadays production units small large simple complex machines shops companies alike modeled terms agents 
agents beliefs ii preferences state environment iii particular sets actions change 
operate environments partly unknown unpredictable 
autonomous agents opportunity ability decisions 
rational agents act manner appropriate situation hand best 
rationality bound computational complexity decision problem scarcity resources 
agent optimizing ambitions limited means bounded rational agent 
community agents coordinate take account agents actions deciding 
common goals system wide constraints require cooperation agents coordinate actions order handle appropriately 
communication organization protocols search local scope just important means coordination practically executable 
agent technology particularly appealing model solve production planning control problems manufacturing 
agents help capture individual interests local decision making incomplete information autonomy responsiveness robustness modular distributed recon gurable organizational structures 
application agents manufacturing raises new questions organization communication decision methods required reconcile autonomy cooperation 
assumption bounded rationality accepted 
problem coordination cooperation extremely hard 
agents respond changes environment strong commitment goals plans 
bring completion 
agents opportunistic balancing planned reactive behavior 
time critical factor 
solutions adequate delivered needed computing resources distributed limited 
tried investigate solve problems framework particular production scheduling model 
de ning model basic consideration production scheduling needs new solution techniques new realistic models 
aim set model directly applicable cases individual di erent interests directly attached utilization resources case companies 
model extends classical job shop scheduling model ways integrates order processing requires line dynamic scheduling assumes rich model production resources pro key performance criterion 
shortly problem give conceptual overview technical description multi agent system aimed solve 
distributed decision mechanism system uses novel commitment scheme principles may parallel assignments task task may assigned multiple resources 
resources may alternative assignments 
resource assignments options give right perform particular task rarely impose strict obligation 
commitment principles complement hand allow build task order resource oriented schedule alternatives hand possible select combine change schedule variants ecient way 
section 
gives overview multi agent model sections 

describe elements decision mechanism 
simulation experiments analyzed nally method discussed context similar approaches 
production scheduling problem orders jobs tasks model customers demand transmitted shop dynamic order stream 
order xed arrival time release time due date contract price cp tardiness penalty weight orders arrive dynamically parallel processing earlier ones 
order consists task sequence task order requires speci ik volume technological operation type ik sequence de nes precedence relations tasks order 
tasks di erent orders unrelated 
shop decides accept reject incoming order 
order rejected disappears ect 
accepted orders jobs 
job inherits speci cations corresponding order task sequence arrival release time due date contract price tardiness penalty weight notational conventions see table 
term variable arrival time release time due date completion time processing time contract price cp tardiness penalty weight weighted tardiness wt technological cost ratio technological cost tc mark payment pro operation type volume processing speed variables 
object index order job task machine machining capability indices 
wt cp wt cp wt tc relations stands appropriate 
table notation 
completion time order denoted customers pay completion payment order contract price minus eventual tardiness penalty 
weighted tardiness penalty calculated follows wt 
payment received completion equals cp wt note occasionally payment may negative 
resources resources side set multiple capability machines able perform distinct types operations various speeds technological cost ratios denoted xed parameters respectively 
particular machining capability machine mn mn tmn triplet 
machine may distinct capabilities 
typically type operation performed distinct speeds costs 
relative cost determined ratio shows cost unit amount operation higher speeds expensive case example see table 
machines calculate contract prices particular technological costs tc machine dependent mark um 
mark determines amount added cost calculate contract price 
operation type speed technological cost ratio relative cost volume time currency time currency volume milling milling drilling drilling boring boring table resource capabilities typical machine 
job shop capabilities machines may partially overlap 
shop open machines may enter leave 
processing jobs tasks task requires performing volume appropriate technological capabilities machines 
instance suppose task drilling machine matching resource capability drilling 
accomplishing task take time units technological cost amount monetary units 
generally machine execute certain task job capability required operation type jk mn technological cost performing task way tc jk mn tmn technological cost complete job tc calculated sum technological costs tasks 
due partially overlapping resource alternatives job usually performed di erent routings consequently di erent technological costs 
net pro job results payment received completed job minus technological costs cp wt tc statement dynamic order processing scheduling problem dynamic order stream available machining resources objective select process orders average total pro earned long run maximal 

maximal orders arrive time interval 
cp wt tc order accepted 
solutions satisfy basic technological constraints machine process task able provide required type operation 
machine process task time 
tasks atomic shared pre empted abandoned transportation setup times included processing times 
tasks job processed speci ed sequence task processed time 
note problem dynamic complete speci cation order stream known ahead 
additionally machines supposed processing speeds may change certain capabilities full machines may fall temporally production 
certain scheduling decisions considering actual state history system 
overview multi agent model agents market solution alternative problem developed multi agent organizational model 
kinds agents de ned management agent interacts consumers receives incoming order stream selects orders administration accounting accepted orders 
machines represented individual machine agents 
schedules decide tasks perform 
machine agent communicates management 
machine agents controlling resources di erent partly overlapping technological capabilities 
special decomposition production scheduling problem management agent decides customers orders processing capabilities machine agents control resources contact customers 
mutually depend management need particular services machines need requests 
machine agents decide task perform processing speed price 
management convince complete accepted orders way long run maximizes pro system 
management pays services just way paid customers 
agents seek pro ts 
pro management payment received customers minus sum payments machines working tasks orders 
pro machines di erence payments received management actual technological costs 
agents autonomous know decision mechanisms 
focus decision problems hard management agent processes orders ii sets internal due dates iii negotiates machines iv tentative resource assignments 
machine agents negotiate management ii machine advance scheduling iii nal dispatching 
agents coordinate decisions market mechanism 
agents market general heterogeneous competitive act limited information bounded reasoning capacities 
negotiation common terms goods services dates prices 
market seen information forum enables communication simple terms 
market regulated straightforward rules single agent overwhelming power everyday experience repeated encounters lead adaptive behavior prices proportional costs 
market enables integration incentive mechanism drives system preferred states 
case states satisfy system wide scheduling constraints result long run pro possible 
accomplished agents know system wide constraints global performance criteria 
negotiation execution protocol basic cycle negotiation mechanism follows principle contract net protocol agents need service distribute requests proposals agents turn evaluate requests send back bids requesting agent 
bids decide contract 
mechanism commitment scheme exible parallel assignments task ii contracts options give right perform particular task 
management decides accept reject order 
consult machine agents consider detailed shop information 
management announces iteratively rst unprocessed task job 
response machine agents matching resources prepare local advance schedules submit bids appropriate 
machine agent may send bids management 
management compares bids received accepts sends called assignments machine agents 
bid arrives management task di erent parameters 
actual processing tasks initiated machine agents completing task machine select valid assignments 
machine agents perform dispatching 
task selected machine agent subsequent task job announced management 
shows basic negotiation execution mechanism 
detailed description activity subsequent sections 
management monitors progress job 
nds job late pending task management starts operate special incentive mechanism 
applying process tardiness penalty management forces machine agents select sooner pending task hinders job progress 
shows protocol handles process tardiness penalty mechanism details 
bidding blocked tasks re iterated 
task blocked bid sent ii remained valid assignment doing 
cases management evaluates progress job blocked task 
shown communication basically asynchronous albeit upper bound response message transmission times 
machine management machine bid evaluation accounting evaluation job progress local scheduling local scheduling order processing task selection schedule updating schedule updating bid task bid task announcement task announcement task announcement task task ready payment penalty task assignment task task selected task selected assignment task announcement task basic negotiation execution protocol 
task selected job progress evaluation reimbursement optional penalty pending task machine management machine penalty pending task reimbursement optional process tardiness penalty 
task bid sent valid assignment task task bid sent valid assignment task job progress evaluation machine management machine task task blocked tasks 
special cases protocol 
activities management agent management performs order processing evaluates job progress task announcement assignment operates process tardiness mechanism 
order processing order arrives management decides accept reject 
decision estimated processing time contract price new order 
depending situation availability historical data management evaluates new order assuming nite capacity comparing aggregate workload information 
estimated processing time ik contract price cp ik calculated separately task order applying methods warm phase applicable resource capabilities volume ik considered 
management calculates ik cp ik average processing speeds technological costs available machines 
normal operation system management uses historical data 
task departing volume ik known processing times contract prices task instances operation type ik cp ik estimated linear regression 
order accepted pro table management deliverable due time cp cp ik ik tentative scheduling evaluation job progress management turns accepted order job builds tentative schedule tasks job updates schedule evaluates job progress time 
initially tentative time window contract price set task results order evaluation 
time window contract price give current constraints performing task 
time window speci es release time earliest start time due time task 
contract price cp equals cp calculated order processing 
initial setting time window tasks relaxed speci release due times job allow 
management attempts keep tentative schedule organize accordingly 
guarantee machines really want follow schedule actual schedule may deviate planned 
time announcing new task management updates tentative schedule remaining segment job 
schedule updated just way constructed due shifting time horizon smaller dataset 
task announcement management negotiates machine agents tasks performed 
machine starts particular task job management announces subsequent unprocessed task job announcements sent machine agents capable provide required operation type jk type volume operation announcement sets time window maximal price performing task announcement consists tuple jk jk jk jk cp jk 
instance drilling means units drilling operation performed earliest start time latest nish time management pay monetary units 
values jk jk task speci cation jk set completion time preceding task jk cp jk come updated tentative schedule 
note predicted task just processing 
jobs exist management announcements contain job related information 
situations task gets blocked machine agent sends bids response alternative assignments task lost see explanation 
cases task announcement repeated 
management updates tentative schedule job task time window contract price limit 
bound physical event shop oor may fall nite cycle 
bid selection task assignment management selects subset bids regarding task noti es machines bids accepted 
accepted bids assignments machines 
management may accept bids usually alternative parallel assignments task 
machines know assignments 
bid selection single rule management accept dominated bid 
bid dominated ends costs bid 
favoring machines accepting dominated bid threat interest system reason dominated bids discarded 
process tardiness mechanism lateness jobs controlled proactive incentive mechanism remaining segment job run deadline management starts collect penalty advance machines technically capable processing pending task job 
collective penalty 
penalty mechanism create new alternative schedules directly helps select task cooperative way 
management stops collecting process tardiness penalty machine selects task penalized job 
sum collected penalties time unit equal penalty paid time unit management job expectation completed 
expected nal penalty time unit grows lateness job collection rate grows 
turns management collected sum larger actual tardiness penalty machines 
penalties evenly machines 
penalties di erent tasks independent machine may pay penalties di erent tasks time 
process tardiness penalty mechanism belongs core incentive system 
way management ful lls commitment customers transparent mechanism machines 
order selection procedure fair machines eciency shop depends greatly decisions machines 
management appeal collective responsibility machines 
activities machine agents machines advance scheduling bidding dynamic dispatching 
activities related creation maintenance called schedule trees 
schedule trees promising alternative advance schedules machines represented schedule trees created updated known exclusively owners 
schedule tree dynamic data structure updating prompted events shop oor 
node schedule tree root stores assignment machine 
relevant data stored node triplet represents task scheduled release due times respectively 
branches tree represent alternative futures branch starting root feasible sequence assignments 
branch feasible assignments executed certain order 
nodes branch may exactly chronological execution order 
considering nodes branch deeper node inserted tree example see 
root alternative branches schedule tree simple schedule tree corresponding schedules 
commitment scheduling bidding machines respond announcement generating set bids 
announcements valid small constant time interval bids prepared submitted time 
machine may send bid announcement may leave announcement unanswered 
bid preparation obey rules bids hurt time nancial constraints announcement 
schedule tree remain feasible 
set bids prepared machine contain dominated bids 
processing task possible join completion task 
rst rule constrains negotiation procedure 
second rule guarantees feasibility local schedule alternatives 
intention rules avoid combinatorial explosion hinder fragmentation machines time 
bids generated account announcement particular task cp ii machine capabilities iii schedule tree 
machine system wants pro get performing task actual technological cost 
machine local um mark calculating particular contract prices 
presents main steps bid formation process 

generate processing alternatives announcement task machining capability mn calculate processing time technological cost kmn tc kmn kmn tmn set contract price cp kmn tc kmn um 

filter processing alternatives late expensive delete processing alternative kmn cp kmn cp 
generate potential assignments try insert processing alternative schedule tree possible ways 

generate bids potential assignments get values kmn kmn potential assignment calculate contract price cp kmn 
discard dominated bids prune schedule tree accordingly 

send remaining bids management response announcement task process bid formation 
bid formation making alternative advance schedules see step 
words machines commitment scheduling far bidding rules allow 
shows process local scheduling 
inputs process schedule tree ii processing variants particular task output new schedule tree previous new tentative task assignments 

processing variant task branch tree follows consider time window 
fully occupied assignment put branch 
empty kmn kmn kmn 
get earliest free time slot long contain task duration kmn window start task due kmn kmn kmn 
new potential assignment create new branch immediately root kmn kmn kmn generating schedule variants potential assignments example consider extension schedule tree 
new task processing variants 
example shows growth tree controlled bidding rules 
root root alternative branches schedule tree branches schedule tree insertions processing variants task schedule tree construction duration processing variants 
consequence bid selection strategy management machines keep prices close technological costs better earn 
bidding strategy machine tailored speci resources workloads 
machines decide apply re nements calculation contract price cp sophisticated 
typically bottleneck machine may charge services task charged somewhat remains narrow time slot schedule task take units free period units 
machines may try charge management lost opportunity 
machine agent knows ecient capabilities able earn pro may bid types tasks times expected workload small 
cases management started jobs parallel basic strategy create schedule alternatives probability realized 
order avoid machine agent may set limit depth breadth schedule tree 
updating schedule trees schedule trees need regular updating time ies nodes branches may obsolete 
machine updates schedule tree time release time valid assignment elapsed selects particular task task valid assignment selected machine 
machine starts assignment task sends message management ii prunes alternative assignments colliding assignments tasks schedule tree 
management turn prompts machines remove assignments task schedules ii announces task job 
machine prunes nodes representing invalidated assignments local schedule tree 
updating helps keep size schedule trees limited 
note updating prompted physical event job shop 
final dispatching nal decision task execution hands machines 
machines perform dispatching 
task assignment gives machine option right task conditions necessarily need 
machine parallel assignments decide 
time machine completes task free choose assignment schedule tree 
rule ect machine stay idle valid assignment 
question selecting task intricate number dispatching rules arguable choose task maximal immediate pro ii maximal pro time iii consider perspectives tree discounting expected pro works iv consider opportunity cost free time left 
version simple greedy heuristics applied machines prefer maximal immediate pro machine agent selects assignment task resource capability value tc kmn um wm kmn maximal 
wm machine eventual process tardiness penalty wm penalized pending task selected sum actual penalties 
tie situations machines try choose task resolved randomly 
computational experiments scheduling nondeterministic distributed method system worstcase behavior avoidance extreme situations hard guarantee 
average behavior predicted signi cance results solely experimentation 
experiments carried proof concept system implemented clos common lisp object system 
di erent kinds experiments carried order see reliability robustness system tested standard scheduling benchmark problems 
experimented various dynamic order streams resource sets 
standard scheduling benchmark problems experimental set system run scheduler simple job shop scheduling problems 
problems taken problem repository 
order conform standard model single capacity machines de ned performance measure changed maximal pro minimal makespan scheduling problems transformed order streams 
orders task sequences usual 
prices penalties set costs proportional processing times 
due dates orders lower bound optimal makespan see appropriate 
setting resulted somewhat tight due dates orders 
departing fisher thompson jobs machines instance lawrence instances generated series order streams 
complete order stream system management forced accept orders 
lessons learned experiments follows small problem jobs machines tasks jobs known optimum approached margin 
performance degraded extremely short due date settings 
phenomena shows order processing scheduling hand hand scheduling help system overloaded 
increase number jobs ect normal conditions performance system 
dramatic ect usage computing resources local advance scheduling machines absorbed computational power response times machine agents hardly tolerated 
commitment scheduling strategy keeps alternative futures open useful problem really dynamic 
experiments dynamic order streams testing systems dynamic order streams varied factors order streams generated di erent characteristics 
orders stream shared slowly changing features order consisted tasks paying rush orders 
demand variations turbulent 
table presents front order stream 
machines considerably rich alternative resource capabilities see table typical machine 
job shops populated machines 
machines cases overlapping resource sets 
experimental set ups bottleneck machines applied unique resources 
cp sequence tasks ik ik table front dynamic order stream 
summarized lessons experiments dynamic order streams follows local objectives management tried load system far possible machine agents attempted ll local schedules bidding tasks utilizing equally fast slow resources opportunistic way 
results schedules idle time 
shows typical schedule 
global goal minimizing total lateness earning pro possible management accepted paying order competing jobs machines 
cause jobs late led lateness pending jobs known domino ect scheduling 
arrival new order management prepared rst inaccurate time monetary estimates tasks 
caused problem system load moderate estimates re ned course bidding process management correct fact case 
heavy load accuracy estimates really matter optimistic estimates delayed activation penalty mechanism 
fortunately penalty mechanism press nal tasks late jobs estimates tasks better 
moderate load rational behavior machine agents caused unbalanced distribution tasks consequently pro ts machines provide services just slightly cheaper densely stu ed schedules competitors remained idle 
working close congestion process tardiness penalty persuaded machine agents select pending tasks late 
varying level penalties apparent certain level penalty distorts decision alternatives machine agents deteriorates system performance 
mach mach mach mach mach job job job job job job job job job job job job job job job machines schedule order stream table 
order accepted 
labels jobs lines show machine task indices respectively 
labels machines lines correspond job task indices 
short tasks labeled 
bottleneck machines caused trouble warm phase management estimate accurately processing times prices eventual initial peaks overload machines long run 
bottleneck machines worked accuracy management estimates improved time 
discussion idea negotiated distributed scheduling appeared long early attempts applied various dispatching rules concern advance scheduling 
conversely realized predictive scheduler reactive capabilities 
precursor applied market principles negotiating due dates costs 
decade investigations applied negotiation contract net protocol particular solve form distributed production scheduling problem 
thorough overview refer developments 
di erent approaches integrates order processing machine advance scheduling dynamic dispatching 
order processing controls congestion sets favorable working conditions scheduling 
machines optimizing ambitions plan commitment manner 
nal decisions selecting set eligible tasks 
guarantees technological constraints violated 
need re generating global schedules quite common practice distributed scheduling 
select ing orders tasks management machine agents may behave opportunistically preferring paying items 
scheduling method opportunistic sense word detailed scheduling decisions concerning urgent tasks front jobs 
kind opportunism inevitable ecient scheduling static environments hard cope inherent complexity problems 
successful scheduling methods shifting bottleneck descendants rst look optimize bottleneck resource tailor repeatedly remaining part schedule xed schedule 
argued dynamic scheduling calls opportunistic approach tightly coupled nature problem hard predict disruptive ects schedule modi cations rest schedule 
focused tasks close execution just dynamic nature problem 
policy resulted decision mechanism hardest problems advance commitment scheduling machines solved parallel way ii works iterations backtracking 
method applicable scheduling problem really dynamic 
developments hardly problems number open jobs considerably larger number machines 
just contrary classical approaches regard problems jobs machines easy 
exible decomposition scheme cover spectrum dynamic static scheduling methods 
closely related developments eld holonic manufacturing systems 
holonic manufacturing directly idea autonomous time cooperative agents 
feature distinguishes holonic manufacturing distributed network manufacturing organizations allows temporary hierarchical structures 
hierarchies means central control sta holons mediators organize coordination facilitate optimization 
framework management agent plays undoubtedly special role 
global view system order processing strongly determines behavior 
process tardiness mechanism indirect means global control 
stable operation conditions remains idle order stream changes load increases role important 
rational behavior agents leads hard problems realizing manufacturing system agents limited information coordinate cooperate decisions due time 
rejecting assumption bounded rationality try exploit apparent disadvantages incomplete uncertain knowledge sel sh drive bounded computational resources 
shows case dynamic production scheduling problem twist possible 
requirements autonomy cooperation implications reconciled means market mechanism pressure consistent close optimal global behavior exercised appropriate incentive system 
acknowledgment research supported national research foundation hungary 
supported bolyai research fellowship methodology emergent synthesis project 
baker 
case study results market driven contract net production planning control system 
proc 
conf pages detroit mi 
sme 
baker 
survey factory control algorithms implemented multi agent dispatching scheduling pull 
journal manufacturing systems 
balas vazacopoulos 
guided local search shifting bottleneck job shop scheduling 
management science 
beasley 
library 
imperial college management school ms ic ac uk info html 
pesch 
job shop scheduling problem conventional new solution techniques 
european journal operations research 
van brussel bongaerts wyns valckenaers van 
conceptual framework holonic manufacturing identi cation manufacturing holons 
journal manufacturing systems 
van brussel wyns valckenaers bongaerts peeters 
architecture holonic manufacturing systems prosa 
journal manufacturing systems 
due prabhu 
real time distributed scheduling heterarchical manufacturing systems 
journal manufacturing systems 
durfee 
practically coordinating 
ai magazine pages 
gou 
holonic manufacturing scheduling architecture cooperation mechanism implementation 
computers industry 

intelligence cooperation manufacturing systems 
robotics computer integrated manufacturing 
jain iv singh 
agents process coherence virtual enterprises 
communications acm 
kraus 
overview incentive contracting 
arti cial intelligence 
deshmukh 
design negotiation protocols multi agent manufacturing systems 
international journal production research 

managing ow intelligent parts 
robotics computer integrated manufacturing 

market approach holonic manufacturing 
annals cirp 

manufacturing agents di erent 
bussmann editors proc 
european workshop agent oriented systems manufacturing pages berlin september 
daimler benz ag 
maturana shen norrie 
metamorph adaptive agent architecture intelligent manufacturing 
international journal production research 
mckay 
unifying theory practice production scheduling 
journal manufacturing systems 

due date demand management negotiating trade price delivery 
international journal production research 
ow smith 
reactive plan revision 
proc 
seventh national conference arti cial intelligence pages saint paul minnesota august 
aaai 
van dyke parunak 
distributed arti cial intelligence systems 
editor arti cial intelligence implications cim pages 
ifs springer verlag 
van dyke parunak 
industrial practical applications dai 
weiss editor multiagent systems pages 
mit press 
press flannery teukolsky vetterling 
numerical recipes 
cambridge university press 
russel 
arti cial intelligence modern approach 
prentice hall englewood cli nj 
sandholm lesser 
coalitions computationally bounded agents 
arti cial intelligence 
shaw 
dynamic scheduling cellular manufacturing systems framework networked decision making 
journal manufacturing systems 
smith 
contract net protocol high level communication control distributed problem solving 
ieee trans 
computers 
smith 
methodology architecture reactive scheduling 
zweben fox editors intelligent scheduling pages 
morgan kaufmann 
taillard 
benchmarks basic scheduling problems 
european operational research 

approaches issues scheduling distributed shop oor environment 
computers industry 
tseng lei su 
collaborative control system mass customization manufacturing 
annals cirp 
wu 
storer 
graph theoretic decomposition job shop scheduling problem achieve scheduling robustness 
operations research 

