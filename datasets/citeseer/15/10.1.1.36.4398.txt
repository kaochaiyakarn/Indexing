universit di pisa dipartimento di informatica technical report tr shortest path algorithms transportation models classical innovative aspects stefano pallottino maria april addr corso italia pisa italy 
tel 
fax shortest path algorithms transportation models classical innovative aspects stefano pallottino university institute electronics italy di unipi maria scutell university pisa department computer science corso italia pisa italy scut di unipi shortest path problems studied network flow optimization problems interesting applications various fields 
field transportation shortest path problems different kinds need solved 
due nature application transportation scientists need flexible efficient shortest path procedures running time point view memory requirements 
best algorithm currently exists kind transportation problem research field moved design implementation ad hoc shortest path procedures able capture peculiarities problems consideration 
aim unifying framework main algorithmic approaches proposed past years solving shortest path problems arising frequently transportation field important implementation techniques allow derive efficient procedures general algorithmic schema line trends current research 
precisely part presenting problem briefly review classical primal dual algorithms interesting transportation result theoretical considerations efficiency view practical transportation models 
promising reoptimization approaches discussed 
second part devoted dynamic shortest path problems arise frequently transportation field 
analyze main features problems suitable conditions travel time cost functions general chronological algorithmic paradigm called chrono spt 
show potentiality paradigm properly performing implementation choices study interesting special cases 
investigate promising research avenues related various extensions 
include problems turn penalties prohibitions multicriteria problems solved extending ideas discussed dynamic case 
shortest hyperpaths problems briefly introduced due practical relevance transportation applications 
research progetto ii 
shortest path problems studied network flow optimization problems 
scientific works published international literature journals conference proceedings concerning general combinatorial optimization graphs numerous specialized journals 
interesting application fields transportation 
transportation problems fact shortest path problems different kinds need solved 
include classical problems determine shortest paths various measures length cost origin destination pairs certain area non standard versions compute shortest paths additional constraints particular structured graphs 
due nature application transportation scientists need flexible efficient shortest path procedures running time point view memory requirements 
best algorithm exists kind transportation problem algorithm exists shows practical behavior independently structure graph size cost measure evaluating paths research field moved design implementation ad hoc shortest path procedures able capture peculiarities problems consideration 
particular great emphasis devoted choice implementation efficient data structures see instance tarjan 
aim unifying framework main algorithmic approaches proposed solving shortest path problems arising frequently transportation field important implementation techniques allow derive efficient procedures general algorithmic schema line current trends research 
clearly impossible cover shortest path problems occur field selected common situations shown implementation choices cases 
precisely part presenting problem briefly review classical primal dual algorithms interesting transportation framework result theoretical considerations efficiency view practical transportation models 
promising reoptimization approaches discussed 
important subject large scale transportation models sequence shortest path problems needs solved th problem differs slightly th 
second part devoted dynamic shortest path problems arise frequently transportation field 
analyze main features problems suitable conditions travel time cost functions chronological algorithmic paradigm called chrono spt 
show power paradigm making suitable implementation choices study interesting special cases 
investigate promising research avenues related various extensions including time windows turn penalties prohibitions multicriteria problems solved extending ideas discussed dynamic case 
shortest hyperpaths problems briefly discussed due practical relevance transportation applications 

shortest path approaches transportation models shortest path routines absent computer code transportation analysis planning 
explains increasing role large scale mathematical models interest efficient shortest path algorithms growing enormous number algorithms proposed surveys shortest path algorithms see johnson fox deo pang gallo pallottino bertsekas ahuja magnanti orlin cherkassky goldberg surveys shortest path algorithms transportation models see instance van vliet gallo pallottino 
section presenting problem shall concisely describe shortest path methods interesting transportation framework due theoretical considerations efficiency view practical transportation models 
algorithm presentation shall describe primal dual approaches separately 
primal algorithms object deep analysis aimed discovering similarities relationships algorithm family gallo pallottino 
main result primal algorithm seen particular instantiation unique general algorithmic schema adaptation primal network simplex approach 
similar effort classify dual approaches shortest paths discover relationships pallottino scutell 
promising reoptimization approaches discussed 

shortest path tree problem simple directed graph set nodes cardinality set arcs cardinality function assigns cost ij root shortest path tree problem spt consists finding directed tree path shortest paths connected directed path exists 
simplify presentation shall assume connected spans known literature wide ranging surveys subject see instance lawler gallo pallottino ahuja magnanti orlin finite solution exists spt directed cycle negative cost shall assume property satisfied 
linear programming notation problem dual formulated follows 
fs bs denote forward star backward star respectively 
spt min ij ij bs ji fs ij ij max ij price potential dual variable associated 
primal algorithms spt order solve spt algorithms proposed literature follow primal approach 
fact step maintain spanning arborescence root check cost labels represent costs paths outgoing tree upper bound costs dual feasible solution bellman conditions bellman hold ij 
set candidate nodes maintained algorithm family incident arcs violate bellman conditions 
step candidate node selected condition checked arc forward star arcs say violates conditions cost label properly updated inserted algorithms interpreted procedures solving non linear bellman equation system min ij bs dual feasibility generally holds termination 
depending selection rule candidate nodes different algorithms proposed 
ones select candidate node minimum distance label known label setting shortest search algorithms 
algorithm selection rule proposed dijkstra 
simplest version algorithm implements set candidate nodes unordered linked list runs time case nonnegative costs time general case johnson 
versions dijkstra algorithm called heap algorithm johnson implements binary heap bucket algorithm implemented means buckets data structure dial van vliet fox 
case nonnegative costs heap runs time bucket works nc max time costs integer valued max denotes maximum arc cost 
variants bucket heap proposed max time nlogn time respectively 
algorithm proposed ahuja mehlhorn orlin tarjan implementation fibonacci heaps fastest strongly polynomial algorithm case nonnegative arc costs time complexity point view fredman tarjan 
spt algorithms select candidate node means different strategies known label correcting list search algorithms 
queue natural choice implementing set algorithm corresponding selection rule fifo rule named queue credited bellman ford moore 
simple implement time complexity mn sign arc costs 
list combines properties data structures queue stack deque addition deletion possible list 
deque known pape algorithm known deque pape 
deque viewed stack queue connected series 
time node inserted data structure inserted tail 
node removed set candidate added head 
nodes removed head empty element removed 
worst case complexity deque proved efficient practice mainly sparse planar graphs case transportation applications 
similar performance practical cases shows algorithm queue differs deque nodes inserted tail head runs polynomial time pallottino 
deque queue partition set candidate nodes subsets processed differently 
similar idea threshold glover glover glover phillips glover phillips schneider set candidate nodes partitioned subsets suitable threshold value say subset contains nodes label selections performed head 
empty threshold properly updated nodes label moved 
reason increase probability selecting minimum label node maintaining operational simplicity list search strategies 
different versions threshold proposed literature running polynomial time differ choice threshold policy updating value implementation way nodes moved 
algorithm philosophy threshold selects candidate nodes label correcting approach tries scan nodes small label early possible proposed bertsekas 
fact label candidate node inserted node head candidate node inserted head inserted data structure 
method combined threshold approach shown practical behavior randomly generated graphs 
mention label correcting algorithm topological ordering algorithm goldberg 
algorithm tries propagate possible label updating due nodes means topological visit proper subgraph runs mn time 
primal algorithms extensively tested 
details practical efficiency main algorithmic approaches different kinds graphs see johnson gallo pallottino hung nguyen cherkassky goldberg 
case transportation models networks generally arise nonnegative arc costs structured quasi planar sparse graphs 
framework reported gallo pallottino current state art deque best choice particular applications requiring specialized algorithms 
queue threshold show similar behavior 
hand shortest search algorithms efficient transportation field due handling set expensive 

dual algorithms spt spt algorithms appeared literature maintain dual feasibility step 
ancestor algorithm family classical dual simplex algorithm maintains dual feasible basic solutions 
known dual algorithm dijkstra generally primal method interpreted dual primal dual approach papadimitriou steiglitz 
pioneering field dual algorithms spt langley looks dual feasible solution case negative arc costs trivial dual feasible solution handler propose dual algorithm solve shortest path problem additional constraint feasible paths weight value pure dual ascent algorithms described solve problem consideration 
adaptation relaxation method spt bertsekas tsitsiklis 
algorithm considers dual lagrangean problem tries maximize dual objective function updating price vector way maintain complementarity slackness conditions 
precisely price changed time follows min ij bs 
initial price vector dual feasible linear dual problem satisfies ij proved algorithm converges optimal price vector provided directed cycles positive cost algorithm may return wrong solution 
case method interpreted gauss seidel technique applied solve non linear bellman equation system 
dual ascent algorithm introduced bertsekas specializing auction approach assignment problem shortest paths 
destination node shortest path looked assumptions directed cycle positive cost forward star node apart empty 
shortest path searched primal dual approach step candidate path outgoing feasible dual vector maintained satisfy complementarity slackness conditions ij dual feasibility ij conditions 
reaches destination primal feasible solution shortest paths extension contraction operations performed node proved bertsekas auction algorithm terminates runs pseudopolynomial time case integer arc costs 
mild conditions weak polynomial version obtained cost scaling 
algorithm immediately extended solve spt 
pallottino scutell bertsekas pallottino scutell strongly polynomial versions auction algorithm proposed return shortest path tree requirement cycle costs positive assumptions topology graph generalizing auction method shortest paths 
new family dual ascent algorithms called hanging family proposed strictly related relaxation method particularly suitable parallel implementations shortest path tree reoptimization pallottino scutell 
family maintains partial shortest path tree rooted feasible dual vector satisfy complementarity slackness conditions related spt dual ij dual feasibility ii ij conditions 
vector satisfying condition 
order try augment called tree node looks entering arc ij arc type shortest path 
local global jacobi dual updating operations performed tree nodes order try extend dual ascent algorithm called local dual local reprice operation tree node local reprice min ij bs 
local dual returns optimal solution assumption cycles positive cost finds optimal solution pseudopolynomial time case integer arc costs 
overcome guarantee node step authors global information follows 
firstly partition set arcs coming set arcs outgoing tree nodes called border arcs ones called external arcs denoted bs bs respectively 
compute min ij bs min ij bs min 
tree node local reprice hanging performed 
avoid second situation hierarchy global dual updating operations illustrated introduced 
global operations maintain feasibility price vector ensure entry new node furthermore dominance relationships shown established dual updating operations arrow going node associated operation node corresponding means dominates double reprice extended reprice global reprice selected reprice classic reprice local reprice fig 
hierarchy dual updating operations global dual updating operations global information min 
threshold gap prices tree nodes sense minimum increment added prices tree nodes guarantee dual updating operations say dual vector dual solutions computed respectively applied dominates 
argmin global dual updating operation named classic reprice increases price tree nodes classic reprice updating operation corresponds classical global dual updating operation cut 
fact algorithm classic reprice simply dual interpretation known dijkstra algorithm case nonnegative arc costs 
global dual updating operations global reprice mix classic reprice local reprice selected reprice 
precisely global reprice performs local reprice operation linked value added top performed classic reprice global reprice 
hand selected reprice viewed local reprice reduced graph obtained removing external arcs entering guarantees node linked step 
formally selected reprice bw 
consider example graph arcs bold belong current partial shortest path tree current tree nodes 
number associated node current node potential numbers associated arcs arc costs 
fig local reprice performed tree node new potentials ones illustrated case tree node enters hand classic reprice applied new partial shortest path tree updated potentials ones example global reprice behaves classic reprice 
observe dominance relationship established local reprice classic reprice 
fig local reprice fig classic reprice sharper global dual updating operations extended reprice double reprice 
extended reprice merges global reprice selected reprice fact modifies price exactly performed global reprice case global reprice tree nodes property hold maximum price assigned global reprice assigned selected reprice extended reprice max 
second sharper global dual updating operation double reprice interpreted extended reprice plus second reprice operation double reprice 
extended reprice double reprice illustrated respectively 
observe extended reprice dominates local reprice classic reprice fact maximum potential returned local reprice classic reprice assigned tree node 
double reprice dominates extended reprice dual updating operations 
fig extended reprice fig double reprice proved general algorithmic framework global dual updating operations named global dual returns optimum solution case zero cost cycles runs mn time 
particular situation arises classic reprice suitable implementation global reprice algorithmic framework 
cases global dual runs time initial feasible dual solution provided 
auction approach hanging approach powerful mainly case dense graphs ad hoc initial dual feasible solution provided hanging algorithms spend lot time improving initial dual solution provided random way 
indication practical efficiency approach known moment 
wide computational experimentation progress assess practical performance algorithms transportation networks 
feeling fact dual algorithms valid instrument transportation applications specially purposes described section 

reoptimization approaches shortest paths large scale transportation models sequence shortest path problems needs solved th problem differs slightly th 
past years problem sequence generally solved independently previous 
direction reoptimization approaches faced problem finding shortest cost matrix cost arc input graph changed 
theoretical interest proposed procedures proved large amount memory required framework transportation networks 
approach updating shortest cost matrix dijkstra method efficient updating fujishige 
efficient reoptimization strategies shortest path context gallo general situations arising transportation models considered efficient reoptimization procedures proposed solution 
assuming shortest path tree relative origin say determined problem considered finding new shortest path tree origin changed origin exactly arc new cost higher lower old 
cases interesting modifications occurring practical situations reduced cases combination 
detail exactly arc new cost algorithms proposed shortest path tree cost change extensions dijkstra dial approach 
algorithms rules depend fact new cost higher lower old 
origin changed node gallo procedure recognizes subtree rooted certainly belongs new shortest path tree rooted say computes means dijkstra dial approach optimum reduced costs relative original arc costs ij ij called updated costs denotes optimum potential relative 
fact due dual feasibility price vector associated ij shortest search procedures original negative costs observe ij belonging 
strategy shown particularly effective implementing dial approach time memory requirements close input graph reoptimization procedures tested real large scale transportation networks author slight improvements shortest path codes may result major savings computational time 
extending gallo observations properties shortest path trees root node changed efficient algorithm proposed gallo pallottino compares favorably algorithms literature transportation networks 
algorithm maintains cost label relative updated costs 
starting new root step algorithm extends current shortest path tree say inserting new nodes new arcs spans precisely algorithm considers arcs cutset separating remaining nodes adds cutset arc say belongs tot minimum cost label added nodes subtree rooted reachable arcs having zero updated cost nodes minimum label entire subtree moved suitably implementing set candidate nodes obtaining efficient ad hoc implementation shortest search approach reoptimization 
primal approach gallo pallottino algorithm interpreted dual method 
fact starting partial shortest path tree dual feasible solution maintained step updated means operation behaves exactly classic reprice see previous section enlarged step inserting arcs having zero reduced cost complementary slackness conditions hold 
example consider graph shortest path tree rooted node numbers associated nodes optimum potentials 
fig 
updated costs relative shown 
fig 
assume change root 
happens subtree rooted surely belong partition arborescences corresponding cutset shown left costs updated costs numbers associated nodes cost labels node minimum cost label added node label 
new tree corresponding cutset illustrated right 
node minimum cost label old root algorithm ends moving subtree rooted node 
fig 
final shortest path tree obtained see optimum tree rooted node updated costs computation 
observe termination optimum node potentials easily derived optimum cost labels optimum potentials relative fact proved 
example optimum node potentials relative 
fig 
florian nguyen pallottino proposed variant gallo pallottino algorithm properly adapting classical dual simplex approach root change problem 
fact optimum tree respect origin primal unfeasible dual feasible root changes different node dual approach appropriate context 
main ideas firstly primal efficiently recognized orientation basic arcs respect new root particular negative valued basic arc leaves basis florian nguyen pallottino algorithm determined computing primal basic solution fact reverse arc basic tree path removal arc basis subdivides tree arborescences say containing pivot step entering arc arc resulting cutset belonging reduced cost uv uv minimum potential optimum potential relative 
subtree rooted automatically moved iteration algorithm applied graph illustrated 
numbers associated cutset arcs reduced costs relative note numbers coincide cost labels nodes left 
fig 
gallo pallottino approach dual variable updating done implicitly 
fact updating consists increasing dual variables nodes amount equal reduced cost entering arc practice main difference approaches florian nguyen pallottino method old tree structure explicitly maintained algorithm automatically move subtree rooted head selected arc particular florian nguyen pallottino method applied graph shortest path tree operations final tree described figures obtained 
auction hanging approaches suitable reoptimization shortest path tree computation shortest paths different root nodes required 
far hanging algorithms concerned consider fact shortest path tree rooted node returned hanging approach assume root changed different node consider subtree rooted optimal price vector 
complementarity slackness conditions hold arc efficiently apply hanging algorithm starting starting scratch 
algorithm iterations involve nodes belong exploit previously computed information tree dual vector potential saving computing time 
previously observed easy see dual algorithm hanging family classic reprice operation simply dual interpretation dijkstra algorithm case nonnegative arc costs highlighted section behaves exactly gallo pallottino reoptimization procedure applied computation shortest path tree different root node 
furthermore possible show hanging algorithms may collapse reoptimization procedures applied computation shortest path tree different root node 
challenge reoptimization field propose new ad hoc dual updating operations hanging approach perform wide computational investigation involving hanging auction approaches 

time dependent shortest paths interesting problems frequently arise transportation applications called dynamic shortest path problems factor time taken consideration 
applications concern example street networks real time intelligent vehicles see instance kaufman smith de palma hansen 
directed graph dynamic problems travel time delay ij associated arc meaning nonnegative leaving time node ij arrival time node addition delay timedependent cost ij generally associated cost traveling starting time furthermore possibility waiting nodes particular unit time waiting cost associated node gives unit time cost waiting time different models defined analyzed literature depending properties delay functions continuous discrete possibility waiting nodes waiting waiting node waiting root node depending choice leaving time root node particular dynamic shortest paths fixed leaving time possible leaving times 
far models continuous delay functions concerned refer orda rom orda rom 
shall limit case discrete models shall assume time variable vary discrete set applied time instant delay function ij ij loss generality context consideration transportation field time discretisation generally performed 
dynamic shortest paths discrete model efficiently studied solved introducing space time network defined ij 
arc cost ij 
furthermore order model situation waiting costs nodes allowed waiting arcs introduced way represents waiting time time unit time cost 
observe standard graph nq size pseudopolynomial respect size original graph cycles construction 
particular chronological type visit nodes visit non decreasing values time index associated nodes provides topological visit example consider graph assume delays associated arcs discrete time period 
fig 
associated space time network illustrated costs reported assumption waiting possible node 
fig 
space time network key property discrete case possible solve dynamic shortest path problems working implicitly means topological visit acyclic clearly non redundant portion needs considered implicitly generated 
doing minimum cost dynamic path problem looks minimum cost path root node leaving time solved mq time delay cost waiting functions 
algorithmic point view suggest selecting nodes implicitly generating non redundant portion means chronological order considering nodes corresponding time ones 
resulting algorithmic paradigm called chrono spt formally described 
paradigm uses bucket list dial order efficiently perform selection operations implementing chronological visit denotes bucket containing nodes visited time instant observe efficiently circular bucket list save space 
notation indicates current predecessor node time denotes label associated shall limit description typical algorithm iteration shall denote current bucket node selection non empty bucket 
initial step departure time buckets empty 
condition verified buckets empty happens minimum labels associated node gives optimum path cost 
procedure chrono spt typical iteration select fs ij ij ij waiting time allowed easy prove chrono spt correct runs time set non redundant arcs implicitly generated chrono spt 
clearly mq worst case algorithm time complexity mq 
considering example figures root node admitted leaving times non redundant portion costs associated arcs 
fig 
non redundant portion assume minimum cost path needs node node 
case bucket list constructed chrono spt implementing chronological visit shown 
bucket contains list pairs type node label node denotes node visited time instant label represents corresponding cost label 
nil fig 
bucket list example cost label associated node valued time bucket minimum cost path 
fifo cost consistency local properties satisfied dynamic model stronger approaches derived 
consider called fifo property arc said fifo arc leaving earlier guarantees arrive 
formally ij ij 
dynamic graph said fifo graph arcs fifo non fifo 
waiting nodes allowed similar property imposed arc costs follows arc said cost consistent cc arc leaving earlier cost leaving cc graph arcs cc arcs 
formally ij ij cases considered fifo arc case cc arc ij ij 
fifo arc case cc arc ij ij 
cost consistency property illustrated 
definition different literature instance proposed 
fact arc cost consistent ij ij ij ij ij ij fig 
cc arc fifo fifo graph consideration fifo cc relevant additional properties generally hold dynamic problems 
fifo cc leaving earlier arc allows arrive pay leaving concept dominated labels introduced exploited algorithmic paradigm chrono spt 
suppose fact visited different paths origin node certain node suppose paths arrive time time respectively assume costs paths 
case graph fifo cc convenient extend second path arc outgoing extension produce minimum cost path going node cost second path called dominated label node ignored 
chrono spt simplified way maintain non dominated labels 
observe hz current set non dominated labels associated node ordered respect increasing values time index hz 
hz 
buckets implementation adopted described previous section overhead due maintenance ordered sets time consuming suggest checking dominance label selected current bucket 
case sufficient modify chrono spt way compare selected non dominated label relative node call label fact label discard dominated label described chrono spt dominated 
typical iteration chrono spt rewritten 
observe waiting arcs ignored graph fifo cc 
observe maintenance overhead charged selection operations increasing time complexity chrono spt 
particular algorithm execution time complexity build incremental way ordered set node compute set non dominated labels associated node 
typical iteration case fifo cc select label label fs ij ij ij example consider dynamic graph time period assume delays equal 
graph fifo 
fig 
fifo graph root node leaving time destination node nonredundant portion space time network costs associated arcs waiting costs assumed zero waiting arcs 
observe cc property satisfied arc dynamic graph cc graph waiting arcs removed fig 
non redundant portion bucket list constructed chrono spt implementing chronological visit shown 
graph fifo cc non dominated labels maintained bucket list 
nil dominated label fig 
bucket list observe particular label associated node dominated nodes visited chrono spt subgraph non redundant portion generally visited graph fifo cc 
minimum cost path 
minimum time specific departure time important special dynamic problem minimum time dynamic path problem specific departure time want find minimum arrival time path origin node node departure time case look space time network problem reformulated connectivity problem fact destination node want find minimum time instant directed path exists node node efficiently solve problem modification paradigm chrono spt cost labels ignored condition verified node selected bucket data structure 
original graph satisfies fifo property easy show non dominated label associated node minimum arrival time node 
chrono spt reduced classical dial shortest path algorithm bucket list 
case problem time complexity min nlogn 

minimum time departure times related problem minimum time dynamic path problem departure times looks minimum arrival time paths node destination node possible departure times 
problem addressed cooke dreyfus 
solved extending classical shortest path approach time 
observe chrono spt called times algorithm obtained solves problem time mq time 
efficient approach devised reverse chronological visit reverse scanning order bucket list current minimum time paths leaving time implicitly starting bucket perform reverse chronological visit node selected backward star scanned labels properly updated necessary nodes inserted bucket list 
easy show termination minimum arrival time determined possible departure time clearly time complexity reverse approach mq worst case 
approach reverse chronological visit independently proposed 
algorithm visits entire space time network algorithm derived visits non redundant portion order illustrate proposed approach consider space time network assume waiting allowed node admitted arrival times destination node non redundant portion explored reverse chronological visit shown corresponding optimum time labels 
fig 
departure times minimum time labels 
time windows chrono spt powerful paradigm applied related dynamic problem shortest path problem time windows described pelletier 
problem constant cost ij constant positive delay ij associated arc shortest paths respect costs looked 
crucial aspect time window associated node stating possible leave node integer times belonging interval waiting allowed arrival node time 
order exploit chrono spt sufficient define space time network max ij 
defined constant delays shortest path problem time windows immediately extended case time dependent delays 
example imposing constant costs arcs graph associating time windows listed nodes obtain space time network partially described sake simplicity delays costs omitted 
arc depicted order illustrate possibility waiting time fig 
space time network case time windows case time windows constant delays space time network fifo cc delays costs constant waiting costs zero 
min nd md max 
chrono spt solves shortest path problem time windows min nd md time delay function 
adaptation chrono spt case time windows proposed pallottino suggestions 

issues transportation models transportation problems shortest paths pure form 
minimum cost path additional properties looked 
aim section special cases studied quite frequently literature 
particular shall address minimum cost path problem turn penalties prohibitions multicriteria shortest path problem shortest hyperpath problem 

minimum cost paths turn penalties prohibitions urban private car models turning left forbidden allowed traffic lights counter flow cause extra travel cost taken account finding minimum cost itinerary points 
generally speaking graph ij denotes cost arc assume penalty ab associated pair subsequent arcs 
finite positive penalty represents average cost entering arc arc infinite penalty represents turn prohibition forbidden enter 
framework path cost sum arc costs pair arcs penalties relative path 
note forbidden path path containing turn prohibition infinite cost 
different approaches followed literature address problem see kirby potts 
approaches called dual network graph obtained considering original arcs nodes introducing arc pair subsequent arcs original graph cost equal sum cost arc penalty 
approaches build expanded network obtained highlighting movement intersections means dummy nodes arcs costs dummy arcs penalties shown 
major drawback approaches resulting network considerably larger original graph modification movement rules requires network updating 
ab ac ba bc ca cb da db fig 
expanded intersection penalties movement arcs alternative approach kirby potts describe path sequence arcs sequence nodes way possible define path cost terms arc costs pair arcs penalties new formulation generalize bellman classical conditions 
kirby potts suggested algorithm inspired researchers adapt shortest path algorithm new formulation 
literature fact wide variety called arc label shortest path algorithms obtained exploiting bellman conditions related problem arc formulation classical shortest path algorithmic framework instance see de la 
sake brevity shall describe key points arc label shortest path approach 
input graph stored forward adjacency list form gallo pallottino della valle node points adjacent nodes assuming corresponding arc costs stored properly likewise arc points subsequent arcs corresponding pair arcs penalties 
arc label shortest path approach maintains candidate list label vector predecessor vector related arcs label arc represents cost path root contains arc preceding current path core algorithm select remove arc list say properly scan forward star node fs 
denote generic arc fs 
bellman condition pair arcs ab jk violated label predecessor arc updated ab jk inserted 
contains dummy arc entering empty define respectively set shortest paths terms arcs minimum costs arc label correcting version arc label shortest path approach proposed 
algorithm labels number outgoing arcs associated node label represents cost path origin arc list set candidate nodes 
node selected removed labels treated described label node improved node inserted observe doing labels improved may treated node selection operation 
opinion overhead label management may affect efficiency algorithm 
hybrid algorithm proposed della valle order manage street networks turn penalties defined portion street intersections 
algorithm handles arc labels node labels node labels turn penalties arc labels adopted presence turn penalties 
authors show experimentally italian street networks proposed approach competitive expanded network pure arc label approach 
fact tests show hybrid algorithm dominates approach intersections turn penalties prohibitions dominates arc label algorithm regardless rate intersections turn penalties prohibitions 
city intersections turn penalties prohibitions average running time hybrid algorithm arc label approach fact algorithms coincide average running time approach expanded network 

multicriteria shortest paths transportation problems paths characterized attributes length cost time risk congestion 
cases different attributes condensed new unique attribute generalized cost combining original attributes 
cases paths minimum generalized cost looked 
applications condensation attributes impossible discouraged direct approaches followed find optimal solutions 
example suppose extend dynamic problems described section suppose want find non dominated paths criteria cost time 
easy show unique optimal path exist situation large set non dominated paths represent target solution set 
sake simplicity consider shortest path problem 
graph assume measures ij ij associated arc called cost weight respectively 
set arcs path origin destination cost weight denote functions costs weights respectively arcs belonging ij ij 
denote family feasible subsets arcs arcs paths origin destination 
dominated path exists path strict inequality holds said non dominated efficient 
shortest path problem find subfamily formed efficient paths origin destination 
general shortest path problem np hard hansen studied problem solved polynomial time depending properties functions mote murthy olson proposed parametric algorithm determining efficient paths linear programming relaxation 
described exact approximate algorithms problem solution 
particular proposed fully polynomial approximation schema approximating efficient paths 
generalizations fully polynomial approximation schema multicriteria shortest path problems suggested safer orlin necessary sufficient conditions developed existence fast approximation schema 
approaches efficient particular situations described 
consider shortest path problem common origin node node graph 
suppose measures say path weight ordered list possible path weights say finite known priori common transportation applications 
suppose 
hypotheses pseudopolynomial algorithm derived associating different labels node possible path weight follows current minimum cost paths weight equal keeps set non dominated labels related node pair non dominated labels say easy prove inequality hold 
list concept dominance different algorithmic approaches proposed literature 
multi label approach instance see 
sake simplicity assume costs weights nonnegative sum function 
node suppose non dominated labels associated node listed weight index due non dominance property labels ordered decreasing way respect values 
node say selected leaving arc analyzed candidate label ij compared label ij 
ij constant arc list non dominated labels node simply shifted respect weight index label values increased value ij follows list candidate labels satisfies property properly merged current list non dominated labels associated keeping lowest value labels weight index exist 
new label list node cleaned removing dominated labels merging operation 
second approach literature sense topological viewed adaptation version chrono spt maintains sets non dominated labels 
implement sets non dominated labels bucket list th bucket contains non dominated labels step current label selected lowest non empty bucket weights considered non decreasing ordering processed performing similar operations ones described chrono spt 
note physical number buckets implemented limited maximum arc weight plus dial 
clearly topological algorithm finds non dominated paths nondecreasing ordering path weights 
general approach best follow multi label topological strongly depends structure problem consideration 
example shall describe transportation problem topological algorithm efficient 
transit network arc costs want find minimum cost paths origin nodes subject constraint number transfers exceed maximum number say example consider transfer number weight associated arcs transfer arcs weight equal arcs weight equal 
number transfers limited index labels buckets 
labels selected th bucket previous buckets emptied buckets empty fact transfer number increases step 
wrap handling bucket list limits physical number 
consequence order implement bucket list maintain lists say plays role represented lists typical iteration consists selecting node corresponding label 
chrono spt suggest checking dominance step comparing selected non dominated label relative node label terminology 
label discard dominated label 
arc fs transfer arc candidate label ij compared lower suitably decreased inserted label hand transfer arc ij compared necessary inserted empty minimum cost paths transfers 
happens algorithm swaps lists vice versa starts process non dominated labels relative paths transfer number 
emptied algorithm stops 
resulting time complexity mk 
example consider transfer network transfer arcs bidirectional ones having cost equal assume minimum cost path needs node node subject constraint number transfers exceed 
fig transit network transfer arcs example set considered paths depicted pair labels associated node denotes cost number transfers respectively 
fig example minimum cost path subject constraint number transfers exceed lists constructed algorithm number transfers shown list obtained emptied 

shortest hyperpaths transit services urban areas frequently organized passengers know exact arrival time buses stops frequency bus line 
shown nguyen pallottino behavior passengers represented classical path passengers wait certain start continue trip destination passengers select priori subset lines lines serving called attractive set 
meaning attractive set passengers wait board buses serving non attractive line board bus serving attractive line arrive 
want draw passenger priori strategy defined attractive sets consider set subpaths leaving origin node arriving subsequent stops attractive sets consider subpaths outgoing new stops attractive sets destination node 
path origin destination attractive lines fact alternative passenger trip 
partial graph defined alternatives stream paths origin destination trip called hyperpath 
depending arrivals buses stops passenger travel exactly paths stream certain probability 
expected cost hyperpath mean cost paths belonging hyperpath weights path probabilities 
hyperpath expected cost computed iteratively starting destination line considered attractive probability bus serving line arrive 
details see nguyen pallottino marcotte nguyen 
transit networks introduced modeled particular directed hypergraphs generalization classical directed graphs details theory hypergraphs hyperpaths see gallo longo nguyen pallottino 
case equilibrium transit assignment possible formulate problem terms hypergraphs formulation solve problem iteratively computing shortest hyperpaths 
shown gallo longo nguyen pallottino classical shortest path algorithms generalized find certain classes shortest hyperpaths directed hypergraphs low computational time complexity 
particular shortest hyperpath algorithms adapted particular hypergraph structure transit networks described nguyen pallottino 
true shortest search algorithms list search algorithms 
sake brevity details shortest hyperpath algorithms reported 
hyperpath framework exploited urban transit problems 
fact transportation problems need model user behavior exact itinerary completely defined priori new information new network state modify ideal itinerary chosen user 
cases hyperpaths model quite kind adaptive user choice terms stream alternative paths addition ideal path 
kind hyperpath generalization context transportation problems topic research see marcotte nguyen book 
described main algorithmic approaches proposed literature different kinds shortest path problems graphs hypergraphs focusing problems particularly interesting transportation framework 
opinion difficult discover original innovative algorithmic approaches problems consideration case pure shortest path field transportation literature 
fact believe research focus production ad hoc algorithms derived main algorithmic paradigms appeared far depending choices lower level data structures order node selection may considerably affect algorithm performance 
philosophy illustrated efficient techniques producing ad hoc algorithms general algorithmic paradigms provided mainly relevant transportation applications 
particular described powerful algorithmic schema chrono spt time dependent shortest path problems shown easily tailored capture nature different shortest path problems shortest path producing efficient algorithms cases 
hope description algorithmic paradigms techniques outlined producing efficient specialized shortest path algorithms may suggest stimulate development ad hoc procedures transportation field 
qui ahuja magnanti orlin network flows theory algorithms applications 
prentice hall englewood cliffs nj 
ahuja mehlhorn orlin tarjan faster algorithms shortest path problem journal acm 
langley dual shortest path algorithm siam journal applied mathematics 
bellman routing problem quarterly applied mathematics 
bertsekas auction algorithm shortest paths siam journal optimization 
bertsekas linear network optimization algorithms codes 
press cambridge ma 
bertsekas simple fast label correcting algorithm shortest paths networks 
bertsekas pallottino scutell polynomial auction algorithms shortest paths computational optimization applications 
bertsekas tsitsiklis parallel distributed computation numerical methods 
prentice hall englewood cliffs nj 
new algorithm shortest paths discrete dynamic networks th ifac symposium transportation systems greece 
cherkassky goldberg shortest paths algorithms theory experimental evaluation mathematical programming 
cooke shortest route network time dependent transit times journal mathematical analysis applications 
de la integrated land transport modelling 
cambridge univ press 
de palma hansen paths penalties early late arrival times transportation science 
della valle ricerca dei di un algoritmo di di ricerca 
fox shortest route methods 
reaching pruning buckets operations research 
fox shortest route methods 
group knapsacks expanded networks branch bound operations research 
deo pang shortest path algorithms taxonomy annotation networks 
generalized permanent labelling algorithm shortest path problem time windows infor 
pelletier plus court avec contraintes 
dial algorithm shortest path forest topological ordering communications 
dijkstra note problems connexion graphs 
tude extension un algorithme de infor 
dreyfus appraisal shortest path algorithms operations research 
florian nguyen pallottino dual simplex algorithm finding shortest paths networks 
ford jr 
network flow theory rand 
fredman tarjan fibonacci heaps uses improved network optimization algorithms journal acm 
fujishige note problem updating shortest paths networks 
gallo reoptimization procedures shortest path problems di matematica le scienze 
gallo longo nguyen pallottino directed hypergraphs applications discrete applied mathematics 
gallo pallottino new algorithm find shortest paths pairs nodes discrete applied mathematics 
gallo pallottino shortest path methods transportation models florian ed 
transportation planning models north holland 
gallo pallottino shortest path methods unifying approach mathematical programming study 
gallo pallottino shortest path algorithms annals operations research 
glover glover computational study improved shortest path algorithm networks 
glover phillips new polynomially bounded shortest path algorithm operations research 
glover phillips schneider new polynomial shortest path algorithms computational attributes management science 
goldberg heuristic improvement bellman ford algorithm applied mathematics letters 
handler dual algorithm constrained shortest path problem networks 
hansen path problems gal eds 
multicriteria decision making theory applications lecture notes economics mathematical systems springer heidelberg 
hung computational study efficient shortest path algorithms computers operations research 
israeli multi objective approach designing transit routes frequencies toth eds 
advanced methods transportation analysis springer berlin 
johnson algorithms shortest paths ph thesis cornell univ tr 
johnson note dijkstra shortest path algorithm journal acm 
johnson shortest paths sorting proc 
th acm annual conference 
kaufman smith fastest paths time dependent networks intelligent vehicle highway systems applications journal 
note finding shortest path trees networks 
kirby potts minimum route problem networks turn penalties prohibitions transportation research 
lawler combinatorial optimization networks matroids 
holt rinehart winston new york ny 
marcotte nguyen hyperpath formulation capacitated traffic assignment proc 
equilibrium advanced transportation modelling colloquium book 
deo parallel algorithms single source shortest path problem computing 

mise au point un pour la du transport des de universit de crt 

nguyen shortest path algorithms computational study programming language computers operations research 
moore shortest path maze proc 
international symposium theory switching part harvard univ press 
mote murthy olson parametric approach solving shortest path problems european journal operational research 
fixed matrix method shortest distances directed graph inverse problem ph thesis univ karlsruhe 
time depending shortest path problems applications railway networks european journal operational research 
nguyen pallottino dei ad un di degli ricerca 
nguyen pallottino equilibrium traffic assignment large scale transit networks european journal operational research 
nguyen pallottino hyperpaths shortest hyperpaths ed 
combinatorial optimization lecture notes mathematics springer verlag berlin 
orda rom shortest path minimum delay algorithms network time dependent edge length journal acm 
orda rom minimum weight paths time dependent network networks 
pallottino shortest path methods complexity interrelations new propositions networks 
pallottino scutell strongly polynomial algorithms shortest paths ricerca 
pallottino scutell dual algorithms shortest path tree problem forthcoming networks 
papadimitriou steiglitz combinatorial optimization algorithms complexity 
prentice hall englewood cliffs nj 
pape implementation efficiency moore algorithms shortest route problem mathematical programming 
private communication 
safer orlin fast approximation schemes multi criteria combinatorial optimization sloan school management massachusetts institute technology working 
properties labeling methods determining shortest path trees journal research national bureau standards 
optimization transport networks wiley london 
tarjan data structures network algorithms siam philadelphia pa van vliet improved shortest path algorithms transport networks transportation research 
shortest path problems university ottawa working 
approximation pareto optima multiple objective shortest path problems operations research 
optimum path algorithms multidimensional networks analysis design implementation computational experience ph thesis university texas austin 
time dependent shortest path algorithm real time intelligent vehicle highway system applications transportation research record 
note time path computation considering delays prohibitions intersection movements transportation research 
