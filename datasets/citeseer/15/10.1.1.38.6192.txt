formalization graphical schemas general sketch logic vs heuristic pictures diskin frame inform systems riga latvia mail diskin frame riga lv 
new approach semantic modeling view integration proposed 
underlying data model graph completely formalized graphical schemas precise specifications suitable implementation 
formalism kind graph object generalization relational data model analytical assertions elements values replaced synthetic assertions diagrams sets object classes functions correspondingly queries operations diagrams 
hand approach adaptation familiar mathematical category theory specification framework called sketches 
ground new approach view integration suggested 
distinctive characteristics way specifying correspondence different views universe discourse 
specifications formalized equations reduces integration task sequence formal algebraic procedures 
automatic run automated interactive mode 
case approach provides precise specifications required put automated integrator 
preliminary discussion long time tradition dimensional graphical images call schemas presentation data 
artificial intelligence ai connected concept semantic network 
database area db tradition usually formulated name entity relationship er data model gave rise variety information modeling techniques extension generalization classical er ground 
date er model de facto standard db design think subject er diagrams see spaccapietra 

common applications schemas consider auxiliary means valuable heuristic considerations precise implementable schemas converted ordinary linear string specifications established notions term formula 
handle developed machinery order logic fol suitable fragment specifically equational logic see brief illuminating discussion 

contrast manipulations schemas informal supported ad hoc mathematics created ai db theorists 
fact nowadays information modeling forced alter scylla easy hardly formalized graph approaches logically clear perfect inflexible relational languages 
due evident tendency practitioner exists field today cookbook approaches poorly formed having subjective components navathe 
gives rise tempting problem providing schemas appropriate underlying graph logic graphical images regarded formal specifications 
supported council science conceptual graphs aimed goal related approach propose 
unfortunately author informed large body done area finished examination relationship remains 
general objective suggest general approach problem encompassing variety kinds schemas 
approach aims providing uniform way kind schemas corresponding logic schema considered theory logic 
similar idea developed mathematical category theory concept sketch standard 
framework sketch generalization ordinary model theory formalism normally supporting mathematical structures sets case models graphs various kinds 
intuitive idea approach follows 
suggest characterize internal structures objects mappings classes objects 
example saying set consists tuples list domains dn equivalently say separating family functions gamma 
sep implies case function gamma 
theta theta dn determined standard way fx injective relation isomorphism 
elements identified tuples subjected conditions explicit way 
way regarding things called arrow thinking contrast usual thinking terms sets elements constitutes essence category theory 
numerous achievements metamathematics demonstrate power arrow framework 
hand approach semantic modeling close spirit known functional data model fdm introduced 
developed see object classes considered homogeneous type information classes held arrow specifically attribute structures connected classes develop sketch arrow framework semantic modeling logic graph assertions classes functions 
note view point fol logic discrete assertions elements values suited conceptual modeling db design 
formally sketches graphical constructs consisting kinds items nodes interpreted sets ii arrows interpreted functions corresponding sets iii diagram markers interpreted constrains imposed diagrams labeled markers informally diagram graph mean certain collection nodes arrows formal definition see section 
consider simple example specifying structure consisting binary relations 
fol relational model theory take signature sigma consisting predicate symbols say arities ar ar names value domains consider sigma models pairs domain sets relations accordance arities 
addition properties relational structure require specified fol formulas totally defined functional partitioned corresponding projections require satisfaction formulas entire specification look left half fig denotes strict disjunction model rel couple delta sigma delta carrier consisting sets sigma signature interpretation consisting relations ae theta ae theta axioms satisfied 
term graph senses narrow general 
precise means notion called directed multigraph graph theoretic terms edges oriented called arrows may arrow nodes 
particular set graph graph nodes sets arrows functions 
graph general sense refer variety graph constructs uniform way 
mean graphs additional arrows arrows graphs arrows arrows nodes lists sets bags 
term graph intended general sense couples graph graph single case remarkable point specialists information modeling recover category theory concepts 
fol specification rel domains delta relational signature sigma axioms fol specification rel sketch specification sk rel sketch type marker shape gamma gamma gamma 
ffi ffl sketch ffl ffl ffl ffl ffl ffi ffi ffi sketch specification sk rel fig 

sketches vs order logic arrow approach structure specified graphical image sketch right half fig see sketch graph nodes arrows labeled names diagrams graph marked special markers domain nodes marked white circles black circles considered non marked nodes arrow couples marked arcs denoting separation constraint arrow marked triangle head denoting surjectivity arrow marked arc tail denoting injectivity arrow couple marked double arc denoting images mappings cover common target ii disjoint 
model specification defined mapping assigns sets nodes functions arrows constraints expressed markers satisfied function couples separating functions surjective thorough analysis sketch allows distinguish carrier graph delta oe oe oe endowed diagrams diagrams shape marked arcs diagram shape marked triangle head diagrams shape ffl marked white circle contrast fol sketch specification mechanism graph carriers analytical assertions elements replaced synthetic assertions arrow diagrams 
allows replace string extensive fol specifications concise graphical schemas equal logical rigor evident observable 
just technical advantage presentation certain situations crucial modeling complex information arrays major stage db design just point determines great success er model 
great advantage sketch specification language provably 
universal sense formal data specification replaced equivalent sketch appropriate type 
known chief categorical construction called topos specified sketch categorical logician say 
hand constructive set theory higher order logic type theory interpreted toposes conversely see 
known topos kind nested relational algebra corresponding set graph 
full power higher order logic including simulated sketches conversely 
conceptual distinction sketch logic object orientedness 
normally fol logic assertions values needs special machinery capture objects framework 
sketch logic logic assertions sets classes objects functions object needs special machinery capture values 
see treatment values specification written conventional formal language modern mathematics sketches possible quite natural simple way introducing objects fol framework requires significant efforts abundance literature subject shows see 

remarkable conceptual advantages sketch framework provide effective solution extremely important practical problem view integration see survey 
challenge semantic modeling theory practice sketches provide real possibility handle heterogeneity semantic conflicts effective consistent way demonstrated outlined 
distinguished feature sketch approach correspondence views specified equations reduces task view integration algebraic manipulations sketches 
addition rigor semantics sketches possible distinguish general integration procedure parts fully automated performed integrating person dba 
turn phases computer aided sketch framework brings light limitations possibilities automation schema data integration 
things view integration application demonstrating example section shows importance diagram operations sketches 
issue precise considering diagram operations semantic schemas appreciated adequately ai db communities category theory 
outline formal theory operations section 
semantic modeling sketches glance graphical images currently semantic modeling shows abundance various kinds conventional graphical constructs symbols labels markers 
specialist semantic modeling db designer uses kind semantic schemas finds suitable convenient purposes 
natural reasonable problems arise 
natural theoretical question existing collection modeling constructs sufficient specifying possible semantic constructions complete sense sense mean 
problem universality view integration techniques tools independence data model 
field strongly needs data definition manipulation language combining evidence user friendliness graph oriented semantic models formal rigor clearness relational models 
firmly believe sketch approach provides proper respect managing heterogeneity universal framework data modeling view integration 
suggesting idea want force db designers universal specification language collection markers likes 
suggest concerns marked semantic schemas 
majority semantic schemas particularly er diagrams kind de facto standard area conceptual design modeling order specify intended semantic meaning node schema marks node corresponding label 
instance er standard specify node relation set relationship objects tuples labels diamond 
user perceives data objects entities labels corresponding node schema rectangle 
node integrated schema labeled 
observe structural conflicts caused determining internal structure set determining structure elements relation set tuples powerset set subsets contrast thinking terms elements category theory paradigm arrow thinking suggests specify internal structure elements set characterizing labeling corresponding diagram general discussion extremely high relevance sketches categorical logic db area 
detail approach reduces kinds conflicts semantic views distinguished db literature see works spaccapietra conflicts kinds structural conflicts basic derived information considered basic view considered derived view constraint conflicts diagram markers 
functions adjoint set 
example described specify set set tuples safely leave set imposition constraints constrain corresponding source outgoing functions satisfy separation condition sep 
correspondingly syntax level specify node relation safely leave node marking mark corresponding source outgoing arrows label say arc denoting separation condition known idea designating key relation 
leftmost sketch fig describes node ternary relation 
mean extent mapping assigns sets corresponding nodes functions corresponding arrows satisfies constraint expressed arc marker separating family relation isomorphism 
explain sketch markers semi formal way accurate distinguishing syntax semantics levels 
hoped precise formulations easily built example 
collection diagram markers table 
example pictures sketches fig explain node relation disjoint sum coproduct union image function subset powerset respectively 
ffi fl ff delta delta delta delta au ffi fl fl ffi delta delta delta delta ka ffi fl delta delta delta delta ka delta delta delta delta au omega psi ff delta delta delta delta au fig 

simple sketches experience shown sketches turn handy machinery semantic modeling integration 
particular convenient semi automated phases integration performed interactive mode 
addition sketch treatment integration essentially algebraic extensive integration steps reduced formal algebraic manipulations terms equations provides effective computer realization 
view integration sketches equations despite simplicity considerations clearly demonstrate general possibility semantic modeling imposing conditions arrow diagrams contrary imposing conditions nodes done current semantic schemas 
remarkable replacement labeling nodes labeling arrow diagram allows avoid certain kinds structural conflicts views described previous section note conflicts large body works devoted see spaccapietra 
real structural conflicts 
simple example conflict er schemas fig 
clear names people schema person second refer class objects real world schemas overlapped semantically 
question expressed formal way 
thorough analysis situation shows semantic overlapping amounts part information considered basic view extracted second view derived information making corresponding queries vice verse 
specify observation formally proceed follows 
name arity shape designation denotational semantics separating source fl theta theta theta theta fn yn implies monic arrow implies isa arrow inclusion ae ae covering flow theta theta theta theta ffi mb fn xn cover inversion oe maximal separating source fl theta theta theta theta fn yn implies yn yn fn yn disjoint covering flow theta theta theta theta ffi mb fn xn implies ffl relation fl theta theta theta theta implies ff gamma yg ff gamma embedding constructions tagged trivial cases previous markers 
table 
collection diagram constraints month people name day gamma gamma phi phi gamma gamma ear men women er diagram person gamma gamma age name sex er diagram fig 

er schemas integrated convert er schemas sketches directed graphs diagrams labeled special markers resulting sketches depicted fig upsilon sigma xi pi integer oe month date upsilon sigma upsilon sigma upsilon sigma xi pi string upsilon sigma xi pi integer year day name upsilon sigma xi pi integer people women men men sketch person age sex upsilon sigma xi pi integer upsilon sigma xi pi string name ff omega phi psi fm fg sketch fig 

transformation er schemas sketches note attributes functions nodes intended semantics predefined supported computer system fact predefined data types sense programming languages particular domain sex consists fixed tags fact userdefined data type 
semantic modeling nodes usually called printable specially labeled distinguish nodes 
label nodes typing typewriter font 
semantic schemas converted sketches turn specifying correspondence views sketch language 
step extend original sketches nodes arrows denoting derived data correspondence views explicit formally described fig 
specifically get derived elements fig proceed follows 
extend sketch predefined function gamma integer gamma 
integer subtraction compose arrows year get arrow age marker corresponding diagram just expresses fact age obtained operation composition 
second sketch enrich inclusions fmg ae fm fg ffg ae fm fg existence derivable existence set fm fg apply twice operation function subset codomain see table order obtain derived items mp rs mp sex fp rs fp sex marker hung square diagram just expresses fact corresponding nodes arrows diagram obtained diagram operation extensions computed corresponding procedure 
extended initial black sketches black green sketches specifying additional derived data 
integrating person database designer dba specify correspondence views form equations fix identification corresponding nodes arrows 
required set equations eci ci abbreviation correspondence information table integer fm fg markers precise sense hung corresponding nodes constraints imposed intended semantic interpretations 
time person men merely names labeling corresponding nodes imposing constraints 
convenient picture initial sketches colour say black derived components colour say green 
typographical reasons replace green painting derived items hanging various superscript names 
addition derived nodes arrows obtained simultaneously applying operation marked superscript superscript labels marker operation 
upsilon sigma xi pi integer oe month date upsilon sigma upsilon sigma upsilon sigma xi pi string upsilon sigma xi pi integer year day name upsilon sigma xi pi integer people women age upsilon sigma xi pi integer men men sketch upsilon sigma xi pi integer upsilon sigma xi pi string kq age name mprs mp person fp ff omega phi psi fmg ff omega phi psi fm fg sex ff omega phi psi ffg sketch sketches extended derived items denote respectively 
inclusions fmg ffg fm fg people age name men men women person age name mprs mp fp correspondence equations eci fig 

specifying correspondence information fig items standing column give equation men mp 
equality functions means particularly equalities domains codomains respectively node equations table removed just shortened notation specified correspondence views formal way correspondence assertions equations point far reaching consequences 
step integration process performed 
consists glueing nodes arrows appear correspondence equations fact quotient disjoint sum graphs congruence generated equations 
resulting glued node arrow coloured green iff origins green 
result glueing fig denoted phi eci symbol denotes operation quotient congruence generated set equations short phi ci name full integrated sketch refers fact sketch contains necessary information addition derived green information 
integration dba choose full sketch items contained extracted means operations prescribed list 
call generating fig certainly different possibilities choosing generating 
choose different ways extending initial sketches state correspondence 
example operation attr takes partition set say fx ng produces corresponding attribute function attr ff gamma 
ng ff iff apply sketch 
obtain full integrated sketch correspondingly generating 
various choices equational specifications correspondence information lead different full integrated sketches si si si addition different generating fis si si si sketches equivalent sense equality closures derived information extracted prescribed set diagram operations specifications corresponding queries 
speak reason questions convenient introduce closure operator der precise terms monad acting category schemas schema closure containing upsilon sigma xi pi integer oe month date upsilon sigma upsilon sigma upsilon sigma xi pi string upsilon sigma xi pi integer year day name upsilon sigma xi pi integer people women age sex upsilon sigma xi pi integer men men ff omega phi psi fm fg ff omega phi psi ffg ff omega phi psi fmg full sketch fis si phi ci mapping oe si name men si name men mapping oe si name age sex si name age sex mappings local sketches fis fig 

integration merging factorizing upsilon sigma xi pi integer oe month date upsilon sigma upsilon sigma upsilon sigma xi pi integer year day kq upsilon sigma xi pi integer person name upsilon sigma xi pi string ff omega phi psi fm fg sex generating sketch si mapping oe name men si name sex sex mapping oe name sex age si name sex year gamma mappings local sketches fig 

integration ii removing redundant items example just discussed fix correspondence views sufficient state correspondence equations initial schemas basic derived items correspondence views consisted extents corresponding items 
general case specify correspondence equationally required introduce new schema sketch fixing complex correlations extents 
example people set view subset person set second view introduces specification fig proceeds integration sci lines described 
general integration local schemas turns disjoint merging sketches sn sn sn ci factorizing result congruence generated ci gluing certain items merge ci equations 
result mentioned manipulations written phi phi sn phi sci ci denote results extending local sketches derived items result integration 
integrated sketch integration procedure determines mappings local sketches oe addition images mappings cover nodes arrows belongs oe possible derived items extensions extracted extensions items queries 
equivalent information capacity schemas listed means si certainly particular tasks concrete task view integration need finite parts concept full closure useful 
quite similar usefulness notion set natural numbers signature operations consisting single operation successor 
people person correspondence information sketch sci sci people people sci person person correspondence equations eci fig 

example specifying correspondence information procedure performed steps 
consists disjoint merging graphs underlying local sketches factorizing merge ci equations step performed fully automatic way 
second step consists converting integrated graph sketch integrating diagram markers local sketches 
diagram conflicts arise real conflicts views bring light inconsistency views 
simple examples clearly demonstrate key technical issue view integration consists extending local schemas means certain diagram operations taken predefined collection 
order handle view integration mode able apply algorithms different semantic data models needs formal framework specifying diagram operations sketches 
subject section 
considered call order graphical images specifying data certain suggestion operate 
general idea approach propose summarized follows 
specified formally specified sorted order logic ordinary model theory 
models graph carrying structures bases specifications turn bulky hard manipulate 
suggest generalize ordinary fol formalism case graph bases multigraphs graphs 
fixing base collection graph objects morphisms constitutes category mathematical sense define notions operation predicate composed specification term formula theory model specification 
done natural sketch manner type operations predicates theories generalized sketches models prove sketch morphisms 
thesis 
mean schema graphical image nodes edges kind marking identified 
explicit discipline schemas rigorously formalized means sketches sketch operations appropriate kind 
identify schemas sketches type category collect new category explore operations specifying schema manipulations 
construction iterated choose base category choose new type forth 
way demonstrated er diagram converted sketch corresponding type 
specifying queries diagram amounts closing sketch der closure applying corresponding sketch operations 
course thesis informal statement church thesis proved companion reports hopefully provide certain justification 

ait kaci 
algebraic semantics approach effective resolution type equations 
theoretical computer addition shown general problem marker integration undecidable 
fact kind classifying topos reader familiar things science 

barr wells 
category theory computing science 
prentice hall international series computer science 

batini lenzerini navathe 
comparitive analysis methodologies database schema integration 
acm computing surveys 

buneman davidson 
theoretical aspects schema merging 
edbt 

diskin 
algebraic graph oriented category theory 
manifesto categorizing database theory 
technical report fis frame inform systems riga latvia 
ftp ftp cs chalmers se pub users diskin manifest 

diskin 
algebraic graph oriented approach view integration 
part specification framework general strategy 
technical report fis frame inform systems riga latvia 

diskin 
algebraic graph approach management systems schema integration sketches equations 
appear proc 
nd int workshop generation information technologies systems israel june 
extended available ftp ftp cs chalmers se pub users diskin 

diskin 
variable sets functions framework conceptual modeling integrating er oo sketches dynamic markers 
technical report fis frame inform systems riga latvia 
submitted oo er 

diskin 
operation sketches 
talk winter meeting computer science department chalmers university goteborg january 

diskin 
algebraic graph approach management systems ii mathematical aspects schema integration 
appear proc moscow acm chapter nd int conf 
advances databases information systems adbis moscow russia june 

hull king 
semantic database modeling survey applications research issues 
acm computing surveys 

kerschberg 
functional database model 
technical report univ rio de janeiro 

kifer lausen wu 
logical foundations object oriented frame languages 
technical report suny stony brook 

lambek scott 
higher order categorical logic 
cambridge university press 

makkai 
generalized sketches framework completeness theorems 
technical report mcgill university 
appear pure applied algebra 
ftp triples math mcgill ca pub makkai sketch 

mineau moulin sowa editors 
conceptual graphs knowledge representation 
number lnai 
springer 

navathe 
years modeling methodologies tools 
er germany number lncs 

shipman 
functional data model data language 
acm tods 

larson 
federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 

spaccapietra parent dupont 
model independent assertions integration heterogeneous schemas 
large databases journal 

hull 
approach merging persistent object bases 
th int workshop persistent object systems 
article processed macro package llncs style 
