wrl research report observing tcp dynamics real networks jeffrey mogul western research laboratory university avenue palo alto california usa western research laboratory wrl computer systems research group founded digital equipment 
focus computer science research relevant design application high performance scientific computers 
test ideas designing building real systems 
systems build research prototypes intended products 
second research laboratory located palo alto systems research center src 
digital research groups located paris prl cambridge massachusetts crl 
research directed mainstream high performance computer systems 
prototypes intended computing environments digital customers 
long term goal wrl aid accelerate development high performance uni multi processors 
research projects wrl address various aspects high performance computing 
believe significant advances computer systems come single technological advance 
technologies hardware software advance pace 
system design art composing systems level technology appropriate balance 
major advance system performance require reexamination aspects system 
design fabrication packaging hardware language processing scaling issues system software design exploration new applications areas opening advent higher performance systems 
researchers wrl cooperate closely move freely various levels system design 
allows explore wide range tradeoffs meet system goals 
publish results variety journals conferences research reports technical notes 
document research report 
research reports normally accounts completed research may include material earlier technical notes 
technical notes rapid distribution technical material usually represents research progress 
research reports technical notes may ordered 
may mail order technical report distribution dec western research laboratory wrl university avenue palo alto california usa reports notes may ordered electronic mail 
addresses digital net wrl techreports internet wrl techreports dec com uucp wrl techreports obtain details ordering electronic mail send message addresses word help subject line receive detailed instructions 
observing tcp dynamics real networks jeffrey mogul april behavior tcp protocol simple situations understood multiple connections share set network resources protocol exhibit surprising phenomena 
earlier studies identified phenomena analyzed simulation observation contrived situations 
shows analyzing traces busy segment internet possible observe phenomena real life measure frequency effects performance 
tcp implementation similar techniques support rate congestion control 
research report slightly expanded version appear proceedings sigcomm conference communications architectures protocols 
permission copy fee part material granted provided copies distributed direct commercial advantage acm copyright notice title publication date appear notice copying permission association computing machinery 
copy republish requires fee specific permission 
western research laboratory university avenue palo alto california usa ii table contents 

motivation 
related 
methodology 
choosing monitoring point 
obtaining traces 
defining phenomena 
analysis tools 
data structures support analysis 
detecting phenomena traces 
visualizing results 
graphical presentation single connections 
textual presentation single connections 
graphical presentation multiple connections 
statistical analyses multiple connections 
summary experiments 

application congestion avoidance 
interesting analyses 
performance analysis tools 
iii iv list figures tcp self clocking self clocking disrupted ack compression sequence numbers vs time single connection instantaneous bandwidth distribution connection fig 
partial packet trace connection fig 
number curves ack compressed connections normalized curves traces fig 
sensitivity ack compression analysis ack window size held con stant sensitivity ack compression analysis minimum bandwidth held constant sensitivity ack compression analysis minimum ratio held con stant distribution connection durations distribution packet counts distribution connection lengths bytes distribution segment lengths distribution average connection bandwidths distribution median bandwidths distribution lost segment counts distribution order delivery counts loss interarrival times connections loss interarrival times single connection loss interarrival times differing connections connection reduced average bandwidth associated frequent ack compression vi list tables table summary traces table summary detected events table summary detected events vii viii 
tcp protocol relatively brief specification functionally correct implementation short pages source code dynamics tcp real networks understood 
real networks particular suffer congestion contention insufficient resources 
modern tcp implementations attempt avoid recover congestion delayed feedback mechanisms exhibit complex behavior 
tcp implementations include congestion avoidance control algorithms described van jacobson 
jacobson developed algorithms observing behavior tcp implementations attempting send data congested network 
observations congestion due small number connections sending data direction single shared bottleneck link 
essence congestion avoidance algorithms observation data packets arrive receiving host rate bottleneck link support 
receiver acks arrive sender spacing sending new data packets rate sender avoid bottleneck link 
correctly exploiting self clocking property tcp congestion may avoided 
sender receiver proper spacing slow link slow link acks proper spacing horizontal dimension represents time shaded area proportional packet size 
tcp self clocking zhang shenker clark studied slightly complex case single link tcp data flowing directions 
simulations showed surprising phenomena arise situation jacobson algorithms employed 
phenomenon called ack compression 
tcp sender self clocking depends arrival acks spacing receiver generated 
acks spend time sitting queues transit network spacing may altered 
acks arrive closer sent observing tcp dynamics real networks sender misled sending data network accept lead congestion loss efficiency 
analysis assumes packets small queueing major cause delay 
sender receiver proper spacing slow link slow link acks improper spacing queueing causes burstiness self clocking disrupted ack compression insights zhang simulations 
studies detected ack compression actual implementations 
traces connections actual internet connections set specifically traces representative 
wilder traces osi tp connections testbed network 
cases results analyzed hand detect interesting patterns technique enlightening applied complex situations 
describes results trace studies large numbers connections internet 
obtained monitoring packets flowing busy gateway system widely sites internet electronic mail similar protocols 
tools developed automatically analyze traces detect interesting phenomena cases show correlation various phenomena order detect causal relationships 

motivation primary motivation experiments determine ack compression detected automatically discover causes problems 
experiments show ack compression detected automatically packet traces happen real networks 
show serious consequences ack compression today internet may result temporary inability exploit full bandwidth network 
terms sender receiver respect data packets qualified 
acks sent receiver sender 
observing tcp dynamics real networks phenomena ack compression synchronization losses connections order packet delivery forms improper tcp behavior automatically detected traces described 
secondary question ack compression happen 
tcp implementation techniques similar trace analysis tools described infer compressed 
limit rate outgoing packets avoid overloading bottleneck link 
emphasis discussion methods tools detect ack compression related phenomena broad study frequency 

related timothy shepard problem tcp packet trace analysis extended repertoire graphical methods visualizing tcp traces described way quantify burstiness connection 
automated detection ack compression relies similar method see section 
trevor worked problem identifying pathological tcp connections connections captured long trace concentrating retransmission behavior tcp hosts 
studies traces study behavior simultaneous tcp connections wide area networks 
caceres analyzed traces discover summary information tcp connections number packets transferred packet interarrival time 
vern similar analyses set traces calculated distribution average bandwidths 
ongoing tcp behavior continues simulation trace analysis capture aspects network instantaneous window sizes queue lengths 
studies include analysis traffic phase effects sally floyd van jacobson floyd analysis connections multiple congested routers describes ack compression 
simulation studies identified phenomena visible analysis 
example shenker simulations multiple connections path packets connection tend clustered interleaved connections 

methodology automatic detection ack compression depends successful approaches problems 
choosing monitoring point traces connections reasonable likelihood exhibiting ack compression 

obtaining traces traces long high resolution timestamp information contain essentially packets dropped packets 
observing tcp dynamics real networks 
defining phenomena simulation contrived experiment trace impossible observe actual spacing acks ends network path 
compression defined indirectly observable aspects trace 
rest section discusses approach taken issues similar issues detection related phenomena 
section discuss tools created analyze traces 
tools solve problems 
detecting phenomena traces algorithms created analyze traces detect defined phenomena 

visualizing results may thousands connections events represented trace results analysis form allows easy rapid understanding 

choosing monitoring point ideal site obtaining traces passes tcp connections wide variety tcp hosts internet transfer just packets worth data time 
connections short generate acks allow compression 
traces close possible point connections final spacing acks may observed 
criteria suggest monitoring major gateway complex long tcp connections sites internet 
fortunately author easy access gateway operated network systems laboratory digital equipment 
site exchanges electronic mail messages day thousands usenet news articles 
gateway includes popular anonymous ftp site files retrieved day 
mail messages short give rise interesting tcp behavior gateway provides ftp mail facility produces relatively lengthy messages day 
news articles short sent batches nntp protocol give rise long connections 
ftp transfers involve large files 
traces endpoint tcp connections ack compression observed connections carry bulk data away gateway complex 
halves number potentially interesting ack compression events trace 
additional traces subnet digital internal ip network adjacent host serves primary usenet distribution center heavily electronic mail hosts 
fewer long distance connections visible traces gateway site internal paths traverse low bandwidth congested links frequency ack compression higher internet 
observing tcp dynamics real networks initial phases study question arose tcp window sizes common large stimulate ack compression 
hosts window sizes just bytes small elicit phenomenon quite hosts byte windows 
traces half connections windows bytes 
case nsfnet transport byte datagrams sites tcp hosts segment size bytes order avoid possible fragmentation means relatively small window size bytes packets may transit 
results show reason issue window size impediment detection ack compression 
advantage making traces endpoint site backbone definition site party connections traced 
simplifies issue obtaining permission illegal monitor content connections permission parties 
traces contain packet header data compromise privacy messages traced 

obtaining traces traces obtained promiscuous mode monitoring mbit sec ethernet networks 
passive monitoring technique eliminates effect trace gathering process connections traced 
means changes need hosts connections traced 

tracing environment trace gathering program runs ultrix version system experiments run decstation workstations 
traces little additional activity trace gathering system 
trace files written disk analysis transferred network real time affected network traced 
simple arithmetic demonstrate detect ack compression traces contain high resolution timestamps 
example suppose tcp connection byte packets path effective bandwidth mbit sec 
means acks sent approximately msec apart 
timestamp resolution coarser half properly spaced acks appear compressed arrive tick 
ultrix normally updates timebase just times second yielding resolution msec 
obtain better timestamps ultrix kernel tracing systems modified hz timebase yielding resolution usec 
additionally traces record length packet allows subsequent decompression timestamps minimum spacing packets transmitted monitored ethernet calculated lengths see section 
traces digital internal ip network decstation equipped specially constructed clock hardware 
provides basic timestamp resolution observing tcp dynamics real networks nsec usable resolution quite timestamps applied kernel smeared latency interrupt handling code 

creation trace file tracing program conceptually quite simple 
ip header tcp packet received parsed obtain source destination addresses tcp header parsed obtain source destination ports sequence numbers flags window size 
addressing information repetitive program maintains map tcp address tuples ip addresses tcp port numbers compact connection identifier 
time information uniquely identify connection life trace may connections reuse address tuple 
postprocessing phase easy split trace distinct connections tcp protocol rules prevent confusion 
new connection seen tracing program emits record containing new connection id associated addressing information 
packet received program emits record containing timestamp connection id non address fields tcp header 
note connection id identifies direction packet flow tcp connections full duplex relationship half connections recreated post processing phase 
connection id mapping done hash table hash slots pointing chain entries 
simple hash function address information distributes entries remarkably evenly chain times longer average 
cache bypasses hash table lookup successive packets belong connection 
spite compression address information trace files quite bulky 
file representing trace packets requires just mbytes disk space 
order avoid cluttering trace irrelevant information trace program ignore packets pairs local hosts local refers host address tracing host compared bit mask 
traces gateway site mask covered ip network number traces internal digital ip network mask covered network subnet numbers 

potential problems passive monitoring passive monitoring techniques packets throughput monitoring system insufficient buffering monitor handle occasional burst packets 
looking ack compression especially important capture packets burst compressed acks definition received burst 
ultrix kernel provides moderate amount queueing absorb bursts keeps accurate count number packets dropped queue 
tracing program emits error record containing count dropped packets occurs analysis tools reconstruct exactly packets dropped approximately happened 
observing tcp dynamics real networks traces trace gathering system able keep traffic 
case packets dropped 
impossible tell dropped packets conceal unusually high number ack compression events case 
problem passive monitoring occasionally accepts packets checksum errors 
theoretically possible tracing program check header checksums packet practice slow program certainly lose far packets 
checksumming considered expensive part processing tcp packet 
statistics kept gateway machines show packets bad checksums quite rare 
danger experiment damaged packet give rise trace record confuses analysis tools 
tools take care ignore connections contain bizarre packets possible corruption bits cause false drawn rare occasions 

defining phenomena acks observed arriving transit internet impossible know precisely spaced sent 
acks observed near receiver tell spacing see arriving say possible compression 
means trace analysis tools infer ack compression indirect evidence 
choosing satisfactory definition key utility analysis proved somewhat difficult 
observe looking number bytes acknowledged set acks time spacing apparent network bandwidth acks promise sender 
precisely information sender uses meter data traffic 
called instantaneous ack bandwidth observed acks 
want know value higher actual bandwidth path indicate occurred 
thing observe actual progress connection intervals long compared tcp window size 
clearly bandwidth obtained interval higher actual available bandwidth 
measure true bandwidth define ack compression occurring instantaneous ack bandwidth significantly greater true bandwidth 
simplest way calculating bandwidth connection trace acks divide total number bytes acknowledged total time required 
unfortunately connections proceed steady rate average rate far small 
plots ack value versus time actual tcp connections show phases relatively steady progress diagonal lines interspersed dead periods horizontal lines 
clearly want ignore dead periods computing true bandwidth 
previous shepard suggests solution 
order visualize burstiness tcp connections plotted distribution instantaneous bandwidths connection 
observing tcp dynamics real networks axis plots shows number bytes carried packet divided time previous packet axis shows total number bytes transferred instantaneous bandwidth 
dead periods transfer bytes contribute little distribution peaks distribution show approximate true bandwidths attained various phases connection 
main peak distribution find approximate position xaxis median distribution 
provides simple automatic mechanism estimating true bandwidth connection transfers lot data stable path 
possible connection rate limited external network disk drive systems mechanism underestimate true bandwidth 
information traces available 
principle set probe connections paths followed interesting connection attempt measure available bandwidth possible done study 
anyway results suggest alleged ack compression events real associated subsequent segment loss periods reduced throughput 
consequence underestimate available bandwidth expect see associated periods increased throughput 
additional filtering reduces falsely detected ack compression 
insist compression event certain number packets ack bandwidth measured window packets greater minimum 
second insist ack bandwidth exceed estimated true bandwidth ratio order correct serious underestimates value 
third insist compression event show certain minimum ack bandwidth order omit connections don transmit data 
threshold set slightly estimate lowest link bandwidth network setting higher hide ack compression low bandwidth links 

segment loss order delivery able detect tcp segment losses main consequence improper segment spacing 
directly know segment lost infer segment loss observed retransmission segment 
note segment flowing monitored site lost know receive retransmitted copy having seen original recognize retransmission 
words detect retransmissions connections transfer data monitored site 
fortunately detect ack compression full connections possible detect correlations segment loss correlations exist 
define retransmission occurred see segment sequence number lies ranges bytes transmitted segment 
detect order delivery segment presumably multiple paths internet 
deemed happened see sequence number arrive precedes previously received sequence number overlap segment 
observing tcp dynamics real networks 
analysis tools traces analyzed detect phenomena interest 
analysis done offline connection analyzed complete line analysis interfere packet gathering cause packet loss 
kinds line analysis applied single trace file 
different primary analyses applied connections trace aggregate statistics connection compute total duration number bytes sent net change sequence number number bytes acknowledge net change number median 
ack compression parameter values ack compression detection window minimum ack bandwidth minimum ratio median find ack packets appear compressed 
segment retransmission order delivery examining sequence numbers packet lengths timestamps discover segments retransmitted arrived order 
primary analyses combined ways example find correlations ack compression segment loss results plotted 

data structures support analysis analysis tool starts reading saved trace file 
memory database built connection packet header records file 
new connection connection record created inserted hash table rapid location compact connection id packet header record stored header record added linked list headers attached appropriate connection record 
trace file ordered packet arrival time lists headers time ordered 
process timestamps read checked sure closer minimal possible spacing ethernet 
traces different lan fddi calculation modified 
header record follows previous timestamp difference shorter possible length previous packet timestamp new record increased accordingly 
problem raw trace data time tcp address tuple uniquely identifies connection connection terminated address tuple may reused shortly 
sequence numbers connections bear relation order sense sequence numbers connections separated 
done searching tell tale signs connection packets bearing fin syn flags large jumps sequence num remember term connection refers case half duplex way packet flow 
actual tcp connection represented half connections 
observing tcp dynamics real networks bers 
largest legal jump tcp sequence number maximum window size bytes 
jump larger suggests new connection possible trace gathering program dropped bunch packets accepted corrupted packet 
case lacking sufficient information analyze entire connection splitting connections avoids problem data integrity 
trace contains data just doesn sense 
example final sequence number lower initial value 
occur sequence number due corrupted data tools simply discard entire connection case 
memory database connection header records quite large 
header record memory form contains bytes reduced somewhat compression techniques process run slower 
result trace packets requires somewhat mbytes virtual address space locality database poor analysis carried machine real memory 
largest machine available experiments decstation mbytes ram traces packets analyzed traces required lot disk storage 
running time analysis programs depends heavily cost reading trace file constructing internal database 
systems mbytes ram file system buffer cache hold entire trace file packets cost analysis depends entirely cpu speed 
decstation simplest analysis requiring computation median ack bandwidths takes seconds spent read system call spent correcting timestamps inserting header records database 
complex analyses take minutes algorithm finding medians quite crude 

detecting phenomena traces connection header records created passes entire database header record list specific connection 

detecting ack compression analysis requires detection ack compression connection pass computes median instantaneous ack bandwidths 
program calculates instantaneous ack bandwidth packet ack flag set computed dividing difference acknowledgment numbers successive ack packets time elapsed reception 
program records instantaneous bandwidth samples array sorts array 
locates median value weighted number bytes acknowledged rate 
sophisticated median finding algorithm reduce time required analysis takes seconds analyze packet trace problem 
pass traverses list header records calculates ack bandwidth time instantaneous difference successive packets observing tcp dynamics real networks bandwidth calculated ack window size specified parameter analysis 
example ack bandwidth calculated ack packet third ack packet 
instantaneous bandwidth exceeds connection median specified ratio exceeds specified minimum value header records window flagged compressed 

detecting segment retransmission order delivery separate pass header record list find retransmitted tcp segments 
pass array created containing entry containing sequence number length packet serial number indicating order reception back pointer associated header record 
array sorted sequence number primary key length secondary key reception order tertiary key 
pass sorted array suffices detect retransmissions order delivery array entry sequence number falls range bytes carried previous packet entry retransmission 
ignore packets syn set typically lot sent attempt connection dead host 
earlier packet flagged having lost packet flagged retransmission 
pass sorted array detect flag packets delivered order ones reception order earlier predecessor array sorted sequence number predecessor retransmission 

visualizing results automated analysis connections anomalous behavior needs way visualize results 
visualization methods experiments divided showing just connection show subset connections 
methods divided graphical presentations lot details individual packets textual presentations provide detailed insights easily reveal interesting patterns 
combinations scope presentation useful 

graphical presentation single connections van jacobson pioneered plotting sequence numbers versus time visualize single tcp connection 
automated analysis described marks packet header records part ack compression segment loss order delivery events jacobson plots easily extended show events occur 
note ack compression happens packets carrying flow half connection packets suffer segment loss order delivery profitable plot graph sequence numbers half connection numbers partner half connection 
observing tcp dynamics real networks example plot shown 
sequence number plot solid line number plot broken line 
connection starts period seconds bytes transferred 
regions ack compression bounded symbols segment losses marked symbols 
color media symbols easier distinguish color may highlight regions curve suffering ack compression 
examination plots quickly provides insight issues actual underlying bandwidth connection slope diagonal segments curve relationship ack compression performance 
example deleterious expect see decreases slope segment loss events shortly instance ack compression 
case shortly ack compression event entire window full packets sent brief interval packets lost 
time seconds start connection seq number bytes median ack bw bytes sec sequence numbers vs time single connection approach plot distribution instantaneous ack bandwidths 
directly reveals underlying network bandwidth assumes spikes near mbyte sec result ack compression indication true bandwidth 
ack bandwidth bytes sec total bytes acked instantaneous bandwidth distribution connection fig 
observing tcp dynamics real networks 
textual presentation single connections jacobson plots show detail understand precise dynamics connection 
case helps look trace individual packets connection showing exchange packets directions correct time sequence 
tcp lock step protocol hosts involved may separated path actual ordering packets may depend observes 
example host host milliseconds apart host sends acknowledgment packet host milliseconds host sends data packet host observer near host see packets opposite order observer near host relativistic effect rarely appears 
packet traces difficult analyze expert help provided 
example tcp bit sequence numbers hard deal directly tcpdump program reports absolute sequence numbers relative value observed packet connection 
useful report difference sequence numbers successive packets directly related amount data transferred 
showing halves connection side side columns shepard example gets picture time ordering packets 
displaying relative absolute timestamps short term dynamics apparent 
shows part connection packet packet 
sender packets shown left receiver right 
column numbers packets convenience explanation 
second column shows timestamp seconds preceding packet 
columns show data length exclusive headers increment sequence acknowledgment numbers offered window size tcp flag bits 
final column sender side marks lost retransmitted packets respectively 
receiver side sixth column shows instantaneous ack bandwidth final column marks compressed packets 
lines see series data packets sent burst acks lines 
column shows acks lines appear compressed packets burst lines lost marked 
second timeout sender realizes enters slow start phase starting line transfer data 

graphical presentation multiple connections sequence number curve useful displaying connection entire trace contain thousands connections impossible study curves 
variety useful ways display aggregate behavior connections 
acks compression event marked including arrive instantaneous ack bandwidth small delayed longest 
observing tcp dynamics real networks timestamp sender receiver len seq ack win flags loss 
len seq ack win flags comp 
pa pa pa partial packet trace connection fig 
algorithm detect connections display ack compression connections feasible overlap number curves 
shows curves trace shows curves normalized duration byte count connection 
interesting question sensitive ack compression detection algorithm input parameters ack window size minimum ack bandwidth minimum ratio instantaneous median bandwidths 
figures show total number compression events detected varies changes parameters third held constant 
observe varying change number alleged events orders magnitude varying effect close ethernet rates 
observing tcp dynamics real networks time seconds start connection ack number bytes number curves ack compressed connections time normalized length connection ack normalized length connection normalized curves traces fig 
ack bandwidth threshold bytes sec number compressed acks ack window sensitivity ack compression analysis ack window size held constant plot distributions various statistics connections trace figures observing tcp dynamics real networks ack bandwidth minimum ratio number compressed acks bandwidth threshold sensitivity ack compression analysis minimum bandwidth held constant ack bandwidth threshold bytes sec number compressed acks minimum ratio sensitivity ack compression analysis minimum ratio held constant useful providing context understanding important ack compression 
data plotted show connections transfer bytes connections transfer bytes suffer ack compression 
figures respectively show connections suffer segment retransmission order delivery 
avoid expanding vertical scale figures include samples axis value zero includes connections transferred byte 
figures include parenthetical notes giving number omitted samples 
note statistics shown duplex connections 
observing tcp dynamics real networks connection duration seconds number connections average ack bandwidth bytes sec number connections connections zero bandwidth distribution distribution average connection durations connection bandwidths packet count number connections median ack bandwidth bytes sec number connections connections zero bandwidth distribution distribution packet counts median bandwidths total bytes transferred number connections connections sending zero bytes number retransmitted segments number connections connections retransmissions distribution connection distribution lengths bytes lost segment counts data bytes segment number segments zero length segments number segments delivered order number connections connections order segments distribution distribution segment lengths order delivery counts observing tcp dynamics real networks 
statistical analyses multiple connections interesting ask frequent correlations ack compression segment losses 
obtain timestamps compression events loss events trace try establish statistically significant correlation exists 
direct approach look full connection experiences compression segment loss analyze timestamps see causal relationship compression loss 
inference causal relationship done number ways 
assume packets lost tcp window compression event caused event possible sure packets sent compressed acks arrived sender 
approach measure time event segment loss event 
compare interval estimate round trip time 
simpler see interval small compared median interval loss events method shows cases causal relationship 
example trace digital internal network connections experienced loss event subsequent compression event cases time compression event subsequent loss event median time losses 
intervals reception compressed acks transmission lost segment typically order milliseconds tens milliseconds 
simulations shenker suggested multiple tcp connections sharing congested resource congestion recovery behavior synchronized connection loosing packet congestion epoch 
timestamped segment loss events obtained traces principle shed light effect 
synchronized segment loss detected making array loss events trace sorting array timestamp looking losses different connections occur specified interval 
choice interval arbitrary parameter course packets lost precisely instant 
trace mentioned losses cases losses connections occurred msec apart 
clear reflects statistically significant correlation losses multiple connections 
figures show trace distribution interarrival times respectively packet losses connections losses encountered single connection losses second occurs different connection 
spikes usec usec reflect back back transmissions byte byte packets respectively tcp sends burst packets entire burst lost group 
aside spikes data reflect poisson distribution may noisy demonstrate clear correlation losses differing connections 

summary experiments traces days external internal locations 
traces summarized table 
note count packets refers number saved analysis number went network 
times pacific standard time observing tcp dynamics real networks time losses connection seconds number losses loss interarrival times connections time losses connection seconds number losses loss interarrival times single connection time losses different connections seconds number losses loss interarrival times differing connections tions seconds 
dropped packets discarded monitoring system keep way know precisely kinds packets dropped 
figures section drawn trace longer traces produce confusing graphs 
observing tcp dynamics real networks id site date time duration packets connections dropped pkts internal jan internal jan internal jan external jan external jan table summary traces tables summarize number lost segments detected 
show number ack compression events causally correlated segment loss events different combinations ack compression detection parameters 
id losses compressions correlations id losses compressions correlations ack window ack window bandwidth threshold kbytes sec bandwidth threshold kbytes sec minimum ratio median minimum ratio median table summary detected events table summary detected events check reliability method looks cause effect relationships ack compression segment loss plots connections trace identified having correlations stricter parameters table 
inspection plots suggests half cases causal relationship ruled cases 
possibility exists detected instances ack compression periods available bandwidth higher normal 
probably true cases definitely connections reverse true 
shows connection period ack compression events 
period average bandwidth far lower phases connection exhibit ack compression 
intuition suggests ack compression associated periods reduced available bandwidth compressed acks result non empty queues return path 
increased queue length increase round trip time decreasing available bandwidth 
observing tcp dynamics real networks time seconds start connection seq number bytes median ack bw bytes sec connection reduced average bandwidth associated frequent ack compression 

application congestion avoidance ack compression subsequent packet loss occurs networks believed uncongested long term implies portions internet experience temporary congestion short periods 
periods may fact shorter response time feedback congestion avoidance schemes means form rate congestion avoidance may required 
proposals rate schemes network provide explicit rate limit information hosts may possible host infer true available bandwidth set rate limit 
effect host ack compression detection methods described avoid misled compressed acknowledgments 
may prove difficult reasons 
sending host needs high resolution clock order measure arrival times compute ack bandwidths 
efficient way computing median ack bandwidth connection evolves 
efficient accurate mechanism throttle rate transmitted packets slow avoid bottleneck link fast keep pipe full 
trick provide sufficiently accurate avoid ack compression sufficiently cheap avoid reducing transfer rate ack compression threat 
designing new transport protocol replace tcp pay include timestamps packets 
receiver timestamp ack reflect arrival time acknowledged segment 
sender ack timestamps times arrive sender control rate data segments sent 
effect convert real life situation depicted ideal observing tcp dynamics real networks ized situation depicted queueing delays return path affect self clocking mechanism 
bit timestamp scaled resolution nsec wrap maximum lifetime ip packet 

interesting analyses information trace files analyzed discover interesting information tcp dynamics 
example instantaneous round trip time rtt connection estimated measuring time transmission segment receipt corresponding sequence number 
segments lost number complications arise heuristics known 
interesting know correlations variations rtt concurrent connections expected multiple connections router suffer queueing delay simultaneously 
correlations jumps rtt segment loss ack compression 
open question ack compression events occur nearly simultaneously multiple connections 
expect case consequences worse isolated compression events resulting burst data packets multiplied number connections involved 
ask fraction segment losses caused ack compression directly connection suffering losses transmits packets indirectly innocent loses packets connection overflows queue 
answering difficult require coordinated observations points network 

performance analysis tools existing analysis tools build memory database describing event trace 
analysis modules relatively easy write limits size trace analyzed 
analyzing trace packets requires mbytes main memory process starts page running time increases orders magnitude database organized high locality 
ways solve problem analyzing longer traces 
pre process trace file select interesting connections analysis 
done relatively small amount memory pass algorithm 
absence memory system thrashing expensive part algorithm detecting ack compression method find median ack bandwidth 
done sorting array weighted values finding weighted center takes log time number packets connection 
sorting routine ideal running time reduced better sort routine sophisticated algorithm takes time 
observing tcp dynamics real networks 
results study show possible detect ack compression traces real networks 
possible correlate ack compression events subsequent packet losses networks particularly congested 
detection ack compression correlation packet loss done automatically means possible apply techniques traces busy networks lengthy periods 
internet operated closer long term capacity connection ack compression congestion may acute automatic detection key efficient utilization network 
lixia zhang sally floyd ramakrishnan numerous helpful comments early drafts 
comments anonymous sigcomm reviewers helped guide presentation 
andrei broder susan owicki provided valuable consultation interpret data obtained 
ramon caceres peter danzig sugih jamin danny mitzel 
characteristics wide area tcp ip conversations 
proc 
sigcomm symposium communications architectures protocols pages 
zurich september 
cerf 
guidelines internet measurement activities 
rfc internet activities board october 
david clark david tennenhouse 
architectural considerations new generation protocols 
proc 
sigcomm symposium communications architectures protocols pages 
philadelphia september 
sally floyd 
connections multiple congested gateways packet switched networks part way traffic 
computer communication review october 
sally floyd 
private communication 

sally floyd van jacobson 
traffic phase effects packet switched gateways 
computer communication review april 
andrew 
private communication 

van jacobson 
congestion avoidance control 
proc 
sigcomm symposium communications architectures protocols pages 
stanford ca august 
brian kantor phil lapsley 
network news transfer protocol 
rfc internet activities board february 
phil karn craig partridge 
improving round trip time estimates reliable transport protocols 
acm transactions computer systems november 
observing tcp dynamics real networks steven mccanne van jacobson 
efficient extensible portable network monitor 
progress 
trevor 
detection pathological tcp connections segment trace filter 
computer communication review january 
vern paxson 
measurements models wide area tcp conversations 
technical report lbl computer systems engineering lawrence berkeley laboratory may 
jon postel 
transmission control protocol 
rfc network information center sri international september 
scott shenker lixia zhang david clark 
observations dynamics congestion control algorithm 
computer communication review october 
timothy jay shepard 
tcp packet trace analysis 
mit lcs tr laboratory computer science massachusetts institute technology february 
rick wilder ramakrishnan allison 
dynamics congestion control avoidance way traffic osi testbed 
computer communication review april 
lixia zhang scott shenker david clark 
observations dynamics congestion control algorithm effects way traffic 
proc 
sigcomm symposium communications architectures protocols pages 
zurich september 
observing tcp dynamics real networks wrl research reports titan system manual 
architecture papers 
michael nielsen 
norman jouppi jeremy dion david boggs research report september 
ael nielsen 
wrl research report april 
global register allocation link time 
david wall 
fast printed circuit board routing 
wrl research report october 
jeremy dion 
wrl research report march 
optimal heat sinks 
william 
compacting garbage collection ambiguous wrl research report october 
roots 
joel bartlett 
mahler experience intermediate wrl research report february 
language machine description 
david wall michael powell 
experimental literature internet wrl research report august 
annotated bibliography 
jeffrey mogul 
packet filter efficient mechanism wrl research report august 
user level network code 
jeffrey mogul richard rashid michael measured capacity ethernet myths accetta 
reality 
wrl research report november 
david boggs jeffrey mogul christopher kent 
fragmentation considered harmful 
wrl research report september 
christopher kent jeffrey mogul 
wrl research report december 
visa protocols controlling inter organizational datagram flow extended description 
cache coherence distributed systems 
deborah estrin jeffrey mogul gene tsudik christopher kent 
anand 
wrl research report december 
wrl research report december 
register windows vs register allocation 
scheme portable scheme compiler 
david wall 
joel bartlett 
wrl research report december 
wrl research report january 
editing graphical objects procedural optimal group distribution carry skip 

paul 
silvio 
wrl research report november 
wrl research report february 
usenet cookbook experiment precise robotic paste dot dispensing 
electronic publication 
william 
brian reid 
wrl research report february 
wrl research report december 
observing tcp dynamics real networks simple flexible datagram access controls link time code modification 
unix gateways 
david wall 
jeffrey mogul 
wrl research report september 
wrl research report march 
noise issues ecl circuit family 
jeffrey tang leon yang 
nfs implementation performance wrl research report january 
cache consistency protocols 
srinivasan jeffrey mogul 
efficient generation test patterns wrl research report may 
boolean 
tracy 
available instruction level parallelism research report february 
scalar machines 
norman jouppi david wall 
papers test pattern generation 
wrl research report july 
tracy 
wrl research report march 
unified vector scalar floating point architecture 
virtual memory vs file system 
norman jouppi jonathan david michael nelson 
wall 
wrl research report march 
wrl research report july 
efficient workstations passive monitor architectural organizational tradeoffs ing local area networks 
design cpu 
jeffrey mogul 
norman jouppi 
wrl research report july 
wrl research report july 
dimensional thermal model vax integration packaging plateaus processor multi chip units 
performance 
john fitch 
norman jouppi 
wrl research report july 
wrl research report july 
livermore magic release 
mips sustained bit cmos mayo michael arnold walter scott sor high ratio sustained peak stark gordon 
mance 
wrl research report september 
norman jouppi jeffrey tang 
wrl research report july 
pool boiling enhancement techniques water low pressure 
distribution instruction level machine wade john fitch william parallelism effect performance 
van carey 
norman jouppi 
wrl research report december 
wrl research report july 
writing fast servers dumb color frame buf long address traces risc machines 
generation analysis 
joel 
anita borg kessler georgia david wrl research report february 
wall 
wrl research report september 
observing tcp dynamics real networks simulation study tlb performance 
cache write policies performance 
bradley chen anita borg norman jouppi 
norman jouppi 
wrl research report november 
wrl research report december 
packaging bipolar ecl microprocessor 
analysis power supply networks vlsi john fitch 

wrl research report march 
don stark 
wrl research report april 
observing tcp dynamics real networks 
jeffrey mogul 
wrl research report april 
adapter 
david boggs 
wrl research report april 
procedure merging instruction caches 
scott mcfarling 
wrl research report march 
don widgets draw 
joel bartlett 
wrl research report may 
pool boiling small heat elements water pressure 
wade john fitch william van carey 
wrl research report june 
incremental generational copying garbage collection uncooperative environments 
may yip 
wrl research report june 
interleaved fin thermal connectors modules 
william 
wrl research report august 
experience software defined machine architecture 
david wall 
wrl research report august 
network locality scale processes 
jeffrey mogul 
wrl research report november 
observing tcp dynamics real networks wrl technical notes tcp ip print server protocol 
systems late code modification 
brian reid christopher kent 
david wall 
wrl technical note tn september 
wrl technical note tn june 
tcp ip server architecture im unreachable procedures object oriented 
gramming 
christopher kent 
amitabh srivastava 
wrl technical note tn november 
wrl technical note tn november 
smart code stupid memory fast server cache replacement dynamic exclusion dumb color frame buffer 
scott mcfarling 
joel 
wrl technical note tn november 
wrl technical note tn september 
boiling binary mixtures pres aren operating systems getting faster sures fast hardware 
wade john fitch william john ousterhout 
van carey 
wrl technical note tn october 
wrl technical note tn january 
copying garbage collection picks comparison acoustic infrared inspection generations 
techniques die attach joel bartlett 
john fitch 
wrl technical note tn october 
wrl technical note tn january 
limits instruction level parallelism 
recovery protocol nfs david wall 
jeffrey mogul 
wrl technical note tn december 
wrl technical note tn april 
effect context switches cache performance 
jeffrey mogul anita borg 
wrl technical note tn december 
method detecting memory bottlenecks 
aaron goldberg john hennessy 
wrl technical note tn december 
predicting program behavior real estimated profiles 
david wall 
wrl technical note tn december 

