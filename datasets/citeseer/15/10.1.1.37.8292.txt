cs surface approximation geometric partitions pankaj agarwal department computer science box duke university nc 
subhash suri bell communications research south street morristown nj 
department computer science duke university durham north carolina june surface approximation geometric partitions pankaj agarwal department computer science box duke university nc 
subhash suri bell communications research south street morristown nj 
june motivated applications computer graphics visualization scientific computation study computational complexity problem set points sampled bivariate function input parameter compute piecewise linear function minimum complexity xy monotone polyhedral surface minimum number vertices edges faces prove decision version problem np hard main result polynomial time approximation algorithm computes piecewise linear surface size log complexity optimal surface satisfying constraints problem 
technique developed general applies problems deal partitioning points objects subject certain geometric constraints 
instance get approximation bound problem arising machine learning red blue points plane find minimum number pairwise disjoint triangles blue point covered triangle red point lies triangles 
scientific computation visualization computer graphics modeling construction surfaces important area 
small sample papers topic gives indication scope importance problem 
author supported national science foundation ccr nyi award 
delve specific problem studied papers focus general problem underlie 
scientific computer graphics applications computation takes place surface dimensions 
surface generally modeled piecewise linear piecewise cubic patches vertices lie close vicinity actual surface 
order ensure local features surface captured algorithms automatic generation models generally sample dense set regularly spaced points 
demands real time speed reasonable performance require models small combinatorial complexity possible 
common technique employed reduce complexity model thin surface deleting vertices relatively flat neighborhoods 
ad hoc heuristic methods known key step 
thinning methods follow set local rules deleting edges vertices incident faces coplanar applied arbitrary order longer applicable 
surprisingly methods come performance guarantee generally quantitative statement surface approximation computed 
address complexity issues surface approximation problem surfaces xy monotone 
surfaces represent graphs bivariate functions arise quite naturally scientific applications 
possible approach handling arbitrary surfaces break monotone pieces apply algorithm individually piece 
formally define main problem studied 
function variables set points sampled piecewise linear function called approximation point surface approximation problem compute piecewise linear function approximates minimum number breakpoints 
breakpoints arbitrary points necessarily points applications generally function hypothesized fit observed data function computationally cient substitute parameter achieve complexity quality tradeo smaller higher fidelity approximation 
graph piecewise linear function variables called polyhedral terrain computational geometry literature breakpoints function vertices terrain 
state theoretical knowledge surface approximation problem appears slim 
provable performance bounds known convex surfaces 
special case time algorithm mitchell suri computing approximation convex polytope vertices algorithm produces approximation size log size optimal approximation 
geometric partitioning june extending clarkson proposed expected time randomized algorithm computing approximation size log arbitrarily small positive number 
study approximation problem surfaces correspond graphs bivariate functions 
show np hard decide surface approximated vertices facets 
main result polynomial time algorithm computing approximating surface guaranteed quality 
optimal approximating surface vertices algorithm produces surface log vertices 
observe dealing approximation measures measures absolute di erence simplified surface ratio sizes optimal surface output algorithm 
lack better terminology term approximation measures 
notice input user specified parameter log approximation guarantee provided analysis algorithm 
key approximation method algorithm partitioning set points plane pairwise disjoint triangles 
instance geometric set cover problem additional disjointness constraint covering objects triangles 
observe disjointness condition covering objects precludes known greedy method set covering fact show greedy solution size worst case 
reformulate surface approximation problem constrained geometric partitioning problem 
denote orthogonal projection point xy plane 
general set denote orthogonal projection xy plane 
order get approximation su ces find set triangles space projections triangles plane pairwise disjoint cover projected set points ii vertical distance triangle point directly 
polynomial time algorithm produces family log triangles 
triangles produce desired surface 
stitching process introduces constant factor triangles 
geometric partition framework includes extensions generalizations basic surface approximation problem 
instance formulate stronger version problem replacing sample point horizontal triangle polygon 
specifically family horizontal triangles polygons space projections xy plane pairwise disjoint 
want piecewise linear approximating surface maximum vertical distance point triangles 
approximation algorithm works equally variant problem variant addresses case local features surface known detail unfortunately method works horizontal features 
geometric partitioning june proof np hardness mention planar bichromatic partition problem independent interest machine learning literature set red points set blue points plane find minimum number pairwise disjoint triangles blue point lies triangle red point lies triangles 
algorithm gives solution log triangles 
running time algorithms polynomial quite high moment theoretical value 
results area expect theoretical time complexity problems improve 
ideas may shed light theoretical performance practical algorithms trade 
proof np hardness show planar bichromatic partition problem surface approximation problem np hard reduction planar sat 
know np coordinates triangles solution may quite large 
recall sat problem consists variables 
clauses 
cm literals ij problem decide boolean formula truth assignment 
instance sat called planar variable clause graph planar 
words instance planar sat graph planar see defined follows 
appears theorem planar bichromatic partition problem np hard 
proof construction similar fowler prove intractability certain planar geometric covering problems disjointness condition see similar constructions 
describe construction bichromatic partition problem 
simplify proof construction allows points lie line construction modified easily remove degeneracies 
boolean formula straight line planar embedding graph 
construct instance red blue point partition problem solution determines satisfiable 
geometric partitioning june proof np hardness iii ii iv instance planar sat ii corresponding instance bichromatic partition iii details red points lying near shown iv possible coverings blue points geometric partitioning june proof np hardness start placing blue point clause node variable node 
il edges incident 
plane embedding edges ij form star see 
replace star minkowski sum disk radius su ciently small 
performing minkowski sum shrink edges star star shaped polygons meeting clause node overlap see ii 
denote star shaped polygon corresponding polygon corresponding edge ij tube consisting copies ij translated distance plus circular arc ij near clause node place number say blue points boundary follows 
put points ij ij circular arc ij near tip 
contains literal put points straight line portion boundary translated copies edge ij copy move middle point slightly inwards replace original edge path length 
hand contains literal put points straight line portion boundary translated copies edge ij number blue points added edge ij 
total number points put denote set blue points placed way scatter large polynomially bounded number red points segment connecting blue points adjacent boundary contains red point ii triangle blue points vertices contains red point triangle defined ij ij edge ij 
see iii 
set red points satisfying properties 
claim set blue points covered disjoint triangles contains red point formula truth assignment 
proof similar fowler sketch main ideas 
red points act ensuring blue points adjacent boundary covered single triangle 
minimum number triangles needed cover points precisely ways cover points triangles covering ij ij covered single triangle clauses covering ij ij covered single triangle clauses see iv 
regard covering setting second covering setting 
suppose 
clause contains points ij ij covered single triangle cover clause point corresponding triangle 
holds clause contains words clause point covered free satisfied 
set blue points covered triangles clause point clause covered free formula truth assignment 
completes proof np hardness geometric partitioning june proof np hardness planar bichromatic partition problem 
preceding construction degenerate red points lie segments connecting blue points 
ways remove briefly describe 
polygon replace blue point blue points placed close 
copies clause points 
pair blue points want cover single triangle original construction place red point convex hull blue points boundary covered triangles exactly ways cover blue points triangles earlier 
similar involved argument prove set blue points covered triangles satisfiable 
theorem dimensional surface approximation problem np hard 
proof construction similar spirit bichromatic partition problem albeit slightly complex detail 
points colors red white black 
white points lie plane black points lie plane red points lie su ciently large constant 
maintain connection previous construction black white points play role blue points red points play role restricting choice legal triangles cover black white points 
describe construction xy plane represents orthogonal projection actual construction 
actual construction obtained simply vertically translating point correct plane depending color 
start putting black point clause node variable construct star shaped polygon part identical previous construction 
replace straight line edges concave chains bent inward small dent tip circular arc ij shown 
place points arm alternating color black white follows 
tip circular arc ij put white point ij outer endpoint dent black point ij inner endpoint dent ii 
rest construction shown put points ij ij circular arc points ij ij concave chains 
points surrounding ij ij ij ij segment connecting point concave chains lies inside corresponding edge ij graph put white point ij segment joining ij clause point close ij ij ij ij 
see iii 
condition says final construction black white points translated correct plane vertical distance partitioning june proof np hardness tween ij segment ij recall input measure approximation 
completes placement white black points 
remaining part construction placement red points describe 
ii iii placing points polygon corresponding modified points ii points triangles neighborhood iii points triangles near add set triangles containing large polynomially bounded number red points role triangles restrict choice legal triangles cover black white points 
set triangles associated labeled construction detailed 
specifically edge ij put small triangle intersects segment ij ij ij ij hand put small triangle intersects ij ij ij ij put small number triangles inside near concave chains consecutive points may covered triangle intersecting triangle ensure triangles intersects triangle ij ij ij ij ij ij covered single triangle 
place triangles near clause containing large number red points see iii 
translate black white points direction described earlier 

set red triangles 
move points vertically plane 
geometric partitioning june canonical trapezoidal partition ways cover points legal non intersecting triangles ij ij ij covered single triangle ij ij ij covered triangle 
coverings associated true false settings variable denote set points constructed denote total number red triangles claim exist polyhedral terrain vertices approximates truth assignment provided su ciently small recall number clauses claim follows observations better cover red points lying horizontal triangle clause requires triangle cover points literals set true requires triangles 
instance contains literal set true triangle ij ij ij enlarged slightly cover ij remaining points clause covered additional triangle 
rest argument bichromatic partition problem 
perturb points slightly coplanar 
remainder develop approximation algorithms 
canonical trapezoidal partition introduce geometric partitioning problem plane captures essence surface approximation problem bichromatic points partition problem 
problem deals trapezoidal partitions boolean constraint function satisfying subset restriction property 
precisely boolean function compact connected subsets plane satisfying property 
technical reasons choose trapezoids triangles top bottom edges trapezoid parallel axis 
trapezoids triangles equivalent purpose approximation triangle decomposed trapezoids trapezoid decomposed triangles 
set points plane family trapezoids 
called valid trapezoidal partition trapezoidal partition brevity respect boolean constraint function conditions hold ii covers points iii trapezoids pairwise disjoint interiors 
geometric partitioning june canonical trapezoidal partition cast bichromatic partition problem framework setting set blue points trapezoid defining empty red points 
surface approximation problem set orthogonal projection plane trapezoid vertically lifted planar trapezoid vertical distance point directly 
space optimal solutions problem potentially infinite vertices triangles problem plane 
approximation results show restricted choice trapezoids su ces 
set points plane denote set consisting lines horizontal lines passing point lines passing points 
call lines canonical lines determined say trapezoid canonical edges belong lines 
trapezoidal partition canonical trapezoids canonical 
lemma shows limiting canonical trapezoidal partitions sacrifice constant multiplicative factor approximation 
canonical trapezoidal partition lemma trapezoidal partition trapezoids transformed canonical trapezoidal partition trapezoids 
proof give construction transforming trapezoid trapezoids pairwise disjoint interiors cover points 
new set trapezoids valid trapezoidal partition construction works follows 
consider convex hull points 
convex hull trapezoid return trapezoid 
denote left right top bottom edges shown 
perform steps constitute transformation algorithm 
geometric partitioning june canonical trapezoidal partition iv rb lb iii ru lu ii illustration canonicalization 
shrink trapezoid translating bounding edges interior meets point denote smaller trapezoid obtained 
respectively denote point lying left right top bottom edge break ties arbitrarily point lies edge 
ii partition trapezoids drawing line segment shown ii 
iii partition trapezoids lu lb drawing maximal horizontal segment denote right endpoint segment 
similarly partition ru rb lying respectively horizontal line segment 
iv rotate line supporting left boundary lu point clockwise direction meets point set lu denote intersection line top edge lu set iv 
triangle regard degenerate trapezoid iii 
top bottom edges contain respectively left edge contains right edge determined pair points trapezoid canonical position 
remaining trapezoids constructed similarly 
construction trapezoids cover point discard 
arbitrary trapezoid partition geometric partitioning june canonical trapezoidal partition transformed canonical trapezoids 
completes proof lemma 
greedy algorithms point obtain weak approximation result canonical trapezoidal partition 
roughly speaking greedy set covering heuristic ignoring disjointness constraint refine heuristic output produce disjoint trapezoids 
unfortunately step increase complexity solution quite significantly 
theorem set points plane boolean constraint function satisfying evaluated polynomial time compute log size trapezoidal partition respecting polynomial time size optimal trapezoidal partition 
proof consider set valid canonical trapezoids plane set trapezoids 
form geometric set system computed testing valid 
compute set cover greedy algorithm polynomial time 
greedy algorithm returns set consisting log trapezoids necessarily disjoint 
order produce disjoint cover compute arrangement plane induced decompose face trapezoids drawing horizontal segment vertex segment hits edge arrangement 
resulting partition trapezoidal partition number trapezoids partition log arrangement size 
total running time algorithm polynomial 
canonical form trapezoids construct finite family trapezoids search approximate solution 
direct application definition previous subsection gives family canonical trapezoids 
slightly di erent canonical form reduce size canonical triangles 
near quadratic time algorithm finding approximation size log 
ii show number trapezoids produced algorithm worst case 
geometric partitioning june recursively separable partition recursively separable partition develop main approximation algorithm 
algorithm dynamic programming depends key ideas recursively separable partition compliant partition 
partitions specializations canonical trapezoidal partition introduced previous section central algorithm performance 
trapezoidal partition called recursively separable holds consists single trapezoid exists line intersecting interior trapezoid nonempty half planes defined ii recursively separable 
key lemma gives upper bound penalty incurred approximation algorithm recursively separable trapezoidal partitions 
lemma finite set points plane trapezoidal partition trapezoids 
exists recursively separable partition log trapezoids 
addition separating line horizontal line passing vertex line supporting edge trapezoid 
proof recursive algorithm computing algorithm similar binary space partition algorithm proposed paterson yao 
assume boundaries trapezoids pairwise disjoint assumption simplify proof 
recursive step algorithm subproblem consideration lies trapezoid 
containing trapezoid may degenerate triangle may unbounded 
top bottom edges exist pass vertices left right edges exist portions edges 
initially set appropriately large trapezoid containing family 
denote trapezoidal partition obtained intersecting set vertices lying interior edge intersect left right edge portions edge edge lies interior intersects top bottom edges return 
proceed follows 
trapezoid completely crosses vertices lie top bottom edges 
leftmost trapezoid partition trapezoids drawing line right edge contains contains remaining trapezoids geometric partitioning june approximation algorithm leftmost trapezoid partition drawing line left edge 
trapezoid vertex interior previous condition met choose point median coordinate 
partition trapezoids drawing horizontal line passing trapezoid crosses partitioned trapezoids adding segment dividing step set trapezoids lie respectively 
recursively refine separable partitions respectively return completes description algorithm 
prove satisfies properties claimed lemma 
clear recursively separable separating line supports edge horizontal 
bound size charge trapezoid bottom left vertex 
vertex bottom left vertex trapezoid intersection point left edge trapezoid extension horizontal edge trapezoid 
vertices type su ces bound number vertices second type 
algorithm extends horizontal edge trapezoid trapezoid vertex interior extend horizontal edge median coordinate easily seen number vertices second type log 
completes proof 
family disjoint orthogonal rectangles partitioning find set recursively separable rectangles forms rectangular partition uses orthogonal binary space partition algorithm paterson yao 
approximation algorithm lemma applies trapezoidal partition particular start canonical trapezoidal partition output partition canonical recursively separable separating line belongs family canonical lines 
lack better term call trapezoidal partition satisfies conditions compliant partition 
lemmas imply useful theorem 
theorem set points plane boolean constraint function satisfying condition 
trapezoidal partition respecting trapezoids compliant partition respecting log trapezoids 
geometric partitioning june approximation algorithm remainder section give polynomial time algorithm dynamic programming constructing optimal compliant partition 
theorem partition log trapezoids 
recall set consists canonical lines determined consider subset points canonical trapezoid containing denote size optimal compliant partition size partition number trapezoids partition 
theorem gives recursive definition min minimum lines horizontal intersect intersect top bottom edges denote positive negative half planes induced goal dynamic programming algorithm compute canonical trapezoid enclosing points describe dynamic programming systematically computes required partial answers 
canonical trapezoid plane described uniquely tuple consisting integers numbers fix points lines containing top bottom edges pass second pair fixes points line containing left edge passes third pair fixes points line containing right edge passes 
case ties may choose points closest corners 
notation trapezoid associated tuple 
tuple produce trapezoid undefined 

abbreviated notation denote size optimal compliant partition points contained quantity undefined trapezoid undefined 
points sorted increasing order coordinates defined dynamic programming algorithm computes values follows 
geometric partitioning june approximation algorithm min min min minimum varies pairs points line passing intersects top bottom edge 
denotes set canonical trapezoids tuple associated unique trapezoid 
denotes time decide arbitrary trapezoid initially compute trapezoids total time trapezoids initially set 
remaining trapezoids recursive formula compute 
computing trapezoid requires computing minimum quantities 
total running time algorithm 
theorem states main result 
theorem set points plane boolean constraint satisfying condition compute geometric partition respect log trapezoids number trapezoids optimal partition 
algorithm runs worst case time time decide subset computing clever order exploiting certain geometric properties geometric partition time complexity algorithm improved order magnitude 
minor improvement doesn worth ort needed explain 
theorem immediately implies polynomial time approximation algorithms surface approximation planar bichromatic partition problem 
case surface approximation problem deciding trapezoid requires checking plane vertical distance points covered 
problem solved linear time fixed dimensional linear programming algorithm megiddo 
practical algorithm running time log 
denote set points covered trapezoid 
point respectively denote point translated vertically 

sets separated plane 
sets separable convex hulls disjoint 
tested log time instance see book preparata shamos 
geometric partitioning june extensions theorem set points parameter polynomial time compute approximate polyhedral terrain log vertices number vertices optimal terrain 
algorithm runs worse case time 
planar bichromatic partition problem deciding requires checking contains point red set clearly done time 
preprocessing requiring log time test log time trapezoid 
main purpose show polynomial time approximation algorithm 
theorem set red points set blue points plane find polynomial time set log disjoint triangles cover contain red point number triangles optimal solution 
view theorem set red points set blue points plane find polynomial time set disjoint orthogonal rectangles cover contain red point 
case time complexity improves orders magnitude canonical rectangle rectangle subdivided rectangles drawing horizontal vertical line passing points 
omitting details running time case 
extensions extend algorithm slightly stronger form surface approximation 
basic problem implicit function surface represented set sample points sample consists dimensional compact connected pieces 
section show extension algorithm deals case sample consists set horizontal triangles pairwise disjoint xy projection 
polygon decomposed triangles case handles polygons 
goal compute polyhedral terrain vertical distance point 
produce terrain log vertices number vertices optimal surface 

input set horizontal triangles property vertical projections plane pairwise disjoint 
consistently notational convention object denotes orthogonal projection plane subset denotes portion abusing notation slightly say set trapezoids triangles geometric partitioning june extensions approximates region vertical distance vertical projections trapezoids disjoint 
denote set vertices triangles orthogonal projection 
set set points problem 
constraint function defined follows 
trapezoid vertical distance point directly 
point set includes vertices constraint set takes consideration triangles 
constraint satisfies computed polynomial time 
clear size optimal trapezoidal partition respect lower bound size similar partition set triangles 
apply theorem obtain family log trapezoids approximates respect clearly step algorithm extend polyhedral terrain approximates triangles care exercised step wants add log new trapezoids 
second step projection plane 
ii iii ii iii 

set connected components closure 
portion lying common exterior shown 
collection simple polygons contained triangle corners triangles covered vertices polygons lie boundary edge contained edge subset polygons touch edges trapezoids polygon compute set triangles approximate vertex lying boundary trapezoid denote point geometric partitioning june extensions xy projection triangle containing triangulate triangle abc triangulation pick bc 
parallel xy plane proved maximum vertical distance bc 
repeat step polygons number triangles generated step proportional number vertices polygons bound lemma 
lemma total number vertices polygons log 
proof vertex polygon vertex trapezoid ii intersection point edge edge triangle log vertices type remains bound number vertices type ii 
construct undirected graph follows 

set edges 
avoid confusion call edges segments arcs 
segment place point close inside trapezoid bounded set resulting points forms node set edge pq polygon add arc see ii 
easily seen planar graph log 
fix pair segments 
set edges sorted left right top bottom case may incident ij assume ij lies lies number vertices type ii obviously ij call edges equivalent interior convex hull intersect trapezoid 
equivalence relation partitions equivalent classes consisting contiguous subsequence ij denote number equivalence classes ij claim edges equivalence class proof assume sake contradiction edges belong equivalence class 
assume triangle bounded lies see 
quadrilateral defined contain trapezoid edge connected component touches edges implying edge polygon contradiction 
ij ij ij log ij segments may overlap trapezoids touch 
segment edge trapezoids edge incident geometric partitioning june extensions ii edges equivalent class ii edges di erent equivalent classes bound quantity ij 
consecutive equivalent classes bottom edge top edge quadrilateral contains trapezoid 
call triangle edges trapezoidal edges triangle edges adjacent ij ij set resulting quadrilaterals 
ij su ces bound number quadrilaterals consider planar subdivision induced call 
bounded face smallest quadrilateral contains boundaries quadrilaterals cross defined 
claim face uniquely associated trapezoid proof claim obviously true unbounded face assume bounded face 
contain quadrilateral definition contains trapezoid 
contain quadrilateral largest trapezoid lies inside part trapezoidal edges lies interior trapezoidal edges lie segments say consequently triangle edges belong impossible triangle edges adjacent trapezoidal edges lies interior trapezoid bounded edge 
triangle edges lie outside interior intersect edge lies completes proof claim 
claim number faces log 
completes proof lemma 
partition polygons equivalence classes way geometric partitioning june closing remarks partitioned edges proof lemma 
call polygons equivalent endpoints lie pair edges ii interior convex hull intersect trapezoid 
argument proof lemma lemma established 
lemma edges partitioned log equivalence classes 
equivalence class convex hull observe convex quadrilateral illustrated iii 
quadrilateral approximated triangles way approximated polygon lemma total number triangles created step log 
putting pieces obtain lemma 
lemma family trapezoids supplemented log additional trapezoids triangles approximated 
orthogonal projection trapezoids plane pairwise disjoint 
area covered projection trapezoids preceding lemma course approximated regards triangles final surface log trapezoids approximates family triangles finish statement main theorem section 
theorem set horizontal triangles pairwise disjoint projection plane parameter compute polynomial time approximate polyhedral terrain size log size optimal approximate terrain 
closing remarks approximation technique certain geometric covering problems disjointness constraint 
algorithm achieves logarithmic performance guarantee size cover matching bound achieved greedy set cover heuristic arbitrary sets disjointness constraint 
applications result include polynomial time algorithms approximate monotone polyhedral surface space approximate disjoint cover triangles red blue points 
proved problems np hard surface approximation problem important problem visualization computer graphics 
state theoretical knowledge problem appears geometric partitioning june slim 
convex surfaces approximation algorithms performance guarantees known 
approximation convex polytopes turns need disjoint covering greedy set cover heuristic works 
conclude mentioning open problems 
obvious open problem reduce running time algorithm practical value 
finding cient heuristics performance guarantees hard geometric partitioning problems requires 
second problem great practical interest approximate general polyhedra problem arises real applications computer modeling 
best knowledge problem remains open special case wants find minimum vertex polyhedral surface lies monotone surfaces 
extension algorithm section know handle fill stage 
acknowledgments authors joe mitchell raghavan john reif helpful discussions 
agarwal suri fast greedy algorithms geometric covering problems preparation 
algorithm piecewise linear approximation implicitly defined dimensional surfaces siam numerical analysis 
schmidt algorithm piecewise linear approximation implicitly defined manifold siam numerical analysis 
arkin meijer mitchell rappaport skiena decision trees geometric models proceedings th annual symposium computational geometry 
bloomenthal polygonization implicit surfaces computer aided design 
clarkson algorithms polytope covering approximation proc 
rd workshop algorithms data structures lectures notes computer science vol 
springer verlag pp 

zyda simplification objects rendered polygonal approximations computers graphics 
fekete hardness results problems point separation line stabbing tech 
report department applied mathematics statistics suny stony brook 
geometric partitioning june fowler paterson tanimoto optimal packing covering plane np complete information processing letters 
ihm naylor piecewise linear approximations digitized space curves applications scientific visualization physical phenomena pp 
springer verlag 
johnson approximation algorithms combinatorial problems journal computer system sciences 
lichtenstein planar formulae uses siam computing 
cline marching cubes high resolution surface construction algorithm computer graphics 
lovasz ratio optimal integral fractional cover discrete mathematics 
megiddo linear time algorithms linear programming related problems siam computing 
mitchell suri separation approximation polyhedral surfaces proc 
rd acm siam symposium discrete algorithms 
paterson yao cient binary space partitions hidden surface removal solid modeling discrete computational geometry 
paterson yao optimal binary space partitions orthogonal objects algorithms 
preparata shamos computational geometry springerverlag 
schroeder lorensen decimation triangle meshes computer graphics 
schmitt barsky hui du adaptive subdivision method surface fitting sampled data computer graphics 
suri link distance problems simple polygon ieee transactions robotics automation 
turk re tiling polygonal surfaces computer graphics 
geometric partitioning june 
