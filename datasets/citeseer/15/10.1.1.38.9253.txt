proceedings thirteenth annual conference uncertainty artificial intelligence uai pages providence rhode island august object oriented bayesian networks daphne koller stanford university koller cs stanford edu avi pfeffer stanford university avi cs stanford edu bayesian networks provide modeling language associated inference algorithm stochastic domains 
successfully applied variety medium scale applications 
faced large complex domain task modeling bayesian networks begins resemble task programming logical circuits 
describe object oriented bayesian network oobn language allows complex domains described terms inter related objects 
bayesian network fragment describe probabilistic relations attributes object 
attributes objects providing natural framework encoding part hierarchies 
classes provide reusable probabilistic model applied multiple similar objects 
classes support inheritance model fragments class subclass allowing common aspects related classes defined 
language clear declarative semantics oobn interpreted stochastic functional program uniquely specifies probabilistic model 
provide inference algorithm oobns show structural information encoded oobn particularly encapsulation variables object reuse model fragments different contexts speed inference process 
past decade bayesian networks pearl established effective principled framework knowledge representation reasoning uncertainty 
sound probabilistic semantics explicit encoding relevance relationships inference algorithms fairly efficient practice led bayesian networks wide variety applications 
despite great success bayesian networks bns inadequate general knowledge representation language large complex domains mahoney laskey traditional bn node corresponds basic attribute domain 
set nodes network structure fixed advance network specific domain created 
construction network painstaking manual process somewhat analogous programming logical circuits 
example mechanism code reuse manually copying network fragment pasting 
manual duplication drawbacks analogous process programming task 
example original network fragment modified knowledge engineer manually go back change models 
difficulties encountered largely solved context programming languages primarily data types 
object oriented programming languages goldberg robson provide framework organizing data types way allows robust flexible efficient construction programs 
similarly object oriented database systems banerjee provide tools managing rich complex data 
object oriented bayesian networks oobns powerful general framework large scale knowledge representation bayesian networks 
show oobns combine clear declarative probabilistic semantics organizational benefits objectoriented framework 
show object oriented models help reveal locality structure domain supporting efficient probabilistic inference 
basic element oobn object 
basic object standard random variable traditional bns 
oobn complex objects 
general object set attributes object 
car object may attributes car color owner engine car color simple object values finite range car owner complex object attributes 
value object assignment values attributes 
bayesian networks define probabilistic model assignments values object 
usual probabilistic model take account influences environment object 
koller view object stochastic function inputs attributes influence outputs 
briefly stochastic function function value inputs returns probability distribution value outputs 
conditional probability table cpt traditional bayesian network simple kind stochastic function define simple object basic random variable bn 
stochastic functions composed complex functions defined terms simpler ones functional programming language 
complex object defined assigning stochastic functions attributes connecting attributes bayesian network 
result stochastic function complex object 
simple version representation srinivas srinivas context model fault diagnosis hierarchical component model 
oobns allow generalize multiple objects 
formally define classes objects described probabilistic model 
classes provide ability describe general reusable model different contexts 
encapsulation internal details class description class interface allows classes libraries combined model needed 
important realize oobns simply library classes constructs bayesian network fragment 
models defined oobns clear declarative probabilistic semantics just bn oobn uniquely specifies probability distribution 
oobn interpreted unambiguously having understand associated infrastructure procedural model construction code 
addition supporting generalization classes serve important role 
general different classes share common substructures 
example may general class people may want specific class college students probabilistic model describing performance students background abilities 
clearly models completely disjoint students attributes describe person probably described probabilistic model 
class mechanism oobns allows student class inherit structure person class modifying augmenting necessary 
stochastic function perspective helps provide clean semantics attribute class stochastic function subclass simply redefines functions adds new ones 
view inheritance hierarchy classes supporting hierarchy objects 
ability enclose objects objects values attributes provides orthogonal part hierarchy 
combination hierarchies provides natural framework dynamic abstraction refinement models 
cases view class version subclasses ignores important details 
example class compiling away details internal structure 
inference proceeds user decide refine model specific class objects model 
time user focus part hierarchy refine parts model relevant 
oobns just nice language representing complex probabilistic models 
representing domain hierarchy interconnected objects oobn explicit certain organizational structure 
seen times making additional structural information accessible inference algorithm significantly improve performance inference 
specifically network defined oobn model internal parts object encapsulated object 
probabilistically implies encapsulated attributes separated rest network object inputs outputs 
separation property utilized localize probabilistic computation objects limited interaction 
multiply bayesian network framework xiang xiang turns particularly appropriate mechanism utilizing structure 
objects class probabilistic model precompute certain parts inference task level class reuse different instances 
localization reuse computation provide advantages refinement process 
particular part model refined effects refinement computed locally refined object propagated necessary object interface 
furthermore new class object inherits parts definition superclass algorithm simply reuse previous computation parts stay 
object oriented framework objects types basic unit discourse oobn object 
way viewing object collection properties associated entity domain 
object correspond physical entity world modeled may represent entity relationship different entities 
example vehicle surveillance model may objects cars drivers roads correspond physical entities 
objects medical diagnosis model may correspond entities diseases symptoms physiological systems respiratory system 
basic type definitions form foundation type system language 
definition basic type set values predefined basic types booleans integers reals user defined enumerated set weather cloudy 
basic variable variable takes values basic type 
structured type defined recursively basic types 
definition structured type set values defined tuple ha attribute labels corresponding basic structured types 
set values type form ha vn type structured variable variable takes values structured type 
variable val denote set values take 
val set variables defined obvious way 
ha value refers example structured type representing person may attributes age gender description income 
age attribute basic user defined type ages yr yr yr 
gender attribute user defined type genders 
income takes values user defined type incomes description attribute structured type attributes hair color eye color height takes values appropriately defined type 
possible value type may hage yr gender female income description color brown eye color green height ft 
value gender female value description height ft 
basic definitions define objects 
objects composed types attributes input attributes value attributes 
input attributes parameters object value influences choice values encapsulated output attributes 
value attributes part specification object 
complex objects created attributes take objects values 
value attributes divided types output attributes encapsulated attributes 
visible rest model encapsulated object 
definition simple object composed set labelled input attributes single output attribute labelled output 
attributes basic variables 
intuitively simple object corresponds random variable bayesian network 
takes values simple type depends random variables inputs 
complex objects composed simple objects 
definition complex object composed set labelled attributes 
attributes partitioned sets input attributes output attributes encapsulated attributes 
output attributes encapsulated attributes called value attributes denoted 
input attributes basic structured variables 
value attributes objects 
note input attributes objects 
see correspond parameters passed value enclosing object denote object variable represented attribute object generally define object variable ae attribute chain ae delta delta delta object viewed defining structured variables corresponding full value part visible rest objects model 
simple objects variables 
definition simple object full variable output variable defined output variable output 
definition complex object full variable structured variable value ha vn value attributes 
analogously output variable structured variable value ho output attributes 
clearly projection 
distinction objects variables define important ensure clean semantics language 
objects organizational units describing entities domain relationships 
variables defined objects correspond actual random variables probabilistic model 
variable corresponding object defines type 
definition value type object type 
output type type 
example complex object representing car may composed attributes contains single attribute owner variable structured type person described example 
consists attributes original value age mileage type maintenance simple object attributes tires engine brakes steering complex object 
output value type original value user defined type output type engine power medium 
consists attributes current value max speed braking power steering safety correspond simple objects 
value may value mph braking power medium steering safety 
value course complex 
stochastic functions interested modeling uncertainty possible values object associate object probabilistic model 
model defines distribution object value function values input attributes 
precisely associate stochastic function koller object defines assignment values object inputs distribution possible values object 
definition value types 
stochastic function function val probability distributions val 
representation describe stochastic functions recursive composition object oriented bayesian network fragments oonf specifies conditional distribution set value attributes set input attributes 
definition simple object oriented network fragment set input attributes single value attribute output basic variables 
network consists conditional probability function defining distribution val output assignment values val 
simple oonf represented conditional probability table cpt bayesian networks 
compact representation appropriate particularly attributes takes values infinite space integers reals 
ensuing discussion assume simple represented cpts arguments hold representation 
definition object oriented network fragment input attributes value attributes consists directed acyclic graph nodes attributes value attribute ffl input annotation ae parent ae attribute 
require attributes ae type 
require parent annotate input ffl oonf fa simple attribute fa simple oonf 
intuitively annotations inputs attribute represent exact mapping parameters values passed 
demonstrates dag probabilistic model associated car object 
exact endpoints edges represent annotation edges 
example input attributes attribute mapped output variable simple object type mapped attribute engine power 
input attributes shown usually clear context 
oonf encodes certain set assumptions probabilistic model variables defined objects oonf 
conditional independence assumptions value attribute attribute non descendant conditionally independent value 

equality assumptions input attribute annotated ae ae 

distribution assumptions conditional distribution defined fa theorem assumptions oonf uniquely specifies stochastic function type type 
proof proof proceeds induction depth oonf depth simple oonf depth complex oonf defined maximal depth attributes plus 
base case trivial simple oonf cpt clearly defines conditional distribution type want 
inductive step essentially uses similar chain rule standard bayesian networks pearl value attributes ordered way compatible dag defined fix value variables consider assignment values vn 
simple probabilistic reasoning gamma gamma consider single term product gamma gamma denote gamma denote gamma dag acyclic ordering variables compatible dag full variables corresponding parents assigned values right hand side conditional probability 
equality assumption implies input attributes assigned unique values 
conditional independence assumption unique value distribution assumption implies conditional distribution defined oonf fa inductive hypothesis applied fa implies existence unique stochastic function 
original val maintenance age mileage type steering safety braking power current val max speed tires engine power balance owner steering brakes power income age handling traction reliability current val braking power steering safety max speed car weather condition speed limit road car speed accident accident level damage age income driving skill driver aggression graphical depiction interconnection model car 
oobn model car accident 
value term product uniquely defined entire conditional distribution uniquely defined required 
classes oobns stochastic function described previous section describes probabilistic relation set input attributes set value attributes 
associate stochastic function object type matches type stochastic function 
precisely object type compatible oonf oonf input attributes value attributes 
recall oonf specify oonf attributes 
general complex models involve similar objects attributes objects stochastic functions essentially identical 
define generic multiple times defining similar objects 
accomplish goal notion class 
class simply oonf associated specific object 
associate oonf object simply asserting object class clearly associate oonf multiple objects 
ready define object oriented bayesian network 
oobn essentially single situation object inputs probabilistic properties defined associated oonf 
definition object oriented bayesian network consists set class definitions cm single situation object input attributes associated oonf 
object model including class definition associated defined classes note type compatibility requirement incorporates value attributes object ensures class definitions non recursive 
value type attribute strictly simpler value type class specify oonf attribute class indirectly translate oonf incorporating class definitions oonf definitions simply unrolling class definitions 
combining observation theorem obtain result theorem oobn uniquely specifies probability distribution situation 
example outline construction simple oobn model car accident 
oobn contain class definitions classes car engine steering tires brakes weather road driver 
internal structure car class shown 
driver class defines oonf object type detailed person type described example 
driver contains attributes person 
discuss section driver class easily defined subclass person allowing driver attributes inherited redefined 
addition class definitions oobn specifies situation object associated oonf describing situation interest 
oonf situation structure shown contains complex attributes driver car weather road appropriate classes 
shows attributes simple objects 
oobn supply cpts objects 
define oobn answer arbitrary queries objects domain 
usual query assigns values evidence objects 
objects high level accessed notation described 
example possible query accident oobn damage obvious assumption types type system finitely nested tuples 
driver age yr road location rural note query mentions object road location encapsulated road object visible model 
clearly objects visible model may interest user accessible user queries 
inference oobns basic language defining oobn models turn subject performing inference oobns 
proof theorem shows oonf defines structure standard bayesian network 
principle define bayesian network variables object oobn 
apply standard bn inference algorithm junction trees lauritzen spiegelhalter unfortunately bn produced manner structured way supports effective inference 
random variables corresponding complex objects usually range large set values rendering algorithms impractical 
key effective inference oobns observation complex objects group simple objects coherent units 
higher level units encapsulate simple objects making easier define inputs outputs model terms cognitively meaningful entities 
simple objects meaningful effect model influencing outcome random choice value random variable 
observation allows reformulate oobn inference terms basic variables 
note property specific language chosen 
richer language koller structured objects play important role preventing simplifying inference algorithm restricting simple objects 
remainder section oobn set objects defined set simple objects defined assignment values uniquely reconstruct value object model complex objects composed simpler objects simple object 
distribution val extended distribution val 
lemma allows construct bn 
lemma object ae attribute chain type ae basic 
ae output attribute unique simple object proof proof induction length ae 
ae length simple object value attributes complex objects objects type object basic 
ae longer chain ae value attribute object 
inductive hypothesis applied ae implies claim 
lemma object input attribute ae possibly empty attribute chain ae 
type ae basic ae refers output attribute unique simple object proof proof top induction structure objects situation object inputs base case trivial 
consider object input attribute attribute chain ae type ae basic 
enclosing object containing oonf annotated annotation ae type compatibility output type ae type ae ae basic 
cases 
value attribute object 
definition ae ae attribute 
lemma ae ae output attribute simple object input attribute higher level object case inductive hypothesis applies ae ae define bayesian network bn carries information distribution defined bn contains node simple object defined lemma input attribute refer output attribute unique simple object add edge input attribute refers output cpt oonf theorem bn defined bayesian network 
distribution defined bn defined proof show bn dag 
define lexicographic ordering objects follows 
situation object gets label 
label object oe label value attributes labels oe oe manner consistent dag structure oonf suppose parent bn containing object attribute object contained precedes attribute input case attribute object precedes way precede ordering 
edge precisely cpt depends bn defined bayesian network 
see defines distribution consider nodes bn order 
clearly bn define distribution root node cpt parents 
node conditional probability inputs defined cpt oonf equality constraints distribution defined input refers parent bn equal distribution defined conditional probability bn parents distributions 
corollary oobn situation object situation bn induces probability distribution situation defined bn standard bayesian network bn inference algorithms answer queries 
better design inference algorithm take advantage organizational structure encoded oobn 
basic intuition attributes object encapsulated 
passed enclosing object 
attributes long range influences 
design inference algorithm localizes computation possible objects 
say object defined value attribute value attribute object defined basic variable object attribute chain input refers output basic variable exported defined object defined basic variable imported defined object defined intuitively information object needs communicate enclosing object variables imports exports 
formally define set complex object set variables imports exports 
show set complex object separate variables corresponding objects defined variables model 
lemma set basic variables corresponding simple objects defined complex object set 
conditionally independent gamma bn 
proof consider path gamma path contain adjacent nodes gamma possibilities 
case edge case defined outside exported set 
path converging arrows blocked condition case edge imported similarly blocks path 
separation criterion satisfied path 
lemma allows localize inference graph structure objects 
precisely define set variables sigma object set sigma consists basic variables corresponding simple value attributes set sets complex value attributes sigma consists variables local variables transit direction objects containing objects contains 
sets organized tree structure natural manner tree parent sigma sigma attribute construct separate junction tree sigma essentially sure junction tree object junction tree enclosing object contain clique containing variables set 
set separates general part model enclosed simply connect cliques junction trees get viable model objects 
precisely process srinivas srinivas hierarchical modelbased diagnosis 
unfortunately locality property oobn interfaces corresponding sets quite large 
provide efficient construction multiply section bayesian network framework xiang poole xiang construction follows general lines simple described 
show construct various junction trees way allows clique corresponding set decomposed supporting correct probabilistic propagation 
consequence construction results junction trees smaller cliques leading efficient probabilistic inference 
space considerations prevent describing framework entirety 
simply survey basic data structures application framework 
simplified definitions adapted xiang partitions random variables bn set non disjoint subnets 
subnet contains localized set random variables bn associated edges 
intersection subnets called property locally separates subnets 
subnets considered isolation remainder network intersection renders conditionally independent 
hypertree structure subnets organized hypertree 
hyperlinks correspond sepsets adjacent subnets hypertree 
hyperlink property renders parts network connects conditionally independent 
xiang provide inference algorithm hypertree guarantees correct probabilistic inference 
network bn define contain subnet sigma object sigma set nodes described 
consider tree defined set objects parent value attribute subnets organized hypertree hyperlink sigma sigma parent theorem hypertree structure 
proof set simple variables contained subnets beneath sigma hypertree including sigma 
definition subnet contains simple variables defined io sets objects defined simple object defined contained io set object defined defined outside object defined imported contained io set notation lemma lemma renders conditionally independent gamma renders conditionally independent gamma hyperlink renders parts hypertree connects conditionally independent required 
shows structure constructed accident model 
note objects appear single subnet property induced locality structure object oriented model 
hypertree message passing probabilistic inference process done paths tree 
example edge subnets weather road share weather 
communication concerning attribute passed subnets containing accident model subnet 
efficient localized inference algorithms xiang apply directly hypertree structure 
organize junction tree oobn structure exploiting separation properties lemma 
decomposition junction tree tree smaller junction trees immediately leads result theorem object oobn denote complexity inference junction tree defined algorithm subnet complexity inference defined 
complexity inference grows linearly number objects oobn 
complexity exponential largest clique junction tree individual object 
oobn structured way mirrors locality domain object define simple objects large 
believe complex junction trees individual object rare practice 
note junction tree constructed object algorithm may larger optimal junction tree stand bn structure need junction trees neighboring subnets compatible 
construction plays crucial role reducing impact problem 
mentioned creating clique entire set object allow decomposition sepset sort junction tree 
cliques sepset junction tree called linkages 
long neighboring junction trees structured similarly respect shared variables correct probabilistic inference possible having single clique interface junction trees 
full discussion issue scope see xiang details 
organizational information provided oobn plays roles construction 
helps identify partition bn nodes support locality inference 
course possible standard bn algorithm naturally find partition creating junction tree 
guaranteed happen particularly task finding optimal junction tree known np hard 
second role oobn structure fact allows straightforward construction 
shown xiang sepset decomposition provided result data structure efficient provided single junction tree 
advantage arises repeated interaction network 
user asks repeated queries incrementally adds evidence particular subnet computation performed locally subnet 
evidence asserted subnet need propagated rest network user shifts attention 
advantage relevant context oobns user may focus attention object extended period 
useful data structure reusing computation multiple objects class 
objects class subnets essentially identical renaming variables 
junction tree objects avoiding recomputing 
fact reuse results actual inference process 
constructed initial calibration phase standard junction trees various junction trees internally consistent calibrating cliques tree consistent 
analogously junction tree process process consists phases collecting beliefs entire tree single root distributing back 
assume conduct process situation object root object tree playing role root 
consider object class subtree hypertree rooted sigma phase collecting beliefs subtree depends stochastic function object location model 
particular inference process object class identical 
caching results phase process reuse identical objects 
note caching process applies complex objects contain nested levels objects 
case junction tree tree exact structure may depend structure junction tree containing object 
objects class similar contexts problem occur 
driver description hair color driver description eye color driver description height brakes power car maintenance car mileage weather season weather wind weather temperature weather car current val car max speed car braking power car steering safety driver age driver income driver driving skill driver accident accident level car speed damage weather road speed limit road condition car mileage car maintenance car original val steering handling tires traction tires balance car maintenance car mileage car type car mileage car original val engine power engine reliability car maintenance car type car age car maintenance car mileage car original value car engine power car steering handling car engine reliability car tires balance car tires traction car braking power car brakes power car steering safety car current val car max speed driver age driver income road location road maintenance road condition road speed limit weather driver age driver income driver gender driver driver driving skill car tires car engine car steering car brakes driver description weather car road driver accident model structure constructed accident model 
subnet associated object shown box containing simple objects subnet 
objects defined locally subnet shown bold face 
edge subnets interact 
model contains car objects 
case computation entire object including enclosed ones reused 
models involving complex objects class savings considerable 
caching save factor second phase distribute beliefs beliefs different identical objects typically different location model results object object necessary 
assert evidence object query internal nodes need internal beliefs calibrated 
execute lazy inference process leave objects uncalibrated calibrate necessary 
course inference process requires bookkeeping order remember calibration operations done 
defer discussion full 
subtyping inheritance best known useful features object oriented modeling ability create subclasses inherit properties existing classes 
classes organized hierarchy instance subclass instance parent class 
inclusion property implies instance subclass instance parent class expected 
words subclass supply outputs parent class require input supplied parent class 
recall class simply oonf set input value attributes 
interface type class tuple hi ik om om fi fo omg type attribute definition interface type subtype interface type ffl output attribute named corresponding output attribute output type subtype output type ffl input attribute corresponding input attribute type subtype type class interface type candidate subclass interface type condition guarantees replace object object outputs place outputs second condition guarantees inputs requires available required 
point define subclass interface type subtype interface type definition restrictive 
part goal defining subclass provide additional attributes 
definition prevent prevent new attributes depending rest model new way 
assume example trying define commute road subclass road class 
may want add new output attribute traffic model 
logical inputs attribute location attribute internal road class attribute representing time day 
appropriate attribute road class add new input class violating subtyping requirement 
example violation subtyping property problem 
situation substitute commute road object road object traffic output irrelevant exist road object needed context 
subtyping assumption stated required want language strongly typed 
finesse way problem associating class definition set different interface types corresponding various combinations input output attributes output attributes required inputs 
formally attribute class requires attribute ancestors dag oonf subset outputs projected interface type interface type output attributes limited input attributes limited input attributes required notion projected type allows provide restrictive notion subclass 
definition subclass projected interface type subtype interface type hierarchy classes hierarchy set classes subclass definition hierarchy classes serves main roles 
ability class abstracted approximate version subclasses 
class subclasses may describe type object subclass may detailed 
example view class person class classes student driver subclasses 
subclasses specifies additional details object 
furthermore distribution specified class approximation distribution specified subclass may support efficient inference 
user choose level detail appropriate problem 
abstraction property provided hierarchy useful simple objects 
example may want refine incomes type consisted finer grained partition directly map values original ones new type subtype incomes 
new type value type income attribute new class rich person person 
second role hierarchy observation model subclass common model superclass 
example distribution description attribute person class rich person class 
class hierarchy support code reuse allowing subclasses inherit parts specification superclass 
precisely allow subclass defined naming parent class listing modifications definition 
default attributes types input mapping inherited additional attributes declared usual type declaration oonf annotation input attribute 
resulting network structure course continue dag 
attribute declared attribute name exists definition replaces course subtype restrictions definition maintained case 
note definition avoids trap multiple inheritance simple expedient disallowing 
example augment class definitions example subclasses interact interesting ways 
subclass fuel engine may new complex hidden attribute fuel injection system 
reliability attribute modified take additional input mapped new attribute 
cpt fuel injected engine power gives higher probability value high 
subclass sports car car engine attribute type engine 
annotations inputs engine left unspecified inherited car 
different cpt simple attribute 
new output attribute acceleration associated probabilistic model 
attributes engine power original value assigned inputs acceleration 
aspects model inherited car 
refining models oobns provide orthogonal organizational hierarchies part hierarchy corresponding inclusion object hierarchy classes 
hierarchies combine provide powerful flexible tool abstraction refinement 
part hierarchy allows object ignoring component attributes 
precisely process defines object hidden variables induces identical probabilistic model interface 
hierarchy allows describe object variety classes corresponding different levels detail description 
general classes computationally efficient 
note naturally fits isa hierarchy interface type object version define class representing objects superclass original class 
abstraction mechanisms applied user runtime construct models represent various aspects appropriate level granularity 
user may modeling domain fairly high level abstraction 
objects represented high level classes 
result incorporating evidence querying model user finds certain objects model particularly relevant 
user focus objects refining models 
process repeated user focusing partof hierarchy refining hierarchy 
example modeling accident domain sense versions car objects 
describing general circumstances accident encapsulated attributes car relevant 
inference may performed quickly ignored 
suppose user begins model accident car 
asking queries consider driver age weather conditions user decides refine model specifying car sports car 
asking queries user decides sports car consider properties brakes 
consider done inference algorithm refinement 
car changed sports car model remains 
aspect change visible rest model probabilistic relationship inputs outputs car object information encoded sepset car object rest model 
new information needs propagated rest model computation needs performed internals sports car 
sports car get opposite behavior 
evidence rest model propagated encapsulated attributes car 
inputoutput relationship sports car object remains done outside 
process propagating information certain parts model easily algorithm 
suppose user car changing sports car 
case representation internal probabilistic model object 
model changed think representation needs recomputed entirely scratch 
fact necessary 
sports car inherits model car model 
particular models subparts car unchanged 
objects separate subnet junction tree 
previous computation done objects typically need changed car model changed 
discussion describes flexible modeling language bayesian networks object oriented approach 
course oobns proposal extending bayesian networks attribute level 
oobns differ prior proposals crucial way 
virtually prior topic focuses combining bayesian networks logic programming rules see example breese ngo poole 
approach stochastic functional lan note currently allow part model changed runtime adapted support type interaction 
guage koller object oriented framework natural extension 
believe approach important advantages ability naturally represent objects composed lower level objects 
ability explicitly represent classes objects crucial incorporation inheritance language 
properties crucial large scale knowledge representation 
particular mechanisms allow reuse model fragments way natural semantically coherent easing knowledge acquisition complex structured domains 
shown encapsulation objects objects code reuse provide significant advantages inference 
independently laskey mahoney laskey mahoney developed framework representing probabilistic knowledge shares features oobns 
framework network fragments complex fragments built simpler ones way complex built simpler ones 
framework currently supports representation certain features hypotheses process incorporating oobns 
approach building complex models procedural nature uses declarative object oriented representation language 
result approach allows organizational structure model particular encapsulation objects reuse model expressed explicitly utilized inference algorithm 
organizational structures enable attractive features oobns ability support natural framework abstraction refinement 
currently decision level abstraction modeling situation completely user 
working mechanisms automated abstraction refinement reasoning system automatically decides appropriate level detail answering query incrementally refines model reasoning process 
working extending expressive power oobns allow natural modeling complex domains 
oobns allow utilize class hierarchy define models variety different structures model described language structure fixed 
particular language allow express uncertainty identity number objects model relationships 
suppose example wanted consider passengers accident model 
number passengers car variable need different model possible number passengers 
related restriction express global constraints set objects 
example say car contains passengers child 
solution allow set objects type object 
express uncertainty number objects set global properties set 
language allow example describe distribution number passengers vehicle sports car usually passengers 
objects depend properties set individual objects set 
koller developed language inference algorithm deals sets believe techniques applied oobns 
course forms structural uncertainty working extension oobns allow deal issue 
main limitation oobns fact expressive power deal suitably situations evolve time 
objects oobn static object defined properties determined may uncertain 
able apply oobns domains involving multiple interacting entities cars state changes time 
natural model system define object entity attributes corresponding state different time points 
unfortunately type architecture compatible current framework 
resulting model acyclic different entities influence time 
alternative define high level object corresponding global state system time 
solution yield coherent model inelegant inefficient requires group full states different objects breaking encapsulation 
currently working natural models modeling dynamic objects 
despite limitations believe oobns significant advance scaling bayesian networks complex knowledge representation tasks 
key feature oobns believe allow scale representation inference go hand hand 
representation language allows knowledge engineer organize model natural coherent manner 
organization chosen engineer contains knowledge problem decomposes 
organization inference algorithm utilize knowledge 
essence bayesian networks contain types knowledge relevance relationships conditional probabilities oobns contain third type knowledge organizational structure 
kathy laskey great help making definitions coherent 
kathleen fisher uri lerner suzanne mahoney david mcallester yang xiang anonymous referees useful comments discussions relating 
supported generosity powell foundation onr darpa contract subcontract information extraction transport done authors visiting research 
banerjee banerjee 
chou kim woelk 
kim 
data model issues object oriented applications 
acm transactions office information systems 
breese breese 
construction belief decision networks 
computational intelligence 
goldberg robson goldberg robson 
smalltalk language implementation 
addison wesley 
koller koller levy pfeffer 
tractable probabilistic description logic 
proc 
aaai 
appear 
koller koller mcallester pfeffer 
effective bayesian inference stochastic programs 
proc 
aaai 
appear 
laskey mahoney laskey mahoney 
network fragments representing knowledge constructing probabilistic models 
proc 
uai 
proceedings 
lauritzen spiegelhalter lauritzen spiegelhalter 
local computations probabilities graphical structures application expert systems 
journal royal statistical society pages 
mahoney laskey mahoney laskey 
network engineering complex belief networks 
proc 
uai pages 
ngo ngo haddawy 
theoretical framework context sensitive temporal probability model construction application plan projection 
proc 
uai pages 
pearl pearl 
probabilistic reasoning intelligent systems 
morgan kaufmann 
poole poole 
probabilistic horn abduction bayesian networks 
artificial intelligence 
srinivas srinivas 
probabilistic approach hierarchical model diagnosis 
proc 
uai pages 
xiang xiang poole 
multiply bayesian networks junction forests large knowledge systems 
computational intelligence 
xiang xiang 
optimization inter subnet belief updating multiply bayesian networks 
proc 
uai pages 
