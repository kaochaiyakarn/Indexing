integrated global gis visual simulation system peter lindstrom david koller william ribarsky larry hodges op den bosch nick faust reports integrated visual simulation system supporting visualization global multiresolution terrain elevation imagery data static dynamic objects multiple levels detail non features roads rivers distributed simulation real time sensor input embedded geographic information system 
requirements real time rendering large datasets heterogeneous detail management strongly affect structure system 
hierarchical spatial data structures multiple coordinate systems allow visualization manipulation huge terrain datasets spanning entire surface earth resolutions meter 
multithreaded nature system supports multiple windows independent stereoscopic views 
system portable built opengl posix threads motif windowed interface 
tested evaluated field variety terrain data updates due real time sensor input display networked dis simulations 
reports significant progress efforts design construct real time visual simulation geographic information visualization system named vgis virtual geographic information system 
vgis supports accurate depiction terrain elevation imagery addition features ground cover trees moving vehicles buildings static objects roads atmospheric effects 
entire environment composed heterogeneous parts simulated integrated rendering time 
system set efficiently manage integration ultimately manage dynamically complexity part respect order conform strict time budget telling details 
integration gis database important applications require access geographically located information building names contents floor plans 
gis data handled vgis data managers threaded real time renderer visualization display environment 
visual simulation system described implies large huge amounts data 
automatic paging caching techniques handling heterogeneous data different parts system place 
example system visualize urban scenes manage hundreds thousands buildings plus textures street layouts 
flexibility terrain visualization sub system handle terrain part world integrate terrains common coordinate system seams gaps levels detail due multiple coordinate systems 
hierarchical organization structure terrain detail continuously graphics visualization usability center georgia institute technology adapted user viewpoint scene content 
hierarchy flexible detail added deleted needed 
flexibility quite important due database size global datasets vgis require gigabytes 
describe visual simulation system provides structure supporting parts described 
discuss detail implementations parts concentrating especially global terrain visualization 
structure multithreaded form facilitate balanced separable management system parts 
quite portable due standard libraries pthreads opengl ported multiple workstation environments including sgi sun platforms 
working pc version windows nt 
system wide applicability having battlefield visualizations tactical planning complex urban visualizations 
related vgis takes advantage advances number areas create integrated global geographic information visualization system 
large body previous addressed issues modeling representing manipulating spatial data geographic information systems 
applying visualization techniques global spatial data enjoyed increasing attention 
vgis manages huge complex terrain gis datasets efficient manner hierarchical spatial data structures 
number data structures adopted gis systems spatial databases 
samet describes quadtree fundamental data structure vgis system 
representing spatial datasets span entire globe requires special data structures take account curvature earth allow efficient searching rendering operations large amounts data 
fekete describes sphere quadtrees spatial data structure applicable global representations earth 
researchers proposed similar hierarchical spatial data structures demonstrated useful global geographic information systems 
vgis relies multiresolution techniques allow truly interactive visualization geometrically complex terrains 
large number researchers developed multiresolution representations rendering techniques large complex terrains height fields polygonal meshes vgis 
algorithms attempt represent surfaces number vertices geometric error metric manner preserves application specific critical features surface 
uniform grid methods irregular triangulations employed represent surfaces techniques including hierarchical subdivisions mesh simplification creation multiresolution representations 
previous surfaces concentrated triangulated irregular networks tins 
number different approaches developed create tins height fields delaunay triangulations hierarchical triangulation representations proposed lend usage multiresolution level detail algorithms 
regular grid surface implemented terrain general surface approximations 
gridded terrain surface representation vgis described 
surface approximation representations include techniques wavelet transforms methods meet application specific criteria preserving important terrain features 
vgis uses approach treats terrain single connected surface rendering continuous level detail representations terrain geometry 
similar methods continuous view dependent level detail rendering terrains surfaces described 
number visualization systems implemented integrate visualization techniques large spatial geographic information terrain data 
systems stress accurate rendering global images accurate modeling environmental processes sacrificing interactivity system 
systems emphasize tight integration visualization powerful spatial analysis capabilities gis 
systems vgis place high priority real time highly interactive visualizations spatial data 
maintaining truly real time update rates face large complex datasets requires special techniques time critical visualization system designs 
bryson johan discuss issues particular time critical computations visualization environments 
software toolkits iris performer provide architectural framework similar vgis provides support efficient rendering simulation operations high computer graphics workstations 
interactive visualization systems visual simulation training address technical problems vgis including real time rendering large terrain databases 
flight simulator systems implemented sophisticated image generation techniques allow efficient rendering visualization complex spatial databases 
developments interactive graphics rendering databases possible theshelf graphics workstations 
nasa virtual planetary exploration project supported virtual exploration planetary terrains mars interactive frame rates 
sri system allows interactive viewing landscapes similar terrain level detail paging techniques vgis allow large high resolution geo specific terrain datasets visualized 
vision research project provides distributed virtual globe multimedia interface visualizing geographic data 
terrain visualization systems parallel architectures render complex datasets maintaining interactive performance visual simulation planetary visualization applications 
system design requirements rationale design decisions development vgis driven hardware constraints user requirements 
typical hardware constraints include available main memory available texture memory available precision geometric calculations rendering speed disk transfer speed user requirements include interactivity line processing time display accuracy data registration flexibility extensibility portability user developer perspectives 
due large datasets vgis typically works data put secondary storage paging scheme bring cache appropriate data display 
level detail techniques applied geometry imagery limit amount data stored main memory texture memory 
techniques image quality metrics parameters manipulated interactively user obtain desirable balance rendering speed scene fidelity 
user ability visualize scene multiple views map separate windows 
view may display scene different viewpoint immersive view overview map may display different aspects scene terrain contour map surface features roads rivers turned 
order conserve memory view independent data shared views accessed single primary cache 
obtain high degree interactivity system broken number prioritized relevance final display update rate important constraints system 
example dedicated render thread single task update views highest possible rate level detail lod management distributed threads data operate generally update scenes rate lower rendering rate number server threads execute data requests 
fine grained subdivision tasks ensures high degree cpu utilization eliminates bottlenecks associated blocking system calls disk input device polling real time components system 
accommodate data paging level detail management view culling quadtree data structure spatially subdivide organize terrain raster data 
globe subdivided small number pre determined areas corresponding separate quadtree 
tiles associated quadtree nodes stored file format closely matches internal representation allows paging performance 
single global coordinate system large number local coordinate systems 
necessary precision afforded current graphics hardware insufficient representing detailed geometry distributed large volume single coordinate system 
different branches quadtrees assigned different local coordinate systems centered precision maximized oriented locally preserve natural directions exploited terrain geometry level detail algorithm 
vgis designed portable spectrum different platforms primarily targeted high graphics architectures silicon graphics workstations 
certain platform specific extensions optionally incorporated compile time maximize system performance 
system layered top portable standardized libraries opengl posix threads provides level indirection interfacing windowing subsystem motif unix platforms 
system overview vgis system consists dataset pre processing component actual run time visualization display system 
optionally external processes may provide real time remote data input 
due vast volumes data global terrain database data prepared line structured form closely matches internal representation paged main memory efficiently 
form pre processing includes data format conversion reprojection resampling data analysis data synthesis 
order maximize run time performance non interactive simulation real time data acquisition remote queries separated run time system executed remote processes 
number server threads run back run time system communicate external processes fetch data local disk 
addition threads perform intermediate tasks data transformations conversion height field data cartesian coordinates data synthesis initialization generation lod parameters synthesis different image types data internal representation necessary parsing dis packets gis queries 
processing necessary limit amount data stored disk allows vgis interface external modules arc info gis servers modsaf dis simulators 
servers broken data type terrain symbology gis run independent threads 
server handles requests number clients manage corresponding data type 
mentioned previous section vgis supports concept multiple independent views corresponding window screen 
example view display user riding moving vehicle dimensions may god eye view looking vehicle third view overview map larger area 
view view module contains data managers data type 
example terrain manager data requests terrain server handles level detail management surface queries terrain rendering similarly object manager manages animation display symbology features 
actual screen rendering done single dedicated render thread 
thread runs asynchronously threads provide maximum rendering performance interactivity 
view module scenes rendered prepared buffered data structures similar opengl display lists 
display lists sent render thread display 
display lists typically updated frequently scenes rendered allowing renderer reuse display list frames 
minimize response time renderer fetches copies view parameters position orientation field view view frame 
view parameters updated single user interface ui thread acts manager system 
ui event generated input device remote commands corresponding view parameters updated view 
overview vgis architecture 
sections describe system components detail 
pre processing data processing vgis system comes forms line pre processing done dataset intermediate online processing performed data paging stage real time line processing typically done frame 
purpose pre processor dataset builder isto gather different types data transform format readable quickly accessible run time system 
tasks inherently compute intensive performed run time system high rates 
additionally pre processing done dataset sense pay penalty assembling dataset front 
pre processor may handle large variety different data types limit discussion processing static terrain data 
basic data types domain include terrain geometry raw elevation elevation corrected non surface features roads rivers private cache display lists display lists window window render thread view terrain lod terrain manager terrain client object lod object manager object client terrain server real time ui master shared cache gis server disk cache dataset builder object server remote control view terrain lod terrain manager terrain client object lod object manager object client private cache overview vgis system architecture 
illustrates independent views generalized arbitrary number 
modules represented rounded boxes processes threads circles data structures rectangular boxes data flow communication arrows 
surface features imagery arc digitized raster graphics pre shaded relief maps contour maps surface properties surface roughness parameters bounding volumes 
source data may come variety file formats pre processor translate single common format 
addition data type source data may consist multiple variable resolution possibly overlapping nested datasets 
pre processor ability layer composite single dataset desired 
mentioned vgis utilizes quadtree structure organizing multi resolution terrain data hierarchical manner 
node quadtree identifies fixed square area geodetic lat lon coordinates discrete resolution 
additional constraints force dimensions raster tiles associated nodes powers post spacing successively doubled consecutive level tree 
facilitate data structure terrain dataset resampled discrete pre determined resolutions 
accommodate fast paging data resampled generated internal nodes quadtree resulting commonly referred pyramid structure 
pre processing data done entirely geodetic coordinates assuming pre determined geodetic datum 
ensures registration different source datasets avoids discontinuity problems associated flat projected data 
height field imagery represented regular grids 
require additional compute time triangulate height field different discrete levels detail geometry represented pyramidal regular grid structure refinement employed fly run time system 
see detailed discussion height field level detail algorithm 
improve dataset registration alpha chan elevation height field nodes raster dimensions boundary rows columns overlap 
current implementation datum 
nels added source data imagery elevation allow blending smoothing dataset boundaries masking data irregularly non rectangular shaped datasets regions data missing 
dataset builder designed flexible extensible terms incorporating different data types structured modularized manner allow fine grained parallel execution 
different data types declared user class hierarchy language 
class number methods modules defined reading writing processing data bindings implementations methods 
class inheritance exploited avoid redundant methods class members 
modules connected data flow network similar structure provided visualization systems avs data explorer output module piped input set modules 
set operators provided expressing modules allowed run parallel parts execute series 
output data classified number meta types geometry imagery run time system understands manage display 
repository generic specialized modules maintained supplemented handle near arbitrary data types pre processor run time system 
dataset building process entirely automated making easy insert remove data 
important facilitating realtime acquisition integration data date satellite imagery 
run time system run time part vgis designed support highly interactive frame rates 
relies heavily multithreaded fine grained task distribution 
display update rate higher importance scene update rate including level detail selection animation resources allocated satisfying minimum frame rate 
propose terrain geometry level detail algorithm generates continuous levels detail fly 
highly efficient selecting vertices triangles terrain surface view recursive traversal terrain data structures triangle stripping bottleneck limits rendering rate approximately frames second pixel accurate full screen views 
lot frame frame coherence evident resulting triangle strips satisfactory perform lod management frequently say times second trade scene update rate higher display rates 
accomplish decoupling tasks separate different asynchronous threads 
scheme allows scene potential changes view frames new parts scene generated submitted scene manager 
addition segregate different data types recognizing different data products may require different display update rates 
example animated vehicles may updated higher rate terrain geometry 
large approach identify major bottlenecks blocking system calls isolate time critical components 
means offloading intensive high latency data paging scene managers feeding render thread ready render display lists 
resulting architecture forms hierarchy successively lower priority tasks 
tasks discussed sections 
paging intermediate processing server layer vgis provides interface accessing external data transforming internal data structures em display subsystem 
latencies involved disk transfers inter thread communication significant compared display update times servers decoupled run asynchronously time critical pieces vgis 
requirements bandwidth servers clients quite high chose integrate servers back vgis communicate clients shared memory 
fact servers direct access internal caches vgis limiting communication small request messages see 
time critical services gis queries external layer servers built top vgis 
example external server modsaf battlefield simulator sends dis packets unix socket possibly machine internal object server turn interprets packets internal storage 
vgis servers tasks data paging intermediate processing preparation initialization paged data 
section focus bandwidth consuming service terrain paging 
servers operate similar manner different conditions typically limited bandwidth 
view terrain manager thread part client module 
client module responsible making data requests terrain server data type resolution needed particular area appropriate actions notification terrain server request serviced 
data needed node quadtree client allocates space data shared cache sends message shared memory priority queue server 
message priorities queue changed dynamically importance associated request determined level detail manager 
requests gradually important obsolete sift queue get serviced higher priority requests remain queue 
important paging rate short bursts requests typically lower request rate 
server dequeues highest priority request reads data disk exists synthesizes data sources possibly combination 
transferring data disk server may additional processing 
case elevation data server reads height field raster disk proceeds transform height field lat lon height coordinates array cartesian vertices 
lod state parameters generated initialized request completed terrain client making request notified returning message 
modules attached servers handle paging arbitrary data types 
read module data subtype registered corresponding server core server merely dispatcher jobs executed modules 
independent modules run parallel increase throughput 
fashion number data types synthesized existing data easily integrated vgis having restructure server 
example module added synthesizes contour map images fly existing elevation data 
particular case elevation data may read resides memory servers access shared memory cache 
internal representation caching previous sections briefly mentioned quadtree shared cache data structures 
structures constitute basic components internal terrain representation 
having single quadtree represent globe chose subdivide globe small number quadrants 
quadrant subdivided organized hierarchical quadtree structure 
node quadtree corresponds raster tile fixed dimensions lat lon resolution level appears quadtree 
identified constructed manner similar indices array representations binary trees children node identified 
addition contains quadtree identifier allows uniquely identify area globe 
order conserve memory static view independent data associated node stored shared cache 
allows multiple terrain managers access data having replicate 
shared cache implemented set hash tables data type elevation slots hold exist dataset 
slots initially empty filled terrain data request processed terrain server 
node longer needed terrain managers space deallocated 
hash keys accessing nodes hash table 
hash table slots initialized startup terrain managers know nodes exist externally invalid data requests server 
avoid race conditions hash tables table supplemented lock semaphore 
note hash tables need locked transitions space node needs allocated freed ensuring multiple terrain managers allocate free node data simultaneously manager begins ceases node 
counts maintained managers know allocate free nodes 
actual quadtree structure view dependent parameters vertex lod state information stored view private cache 
quadtree data structure skeleton indicates presence nodes shared cache holds actual terrain data 
scheme extended data terrain moving vehicles stationary objects pointers appropriate level detail model shared cache 
addition spatially organizing data quadtrees define boundaries aforementioned local coordinate systems 
single geocentric coordinate system assuming bit single precision floating point describe geometrical objects highest attainable accuracy surface earth half meter 
clearly sufficient distinguish features details small centimeters tank 
matter fact terrain datasets vgis centimeter resolution 
lack precision results vertices geometry discrete positions 
overcome problem define number local coordinate systems globe origins displaced surface defines earth sea level 
origins top level coordinate systems placed geographic centers mean boundary latitudes quadtree roots 
centroid terrain surface quadrant result better choice origin terms average precision decided simplicity opt geographic center noting close cases 
axis coordinate system defined outward normal surface origin axis parallel intersection tangent plane origin plane described north south poles origin axis orthogonal axis points due current implementation quadrants 
typically highest precision available current graphics hardware 
north 
axis simply cross product axes axes form orthonormal basis 
choice orientation natural allows approximate vector local axis lets treat height field flat projected surface little error 
height field lod algorithm vertical error triangulation modified significantly take curvature earth account 
delta values see computed cartesian geodetic coordinates avoid simplification flat areas oceans 
illustrates local coordinate systems quadrants 
local coordinate systems quadtree roots 
labeled axes correspond conventional earth centered earth fixed cartesian xyz global coordinate system 
scheme resulting worst case precision quadrant cm significantly better geocentric case 
optionally finer subdivision larger number quadrants obtain required precision 
result larger number quadtrees undesirable lowest resolution data displayed defined areal extent quadtree roots 
data needed display lowest resolution version globe 
define additional coordinate systems quadtree 
current implementation added coordinate systems quadtree resulting mm worst case precision 
terrain level detail vgis applies level detail techniques simplify geometry texture detail 
necessary maintain interactive frame rates global views typically contain millions billions surface polygons gigabytes worth imagery 
techniques guarantee meet upper bound screen space simplification error error bounds manipulated interactively user sufficiently high frame rates obtained 
terrain geometry lod algorithm give brief overview 
algorithm proceeds stages coarse grained simplification selected appropriate resolution followed fine grained simplification individual vertices node decimated 
decision vertex removed screen space distance vertex travels original position resulting surface removed 
corresponding world space distance referred vertex delta value 
distance smaller screen space threshold vertex decimated simplification nearby vertices considered recursively 
stage coarse grained simplification entails traversing quadtrees evaluating resolution required area making requests height field data necessary 
delta values computed terrain server fly example intermediate processing task see section 
final set vertices selected lod manager produces single triangle strip simply list alternating vertices texture coordinates enclosed triangle strip commands 
display lists emulate opengl counterpart 
scene managers utilize opengl display lists directly thread time allowed issue graphics commands opengl context 
synchronization required potentially forcing threads ready render stall 
color plate shows terrain surface tessellation resulting application continuous level detail algorithm 
pixel threshold view pixel 
note shading applied geometry simplification 
see section discussion rendering 
texture level detail management bears similarities coarse grained geometry simplification 
projecting largest delta value screen largest screen space texel projected compared threshold 
largest texel way similar determination largest delta value projection involves minimizing viewpoint texel distance simultaneously minimizing angle texel normal viewpoint texel vector 
assume texels lie horizontal plane may distributed elevation bounding box node 
result low detail surface viewed side relatively higher detail required top views terrain 
object management object manager handles display static moving objects 
handles animation 
hundreds thousands objects may appear certain scenarios object manager accept handle multiple levels detail 
individual objects levels detail grouping strategies 
reported previously hierarchical grouping sets moving units 
general moving static objects managed differently different grouping strategies different ways handle object detail building textures 
eventual goal object manager 
rest section discuss handle moving objects 
moving units simulated modsaf transmitted vgis dis protocol 
handled thread keeps events generated modsaf performs dead reckoning intermediate states need interpolated 
vgis accepted real time position information vehicles dis interface 
color plate illustrates number tanks instantiated vgis result dis packets received modsaf 
modsaf provide hierarchical information unavailable situations battlefield scenario involving enemy units 
situations developed dynamic clustering methods 
clustering analysis handled asynchronously render thread vgis framework fast 
achieve algorithm clusters units located threshold distance existing cluster 
units satisfy criterion added cluster 
ones meet requirement generate new clusters 
clusters close combined 
cases analysis completed interactive rates 
cluster information extract hierarchical information moving units treating resulting clusters ties clustering higher level 
information lod manager replace groups units corresponding symbols viewing distance total number moving objects 
usually semantic information object type behavior associated clustered objects clusters evaluated importance 
shown possible fuzzy logic methods 
applying extending methods dynamic clusters vgis 
approach sets static watch areas evaluates units enter areas approach handles dynamic clusters occur 
fuzzy logic techniques handle large amounts semantic information transform relative importance weightings 
weightings situation awareness highlighting clusters especially important detail management important groupings show finer detail 
rendering stereo rendering vgis handled single thread renders windows 
scene managers communicate render thread buffering graphics commands encapsulated display lists 
connection render thread buffer dynamically growing shrinking display lists called triple buffer 
display lists corresponds renderer currently drawing second display list scene manager buffer graphics commands third display list contains data ready displayed 
scheme allows renderer scene managers run simultaneously having synchronized 
consider example display lists connection 
case scene manager submitting display list wait renderer finish rendering frame lists swapped 
triple buffers scene managers stall produce scenes faster renderer process 
frame renderer fetches current view parameters user interface thread 
typically ui thread runs fast renderer 
window renderer fetches updated associated display list begins parsing 
stereo views display list twice different view parameters eye 
nearly commands parameters display list map directly opengl function calls 
commands special meanings described 
scene managers renderer asynchronously single consistent set view parameters 
fetch current parameters ui thread frame pass 
view culling performed scene managers field view may change scene submitted point parts scene may absent 
view culling drastically improve rendering rates vgis assigns task renderer 
scene managers commands accompanied bounding boxes completely enclose object question 
renderer encounters bounding box tests box intersection copy view volume skips commands till command intersect 
cull commands nested quickly eliminate large parts scene 
terrain surface represented number possibly different coordinate systems see section 
transition coordinate system occurs view parameters threads exhibit lot coherence updated nearly rate 
scene manager instruct renderer switch new coordinate system 
implies changing current matrix product local global coordinate transformation world eye coordinate transformation 
command loading current matrix regular opengl matrix multiply command 
matrix transformations done double precision reduce roundoff errors 
implementations opengl perform matrix multiplications double precision carried manually result loaded opengl matrix stack 
texture data passed renderer explicitly referenced pointer shared memory structure 
texture command encountered renderer determines texture defined 
texture identifier allocated texture defined 
texture longer needed scene manager sends texture command allows renderer deallocate texture id reuse 
number policies enforced texture allocation deallocation synchronized threads ensuring thread deallocating image data remaining thread texture 
terrain rendering systems approach problem rendering non features roads rivers constraining surface triangulation follow terrain features 
viable alternative vgis surface triangulation regular 
exploit automatic texture coordinate generation clipping facilities supported opengl 
pre processing step vector data describes features converted set adjoining quadrilaterals assuming feature width 
features texturing adjacent edges quadrilateral conjunction vertical define planes texture coordinates determined function 
single high resolution image road texture repeated quadrilateral boundary defined opengl feature 
quadrilateral terrain surface triangles intersect dimensions identified simple line intersection tests plane 
culling task aided hierarchical structures associated quadtree recursively defined triangle mesh 
resulting triangles rendered top drawn terrain surface 
user interface navigation user interface thread handles input events steering devices interface widgets menus sliders performs navigation acts manager run time system 
decoupling user interface threads ensures high responsiveness user input letting time critical threads bypass expensive systems calls device polling 
user interface callback driven motif mechanisms event handling unix version 
menus sliders forms provided user interacting navigating environment real time responses user input 
input devices mouse position orientation tracking supported 
modes navigation currently orbital mode user manipulates globe rotations zooming free flight mode provides degree freedom navigation interface 
view ui thread maintains master copy view parameters fetched frequently renderer scene managers 
ui thread additionally system wide tasks system initialization resource allocation texture memory polygon budgets thread message queue creation cpu time coordinates internal threads external connections 
due large range geographic scale vgis operates navigation view parameters set scale environment visualized 
example flight speed relatively large entire globe visible user reduced user approaches surface 
similarly angular velocity orbital viewing mode preferably mapped arc length rotation screen space proportional mouse cursor movement screen angular velocity increase altitude providing user sense grabbing panning terrain 
stereo views parameters focal length eye eye distance adjusted appropriately enhance stereo effect perceived user 
rendering standpoint important view dependent parameters placements near far clipping planes 
order maximize buffer resolution far plane distance small possible clipping away visible parts terrain 
curvature earth upper bound elevation appropriate far plane distance recomputed user moves 
near plane distance expressed fixed fraction far plane distance view dependent parameters similarly kept proportional 
results vgis extensively central battlefield planning visualization system produced army organization 
fielded military exercises ft ft hood national training center ft irwin places 
force army experiment ntc biggest experiment kind years 
cases vgis operated non expert military personnel usually participants exercises 
generated wealth feedback navigation interface tools provided quality visualizations rendering speed ability add new data database 
evaluations improve vgis design capabilities 
vgis strategic tactical planning military hotspots potential hotspots 
large amounts new terrain data quickly prepared inserted activities 
data classified done direct indirect help vgis team 
evaluate performance vgis built dataset consisting elevation imagery data multiple resolutions 
color plates illustrate views continuous flight path outer space downtown atlanta 
approximately km resolution global dataset constitutes base layer additional higher resolution data inset select areas km resolution dataset north america meter resolution dataset state georgia metropolitan atlanta area meter resolution higher resolution hotspots downtown area georgia tech campus 
elevation image data exist areas imagery obtained 
addition textured building models inserted geographically correct locations downtown area 
total size dataset exceeds mb 
despite provided number different sources observed exceptionally registration datasets elevation imagery data requiring manual labor rectify correlate data 
timings performance evaluation obtained sgi onyx workstation single mhz processor mb texture memory 
pre processing stage took approximately minutes start finish required user interaction initial specification datasets include 
run time performance measured terms rendered frames second ranged pixel window geometric image accuracies pixels 
scene update rates level detail evaluations terrain varied hz 
designed implemented real time visualization system vgis integrates visual simulation techniques interactive rendering management huge graphical databases query manipulation capabilities spatial geographic data 
system allows visualization terrain data types entire surface earth manages high resolution datasets real time rates advantage hierarchical multiresolution spatial data structures asynchronous multithreading 
system met original requirements high interactivity ability handle huge databases proved useful military planning visualization tasks army exercises 
vgis continues improved extended meet new application demands 
issue plan address acquisition integration terrain data fly modifying current terrain data pre processing stage allow fast changes underlying terrain gis source data 
allow dynamic deformations terrain surface dramatic decreases time required visualize newly obtained terrain data 
areas current include development level detail framework integrating large variety data types improving user interface functionality system support users making sense huge amounts information vgis capable displaying 
performed part contract army research laboratory 
larry team army research laboratory help developing specifications vgis supplying high resolution terrain data 
bryson time management simultaneity time critical computation interactive unsteady visualization environments 
proceedings visualization october pp 

cohen rich lerner areal time photo realistic visual 
ieee transactions visualization computer graphics september pp 

mathisen system support advanced requirements 
proceedings image conference june pp 

de berg levels detail terrains 
th acm symposium june 
de hierarchical triangulation multiresolution surface description 
acm transactions graphics october pp 

douglas experiments locate ridges channels create new type digital elevation model 
pp 

landscape visualization 
ieee computer graphics applications pp 

fekete rendering managing spherical data sphere quadtrees 
proceedings visualization 
ferguson economy kelly continuous terrain level detail visual simulation 
proceedings image conference june pp 

fowler automatic extraction irregular network digital terrain models 
proceedings siggraph 
computer graphics august pp 

garland heckbert fast polygonal approximation terrains height fields 
technical report cmu cs cs dept carnegie mellon 
visualization gis analysis users needs review techniques 
proceedings eurographics pp 

goodchild hierarchical spatial data structure global geographic information systems 
cvgip graphical models image processing pp 

gross fast multiresolution surface meshing 
proceedings visualization october pp 

mayer sauter vision 
visual proceedings siggraph august 
virtual planetary exploration large virtual environment 
acm siggraph tutorial implementing immersive virtual environments 
koller lindstrom ribarsky hodges faust turner virtual gis real time geographic information system 
proceedings visualization october pp 

leclerc terrain visualization system 
sri international technical note april 
li riva versatile parallel rendering system interactive scientific visualization 
ieee transactions visualization computer graphics september pp 

lindstrom koller ribarsky hodges faust turner real time continuous level detail rendering height fields 
proceedingsof siggraph 
computer graphics proceedings annual conference series acm siggraph pp 

display earth account atmospheric scattering 
proceedings sig graph 
computer graphics proceedings annual conference series acm siggraph pp 

knapp visualization integration needs requirements 
proceedings visualization pp 

iris performer high performance multiprocessing toolkit real time graphics 
proceedings siggraph 
computer graphics proceedings annual conference series acm sig graph pp 

rost hibbard von acm siggraph course notes visualizing planet earth 
samet quadtree related hierarchical data structures 
acm computing surveys june pp 

refined triangulation hierarchy multiple levels terrain detail 
proceedings image conference june pp 

schroder managing complexity digital terrain models 
computers graphics pp 

piecewise planar surface models sampled data 
scientific visualization physical phenomena june pp 

block providing situation awareness assistance users large scale dynamic complex virtual environments 
presence 
vol 
fall pp 

turner newton ribarsky faust hodges symbology sensing simulation 
proceedings spie international society optical engineering april pp 

willis jones method continuous adaptive terrain 
proceedings image conference june 
xia dynamic view dependent simplification polygonal models 
proceedings visualization pp 

yan advances computer generated imagery flight simulation 
ieee computer graphics applications pp 


visualization global dataset km resolution altitude km 

data varying resolutions 

dis simulation tanks engaged battle ft irwin ca 

view approaching state georgia inset data resolution 

view downtown atlanta data building models 

continuous level detail terrain surface tessellation 
