technical report tr march dual algorithms shortest path tree problem pallottino stefano dipartimento di informatica universit di pisa corso italia pisa italy consider dual approaches shortest path tree problem 
brief problem review important dual algorithms described literature solution propose new family dual ascent algorithms 
algorithms local global dual updating operations performed nodes order enlarge partial shortest path tree contains root node shortest path tree 
kinds dual updating operations proposed allow derive different dual algorithms general schema 
particular global operations viewed dual interpretation dijkstra classical algorithm 
due structure proposed approaches suitable parallel implementations 
suitable reoptimization approaches computation shortest paths different root nodes required 
acm cr subject classification network problems analysis algorithms problem complexity keyword phrases shortest paths dual algorithms shortest path tree problem spt easiest studied network flow problems enormous number algorithms proposed important computational time complexity practical efficiency 
algorithms seen particular instantiation unique general algorithmic schema adaptation primal network simplex approach gallo pallottino 
hand little effort dedicated study dual algorithms spt 
instance known dijkstra algorithm general primal algorithm interpreted dual primal dual approach papadimitriou steiglitz 
pioneering langley limited number dual algorithms proposed 
particular dual simplex algorithm solve sequence spt problems differing root node florian nguyen pallottino 
bertsekas specialised auction algorithm really dual ascent solve spt bertsekas 
pallottino scutell bertsekas pallottino scutell proved auction algorithms implemented strongly polynomial 
propose new family dual algorithms spt 
dual feasible solution partial shortest path tree coincides root node algorithms augment step step looking arcs going nodes satisfy complementarity slackness conditions respect tail belongs node entering arc satisfies properties added discovered arc dual updating operations proposed allow connect new node algorithms family run mn time 
outgoing arcs node properly pre sorted algorithm running time derived 
proposed algorithms suitable parallel implementations 
suitable problem shortest path tree reoptimization computation shortest paths different root nodes required 
presenting algorithm family point essentially methodological 
particular computational investigation proposed algorithms subject dual ascent algorithms shortest path tree reoptimization framework 
organised follows 
section classical dual algorithms reviewed main properties analysed 
section new family dual algorithms correctness proofs relationship algorithms described section 
implementation issues time complexity analysis reported section 
classical dual algorithms spt simple directed graph set nodes cardinality set arcs cardinality function assigns length root shortest path tree problem consists finding directed tree path shortest paths connected directed path exists 
simplify presentation shall assume connected spans known literature wide ranging surveys subject lawler gallo pallottino ahuja magnanti orlin finite solution exists spt directed cycle negative length shall assume property satisfied 
linear programming notation problem dual formulated follows 
fs bs denote forward star backward star respectively 
spt min bs fs max price potential dual variable associated order solve spt algorithms proposed literature follow primal approach 
fact step maintain spanning arborescence root check vector represents distances nodes tree upper bound distances dual feasible solution algorithms interpreted procedures solving non linear bellman equation system min bs dual feasibility generally holds termination minoux 
hand algorithms appeared far maintain dual feasibility step 
ancestor algorithm family classical dual simplex algorithm works dual feasible basic solutions 
efficient adaptations algorithm proposed compute shortest paths different root nodes 
dual simplex method fact adapted reoptimization shortest path tree follows 
optimum tree rooted node change root different node maintains dual feasible renders primal unfeasible new problem 
exploiting dual feasibility dual simplex method easily efficiently tailored solve new problem starting florian nguyen pallottino 
pioneering field dual algorithms spt langley looks dual feasible solution case negative arc lengths dual feasible solution 
starting price vector langley procedure updates iterative way node node follows min bs step repeated times dual feasibility satisfied negative cycle discovered 
dual ascent algorithm described adaptation bertsekas relaxation method bertsekas tsitsiklis spt 
algorithm considers dual lagrangean problem tries maximise dual objective function updating price vector way maintain complementarity slackness conditions 
precisely price changed time follows min bs 
initial price vector dual feasible linear dual problem satisfies proved algorithm converges optimal price vector provided directed cycles positive length algorithm may return wrong solution 
case method interpreted technique applied solve non linear bellman equation system 
dual ascent algorithm introduced bertsekas specialising shortest path problem auction approach assignment problem bertsekas 
destination node shortest path looked assumptions directed cycle positive length forward star node apart empty 
shortest path searched primal dual approach step candidate path outgoing feasible dual vector maintained satisfy complementarity slackness conditions dual feasibility conditions 
reaches destination primal feasible solution shortest paths step updated means extension contraction operations node say node edge extended inserting decreased value max fs contracted removing edge 
proved bertsekas auction algorithm terminates runs pseudopolynomial time case integer arc lengths 
mild conditions weak polynomial version obtained length scaling 
algorithm immediately extended solve spt 
fact case bertsekas suggests continuing iterations algorithm node node 
pallottino scutell bertsekas pallottino scutell strongly polynomial versions auction algorithm proposed return shortest path tree requirement cycle lengths positive assumptions topology graph generalising auction method shortest paths 
algorithms prune graph means reduction blocking operations collapses shortest path tree 
reduction operation removes arcs graph obtaining partial graph shortest path tree shortest path tree 
blocking operation prevents node node candidate path new nodes added shortest path tree path containing resulting algorithms run mn nmin nlogn time depending implementation extension contraction reduction blocking operations 
backward versions auction algorithm proposed bertsekas 
considering single destination problem candidate path maintained gradually extended backwards 
origin node shortest path 
combined forward backward algorithms proposed maintain candidate path outgoing candidate path entering paths meet node origin node shortest path 

new family dual ascent algorithms new family dual ascent algorithms proposed strictly related adaptation relaxation method proposed bertsekas 
idea maintain partial shortest path tree rooted node feasible dual vector satisfy complementarity slackness conditions related spt dual sake presentation rewritten dual feasibility ii conditions 
contains root vector satisfying condition 
order try augment node called tree node looks entering arc firstly assume arc type inserted 
formally link operation performed link 
case property holds true property connected partial shortest path tree shortest path 
proof arc entering satisfies consider path connects path links insertion condition ii maintained dual feasibility maintained shortest consider case arc jn verifies 
case local dual updating operation cut performed node order try link min bs 
property local dual updating operation node maintains dual feasible arc entering satisfies 
proof updated dual variable satisfies bs fs 
remains feasible 
argmin bs holds arc local dual updating 
formally operations performed tree node order try link findmin min bs local reprice link operation connecting performed 
local phase tree node shall denote sequence findmin local reprice possible link operations clearly property holds property price vector computed local phase feasible prices increase 
dual ascent algorithm suggested local phases performed tree node 
algorithm suited parallel implementations local phase performed parallel node tree 
algorithm called local dual performs typical iteration typical iteration local dual findmin local reprice link 
local dual essentially implementation relaxation method shortest path problem bertsekas tsitsiklis section 
particular local dual starts dual feasible solution returns optimal solution assumption cycles positive length general method 
cost iteration fact worst case backward star node scanned perform findmin 
algorithm find optimal solution pseudopolynomial time case integer arc lengths shown fig 

start zero price vector local phase increases price iterations price reaches value enters denotes large positive number 
fig 
order compute shortest path tree assumption cycle length able derive strongly polynomial algorithms partition set arcs coming set arcs outgoing tree nodes called border arcs ones called external arcs denote sets bs bs respectively bs bs bs bs bs 
findmin operation rewritten equivalent form min bs min bs findmin min 
operations assumed case empty sets 
assume property lower bound upper bound shortest distance respectively 
proof feasibility price vector implies exceed length path connecting consequence lower bound shortest distance denotes length path precisely denotes shortest distance paths consisting tree arcs 
consequently upper bound shortest distance property link performed local reprice 
hand link operation performed local dual 
avoid guarantee link operation possible global dual updating operations introduced 
mind consider operation min 
argmin 
note tree node closest root kind threshold gap prices tree nodes fact node linked hierarchy global dual updating operations defined algorithm family local reprice 
straightforward kind global updating named classic reprice increases price tree nodes classic reprice updating operation corresponds classical global dual updating operation cut threshold gap dual gap corresponding cutset 
fact algorithm classic reprice just dual interpretation known dijkstra algorithm case non negative arc lengths 
second dual updating operation named global reprice defined follows global reprice 
starting feasible price vector tree rooted condition ii holds true perform global reprice operations local reprice ones maintaining feasibility price vector ensuring entry new node stated lemma lemma global reprice maintains conditions ii node linked proof denote updated price node construction condition satisfied 
consider fact node node shown property bs 
property holds case bs relationship holds bs increase value consider condition ii 
valid arc belonging change performed global reprice tree 
dual updating operation exists entering arc consequence node linked tree link operation 
anyway closest node linked price updating holds 
consider dual updating operation called selected reprice selected reprice bw 
updating tree node interpreted particular local reprice operation obvious hand far node concerned setting viewed local reprice operation reduced graph obtained removing external arcs entering bs 
observation clearer 
consider price vector obtained applying selected reprice operations local reprice ones 
case node linked updating 
dual feasibility may lost 
fact updated considering border arcs going condition may violated entering external arcs 
order guarantee dual feasibility arc bs removed reduction operation performed 
shown reduction guarantees shortest path tree shortest path tree reduced graph shortest path trees original graph 
lemma selected reprice maintains conditions ii reduced graph shortest path tree shortest original graph linked proof recall argmin exists border arc bw 
bw hw bw selected reprice equivalent local reprice operation path connecting shortest 
consequence conditions ii hold linked removal external arcs entering transforms problem equivalent 
case hw different 
case conditions ii valid reduced graph linked path say pw union path arc shortest path 
show pw shortest paths original graph 
suppose exists path length strictly length pw bw unique border arc vw denote subpaths respectively 
apply condition arcs belonging subpath vw get vw 
consequence obtain 
definition 
definition bw bw contradicts assumption strictly shorter pw pw shortest path original graph 
sharper dual updating operations introduced 
named extended reprice merges global reprice selected reprice follows extended reprice max 
note extended reprice modifies price exactly performed global reprice tree nodes maximum price assigned global reprice assigned selected reprice 
lemma extended reprice maintains conditions ii linked proof maintenance conditions ii follows immediately lemmas 
far link new node concerned node exists linked tree 
case node bw linked extended reprice 
consider dual updating operation referred double reprice double reprice 
lemma double reprice maintains conditions ii linked proof updated price firstly prove condition satisfied case 
bs 
consider arc bs 

cases condition true 
consider nodes case 
condition clearly holds bs bs 
statement follows corresponding proof case far condition ii concerned observed dual updating operations valid arc belonging change tree 
node type exists entering arc consequence linked tree 
case node linked fact hw hw link operation performed section relationships proposed dual updating operations better investigated 
strongly polynomial dual ascent algorithms described time complexity analysed 

dominance relationship dual updating operations dual updating operations say dual vector dual solutions computed respectively applied say dominates 
dominance relationship significant theoretical point view 
aim dual ascent algorithms fact increase dual variables optimum value guarantees greater possibly lower number dual updating operations 
note relationship transitive 
considering dual updating operations introduced section dominance relationships hold true arrow going node associated operation node corresponding means dominates local reprice classic reprice global reprice selected reprice extended reprice double reprice fig 
dual operation global reprice clearly dominates classic reprice 
similarly selected reprice dominates local reprice 
fact selected reprice updates prices tree nodes performed local reprice exception node potential set global reprice extended reprice sets prices nodes satisfying hand price tree node set max 
max value assigned global reprice 
extended reprice dominates global reprice 
consider selected reprice sets bw considering extended reprice bw bw max case max bw bw 
consider case selected reprice sets extended reprice sets max extended reprice dominates selected reprice 
consider dominance relationship 
node case double reprice clearly greater equal value assigned extended reprice shortest distance relative node hand case double reprice sets extended reprice gives max due fact max follows double reprice dominates extended reprice 

new strongly polynomial dual ascent algorithms show implement previously defined operations analyse consequent running times 
implemented follows value associated tree node certain stage algorithm initially 
time new node enters forward star scanned arc fs updated follows min 
cost operations arc contribute operations 
order implement scan backward star tree node construct set bs removing border arcs compute way min bs 
follows runs costs iteration 
clearly arcs minimum obtained suitably stored 
consider 
value computed considering cutset separating current tree nodes nodes min 
tree node value obtained suitably stored 
clearly costs iteration 
new family dual ascent algorithms described algorithm differs dual updating operation 
general algorithmic paradigm called global dual typical iteration global update denotes global dual updating operations described section typical iteration global dual min argmin global update link fs min 
global dual returns optimum solution case zero length cycles follows lemmas runs mn time 
fact iterations performed iteration costs follows time complexity analysis operations 
particular classic reprice global dual operations longer necessary resulting algorithm dijkstra runs time 
particular situation arises global reprice algorithmic framework 
case iteration price tree node increases value backward stars nodes pre sorted non decreasing order respect initial reduced costs external arcs entering tree nodes remain ordered algorithm iterations 
consequence output applied node corresponds external arc ordered backward star implemented scanning backward star external arc implementation cost operations theorem global dual runs time global reprice backward stars nodes pre sorted non decreasing way respect initial reduced costs 
observe global dual implemented parallel way implementations may require interruption parallelism computation threshold gap note dual approach proposed suitable reoptimization shortest path tree computation shortest paths different root nodes required 
fact consider shortest path tree rooted node returned proposed approach assume root changed different node say consider subtree rooted optimal price vector 
complementarity slackness conditions hold arc efficiently apply dual ascent algorithms starting starting scratch 
algorithm iterations involve nodes belong exploit previously computed information tree dual vector potential saving computing time 
ahuja magnanti orlin network flows theory algorithms applications prentice hall englewood cliffs nj 
langley dual shortest path algorithm siam journal applied mathematics 
bertsekas 
distributed algorithm assignment problem lab 
information decision systems working 
bertsekas 
auction algorithm shortest paths siam journal optimization 
bertsekas 
linear network optimization algorithms codes press cambridge ma 
bertsekas pallottino scutell polynomial auction algorithms shortest paths computational optimization applications 
bertsekas tsitsiklis parallel distributed computation numerical methods prentice hall englewood cliffs nj 
dijkstra 
note problems connexion graphs numerische mathematik 
florian nguyen pallottino dual simplex algorithm finding shortest paths networks 
gallo pallottino shortest path methods unifying approach mathematical programming study 
gallo pallottino shortest path algorithms annals operations research 
minoux graphs algorithms wiley interscience new york ny 
lawler 
combinatorial optimization networks matroids holt rinehart winston new york ny 
pallottino scutell strongly polynomial algorithms shortest paths ricerca 
papadimitriou steiglitz combinatorial optimization algorithms complexity prentice hall englewood cliffs nj 
