structural induction coinduction setting august 
claudio hermida bart jacobs dep 
math 
stat mcgill univ dep 
comp 
sci univ nijmegen st box gl nijmegen montreal qc canada 
netherlands 
hermida triples math mcgill ca bart cs kun nl 
categorical logic formulation induction coinduction principles reasoning inductively coinductively defined types 
main results provide sufficient criteria validity principles presence comprehension induction principle initial algebras admissible dually presence quotient types coinduction principle terminal coalgebras admissible 
giving alternative formulation induction terms binary relations combine principles obtain mixed induction coinduction principle allows reason minimal solutions oe may occur positively negatively type constructor oe 
strengthen logical principles deal contexts prove strengthening valid logic consider contextually functionally complete 
main results follow basic result adjunctions categories algebras 
approach semantics data types regard lambek algebras endofunctors category suitable structure 
inductive data types correspond initial algebras td case specifies signature constructors type gives interpretation constructors dually coinductive data types correspond terminal coalgebras tc specifies signature destructors data type maps element type components 
course mathematical structures understood initial algebras terminal coalgebras extensive relevant bibliography see 
see programming language charity essentially contains algebras coalgebras iterated combinations consider detail see comments xx 
object study singled universal property initiality algebras coalgebras property main tool infer properties object 
fact main point formulate canonical fashion induction principle initial algebras coinduction principle terminal coalgebras considering polynomial functors built universal structure category specifically concentrate bicartesian closed categories associated class endofunctors determined structure 
wish consider logical propositions algebras 
propositions formulas predicate logic possibly containing free variables ranging types categorically capture logic fibration suitable structure category think objects total category pas formulas propositions context base category types 
functor sends proposition underlying context containing types free variables 
typical case internal logic fibration sub sub category subobjects objects subobjects ae morphisms ae 
ae maps underlying objects commute subobjects 
analysis show logical principles induction arise relationship universally determined structure total category pand structure base category logical interpretation relationship hinges fact structure inferred suitable structure fibration structure interests corresponds interpretation connectives quantifiers logical operations predicate logic represents 
setting fundamental conceptual identification inductive predicate pd total category algebra td base category amounts algebra pred total category algebra 
functor pred 
defined polynomial structure pred built type constructors products coproducts exponentials category dual observation applies coinductive relations called strong bisimulations coalgebras 
analysis carried position give sufficient criteria validity induction coinduction principles constitute main results 
nature conditions impose results theorem admissibility properties constructive predicate logic proofs account ffl logic admits comprehension satisfies induction principle initial algebras polynomial endofunctors ffl logic admits quotients relations satisfies coinduction principle terminal coalgebras polynomial endofunctors 
second result essentially dual 
duality explicit give reformulation induction originally stated predicates terms binary relations 
prove formulations induction equivalent mild exactness conditions theorem 
able combine induction coinduction give reasoning principle recursive data types involving mixed variance functors typically exponential functor op theta freyd analysis recursive types terms initial terminal algebras self dual categories cf 

validity principle presence comprehension quotients major novelty point view constructive logic see theorem 
analyse intrinsic property order predicate logic respect induction coinduction stability principles addition indeterminates 
stability property necessary wish principles arbitrary contexts data propositions 
case define functions arguments induction addition natural numbers remaining arguments considered fixed arbitrary constants play role context 
logical level may assumptions arguments form propositional context 
presence data propositional hypotheses context wish apply induction coinduction principles 
logical properties involved guarantee stability contextual functional completeness formulated 
amount representability conditions respect addition indeterminates 
functional completeness guarantees stability initial algebras associated induction principle contextual completeness respect terminal coalgebras coinduction see theorem 
applications coinduction principles occur prominently internal full abstraction lazy lambda calculus adequacy strong extensionality operational semantics 
primarily concerned domain theory 
give analysis induction coinduction principles spirit categorical logic achieves right level abstraction required combine salient features approaches notion predicate relation embodied notion fibration similar polynomial structure functor define relational lifting logical predicates 
functor defining data type canonically determines lifting desideratum approach 
worthy emphasise conceptual simplicity technical economy admissibility stability results immediate consequences basic result adjunctions categories algebras theorem 
result proved direct calculation ordinary categories categorical version equally simple prove universality result applicable stability induction coinduction principles xx category cat purely categorical excursion functoriality may distracting main text relegate appendix 
organised follows section discuss concrete examples induction coinduction principles motivate subsequent formal treatment 
continue preliminary section containing background material 
xx start actual content formulation induction principle algebras exactness condition 
elaborated xx principle reformulated binary relations terms equality order exhibit patently duality induction coinduction coalgebras 
briefly touch relationship induction principles algebras different functors xx 
xx formulate coinduction principle coalgebras xx give sufficient criteria validity induction coinduction principles criteria consist effectively guaranteeing relevant exactness conditions existence adjoint functors 
xx combine previous formulations induction coinduction mixed principle suitable minimal invariants mixed variance polynomial functors op theta conclude xx formulations logical principles stable weakening context principles applied arbitrary contexts empty case considered point 
extend criteria validity incorporate stable version recourse contextual functional completeness 
examples induction coinduction section analyses examples induction coinduction providing motivation formal treatment xx xx 
consider definition reasoning induction 
example initial algebra lists fixed type constructors nil list empty list cons theta list list adding element list inductively define length map len list clauses len nil len cons len zero successor constructors natural numbers formally define len list unique algebra map initial algebra lists set natural numbers suitably equipped list algebra structure theta list len theta list nil cons theta len theta ffi oo definition induction 
reasoning induction involves predicates relations predicate list assuming nil cons hold list conclude list 
predicate initial algebra closed operations algebra set contain truth predicate shall say 
requirement closed operations algebra expressed abstractly condition carries algebra structure category predicates 
analysis validity induction principle follows comprehension algebra structure category predicates transferred algebra structure associated set fpg list category sets 
initiality list yields unique algebra map list 
follows holds list comprehension gammag right adjoint truth see definition 
alternatively may express induction terms binary relations list theta list relation lists satisfying nil nil cons cons reflexive 
induction principle relations says relations suitably closed operations congruences contain equality relation 
truth predicates equality relations play fundamental role formulation induction reasoning principle 
turn coinduction familiar notion 
coinduction associated terminal coalgebras induction initial algebras 
coalgebras tx functor may understood dynamical systems consisting state space transition map dynamics tx acting consider definition reasoning coinduction 
example consider deterministic partial automaton consisting state space attribute output map procedure pr theta sigma state symbol input alphabet sigma get result pr pr computation succesful yields new state case pr computation automaton halts 
automaton may identified coalgebra theta sigma behaviour automaton specific state tells observe externally considering possible output value resulting sequence inputs sigma sigma observations form set sigma hi oe sigma sigma oe delta oe set attribute procedure operations gamma 
theta sigma gamma 
gamma 
hi gamma 
ae hai oe delta oe 
forms state space automaton 
induced map theta sigma terminal coalgebra arbitrary automaton get unique mediating map situation hat pri fflffl fflffl theta sigma theta sigma theta sigma map sends state function sigma hi delta oe ae pr pr oe 
see similar examples automata coalgebras 
applicative bisimulation relation coalgebra automaton form hat pri theta sigma relation theta states satisfying sigma pr iff pr case pr pr 
call states bisimilar write applicative bisimulation theta 
equivalent saying bisimilarity union bisimulation relations 
coinduction principle says bisimilar elements behaviour abstractly says bisimulation contained kernel relation unique map terminal coalgebra 
task showing states behaviour reduced showing contained relation suitably closed coalgebra operations 
relation carries coalgebra structure category relations 
analysis coinduction principle holds presence quotients coalgebra structure category relations transferred coalgebra structure quotient set category sets 
get unique coalgebra map kc map relations eq quotients left adjoint equality 
elements related equal mapped preliminaries section explain relevant technical notions treatment induction coinduction xx onwards 
algebras coalgebras polynomial endofunctors bicartesian closed categories logic interpreted fibrations bicartesian categories including comprehension quotients lifting polynomial functors fibred categories transfer adjunctions categories algebras 
algebras coalgebras polynomial functors category endofunctor algebra algebra explicit object morphism tx object called carrier map structure 
example lists list type previous section algebras theta list list functor theta sets 
morphism algebras algebra map short tx ty morphism carriers commutes structures ffi ffi tf write alg category algebras functor initial algebras initial objects category alg play special role data type theory see 
standard result due lambek initial algebra tx isomorphism 
dually coalgebra morphism form tx object called carrier state space map called structure transition map dynamics coalgebra 
morphism coalgebras tx ty morphism ffi ffi write coalg category coalgebras 
note coalg alg op op op induced functor op op terminal coalgebras interest structure maps dynamics isomorphisms dualizing observation initial algebras 
categories algebras coalgebras characterised see appendix relevant technical details 
shall especially interested called polynomial functors built identity constants finite products coproducts 
formally call bicartesian category finite products theta coproducts 
require distributivity stage 
class polynomial functors inductively defined clauses 
identity functor polynomial object constant functor 
polynomial includes special cases 
ii polynomial functors product coproduct category cat endofunctors 
theta 
example functor 
theta lists previous section polynomial 
automaton functor 
theta sigma polynomial input alphabet sigma finite elements write functor 
theta theta delta delta delta theta times fibrations bicartesian categories previous subsection considered functor category think objects sets types regard signature type constructors 
order reason situation need logic consisting category pof predicates types 
formalised requiring functor 
fibration see exposition point view 
object write subcategory objects maps respectively get sent id category predicates fibration gives axiom choice morphism substitution functor fibration equivalent collection categories indexed objects base category substitution functors morphisms general substitution functors compose canonical isomorphisms special case compose equality fibration called split refer background information fibrations 
morphism fibration fibration consists pair functors base categories total categories commutes fibrations ffi ffi substitution hx canonically 
call fibred functor 
cell morphisms fibrations consists natural transformations ff fi ffp 
sets category fib fibrations 
just bicartesian categories consider fibrations bicartesian categories meaning bicartesian structure base category total category fibration way functor strictly preserves structure 
result shows global bicartesian structure obtained fibrewise local bicartesian structure 
formulations induced global products coproducts referred logical predicate formulas cf 


lemma 
consider fibration fibred cartesian structure cartesian structure fibre preserved substitution functors 
assume base category bicartesian structure fibres finite coproducts substitution functors left adjoints total category bicartesian structure strictly preserved functor 
ii additionally substitution functors preserve finite coproducts diagrams pullback squares fflffl fflffl coproducts satisfy beck chevalley condition respect pullback squares induced functor theta fibred functor bicartesian fibration bicartesian object category fibrations 
proof 
terminal object fibre terminal object similarly initial object initial product coproduct pof respectively theta thetab theta refer product coproduct fibre 
beck chevalley condition ii show coproduct functor fibred 
additional conditions second point lemma hold examples 
needed theory 

examples 
classical logic predicates sets captured fibration sub sets sets subobjects sets 
satisfies conditions easy coherence result assume structure preserved 
lemma bicartesian fibration 
instance product predicates predicate theta generally bicartesian regular category see associated subobject fibration sub fibration bicartesian categories total category sub category subobjects ae morphism ae 
ae sub morphism restricts 
furthermore finite coproducts disjoint universal topos fibration satisfies additional hypothesis lemma ii 
ii cpo 
category pointed cpos strict continuous functions 
objects posets bottom element upper bounds lub chains xn xn xn 
morphisms monotone functions preserve bottoms lubs chains 
call subset cpo 
admissible contains closed lubs chains 
cpo 
cpo 
fibration admissible subsets cpos 
fibration bicartesian categories lemma 
admissible coproducts composition beck chevalley holds 
category cpo 
finite products usual way 
cartesian closed monoidal closed 
relevant tensor omega smash product wedge product called pointed topological spaces elements form identified 
tensor classifies bi strict morphisms morphisms strict argument separately 
associated internal hom cpo strict continuous functions pointwise order 
iii consider metric spaces distance function restricted take values unit interval 
enforced changing topology 
ultrametric space triangular inequality strengthened max ordinary metric spaces 
morphisms ultra metric spaces take non expansive functions 
ultra metric space complete cauchy sequence limit 
write cms categories complete ultra metric spaces 
consider fibrations cms cms closed subsets subsets closed limits cauchy sequences 
satisfy hypothesis lemma fibrations bicartesian categories 
background information see applications semantics programming languages 
completeness recall cartesian product metric spaces product theta underlying set distance theta hx hy additionally consider tensor product omega metric spaces cartesian product underlying set 
distance max take care stay interval omega hx hy minf tensor classifies bi non expansive maps 
category cms monoidal closed category cartesian closed 
cases exponential internal hom set non expansive functions distance supremum sup iv sketch syntactic example 
assume predicate logic simple type theory 
involves category types 
objects types morphisms equivalence classes respect conversion terms shall assume finite product types theta coproduct types calculus see details 
top category types category predicates types gives logic 
objects propositions prop context predicates morphisms prop 
prop morphisms say term derivation entailment 
sign seperate type theoretic context base category logical context fibre derive 
obvious projection functor sends predicate prop underlying type split fibration substitution functors syntactic substitution terms predicate formulas 
assume coherent logic propositional connectives finite conjunctions disjunctions existential quantifiers gamma equality predicate type category predicates finite products coproducts 
example coproduct predicates prop prop predicate additional logical assumptions needed fibred functor theta examples fibre categories pre orders 
means fibrations model provability account existence proofs derivations 
theory develop applies general situation proper fibre categories logic proofs 
universality takes care commutativity conditions inductive proofs satisfy 
categories predicates shall categories binary relations 
obtained follows 
fibration cartesian products theta base category form fibration rel relations interestingly monoidal structure cpo 
admits contraction diagonals monoidal structure cms admits weakening projections see 
change base pullback rel fflffl fflffl 
theta category rel constructed objects sitting product object theta morphisms sitting product morphism theta theta theta fibre category rel isomorphic fibre category thetaa binary relations elementary result extending lemma fibred categories relations 
assumes coproducts base category distributive preserved functors theta gamma 
see information 

lemma 
fibration lemma distributive coproducts base category 
associated category relations rel bicartesian functor rel strictly preserves structure 
fibration additionally satisfies assumptions ii induced coproduct functor rel theta rel rel fibred functor 
proof 
coproducts distributive left adjoints substitution functors theta theta thetaa adjoints composite theta theta theta theta theta theta theta theta theta examples listed base category distributive coproducts result applies 


proof lemma coproduct total category pof fibration described 
alternative isomorphic formulation terms product functors right adjoint substitution fibred cartesian products theta theta 
shown second coproduct coproduct basis assumes fibration locally small equivalently presence fibred exponents admits comprehension see definition coproduct injections disjoint monomorphisms products satisfy beck chevalley condition 
details left interested reader 
comprehension quotients assume fibre category fibration terminal object call objects stable substitution preserved substitution functors canonically 
fibred terminal objects amount functor fibred right adjoint functor logical view bicartesian fibrations fibred terminal objects correspond constantly truth predicates types 

definition 
fibration terminal object functor said admit comprehension functor right adjoint 
usually write gammag 
examples xx subobject fibrations admit comprehension choosing subobject ae domain object base category 
applies fibrations admissible subsets cpos closed subsets ultra metric spaces 
syntactic example comprehension amounts forming extent predicate type values provably holds oe prop 
fx oe type adjunction gammag gives appropriate elimination rules comprehension types 
turn quotients 
situation quotients left adjoints equality 
say means fibration equality 
turn involves left adjoints contraction functors 

definition 
fibration cartesian products theta fibration said admit equality object contraction functor ffi thetaa induced diagonal ffi hid idi ae theta left adjoint ffi case fibration fibred terminal objects write eq def ffi thetaa rel equality relation assignment 
eq extends functor eq rel morphism part functor expresses morphisms base map equal arguments equal results 

remarks 
substitution functors ffi thetaa give rise global functor ffi rel adjunctions ffi ffi fibres induce global left adjoint ffi 
rel ffi equality functor composite eq rel ffi rel fibration comprehension equality functor right adjoint gammag ffi ffi composition 
converse holds rel right adjoint eq 
rel right adjoint 
follows correspondences gamma 
eq gamma 
ffi gamma 
ii functor eq rel characterised universal property regarded morphism fibrations eq id rel absolute lifting sense terminal object functor id ffi rel cell ae ffi eq pointwise proof reflexivity universality renders eq reflexive relation 
definition 
fibration equality admits quotients equality functor eq rel left adjoint 
examples equality 
usually diagonal relation 
theta admissible cpos closed metric spaces 
hard show subobject fibration sub regular category quotients 
similarly admissible subsets cpos closed subsets metric spaces quotients 
cpos see metric spaces see 
predicate logic example quotients extra feature logic mapping oe oe prop 
oe type suitable elimination rules provided adjunction see 


defined quotient arbitrary relation 
set theoretically quotient equivalence relation generated relation 
diagram er eq eq rel er full subcategory rel equivalence relations quotient functor defined quotient equivalence relations usually 
suppose freely form equivalence relation generated relation inclusion er 
rel fibred left adjoint having adjoint having adjoint 
observation simpler consider pre ordered fibration unambiguous category er equivalence relations see details categories relations non pre ordered fibrations 
interested situations truth equality functors preserve finite products coproducts 
list easy observations 

lemma 
terminal object functor preserves products right adjoint 
ii fibration admits comprehension preserves coproducts 
iii preserves coproducts equality functor eq 
iv fibration quotients eq preserves products 
having terminal object functor pof fibration preserve finite coproducts means ffl terminal object fibre initial object initial equivalently initial see lemma 
means initial terminal object fibre coincide equivalent terminal category object arrow 
ffl pair objects canonical isomorphism gamma 
condition essentially means union images coproduct cover coproduct object sense element come note conditions satisfied instance consider internal logic fibrations fibrations predicates subobjects base category provided coproduct monic generally consider fibrations comprehension ii lemma 
requirement equality functor eq preserve products coproducts amounts extensionality condition expressing equality structurally determined 
means equality elements product object componentwise equality coproduct object holds elements component equal 
lifting functors predicates relations subsection show polynomial functor acting category types lifted induction structure functor pred acting predicates functor rel acting relations 
shall lifted functors pred capture inductive predicates algebras xx rel congruences xx coinductive relations coalgebras xx 

definition 
fibration bicartesian terminal object functor 
polynomial functor base category lifted polynomial functor pred called logical predicate lifting induction structure bicartesian structure replaced bicartesian structure constant occurring replaced truth constant pin pred 
ii similarly fibration equality functor eq rel polynomial functor lifted functor rel rel rel called logical relation lifting induction structure replace constant occurring equality eq rel rel 
functor theta initial algebra type lists elements logical predicate lifting pred theta endofunctor functor theta terminal coalgebra type streams infinite lists elements logical relation lifting rel eq theta 
notice functors rel strictly preserve bicartesian structure construction commuting diagrams pred fflffl fflffl rel rel rel fflffl 

lemma 
consider previous definition 
preserves finite coproducts predicate lifting commutes truth canonical natural isomorphism pred ffi ffi left diagram 
ii eq rel preserves products coproducts relation lifting commutes equality eq ffi rel ffi eq canonically right diagram pred rel rel rel oe oe oo oo eq oo eq oo proof 
induction structure preservation assumptions cases product theta coproduct 

certain additional hypotheses describe lifted functors pred rel total categories predicates relations terms original functor acting comprehensions fpg quotients base category 
works follows 
assume pred functor preserves left adjoints substitution 
assume additionally coproducts strong see 
means total category basis canonical map fpg satisfies fpg isomorphism 
pred pred fpg pred fpg fpg lifting pred entirely determined action functor extension fpg similarly functor rel write rel rel frg rel ffi theta ffi ffi frg ffi thetat ffi rel eq frg ffi thetat ffi eq frg ht ffi ffi frg ii assume functor rel fibred quotients effective 
means equivalence relation isomorphic kernel theta eq quotient map rel rel theta eq theta rel eq theta eq rel determined kernel 
special liftings pred rel define pred rel arbitrary non polynomial functor fact done literature see 
sequel shall explicit inductive formulations lifting definition 
transfer adjunctions section mention main technical result transfer adjunctions categories algebras coalgebras 
part result occurs independently 
proof characterization categories algebras appendix 

theorem 
consider natural transformation ff sf ft situation oe ff oo oo induces functor alg alg alg oo tx 
ff ff fx 
ff isomorphism right adjoint sigma sigma ee induces right adjoint alg alg upsilon upsilon alg alg gg functor alg arises fi tg gs adjoint transpose ftg shall prove result instance theorem appendix describes construction 
alg special case functorial inserter construction ins 
ins id 
notice leave ff fi implicit notation alg alg 
justified usually ff fi canonical isomorphisms 
dual version previous theorem applying cat category obtained cat reverting cells 

corollary 
functors gamma 
gamma 
gamma 
natural transformation ff gs tg induces functor coalg coalg coalg 
furthermore ff isomorphism left adjoint induces left adjoint coalg coalg 
induction principle algebras having laid technical prerequisites previous section ready tackle main topic formalisation induction coinduction principles algebras relative logic embodied fibration bicartesian categories base category consider fibration bicartesian categories polynomial endofunctor logical predicate lifting pred 
crucial observation formulation induction principle algebras motivated analysis examples xx inductive predicates predicates closed operations underlying algebra correspond precisely pred algebras algebra 
inductive predicates objects total category alg pred functor alg pred alg fflffl pred gamma 
fflffl alg pred pp gamma 
pf pp obtained theorem direct calculation alg fibration 
induction principle asserts inductive predicate provably true image unique map initial algebra underlying algebra 
words predicate holds reachable part see underlying algebra 
categorical terms expressed follows initial algebra td pred algebra pred td gamma 
initial pred algebra guarantees existence appropriate morphism inductive predicate corresponds proof property abovementioned 
notice initial pred algebra image initial algebra functor alg alg alg pred induced adjunction theorem requiring lemma fflffl pred ed fflffl gf bc oo yielding alg pred alg fflffl alg alg situation functor alg determined isomorphism right adjoint alg 
results canonical way theorem identity ffi ffi pred natural isomorphism 
formulation captures informal discussion 

definition induction principle fibration 
fibration bicartesian categories polynomial functor 
fibration satisfies induction principle induced functor alg alg alg pred preserves initial objects 
logically induction principle formulated follows 
unique algebra map initial algebra td algebra tx px predicate inference rule 
pred sx written empty proposition context truth predicate 
antecedent rule says pred algebra structure tx says holds image algebra map reachable part 
example involving lists xx list initial algebra 
arbitrary algebra theta predicate premise pred sx rule amounts 
ff holds ff unique map lists hi delta fi fi 
particular get standard list induction principle nil cons arbitrary holds arbitrary 
notice functor initial algebra natural numbers object induction holds truth predicate initial algebra lifted functor pred category predicates 
way formulation induction principle admits iterated initial algebra definitions meaning initial algebras polynomial endofunctors constant objects involved definition functors consistently see elaboration details 
similar considerations apply treatment coinduction coalgebras xx 
induction equality order explicit duality induction principle algebras coinduction principle coalgebras xx formulation involves equality relations establish equivalent formulation induction terms binary relations equality 
reformulation involves additional exactness completeness conditions fibration bicartesian categories 
fibration bicartesian categories admits equality sense definition perform logical relation lifting polynomial functor functor rel rel rel total category binary relations choosing eq constant relation object occuring see definition ii 
rel algebra binary relation algebra closed algebra operations congruence 
lemma summarises conditions need relate pred algebras rel algebras 

lemma 
assume distributive category polynomial functor bifibration bicartesian categories direct images satisfying beck chevalley frobenius conditions 
situation pred ffi ta ffi thetaa rel ffi xx ta thetat ffi xx canonical natural isomorphism ffi ffi pred ff rel ffi ffi ii furthermore substitution functors preserve finite coproducts pred ffi ffi fi ffi ffi rel canonically 
proof 
induction structure polynomial functor indicate argument non trivial cases case requires proof products respectively show ffi thetab theta ffi theta ffi consider diagram ffi fflffl theta ffi theta id fflffl theta theta theta id theta ffi fflffl thetaa oo thetaa ffi fflffl theta theta theta thetaa thetab bb thetaa thetab theta isomorphism obtained applying beck chevalley pullback squares frobenius condition middle vertical arrows recall description products fibration bicartesian categories proof lemma 
ii case requiring proof coproducts 
relations thetaa thetab show ffi ffi ffi fact coproduct injections distributive category shown lemma 
diagram pullback ffi fflffl ffi fflffl theta theta theta apply beck chevalley 
remaining details routine description coproducts fibration bicartesian categories proof lemma 
logical point view item lemma means inductive predicate extended congruence relation carries pred algebra structure relation rel algebra structure 
second item expresses fact reflexive part congruence inductive predicate rel algebra structure predicate pred algebra structure 


point condition direct images satisfy beck chevalley may fail 
fails example fibration admissible subsets cpos see pitts counter example chapter exercise similarly fibration closed subsets metric spaces 
hold subobject fibrations regular categories 
examples validate isomorphisms stated lemma 
fibration admissible subsets cpo 
cpo 
main technical point respect reflection cpo 
sub cpo 
sub cpo 
cpo 
fibration obtained classical logic fibration sub sets sets change base forgetful functor cpo 
sets see related considerations details 
fibration sub cpo 
cpo 
clearly satisfies hypothesis lemma 
routine verify reflection preserves relevant constructions transfer isomorphisms cpo 
cpo 
entirely analogous argument applies fibration cms cms equality functor eq rel commutes lifting get theorem functor alg eq situation alg rel rel eq eq tx eq gamma 
eq alg alg eq oo tx oo express induction principle algebras terms equality follows 

theorem 
fibration lemma 
functor alg alg alg pred preserves initial objects functor alg eq alg alg rel 
informally induction principle holds unary form predicates holds binary form relations 
proof 
direction functor alg preserves initial objects alg eq alg ffi ffi alg alg ffi left adjoint alg ffi 
notice alg ffi exists adjoint natural transformation ff mentioned lemma invertible 
direction assume td initial algebra beck chevalley get isomorphism ffi ffi ffi id ffi id id alg ffi ffi alg ffi id arbitrary pred algebra pred get adjoint correspondences alg alg ffi alg ffi alg ffi alg alg eq alg ffi assumption alg eq initial object category alg rel may conclude alg initial object alg pred 
equivalence theorem means fibration satisfies induction principle canonical congruence rel eq eq eq gamma 
eq initial algebra td initial category alg rel congruences 
logical side amounts saying congruence rel algebra ty reflexive restricted unique morphism induced initiality relation 
provably reflexive 
particular congruence initial algebra reflexive 
alternative formulation induction principle algebras appears case natural numbers 
shows derivations induction coinduction principles context formal logic parametric polymorphism 
formulation induction principle prove certain properties algebra just initial 
standard formulation require induced pred algebra initial algebra initial pred algebras initial algebra 
initial algebra td algebra pred td gamma 
initial fibre category alg pred td inductive predicates initial algebra td functor alg alg pred alg fibration formulations equivalent result shows 

lemma 
fibration initial object object initial fibre globally initial total category relating induction principles different data types known familiar inductive data types lists trees carry inductive proofs elements associating measure natural numbers induction instance binary trees leaves fixed type elements initial algebra tree theta tree tree functor tx theta height tree tree morphism tree kn induced algebra theta ffi max generally category colimits chains colimits diagrams form cat 
preordered category natural numbers initial object endofunctor preserves colimits initial algebra obtained colimit chain delta delta delta unique morphism initial object cf 

natural numbers object cocone diagram delta delta delta fflffl delta delta delta hn defined composites hn def gamma 
gamma 
gamma 
gamma 
delta delta delta gamma 
times definition yields cocone vertex induces height map kn carrier initial algebra td map reason induction height depth elements initial algebra explain 
predicate type tree say tree prop know assert tree show tree course proposition established ordinary induction formula expression internal language fibration predicate right adjoint tree pn ll tree logically universal quantification 
adjunction laws set bijective correspondence tree gives formal counterpart abovementioned reduction induction trees induction natural numbers associated height 
coinduction principle coalgebras turn consider logical principle terminal coalgebras 
situation algebras induction principle gives method prove proposition coinduction principle gives way proving equality elements coalgebra 
context data types principle quite useful elements terminal coalgebras generally infinite objects method show equal necessary 
formulation coinduction entirely dual induction terms binary relations xx 
polynomial endofunctor fibration bicartesian categories admitting equality equality functor eq rel preserves products coproducts obtain functor coalg eq coalg coalg rel algebraic case 
coalgebra tc equality relation eq canonical rel coalgebra structure eq eq tc rel eq follows analysis xx rel coalgebras regarded applicative bisimulations coinductive relations 
means rel coalgebra rel coalgebra tx relation preserved destructor operation coinduction principle asserts elements related equal mapped terminal coalgebra 
logically denotes unique coalgebra map terminal coalgebra td rule rel cx cy premise expresses rel coalgebra structure tx 
furthermore constructive point view natural require different proofs entailment premise rule yield different proofs entailment 
considerations lead require canonical rel coalgebra eq terminal 
principle formally captured definition 

definition coinduction principle fibration 
fibration bicartesian categories equality preserving bicartesian structure polynomial functor 
fibration satisfies coinduction principle respect induced functor coalg eq coalg coalg rel preserves terminal objects 

example borrowed 
set consider polynomial functor theta terminal coalgebra sets carrier set infinite sequences 
structure hh ti theta consists head tail functions 
fibration sub sets sets subsets satisfies coinduction principle respect functor equality relation eq lg theta terminal coalgebra induced lifted functor rel eq theta total category rel sub sets relations 
relation theta carrying rel coalgebra structure consists coalgebra structure hf gi theta underlying set ae induced coalgebra map unique map rel coalgebras eq 
illustrate coinduction principle infinite lists 
define maps odd take evenly oddly listed elements 
obtained hh ti theta hh ffi ti fflffl hh ti fflffl oo odd hh ti ffi fflffl theta theta theta oo define merge operation theta merge hh ffi ffi ii fflffl hh ti fflffl theta theta theta merge delta ff fi delta merge fi ff 
showing merge ff fi ff odd merge ff fi fi sets amounts showing coinduction relations merge ff fi ff fi lg odd merge ff fi ff fi lg bisimulations carry rel coalgebra structures 
show merge ff odd ff ff showing odd ff ff 
get isomorphism theta argument may carried fibration admissible subsets cpo relations involved admissible 
validity induction coinduction principles having formalised induction coinduction principles fibration proceed give sufficient criteria validity 
show ordinary set theory logic admits comprehension induction principle algebras valid 
dually logic admits quotients relations satisfies coinduction principle coalgebras 
validity induction coinduction principles formalised exactness conditions certain functors guaranteed hold presence suitable adjoints 
existence inferred comprehension quotients appropriate theorem shows 

theorem 
consider polynomial functor fibration bicartesian categories 
fibration admits comprehension satisfies induction principle respect 
ii fibration admits finite product preserving equality quotients satisfies coinduction principle respect proof 
statements consequences theorem corollary respectively comprehension quotient adjunctions gammag pred ed fflffl oo gf bc oo rel rel gf fflffl eq oo oo induce adjunctions associated categories algebras coalgebras alg pred alg gammag alg alg oo coalg rel coalg oeoe coalg coalg eq functor alg preserves initial objects functor coalg eq preserves terminal objects 
formal argument counterpart concrete set theoretic arguments xx functor alg alg pred alg extracts subalgebra algebra determined inductive predicate 
functor coalg coalg rel coalg takes coalgebra applicative bisimulation produces coalgebra quotienting bisimulation 

example 
shall illustrate details argument coinductive case terminal coalgebra hh ti theta infinite lists functor theta example 
saw coinduction principle holds respect direct argument 
spell argument theorem 
assume arbitrary coalgebra hf gi theta relation theta carrying rel coalgebra structure hf gi 
write result quotienting equivalence relation generated theta quotient may described coequaliser sets composites 
theta projections theta consider diagram hf ffi gi fflffl theta coinduction assumption implies 
means hf ffi gi ffi hf ffi gi ffi diagram 
resulting mediating map ka theta coalgebra sets quotient unique notice formalisation gives precise description notion subalgebra algebra category subobjects generalised fibration mere subobject category algebras 
coalgebra map kl get diagram hf gi fflffl hh ti fflffl theta id theta id theta theta id theta theta shows ffi unique coalgebra map ka yields ffi ffi map relations eq 
seek mixed induction coinduction recursive types section show combine induction coinduction principles xx xx order extend reasoning principles structures involving mixed variance exponent functor op theta bicartesian closed category adopt setting bicartesian closed category bicartesian category functor theta right adjoint object op theta polynomial functor functor smallest class functors cat op theta containing second projection constant functors closed products coproducts pointwise exponentials sense op theta class functor op theta fl theta id ffi delta theta op theta op theta op theta op theta fl op theta theta op canonical twist isomorphism op theta self dual category 
interested minimal invariants polynomial functor objects universal property 
freyd algebraically compact categories standard reduce analysis objects case initial algebras terminal coalgebras associated functor possible functor op theta uniquely determines symmetric functor op theta cofree self dual category 
roughly speaking ignore aspects enrichment see minimal invariant initial algebra terminal coalgebra 
explicitly goes follows 
category called algebraically compact freyd functor suitable kind initial algebra inverse gamma terminal coalgebra 
examples category cpo 
algebraically compact consider locally continuous functors see 
category cms complete metric spaces algebraically compact locally contractive functors see 
identity functor locally contractive functor id maps metric space space pointwise half original distance 
cpo 
cms cartesian closed categories monoidal closed 
category complete ultra metric spaces cartesian closed algebraically compact locally contractive functors 
functors category called algebraically compact 
basic result parametrized algebraically compact op theta cofree self dual category useful way 
functor op theta induces functor hx 
ht hf gi 
ht determine algebraic compactness initial algebra op theta ha hd inverse ha gamma gamma terminal hard verify swapping components yields new map ha gamma gamma hd initial algebra inverse terminal coalgebra 
yields unique mediating isomorphism hd hd algebras coalgebras 
get rephrasing things new insight single isomorphism universal property pair maps unique pair maps kd ky making diagram commute 
oo order get suitable induction coinduction principle invariant objects extend logical relation lifting polynomial functors encompass exponential functor 
order assume fibration total category pis bicartesian closed strictly preserves structure 
way guarantee cartesian closure logical operations proposition complete proof see corollary 
requires cpo enrichment see analysis gloss aspects impact subsequent developments 
procedure followed locally contractive functors complete ultra metric spaces identity functor locally contractive 

proposition 
fibration satisfying conditions 
cartesian closed ii fibred ccc fibre category cartesian closed reindexing functors preserve structure iii admits simple products cartesian projection theta weakening functor thetab right adjoint right adjoints satisfy beck chevalley condition 
total category cartesian closed strictly preserves structure 
proof 
finite products spelled lemma 
exponentials objects exponential formula ev right hand side exponential fibre theta theta product diagram ev theta evaluation morphism instance counit exponential adjunction theta 
expression exponential object pis traditional logical predicate formula higher types lambda calculus 
assume fibration bicartesian closed equality functor eq rel preserving cartesian closed structure 
means particular equality extensionally pointwise elements internal hom function space fx gy fx gx define logical relation lifting polynomial functor definition ii obtaining diagram rel op theta rel rel rel op theta eq op theta eq oo eq oo functor alg eq op theta eq alg alg rel 
fibration admits quotients equivalent condition pointwise equality involving frobenius condition quotients 

proposition 
fibration admits quotients adjunction eq ae rel functor eq preserves exponentials adjunction eq satisfies frobenius condition canonical cell ffi theta eq ff theta ffi isomorphism ff exists eq preserves products right adjoint 
proof 
clearly rel canonical natural isomorphisms theta eq theta eq eq eq composite adjunctions theta ffi eq ffi ffi theta eq eq ffi eq formulation logical principle mixed variance polynomial functor evident generalization definitions covariant polynomial functors 

definition mixed induction coinduction principle fibration 
consider bicartesian closed category polynomial functor op theta fibration bicartesian closed eq 
fibration satisfies mixed induction coinduction principle respect induced functor alg eq op theta eq alg alg rel preserves initial objects 
logically principle expressed follows ffl algebra structure ffl minimal invariant unique algebra map 
op theta ffl relations respectively rule 
rel cx cx rel dy dy 
premise rule asserts pair relations carries rel algebra structure 
tells coinduction principle contravariant side induction principle covariant 
apply mixed analysis ordinary polynomial functor second projection op theta functor ffi op theta ht ty rel rel ffi rel rel mixed rule involves coalgebra algebra satisfying assumptions rel cx cx rel dy dy mixed rule non mixed cases see section subsection 
mixed rule combines binary rules reasoning algebras coalgebras special case 
combine criteria validity induction coinduction give criterion validity mixed principle 

theorem 
fibration satisfying conditions definition admits comprehension quotients satisfies mixed induction coinduction principle mixed variance polynomial functor proof 
quotients comprehension yield left right adjoints equality rel gammag ffi ffi yy eq oo combining adjoints get right adjoint theta gammag ffi ffi rel op theta rel op theta functor eq op theta eq rel op theta rel delta delta rel ed fflffl op theta eq op theta eq oo gf bc oo yielding alg rel xi xi alg alg eq op theta eq oo alg eq op theta eq preserves initial objects 
previous theorem describes validity mixed variance principle pure cartesian form 
stands apply main examples cpo 
cpo 
cms cms see examples ii iii category cartesian closed categories cpo 
cms monoidal closed 
metric categories cms algebraically compact respect class functors locally contractive functors include identity functor 
second problem serious requires minor adaptation main result specifying appropriate class polynomial functors id replacing id problem involves replacing cartesian closed structure theta mixed variance polynomial functors monoidal closed structure omega 
addition functor id cms cms logical relation lifting pred id cms cms 
id id 
similarly cms 
canonical liftings structure omega cpo 
omega cpo 
omega cms omega cms determined universal property omega categories morphism classifier cpo 
bi non expansive map classifier cms ffl tensor product omega admissible subsets cpo subset omega omega 
associated unit 
neutral element omega cpo 
ffl associated internal hom cpo 
subset ff qg 
lifting metric spaces similar ffl tensor product omega closed subsets complete metric spaces omega omega neutral element fg neutral element omega cms 
ffl internal hom cms ff qg 
way canonical liftings total categories relations cpo complete metric spaces 
modifications apply previous setup formulation induction principles criteria admissibility polynomial functors determined monoidal closed structures 
conditions lifting closed monoidal structure subject ongoing research 
stability initial algebras terminal coalgebras weakening context far considered inductive data types associated induction principles terms initiality empty context instance initiality allows define functions 
ka endowing set algebra structure 
want method inductive data type occurs arbitrary context 
define addition add theta induction second argument 
requires initiality preserved move empty context context argument add 
operation called context weakening technically say initiality stable addition indeterminates indeterminate called initiality parameters see 
similar extension needed associated induction principle perform context weakening gamma 
gamma element may subject propositional hypothesis 
generally interested proving relative entailments absolute assertions instance may want prove add case induction parameters 
stable version induction principle formulated logical terms 
give categorical account xx extended mixed variance case criterion admissibility theorem 
abstractly extensions type proposition parameters instances phenomenon category finite products see definition object terminal object adjunction global element object consider object indeterminate element written 
object equipped cell ja cell ff ja universal objects data 
endomorphism cell consider object algebras alg inserter identity see definition 
similarly polynomial functor induces ja consider object alg induced morphism alg alg alg 
stability means alg ja preserves initial objects object formalisation stability follows theorem stability guaranteed object functionally complete ja right adjoint 
similarly stability terminal coalgebras guaranteed contextually complete ja left adjoint 
spell detail categories fibrations subsections 
details indeterminates contextual functional completeness 
refer relevant definitions comonads associated morphisms kleisli objects category 
case concepts essential understand follows 
stability initial algebras terminal coalgebras distributive category material subsection formulations proofs different 
preliminary treatment stability induction principles xx 
bicartesian category object denote universal bicartesian category ja global element type morphism ja 
universality means dimensional level bicartesian category functor preserving finite products coproducts morphism fa unique functor kc preserving finite products coproducts fja category characterised kleisli category comonad theta written distributive theta preserves finite coproducts 
logical point view think theory types terms parameter type terms general functor lifts functor admits strength 
polynomial functor admits strength 
form gamma interpretation obtained considering internal language kleisli category comonad theta functor lifts functor ffi ja ja ffi endowed appropriate additional structure 
technically structure exactly morphism comonads essentially requiring strength 
specifically require natural transformation theta ffi theta id ffi theta theta satisfying coherence conditions tx tx theta oo ffi fflffl theta theta theta id fflffl theta theta fflffl tx theta oo ffi theta theta polynomial functor admits structure canonical way lifted 
definition 
consider bicartesian category polynomial functor 
say admits stable initial algebras admits initial algebra object induced functor alg ja alg gamma 
alg preserves initial objects 
ii dually admits stable terminal coalgebras admits terminal coalgebra object functor coalg ja coalg gamma 
coalg preserves terminal objects 
recall category functionally complete object induced functor ja right adjoint contextually complete ja left adjoint 
bicartesian category contextually complete distributive functionally complete additionally cartesian closed 
immediate consequence theorem result 

proposition 
bicartesian category polynomial functor 
contextually complete terminal coalgebras stable 
ii functionally complete initial algebras stable 
stability initial algebras terminal coalgebras fibration bicartesian categories just require inductive data types stable addition indeterminates initial algebra property arbitrary context require analogous stability associated induction principles 
similar considerations apply coalgebras coinduction 
order express stability consider fibration logic associated fibration indeterminates base total categories 


treatment indeterminates fibrations follow parallels categories xx subtle technical difference 
concepts previously defined universal properties cat considered variants fib equivalence isomorphism 
pseudo functorial nature fibrations allows existence cocompleteness properties required kleisli objects categorical versions previously mentioned 
strict categorical version apply restrict attention split fibrations splitting preserving morphisms 
fibration bicartesian categories object say fibration indeterminate written hx hi universal fibration ja hx hi global element ja global element universality means fibration bicartesian categories morphism fibrations preserving finite products coproducts global elements hp unique isomorphism morphism hx hi preserving finite products coproducts ffi ja oe ffi oe 
hp canonical comparison isomorphism fibration easy extend lemma total category pa distributive category base fibres functors satisfy beck chevalley frobenius conditions prop 

call fibration bicartesian categories base total categories distributive fibration distributive categories 
case characterise hx hi kleisli fibration comonad theta theta pp fib explained 
see concrete description different application construction 
logical perspective think fibration hx hi logic types propositions terms parameter type pp terms form gamma entailment relation allows additional hypothesis entailments form gamma theta assuming presence additional element type predicate type instance provably true 
elements represent additional data associated properties forming context working instance carrying inductive proof 
semantically interpretation hx hi obtained internal language kleisli fibration 
polynomial morphism fibrations pred considered xx induces endomorphism fibrations hx hi hx hi situation fflffl jp pred fflffl jp pred hx hi fflffl hx hi fflffl ja ja induced morphism fibrations alg jp ja alg pred gamma 
alg pred endomorphism cat fibration fibration alg obtained inserter identity base category alg total category alg see appendix 
formalise stability induction principle algebras extending formulations definitions 

definition 
consider polynomial functor fibration bicartesian categories 
fibration satisfies stable induction principle respect functor alg alg alg pred preserves initial objects object morphism alg jp ja alg pred gamma 
alg pred preserves initial objects base total categories 
ii fibration additionally admitting equality satisfies stable coinduction principle respect functor coalg eq coalg coalg rel preserves terminal objects morphism coalg jp ja coalg rel gamma 
coalg rel preserves terminal objects 
iii assuming closed functors eq rel structure preserving satisfies stable mixed induction coinduction principle respect induced functor alg eq op theta eq alg alg rel preserves initial objects morphism fibrations alg op theta jp op theta ja alg rel gamma 
alg rel preserves initial objects 


definition equivalently expressed requiring fibration hx hi indeterminate object satisfy induction principle respect induced morphism fibrations pred pp hx hi hx hi provided base category admits stable initial algebras 
logical sense want reason induction fibration hx hi indeterminate type pp satisfying hypothesis exactly formulation means 
similar considerations apply coalgebras coinduction 
analogy ordinary categories see definition say fibration functionally complete object morphism ja hx hi right adjoint fib 
holds instance admits models universal quantifiers implication model order logic 
call contextually complete morphisms ja admit left adjoints 
contextual completeness holds fibrations distributive categories corresponding fibration indeterminate hx hi kleisli object left adjoint part resolution comonad theta theta refer details 
apply theorem category cat show 

theorem 
fibration distributive categories 
satisfies coinduction principle respect polynomial functor satisfies corresponding stable coinduction principle 
ii functionally complete satisfies induction principle respect polynomial endofunctor satisfies stable induction principle respect 
corollary 
fibration contextually functionally complete mixed induction coinduction principle op theta satisfies stable induction coinduction principle fibrations example functionally complete sub sets sets models cpo 
cpo 
functionally complete model implication functional completeness holds essentially reflection mentioned 
considerations apply ultra metric spaces closed subsets 
formulation capture better kind example purely syntactic approach 
syntactic example assume logic implication universal quantification explained 
functional completeness syntactic setting implicitly ii show validity stable induction principle natural numbers object topos 

acknowledge discussions andy pitts gordon plotkin pino rosolini jan rutten 
anonymous referees provided detailed comments useful suggestions improvements 

aczel mendler final coalgebra theorem pitt poign rydeheard eds category theory computer science springer lncs berlin 

abramsky jung domain theory abramsky dov maibaum eds handbook logic computer science oxford univ press 

america rutten solving reflexive domain equations category complete metric spaces journ 
comp 
syst 
sci 


arbib manes arrows structures functors 
categorical imperative academic press new york 

arbib manes parametrized data types need highly constrained parameters inform 
contr 


backhouse beautiful theorem manuscript univ eindhoven 
ifip working group june 

de bakker control flow semantics mit press boston 

barr algebraically compact functors journ 
pure appl 
alg 


cockett distributive categories math 
struct 
comp 
science 

cockett spencer strong categorical datatypes seely ed category theory cms conference proceedings 

cockett spencer strong categorical datatypes ii term logic categorical programming theor 
comp 
science 

crole categories types camb 
univ press math 
textbooks 

crole pitts new foundations fixpoint computations fix logic inform 
comput 


th 
ehrhard categorical semantics constructions 
logic comp 
sci 
ieee comp 
sci 
press 

colimits category cpo techn 
rep kansas state university 

fiore coinduction principle recursive data types bisimulation inform 
comput 


fiore axiomatic domain theory categories partial maps camb 
univ press 

freyd recursive types reduced inductive types 
logic comp 
sci 
ieee comp 
sci 
press 

freyd remarks algebraically compact categories 
fourman johnstone pitts eds 
applications categories computer science camb 
univ press lms 

freyd scedrov categories allegories north holland amsterdam math 
library 

goguen thatcher wagner initial algebra approach specification correctness data types 
yeh ed current trends programming methodology prentice hall 

hagino typed lambda calculus categorical type constructors 
pitt poign rydeheard eds category computer science springer lncs 

jacobs proof principles datatypes iterated recursion 
appear category theory computer science springer lncs berlin 
hermida fibrations logical predicates indeterminates phd 
thesis univ edinburgh 
techn 
rep lfcs 
available aarhus univ daimi techn 
rep pb 

hermida properties fib fibred category journ 
pure appl 
algebra appear 

hermida jacobs algebraic view structural induction tiuryn eds computer science logic springer lncs berlin 

hermida jacobs fibrations indeterminates contextual functional completeness polymorphic lambda calculi math 
struct 
comp 
sci 


jacobs categorical type theory phd 
thesis univ nijmegen 

jacobs comprehension categories semantics type dependency theor 
comp 
science 

jacobs semantics weakening contraction annals pure appl 
logic 

jacobs quotients simple type theory manuscript univ utrecht june 

jacobs parameters parametrization specification distributive categories fund 
informaticae 

jacobs invariants bisimulations correctness coalgebraic refinements 
appear algebraic methodology software technology springer lncs 

joyal moerdijk algebraic set theory cambridge univ press 

kelly elementary observations categorical limits bull 

math 
soc 


lambek scott higher order categorical logic camb 
univ press studies adv 
math 


lawvere equality hyperdoctrines comprehension scheme adjoint functor 
heller ed applications categorical algebra ams providence 

lehmann smyth algebraic specification datatypes synthetic approach math 
systems theory 

makkai formulation intuitionistic predicate logic completeness godel kripke 
part notre dame journ 
formal logic 

makkai formulation intuitionistic predicate logic completeness godel kripke 
part notre dame journ 
formal logic 

manes arbib algebraic program semantics springer theor 
comp 
sci berlin 

markowsky categories chain complete posets theor 
comp 
science 

pavlovi predicates fibrations phd 
thesis univ utrecht 

pavlovi maps relative factorization system journ 
pure appl 
algebra 

pavlovi maps ii chasing diagrams categorical proof theory journ 
igpl 
available url www mpi sb mpg de igpl journal 
pitts induction principle recursively defined domains theor 
comp 
sci 


pitts relational properties domains inform 
comput 


plotkin abadi logic parametric polymorphism 
bezem groote eds 
typed lambda calculi applications springer lncs berlin 

reichel approach object semantics terminal algebras math 
struct 
comp 
sci 


rutten turi foundations final semantics non standard sets metric spaces partial orders 
de bakker de roever rozenberg eds semantics foundations applications springer lncs berlin 

rutten turi initial algebra final coalgebra semantics concurrency 
de bakker de roever rozenberg eds decade concurrency springer lncs berlin 

smyth topology 
abramsky dov maibaum eds handbook logic computer science volume background mathematical structures oxford univ press 

smyth plotkin category theoretic solution recursive domain equations siam journ 
comput 

street formal theory monads journ 
pure appl 
algebra 

street fibrations yoneda lemma category 
kelly ed proc 
sydney category theory seminar springer lnm berlin 

street walters yoneda structures categories journ 
algebra 

wirsing algebraic specification van leeuwen ed handbook theoretical computer science elsevier mit press volume 
functoriality notion inserter category taken 

definition inserter 
parallel morphisms category inserter consists morphism ins cell fp gp universal data cell cell oe fh gh unique morphism ins ph oe furthermore pair data oe fh gh fk gk cell ff gff ffi oe ffi fff unique cell ff ff 
cat inserter pair parallel functors category ins objects pairs fa ga object morphism fa ga morphisms 
morphisms gf ffi ffi ff order exhibit functoriality assignment 
ins need appropriate notions morphisms cells parallel morphisms 

definition 
category category delta objects pairs parallel morphisms 
morphisms 
tuples ae ffi cells cells ae bf ffi bg displayed fflffl fflffl oo ae oe 
ffi oo cells ae ffi ae ffi cells ff fi satisfying fif ffi ae ae ffi ff ff ffi ffi ffi ffi fig identities composition delta inherited horizontal composition cells defined interchange law state desired functoriality 

proposition 
assignment 
ins extends functor ins delta gamma 
proof 
define ins cells cells delta morphism ae ffi 
universality ins gives morphism ins ins induced cell ap ins cell ffi ffi ffi aep ap cp shown 
ins ae fflffl ffi cells ff fi ae ffi ae ffi delta universality ins gives cell oe induced cell ffp ap satisfies ffb ffi ffip ffi ffi aep ffi ffi ffi ae ffi ffp definition cells delta interchange law 
recall adjunction category data cells id gf fg id satisfying triangular laws ffi fj id ffi jg id write data ae say right adjoint equational nature adjunctions category implies adjunctions preserved functors just ordinary functors preserve isomorphisms 
easy corollary ins 

corollary 
adjunction delta induces adjunction corresponding notice adjunction delta ae ffi ae ffi gamma 
gamma 
gamma 
gamma gamma 
gamma 
consists adjunctions ae ae definition cells delta follows adjoint mate ae ffi bae ffi inverse ae similarly adjoint mate ffi inverse ffi adjoint situation ae ffi isomorphisms 

theorem 
consider diagram fflffl fflffl ff ff isomorphism right adjoint ae adjoint mate ff gamma fi gs ffi ff gamma ffi tg gs induces morphism ins id ins id right adjoint morphism ins id ins id induced diagram 
proof 
morphisms arise applying functor ins delta proposition data construed morphisms delta morphisms adjoints delta adjunction follows corollary 
cat inserter ins id functor category alg algebras 
morphism ins id ins id corollary action tx gamma 
fx fx ff fx fx right adjoint ins id ins id action sy gamma 
gy gy fi gy gy theorem alg alg 

