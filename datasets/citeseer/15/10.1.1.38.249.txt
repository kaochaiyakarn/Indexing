approximate nearest neighbors removing curse dimensionality preliminary version piotr indyk rajeev motwani department computer science stanford university stanford ca cs stanford edu april nearest neighbor problem set points fp png metric space preprocess efficiently answer queries require finding point closest query point focus particularly interesting case dimensional euclidean space norm 
despite decades effort current solutions far satisfactory fact large theory practice provide little improvement brute force algorithm compares query point data point 
late interest approximate nearest neighbors problem find point ffl approximate nearest neighbor query ffl 
algorithmic results approximate version significantly improve known bounds preprocessing cost polynomial truly sublinear query time query time polynomial log mildly exponential preprocessing cost theta ffl applying classical geometric lemma random projections give simpler proof obtain known algorithm polynomial preprocessing query time polynomial log unfortunately small ffl purely theoretical result exponent depends ffl 
experimental results indicate algorithm offers orders magnitude improvement running times real data sets 
key ingredient notion locality sensitive hashing may independent interest give applications information retrieval pattern recognition dynamic closest pairs fast clustering algorithms 
supported stanford graduate fellowship nsf award ccr 
supported sloan fellowship ibm faculty partnership award aro muri daah nsf young investigator award ccr 
nearest neighbor search nns problem set points fp metric space distance function preprocess efficiently answer queries finding point closest query point focus particularly interesting case dimensional euclidean space norm 
low dimensional case solved main issue dealing curse dimensionality 
problem originally posed minsky papert pp 
despite decades effort current solutions far satisfactory 
fact large theory practice provide little improvement brute force algorithm compares query known algorithms types low preprocessing cost query time linear query time sublinear polynomial severely exponential preprocessing cost unfortunate situation carries average case analysis ffl approximate nearest neighbors ffl nns problem find point ffl approximate nearest neighbor query ffl 
algorithms approximate version significantly improve known bounds preprocessing cost polynomial truly sublinear query time query time polynomial log mildly exponential preprocessing cost theta ffl applying classical geometric lemma random projections give simpler proof obtain known algorithm polynomial preprocessing query time polynomial log unfortunately small ffl purely theoretical result exponent depends ffl 
experimental results indicate algorithm offers orders magnitude improvement running times real data sets 
key ingredient notion locality sensitive hashing may independent interest give applications information retrieval pattern recognition dynamic closest pairs fast clustering 
motivation 
nearest neighbors problem major importance variety applications usually involving similarity searching 
examples data compression databases data mining information retrieval image video databases machine learning pattern recognition statistics data analysis :10.1.1.49.9119:10.1.1.108.8490
typically features objects interest documents images represented points distance metric measure dis similarity objects 
basic problem perform indexing similarity searching query objects 
number features dimensionality ranges tens thousands 
example multimedia applications ibm qbic query image content number features hundreds 
information retrieval text documents vector space representations involve thousands dimensions considered dramatic improvement techniques lsi latent semantic indexing principal components analysis karhunen lo eve transform reduce dimensionality mere hundreds 
late increasing interest avoiding curse dimensionality resorting approximate nearest neighbor searching 
selection features distance metric applications heuristic merely attempt mathematically precise essentially aesthetic notion similarity overkill insist absolute nearest neighbor fact determining ffl approximate nearest neighbor reasonable value ffl say small constant suffice practical purposes 
unfortunately relaxation goals removed curse dimensionality results kleinberg gives improvements 
previous 
samet surveys variety data structures nearest neighbors including variants trees trees structures space filling curves results surveyed 
perform dimensions high dimensional spaces exhibit poor behavior worst case typical cases see arya mount narayan 
dobkin lipton provide algorithm nearest neighbors query time log preprocessing cost 
clarkson reduced preprocessing dd ffi increasing query time log log 
results agarwal matousek matousek yao yao suffer query time exponential obtained query time log ffi preprocessing 
called vantage point technique popular heuristic aware analysis high dimensional euclidean spaces 
general average case analysis heuristics points distributed regions gives exponential query time 
situation slightly better approximate nearest neighbors 
arya mount gave algorithm query time ffl log preprocessing ffl 
dependence ffl reduced clarkson chan ffl gamma gamma arya mount netanyahu silverman wu obtained optimal preprocessing cost query time growing 
bern chan considered error ffl polynomial managed avoid exponential dependence case 
kleinberg gave algorithm log preprocessing query time polynomial ffl log algorithm preprocessing polynomial ffl query time log 
improves dn time bound brute force algorithm 
hamming space dolev parnas dolev linial nisan parnas gave algorithms retrieving points distance query unfortunately arbitrary algorithms exponential query time preprocessing 
greene parnas yao scheme binary data chosen uniformly random retrieves points distance time dn dn preprocessing 
kushilevitz ostrovsky rabani obtained result similar proposition 
overview results techniques 
main results algorithms ffl nns described 
preprocessing cost refers space requirement typically preprocessing time roughly 
algorithms randomized return approximate nearest neighbor constant probability 
reduce error probability ff data structures parallel return best result increasing complexity factor log ff sake clarity notation hide terms poly logarithmic proposition ffl algorithm ffl nns norm uses ffl dn preprocessing requires dn ffl query time 
proposition ffl algorithm ffl nns norm uses theta ffl preprocessing requires query time 
proposition ffl algorithm ffl nns norm uses nd preprocessing requires query time 
obtain results reducing ffl nns new problem viz point location equal balls 
achieved means novel data structure called ring cover trees described section 
technique viewed variant parametric search allow reduce optimization problem decision version 
main difference case answering query ask solution decision problem belonging prespecified set solving decision problem point location equal balls requires data structures created preprocessing 
believe technique find applications problems parametric search helpful 
section give solutions point location problem 
method akin elias bucketing algorithm decompose ball bounded number cells store dictionary 
allows achieve query time preprocessing exponential implying proposition 
second solution introduce technique locality sensitive hashing 
key idea hash functions probability collision higher objects close far apart 
prove existence functions domain necessarily metric space implies existence fast ffl nns algorithms domain preprocessing cost linear sublinear families functions hamming space family subsets set resemblance measure broder cluster web documents 
algorithm family obtain nearestneighbor algorithm data sets embedding points hamming cube distance preserving manner 
algorithm resemblance measure shown applications information retrieval pattern recognition 
give additional applications locality sensitive hashing dynamic closest pair problem fast clustering algorithms 
algorithms method easy implement advantages exploit sparsity data running times lower practice predicted theoretical analysis 
expect results significant practical impact 
elegant technique reducing complexity owing dimensionality project points random subspace lower dimension projecting small collection random lines origin 
specifically employ result frankl improves johnson lindenstrauss lemma showing projection subspace defined roughly ffl gamma ln random lines preserves inter point distances relative error ffl high probability 
applying result algorithm query time obtain algorithm query time ffl gamma unfortunately lead sublinear query time large values ffl 
section appendix give version random projection result simpler proof frankl 
consider extensions random projection approach norms 
random projections proposition obtain algorithm described proposition 
unfortunately high preprocessing cost exponent grows ffl algorithm impractical small ffl 
preliminaries denote space norm 
point denote jj norm vector omit subscript 
dh denote hamming metric space dimension metric space ae employ notation min delta max diameter definition ball radius centered defined fq rg 
ring centered defined gamma fq denote volume ball radius fact standard page 
fact gamma denote gamma function 
gamma gamma gamma reduction point location equal balls key idea reduce ffl nns problems point location equal balls 
definition point location equal balls pleb radius balls centered fc devise data structure query point exists return return 
definition ffl point location equal balls ffl pleb radius balls centered fc devise data structure query point ffl exists return point ffl ffl ffl return ffl point closest ffl return 
observe pleb ffl pleb reduced nns ffl nns preprocessing query costs follows suffices find exact ffl approximate nearest neighbor compare distance main point section show reduction reverse ffl nns ffl pleb small overhead preprocessing query costs 
reduction relies data structure called ring cover tree 
structure exploits fact point set find ring separator cover 
construct allows decompose smaller sets js js log decomposition property searching possible quickly restrict search sets simpler weaker reduction ffl nn ffl pleb 
ratio smallest largest inter point distances ffl ffl rg generate sequence balls fb radius centered sequence forms instance pleb 
query find binary search minimal exists return approximate nearest neighbor 
reduction parameters query time overhead factor log log space overhead factor log 
simplicity reduction useful practice 
hand log space overhead unacceptable large general may unbounded 
final version show variation method storage reduced log give desired ffl bound 
definition ring ff ff fi ring separator jp ff jp jp ff jp fi ff ff 
definition set ae fl ffi cluster jp fl delta ffi jp fl ffi 
definition sequence sets ae called cover ae exists delta ae ffl jp bja ffl ja 
theorem ff fi properties hold 
ff ff fi ring separator 
contains fi ff cluster size gamma ff jp proof sketch note ff property false property trivially true 
general assume hold 
point radius define ffl jp gamma fir ffl jp clearly notice monotonically decreasing monotonically increasing 
follows exist choice say 
hold value min ffn implies ffn 
point minimal 
define fir follows jsj gamma ff notice fir implying delta fir jp jp ffn 
theorem fl ffi cluster algorithm produces sequence sets ae constituting ffi fl fl log cover proof sketch algorithm greedily computes cover algorithm cover fir fl delta log repeat choose fp jp endwhile gamma gamma oe order prove correctness algorithm suffices claims 
ffl ae follows termination condition outer loop 
ffl kg jp bja follows termination condition inner loop 
ffl kg ja ffi jp clearly inner loop repeated log times 
max log fl delta 
fl ffi cluster jb fl delta ja ffi jp ffl fl delta fl log delta delta log delta fl delta fl delta 
corollary ff fi properties hold 
ff ff fi ring separator fir 
ff cover ae jsj gamma ff fi log constructing ring cover trees construction ring cover tree recursive 
root properties corollary decompose smaller sets sets assigned children node note base case case sufficiently small omit 
store additional information node enables restrict nearest neighbor search children distance computations point location queries 
simplicity assume invoke exact pleb ffl pleb construction easily modified approximate point location 
cases depending properties holds 
fi ffl log ff gamma log case 
case call ring node 
define children fir gamma 
store information ring separator node case 
call cover node 
define gamma information stored follows 
ffl delta ffl kg log ffl ffl log fl 
notice fl delta log ffl ffl generate instance pleb balls instances stored theorem ring cover tree constructed deterministic time 
proof sketch construction proceeds follows 
level determine node ring cover node compute ring cover 
number levels sufficient consider root node construct follows 
firstly construct list containing points sorted increasing order 
takes log time 
apply method proof theorem 
specifically compute functions having lists easily implemented time 
try find ring done 
opposite case find cluster apply algorithm cover find cover 
verified algorithm runs time time assuming lists 
pleb generation adds factor 
total required time 
describe efficiently search ring cover tree 
suffices show node restrict search children small number tests 
min denote point closer search procedure follows omit obvious base case 
procedure search 
ring node ff ff fi ring separator fir ffl return search compute search return min 

cover node cover radius ae compute search gamma choose return min binary search find ffl nn compute search gamma return min return search 
analysis ring cover trees analysis ring cover tree construction establishing validity search procedure 
lemma procedure search produces ffl nearest neighbor proof sketch consider cases 
ring node 
consider gamma implying gamma 
know fir ffl ffl 
ffl 
implying gamma gamma follows gammar gammar ffl 

cover node 
similar case obvious 
gamma ffl ffl proofs lemmas omitted 
lemma depth ring cover tree log ff log 
lemma procedure search requires log theta log distance computations pleb queries 
lemma ring cover tree requires space log ff gamma ff log counting additional non data storage algorithms implementing 
proof sketch upper bound space requirement ring cover tree point set size cover node max max disjoint ja jaj gamma ff bja gamma jaj ring node gamma ff bound follows solving recurrence 
corollary algorithm pleb uses space instance size convex ring cover tree point set requires total space 
fact pleb instance generated ring cover tree delta ffl fl log point location equal balls techniques solving ffl pleb problem 
method similar elias bucketing algorithm works norm establishing proposition 
second uses locality sensitive hashing applies directly hamming spaces bears similarity indexing technique introduced greene parnas yao algorithm pairs vector intersection karp waarts zweig technical development different 
exploiting facts appendix instances ffl pleb generated solving ffl nn reduced ffl pleb log theta max ffl ffl 
fact appendix reduce 
locality sensitive hashing norm establishing proposition 
set resemblance measure broder cluster web documents 
assume loss generality balls radius 
bucketing method assume 
impose uniform grid spacing ffl clearly distance points belonging grid cuboid ffl 
fact side smallest cuboid containing balls length log max ffl ffl times side length grid cell 
ball define set grid cells intersecting store elements hash table information corresponding ball 
hashing preceding discussion universe bounded size 
preprocessing answer query suffices compute cell contains check stored table 
claim ffl jbj ffl see observe jbj bounded volume dimensional ball radius ffl fact ffl total space required theta ffl query time time compute hash function 
hash functions form mod mod prime hash table size family gives static dictionary access time 
hash functions evaluated arithmetic operations 
general norms modify ffl bound jbj applies unchanged 
theorem ffl algorithm ffl pleb theta ffl preprocessing evaluations hash function query 
locality sensitive hashing introduce notion locality sensitive hashing apply sublinear time similarity searching 
definition assumptions object similarity measure 
fact applicable similarity dissimilarity measures example dot product distance metric instance 
unify notation define ball similarity measure fp rg 
generalize notion ffl pleb pleb query point require answer 
definition family fh ug called sensitive ffl ffl order locality sensitive family useful satisfy inequalities dissimilarity measure similarity measure 
specified define function family fg algorithm follows 
integer choose functions independently uniformly random 
preprocessing store bucket total number buckets may large retain non empty buckets resorting hashing 
process query search buckets possible total number points stored bucket large interrupt search finding points including duplicates 
points encountered 
return return 
parameters chosen ensure constant probability properties hold 
exists 
total number collisions points gamma gamma gamma observe hold algorithm correct 
theorem suppose sensitive family exists algorithm pleb measure uses dn ae space ae evaluations hash function query ae ln ln proof sketch suffices ensure holds probability holds probability 
assume proof similar 
set log probability gamma expected number elements gamma colliding fixed expected number collisions markov inequality probability number exceeds probability property holds 
consider probability 
clearly bounded log gamma log log gammaae probability exists gamma gamma gammaae setting gammaae get gamma 
theorem follows 
apply theorem measures hamming metric set resemblance similarity measure defined pair sets ja bj ja bj measure apply family projections fast hashing ac operations 
second measure sketch functions earlier estimation resemblance sets proposition hamming metric ffl family fh ng ffl gamma gamma ffl sensitive 
corollary ffl exists algorithm ffl pleb dn ffl space ffl hash function evaluations query 
hash function evaluated operations 
proof sketch proposition theorem 
need estimate value ae ln ln gamma gamma ffl loss generality assume ln increase dimensionality adding sufficiently long string point 
observe ae ln ln ln gammar ln gamma ffl ln gamma ln gamma ffl multiplying numerator denominator obtain ae ln gamma ln gamma ffl ln gamma ln gamma ffl order upper bound ae need bound note negative 
inequalities gamma ffl gamma ffl gamma gamma gamma ln gamma gamma ln gamma ffl gamma ln gamma gamma ffl ffl gamma ln gamma ffl ffl gamma ln gamma ln step uses assumptions ffl ln conclude ae ffl gamma ln gamma ln ffl gamma ln gamma ln ffl hash function evaluation faster sparse data number non zero coordinates query point small 
suffices sample bits non zero entries vectors similar method works functions build static dictionary 
experience preprocessing space query time lower bound indicates 
particular implemented variant data structure case data stored disk 
data set color histograms images ranging disk accesses required order achieve small average error 
proposition set subsets xg set resemblance measure 
hash family sensitive fh max permutation xg corollary ffl exists algorithm fflr pleb set resemblance measure dn ae space ae evaluations hash function query ae ln ln fflr discuss applications corollary 
pair points consider similarity measure defined dot product delta dot product common measure information retrieval applications molecular clustering 
techniques indyk motwani venkatasubramanian solving approximate largest common point set problem applications image retrieval pattern recognition 
simple substitution parameters prove set binary vectors approximately weight pleb dot product measure queries fixed weight reduced pleb set resemblance measure 
fixed weight assumption easily satisfied splitting data points log groups approximately weight making partition weights potential queries 
applications pleb algorithms pleb procedures described cases points inserted deleted time 
randomized indexing method insertion performed adding point indices deletion performed deleting point indices 
bucketing method insertion deletion performed adding deleting elements hash table 
order apply methods assume points integer coordinates absolute value bounded say maximum number points time 
corollary data structure ffl pleb mg performs insertions deletions queries time ffl poly log log storage ffl corollary data structure ffl pleb mg performs insertions deletions queries time dn ffl storage dn ffl 
corollary follows fact order compute need keep unary representation explicitly 
sufficient coordinate keep track breakpoint sampled bits changing values clearly requires constant memory words coordinate 
keeping copies pleb simple method described section answer approximate closest pair queries 
sufficient check radius cell bucketing method bucket randomized indexing method contains different points smallest radius having property gives approximation closest pair distance 
time bounds operations corollaries multiplied factor log log ffl 
easy see bichromatic pair problem points colored consider pairs different colors solved time bounds 
combining techniques obtain method dynamic estimation closest pair 
eppstein showed dynamic closest pair problem application hierarchical agglomerative clustering greedy matching problems provided data structure making distance computations update operation 
scheme gives approximate answer sublinear time 
result approximate minimum spanning tree problem solved time bounded cost approximate bichromatic closest pair times 
obtain algorithm solving problem subquadratic time agarwal matousek 
ray shooting parametric search 
proceedings fourth annual acm symposium theory computing pp 

agarwal edelsbrunner welzl 
euclidean minimum spanning trees bichromatic closest pairs 
discrete computational geometry pp 

arya mount 
approximate nearest neighbor searching 
proceedings fourth annual acm siam symposium discrete algorithms pp 

arya mount narayan accounting boundary effects nearest neighbor searching 
discrete computational geometry 
arya mount netanyahu silverman wu 
optimal algorithm approximate nearest neighbor searching 
proceedings fifth annual acm siam symposium discrete algorithms pp 

andersson riis thorup 
static dictionaries ac rams query time theta log log log necessary sufficient 
proceedings th annual ieee symposium foundations computer science pp 

bentley 
multidimensional binary search trees associative searching 
communications acm 
bern 
approximate closest point queries high dimensions 
information processing letters 
berry dumais 
case study latent semantic indexing 
knoxville technical report cs january 
broder glassman manasse zweig 
syntactic clustering web 
proceedings sixth international world wide web conference pp 

buckley singhal mitra salton 
new retrieval approaches smart trec 
proceedings fourth text retrieval conference national institute standards technology 
burkhard keller 
approaches best match file searching 
communications acm 
ozsoyoglu 
distance indexing high dimensional metric spaces proceedings acm sigmod international conference management data sigmod 

effective nearest neighbours searching hyper cube applications molecular clustering 
proceedings th annual acm symposium computational geometry 
chan 
approximate nearest neighbor queries revisited 
proceedings th annual acm symposium computational geometry pp 

clarkson 
randomized algorithm closest point queries 
siam journal computing 
clarkson 
algorithm approximate closest point queries 
proceedings tenth annual acm symposium computational geometry pp 

clarkson 
nearest neighbor queries metric spaces 
proceedings ninth annual acm symposium theory computing pp 

ii cost salzberg 
weighted nearest neighbor algorithm learning symbolic features 
machine learning 
cover hart nearest neighbor pattern classification 
ieee transactions information theory 
deerwester dumais landauer furnas harshman 
indexing latent semantic analysis 
journal society fo information sciences 
devroye wagner nearest neighbor methods discrimination 
handbook statistics vol 
krishnaiah kanal eds north holland 
dobkin lipton 
multidimensional search problems 
siam journal computing 
dolev linial nisan parnas 
neighborhood preserving hashing approximate queries 
proceedings fifth annual acm siam symposium discrete algorithms pp 

dolev parnas 
finding neighborhood query dictionary 
proceedings nd israel symposium theory computing systems pp 

duda hart 
pattern classification scene analysis 
john wiley sons ny 
edelsbrunner 
algorithms combinatorial geometry 
springer verlag 
eppstein fast hierarchical clustering applications dynamic closest pairs 
proceedings ninth acm siam symposium discrete algorithms 
faloutsos barber flickner niblack petkovic equitz 
efficient effective querying image content 
journal intelligent information systems 
feller 
probability theory applications 
john wiley sons ny 
flickner sawhney niblack ashley huang dom gorkani hafner lee petkovic steele yanker 
query image video content qbic system 
ieee computer 
frakes baeza yates editors 
information retrieval data structures algorithms 
prentice hall 
frankl 
johnson lindenstrauss lemma sphericity graphs 
journal combinatorial theory 
fredman koml os szemer edi 
storing sparse table worst case access time 
journal acm 
friedman bentley finkel 
algorithm finding best matches logarithmic expected time 
acm transactions mathematical software 
gersho gray 
vector quantization data compression 
kluwer 
iii gionis indyk motwani 
similarity search high dimensions hashing 
manuscript 
greene parnas yao 
multi index hashing information retrieval 
proceedings th annual ieee symposium foundations computer science pp 

hastie tibshirani 
discriminant adaptive nearest neighbor classification 
international conference knowledge discovery data mining pp 

hotelling 
analysis complex statistical variables principal components 
journal educational psychology 
indyk motwani venkatasubramanian 
geometric matching noise combinatorial bounds algorithms 
manuscript 
johnson lindenstrauss 
extensions mapping hilbert space 
contemporary mathematics 
johnson 
embedding acta mathematica 
karhunen 
uber methoden der 
ann 
acad 
sci 
ser 


nearest neighbor filters multivariate data 
ieee workshop nonlinear signal image processing 
kleinberg 
algorithms nearest neighbor search high dimensions 
proceedings ninth annual acm symposium theory computing 
kushilevitz ostrovsky rabani 
efficient search approximate nearest neighbor high dimensional spaces 
proceedings 
karp waarts zweig 
bit vector intersection problem 
proceedings th annual ieee symposium foundations computer science pp 

linial london rabinovich 
geometry graphs algorithmic applications 
proceedings th annual ieee symposium foundations computer science pp 

lo eve 
fonctions de second 
processus brownian hermann paris 
matousek 
reporting points halfspaces 
computational geometry theory applications 

point location arrangements hyperplanes 
information computation 
megiddo 
applying parallel computation algorithms design serial algorithms 
journal acm pp 

minsky papert 
perceptrons 
mit press cambridge ma 
iv motwani raghavan 
randomized algorithms 
cambridge university press 
pentland picard sclaroff 
photobook tools content manipulation image databases 
proceedings spie conference storage retrieval image video databases ii 

volume convex bodies banach space geometry 
cambridge university press 
salton mcgill 
modern information retrieval 
mcgraw hill book new york ny 
samet 
design analysis spatial data structures 
addison wesley reading ma 
sellis roussopoulos faloutsos 
multidimensional access methods trees grown 
proceedings rd international conference large data bases vldb pp 

smeulders jain eds 
image databases multi media search 
proceedings international workshop idb mms amsterdam university press amsterdam 
uhlmann 
satisfying general proximity similarity queries metric trees 
information processing letters 

data structures algorithms nearest neighbor search general metric spaces 
proceedings second annual acm siam symposium discrete algorithms pp 

welch 
bounds information retrieval efficiency static file structures 
technical report mit june 
yao yao general approach dimensional geometric queries 
proceedings seventeenth annual acm symposium theory computing pp 

dimension reduction technique outline proof random projections technique dimension reduction 
combining proposition obtain result proposition 
definition metric spaces 
space said isometric embedding simply embedding exists map gamma ffl 
ffl call distortion embedding call embedding isometric 
frankl gave improvement johnson lindenstrauss lemma ffl embedding ae log jsj lemma frankl ffl sufficiently large set points ffl gamma ffl gamma ln exists map 
gamma ffl jju gamma jjf gamma jj 
ffl jju gamma proof proceeds showing square length projection unit vector random dimensional hyperplane sharply concentrated prove analogous fact 
different distribution able give simpler proof improve constants 
note constants important appear exponent time bounds resulting algorithm described proposition 
lemma unit vector positive integer random vectors chosen independently dimensional gaussian distribution 
delta define jjw jj fi 

pr fik theta exp gamma fi gamma ln fi 
pr fi theta exp gamma fi gamma gamma gamma ln fi 
proof sketch spherical symmetry distributed page 
define gamma 
follows exponential distribution parameter see page 
theta see follows gamma distribution parameters ff see page 
distribution dual poisson distribution obtain pr fik pr fik gamma ff random variable poisson distribution parameter fft 
clearly pr ff gamma gamma fft 
pr fik gamma gammafi 
gammafi 
gammafi gammafi fie gammav fi gamma ln fi implies desired result 
claim bound large constant fl ae 
pr fi gammav fi fi 
gammav fi ev ifi gammav fi fi ev ifi fi ev ifi second sum small fl ae bound 
sequence ev ifi decreasing fi bound sum fi gammav fi fi gammav fi gamma gamma fi component chosen independently standard normal distribution 
vi obtain desired result 
interesting question johnson lindenstrauss lemma holds norms 
partial answer provided results 
theorem point set ae ffl exist map log 
gamma ffl jju gamma jjf gamma jj 
ffl jju gamma theorem johnson lindenstrauss lemma hold specifically set points embedding distortion omega gamma log 
proof sketch give sketch proof theorem known facts 
fact linial london rabinovich point metric isometrically embedded fact linial london rabinovich graphs vertices embedded distortion log 
assume contradiction johnson lindenstrauss lemma holds distortion log 
graph vertices embed fact assumption reduce dimension distortion observe norms differ factor embedding distortion log contradicts fact 
proof sketch give sketch proof theorem known facts 
fact johnson ffl exists constant fi space ffl embedding fid fact linial london rabinovich ffl point metric space induced set points exists ffl embedding points coordinates set rg embedded isometrically rd function constructed implicitly sequence reductions find ffl isometric embedding fact image mapping 
find ffl isometric embedding fact image mapping 
notice dh jjs gamma jj may assume resides find ffl isometric embedding lemma 
possible choose suitable values ffl ffl ffl obtain desired result 
vii 
