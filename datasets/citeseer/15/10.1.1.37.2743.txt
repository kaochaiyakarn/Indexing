analysis bgp convergence properties timothy griffin gordon wilfong griffin research bell labs com research bell labs com bell laboratories lucent technologies mountain avenue murray hill nj border gateway protocol bgp de facto interdomain routing protocol exchange reachability information autonomous systems global internet 
bgp path vector protocol allows autonomous system override distance metrics policy metrics choosing best routes 
varadhan shown possible group autonomous systems independently define bgp policies lead bgp protocol oscillations converge stable routing 
approach addressing problem static analysis routing policies determine safe 
explore worst case complexity static analysis bgp routing policies 
model bgp define global sanity conditions routing policies related bgp convergence divergence 
condition show complexity statically checking np complete np hard 
dynamic routing protocols ip come basic flavors 
interior gateway protocols routing autonomous systems ases exterior gateway protocols global routing ases 
currently egp border gateway protocol bgp 
bgp path vector protocol type distance vector protocol best route selection autonomous system function routing policies best routes neighbors 
bgp allows routing policies override distance metrics policy metrics 
routing policies individual may locally reasonable guarantee interaction independently defined policies globally reasonable 
referring misconfiguration bgp 
bgp policies currently implemented locally little global knowledge 
collection locally configured policies give rise global routing anomalies 
routing policy conflicts manageable nature bgp possibility lead protocol diverge 
inconsistencies cause collection ases exchange bgp routing messages indefinitely converging set stable routes 
pure distance vector protocols rip guaranteed converge true bgp 
proof convergence rip protocols see example relies monotonicity distance metric 
bgp allows individual routing policies override shortest path choice proof technique extended bgp 
varadhan shown routing policies cause bgp diverge 
possible guarantee bgp diverge 
call bgp convergence problem 
bgp divergence introduce large amount instability global routing system 
studies examined dynamic behavior interdomain routing highlighted negative impact unstable routes 
aware instance routing instability caused protocol divergence impossible say divergent bgp systems arise practice 
hand economic importance internet believe worthwhile consider worst case scenarios provide safeguards possible 
broadly speaking bgp convergence problem addressed dynamically statically 
dynamic solution bgp divergence problem mechanism suppress completely prevent run time bgp oscillations arise policy conflicts 
route flap dampening dynamic mechanism address bgp convergence problem distinct drawbacks 
route flap dampening eliminate bgp protocol oscillations oscillations run slow motion 
second route flapping events provide network administrators information identify source route flapping 
route flapping caused policy conflicts look route flapping caused unstable routers defective network interfaces 
section consider required dynamic solution 
static solution relies programs analyze routing policies verify contain policy conflicts lead protocol divergence 
essentially approach advocated route arbiter project described govindan 
project components 
routing policy specification language high level vendor independent language specifying interdomain routing policies 
second internet route registries store distribute specifications 
third collection software tools called gives network administrators ability manipulate analyze specifications stored irr 
example tool generates low level router configuration files high level specifications 
explore worst case complexity convergence oriented static analysis bgp routing policies 
model bgp define conditions routing policies related bgp convergence divergence 
condition show complexity statically checking np complete np hard 
results suggest static analysis approach bgp convergence problem may practical 
routing policies may publicly available unsolvable bgp policies causing route flapping source problem may difficult locate may require high degree inter cooperation debug 
argues favor high level specification language interdomain routing policies 
high level policy specifications easily shared need arises 
outline 
section introduce bgp provide framework formalize complexity results 
bgp simpler realworld protocol 
example ignore address aggregation 
model evaluation graph captures possible asynchronous executions bgp protocol 
graph contains state stable routing system solution corresponding set routing policies solvable 
set policies unsolvable means protocol converge 
section examples bgp systems illustrate distinct types routing anomalies 
system called bad gadget unsolvable similar spirit examples 
operationally bad gadget causes divergence bgp protocol 
system surprise solvable converge stable routing 
single link failure transform surprise converge 
shows solvability robust link failure 
system disagree demonstrates fact bgp systems multiple distinct solutions solvable system converge solution 
type divergence possible disagree called weak divergence contrast strong divergence bad gadget possible exit evaluation cycle arrive solution 
operationally disagree give rise transient route oscillations persist 
system shows bgp system may solution contain trap leads strong divergence persistent route oscillations 
complexity results section 
problems consider reachability bgp system able import routes originated asymmetry bgp system allow asymmetric routing 
solvability bgp system solution 
single destination solvability bgp system single destination originated single solution 
uniqueness bgp system unique solution 
robustness solvable bgp system remain possible failure links 
show single destination solvability asymmetry reachability np complete solvability uniqueness robustness np hard 
section discuss bgp section complexity results section carry complex real world bgp 
argue complexity results question provide lower bound complexity answering questions real world bgp policies 
model bgp section presents version bgp designed formal investigation properties related protocol convergence 
reader familiar bgp protocol may wish consult 
model abstracts away details bgp making easier address convergence related issues 
important simplifications network addresses treated flat space ignoring containment aggregation attributes med origin atomic aggregate aggregator ignored assume link ases issues relating internal bgp ibgp ignored default routes ignored assume ases originate destination address assume global default value local preference attribute 
networks routes internet modeled undirected graph called graph vertices represent autonomous systems edges represent peering relationships 
vertex learns set route announcements immediate neighbors 
route announcements undergo transformations pass autonomous system 
route announcements records attributes nlri network layer reachability information destination network address hop hop vertex number path ordered list vertices traversed loc pref local preference call route announcement simply route 
path attribute records path route traversed passes vertex 
suppose vertex learned route path delta delta delta 
indicates originated passed vk passed case hop vertex passed information vk vertex path 
words hop needed model retain simplify presentation 
local preference attribute loc pref passed ases 
attribute indicate relative ranking different paths destination 
assume default value loc pref attribute dlp 
best route selection vertex choice different routes network destination nlri nlri uses choice function select select best route 
assume hop hop function select defined 
loc pref loc pref pick highest loc pref 
length path length path pick shortest path 
pick lowest hop break tie 
rule allows policy metrics override distance metrics 
set routes consistent distinct routes nlri nlri hop hop 
consistent notation select denotes subset arrived repeatedly applying select pairs routes nlri value 
easy see select contain distinct routes nlri nlri 
route record transformations types transformations applied route records pass vertex 
bgp specific transformation fixed protocol definition 
second type encoded transformation policies defined independently 
set routes represents bgp specific path vector transformation routes pass transformation enforces rules path records path vertices record traversed loc pref values passed vertex vertex accepts route path contains defined singleton sets follows 
path frg fg 
frg fr nlri nlri path path hop loc pref dlp 
notation denote list formed prepending define fr delta delta delta rng fr delta delta delta 
fv wg transformations policies 
import export transformations link import export transformations link 
notation import denotes transformation policy defines routes transformed importing notation export defining routes transformed exporting set routes sets import export denote application corresponding transformation policies routes transformation policy defined list policy rules 
hn head rule boolean predicate formed route attributes 
consider predicates constructed basic predicates nlri path path delta delta delta pn pattern number wildcard 
basic predicates closed boolean operations conjunction disjunction negation 
action rule reject allow attribute assignment implicit allow 
assignments attribute loc pref allowed 
policy rules define function sets routes way 
set routes true false 
note allow reject defined 
example import transformation path reject path loc pref dlp true loc pref dlp policy reject route path 
path value includes wildcard matches number 
second rule accepts route path length starts ends 
sets loc pref attribute dlp 
policy accept routes records default value loc pref evaluation states initial set route records models destinations originated assume path empty hop defined 
assume originate destinations 
assume nlri nlri 
suppose delta delta delta ng 
evaluation state tuple hc delta delta delta cn set route records represents contents state 
set empty meaning learned accepted routes 
evaluation state hc delta delta delta called initial state denoted dynamic behavior bgp system hg policy comprises graph set policy containing import export policies initial state defines destinations originated informally bgp system state activated compute best routes routes obtains immediate neighbors appropriate transformations 
set choices available state hc delta delta delta cn denoted choices defined fi jg import export evaluation state reachable reachable state non empty set activated ases gamma 
transition relationship hc delta delta delta cn gamma 
hc delta delta delta defined select choices 
easy prove induction set best route selection function applied consistent sense section 
definition clear import policy loc pref dlp equivalent allow 
note import export rules form true allow dynamic model reduces pure distance vector protocol 
terms terminology set corresponds loc rib set import export corresponds peer set export corresponds peer note activated simultaneously 
intent model possible evaluations asynchronous distributed execution bgp protocol 
activation sequence path finite infinite starting initial state gamma 
gamma 
gamma 
delta delta delta 
initial state unique identify activation sequence sequence subsets delta delta delta 
infinite activation sequence delta delta delta fair starved 
evaluation graphs solvable unsolvable bgp systems easy check finitely reachable states 
system evaluation graph eval defined directed graph reachable state vertex labeled eval reachable states gamma 
non empty directed edge labeled gamma 
eval 
state eval called final state fvg gamma 
system enters final state matter collection ases activated system remain state 
note final state nodes may routes certain destinations 
bgp system solvable final state eval 
system unsolvable 
notice unsolvable system converge stable state exists 
operationally means unsolvable systems bgp go protocol oscillation terminate 
example unsolvable system see bad gadget section 
solutions routing trees suppose initial route record destination nlri hc delta delta delta cn state eval 
vertex said path state route record nlri note case path delta delta delta 
easy see state destination subgraph defined path node corresponding route record 
graph denoted routing 
formally routing hc delta delta delta cn fj nlri dg vg nlri path delta delta delta vk graph connected path ends vertex originates show graph routing tree final state 
theorem suppose final state 
possible destination graph routing tree acyclic connected graph 
proof suppose final state destination originated vertex know routing connected see discussion needs shown routing acyclic 
assume cycle routing derive contradiction 
cycle paths routing delta delta delta vk delta delta delta wm union contains cycle 
vertex vx wy vx wy thinks route vx vx delta delta delta vk thinks route wy wy delta delta delta wm wrong 
loss generality assume wrong 
largest index vr route vr vr delta delta delta vk 
index route vr closest vx path delta delta delta vk 
vr route vr vr delta delta delta vk 
conclude vr activated change route learns currently longer valid 
show routing tree construct activation sequence arrive final state 
suppose tree root height set vertices distance root define activation sequence delta delta delta 
sequence activates vertices breadthfirst order vertex gamma 
sm denote path gamma 
gamma 
delta delta delta gamma 
sm eval 
theorem bgp system contains single destination suppose destination originated vertex final state 
routing routing tree rooted gamma 
proof induction depth point activation sequence length routing graph subtree height find vertex switch routes state means final state contradiction 
bgp system contains single destination analysis suggests brute force algorithm checking solvability 
enumerate subgraphs trees rooted 
attempt find tree gamma 
final state 

system solvable tree exists 
tree checking step polynomial size system checking state final requires checking change nodes fired time 
worst case step exponential number ases 
bgp systems section presents examples bgp systems illustrate distinct types routing anomalies 
bad gadget example unsolvable bgp system called bad gadget similar spirit examples 
execution bgp protocol possibly arrive stable routing 
bad gadget node represents 
suppose single destination originated 
prefers counter clockwise route length routes prefers route gamma gamma gamma 
policies bad gadget graph bad gadget 
implemented follows 
phi denote mod psi denote gamma mod 
export rules form nlri allow 
import node set policies import phi nlri path phi loc pref dlp nlri loc pref dlp import psi nlri allow 
assigns counter clockwise path length loc pref dlp routes get default value dlp 
possible routing trees bad gadget 
show bad gadget solution 
bad gadget need consider sixteen spanning trees rooted 
tree span graph solution direct route furthermore system symmetric need consider cases 
marked solid circle ases change selection best route marked pick counter clockwise route length revert direct route easy see system solution 
surprise bad gadget example constructed illustrate simple unsolvable system 
certainly network operator perspective contrived 
arguably plausible system called surprise sense solvable 
single link failure reasonable system falls equivalent bad gadget unsolvable 
system inspires definition robust problem section 
presents system called surprise 
originates destination popular web portal 
labels indicate capacity links having low capacity intermediate capacity highest capacity 
capacities relevant backup policies 
high quality network high speed link 
high speed links directly 
hand low quality link reason prefer go reach destination 
graph surprise 
simple backup plan destination designed failure link mind 
go link fails reasons 
mentioned likes destination 
second decides favor simply link higher capacity 
implicit backup plan assumption direct link remain operational event fails 
policy notation described detail section relevant import policy fragment path loc pref dlp path loc pref dlp true loc pref dlp rule matches route record originated traversed arriving 
record local preference incremented default local preference dlp 
second rule matches route record originated traversed indicated wildcard traversed arriving 
records local preference incremented 
reason second rule uses wildcard path attribute explicitly writing path network administrator implemented rule heard change number merged larger isp thought best hard code number rule 
administrator unaware direct link maintains 
rules accepts routes default value local preference 
implement policies modulo rotational symmetry way preferring counter clockwise peer backup case 
system clearly solvable system enter stable state soon picked hop routes going 
argue policies fairly plausible 
objection raised choice backup right link higher capacity 
observation correct explanation simple 
link upgraded low capacity lower high speed capacity 
network administrators updated policy reflect administrators fighting fires simply haven time update backup policy 
suppose bgp session link lost 
result cable cut misbehaving router 
note backup policies explicitly planned failure 
hard see system immediately transformed equivalent bad gadget unsolvable 
thing happens links go time happen point riding strand physical fiber fiber cut 
disagree system disagree illustrates fact bgp system multiple solutions 
graph disagree 
originates single destination nlri system prefer go get name disagree system 
rules implementing policy follows 
export true allow 
import nlri path loc pref dlp import nlri path loc pref dlp import nlri path loc pref dlp initial state system fg fgi nlri path loc pref dlp 
shows evaluation graph disagree arcs labels containing ignored simplicity import routes 
contents node indicate paths destination 
example state containing gamma gamma indicates route path 
final states indicated double borders 
note final states graph 
final state corresponding routing tree depicted right 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma evaluation graph routing trees disagree 
note fair activation sequence delta delta delta leads protocol divergence 
sequence arise practice relies precise sequence events occurring repeatedly 
activates system converge solution 
solvable systems sense activation sequence converge solution 
disagree example illustrated having solution mean activation sequence converge solution 
weak divergence disagree contrasted strong divergence bad gadget evaluation graph trap exit final state 
formally define trap subgraph eval contain final state arcs directed subgraph 
unsolvable systems truly pathological sense entire evaluation graph trap 
solvable bgp system trap evaluation graph 
answer 
consider system graph 
subgraph system equivalent system disagree originating single destination recall disagree distinct routing trees associated destination attached link goes center bad gadget accepts route takes direct route bad gadget bad gadget disagree graph 
configured oscillate center node accepts route system solution accepts direct route accepts route example shows solvable system unique solution contain trap 
starting initial state evaluation graph arc labeled lead trap 
complexity results section presents complexity results concerning various global properties bgp systems 
review npcompleteness reader encouraged consult 
consider problems 
reachability system destination originated exist final state eval node routing asymmetry system destination originated destination originated exist final state eval route reverse route 
solvability system exist final state eval unsolvability system final state eval solvability sd system having single destination originated exist final state eval unsolvability sd system having single destination originated final state eval trapped system eval contain trap 
see section definition trap 
robust solvable system having single destination originated remain solvable possible failure links unique system exist exactly final state eval unique sd system having single destination originated exist exactly final state eval 
import gamma nlri gamma path loc pref dlp import gamma nlri gamma path loc pref dlp import gamma nlri gamma path loc pref dlp import gamma nlri gamma path loc pref dlp import nlri loc pref dlp import nlri loc pref dlp import xn nlri xn path loc pref dlp import xn nlri xn path loc pref dlp import nlri loc pref dlp import nlri loc pref dlp import policies assign 
multiple system exist final state eval multiple sd system having single destination originated exist final state eval 
proofs rely reduction sat wellknown np complete problem 
instance sat consists set boolean variables formula variables negations formula form conjunction terms disjunction literals literal variable negation 
sat problem asks exists satisfying assignment instance 
example instance sat consist variables formula denotes negation variable notice setting true false satisfying assignment formula 
xn xn graph assign 
suppose variables fx delta delta delta xng 
order construct reductions sat bgp system called assign having nodes originates single route furthermore assign constructed boolean assignment corresponds unique path path corresponds unique boolean assignment graph assign 
policies assign enforce rules path route path route path route path route route chosen locked change 
way path route record correspond assignment variables export policies true allow 
import policies assign defined 
predicates form gamma path gamma path guarantee path contain rules similar rules disagree allow pair lock states 
example assign 
example presents system assign routing tree corresponds assignment true false false 
note size assign polynomial construction assign demonstrates solvable system size final states 
xn cm xn graph construction reachability 
theorem reachability np complete 
proof consider state check final state done time polynomial size bgp system need activate node check state remains unchanged 
testing node routing just requires seeing contains route state reachability np 
bad gadget xn cm xn graph construction solvability sd 
notice instance reachability determined tuple specifying system destination describe construction instance reachability instance sat satisfying assignment reachable instance constructible time polynomial size consist clauses cm disjunction literals literal xn xn graph defining topology system wish construct vertex set fw xn xn cmg edge set depicted 
notice graph assign extended nodes corresponding edges 
nodes export routes immediate neighbors 
portion system implements assign import policy rules 
define import gamma path path path loc pref dlp import path path path loc pref dlp instance reachability cm claim reachable cm satisfying assignment 
activation sequence results final state route cm exists satisfying assignment assume satisfying assignment exists 
true consider activation sequence fwg fl fzg fc easy check completion fact satisfying assignment implies route cm established 
suppose node activated due settings loc pref see choose hop 
define activation sequence fl 
consider activation sequence obtained performing claim results final state 
construction assign activating cause change trivial inductive argument shows change state activated 
activation sequence results final state 
policy rules case path passes satisfying assignment accept route announced gamma similarly accepts route announced 
activation sequence results final state route established cm suppose hand activation sequence leading final state cm route trivial check route go policy rules guarantee route 
policy rules guarantee route contain route 
setting true route false route gives satisfying assignment theorem asymmetry np complete 
proof modify construction way 
change destination node cm announce destination cm node statement asymmetry problem 
add link fw cmg node import rules prefer direct route cm import rules prefer route traverses assign subgraph 
follows instance sat satisfiable final state system asymmetric routing destinations complete proof observe checking state see final state asymmetric routing destinations done polynomial time 
theorem solvability sd np complete 
proof argued previous proof determining state final state done polynomial time solvable sd np 
construction proof theorem bad gadget section define reduction sat solvability sd 
reduction instance sat solution final state system 
bad gadget xn cm xn graph construction trapped 
construction instance solvability sd instance sat shown 
node policy rule stating accepts route obtains route time activated cause bad gadget diverge done interrupt loop 
accomplish interruption give nodes additional policy rules say accept route cm highest local preference value greater local preference connection 
activation sequence results cm having route subsequent activations result establishing cm hop change 
easy check executing activation sequence proof theorem followed activating system reached final state 
activation sequence result cm establishing route reach final state behavior bad gadget 
activation sequence results establishing route cm system unsolvable 
previous arguments satisfying assignment cm establishes route shown true final state 
corollary unsolvability sd np hard solvability np hard unsolvability np hard 
proof solvability sd unsolvability sd complements follows theorem 
claims follow fact shown special cases questions np hard 
theorem trapped np hard 
proof construction similar prove theorem 
modify graph way 
delete arcs cm 
second replace arc center bad gadget arc cm 
configure bad gadget diverge cm obtains route resulting graph pictured 
construction allows reduce sat trapped 
instance sat satisfiable evaluation graph bgp system trap 
theorem robust np hard 
proof integer greater 
instance sat construct bgp system graph pictured 
system subgraph equivalent reachability construction theorem cm obtain route satisfying assignment 
graph augmented instance bad gadget center linked addition paths ases delta delta delta wk edge directly cm bad gadget subsystem configured diverge edge fw edge connecting bad gadget rest graph 
prefers path path 
prefers reach cm path 
note system solvable regardless satisfiable 
claim satisfiable bgp system robust 
assume satisfiable 
suppose subset edges removed bgp system resulting system longer solvable 
means path include exactly edge system solution 
means edges removed rest graph evaluation sequence results cm having route case bad gadget subsystem diverge take route cm system solvable contradiction 
conclude exist set bgp system robust 
direction suppose bgp system robust 
means remove links system solvable 
path cm implies satisfiable 
theorem unique sd np hard 
proof problem unique sat problem determining unique solution sat instance know np complete 
construction theorem transform instances unique sat unique sd conclude unique sd np hard 
corollary unique np hard 
bad gadget wk xn cm xn graph construction robust 
theorem multiple sd np complete 
proof verifying states final states done polynomial time multiple sd np 
note construction proof np hardness unique sat takes instance sat creates instance unique sat exactly solution solution multiple solutions solutions 
case multiple sat problem deciding sat instance solution np hard 
construction theorem time transform instances multiple sat instances multiple sd show problem np hard 
corollary multiple np hard 
real world bgp 
dynamic behavior real world bgp considerably complex model 
bgp peering established tcp bgp peers initially exchange route information 
initial exchange incremental deltas exchanged 
bgp border router store local database routes learns peers 
changes accomplished sending messages announce new routes withdraw routes longer reachable 
implementation bgp may involve processes running asynchronously performing tasks receiving messages peers processing routes import policies choosing best routes processing best routes export policies sending messages peers 
reasons complete model real world bgp dynamics requires complex formalization 
contrast simplified model assumes local database route records computed atomic step includes real world operations importing route records peers selecting best routes exporting best routes peers 
model dispenses update messages assuming peer best routes directly visible 
words states evaluation graph correspond states arrived real world bgp messages transit queues processed 
chose analysis simplified model substantially reduced complexity stating proving complexity results 
noted despite simplification results remain valid complicated message mode real world bgp 
see consider construction proof np hardness reachability 
fact cm establishes route sat instance solution depends satisfying conditions various import rules independent actual evaluation model 
observation constructions described section basic construction reachability 
simplifications listed section implies complexity results section provide lower bounds complexity corresponding questions real world bgp 
bad gadget bad gadget disagree graph interfere 
mean imply types analysis carry simplified model real world bgp 
example multiple destinations considered may set solutions model dependent 
illustrate consider bgp system interfere pictured 
system extends graph section originates destination bad gadget attached way bad gadget attached configured diverge accepts direct route simplified model solvable single destination single destination solution destinations 
update compute best routes destinations 
formalism closer real world bgp possible solve system somewhat improbable sequence events establishes direct route establishes indirect route 
establishes direct route establishes indirect route implications research static analysis approach solving bgp convergence problem faces practical challenges 
autonomous systems currently widely share routing policies publish incomplete specifications 
don believe situation change 
second complete knowledge routing policies complexity results show checking various global convergence conditions np complete np hard 
approach static analysis rely heuristics exact solutions 
reasons believe practical solution bgp convergence problem dynamic 
pointed route flap dampening provide information differentiate policy induced route flapping sources routing instability 
possible solution extend bgp protocol carry additional information allow policy conflicts detected identified run time 
extension supply network administrators information identify routing oscillations identify autonomous systems policies involved 
routers configured immediately announcing routes involved policy induced oscillations 
routers configured way guarantee policy induced protocol oscillations persist 
course difficult challenge design dynamic mechanism scalable robust compatible address aggregation 
theoretical problems remain open 
complexity bound determining bgp system inherently convergent 
know possible inherently convergent system solution 
note answers questions may depend choice dynamic evaluation model see section 
lack complete characterization bgp policy inconsistencies give rise protocol oscillations 

brenda baker anindya basu dave kristol leonid libkin ordille jerry ryan bruce shepherd kannan varadhan helpful comments drafts 
alaettinoglu bates meyer 
routing policy specification language 
rfc 
alaettinoglu 
routing policy analysis tool set 
www isi edu ra 
bertsekas gallagher 
data networks 
prentice hall 
garey johnson 
computers intractability guide theory np completeness 
freeman 
govindan alaettinoglu eddy kumar lee 
architecture stable analyzable internet routing 
ieee network 
govindan reddy 
analysis inter domain topology route stability 
infocomm 

internet routing architectures 
cisco press 

routing information protocol 
rfc 
huitema 
routing internet 
prentice hall 
irr 
internet route 
internet route project www merit edu docs irr html 
johnson 
np completeness column ongoing guide 
journal algorithms 
labovitz malan jahanian 
internet routing instability 
sigcomm 
labovitz malan jahanian 
origins internet routing instability 
infocom 
paxson 
routing behavior internet 
transactions networking 
perlman 
interconnections bridges routers 
addison wesley 
rekhter li 
border gateway protocol 
rfc bgp version 
stewart 
bgp inter domain routing internet 
addison wesley 
varadhan govindan estrin 
persistent route oscillations inter domain routing 
isi technical report usc information sciences institute 
chandra govindan 
bgp route flap damping 
rfc 
