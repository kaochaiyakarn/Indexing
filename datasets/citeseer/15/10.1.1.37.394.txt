electronic notes theoretical computer science url www elsevier nl locate entcs volume html pages bi categorical axiomatisation concurrent graph rewriting fabio gadducci heckel es un 
edinburgh division informatics laboratory foundations computer science fabio dcs ac ed uk un 
paderborn department mathematics computer science uni paderborn de un 
islands department mathematics computer science ipc uib es concurrent semantics double pushout dpo graph rewriting classically defined terms shift equivalence classes graph derivations axiomatised construction free monoidal bi category 
contrast previous attempt categories bi categories allows define rewriting concrete graphs 
problem composition isomorphism classes rewriting sequences avoided 
step recovery full expressive power formalism purely algebraic description concept disconnected rules introduced rules interface graphs disconnected nodes edges 
proved reasonable assumptions rewriting disconnected rules enjoys similar concurrency properties classical approach 
theory graph transformation basically studies variety formalisms extend theories formal languages term rewriting respectively order deal structures general strings terms 
classical formalisms different ways defining entailment relation 
example operational definition rewrite relation term rewriting system states rewrite rule research partially supported british epsrc university edinburgh esprit br working group university paderborn spanish project pb university islands 
fl published elsevier science gadducci applicable term instance occurs sub term sub term may removed replaced corresponding instance leading derived term equivalently inductive definition may rewrite relation obtained smallest relation contains closed substitution context 
operational definition clearly intuitive inductive plays important role theory allows definitions proofs structural induction 
categorical view point inductive definitions various formalisms construction free categories equipped orthogonal algebraic categorical structure 
categorical models rewriting axiomatise rewrite relation impose equivalence rewriting sequences captures basic concurrency properties system 
double pushout dpo approach graph transformation operational definition far popular 
inductive definitions dpo graph transformation accepted theory term rewriting 
reason may strings terms straightforward inductive definition graphs 
possible interpretation suggests different choice basic operations see example different formulations dpo approach 
reason formulations models faithfully concurrent semantics dpo graph rewriting called shift equivalence derivations captures abstraction execution order independent steps 
reason failure fold 
approaches define rewriting partly graphs providing appropriate means composition isomorphism classes arrows 
consequence derivations shift equivalent identified 
operational point view problem recognised solved concept standard isomorphisms chosen family isomorphisms closed composition identities compose isomorphism classes rewriting sequences 
axiomatic description solution provided 
approaches applicable restricted cases allow graph rewrite productions gamma discrete interface graphs edges 
harm interested generated rewrite relation preservation edge modelled deletion re generation 
making discrete interface production set possible parallel derivations reduced items shared parallel application preserved applied productions 
similar data base transactions read locks may held transactions time write locks exclusive 
presentation refines approach rewrite relation graph rewrite system characterised construction gadducci free monoidal category 
conceptual idea consider graphs distributed states consisting local components connected interfaces 
distributed structure explicit representing graph arrow category spans usual category graphs graph homomorphisms arrow represents local component source target objects interfaces connected components 
arrow composition defined pushouts represents composition components common interface 
pushouts associative isomorphism associativity law horizontal composition category spans implies isomorphic spans source target equal 
leads mentioned problems composition rewrite steps 
reason associativity horizontal composition dropped replaced vertical isomorphism categories replaced bi categories 
restriction discrete interface graphs sets interface vertices relaxed allowing disconnected interfaces isolated nodes edges 
solves mentioned problems respect concurrency properties 
simply allow arbitrary graphs interfaces 
reasons technical conceptual 
conceptually interfaces distributed systems usually simpler component 
fact main principles system design minimise relations different components modules maximise internal connections 
technically disconnected graphs simpler freely generated monoidal operation disjoint union single nodes edges clearly possible arbitrary graphs 
different restrictions set admissible productions studied literature graph rewriting order show resulting class graph derivations enjoys interesting concurrency properties 
particular customary consider injective productions survey article 
productions obtained disconnecting interfaces injective productions typically non injective general assumptions injectivity production morphisms 
investigate expressive power graph rewriting non injective productions showing suitable sub classes productions disconnected interfaces satisfy desired concurrency properties 
recalling section simple properties parallelism introducing original notion correspondence comparison done section 
show system satisfying usual restriction injective productions disconnected system ffi built induces rewrite relation 
establish correspondence derivations suitable subclass derivations ffi derivations shift equivalent true gadducci fig 
sequential independent derivation 
corresponding derivations ffi 
section introduce notion dgs monoidal bi category presenting category spans graphs dgs monoidal bi category 
just preparatory section provide bi categorical axiomatisation shift equivalence graph derivations ffi 
concurrent graph transformation appendix recalls basic definitions regarding double pushout dpo approach graph transformation case general productions usual assumption components production span injective 
section introduce generalised setting concurrent derivations gts equivalence classes concrete derivations shift equivalence 
idea identify derivations differ scheduling independent steps 
equivalence classes similar derivation traces concrete graphs isomorphism classes 
avoid problems standard isomorphisms motivates bi categories 
introduce basic notions independence parallelism dpo graph transformation 
define shift equivalence new compact presentation correspondence sequential parallel derivations induced classical parallelism theorem 
definition sequential independence steps derivation 
call sequential independent exist graph morphisms gamma 
gamma 
ffi ffi intuitively consecutive steps sequentially independent may swapped applied resulting graph 
suitable conditions derivation simulated parallel application underlying productions 
definition parallel production derivation productions 
associated parallel production denoted component wise product spans direct parallel derivation direct derivation parallel production 
parallel derivation finite sequence direct parallel derivations 
gadducci set parallel derivations gts denoted 
implicitly assume definition recursively build parallel productions parallel ones 
noted derivation stands parallel derivation 
parallelism theorem states direct parallel derivation sequential independent applications component productions 
vice versa consecutive steps put parallel sequential independent 
theorem parallelism possibly parallel injective graph productions 
statements equivalent direct parallel derivation ae 
ii sequentially independent derivation oe classical formulation theorem correspondence derivations ii established analysis construction ae oe synthesis construction oe ae 
constructions produce intermediate result dpo steps context graph parallel derivation ae 
different employed leading respectively parallel sequential derivation 


parallel scheduling constructed gluing derived graphs steps common interface leading graphs respectively 
sequential scheduling obtained forming addition intermediate graph gluing composing embedded steps sequentially 
may consider primitive correspondence established analysis synthesis construction obtain descriptive way relating parallel sequential pairs dpo steps ae ae context graph definition correspondence ae direct derivations context graph derivation ae called parallel scheduling ae ae left diagram solid part represents steps graphs constructed pushouts respectively phi ae realized dpo 
derivations oe oe called sequential ae ae oe constructed right diagram graphs obtained pushouts respectively dpo diagrams symmetrically gadducci oo oo fflffl oo fflffl oo oo oo oo fflffl oo fflffl oo oo oo fflffl oo fflffl oo fflffl oo oo oo oo fig 
analysis synthesis correspondence 
fflffl ffic ffic fflffl fflffl ffic ffic oo ffig ffih fig 
parallel scheduling oe derivations ae oe analysis synthesis correspondence briefly correspondence steps ae ae parallel scheduling oe sequential scheduling ae ae shift equivalence sh theta equivalence relation derivations containing correspondence closed sequential composition derivations 
denoting parallel scheduling ae jae sequential ae ae ae ae respectively definition summarised equation ae ae sh ae jae sh ae ae notice defined isomorphism colimit constructions operations algebraic sense 
concurrency disconnected productions section introduce disconnected productions showing preserve degree concurrency injective ones 
definition disconnected graphs productions ti graph 
node isolated 
graph discrete disconnected jointly injective gadducci fflffl oo fflffl oo oo gg fig 
decomposition pushout complement injective 
production gamma gamma 
disconnected discrete interface graph graph transformation system disconnected discrete productions 
productions injective left hand side known pushout complements unique isomorphism 
general case 
may obtain chosen isomorphism class natural pushout complement characterised universal property 
definition natural pushout complement morphisms fig 

pushout complement hd dk called natural pushout complement hd exists surjective morphism making diagram fig 
commute 
set derivations gts natural pushout complements denoted 
rule match satisfying gluing conditions natural pushout complement built simply formalising operational intuition derivation sketched definition 
fact just need consider obvious arrow gamma gamma 
easy show morphism injective natural pushout complements isomorphic recover known uniqueness result injective productions proving dpo derivations involving injective productions natural 
definition provides canonical way disconnecting graph applying construction interface graph production yields corresponding disconnected production 
definition minimal disconnected graphs productions graph 
denote ffi minimal disconnected graph underlying pair ffi graph freely generated set edges set isolated nodes ng ffi obvious surjective graph morphism 
production 
associated disconnected production ffi gamma gamma 

words node isolated incoming edges graph discrete nodes isolated disconnected freely generated set edges set isolated nodes 
gadducci disconnected graph uniquely albeit informally determined previous definition describes function ffi set productions set disconnected productions 
function allows associate gts disconnected gts ffi fffi gg 
proposition shows systems induce rewrite relation graphs 
proposition disconnected rewrites gts ffi associated disconnected gts 
exists direct derivation exists direct derivation ffi 
please note proposition imply oneto correspondence class direct derivations ffi larger interface graphs allowed 
order compare concurrency properties gts associated disconnected gts ffi restrict injective productions consider derivations ffi natural pushout complements denoting class ffi 
proposition correspondence disconnected derivations injective gts ffi associated disconnected 
exists bijective function ffi ffi associates direct derivation direct derivation ffi ffi ffi hd dk ffi ffi dr proof sketch 
surjectivity ffi morphism obtained disconnecting interface graph definition ensures ffi dpo step natural pushout complement 
oneto correspondence proved epi mono factorisation reconstruct original production direct derivation 
function ffi extends derivations obvious way providing correspondence ffi ffi derivations derivations natural pushout complements ffi 
result shows preserves concurrency properties derivations sequential independence shift equivalence 
theorem concurrency disconnected productions injective gts 
possibly parallel productions ae sequential independent derivation ffi ae sequential independent 
ii ae oe derivations 
ae sh oe ffi ae sh ffi oe 
proof sketch 
statement obvious consequence definition definition ffi proposition independence property gadducci involve interface graph outgoing morphisms components left untouched ffi 
second statement follows showing derivations correspondence true images ffi 
aim exploit surjectivity disconnection arrows ffi compatibility colimits 
theorem main rational disconnected productions 
fact known discrete gts preserve generative power general gts degree concurrency 
disconnected gts better behaved maintaining relatively simple interface relevant practical point view argued 
structures bi categories appendix recalls basic definitions regarding monoidal bi categories standard classical presentation follows closely survey refer 
section introduce pseudo monoids presenting personal addition bi categorical folklore dgs monoidal bi categories spelling relationship cartesian bi categories 
notion monoidal bi categories relevant main results section reader skip section reading notational conventions 
exploited section presenting easy results bi categories spans 
cartesian dgs monoidal bi categories definition borrowed section slightly generalised order deal monoidal bi categories just gray monoids 
definition pseudo monoids object monoidal bicategory pseudo monoid tuple delta ff ae delta omega arrows ff ff delta omega id delta id omega delta delta ae 
omega id delta ae id omega delta invertible cells satisfying axioms ffl ff omega id delta delta id omega delta omega id ff delta id omega ff delta delta omega id omega id ff delta delta delta id omega id omega delta ff ffl id omega delta omega id ff ae omega id delta unique arrow induced monoidal structure 
sake readability play relevant part spelled incompletely coherence axioms skipping isomorphism cells induced bi categorical structure 
gadducci pseudo monoid pseudo monoid hr ff ae dual monoidal bi category op obtained reversing arrows bi categories equipped suitable pseudo monoids enjoy strong properties 
example possible prove generalising proposition objects monoidal bi category equipped pseudo monoid pseudo monoid respectively equipped monoidal category 
definition dgs monoidal bi categories object monoidal bi category call discrete equipped pseudo monoid pseudo monoid invertible cell delta id omega ff delta omega id functional equipped invertible cell delta id call bi category dgs monoidal object discrete functional 
introduced dgs monoidal categories order model suitable category graphs 
related presentations surfaced quite frequently years 
particular similar structure description bi categories spans presentation forms basis categorical description circuits 
close section trying explicit relationship 
definition adjoints cartesian bi categories arrows bi category adjunction ffl consists cells id ffl id satisfying axioms ffl delta ff delta ffl delta ae gamma ffl delta ff delta ffl ae delta gamma say left adjoint equivalently right adjoint ffl unit unit adjunction respectively 
adjunction reflection isomorphism cell reflection ffl isomorphism cell 
cartesian bi category monoidal bi category object equipped pseudo monoid pseudo monoid arrows left adjoints delta respectively 
bi category relations cartesian bi category object discrete 
dgs monoidal bi categories lack suitable cells id omega delta id 
ffl 
id bi categories relations adjoint delta reflection unit structure weaker assuming existence symmetry monoidal bi category 
restricted version suffices introductory purposes 
gadducci ffl delta id isomorphism cell 
results bi categories spans paradigmatic example dgs monoidal cartesian bicategories bi categories spans 
definition bi categories spans category chosen binary products pushouts initial object consider tuple cospan id ff ae set objects arrows cospan triples hf gi arrows cells hf gi hh ii arrows making diagrams commute id hid id arrow span composition defined chosen pushouts inducing cells ff ae universal property 
proposition category satisfying conditions definition 
cospan bi category relations 
proposition considered categorical folklore 
monoidal structure obtained chosen products 
pseudo monoidal structure injections mediating morphisms choosing delta id id id id id id pairing initial arrow respectively 
proposition obtained explicit lifting structure proposition category satisfying conditions definition cospan iso bi category included cospan restriction cells isomorphisms cospan iso dgs monoidal bi category 
bi category spans graphs restricted isomorphism cells shall environment category generation graph derivations 
restriction iso cells necessary cells meant represent rewrite steps explicitly specified productions 
dpo rewrites bi categories mentioned categorical descriptions systems simulate computations cells 
certain extent share view representing system category case discrete bi category augmented graph structure hom sets informally set cells authors assume collapsing category 
fact denote bi categories cartesian case structure unique isomorphism 
gadducci ffi fig 
mapping direct derivation closed composition 
general terms states arrows productions cells 
category freely generated graph bi category freely generated closing set cells relevant operations 
definition bi bi pair hc si monoidal bi category set cells hom sets bi morphism hf hi pair monoidal morphism function preserving source target cells expected way 
morphisms form category denoted 
proposition free bi categories forgetful functor mapping monoidal bi category underlying admits left adjoint 
see derive bi graph transformation system note graph satisfies condition definition bi categories cospan graph cospan iso graph defined 
definition disconnected gts cospan phi iso graph denote bi category fully included cospan iso graph disconnected graphs objects 
associated cospan phi iso graph underlying bi category cell hl li hr ri production gamma gamma 
cells representing derivations generated imposing production cells operations monoidal bi category 
definition mapping direct derivations disconnected gts direct derivation shown 
ffl elementary non parallel production cell associated hd ffi ffl phi parallel production cell associated ffi omega ffi delta injection morphisms coproduct 
cell hg dk hi hd ffi production depicted 
note due shift general chosen pushouts source target graphs direct derivations preserved gadducci pre post compose category cospan graph suitable isomorphism cells connecting source chosen pushout shown definition 
definition rewrites cells disconnected gts free bi category generated denote mapping associates direct derivation cell fi delta id hid delta fi fi cell unique arrow induced universal property similarly fi extends obvious way step derivations 
horizontal pre post composition necessary order extend map derivations hom category 
exists direct derivation exists cell corresponding bi category easy prove see inverse statement holds 
characterisation mere existence derivations generated cells fully satisfactory 
recover concurrency properties dpo graph rewriting described section parallelism theorem shift equivalence 
proved theorem main result stating mapping identifies derivations shift equivalent 
theorem shift equivalence disconnected gts ae oe derivations 
ae sh oe iff ae oe 
proof sketch 
proof goes structural induction cells derivations induction number steps derivations cells 
just give base case derivations direct correspondence 
assume derivations ae oe productions note ffi construction ffi omega ffi delta omega delta omega hc ffi ffi ffi delta delta hc ffi ffi ffi omega delta gadducci functoriality omega note bi category cell family strictly monoidal omega omega ae fi delta 
omega 
delta fi fi delta 
omega omega delta 
delta fi restrict attention cell fi delta 
omega omega hc ffi ffi ffi delta note denoting hc ffi ffi ffi hc ffi ffi ffi respectively arrows isomorphic cells induced monoidal structure 
omega omega delta 

omega omega delta 

omega omega delta 
omega 
delta 
id omega id 
delta 
omega id id omega 
delta 
omega id id omega 
delta please note concrete category id omega 
delta isomorphic dual cell induced universality 
obtain fi delta 
omega omega hc ffi ffi ffi delta coincides fi delta delta fi similarly second half mapping ae theorem holds 
result theorem allows characterise shift equivalence injective derivations disconnecting applying theorem 
corollary shift equivalence injective gts ae oe derivations 
ae sh oe iff ffi ae ffi oe ffi ae ffi oe corresponding disconnected derivations ae oe proposition 
part ongoing research effort started developing categorical syntax dpo approach graph rewriting 
pointed main questions left open 
involved concurrency properties graph derivations fact duality property holds dgs monoidal categories see 
gadducci despite correspondence got faithful level rewrite relation recast notions parallel derivation shift equivalence means categorical structure due restriction discrete productions 
concurrency results disconnected productions section section solved successfully problem equivalence induced cells coherence axioms bi categories coincides shift equivalence graph derivations happens permutation equivalence categorical models term rewriting see 
second problem concerning rewriting graphs avoided solved bi categories 
fact original goal axiomatic description graph rewriting fully achieved 
believe coherence theorem bi categories stating bi category bi equivalent category may provide solution problem 
fact interpretation bi equivalence represents transition concrete states preserving states number derivations amount concurrency 
technically speaking coherence isomorphisms bi categories provide algebraic description standard isomorphisms 
final step consists replacing concrete bi category cospan phi iso graph syntactic freely generated bi category eventually equipped dgs monoidal structure 
construction category spans graph discrete interfaces think straightforwardly extended disconnected graphs adding appropriate generators edges 
notice contrast dgs monoidal categories required symmetric additional structure essential generation graphs needed shift equivalence derivations 
fact graph derivations represented cells hom category empty interface graph unit object shown symmetric monoidal 
reader noticed fact additional structure bi categories introduced redundant purposes proof theorem left just suggest forthcoming direction emphasise relationship solution previously proposed related categorical approaches 
courcelle 
graph expressions graph rewritings 
mathematical systems theory 

bicategories 
midwest category seminar volume lectures notes mathematics pages 
springer verlag 
benson 
basic algebraic structures categories derivations 
gadducci information control 
carboni street 
bicategories spans relations 
journal pure applied algebra 
carboni walters 
cartesian bicategories journal pure applied algebra 
corradini ehrig lowe montanari rossi 
graph derivations double pushout approach 

schneider ehrig editors graph transformations computer science volume lncs pages 
springer verlag 
corradini gadducci 
categorical presentation term graph rewriting 
moggi rosolini editors category theory computer science volume lncs pages 
springer verlag 
corradini gadducci 
rewriting cyclic structures equivalence operational categorical description 
informatique th applications theoretical informatics applications 
appear 
corradini gadducci montanari 
relating categorical models term rewriting 
hsiang editor rewriting techniques applications volume lncs pages 
springer verlag 
corradini montanari 
algebraic semantics structured transition systems application logic programs 
theoret 
comput 
sci 
corradini montanari rossi ehrig heckel lowe 
algebraic approaches graph transformation basic concepts double pushout approach 
rozenberg editor handbook graph grammars computing graph transformation 
world scientific 
day street 
monoidal bicategories hopf 
advances mathematics 
ehrig 
algebraic theory graph grammars 
claus ehrig rozenberg editors graph grammars application computer science biology volume lncs pages 
springer verlag 
ehrig 
kreowski 
categorical approach graphic systems graph grammars 
algebraic system theory volume lecture notes economics mathematical systems pages 
springer verlag 
ehrig schneider 
graph grammars algebraic approach 
book editor switching automata theory pages 
ieee computer society press 
gadducci gadducci heckel 
inductive view graph transformation 
parisi presicce editor trends algebraic development techniques volume lncs pages 
springer verlag 
gordon power street 
coherence volume memoirs american mathematical society 
american mathematical society 
hasegawa 
models sharing graphs 
phd thesis university edinburgh 
heckel 
open graph transformation systems new approach compositional modelling concurrent reactive systems 
phd thesis technische universitat 
walters 
bicategories processes 
journal pure applied algebra 
walters 
span graph categorical algebra transition systems 
johnson editor algebraic methodology software technology volume lncs pages 
springer verlag 
kelly street 
review elements categories 
kelly editor sydney category seminar volume lecture notes mathematics pages 
springer verlag 

kreowski 
manipulation von 
phd thesis technische universitat berlin 

basic bicategories 
available cam ac uk 
meseguer 
conditional rewriting logic unified model concurrency 
theoret 
comput 
sci 
meseguer montanari 
petri nets monoids 
information computation 
power 
formulation rewrite systems 
pitt dybjer pitts poign editors category theory computer science volume lncs pages 
springer verlag 
rozenberg editor 
handbook graph grammars computing graph transformation 
world scientific 
stell 
foundations equational deductions categorical treatment equational proofs unification algorithms 
pitt poign editors category theory computer science volume lncs pages 
springer verlag 
stell 
categorical aspects unification rewriting 
phd thesis university manchester 
gadducci street 
categorical structures 
editor handbook algebra pages 
elsevier 
introductory appendix aim appendix provide reader precise definitions graph transformations bi categories 
standard nature convinced include appendix order slow knowledgeable reader allowing article self contained 
dpo approach graph transformation presentation graph transformation tailored needs representation theorems section section 
definition graph directed graph tuple ti set edges set nodes source target functions 
graph ti components shall denoted respectively 
definition graph morphism graphs 
graph morphism pair functions hf functions preserve source target edge 
graphs graph morphisms form category denoted graph 
literature graph rewriting customary consider injective productions survey article 
ensures interesting concurrency properties existence canonical representatives equivalence classes derivations respect shift equivalence 
non injective productions arise disconnecting interface injective production cf 
definition 
definitions assumptions injectivity production morphisms 
definition graph production derivation graph production composed production name span necessarily injective graph morphisms gamma gamma 

graph transformation system gts set productions different names 
appropriate denote production name graph production gamma gamma 
injective injective 
graph transformation system injective productions 
double pushout diagram diagram top bottom spans pushouts squares graph 
gamma gadducci fflffl dl oo fflffl fflffl oo fig 
dpo direct derivation gamma 
production direct derivation production hd dk dr denoted derivation gts finite sequence direct derivations pn dn productions operationally application production graph consists steps 
match chosen providing occurrence objects matched gamma removed leading context graph objects gamma added obtaining derived graph construction context graph abstractly described pushout complement formally graph morphisms dk square left pushout 
existence pushout complement direct derivation characterised gluing conditions dangling condition ensures structure obtained removing objects deleted graph edges left dangling source target node 
identification condition states objects left hand side may identified match belong interface preserved 
monoidal bi categories roughly bi category set objects pair objects category 
sake space axioms equationally intuitive diagrammatic way 
definition bi categories bi category tuple id ff ae set objects indexed elements family categories hom categories family functors theta id family objects id jc ff id ae id natural isomorphisms satisfying axioms pushout exists graph complete 
sake readability indexes dropped composition delta inside hom categories 
identity object hom categories id usually denoted object 
gadducci ffl ff ida delta ae ffl ff delta ff delta ff ff hk delta ff denote arrows cells bi category objects arrows hom categories respectively fi mean fi cell category cells composed vertically fl cell form composite fi delta fl operation horizontal composition cells fi fi fi fi computational models categories cells represent computations system composed sequentially parallel respectively operations vertical horizontal composition category see section sense similar analogy holds bi categorical setting 
definition morphisms bi transformations modifications bi categories 
morphism oe consists function family functors natural transformations oe oe id id satisfying axioms ffl oe delta oe delta ff ff delta oe delta oe ffl oe delta oe ida delta ae ae ffl oe delta oe id delta homomorphism oe morphism components oe isomorphisms strict components identities 
bi transformation oe oe morphisms consists family arrows oe natural transformations oe oe oe satisfying axioms ffl oe delta ae gamma oe delta oe oe oe delta oe ida ffl ff oe delta oe delta gamma oe delta oe delta ff oe delta oe oe oe delta oe bi transformation strong components oe isomorphisms 
modification gamma oe oe bi transformations consists family cells gamma oe satisfying axiom ffl gamma delta oe delta gamma 
modification invertible components gamma isomorphisms 
machinery introduce monoidal bi categories 
definition monoidal bi categories monoidal bi category tuple hc omega ff ae pi xii bi category omega thetac homomorphisms ff omega omega omega omega omega unit bi category denote corresponding object gadducci ae omega strong bi transformations ffl xi ff omega omega ae ffl pi omega ff ff omega ff omega ff omega ff omega invertible modifications satisfying instances non abelian condition left right normalisation axioms definition 

monoidal bi categories 
monoidal morphism oe consists morphism oe strong bi transformations omega omega invertible modifications ffl omega omega ff ff omega omega ffl omega ide ae ae ffl ide satisfying instances axioms definition 
reader spelling previous definition incomplete way 
just wanted give reader chance check diagrams explicitly mentioning modifications involved dealing coherence issues simply assuming problem solved 

