power quantum finite state automata john watrous computer science department computer sciences department university university wisconsin budapest hungary madison wisconsin introduce way way quantum finite state automata qfa qfa quantum analogues deterministic nondeterministic probabilistic way way finite state automata 
prove facts regarding qfa 

ffl qfa recognizes non regular language fa sided error bounded ffl halts linear time 
specifically accepts string probability rejects string probability gamma ffl 

regular language reversible quantum way finite state automaton recognizes runs linear time 
fact possible define qfa recognize non context free language fa jm technique 
consequently class languages recognized linear time bounded error qfa properly includes regular languages 
known way deterministic nondeterministic polynomial expected time bounded error probabilistic finite automata recognize regular languages follows qfa strictly powerful classical models 
case way automata situation reversed 
prove class languages recognizable bounded error qfa properly contained class regular languages 
growing body evidence suggests computational machines behavior governed quantum physics may considerably mail cs hu 
mail watrous cs wisc edu 
supported part nsf ccr 
powerful classical counterparts 
undoubtedly celebrated results peter shor factoring discrete logarithm algorithms quantum computers 
results include grover quantum searching algorithm various oracle results regarding power quantum computers 
examples regard power universal quantum machines quantum turing machines quantum circuits quantum cellular automata 
define new restricted quantum computational models way way quantum finite state automata qfa qfa 
main focus qfa quantum analogue deterministic nondeterministic probabilistic way finite state automata dfa nfa pfa 
dfa nfa known equivalent power ordinary way deterministic automata shown freivalds nonregular language fa jm recognized pfa arbitrarily small error 
pfa fa defined freivalds require exponential expected time subsequently shown dwork stockmeyer pfa recognizing non regular language bounded error probability take exponential expected time infinitely inputs 
dfa nfa polynomial expected time bounded error pfa recognize exactly regular languages 
show qfa strictly powerful dfa nfa pfa sense linear time bounded error qfa recognize class languages properly includes regular languages 
specifically prove 
ffl qfa recognizes non regular language fa sided error bounded ffl halts linear time 
specifically accepts string probability rejects string probability gamma ffl 

regular language reversible quantum way finite state automaton recognizes runs linear time 
prove exhibiting sequence linear time qfa fa error probability approaching zero 
note non contextfree language fa recognized bounded error linear time qfa technique 
order prove apply technique result lange mckenzie tapp regarding reversible simulation deterministic turing machines finite automaton case 
corollary reversible way finite state automata equivalent power way way deterministic finite state automata 
contrast fact way reversible finite state automata known powerful deterministic finite state automata 
prove elementary result regarding qfa similar way reversible finite state automata qfa strictly powerful way deterministic nondeterministic probabilistic finite state automata dfa nfa pfa 
fact bounded error qfa recognize regular languages demonstrated modifying slightly proof due rabin analogous result probabilistic automata 
order demonstrate containment class languages recognized bounded error qfa regular languages proper simple example regular language show fa bg recognized bounded error qfa 
independent study slightly different model way quantum finite state automata appeared 
remainder organization 
section define way quantum finite state automata section provide formedness criterion qfa discuss method formed qfa easily specified 
section bounded error linear time qfa language fa section show regular language recognized way reversible quantum finite state automaton 
discuss way quantum finite state automata section conclude mention open problems section 
definition way quantum finite automata way quantum finite state automaton qfa consists finite state control way tape head scans read input tape 
formally qfa specified tuple sigma ffi acc rej finite set states sigma finite input alphabet ffi transition function described initial state acc ae rej ae sets accepting states rejecting states respectively 
elements acc rej halting states elements non qn acc rej non halting states 
assumed non acc rej 
addition input symbols sigma symbols sigma mark left right ends input string respectively 
input alphabet symbols form tape alphabet gamma sigma fc usual definition way automata assume tape qfa circular sense machine scanning tape square subsequently moves tape head right scanning tape square moves tape head left tape head scanning tape square tape square respectively 
simply convenient way restrict qfa moving outside boundaries input tape alternative restricting movement tape head symbols introduces unnecessary complications quantum case 
contents tape described mapping gamma number distinct tape squares tape 
mapping referred tape identified length tape denoted jxj 
technical reasons assumption tapes length 
number configurations qfa tape length precisely possible locations tape head jqj internal states 
fixed denote set configurations cn identify cn theta obvious way 
superposition tape length norm element finite dimensional hilbert space hn cn space mappings cn usual inner product 
dirac notation express superpositions 
cn fi fi ff denotes unit vector takes value elements hn may expressed linear combinations basis vectors 
superposition fi fi ff cn ff fi fi ff ff amplitude associated superposition fi fi ff ready describe transition function ffi 
mapping form ffi theta gamma theta theta gamma interpreted follows 
oe gamma gamma ffi oe represents amplitude machine currently state scanning symbol oe change state move tape head direction tape ffi induces operator ffi called time evolution operator tape jxj follows 
ffi fi fi ff ffi fi fi mod jxj ff jxj extended jxj linearity 
ffi fi fi ff superposition obtained tape placed superposition fi fi ff run unobserved steps 
order superposition valid unit norm 
restriction inherent quantum theory necessity apparent section regarding observables 
machine guarantees valid superposition evolve valid superposition said formed 
hn finite dimensional corresponds time evolution operator ffi tape unitary operator 
note condition quite restrictive 
example arbitrary dfa reversible yields relations directly correspond formed qfa 
section provide criterion determine qfa formed 
observables time evolution operator ffi specifies qfa evolve tape assuming qfa observed outside observer 
assume machine observed order yield information computation 
information obtained particular sort observation effect observation machine described observable 
observable qfa decomposition hilbert space hn subspaces hn phi delta delta delta phi pairwise orthogonal 
corresponding particular distinct outcome qfa tape superposition fi fi ff observed observable outcomes result modified certain way 
specifically fi fi ff projection fi fi ff fi fi ff fi fi ff delta delta delta fi fi ff result observation follows 

outcome observed random outcome seen probability fl fl fi fi fffl fl 
immediately observation machine collapse superposition ik fi fi ff corresponds particular outcome observed 
example observable enumeration cn span phi fi fi ff psi 
outcome observation taken simply description corresponding configuration 
probability seeing configuration absolute square amplitude associated configuration observation machine collapse superposition fi fi ff whichever configuration observed 
different observable correspond determining entire configuration machine machine accepting rejecting non halting state 
fixed define acc acc theta rej rej theta non non theta acc span phi fi fi ff fi fi acc psi rej span phi fi fi ff fi fi rej psi non span phi fi fi ff fi fi non psi observable corresponding decomposition hn acc phi rej phi non outcome observation accept reject non halting accordingly 
example amplitude associated halting configuration superposition result observation observable non halting probability superposition collapse altered observation 
languages recognized qfa discuss languages recognized qfa 
input string sigma define corresponding tape xw length jwj takes form xw xw jwj xw jwj 
exceptional case input string empty string case corresponding tape take form defined arbitrarily 
say qfa run input means tape described xw computation begins superposition fi fi ff step machine observed observable defined previous paragraph 
computation continues result observation accept reject time computation halts 
computation treated manner probabilistic machine input results accept probability greater element language recognized 
probabilistic case classes languages may defined placing restrictions qfa recognize running time probability error interested class languages recognized polynomial time qfa error probability bounded away 
defining formed qfa interested qfa wellformed necessary able determine machines satisfy condition 
proposition analogous bernstein vazirani criterion formedness quantum turing machines allows 
proposition qfa sigma ffi acc rej formed choice oe oe oe gamma hold 
ffi oe ffi oe ae ffi oe ffi oe ffi oe ffi oe gamma ffi oe ffi oe gamma proof 
ffi unitary vectors ffi fi fi ff jxj orthonormal 
condition equivalent statement fl fl ffi fi fi fffl fl ffi fi fi ff ffi fi fi ff conditions equivalent ffi fi fi ff ffi fi fi ff ffi fi fi ff ffi fi fi ff respectively jxj 
jxj conditions sufficient show ffi fi fi ff ffi fi fi ff ffi fi fi ff ffi fi fi ff clear ffi fi fi ff ffi fi fi ff squares away tape head qfa moves square step 
vectors ffi fi fi ff jxj orthonormal conditions satisfied 
proposition provides relatively simple criterion determine qfa formed 
simplify matters mention method formed machines easily specified 
essence method decompose transition function ffi parts transforming states moving tape head 
consider hilbert space set internal states qfa suppose linear operator oe oe gamma function gamma 
define transition function ffi ffi oe ae omega fi fi oe fi fi ff omega fi fi oe fi fi ff denotes coefficient fi fi ff oe fi fi ff see proposition wellformed omega fi fi oe fi fi ff omega fi fi oe fi fi ff ae oe gamma 
equivalently formed oe unitary 
example qfa illustrate method show qfa language defined 
note immediate formed qfa language typical dfa dfa reversible 
define sigma ffi acc rej follows 
fq sigma fa bg acc fq rej fq define fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff gamma fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff define ffi 
oe unitary inspection formed 
consider inputs example suppose input string abba corresponding tape satisfies 
sequence superpositions run fi fi ff 
fi fi ff 
fi fi ff 
fi fi ff 
fi fi ff 
fi fi ff 
fi fi ff 
fi fi ff step observation observable yields non halting certainty step result observation reject certainty input rejected inputs rejected similar manner 
input reader may verify machine enter superposition fi fi jwj ff jwj steps previously halting state accept 
note values oe fi fi ff define transitions encountered computation input defined values arbitrarily way oe unitary 
general need specify values matter long vectors orthonormal remaining values assigned arbitrary fashion resulting operator unitary 
qfa fa section show error bound ffl exists qfa accepts nonregular language fa error bounded ffl linear time 
define mn sigma ffi acc rej follows 
sigma fa bg fq fr max gamma fs ng acc rej fq fs ng 
oe take values indicated extend unitary oe vectors fv oe fi fi ff orthonormal inspection 
define ffi defined manner described section 
proposition fa bg positive integer fa mn accepts probability mn rejects probability gamma case mn halts jwj steps certainty 
proof 
computation mn consists phases 
phase rejects input form second phase rejects probability inputs phase straightforward similar example section 
input indicated form reject state entered computation ends 
second phase begins machine state tape head reading right marker 
start second phase computation branches paths indicated states amplitude paths tape head moves deterministically left marker way jth path tape head reads symbol remains stationary steps moves left reads symbol remains stationary gamma steps moves left 
input tape head requires precisely gamma steps move right left marker jth path 
assumption gamma gamma follows distinct computation paths reach symbol time input form 
reaching symbol computation path splits quantum fourier transform yielding single accepting state rejecting states fs ng 
consider case input form computation paths reaches symbol time superposition machine immediately performing quantum fourier transform exp fi fi ff fi fi ff observable yields result accept probability 
suppose input form computation paths reaches symbol different time cancellation rejecting states 
possible path lengths conditional probability observation results accept time corresponding path length halting state observed 
follows total probability observation results accept consequently input rejected probability gamma possible computation path clearly length jwj 
path ends halting configuration mn halt jwj steps certainty 
fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff exp gamma delta fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi ff fi fi gammaj ff fi fi ff fi fi ff fi fi ff fi fi gamma ff gamma fi fi ff fi fi gamma ff gamma gamma specification transition function mn method extended show free languages recognized bounded error linear time qfa 
corollary ffl exists qfa recognizes language fa sided error bounded ffl halts linear time 
proof 
sketch qfa defined functions similarly mn runs phases checks see input form checks part string see fb checks initial part string see fa 
details appear final version 
reversible simulation dfa section technique result due lange mckenzie tapp regarding space efficient reversible simulation deterministic turing machines show arbitrary way deterministic finite automaton dfa simulated way reversible finite automaton rfa may simply define formed qfa transition amplitudes may take values 
construction considerably simpler turing machine case 
dfa formally specified quintuple sigma familiar way see example 
define qfa sigma ffi acc rej accept language order allow behave correctly reading symbols extend follows essentially converting equivalent dfa 
fs acc rej acc rej elements define oe oe oe sigma oe acc oe rej snf oe values undefined 
define oe fs oe oe oe fs oe sg fix ordering set max min denote maximum minimum functions relative ordering subset succ element larger assuming element 
may define theta gamma acc acc rej rej technique section define ffi 
oe gamma oe defined oe fi fi ff fi fi succ oe gamma ff max oe fi fi oe ff max oe oe gamma oe fi fi gamma ff fi fi ff oe fi fi min oe gamma ff oe note oe extended permutation phi fi fi ff fi fi psi inducing unitary operator 
define gamma gamma ffi defined 
proposition dfa defined 
sigma accepts accepts jwj steps accept rejects jwj steps 
proof 
viewing dfa moves tape head right set configurations input length theta undirected graph set vertices theta edge vertices undirected graph representing yields relation input 
connected component contains initial configuration 
cycles contain exactly vertex corresponding halting state acc rej 
may view tree single halting configuration vertex root leaves tree including vertex representing initial configuration possibly configurations predecessors simulates input traversing reversible manner 
specific manner performs traversal described 
configuration correspond configurations gamma gamma interpreted follows 
configuration indicates subtree rooted vertex just traversed configuration gamma gamma subtree rooted vertex traversed 
consider 
wk wk fs assume delta delta delta ordering suppose gamma vertex children 
configuration max wk configuration succ wk gamma gamma gamma gamma 
tree rooted traversed 
suppose configuration 
max wk configuration 
enters configuration subtrees rooted children traversed 
suppose configuration gamma 
configuration min wk gamma gamma gamma gamma subtree rooted vertex traversed 
case predecessors wk configuration immediately follows gamma 
subtree rooted consists single vertex case traversed 
traversing manner eventually enter configurations acc rej consequently accepts rejects accordingly 
clear halts jwj steps jwj configurations configuration may entered halting configuration reached 
true rfa eventually halts 
regular language recognized dfa result 
corollary regular language exists rfa recognizes way quantum finite automata section briefly discuss way quantum finite automata qfa 
contrast fact way quantum finite automata powerful classical way finite automata qfa shown strictly powerful classical way finite automata 
interest simplicity define qfa subset qfa tape head may move right added restriction computation may continue jwj steps input symbol including markers read exactly 
superfluous qfa existence left marker allows model simulate situation result observation necessarily correspond directly classical state observable may correspond orthogonal decomposition acc phi rej phi non existence right marker allows model simulate situation second observable may entire input read 
difficult show formed qfa sigma ffi acc rej unitary operator oe acting oe gamma ffi oe ae omega fi fi oe fi fi ff fact yields means analysis qfa simplified discuss 
define theta theta elements represent total states follows machine described acc rej far computation accepted probability acc rejected probability rej probability case current superposition internal states fi fi ff normalized 
acc rej non projections span phi fi fi ff fi fi acc psi span phi fi fi ff fi fi rej psi span phi fi fi ff fi fi non psi respectively 
oe gamma evolution symbol oe read described operator oe defined follows 
oe acc rej 
gamma non oe acc kp acc oe rej kp rej oe delta oe delta delta delta oe gamma define oe delta delta delta oe example acc rej cw gamma fi fi ff delta accepts probability acc define norm acc rej jp acc jp rej fv kvk 
clearly represents state valid qfa straightforward calculation reveals exists fixed constant kt gamma gamma gamma furthermore shown set satisfies property exists kv gamma finitely elements proposition language recognized qfa bounded error 
regular 
proof 
sketch proof essentially proof theorem adjusted quantum case 
sigma ffi acc rej qfa recognizes probability error bounded gamma ffl 
write jl sigma wy relation jl equivalence relation partitions sigma finitely equivalence classes regular 
sigma set strings pairwise inequivalent respect jl order prove proposition suffices show finite 
exists sigma wy cw fi fi ff cw fi fi ff kt gamma ffl error probability bounded away ffl 
consequently kv gamma ffl set phi cw gamma fi fi ff delta fi fi psi finite 
follows finite 
note containment class languages recognized qfa bounded error regular languages proper 
simple example regular language recognizable bounded error qfa provided proposition 
proposition language fa bg recognized qfa bounded error 
proof 
qfa recognizes oe delta delta delta oe gamma write non oe delta delta delta non oe fi fi ff inf fk cw fa bg wa wb conclude recognize bounded error 
assume 
choose cw follows fa bg particular nonnegative integer fl fl fl non cwa fl fl fl sequence non cwa bounded sequence finite dimensional hilbert space limit point 
exist integers fl fl fl non cwa gamma non cwa jfl fl fl 
shown implies fixed constant independent fl fl fl cwa gamma non cwa fl fl fl follows fl fl cwa gamma fi fi ff delta gamma gamma fi fi ff delta fl fl fixed may chosen arbitrarily small accept wa reject wab error probability bounded away 
open problems number questions left open 
interesting question languages recognizable polynomial time bounded error qfa bounded error exponential time pfa vice versa 
similar lines languages recognized exponential time qfa polynomial time qfa 
various generalizations qfa multi head qfa multidimensional qfa qfa general types observables defined quantum analogues devices finite automata interactive proof systems qfa verifiers 
relations models classical counterparts 
acknowledgments eric bach anne condon mike tardos helpful comments discussions 
bernstein vazirani 
quantum complexity theory preliminary 
proceedings fifth annual acm symposium theory computing pages 

quantum computation 
complexity theory retrospective ii 
springer verlag 
brassard 
quantum challenge structural complexity theory 
proceedings th annual ieee conference structure complexity pages 
brassard 
exact quantum polynomial time algorithm simon problem 
preprint 
appear proceedings fifth israeli symposium theory computing systems 
deutsch 
quantum theory church turing principle universal quantum computer 
proceedings royal society london 
deutsch 
quantum computational networks 
proceedings royal society london 
deutsch jozsa 
rapid solutions problems quantum computation 
proceedings royal society london 
le 
decision procedure formed linear quantum cellular automata 
proceedings thirteenth symposium theoretical aspects computer science pages 
dwork stockmeyer 
power way probabilistic finite state automata 
proceedings th annual symposium foundations computer science pages 
dwork stockmeyer 
time complexity gap way probabilistic finite state automata 
siam journal computing 
freivalds 
probabilistic way machines 
proceedings international symposium mathematical foundations computer science volume lecture notes computer science pages 
springer verlag 
grover 
fast quantum mechanical algorithm database search 
proceedings th annual acm symposium theory computing pages 
ladner lipton stockmeyer 
alternating pushdown stack automata 
siam journal computing 
lange mckenzie tapp 
reversible space equals deterministic space extended proceedings th ieee conference computational complexity 
appear 
lewis papadimitriou 
elements theory computation 
prentice hall 
lloyd 
potentially realizable quantum computer 
science 
margolus 
quantum computation 
annals new york academy science 
moore crutchfield 
quantum automata quantum grammars 
santa fe institute working 
pin 
languages accepted finite reversible automata 
th international colloquium automata languages programming volume lecture notes computer science pages 
springer verlag 
rabin scott 
finite automata decision problems 
ibm journal research development 
rabin 
probabilistic automata 
information control 

shepherdson 
reduction way automata way automata 
ibm journal research development 
shor 
algorithms quantum computation discrete logarithms factoring 
th annual symposium foundations computer science pages 
shor 
polynomial time algorithms prime factorization discrete logarithms quantum computer 
preprint 
simon 
power quantum computation 
th annual symposium foundations computer science pages 
watrous 
dimensional quantum cellular automata 
th annual symposium foundations computer science pages 
yao 
quantum circuit complexity 
th annual symposium foundations computer science pages 
