discovering frequent closed itemsets association rules nicolas pasquier yves bastide taouil lakhal laboratoire informatique universit blaise pascal ii scientifique des av 
des ere cedex france bastide taouil univ fr 
address problem finding frequent itemsets database 
closed itemset lattice framework show problem reduced problem finding frequent closed itemsets 
statement construct efficient data mining algorithms limiting search space closed itemset lattice subset lattice 
show set frequent closed itemsets suffices determine reduced set association rules addressing important data mining problem limiting number rules produced information loss 
propose new algorithm called close closure mechanism find frequent closed itemsets 
realized experiments compare approach commonly frequent itemset search approach 
experiments showed approach valuable dense correlated data represent important part existing databases 
discovery association rules introduced 
task consists determining relationships sets items large databases 
agrawal statement problem :10.1.1.40.6757
fi set items 
database ft set transactions identified unique tid 
transaction consists set items kik called itemset 
itemset contained transaction support itemset percentage transactions containing association rules form gamma 
ae 
association rule support defined support support confidence defined confidence support support 
user defined minimum support minsup minimum confidence minconf thresholds problem mining association rules divided sub problems 
find frequent itemsets itemsets support greater equal minsup 

frequent itemset generate association rules gamma 
gammai ae confidence greater equal minconf 
frequent itemsets support known association rule generation straightforward 
problem mining association rules reduced problem determining frequent itemsets support 
works demonstrated frequent itemset discovery key stage search episodes sequences finding keys inclusion functional dependencies relation 
existing algorithms approach levelwise bottom search simultaneous bottom top search :10.1.1.40.6757
dissimilar algorithms explore subset lattice itemset lattice finding frequent itemsets basic properties subsets frequent itemset frequent supersets infrequent itemset infrequent order prune elements itemset lattice 
propose new efficient algorithm called close finding frequent closed itemsets support database 
closure mechanism galois connection define closed itemset lattice sub order itemset lattice smaller 
lattice closely related galois lattice called concept lattice 
closed itemset lattice formal framework discovering frequent itemsets basic properties support itemset equal support closure set maximal frequent itemsets identical set maximal frequent closed itemsets 
close discovered frequent closed itemsets support directly determine frequent itemsets support 
reduce problem mining association rules problem determining frequent closed itemsets support 
set frequent closed itemsets directly generate reduced set association rules having determine frequent itemsets lowering algorithm computation cost 
thousands association rules holding database reducing number rules produced information loss important problem understandability result 
empirical evaluations comparing close optimized version apriori showed give nearly equivalent results weakly correlated data synthetic data close clearly outperforms apriori correlated data statistical text data 
rest organized follows 
section closed itemset lattice 
section propose new model association rules galois connection characterize reduced set association rules 
section describe close algorithm 
section gives experimental results synthetic data census data file kansas usa section concludes 
www almaden ibm com cs quest html ftp ftp cc edu pub census ks zip closed itemset lattices section define data mining context galois connection galois closure operators closed itemsets closed itemset lattice 
interested readers read details order lattice theory 
definition data mining context 
data mining context triple 
finite sets objects items respectively 
theta binary relation objects items 
couple denotes fact object related item definition galois connection 
data mining context 
define fi rg fo rg associates items common objects associates objects related items couple applications galois connection power set power set 
properties hold definition galois closure operators 
operators galois closure operators galois connection properties hold extension idempotency monotonicity definition closed itemsets 
itemset closed itemset iff smallest minimal closed itemset containing itemset obtained applying call closure definition closed itemset lattice 
set closed itemsets derived galois closure operator pair complete lattice called closed itemset lattice 
lattice structure implies properties exists partial order lattice elements elements iff ii subsets greatest lower bound join element lowest upper bound meet element 
extension call database data mining context 
notation ffif 
sub closed itemset sup closed itemset give definitions join meet elements extracted basic theorem galois concept lattices 
join meet oid items abcde abce ac acd bce fig 

data mining context associated closed itemset lattice 
association rule model section define frequent maximal frequent itemsets closed itemsets galois connection 
define association rules valid association rules characterise reduced set valid association rules data mining context frequent itemsets definition itemset support 
set items support count itemset support kg kok definition frequent itemsets 
itemset said frequent support minsup 
set frequent itemsets fi support definition maximal frequent itemsets 
set frequent itemsets 
define set maximal frequent itemsets fi ae property 
subsets frequent itemset frequent intuitive 
proof 
property galois connection support support minsup 
get property 
supersets infrequent itemset infrequent intuitive 
proof 
property galois connection support support minsup 
get frequent closed itemsets definition frequent closed itemsets 
closed itemset said frequent support minsup 
define set fc frequent closed itemsets fc fc support definition maximal frequent closed itemsets 
fc set frequent closed itemsets 
define set mc maximal frequent closed itemsets mc fc fc fc ae property 
support itemset equal support closure support support 
proof 
itemset 
support support kg kok consider closure show 
extension property galois closure property galois connection 
deduce support kg kok kh kok kg kok support property 
set maximal frequent itemsets identical set maximal frequent closed itemsets mc 
proof 
suffices demonstrate closed 
maximal frequent itemset 
property galois connection maximal support support minsup conclude 
maximal frequent closed itemset 
maximal frequent itemsets maximal frequent closed itemsets get mc 
association rule semantics definition association rules 
association rule implication itemsets form gamma 
ae 
define support confidence association rule gamma 
galois connection support kg kok confidence support support kg kg definition valid association rules 
valid association rules association rules support confidence greater equal minsup minconf thresholds respectively 
define set ar valid association rules set mc maximal frequent closed itemsets ar minsup minconf fr gamma 
gamma ae mc confidence reduced set association rules ae 
association rule gamma 
exact association rule 
noted association rule gamma 
called approximate association rule 
data mining context 
definition pseudo closed itemsets 
itemset pseudo closed itemset iff ae pseudo closed itemset theorem exact association rules basis 
set itemsets set exact association rules set fr gamma pg basis exact association rules 
confidence minconf corollary exact valid association rules basis 
fp set frequent pseudo closed itemsets set fr gamma fpg basis exact valid association rules 
ar confidence theorem reduced set approximate association rules 
set closed itemsets set approximate association rules set fr gamma 
gamma ae cg correct reduced set approximate association rules 
minconf confidence corollary reduced set approximate valid association rules 
fc set frequent closed itemsets set ba fr gamma 
gamma ae fcg correct reduced set approximate valid rules 
ar confidence ba close algorithm section algorithm finding frequent closed itemsets supports database 
section describes principle 
section give pseudo close algorithm sub functions uses 
section provides example proof algorithm correctness 
close principle closed itemset maximal set items common set objects 
example database itemset bce closed itemset maximal set items common objects 
bce called frequent closed itemset minsup support bce kf gk minsup 
basket database means customers customers total purchase items itemset bc closed itemset maximal group items common objects customers purchasing items purchase item closed itemset lattice finite relation database dually isomorphic galois lattice called concept lattice 
closed itemset lattice properties section result close generate frequent itemsets database phases 
discover frequent closed itemsets itemsets closed support greater equal minsup 

derive frequent itemsets frequent closed itemsets phase 
generate subsets maximal frequent closed itemsets derive support frequent closed itemset supports 
different algorithm finding frequent closed itemsets algorithms deriving frequent itemsets generating valid association rules 
result close directly generate reduced set valid association rules defined section determining frequent itemsets 
procedure 
discover frequent closed itemsets 
determine exact valid association rule basis determine pseudo closed itemsets generate rules gamma ae frequent closed itemset frequent pseudo closed itemset 

construct reduced set approximate valid association rules generate rules form gamma 
gamma ae frequent closed itemsets 
cases phase computationally intensive part 
phase database pass necessary phases solved easily straightforward manner 
phase information needed ones 
close discovers frequent closed itemsets follows 
closed itemset properties determines set generators give frequent closed itemsets application galois closure operator itemset generator closed itemset smallest itemsets determine galois closure operator instance database bc ce generators closed itemset bce 
itemsets generators bce 
itemset bce generator includes bc ce bce smallest itemsets closure bce 
algorithm constructs set generators levelwise manner generators created generators support counted useless generators pruned 
supports supports subsets infrequent generators generators closure subsets deleted previous example support generator bce support generators bc ce closure property 
frequent useful generators closures determined giving set frequent closed itemsets 
reducing cost closure computation possible introduce optimization 
determine iteration algorithm generator pruned closure subsets 
iterations preceding th generators created closed closure computation useless 
limit closure computation generators size greater equal purpose level variable indicates iteration generator pruned pruning strategy 
discovering frequent closed itemsets apriori algorithm items sorted lexicographic order 
pseudocode discovering frequent closed itemsets algorithm 
notation table 
iterations construct candidate generators pass database necessary order count support candidate generators 
algorithm pass needed determining closures generators closed 
generators closed pass 
algorithm determines set frequent generators support step 
level variable set step 
iterations step ac generator function section applied set generators determining candidate generators support step 
process takes place empty 
closures generators produced determined step 
level variable construct sets generators 
set contains generators size level gamma closed 
generator size called generator 
set field contains generator generator size support support count generator support count generator generator generator size closure closure generator closure generator 
support support count generator closure support count closure count generator property 
fc closure frequent closed itemset closed itemset support minsup 
support support count frequent closed itemset 
table 
notation set contains generators size level gamma closed closure computation necessary 
closures generators determined applying ac generator function section step 
frequent closed itemsets produced support known see theorem 
algorithm close algorithm generators support count forall generators support minsup delete pruning infrequent level generator ac generator creates generators level fg level generators closed forall generators closure generator level fg level generators closed ac closure answer fc fc closure support count function function takes set frequent generators argument 
returns set generator support count support fog pseudo code function algorithm 
algorithm support count function forall objects go subset generator fog generators subsets fog forall generators go support subset function quickly determines generators contained object generators subsets fog 
purpose generators stored prefix tree structure derived proposed 
ac generator function function takes set frequent generators argument 
lemma returns set frequent generators 
pseudocode function algorithm 
lemma 
itemsets 
proof 
itemsets 
extension property galois closure operators obviously 
idempotency property galois closure operators conclude 
lemma 
itemset subset support support 

proof 
itemsets ae support support 
kg kg deduce 
conclude 
itemset 
lemma say itemset contained object related items corollary 
generator fs set gamma subsets support support 
proof 
derived lemma 
ac generator function works follows 
apply combinatorial phase apriori gen set generators order obtain set candidate generators generators size gamma items joined producing new potential generator size step 
potential generators produced lead useless computations infrequent closed itemsets redundancies frequent closed itemsets produced pruned follows 
apriori gen pruned removing candidate generator subset step 
strategy prune kinds itemsets supersets infrequent generators infrequent property second generators support subset closure see theorem 
take example 
suppose set frequent closed itemsets contains generators ab ac 
ac generator function create abc ab ac new potential generator pruning remove abc bc supports remaining candidate generators determined property support minsup deleted step 
third pruning strategy works follows 
candidate generator test support subsets equal support case closure equal closure see corollary remove step 
give example 
suppose final set generators contains frequent generators ab ac bc respective supports 
ac generator function create abc ab ac new potential generator suppose determines support 
third prune step remove abc support abc support ac 
deduce closure abc closure ac computation closure abc useless 
optimization generator closure computation algorithm determine iteration second prune suppressed generator variable level 
ac closure function ac closure function takes set frequent generators closures determined argument 
updates generator closed itemset closure obtained applying closure operator algorithm gives pseudo code function 
method compute closures proposition 
algorithm ac generator function insert select item item item item item item item gamma item gamma item item forall candidate generators forall subsets delete support count forall candidate generators support minsup delete pruning infrequent forall subsets support support delete level level iteration number prune endif answer fc proposition 
closed itemset corresponding closure itemset intersection objects database contain ff fog fog proof 
define fog fo fog fog fog fo show fog fog conclude proposition database pass necessary compute closures generators 
function works follows 
object set created step 
contains generators subsets object itemset fog 
generator associated closed itemset closure updated step 
object containing generator closure empty object itemset fog assigned step 
intersection closure object itemset gives new closure step 
function returns algorithm ac closure function forall objects go subset generator fog generators subsets fog forall generators go closure closure fog closure closure fog answer fp closure closure generator closed itemset closure corresponding intersection objects containing example correctness gives execution close minimum support data mining context 
algorithm determines set generators support step infrequent generator deleted form step 
generators determined applying ac generator function step generators created union generators support determined pruning strategies applied 
generators ac pruned support ac support support support level variable set 
calling ac generator produces generators generator created abe ab ae item 
pruning strategies applied second removes abe form empty iterative construction sets terminates loop step stops 
sets constructed level variable step empty contains generators closure function applied closures generators determined step 
duplicates closures removed ac closure result returned set fc contains ac abce bce frequent closed itemsets lemma 
kpk kpk support minsup ae ks ks gamma ks proof 
show recurrence 
kpk ae support support lemma obvious 
supposing lemma true kpk show true kpk 
kpk kpk possible cases ae kp kp ae kp kp support support support count gamma 
generator support fag fbg fcg fdg feg pruning infrequent generators gamma 
generator support fag fbg fcg feg ac generator gamma 
generator support pruning gamma 
generator support ac closure gamma 
generator closure support fag fbg fcg fcg feg pruning gamma 
answer fc closure support fcg fig 

close frequent closed itemset discovery minsup lemma recurrence hypothesis ae ae ks identify theorem 
close algorithm generates frequent closed itemsets 
proof 
recurrence show support minsup fc 
demonstrate property itemsets kpk support minsup fc 
suppose kpk fc 
demonstrate kpk fc 
kpk fc 
kpk lemma ae ks 
gamma gamma ks gamma conformity recurrence hypothesis conclude gamma fc fc 
experimental results implemented apriori close algorithms prefix tree structure improves apriori efficiency 
experiments realized bi processor ibm power pc running aix cpu clock rate mhz gb main memory gb disk 
execution uses processor application single threaded allowed maximum mb 
test data kinds datasets synthetic data simulate market basket data census data typical statistical data 
synthetic datasets generated program described 
census data extracted kansas file public microdata samples way file washington unavailable internet time experiments 
put upper bound support distorts algorithm results different ways 
took smaller datasets containing persons 
parameter average size objects total number items number objects average size maximal poten tially frequent itemsets table 
notation results synthetic data shows execution times apriori close datasets 
observe algorithms give similar results executions minsup 
comes fact data weakly correlated sparse datasets 
sets generators close frequent itemsets apriori identical closure mechanism help jumping iterations 
cases apriori outperforms close th iteration generator pruned support subsets 
consequence close determined closures generators size greater equal 
results census data experiments conducted census datasets different minsup ranges get meaningful response times accommodate memory space limit 
results datasets plotted respectively 
close significantly outperforms apriori execution times number database passes 
contrarily experiments synthetic data differences execution times measured minutes hours time seconds minimum support close apriori execution times time seconds minimum support close apriori execution times fig 

performance apriori close synthetic data 
furthermore noted apriori run minsup lower lower exceeds memory limit 
census datasets typical statistical databases highly correlated dense data 
items extremely popular leads huge number frequent itemsets closed 
scale properties census data examined apriori close behave object size increased census data 
number objects fixed minsup level set 
object size varied total items total items 
apriori run higher object sizes 
results shown 
see scale properties close far better apriori 
new algorithm called close discovering frequent closed itemsets large databases 
algorithm pruning closed itemset lattice itemset lattice commonly approach 
lattice sub order itemset lattice datasets number itemsets considered significantly reduced 
set frequent closed itemsets support showed deduce frequent itemsets construct reduced set valid association rules needless search frequent itemsets 
realized experiments order compare approach itemset lattice exploration approach 
implemented close optimized version apriori prefix trees 
choice apriori leads form fact practice remains general powerful algorithms 
experiments showed close efficient mining dense correlated data statistical data datasets number itemsets considered number database passes significantly reduced time seconds minimum support close apriori execution times number passes minimum support close apriori number database passes fig 

performance apriori close census data time seconds minimum support close apriori execution times number passes minimum support close apriori number database passes fig 

performance apriori close census data number items transaction close apriori fig 

scale properties apriori close census data compared apriori needs 
showed close leads equivalent performances algorithms weakly correlated data synthetic data generators closed 
leads adaptive characteristic close consists determining iteration necessary compute closures generators 
way avoid close useless closure computations 
think results interesting dense correlated data represent important part existing data mining data considered difficult 
statistical text biological medical data examples correlated data 
supermarket data weakly correlated quite sparse experimental results showed mining data considerably difficult mining correlated data 
case executions take minutes second case executions take hours 
close gives efficient unsupervised classification closed itemset lattice order dually isomorphic dedekind completion order smallest lattice associated order 
closest ganter algorithm works main memory 
feature interesting unsupervised classification important problem data mining machine learning 

agrawal imielinski swami 
mining association rules sets items large databases 
proceedings acm sigmod int conference management data pages may 

agrawal srikant 
fast algorithms mining association rules 
proceedings th int conference large data bases pages june 
expanded version ibm research report rj 

bayardo 
efficiently mining long patterns databases 
proceedings acm sigmod int conference management data pages june 

birkhoff 
lattices theory 
coll 
pub 
volume 
american mathematical society 
third edition 

brin motwani ullman tsur 
dynamic itemset counting implication rules market basket data 
proceedings acm sigmod int conference management data pages may 


chen han yu 
data mining overview database perspective 
ieee transactions knowledge data engineering december 

davey priestley 
lattices order 
cambridge university press 
fourth edition 



implication un tableau de donn ees 
math 
sci 
hum 

ganter reuter 
finding closed sets general approach 
order pages 
kluwer academic publishers 

lin kedem 
pincer search new algorithm discovering maximum frequent set 
proceedings th int conference extending database technology pages march 


implications dans un 
math 
inf 
sci 
hum 

mannila toivonen 
levelwise search borders theories knowledge discovery 
data mining knowledge discovery 

mannila toivonen verkamo 
efficient algorithms discovering association rules 
proceedings aaai workshop knowledge discovery databases pages july 

mueller 
fast sequential parallel algorithms association rules mining comparison 
technical report faculty graduate school university maryland 

pasquier bastide taouil lakhal 
pruning closed itemset lattices association rules 
proceedings french conference advanced databases october 
appear 

savasere omiecinski navathe 
efficient algorithm mining association rules databases 
proceedings th int conference large data bases pages september 

toivonen 
sampling large databases association rules 
proceedings nd int conference large data bases pages september 

toivonen klemettinen ronkainen mannila 
pruning grouping discovered association rules 
ecml workshop statistics machine learning knowledge discovery databases pages april 

wille 
concept lattices conceptual knowledge systems 
computers mathematics applications 

zaki parthasarathy ogihara li 
new algorithms fast discovery association rules 
proceedings rd int conference knowledge discovery databases pages august 
