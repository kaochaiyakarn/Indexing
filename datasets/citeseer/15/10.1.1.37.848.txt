conceptual graphs fundamental notions michel chein marie mugnier lirmm cnrs universit de montpellier ii rue de saint priest montpellier mail chein crim fr mugnier crim fr 
state precise definitions basic notions sowa framework sowa provide related results 
results mainly concern structure specialization relation correspondence graph operations logical operations algorithmic complexity model handling 
resume 
nous les notions de base du des graphes de sowa sowa en les 
nos sur la structure de la relation de la correspondance entre de graphes logiques la complexit de la mise en du 
key words knowledge representation conceptual graphs sowa graphs semantic networks specialization generalization graphs pattern matching order logic algorithmic complexity 
mots cles de graphes graphes de sowa graphes logique du premier ordre complexit 
revised version crim april 
appeared revue intelligence artificielle vol 
pp 
page 

motives leading summarized follows 
deep interest lecture sowa book conceptual structures sowa particularly unifying approach elegant simplicity 
conflicting initial reactions followed publication book clancey smoliar response sowa sowa enhanced curiosity 
great number research works practical realizations regular workshops confirmed pertinence sowa ideas need formalization due lack precision notions persistence errors see 
workshop proceedings kbs nagle ed 
selected papers larger practical projects listed sowa 
conceptual graphs form knowledge representation language linguistics psychology philosophy sowa 
sowa proposes model different levels 
conceptual level basis specialized communication language specialists different disciplines involved common cognitive 
implementation level basis common representation tool modules complex system integrating knowledge databases inference engines sophisticated human computer interfaces learning modules 
book sowa settles relatively simple model progressively adds complex notions 
basic model consider 
main objective propose precise definitions theorems algorithmic complexity results 
large part notions results explicitly implicitly sowa book 
completeness reasons people familiar sowa conceptual graphs read referring book giving definitions results sowa 
second part devoted definition conceptual graph call graph related support 
conceptual graph meaning isolation 
semantic network concepts relations linked context language emotion perception sowa 
sowa described partially components semantic network 
notion support integrates elements 
support represents general knowledge domain graph asserts single proposition related context 
page sections study ground operations graphs 
projection notion particular graph morphism generalization specialization rules 
give complete correspondence views 
precise section specialization relation induced composition specialization rules order people think preorder reflexive transitive antisymmetric relation 
important point prove part problem determining graphs equivalent equivalence relation associated preorder np complete 
characterize notion irredundant graph unique representative equivalence class 
section study different acceptances extended join operation seen partial match graphs 
sowa proposed logical interpretation conceptual graphs consequently specialization operations 
section devoted correspondence graphs logic 
establish algorithmic complexity results main problems encountered preceding sections 
np complete general case polynomial underlying graph graph tree 
place sowa book precisely basic model introduced chapter sowa explicit notion support concepts introduced explicitly implicitly sowa components semantic network canon sowa 
introduce notion graph related support sowa simple recalling support corresponds conceptual graph having generic individual markers conceptual graphs introduced sowa 
third section give precise definitions graph notions projection sowa graph morphism sub graph 
fact noted times see instance chein ellis 
mandatory understanding 
aim precisely placing contribution sowa book context 
page recall fourth part sowa elementary specialization rules restrict join simplify sowa copy rule considered particular case restrict rule 
explicitly introduce generalization rules duals specialization rules particular prove result logical completeness ninth section 
specialization operations define concept nodes fusion part composition restrict join operations relation nodes fusion part 
sowa demonstrated sowa graphs specialization projection provide reciprocal property yielding complete correspondence notions theorem part 
section specialization relation preorder order stated sowa 
antisymmetric relation 
introduce notion irredundant graph yielding exact characterization equivalence relation associated preorder theorems 
characterization polynomial shown section 
section study notion extended join graphs define particular case called considered sowa 
finding maximal cardinal inclusion sense np complete propose notion maximal polynomially computable notion 
section devoted relationships logic 
recall logical interpretation conceptual graphs sowa sowa supplement logical interpretation concept type lattice 
sowa proved specialization rules refutation rules conceptual graphs specialization interpretation logically implies interpretation result duals specialization rules generalization rules inference rules 
establish constitute complete set inference rules set logical formulas associated graphs theorem 
page 
graph related support 
conceptual graph kinds nodes relations concepts 
graphs concept nodes represent entities attributes states events relation nodes show concepts interconnected sowa 
concept vertices said individual design particular entities called generic represent unspecified entities type 
conceptual graph related support defines syntactic constraints provides background information specific application domain 
notion support regroup set concept types structured lattice representing kind hierarchy allowing multiple inheritance set relation types set star graphs call basis showing relation type kind concept types link words star graph represents signature relation type set markers concept vertices generic marker individual markers allow distinguish name distinct entities conformity relation defines association constraints concept type marker intuitively allow association type marker means individual 
important point separation structuration knowledge levels relationships concept types classes link belong support relationships individuals instances encoded particular conceptual graph 
partially exemplifies notion support concept type lattice basis gives sample conceptual graphs definable support 
definition 
support tuple conf set concept types finite lattice order supremum universal type absurd type denoting lower upper bounds set relation types finite set disjoint page set star graphs ri bijection ri built follows exactly vertex ri labelled element vertex non empty totally ordered set neighbours neighbours pairwise non adjacent labelled element 
see 


star graph associated countable set individual markers addition exist marker called generic absurd marker provide set lattice structure order denoted incomparable 
conf conformity relation predicate satisfying conf conf conf conf imply conf conf conf imply conf conf conf 
define graph conceptual graph support graph represents factual information interpretable context definition 
graph related support multigraph lab bipartite connected finite graph vertices vertices denote classes relation concept vertices call vertices vertices set edges graph partially ordered set edges adjacent totally ordered label edges 
degree denote neighbour set vertex state exists edge rc labelled said ith neighbour page vertex label defined mapping lab obeys lab type lab type ref type ref ref called individual concept ref called generic concept degree vertex type equal degree vertex type type ith neighbour smaller equal type ith neighbour vertex conformity predicate conf satisfies conf type ref 

isolated vertex graph 
set possible labels vertices set elements 
lattice order defined product orders 
verification labelling fulfills conformity relation conf condition concerning graph avoids elementary form reasoning 
furthermore condition applying conformity relation support induces graphs set lower bound types associated vertices having individual marker conf 
words absurd type 
graphs implicitly related support identify star graph naturally associated graph graph having unique vertex labelled neighbours generic vertices 
said basis associated study operations defined graphs 
introduce notion projection section graph morphism 
see classical operations sowa specialization rules section give correspondence views section 
page ground universal absurd tc concept type lattice geometric object polygon regular polygon parallelogram rectangle diamond square object set star graphs left object object object object 
partial definition support ground polygon square polygon square ground geo object rectangle left ground square square square rectangle represents vertex label 
represents vertex label circle 
graphs related support page 
projections graphs morphisms 
define projection graphs morphism notions morphisms ordered bipartite graphs provide additional constraints vertices labellings 
definition 
see projection graph lab graph lab ordered pair mappings 
degree implies ii lab lab iii lab lab 
projection morphism underlying graphs preserves vertices labels may restrict vertices labels 
decrease label vertex equivalently expressed restrict type generic put individual marker generic satisfying conformity relation conf 
graphs projection definition 
graph morphism graph lab graph lab ordered pair mappings fulfilling conditions projection iii replaced iv lab lab 
morphism particular projection 
graphs injective morphism words edge rc labelled edge labelled 
page definition 
graph isomorphism resp 
graph morphism resp 
projection say bijective 
recall condition definition graph implies vertices type degree 
bijective suffices ensure underlying graphs isomorphic condition projection definition 
degree 
graph isomorphism equivalently defined graph morphism reciprocal graph morphism 
false strictly restricts label vertex 
tc non injective projection 

projections page composition graph morphisms resp 
projections graph isomorphisms graph morphism resp 
projection graph isomorphism 
definition 
graph sub graph subgraph graph provided restriction mapping lab 
condition applying graphs implies strict partial subgraph sub graph generally subgraph respect arity vertices sub graph immediately property 
sub graph graph sub graph connected component induced sub graph obtained deleting set vertices 

specialization generalization operations 
give sowa elementary specialization rules introduce dual generalization rules 
definition 
sowa elementary specialization operations internal operations set graphs defined follows deletion twin vertices simplify vertices graph type twin vertices exactly ith neighbours build graph obtained deleting duplicates elementary restriction restrict vertex graph doing restriction consists building graph obtained replacing label say conf page elementary join non necessarily distinct graphs vertices belonging respectively having label result join graph obtained identifying vertices 
definition 
said specialization belongs specialization sequence denote specialization relation set graphs note closure specialization operations 
graph said derived operation vertex fusion combination restrict join operations 
definition 
vertices belonging graphs 
kn say conf holds lower bound labels 
fusion vertices consists identifying single vertex label say satisfies conf 
operation composition restrictions followed joins specialization operation 
fusion elementary restriction 
obtained doing fusion restricting labels joining vertices 
obtain need restrict labels note incomparable specialization relation particular vertices 
condition applying conformity predicate support ensures graph fusion vertices having individual marker 
labelling mapping injective set individual markers fusion amount injective 
page definition elementary generalization operations inverse elementary specialization operations twin vertex addition elementary extension replaces vertex label greater label obeys type constraints issued basis edge rc label type type ith neighbour vertex graph type elementary split duplicates vertex say vertices say identical labels set edges adjacent new vertices bipartition large meaning parts may empty set edges adjacent operation produces graphs articulation point parts empty 
note dual restriction extension operations limited support increasing type vertex constrained basis decreasing label constrained conformity relation conf 
definition 
said generalization obtained sequence elementary generalization operations 
set graphs led consider closure generalization operations 
easily verify elementary specialization resp 
generalization operation yields elementary generalization resp 
specialization operation yields property 
specialization generalization page 
set graphs definable support basis exactly graph reduced single generic vertex universal type 
particular graph set included 
seen basic operations hand projection hand specialization generalization elementary rules producing relation 
yield complete correspondence notions 

specialization projection 
lemma 
exists projection gh 
proof 
denote projection vertex fusion vertices unique vertex label fusion simply restriction 
doing define specialization sequence new graph obtained vertex twin vertices deleting vertices define specialization sequence new graph obtained sub graph image projection isomorphic consider graph 
add linking edges edges endpoint endpoint edges necessarily vertex 
obtained graph connected component graph 
successively joining connected components obtain see 
denote specialization sequence associated 
go specialization sequence page neighbour second neighbour 
obtaining lemma proof corollary sub graph gh 
lemma 
gh specialization sequence associate projection proof 
see sowa theorem sequence elementary specializations 
specialization associate projection delete twin vertex choose projection unifying twin vertices elementary restriction take projection induced decreasing vertex label elementary join consider projection induced identifying joined vertices note join applies vertices disjoint graphs projection injective morphism 
obtain wanted projection composing elementary projections 
previous lemmas yield theorem 
exists projection page furthermore associate specialization projection sequence particular form call specialization normal form specialization specializations defined lemma contains vertex fusions leads graph second consists exclusively twin vertex deletions leads graph third contains joins pairwise disjoint separated yielding projection injective morphism specialization normal form associated projection comprises solely joins step 
surjective contain third joins step 
seen ground operations graphs 
part complete definitions vertex fusion compatible partitions useful notions studying structure specialization relation section matching operations section 

compatible partitions 
lab denote graph 
definition 
partition compatible classes set vertices defined section compatible set vertices 

compatible partition obtain specialization surjective projection defined follows identity relation 
cc lab inf lab cc illustrates kind projection partition gives graph definition 
rr partition 
degree induced equality neighbours class 
page definition 
vertex set say compatible ra lab ii partition 
degree upper bound partitions induced vertices ra 
class vertex set ii ra compatible 
partition induces partition called pc classes sets singletons containing vertices belong ra 
consider set vertices identical labels 
partitions induced neighbours equality respectively 
induces vertex set partition pc subset compatible 
definition 
vertices compatible set say said fusion vertices consists vertices class pc vertex label lower bound vertices labels keeping representative deleting twins 
definition 
partition compatible compatible vertex set ii pc partition induced upper bound partitions pc induced class pr class pc compatible vertex set 
obtain specialization doing fusion vertices 
surjective projection 
rr lab lab rr 
pc 
cc lab inf lab cc page illustrates kind projection gives graph definition 
partition vertex set graph compatible compatible partition ii compatible partition thin pc 
definition 
graph compatible partition vertex set 
provide underlying quotient graph graph structure labelling class label elements labelling class lower bound element labels 
graph called quotient graph denoted compatible partition naturally associated surjective projection conversely projection pr pc partition induced equality images compatible partition 
compatible partitions definition projection thin pc definition underlying graphs morphism 
furthermore exists defines isomorphism underlying graph class vertex ci lab ci lab 
page specialization vertices pr discrete partition pc specialization vertices pr pc pc tc 
compatible partitions study structure specialization relation specify preorder order proposed antisymmetric relation 
true distinction show part problem determining graphs equivalent np complete 
order characterize exactly equivalence relation associated introduce notion irredundant graphs 
page 
equivalence 
concatenation specialization sequences specialization sequence specialization relation transitive relation 
reflexive relation consider empty sequence specialization sequence 
property 
specialization relation preorder 
order shown gh hg antisymmetry property fulfilled obtained joining obtained joining deleting twin vertex 

hg gh isomorphic purpose paragraph study equivalence relation associated preorder 
gh hg said equivalent denoted gh 
equivalent specialization sequence equivalent 
gh equivalent said strictly specific denoted relation antisymmetric transitive absorbs relation hh definition 
graph said irredundant strict sub graph equivalent 
irredundant exist projection strict sub graphs 
equivalent strictly specific irredundant 
example see irredundant page irredundant graph twin vertices deleting vertex obtain strict sub graph equivalent theorem 
graph properties equivalent irredundant twin vertices graph obtained vertices strictly specific graph obtained vertices strictly specific proof 
implies graph obtained vertices equivalent exist non injective projection projection equivalence definition composing projections obtain projection strict sub graphs 
implies graph obtained vertices 
hypothesis twin vertices vertex fusion involves vertex fusion 
graph obtained vertex fusions 
absorption property implies assume exists sub graph say equivalent projection injective definition strict sub graph 
vertices 
graph obtained specialization transitivity property 
graph equivalent irredundant graph sub graph isomorphic proof 
equivalent projection projection page exist projection strict sub graphs irredundant 
isomorphic graphs 
theorem 
equivalence class contains irredundant graph 
proof 
property implies irredundant graphs equivalent isomorphic 
equivalence class contains irredundant graph 
equivalence class consider graph say minimal number vertices 
graph irredundant possess strict sub graph equivalent contradict hypothesis equivalence class provided unique representative 
furthermore representative unique graph having smallest vertex number 
part devoted definitions extended join operation form pattern matching graphs 
principal computation tool introduced sowa sophisticated operations 
introduce forms extended join general operation restricted form usually 

extended join 
definition 
graphs partitions respectively compatible exists isomorphism underlying graph underlying graph fulfills vertex compatible 
fusion consists vertices matched labels new vertices lower bound vertices labels 
denote obtained graph 
equivalently graph constructed replacing label vertex lower bound labels general equal page property 
exist graph surjective projections definition 
extended join operation distinct graphs consists sub graphs see 

general case surjective projections identity isomorphisms see 

extended join property 
derivable graph set derivable extended join operation 
page proof 
extended join composition elementary specialization operations 
reciprocally express elementary specialization operation extended join 
elementary join applying distinct graphs particular case extended join 
join vertices graph consists graph identical vertex fusion keeps vertex labels 
deleting twin vertex consists identical vertex identifying vertices involved fusion keeps vertex labels 
restriction vertex replacing label consists identical vertex 
fusion keeps vertex labels label replaced 
composition extended joins generally extended join due connectivity constraint subgraphs 
definition 
lab lab graphs bijection bijection 
bijections pair said compatible lab lab degree connected graphs graphs 
case sub graphs discrete partitions isomorphism underlying graphs said 
associated fusion called see figures 
decisional problem associated search cardinal maximal np complete problem 
npcomplete restrict search graph maximal inclusion problems contain instance np complete problem clique garey johnson gt 
see section transformations unlabelled graphs graphs 
page assume vertices pairwise 
maximal inclusion ab maximal inclusion ab maximal cardinal graph obtained 
maximal page replace search maximal inclusion extension conserves connectivity subgraphs 
furthermore notion sowa starting vertices respectively belong form pair immediate build polynomial time algorithms computing maximal inclusion associated bijections pair proceeding depth breadth mixed search starting 
illustrates different meanings maximal 
restrict extended join ensure property operation decrease number vertices graph simulate elementary join vertices graph 
focusing graph operations projection elementary specialization generalization rules vertex vertex fusions extended join 
purpose part study logical interpretation graphs graph operations 
show graph generalization rules constitute complete set inference rules set logical formulas associated graphs 

logical interpretation 

logical formula associated graph 
sowa proposes sowa associate conceptual graph formed formula order predicate calculus say construction generic vertex associate distinct variable bijection generic vertices variables individual marker associate constant call bijection individual markers constants necessarily individual vertices constants predicate set bijection set types vertex ident denote variable constant associated associate atom type ident associate atom type ident ident arity ith neighbour page formula consisting conjunction atoms associated vertices existential closure 
graph associated formula polygon square geo object rectangle 
assume concept types 
definition 
support call formula formed formula form graph set formulas exactly notations part 

logical interpretation specialization generalization operations assume go elementary specialization rule reciprocally elementary generalization rule 
logical formulas respectively associated equivalently denoted ec ec ec denotes existential closure 
twin vertices deleting addition 

atom associated deleted vertex yielding predicate terms variables constants 
go deleting occurrence 

logical equivalence 


directly deduce 
restriction extension label vertex case marker restriction extension 
replace label individual marker 
variable constant associated vertex respectively classical hypothesis allows introducing sowa denotation operator sowa 
page 
ec ec 
results substitution conjunction atoms containing may appear constant associated individual vertices 
go substituting valid formula 
second case type restriction extension 
form ec ec replace predicate predicate 
valid formula 
restrict reciprocally extend type marker compose operations preserve validity 
join vertices split vertex 
obtained joining vertices reciprocal split operation keeps connected cases 
obtained joining vertex vertex graph vertex articulation point reciprocal split operation decomposes connected components cases 
case individual vertices 
join individual vertices reciprocally split individual vertex change associated logical formula 

join individual vertex individual vertex ec assume variable sets disjoint sets 

second case generic vertices 
generic vertices joined generic vertex respectively associated variables 
ec 

appear may appear atom containing appear ec 

contain occurrences equivalent formula obtained substituting 
valid formula 
page join ec ec contain occurrences respectively variables sets disjoint 
ec 


valid 
interpretation join operation simple theory equality identifying variables appearing formula formulas disjoint variable sets equivalent adding atom equal 
theorem 
proof 
see sowa theorem sequence elementary specializations 
hi due logical interpretation specialization rules composition 
generalization operations correspond inference rules conversely rules associated specialization operations refutation rules formula say derived set false formulas specialization sequence false 

completeness generalization operations 
definition 
formulas 
substitution mapping term atom associates term atom way constant constant variable variable constant unary predicate associated concept type predicate associated relation type addition image atom 
atom page words formula obtained substituting term predicate image deleting existential quantifiers applying variables turned constants immediately property property 
projection 
definition 
formulas separated share variable constant 
existentially quantified important point constant sets disjoint 
note set clauses associated concept type lattice set ij covers 
closure resolution rule set clauses ij 
lemma 
formulas 
logically deducible exists substitution proof 
write 
vm 
wn pm 
ih 
jk qh resp 
atoms associated vertex types resp 
vertex types 
logically deducible equivalent inconsistent formula 
clausal form formula contains clauses clause associated 
ih 
jk contains variables set clauses associated clause consists single atom contains variables variables changed skolem constants clauses formula inconsistent possible obtain empty clause resolution rule 
time rule sequence page empty clause applies ij va obtained resolution va js wb empty order obtain empty clause assume done order ih jk note substitution deletes il deletes jl composition substitutions defines substitution composition union 
lemma 
set pairwise separated formulas 
formula logically deducible formula ik logical consequence proof 
go back proof lemma consider set clauses associated formulas solely 
consider sequence applications resolution rule emptying clause occurring resolution comes formulas example obtained resolution clause clause 
connected consider terms sequence 
atom terms occurring addition clauses associated ik variables constant sets pairwise disjoint condition separability skolemization 
empty clauses associated associated establish theorem theorem completeness 
set graphs subset consisting pairwise separated formulas 
formula logically deducible 
page proof 
logically deducible pairwise separated lemma formula ik logically deducible lemma substitution conclude property 
theorems yield set generalization operations graphs corresponds sound complete set logical rules separated formulas 
relax separation constraint formulas shown example deduced non separated formulas obtained generalization rules hand possible specialization rules 
framework consisting graphs related support associated graphs operations provided logical interpretation 
study algorithmic complexity handling 
part devoted study 
simplified manner encountered problems generally np complete polynomial instances involving graphs underlying graphs trees 

algorithmic complexity basic operations 
underlying graphs graphs bipartite graphs structure page graph problem decisional form np complete transposition graph problem np complete 
directed graph seen particular case graph vertices vertices having label edge represents binary neighbour second vertices having label 
transformation yields simple proof np completeness problems problem projection comparison specialization generalization relation instance graphs question projection property 
projection problem np complete 
proof 
consider problem directed graphs morphism directed graphs mapping satisfying belongs belongs problem np complete contains particular case np complete problem clique garey johnson gt 
transforming graphs mentioned transformation morphism projection graphs morphism problem sub graph injective projection instance graphs question isomorphic sub graph 
property 
sub graph injective projection problem np complete 
problems studied clearly np 
np completeness proofs omit precise 
holds non directed graphs seen particular case directed graphs non directed edge xy corresponds directed edges 
page proof 
admits particular case np complete problem isomorphic subgraph garey johnson gt 
previous problems labels part np completeness hand may simplify problem practical applications 
problems 
problem instance graphs question add constraint vertex image label problem equivalent existence isomorphism graphs 
recall problem unclassified class called isomorphism complete 
problem np complete property 
problem np complete total order vertex labels 
proof 
prove np completeness proving np completeness particular case problem restricts graphs directed graphs labelled vertices labels totally ordered 
problem labelled graphs isomorphism instance directed graphs labelled vertices total order label set 
question isomorphism satisfying vertex label label consider np complete problem isomorphic partial graph 
instance non directed graphs vertex number page question isomorphic partial graph graph obtained deleting edges reduce isomorphic partial graph previous problem transform bipartite graphs follows vertex sets corresponding edges complete graphs vertex sets respectively bipartite element xy having neighbours see 
edges direction instance 
similarly construct consider total order vertex xy resp 
labelled xy edge resp 

vertices labelled 
xy xz yz 

xh uh yh xh 
transforming proof property labelled graph isomorphism isomorphic partial graph problem instance graphs question 
property 
problem np complete 
problem np complete contains particular case np complete problem isomorphic spanning tree graph tree contain spanning tree isomorphic 
garey johnson nd 
page proof 
consider particular case 
problem labelled graphs instance directed graphs labelled vertices label set structured lattice 
question isomorphism satisfying vertex label label reduce problem problem consider instance problem total order label set lattice constructed follows see chain vertices covered element covered resp 
graph obtained resp 
replacing labels resp 

easily verified label vertex greater equal label vertex lower bound label label 
isomorphism satisfying condition problem isomorphism satisfying condition problem 
lattice proof property problem equivalence instance graphs question equivalent page property 
equivalence problem np complete 
proof 
instances projection 
construct resp 
adding resp 
individual vertex referent appear vertex label introducing vertex resp 
binary vertex type neighbour second neighbour construct third graph joining see 
show projection equivalent 
projection immediately verified projection trivial projection prove reciprocal 
assume equivalent 
projection projected individual vertex marker appear furthermore vertex particular projected loop containing restriction projection projection 
building proof property 
proof shows problem np complete isomorphic strict sub graph suffices note proof isomorphic sub graph page problem instance graph question irredundant property 
problem np complete 
proof 
recall problem np complete complementary npcomplete problem 
complementary problem projection strict sub graphs prove np completeness 
call problem assuming twin vertices remarking wanted projection necessarily surjective reformulate follows projection sub graphs corresponding connected component graph obtained deleting vertex neighbours 
consider particular case injective projection problem remains np complete graphs vertex vertex injective projection 
transform instance problem say instance problem say follows binary vertex type appear label vertex 
construct graph new vertices lab lab linked illustrated 

constructing proof property page graph obtained deleting vertex neighbours connected components includes projection projection necessarily example 
binary vertex type appear label vertex 
vertex pair resp 
associate vertices type neighbour second neighbour vice versa vertex 
doing transform irredundant graphs projection injective 
graph obtained injective projection projection strict sub graphs necessarily 
order study polynomial cases problems introduce graphs underlying graphs trees 
definition 
tree graph cycles cycles created multi edges vertex vertex 
rooted tree tree satisfying tree choose root vertex predecessor neighbour successors neighbours obtain rooted tree 
trees frequently type definition relations concepts see example sowa 
mention machine learning rooted trees describe knowledge learnt objects represented conceptual graphs 
polynomial cases previous mentioned problems particular graphs 
aim concerns fundamental notions concrete algorithmic problems mention proof principal results algorithms proofs see mugnier chein mugnier 
projection tree graph immediate find polynomial algorithm computing projection counting projections rooted tree graph polynomial algorithm construct rooted tree say projection corresponds exactly projection page sub graph polynomial cases problem come directly known subgraph isomorphism garey johnson gt 
particular trees polynomial algorithm computes injective morphism projection algorithm extension analyzed 
hand tree problem np complete 
furthermore counting injective morphisms rooted trees np hard problem 
polynomial cases equivalence come directly projection 
know graphs classes equivalence polynomial projection np complete 
polynomial trees 
possible find graphs classes problems polynomial 
classes derived polynomial cases known classical graph isomorphism problem 

tried state precise definitions think sowa basic notions studied consequences definitions 
yielded complete correspondence ground graph operations projection generalization specialization rules 
logical viewpoint established generalization operations define complete set inference rules set formulas associated graphs 
algorithmic complexity viewpoint graph formulation allowed characterize polynomial cases main problems encountered 
fact relation preorder true distinction problem determining equivalent np complete 
lot problems study indicate working 
point final clarification basic notions 
page example consider ambiguities related fundamental specialization generalization relation 
definitions results sowa implicitly refer injective projection consequently coherence previous results implies limit specialization rules particular forbidden join vertices graph 
change slight leads particular restrict extended join 
furthermore specialization relation exists sub graph notion widely instance french ibm project 
indicate immediate consequences approach 
hand provides partial order relation 
hand drastically restricts comparability graphs 
complexity comparison graphs increase 
instance tree graph problem npcomplete polynomial see projection sub graph problems section 
remarks careful study necessary point consequences restricted definition 
addition true comparative study definitions needs discussion approach relation works domains concept learning examples haussler pattern recognition shapiro haralick 
second point extend kernel notions 
basic model set graphs definable support exactly set graphs derivable sequence elementary specialization rules basis star graph set generic vertex universal type graph reduced single vertex 
notion basis generalized considering star graph set set conceptual graphs called canonical basis sowa 
graph derivable canonical basis sequence elementary specialization rules said canonical 
canonical basis leads new problems particular recognition canonical graph requires adapt results reconsider correspondence projection specialization rules redefine generalization rules particular sub graph canonical graph necessarily canonical graph reformulate links logical operations 
instance sowa results compatible projections define extended join theorem 
sowa hold projections injective vertex set 
page sowa uses lot different types markers clearly insufficient consider individual markers 
way actual application needs dynamic definitions types concepts relations careful algorithmic study type contraction expansion useful 

proceedings third annual workshop conceptual graphs aaai st paul 
proceedings fourth annual workshop conceptual graphs ijcai detroit michigan 
proceedings fifth annual workshop conceptual graphs american meeting aaai boston ma european meeting ecai stockholm sweden 
proceedings sixth annual workshop conceptual graphs ny way 
ed suny 
proceedings seventh annual workshop conceptual graphs las cruces new mexico pfeiffer 
ed new mexico state university 
chein chein graphes notions de base crim 
clancey clancey sowa book review artificial intelligence 
ellis ellis compiled hierarchical retrieval proceedings sixth annual workshop conceptual graphs ny way 
ed suny 
landau conceptual graphs semantics knowledge processing ibm res 
develop 
garey johnson garey johnson computers intractability guide theory np completeness freeman 
haussler haussler learning conjunctive concepts structural domains machine learning 
page inference conceptual graph knowledge representation language 
edt research development expert systems iv cambridge university press 
journal experimental theoretical artificial intelligence special issue conceptual graphs september 
kbs knowledge systems special issue conceptual graphs september 
induction networks ieee international workshop tools ia fairfax usa 
mugnier chein mugnier chein polynomial algorithms projection matching proceedings seventh annual workshop conceptual graphs las cruces new mexico pfeiffer 
ed new mexico state university pp 
mugnier mugnier contributions pour les graphes les graphes phd thesis lirmm universit montpellier ii october 
nagle ed 
conceptual structures current research practice nagle nagle eklund 
eds horwood publishers 
analysis algorithm subtree problem siam computer vol 
december 
shapiro haralick shapiro haralick structural description inexact matching ieee transactions vol 
pami september 
smoliar smoliar sowa book review artificial intelligence 
sowa sowa conceptual structures information processing mind machine addison wesley 
sowa sowa conceptual structures response review smoliar artificial intelligence 
sowa sowa conceptual graphs universal knowledge representation semantics networks artificial intelligence lehmann 
ed pergamon press 
