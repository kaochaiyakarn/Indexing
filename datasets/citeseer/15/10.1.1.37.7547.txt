ontolingua server tool collaborative ontology construction adam farquhar richard fikes james rice knowledge systems laboratory stanford university gates building mc stanford ca fikes rice ksl stanford edu reusable ontologies increasingly important tasks information integration knowledge level interoperation knowledgebase development 
developed set tools services support process achieving consensus common shared ontologies geographically distributed groups 
tools worldwide web enable wide access provide users ability publish browse create edit ontologies stored ontology server 
users quickly assemble new ontology library modules 
discuss system constructed exploits existing protocols browsing tools experience supporting hundreds users 
describe applications tools achieve consensus ontologies integrate information 
ontolingua server may accessed url ontolingua stanford edu 
need ontologies order agent statements ask queries subject domain conceptualization domain 
domain conceptualization names describes entities may exist domain relationships entities 
provides vocabulary representing communicating knowledge domain 
explicit specifications domain conceptualizations called ontologies essential development intelligent systems interoperation heterogeneous systems 
provide system developer vocabulary representing domain knowledge core domain knowledge descriptions vocabulary terms represented 
ontologies inform system user vocabulary available interacting system domain meaning system ascribes terms vocabulary 
ontologies crucial enabling knowledge level interoperation agents meaningful interaction agents occur share common interpretation vocabulary communications 
ontologies useful ways human understanding interaction 
example serve embodiment consensus reached professional community physicians meaning technical vocabulary interactions exchange patient records 
ontology construction difficult time consuming 
high development cost major barrier building large scale intelligent systems widespread knowl edge level interactions computer agents 
conceptualizations intended useful wide variety tasks important means removing barrier encode ontologies reusable form large portions ontology application assembled existing ontologies ontology repositories 
working develop disseminate effective easy tools creating evaluating accessing maintaining reusable ontologies fikes 
developed set tools services support development ontologies individuals process achieving consensus common ontologies distributed groups 
tools world wide web enable wide access provide users ability publish browse create edit ontologies stored ontology server 
design web interface underlying infrastructure detailed rice 
tools services provide facilities crucial promoting ontologies agent interaction including semi formal representation language supports description terms informally natural language formally rigorous computer interpretable knowledge representation language 
extended version ontolingua language gruber provides frame syntax addition full order logic specified knowledge interchange format kif genesereth fikes 
language supports semi formal definitions documentation strings notes addition formal specifications 
browsing retrieval ontologies repositories 
browsing requires presentation formal descriptions easily understood format 
easiest express browse knowledge fits object oriented frame view 
believe growing popularity object systems languages databases corba substantially widens group people comfortable working paradigm 
key presentation objects separated internal representation 
assembly customization extension ontologies repositories 
requires ability identify resolve name conflicts augment descriptions terms assembled ontologies 
extended ontolingua language users quickly assemble new ontology library modules extend restrict definitions library 
facilities translating ontologies repositories typical application environments 
developed translators number representations including corba idl zahavi prolog clips loom macgregor genesereth kif 
facilities programmatic access ontologies remote applications reliable access date term definitions 
defined network protocol application program interface api enable remote applications ontolingua server learn vocabulary ontology example ask relations terms 
support distributed collaborative development consensus ontologies 
developed network accessible development environment mosaic netscape rich set features support concurrent ontology development fine grained locking mechanisms analysis alternative definitions multiple authors 
ontology development technology succeed commonplace people broad spectrum communities build ontologies routinely spread sheets mail 
indicator success availability widespread large scale repositories reusable ontologies diverse disciplines software development database design maintenance networkbased information retrieval electronic commerce 
indicators success emerge technology progressed sufficiently benefits provided ontologies significantly outweigh costs developing 
section discuss new features ontolingua language support assembly reuse existing ontologies repository 
section addresses design ontology editing tools 
section presents empirical evidence regarding usability ontolingua server experience supporting hundreds users 
ontolingua server architecture readers authors remote collaborators app 
database remote applications helper translators loom idl clips 
library server editor ontology editor server kb app 
stand applications net 
facilities batch file transfer architecture ontolingua server 
developed deployed ontology server satisfies requirements described previous section 
motivate design architecture system consider problem constructing ontology therapeutic drugs gennari 
ontology projects substantial challenging problem 
single expert expertise necessary construct ontology 
essential experts collaborate construction 
furthermore essential prospective users ontology examine evaluate critique 
prospective users geographically distributed variety organizations hospitals government agencies 
ontology built number ways 
practitioners want sure term meaning 
second networked programmatic agents medical expert systems query ontolingua server run time 
instance helper system gennari query ontolingua server determine character therapeutic drugs anti drug 
third standalone programs ontologies skeleton representations 
addition knowledge systems valuable provide starting point constructing database schema object oriented programs 
design architecture ontolingua server supports modes 
shows schematic view system 
leftmost box depicts generalpurpose ontolingua editor server 
server provides access library ontologies allows new ontologies created existing ontologies modified 
primary modes interaction ontolingua server indicated boxes right side 
remote distributed groups web browsers browse build maintain ontologies stored server 
server interacts widespread hypertext transfer protocol hypertext language html world wide web 
server accessible wide audience 
user familiar common web browsing tools netscape navigator tm ncsa mosaic browse build maintain ontologies stored server 
server allows multiple users simultaneously ontology shared session 
editor provides number features support collaborative notifications comparison shared change logs 
design web interface underlying infrastructure detailed rice 
second remote applications may query modify ontologies stored server internet 
programmatic interactions network api extends generic frame protocol karp myers gruber network interface 
network interface supports queries drug updates create subclass vector quantity called vector quantity 
third user translate ontology format specific application gruber 
resulting translation number ways 
example clips translation produces set class definitions inference rules run directly clips application 
interface definition language idl translation produces idl header file corba compliant program interact object request broker orb 
kif translation produces file logical sentences logic facilitator fielded commercenet draw inferences response client queries route queries correctly keller 

ontolingua language original ontolingua language described gruber designed support design specification ontologies clear logical semantics 
accomplish gruber started kif 
kif monotonic order logic simple syntax minor extensions support reasoning relations 
gruber extended kif additional syntax capture intuitive bundling axioms definitional forms ontological significance frame ontology define object oriented terms 
ontolingua server extended original language ways 
provides explicit support building ontological modules assembled extended refined new ontology 
second explicit separation ontology presentation representation 
original ontolingua language provided limited support defining ontological modules form tree named ontologies 
shall see section users simple model inadequate ways 
furthermore module system clearly articulated semantics sharp conflict basic goals language 
subsequently introduced new inclusion model clear separation set axioms ontology input output behavior implementation translate sequences characters axioms 
separation presentation representation implicit ontolingua translation approach sharing ontologies 
current system explicit recognition distinction key notion 
representation underlying meaning ontology defined set kif axioms 
ontolingua representation simple clear unambiguous 
presentation manner kif axioms viewed manipulated user 
designing presentation involves user expectations assumptions 
may complex redundant ambiguous user wants semantics translation target demands 
shall see section presentation ontolingua server browsing editing environment particular tailored object oriented frame language descriptions world 
hope users find presentation clear guarantee statement corresponds unambiguously kif axiom 
vocabulary presentation defined frame ontology 
frame ontology defines terms including class subclass slot slot value type slot cardinality facet 
ontology defined vocabulary ontolingua server form users find quite palatable 
key property extended ontolingua language presentation ontolingua server axioms fit frame language allowed 
restriction expressiveness 
extremely important ontology development environment 
contrast inference tool traditional knowledge representation tool tractability paramount ontology development tool support expression 
example user wishes state disjunction pass grade equivalent ontology development environment allow state 
ontolingua server operate ontologies instance translate expressive languages 
reason editing environment encourages users stay relatively simple frame sublanguage 
commands creating subclasses adding slots constraining slot values easy find 
frame language axioms simply concisely 
possible users write arbitrary kif axioms 
extreme case axiom serve important formal specification authors intention 
kif consequently ontolingua monotonic performing weaker translations retain correctness 
summarize underlying representation ontology set kif axioms 
sentences projected variety lenses produce editor frame pages html documents loom knowledge bases prolog clauses objects manipulated gfp 
rich infrastructure described allows new projection assembled components 
assembling ontology want ontologies practical useful artifacts 
means effort required construct new ontologies minimized effort required construct ontology amortized multiple uses users 
enable ontology writers reuse existing ontologies flexible powerful way 
section show ontolingua server allows users reuse existing ontologies modular structured library inclusion polymorphic refinement restriction 
formally ontologies system specifications axiomatic logical theories 
ontology specification consists vocabulary non logical symbols set kif axioms constrain acceptable referents symbols 
ontolingua user specifies axioms form definitions classes relations functions constants 
non logical symbols names relations functions constants 
section describe approach providing ontology reuse terms operations sets axioms non logical symbols occur 
shows motivating examples drawn ontology building experience 
example shows simplest relation ontologies inclusion 
author national semiconductor product ontology needs represent basic information products prices services 
wants include entire contents generic product ontology ontology library modification 
example see specialized ontologies may simplifying assumptions restrict included axioms 
example integer arithmetic ontology numbers restricted integers 
example author wishes extend addition operator distinct ways 
library contains axioms addition operator kif numbers ontology associative commutative identity element 
wishes extend addition operator apply vectors ontology apply strings ontology refer operation notice inclusion mean cut paste contents product ontology national ontology file 
interpretation result unfortunate version dependencies 
produc ts product service agreement national semiconductor operational amplifier subclass product example example restriction commutative associative integer tic numbers integers medic ine cause rist fractures example circularity medic ne cause wrist fractures numbers commutative associative example ref rs vectors vector addition string strings concatenation ex tended arithmetic commutative associative vector addition vectors concatenation strings 
relationships ontologies 
phic refinement 
example see inclusion relations ontologies may circular 
consider ontologies medicine sports 
medical ontology need refer variety terms sports ontology roller leading cause wrist fractures teens sports ontology refer medical terms weight may increase muscle growth 
handle sort relationship carefully ontology designers want ontology polluted non logical symbols 
knowledge representation systems addressed issues way 
turning solution discuss approaches illustrate shortcomings motivate novel design choices 
easiest simplest approach provide explicit support represented knowledge author beware 
instance theo system mitchell uses single knowledge base single set axioms 
sense enables examples represented key drawbacks impossible restrict definitions example 
second eliminating modularity understanding evaluating ontologies nightmare 
authors systems resort lexical conventions discriminate symbols vectors strings 
automated support conventions difficult enforce 
furthermore enforcing may desirable 
example axioms vectors ontology operator axioms 
fairly common extension allow directed acyclic graph dag inclusion relations theories provided genesereth 
mechanism supports modularity restrictions incompatible augmentations 
drawbacks cycles allowed theories 
seen natural desirable cyclic relationships terms ontologies 
second simple form mechanism results unnecessary name conflicts 
instance ontology scientific course include ontologies chemistry academics define tests different ways 
way discriminating tests chemistry tests academics 
loom system provides dag inclusion relationships extends simple approach allowing non logical symbols ontologies included 
referencing symbol ontology include axioms ontology minimal type information 
conflates declarative semantics defined axioms pragmatic information axioms apply problem solving 
distinct aspects solution inclusion model defines axioms non logical symbols included new ontologies input output model defines relationship character strings input output user non logical symbols ontologies 
initially wanted avoid additional complexity introduced allowing circular users demanded 
particular example circular occur possible create new ontology sports medicine contains subset ontologies cycle 
practical solution may require entire structure ontology library changed add single axiom 
impossible general purpose library ontological fragments reused 
semantic model ontology inclusion order facilitate reuse existing ontologies ontolingua server provides facility including ontology follows 
ontology considered specified vocabulary non logical symbols set axioms 
formally including ontology ontology requires specifying translation vocabulary vocabulary applying translation axioms adding translated axioms axioms specification say axioms resulting set axioms ontology included ontology ontology include translated versions axioms specification axioms say axioms ontology mean union axioms specification axioms ontology included notion inclusion defines directed graph inclusion relationships contain cycles 
allow ontology inclusion transitive say ontology included ontology path ontology inclusion graph ontolingua server eliminates symbol conflicts ontologies internal representation making symbol vocabulary ontology disjoint symbol vocabulary ontologies 
internal representation symbol vocabulary ontology different symbol symbol ontology symbol vocabularies disjoint ontolingua server assume internal representation translation inclusion relationships identity translation 
internal representation including ontology ontology simply means adding axioms axioms note model ontology inclusion cyclic inclusion graphs problem effect ontology inclusion union sets axioms 
ontology contains axiom symbol vocabulary ontology considered included ontolingua server allows users state explicit inclusion relationships ontologies implicitly creates inclusion relationships symbol axioms 
syntactic model input output complex common lisp package system james rice semantic model introduced provides powerful simple unambiguous way ontologies assembled reused 
order eliminate ambiguity requires symbols clumsy extended unique names may unknown user 
allow user perform important operations renaming symbols included ontologies selectively controlling symbols imported included ontologies exported ontologies 
ontolingua server solves problems additional capabilities part facilities converting symbol input output text internal symbol representation 
ontolingua requires non logical symbol referred input output stream defined ontology assigned name 
ontology symbol defined called symbol home ontology 
similarly ontology name uniquely distinguishes ontology 
ontolingua server interprets symbol input stream produces symbol output stream perspective ontology 
ex ample symbol defined ontology defined ontology perspective ontology input text interpreted symbol named defined ontology perspective ontology input text interpreted symbol named defined ontology 
perspective symbol interpreted explicitly specified attaching suffix symbol name consisting character name ontology 
example symbol named interpreted perspective ontology explicitly referred 
symbol includes ontology name suffix said fully qualified 
fully qualified enable symbols defined ontology referenced ontology 
ontolingua server input output system provides symbol renaming facility allows user assign name symbol local perspective ontology 
renaming specified rule includes ontology name symbol name local name symbol perspective ontology 
renaming rule system recognize local name symbol processing input perspective local name refer symbol producing output perspective 
example renaming rule specify ontology local name auto vehicles car 
facility enables ontology developer refer symbols ontologies names appropriate ontology specify naming conflicts symbols multiple ontologies resolved 
convenience input parsimony output ontology name suffix omitted symbol symbol name unambiguous intended perspective 
particular symbol referred perspective ontology simply symbol defined ontology name renamed ontology imported ontology name refer defined symbol perspective ontology said recognized ontology 
convention omitting ontology name suffix symbol implies name recognized ontology name symbol defined name symbol imported renamed local name symbol describe mechanisms importing symbols ontology 
defined symbol designated public private ontology defined 
system considers symbols public default users ignore public private distinction encounter want define private symbols 
ontolingua server associates ontology set ontologies public symbols imported ontology 
user commands available editing set ontologies 
order simplify symbol importing mecha users change default ontology basis 
nism default ontolingua server automatically adds set ontology explicitly included 
users ignore distinction symbol importing explicit inclusion want override default 
order provide control importing individual symbols ontolingua server associates ontology set shadowed symbols blocked imported ontology 
set shadowed symbols overrides symbols set imported ontologies symbol imported ontology symbol public symbol defined ontology imports shadowed symbol public symbol ontology import imported means identity renaming goes ontolingua server uses shadowing mechanism prevent ambiguities occurring text form symbol automatically blocking importation ontology symbols text form ontology perspective 
symbol referred perspective ontology different symbol referred perspective ontology public symbols ontologies imported ontology ontolingua server automatically adds list shadowed symbols order prevent ambiguous symbol perspective ontology automatic shadowing occurs irrespective order definitions inclusion relationships specified 
example inclusion relationship ontologies exists symbol referred defined added set symbols shadowed ontology time defined 
summary summarize note ontolingua supports ontology inclusion circular dependencies polymorphic refinement reconsidering examples 
ontolingua ontology inclusion relationship example explicitly established developer national semiconductor products ontology part definition ontology editing operation ontology defined 
inclusion relationship public symbols generic products ontology service agreement names conflict recognized names perspective national semiconductor ontology default imported national semiconductor products ontology referred perspective ontology names suffix 
circular dependencies medicine sports ontologies example established fully qualified names refer symbols perspective ontology 
example medicine ontology roller referred roller sports sports ontology tests referred tests medicine 
roller medicine ontology cause axioms home ontology symbol sports implicitly included medicine ontology cause public symbols sports ontology imported medicine ontology 
polymorphic refinement example case subtle properties implicit ontology inclusion apparent 
ontology explicitly include vectors strings numbers ontologies vectors strings cause numbers implicitly included cause vectors strings included vectors strings refer symbol home ontology numbers 
vector addition axioms ontology vectors string addition axioms ontology strings included ontology user state inclusion relationship explicitly 

ontolingua development environment goal create general environment facilitate development sharing ontologies 
environment assist user basic development tasks browsing creating maintaining sharing ontologies 
realized users desire develop ontologies consensus process needed provide tools help people collaborate development ontologies 
section discuss features implemented webbased ontology environment provide assistance basic development tasks facilitate collaboration improve ease 
browsing ontologies essential component browsing environment able quickly jump term ontology hyperlinks 
selecting name term takes user page displaying definition term 
definition consists informal documentation formal statements term 
displaying information purely logic form display information objectoriented frame form see 
frame slots displayed left side screen values corresponding slots displayed name axioms fit frame sublanguage listed kif 
properties class 
properties apply instances class 
term hyperlinked definition 
includes basic terms 
go buttons link inferred information definition came 
screen image ontolingua server browsing environment showing class definition automobile vehicles ontology 
slot 
information displayed slot facet values appears page axioms 
users examine entire ontology want see information term inferable definition terms 
support feature ontolingua server performs limited set inferences typically provided frame representation systems 
include inheritance classes subclasses instances inverses limited transitivity 
information directly asserted visually distinguished inferred information 
direct assertions appear roman font inferred information appears italics 
user see inferred information directly asserted pressing button labeled go attached piece inferred information 
ontolingua server provides class subclass browsers display entire hierarchy compact fashion give user quick overview ontology 
node arc graphic display hierarchy displayed indented text form widgets allow subtrees closed opened see 
class browser interacts ontology inclusion graph 
user select set ontologies contents included hierarchy 
user focus display single class reduce clutter large ontologies 
moderate sized ontologies definitions find indented text format preferable graphic display 
furthermore textual display substantially reduces number bytes required describe hierarchy 
results improved performance networked tools 
class slot class instance browsers provide compact overview set ontologies 
objects selected ontologies displayed 
building ontologies designed ontology editing environment similar appearance ontology browsing environment user need learn different interfaces 
difference editing environment browsing environment new types icons appear editing environment edit pens insertion icons 
edit pens appear front information modified user 
user wishes change information selects appropriate edit pen form modifying current information appears 
insertion icons appear user allowed add information new value facet slot 
user selects insertion icons form entering new information appears 
contents forms depends type thing added edited 
commands don fit paradigm appear menu options top screen 
example commands creating new terms appear menus 
user select type term create appropriate form prompt user information new term 
possible slots matching partial input easily inserted 
facets selected menu typed 
user types new facet value 
html included string 
users edit definitions selecting edit gadgets pens addition icons 
input field page appropriate location 
appearance editing browsing modes similar possible 
maintaining ontologies ontolingua server provides features assist ontology maintenance 
users compare ontologies see set actions transform 
easy way monitor changes ontology undo modifications 
users analyze ontology inconsistencies undefined terms 
slots slot values facets facet values checked sure conform known constraints domain range slot value type cardinality constraints 
course development users want split ontology set easily understood tightly focused modules 
server provides direct support splitting large ontology smaller ontologies may include 
informal documentation important part making ontologies maintainable 
ontolingua server supports special keywords informal documentation known notes 
user assign keyword example verified see modification named provide structure informal documentation 
sharing ontologies ontolingua server provides number features promote sharing ontologies 
primary mechanism supporting ontology reuse library ontologies acts central repository reusable ontologies 
ontology believe ready choose publish ontology ontolingua server 
ontology approved available access ontolingua server library 
ontolingua server provides tools searching terms ontologies library 
user may choose general search facility allows wild cards searching entire library terms name matches specified pattern 
context sensitive searching available user needs fill name term adding value slot 
context sensitive searching constraints terms appropriate limit search 
collaboratively developing ontologies features clearly distinguishes ontolingua server ontology development environments support distributed collaborative ontology construction 
distributed access provided web interface 
collaborative facilitated user group access control multi user sessions 
ontolingua server uses notion users groups typical multi user file systems 
file systems read write access ontologies controlled ontology owner giving access specific groups 
mechanism supports access protection collaboration groups people defined ontology development environment 
server provides support simultaneous group sessions 
user opens session may assign group ownership 
enables members group join session simultaneously set ontologies 
notification mechanism informs user changes users 
notifications hyperlinked changed definitions describe changes terms basic operations add delete modify farquhar added slot motor class vehicle 
synchronous nature web protocols sort notification somewhat clumsy server notify users change occurred visit new page 
advances client side tools relaxing restrictions 
ease designing interface ontolingua server wanted tool simple novice understand powerful support experienced users 
accommodate differing levels users added large variety user preferences controlling behavior user interface 
interface simple ontolingua server provides basic types pages table contents ontology library ontology summary pages frame pages classes relations instances class browser 
ontolingua server provides wide variety features environment easy 
hyperlinked environment easy provide tutorials line documentation contextsensitive help selected time 
addition server allows user undo redo number modifications ontology saved 
ontologies ontolingua server currently provide inferential power provide support ontologies 
way ontologies developed ontolingua server translate ontology representation language system clips loom prolog 
currently ontolingua server translate different representations 
users transfer translation email 
users may mail ontologies standalone source code formatted text 

results section discuss experience providing ontolingua server web 
general approach providing access research software web appears highly successful 
increased numbers users simultaneously reduced development costs order magnitude 
able reach wide audience cost effective manner provide high quality robust useful tool far higher functionality possible distributing software conventional fashion 
research organizations ksl limited resources devote maintaining documenting distributing software 
general invest energies adding new functionality porting platform idiosyncratic hardware software configuration 
furthermore users research software invest time energy evaluating downloading configuring compiling 
save buying necessary software licenses hardware platform needed support software 
numerous benefits users familiar web browsers ontolingua server right away 
constrained interface afforded html positive effects interface design cleaner streamlined 
useful contextsensitive hypertext documentation accessible user web interface 
custom server easily extended handle network protocols network gfp 
modular state session organization easily extended support network services described available www ksl stanford edu 
evaluating impact ontolingua server specific projects difficult 
engaged formal study logging information kept limited 
partly design partly due nature system 
want users feel confident privacy data interactions server 
especially important industrial users 
clear sorts information useful log 
web servers maintain complete log urls requested 
allows determine usage patterns specific documents examined 
ontolingua server things simple 
urls go ontolingua server encode request identifier unique command user session 
record identifiers useless recording hash keys hash tables subsequently cleared 
furthermore pages users access come fixed set files server 
users create modify delete new objects 
effectively infinite space objects relatively little overlap users 
recording objects visited little interest 
interesting record command executions ontolingua server supports distinct commands current command architecture difficult draw coherent picture user activity sort log 
important step determine meaningful instrumentation help evaluate impact editor collaborative activities 
base level instrumentation allows draw inferences patterns usage activity 
ontolingua server extremely reliable 
public announcement start february server available time 
including scheduled downtime hardware software upgrades total downtime typically hour month 
typical period uninterrupted service weeks multi day sessions common active users 
high level reliability essential expect remote users tools services 
ontolingua server reached wide audience acceptable level continued 
believe ontologies increasingly useful important number purposes ontolingua server research vehicle relevant narrow range people 
expect usage levels approach general purpose web sites lycos 
furthermore announcements ontolingua server fairly focused mailing lists researchers interested ontolingua shareable reusable knowledge bases qualitative reasoning 
indicates number registered users grown steadily currently exceeds 
jan feb mar apr may jun jul aug sep oct nov dec jan feb mar apr may new users number new users registering month january may indicates strong continuing interest 
clearly number users tell full story 
shows distribution users total number requests 
expect largest group users ones simply surfed executed small num ber requests moved 
examining pages requires investment time energy 
users clearly evaluating system exploring capabilities 
level activity consistent colleagues superiors looking ontology author 
executing requests sufficient construct sample ontologies student level representation exercises 
users developing strong sense system capabilities 
users issued thousands requests 
serious users doing substantial ontology development 
shape graph remained fairly stable time 
number requests user group users grouped number requests 
shows distribution requests top level internet domain 
graph underestimates amount european include figures mirror site established madrid november 
point european users switched mirror site benefit improved bandwidth 
approximately percent requests logged came ksl users 
overwhelming majority requests issued educational users substantial number issued commercial users com active groups established europe great britain japan 
dk edu es fi fr gov hk il jp kr mil mk mx net nl nz org pt se sg si tw uk va yu za unk misc ksl number requests internet domain 
usage patterns consistent expectations generally software industry 
small percent people try ontolingua server domain marked unk accounts requests logged anonymous connections 
log requests domain user email address current connection location 
regular basis 
rest try move return need capabilities ontolingua server 
evaluating done ontolingua server impact collaboration difficult 
clear users constructing substantial ontologies 
subject matter user contributed ontologies varied 
mature ontologies include metadata genome database integration satellite image metadata enterprise integration products product catalogs semiconductors robotics solid modeling drugs medical terminology ieee standard tool interconnections 
larger ontologies medical terminology contains definitions imported existing projects 
ieee ontology contains definitions constructed entirely interactions ontolingua server 
addition ontology construction efforts ontolingua server projects provide run time access ontologies 
helper medical application computer record system patients human virus hiv 
order determine patients eligible participate clinical trials uses ontology drug types specific drugs 
queries ontolingua server help determine drug related eligibility criteria met gennari 
shade project addressing information system interoperability issues 
ontolingua server define large ontologies satellite image metadata federal geospatial metadata standard satellite image database 
client side tools developed view metadata define mapping relations concepts 
client side tools extract concept definitions ontologies stored server 
level ontolingua server experienced indicates system filling important niche meeting goal reaching wide audience providing reliable useful tools building ontologies 

described implemented architecture distributed collaborative ontology development exploits world wide web protocols provide access growing user community 
inclusion model ontologies enables users assemble new ontologies rapidly existing ones repository 
model clean separation simple formal semantics input output properties system uses 
formal model handles simple inclusion polymorphic refinement restrictions circular inclusion dependencies 
input output model yields succinct readable external representations transparent users 
described web ontology editing environment rice integrated ontolingua server incorporates inclusion model 
addition providing individual users rich featured editing environment server supports collaboration distributed groups users provides access growing repository ontologies 
ontolingua server provides vital publishing medium ontologies hypertext pointers reliably point document publicly accessible library ontologies 
empirical evidence approach disseminating providing tools ontologies effective 
tools infrastructure supports extremely reliable uptime 
infrastructure scales currently supports users performance problems 
users able construct substantial ontologies web editor including ontologies hundreds definitions 
construction efforts collaborative users distributed world wide 
server architecture supports programmatic queries remote software agents interrogate server definitions terms ontologies possibly modify 
constructing ontologies difficult time consuming process 
tools developing help amortize effort users multiply benefits uses 
ontolingua server available public ontolingua stanford edu 
acknowledgments research supported arpa nasa ames research center nag nasa ames research center contract ncc commercenet contract cn trp 
acknowledge valuable contributions pratt rupert users ontolingua server 

bibliography fikes cutkosky gruber van 

knowledge sharing technology project overview 
ksl 
stanford university knowledge systems laboratory 
genesereth 

manual 
palo alto ca 
genesereth fikes 

knowledge interchange format version manual 
logic 
computer science department stanford university 
gennari oliver pratt rice musen 

web architecture medical vocabulary server 
nineteenth annual symposium computer applications medical care 
new orleans la gruber 

ontolingua mechanism support portable ontologies 
ksl 
stanford university knowledge systems laboratory 
gruber 

translation approach portable ontology specifications 
knowledge acquisition 
karp myers gruber 

generic frame protocol 
th international joint conference artificial intelligence 
montreal canada 
keller 

smart catalogs virtual catalogs 
readings electronic commerce ed 
ravi andrew whinston addison wesley 
macgregor 

loom users manual 
isi wp 
usc information sciences institute 
mitchell allen chalasani cheng etzioni ringuette schlimmer 

theo framework self improving systems national science foundation digital equipment 
zahavi 

essential corba system integration distributed objects john wiley object management group 
rice farquhar gruber 

web window system 
conference human factors computing systems chi 
vancouver ca addison wesley 
