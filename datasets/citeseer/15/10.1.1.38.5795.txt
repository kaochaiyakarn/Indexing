barbed bisimulation robin milner davide sangiorgi laboratory foundations computer science department computer science university edinburgh king buildings edinburgh eh jz process algebras emerged key model reason nondeterministic concurrent computations 
transition semantics defining appropriate congruence top labelled transition system describing possible evolutions process 
contrasts happens term rewriting systems reduction semantics equivalence defined top unlabelled transition system reduction system 
simplicity semantics term rewriting systems attractive turn facilitates satisfactory mathematical analysis 
lambda calculus probably known term rewriting system reduction system possible terms having interact naturally contiguous positions 
case process calculi interaction dependent physical contiguity 
put way redex lambda term subterm redex process calculus distributed term 
guideline definition reduction systems process algebras offered milner inspired berry boudol chemical machine 
technique axioms structural congruence relation introduced prior reduction system order break rigid geometrical vision concurrency reduction rules easily redexes subterms 
shown modulo structural congruence reduction relation exactly represents silent action transition semantics 
left open problem recover formulation familiar congruences labelled transition system 
turns trivial problem 
tackle simple case ccs strong observational equivalence 
reduction relation coincides silent action gamma 
labelled transition system mentioned remain framework 
wish retain spirit reduction semantics far possible sense wish equip global observer minimal ability observe actions process states 
obtain equivalence indistinguishability global observations 
turn induces congruence agents equivalence contexts 
question minimal power observation characterizes way congruences familiar 
look characterization way reasonable examine case silent actions observables 
unfortunately reduction congruence obtained general discriminatory processes 
necessary add capability observing properties states 
natural concurrency extra power provided term action observability sense minimal capability adoption predicate detecting possibility performing visible actions 
may predicate sense boudol 
call resulting bisimulation relation induced congruence respectively barbed bisimulation barbed congruence 
mainly devoted proving barbed congruence coincide 
barbed bisimulation strongly recalls abramsky applicative bisimulation lambda calculus defined terms reduction 
fact generality predicates independent underlying transition system allows barbed bisimulation tool describe uniformly bisimulation equivalences calculi syntactically may quite far 
useful different aspects 
helps lot understanding relationship different calculi 
barbed bisimulation instance able conduct study expressive power calculus modeling lambda calculus higher order calculus barbed equivalence provides free new calculus important equivalence excellent test calculus operators find barbed congruence characterized direct way involving quantification contexts 
important point emerging cases reduction semantics may simple transition semantics 
study suggests higher order process calculi benefits decisive 
structure 
review basic concepts pure ccs section study reduction bisimulation congruence barbed bisimulation congruence respectively sections section look issues uses barbed bisimulations 
background review syntax operational semantics pure ccs concept strong bisimulation 
fa set names fa aja set labels built act fg distinguished action silent action convention range ff act 
set psi variables ranged set phi agent constant ranged class ccs expressions names smallest class includes psi phi contains expressions ff je indexing set supposed constant defining equation form def 
ccs expression free variable process 
represent processes 
ccs expression variable context 
context process write denote closed term obtained substituting variable occurring ff ff gamma 
ff gamma 
ff gamma 
ff gamma 
ff gamma 
ff ff ff gamma 
ff gamma 
def ff gamma 
ff gamma 
jf ff gamma 
je ff gamma 
je gamma 
gamma 
gamma 
jf table operational semantics ccs operational semantics ccs process modelled labelled transition system 
shown table 
transition ff gamma 
ff act interpreted may perform action ff doing 
write denote inactive agent defined def write ff gamma 
mean exists ff gamma 
abbreviate gamma 
gamma 
ff ff denote syntactical identity 
definition process descendant process sequence actions ff ff ff ff act exist ff gamma 
ff gamma 
ff gamma 
ff ff act ff gamma 
ff gamma 
defined obvious way composition relations 
set sort process descendant gamma write strong bisimulation commonly accepted finest extensional behavioral equivalence processes impose 
definition relation strong simulation ff gamma 
action ff ff gamma 
strong bisimulation gamma strong simulations 
processes strongly bisimilar written strong bisimulation reduction bisimulation definition strong bisimulation actions act treated uniformly 
get characterization focus silent action simplest form action 
consider definition definition relation reduction simulation gamma 
gamma 
reduction bisimulation gamma reduction simulation 
processes reduction bisimilar written delta iff reduction bisimulation delta interesting weak instance preserved parallel composition 
example consider def def 
delta delta natural consider congruence induced delta definition processes reduction congruent written iff context holds delta 
trying dot denote equivalence necessarily congruence case equivalences absence dot means congruence 
proposition proof 
clearly delta congruence implies turns implies delta context proof proposition correct allowed non standard ccs operators context long operators formed intuitively operator formed behavior depends semantics syntax operands 
fact congruence formed operators 
meaning formed operators formed transition systems formally studied unfortunately converse proposition true 
definition divergent descendant gamma 
processes divergent necessarily strong bisimilar see proposition reduction congruent intuitively state reach divergent ccs context distinction long actions observed 
proposition divergent proof outline shall prove context reduction bisimulation 
suppose gamma 
produced action gamma 
suppose gamma 
contributed action interaction simply performing action context exists gamma 
gamma 
holds gamma 
gamma 

divergent 
follows proposition proof 
take def def proposition prove section restrictions divergence freeness 
notice distinguish processes proof proposition added disabling operator similar intent lotos operator described rules ff gamma 
ff gamma 
ii gamma 
gamma 
gamma 
defined proposition hold delta looks image finiteness guaranteed addition coincide 
pursued direction 
wanted stick ccs contexts tried increase little possible power global observer induce congruence identical barbed bisimulation write mean exists 
perform visible action case 
definition process called inactive perform actions 
definition relation barbed simulation gamma 
gamma 
implies 
barbed bisimulation gamma barbed simulation 
processes barbed bisimilar written delta iff barbed bisimulation notice global observer visibility silent actions produced state reached recognize production visible action case see identity action produced state reached 
definition processes barbed congruent written iff context holds delta 
clearly holds remaining section devoted proof name 
consider sequence fn fl fl ordinal processes defined def fl def fl gamma fl ordinal successor fl def ffi fl ffi fl ordinal limit 
lemma inactive processes ordinals fl ffi fl ffi implies jn fl delta ffi proof 
transfinite induction 
prove main theorem theorem proof 
define strong bisimulation containing pair 
ji ig set fn fl built ordinals sure possible associate distinguished define context def def def 
take jp delta claim strong bisimulation 
gamma 
find gamma 
note gamma gamma 
jv nl 
delta gamma gamma 
delta gamma 
jv gamma gamma 
nl move visible second 
forces gamma gamma 
nl gamma 
jn matched gamma 
jn prove delta fact fl fl fbg jn proposition delta jn similarly delta jn jn jn inactive follows lemma 
remains prove delta 
analogous reasoning prove move gamma 
jv nl matched gamma 
jv nl obtaining jv nl delta exactly delta 
case gamma 
simpler need move 
proposition asserted general shown divergent processes 
prove divergence just relations different 
definition div largest class processes div div gamma 
processes div usually called divergent 
process divergent free descendant divergent 
definition largest class processes descendant gamma 
call totally divergent processes 
process omega def omega classical totally divergent process 
notice process may divergent totally divergent 
example take process omega gamma theorem divergent free proof 
outline proposition prove ae fn omega fl fl ordinal defined fn fl fl ordinal omega replacing divergent free omega predicate gamma 
totally divergent delta delta proofs lemma theorem remain correct yielding ae 
issues barbed bisimulations mention issues barbed bisimulations examined particular barbed bisimulation weak case higher order process calculi 
refer details 
weak case weak case relation ff replaces ff gamma defined reflexive transitive closure gamma gamma 
replaces interpreted 
notice weak case actions weight weak reduction congruence corresponds universal relation 
delta obvious generalization delta weak case 
tried understand possible recover ccs observational equivalence probably important bisimulation equivalence ccs delta congruence sum operator hope get simply delta possible contexts lead ccs observational congruence 
need parametrize delta subclass possible contexts 
obvious representative subclass structural contexts intuitively contexts built composing variables processes means operator sum 
called barbed congruence 
written resulting relation delta 
far able prove processes image finite relation 
open problem equality holds image finiteness requirement dropped 
delta easy handle considered possibility increasing power observer 
way obtain partitioning visible actions subsets say allowing observer able discriminate visible actions different subsets preventing discriminating actions subset 
gets just partition subsets parametrization resulting relation contexts 
aside just point possibility barbed bisimulations specific class contexts interesting applications 
obtain fully model lazy lambda calculus encoding calculus 
just considering parametrization framework action refinement 
intuitively refinement action modifies communication protocol process contexts respect protocol considered verifying equivalence refined processes 
barbed bisimulations allow idea nice piece theory 
higher order process calculi considered calculus plain chocs ho case study 
calculus 
calculus generalization ccs names exchanged result communication 
questionable calculus considered higher order process calculus proved name passing give nice encoding higher order communications process passing 
major philosophy defining calculus correspondent ccs respectively referred early version late version see clear preferred 
interested finding captured barbed bisimulation machinery 
answer early version point favor fact results described ccs recovered corresponding early equivalences calculus 
plain chocs ho 
plain chocs ccs language process passing adopted ho enrichment calculus names processes parametrized processes arbitrarily high order transmitted 
adoption barbed bisimulations congruences solve non trivial problem obtaining natural bisimulation equivalence calculi 
particular plain chocs adoption barbed bisimulations avoid counterintuitive equalities induced higherorder bisimulation proposed thomsen plain chocs 
milner parrow walker calculus mobile pro cesses parts ii report ecs lfcs laboratory foundations computer science computer science department edinburgh university 
groote transition system specifications negative premises report cs centrum voor wiskunde informatica amsterdam 
groote vaandrager structured operational semantics bisimulation congruence report cs centrum voor wiskunde informatica amsterdam 
sangiorgi forthcoming phd thesis computer science department edinburgh university 
iso dis information processing systems open system interconnection lotos formal description technique temporal ordering observational behaviour 
milner parrow walker modal logics mobile processes report ecs lfcs laboratory foundations computer science computer science department edinburgh university 
boudol lambda calculus strict parallel function report inria sophia antipolis 
berry boudol chemical machine proc th annual symposium principle programming languages 
abramsky lazy lambda calculus declarative programming ed 
addison wesley 
milner calculus communicating systems prentice hall 
milner functions processes report 
thomsen plain chocs report doc department computing imperial college london 

