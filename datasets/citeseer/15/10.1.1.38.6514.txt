recognizing nepotistic links web brian davison department computer science rutgers state university new jersey new brunswick nj usa davison cs rutgers edu link analysis page popularity search engines grown improve query result rankings 
number links contributes value document calculations wish recognize eliminate nepotistic links links pages reasons merit 
explores issues surrounding question links keep report high accuracy initial experiments show potential machine learning tool automatically recognize links 
growing interest research community analysis link information web bharat henzinger brin page chakrabarti chakrabarti dom indyk gibson kleinberg raghavan kleinberg page chakrabarti chakrabarti van den berg dom chakrabarti henzinger kleinberg davison dean henzinger 
effort improve retrieval mechanisms available search engines better rank results query 
commercial efforts google ibm almaden research center predominantly ideas established search engines adopted popularity link analysis components ranking methods sullivan 
popularity link analysis algorithms significantly links point document 
number links contributes value document wish recognize nepotistic links effect reduced eliminated 
typical definition includes relatives broader interpretation consideration relationship merit 
merriam 
include links pages related common administrative control links effect reward advertising paid links 
nepotistic links typically considered undesirable useful eliminate calculating popularity status page 
finding link similar distinct problem identifying duplicate pages mirrored sites bharat broder bharat shivakumar garcia molina 
mirrored pages instance problem trying address entity gets vote considering cases pages mirrored pointing target reasons merit 
link popularity services directhit ask jeeves major engines including lycos lycos hotbot wired digital msn search microsoft collect analyze usage popularity 
calculations usage popularity may benefit knowing nepotistic links considered effects 
short explore issues surrounding question links keep report preliminary results machine learning tool operating hand generated feature set automatically recognize nepotistic links 
issues typically form popularity status calculated large part number links point document 
calculations links point document liable misled number cases site persistent integrated navigational menu pages 
site pages means pages menu incoming links 
link spam content creators recognize ranking method may generate lots pages links pages ranked higher 
second example problem search engine spam pages submitted search engines manipulated ways achieve higher rankings 
link oriented search engines claimed resistance traditional spam techniques focussed textual content irrelevant keywords invisible text repeated google www google com adv features html says technology prevents manipulation returned results marketers spammers terms vulnerable linkage spam 
influence varying amounts sites various levels content quality 
com example high quality site uses integrated navigational menu separates content urls distinct host names 
intentional effect getting pages indexed raising relevance rankings search engines matching keywords host names getting simple heuristics recognize internal links see 
google example pages listed pointing www com domains com 
rest subject pages site com sports mbody htm 
example com site writing consists large set pages link little actual content include obvious keyword placement just link advertisers operated sites domain names typo away popular domain com com 
networks sites unrelated sites point explicit purpose raising search engine rankings com 
number general approaches combat problem including maintain exception list pages abusing incoming links heuristic drop internal links pre processing recognize results search influenced spam adjust results accordingly postprocessing clear exactly methods commercial search engines researchers suggested form second method 
kleinberg 
unfortunately simple heuristic significant exceptions 
example marking links pages identical host names internal drops links different users home pages site 
preserves links different hosts domain 
marking links pages identical domain names drops links different users pages site 
drops links departments organization regardless different servers 
additionally allow links different domains advertising affect link analysis 
general problem really identify links internal recognize links link calculations 
means keeping links pages different people groups owners dropping pages administrative control regardless differences domain name content treat links votes wish prevent voting self 
additionally links exist byproduct advertising banner swap services useful link analysis 
links dropped resulting graph smaller faster analyze 
dropping option link weights supported weights links reduced significantly comparison believed useful 
truth issue complex described 
link analysis links pages considered recommendations 
unbiased recommendations desirable 
companies networks independent sites companies internet com com go net com may biased unbiased links sites may indistinguishable cases successful links may encouraged commercial partnerships corporate 
additionally biased links facilitate traffic flow important usage popularity 
prevent negative publicity search engines mechanism overtly censorship 
believe avoid exception list additionally drawback covering previously identified cases 
post processing approach advantages keeping primary algorithm datasets pure highly algorithm specific consider 
focus preprocessing clean reduce link dataset calculations performed 
section consider machine learning techniques learn potentially complex rule recognize nepotistic links 
preliminary experiments order assess potential automatic recognition nepotistic links performed initial classification experiments 
decision tree package quinlan selected preliminary tests value popular understood learning system variety approaches equally useful 
data sets data sets 
manually labeled links pairs pages contains second selected arbitrarily include data points types pages cleaned labelings link exactly label specifying link nepotistic 
primary concern dataset selected task mind representative links web 
generated second set data 
second dataset randomly sampled link contains tilde contains simple domains domains contains simple links links dns servers contact email contact email pages share links pages share links dns servers complete hostnames complete hostnames domains domains pages share links pages share links links links path components path components contains tilde path components path components decision tree generated 
line shows test validity leaf nodes rule classify nepotistic labeled labeled training set statistics showing number cases correctly covered followed number incorrectly covered 
dataset pages search engine davison links source target indexed 
links manually labeled 
potentially containing bias dataset represent types pages small sample size 
class probabilities datasets differ links set labeled nepotistic vs second 
described possible features described data set contained unique cases vs distinct cases second cases labeled nepotistic comprised respectively 
feature definition non exhaustive set binary features defined manually including tests see page titles descriptions identical page descriptions overlapped percentage text complete host names identical domain names identical host names domains identical number initial ip address octets identical number initial path components identical parent page number outgoing links pages shared percentage outgoing links parent page points com parent page description contains term paths contained keywords home users character tilde domains simple global top level domains com net org edu domains contact email address checked simple domains domains dns servers checked simple domains features defined quickly expectation additional features may required kind feature selection useful possibly feature extraction needed determine additional base base links base text manual train test second train second test feature set error rate single decision tree feature sets number features parentheses 
strings test 
see example features decision tree 
process feature selection domain knowledge features placed groups base set features url strings pair pages base links plus outgoing links ip addresses pair pages base text base links plus title description text pair pages plus tests contact email dns servers pair page domains available domains simple domains groups roughly correspond amount time required evaluate 
base set simple requiring url strings 
base links base text sets information typically search engine database 
final group contains features including require access external potentially slow domain databases 
fifth group termed manual selected manually third features try improve accuracy single decision tree case 
results experiments run default options pruning set features 
shows error rates decision tree generated trained set evaluated 
large difference error rates shown graph gives strong evidence difference distributions datasets 
example contains decision tree generated training dataset testing second manual feature set 
performed experiments fold crossvalidation data set shown 
high average accuracy achieved data set 
average accuracies second set combined sets quite respectively 
evaluated common internal link heuristics 
labeling link containing matching host names nepotistic error rates data set second 
allocation errors shown data set second link nepotistic link matching domain names heuristic nepotistic links error rates respectively second data sets shown data set second nepotistic simple heuristics decision trees generated errors highly skewed retaining links marked nepotistic 
fact desirable quality prefer allow site undue influence potentially prevent site scoring 
base base text manual set second set feature set error rate combined sets base links average error rate fold cross validation feature sets number features parentheses 
discussion data sets results datasets represent typical scenario search service desiring weed linkage spam assembles representative set example links include links nepotistic links encountered 
dataset easy generate rules cover 
second dataset represents actual links web service link data 
expected decision tree generated data set doesn quite second 
fact decision tree trained second set performs poorly suggests dataset focuses kinds examples second cover kinds 
relevant reasons second dataset small truly representative dataset manually collected interesting useful examples contain unusual difficult classify cases get noticed put set place 
take results initial evidence utility automated learning methods problem 
hesitate strong claims results data sets quite small samples links web decision trees point large space possible learning methods applied 
level effort online commercial search engines concerned response time query costs 
engines respond partial data response time minimized restrict amount cpu time dedicated query 
seriously considered computational space requirements expect process need performed line incrementally crawling en masse services dataset updated batches 
case collecting calculating features take time stay dynamic request stream features may change time static analysis insufficient 
link addresses issues voting oneself having vote purchased traditional voting mechanisms 
mentioned earlier concern issue duplicate pages mirror sites may desirable consider links pages duplicate votes 
general problem manifest multiple links pages organization pointing page second organization 
links duplicate distinct pages may produce undue support target page 
measuring pervasiveness problem effectiveness enforcing person vote rule left 
truly popular pages efforts discussed affect results incoming links unrelated external sites 
results queries popular topics may undermined savvy content creators 
issues surrounding idea eliminating nepotistic links analysis demonstrated potential automatic recognition links high accuracy 
acknowledgments benefits greatly systems discussions members research group wei wang ju seo tian supported part arpa order number onr contract 
ask jeeves 
direct hit home page 
www directhit com 
bharat broder 
mirror mirror web study host pairs replicated content 
proceedings eighth international world wide web conference 
bharat henzinger 
improved algorithms topic distillation hyperlinked environments 
proceedings st international acm sigir conference research development information retrieval 
bharat broder dean henzinger 
comparison techniques find mirrored hosts www 
proceedings acm digital library workshop organizing web space 
brin page 
anatomy large scale hypertextual web search engine 
proceedings seventh international world wide web conference 
merriam 
webster revised dictionary 
online www dictionary com 
chakrabarti dom gibson kumar raghavan rajagopalan tomkins 
experiments topic distillation 
acm sigir workshop hypertext information retrieval web 
chakrabarti dom raghavan rajagopalan gibson kleinberg 
automatic resource compilation analyzing hyperlink structure associated text 
proceedings seventh international world wide web conference 
chakrabarti dom gibson kleinberg kumar raghavan rajagopalan tomkins 
web 
scientific american 
chakrabarti dom gibson kleinberg kumar raghavan rajagopalan tomkins 
mining web link structure 
ieee computer 
chakrabarti dom indyk 
enhanced hypertext categorization hyperlinks 
proceedings acm sigmod 
chakrabarti van den berg dom 
focused crawling new approach topic specific web resource discovery 
proceedings eighth international world wide web conference 
davison lu seo wang wu 
applying link analysis web search 
poster proceedings eighth international world wide web conference 
dean henzinger 
finding related pages world wide web 
proceedings eighth international world wide web conference 
gibson kleinberg raghavan 
inferring web communities link topology 
proceedings th acm conference hypertext hypermedia hypertext 
expanded version www cs cornell edu home 
gibson kleinberg raghavan 
structural analysis world wide web 
world wide web consortium workshop web characterization 
invited position 
google 
google home page 
www google com 
henzinger heydon mitzenmacher najork 
measuring index quality random walks web 
proceedings eighth international world wide web conference 
ibm almaden research center 

clever project 
home page www almaden ibm com cs clever html 
kleinberg kumar raghavan rajagopalan tomkins 
web graph measurements models methods 
proceedings international conference combinatorics computing 
invited survey 
kleinberg 
authoritative sources hyperlinked environment 
proceedings acm siam symposium discrete algorithms soda 
expanded version www cs cornell edu home 
lycos 
lycos personal internet guide 
www lycos com 
microsoft 

msn search home page 
search msn com 
page brin motwani winograd 
pagerank citation ranking bringing order web 
unpublished draft available 
stanford edu ps 
quinlan 
programs machine learning 
san mateo ca morgan kaufmann 
shivakumar garcia molina 
finding near replicas documents web 
proceedings workshop web databases webdb 
held edbt 
sullivan 
search engine watch 
www searchenginewatch com 
wired digital 
hotbot home page 
hotbot lycos com 
