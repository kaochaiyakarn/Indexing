learning observation practice incremental approach planning operator acquisition wang school computer science carnegie mellon university forbes ave pittsburgh pa mail cs cmu edu proceedings th international conference machine learning describes approach automatically learn planning operators observing expert solution traces refine operators practice learning doing paradigm 
approach uses knowledge naturally observable experts solve problems need explicit instruction interrogation 
inputs learning system description language domain experts problem solving traces practice problems allow learning doing operator refinement 
inputs system automatically acquires preconditions effects including conditional effects preconditions operators 
empirical results demonstrate validity approach process planning domain 
results show system learns operators domain solve problems effectively human expert coded operators 
approach differs knowledge acquisition tools require considerable amount direct interactions domain experts 
differs operators require initial approximate planning operators strong background knowledge 
acquiring maintaining domain knowledge key bottleneck real applications planning systems chien example significant effort devoted writing debugging planning operators successful applications planning systems desjardins chien gil considerable research focused knowledge acquisition tools rule systems see gaines summary tools specialized planning systems chien systems require considerable amount direct interactions domain experts 
possible automate process knowledge acquisition simulator available little area 
notable exceptions gil desjardins gil refines initial approximate planning operators experimentation 
desjardins inductively learns planning operators uses considerable background knowledge provided user identify relevant properties world state considered learning 
circumstances initial approximate planning operators background knowledge may difficult acquire 
exactly situation addressing 
simulators commonly available areas cad robotics assembly planning manufacturing process planning 
simulating different planning 
simulators simply act simplified surrogates real world bypassing problems coping sensors physical effectors 
contrast planning process generating sequence actions transform initial situation goal situation 
planning requires specific form knowledge simulators 
developed learning system observer automatically transforms simulator knowledge planning operators planning 
approach learn observing expert solution traces refine operators practice solving problems simulator learning doing anzai simon paradigm 
observation observer uses knowledge naturally observable experts solve problems need explicit instruction interrogation 
practice observer uses practice problems easily available random problem generator 
approaches gil gil desjardins desjardins approach require initial approximate planning operators strong background knowledge 
inputs learning system ffl description language domain 
includes types objects predicates describe states operators 
ffl observations expert agent consisting sequence actions executed state action executed pre state state resulting execution action post state 
ffl practice problems practice order refine incomplete operators 
inputs system automatically acquires preconditions effects operators 
representation exactly required planners strips fikes nilsson tweak chapman prodigy carbonell veloso snlp mcallester rosenblitt ucpop penberthy weld learning method fully implemented top prodigy architecture complete state space non linear planner veloso stone forthcoming structure follows 
section presents high level view learning system 
section discusses issues arise learning observation practice 
section describes detailed algorithm learning operators 
section presents empirical results analysis 
results show observer learns operators large process domain gil solve problems effectively human expert coded operators 
ends 
learning architecture overview gives overview learning system observer 
observation module provides learning module observations sequences actions expert agent 
learning module formulates refines operators domain planning module 
planning module modified prodigy planner plans incomplete incorrect operators repairs failed plans 
generates tentative plans solve practice problems 
plan execution module executes plans providing learning module execution traces passing plan failures planning module plan repair 
concentrates describing learning module 
detailed descriptions planning module integration different modules wang observer learns deterministic strips operators assumes operators 
greatly reduces search space operator preconditions sacrificing generality learning approach application domains majority operators conjunctive preconditions 
example domains currently implemented prodigy operators conjunctive preconditions 
furthermore split operator disjunctive preconditions operators conjunctive preconditions 
observer relies expert give correct observation module plan execution module planning module learning module operators actions plan failures tentative plans new refined execution traces observations expert agent expert agent environment overview observer learning architecture 
complete descriptions pre states post states 
may easy experts part state descriptions tend parts irrelevant operator observer converge faster 
issues learning planning operators observer learns strips operators include preconditions effects including conditional effects preconditions 
example operator process planning domain 
process planning task generate plans produce parts part specifications shape size dimension surface quality processes drilling milling 
different machines drills milling machines different tools spot drills twist drills available 
note negated precondition meaning hold vise applied absent state 
note add holding weakly add holding conditional effects corresponding conditional preconditions shape cylindrical shape rectangular 
conditional effect occurs corresponding conditional preconditions satisfied 
important point negated preconditions rare application domains 
example process planning domain negated preconditions preconditions human expert coded operators 
domains implemented prodigy extended strips domain negated preconditions 
people tend prefer thinking terms true state corresponds non negated preconditions thinking true corresponds negated preconditions 
easily convert negated precondition non negated precondition new predicate operator hold vise preconds vise side machine part device clean table empty holding device available part effects del table del available part del empty holding device shape cylindrical add holding weakly shape rectangular add holding operator hold vise process planning domain 
operator specifies preconditions effects holding part vise 
observer learns operator preconditions generalizing observed pre state 
number facts pre state post state typically larger number preconditions effects corresponding operators 
facts state relevant operator 
example process planning domain pre state post state typically includes assertions operator usually preconditions effects 
absence background knowledge identifying portion world state relevant planning operator computationally expensive find maximally specific common generalization observed pre state 
fact haussler haussler shows finding existential conjunctive concept consistent sequence examples instance space defined attributes npcomplete 
furthermore shows size grow number examples haussler notes heuristic methods learning effective existing inductive algorithms vere hayes roth mcdermott watanabe rendell apply operator learning problem 
example vere counterfactual algorithm vere requires positive negative examples incremental 
hayes roth interference matching algorithm hayes roth mcdermott uses complex heuristics prune space matches examples may prevent operator preconditions learned 
uses parameter binding assumption hold operator preconditions general different variables bound object 
watanabe rendell search algorithm watanabe rendell prunes search space connectivity constraint 
operator preconditions usually form connected component preventing heuristic effective 
foil quinlan greedy algorithm apply problem foil requires positive negative training instances incremental 
approach implemented observer learns operator building general representation op specific representation op manner similar version spaces mitchell learns operator effects generalizing delta state difference post state pre state multiple observations 
observer learns specific representation operator preconditions op observations efficient specific general manner find avoiding computational intractability 
observer generalizes op assumes negated preconditions compensates simplifying assumption learning negated preconditions detected practice 
general representation op initialized empty set 
observer solves practice problems generate effective training data 
op op refined results operator executions practice 
planning incomplete incorrect operators presents difficulty learning classical planners presume correct domain model 
solve problem observer planning module modified prodigy planner generates initial plan achieves preconditions op operator require achieving preconditions op 
introduces possible outcomes observer tries apply operators op environment state changes applying op 
case say op successfully executes 
preconditions op satisfied state op executes successfully learned unnecessary removed 
successful executions form set suc learning operators 
state change 
case say op fails execute 
operator may fail observer planning module guarantee achieve preconditions op introduces possibility incomplete incorrect plans sense true precondition may unsatisfied 
failed executions form set fail learning operators 
note notion execution failure different execution failures previous plan repair simmons wilkins hammond notion execution failures refer situation plan step fails achieve desired goals execution failures refers situation applying operator negative examples practice need learn operators practice positive expert traces 
tried algorithm learn operator preconditions practice learn accurately observer 
cause state change due preconditions 
planning module repairs plan execution failures op determine additional preconditions achieve order failed operator applicable 
detailed descriptions planning plan repair algorithms wang wang carbonell learning algorithm descriptions section presents details observer learning module learning preconditions effects operators observation practice 
observation traces expert denoted obs consists pre state post state operator application 
practice generates set operators successful executed suc set operators fail execute fail 
suc fail collected observer executions bindings variable operator known 
suc fail contain variable bindings denoted addition information states 
summary inputs learning ffl obs fi pre state delta state ffl suc fi pre state delta state ffl fail fi pre state learning operator preconditions learning operator preconditions consists creating updating specific representation op general representation op preconditions 
learning completed sets converge 
learning specific representation operator preconditions shows algorithm creating updating specific representations op operator preconditions 
step observation op op initialized parameterized pre state 
parameterization objects domain constants generalized typed variables 
domain constants objects common problems domain 
example shape rectangular sides side side rectangular block domain constants process planning domain 
domain constants generalized variable observer notices different constant observation 
type variable operator specific type type hierarchy corresponding object 
see operator learned observation example 
note constants width rectangular iron generalized variables 
note operator learned observation unnecessary preconditions obs suc fail learn op specific precondition representation 
observation obs op parameterized pre state 
obs op potential matches find pre state potential matches fg op op fsg potential matches element op op fsg generalize op op 
suc op pre state op op fsg 
fail op pre state pre state op op op sg learning specific representation op operator preconditions 
size height 
generalize removed observations practice 
pre state device drill vise table drill part clean part empty holding device vise drill available table drill vise holding tool drill spot drill available part part hardness part hard material part iron size part width size part height size part length shape part rectangular delta state adds holding drill vise part side empty holding device vise drill table drill part available part part observation state application operator hold vise 
step obs observer updates op removing pre state generalizing domain constants variables different constants pre state 
variable bindings op known way find op pre state finding maximally specific common generalization op pre state 
computational intractable 
avoid observer introduces learning bias characterized integer degree generalization uses find elements pre state potentially match op follows 
op pre state potential match operator hold vise preconds drill vise part spot drill device available table empty holding device holding tool size width size height size length shape rectangular table hardness hard clean material iron available part effects add holding side del table del available part del empty holding device learned operator hold vise observation observer 
predicate unifying unification algorithm taken nilsson observer allows constant unified different constant generalize constants variables resulting substitutions contain degree different constants 
potential matches removed op exactly potential matches generalized kept op degree generalization dependent domain empirically degree produces highest learning accuracy domains 
potential match conservative estimate real match op pre state observer may find potential match precondition state opportunities removing unnecessary preconditions 
total number unification computed bounded size pre state exponential complexity computing avoided learning algorithm effective demonstrated empirical results section 
example observation shown observer computes potential matches precondition operators potential holding tool element pre state predicate holding tool 
size part width size width unifying requires constant substitution 

size part length potential cause unifying precondition requires constant substitutions 
width length degree generalization specifies 
holding tool removed op 
size width generalized size width unifying size part width 
observer learns width part value irrelevant operator removed op 
similarly preconditions size height size length hardness hard material iron removed preconditions 
modified operator shown 
pre state device drill vise table drill part available table drill vise empty holding device vise drill available tool holder drill available part part clean part size part length size part width size part height shape part rectangular hardness part soft material part bronze delta state adds holding drill vise part side empty holding device vise drill table drill part available part part second observation operator hold 
operator hold vise preconds drill vise part side device available table empty holding device shape rectangular table clean available part effects add holding del table del available part del empty holding device learned operator hold vise observations figures observer 
step suc op generalized removing preconditions substitution variable bindings satisfied pre state 
step fail preconditions op satisfied pre state failure due existence negated preconditions 
op updated adding conjectured negated preconditions 
literals true pre state op potentially literals absent state op applicable 
observer conjectures potential negated preconditions adds op 
learning general representation operator preconditions shows general representation op operator preconditions updated 
note op learned practice 
suc fail learn op general precondition representation 
initialize op fg op fg 
fail op pre state op pre state op op fpg op op fpg 
defined necessary precondition 

suc fail op pre state pre state pre state pre state fpg op op fpg defined critical precondition 
negated precondition op op op fg 
learning general representation op operator preconditions 
step involves learning necessary preconditions 
precondition necessary precondition state op fails apply precondition op satisfied state 
may learned incorrectly true precondition true reason op applied unsatisfied missing negated preconditions 
error corrected step 
negated preconditions rare correctly learned high probability 
step involves learning critical preconditions 
precondition learned critical precondition state op applies state op apply precondition op satisfied satisfied note may precondition op satisfied state may necessary precondition 
learned incorrectly true reason applied state due unsatisfied missing negated precondition 
theory type error occur encountered domains applied algorithm 
previously learned necessary preconditions removed op negated precondition learned critical precondition 
recover possible error having learned incorrect true preconditions step true reason op fails apply due missing negated precondition 
necessary critical preconditions learned incrementally described 
preconditions learned critical necessary preconditions operator fully learned possible negated preconditions 
learning operator effects learning operator effects consists learning standard effects operator conditional effects operator conditional preconditions 
conditional preconditions include corresponding general specific representations 
summarizes algorithm learning operator effects 
obs suc fail learn op effects operator op ce op ae op conditional effects op ce op specific general representation conditional precondition 
observation obs op parameterized delta state ce op fg 
obs suc 
obs fg suc 
repeat element selected select op delta state predicate name predicate name unify apply op op feg generalize ce op update 
op selected ce op ce op feg op 
delta state selected op op parameterized pre state ce op ce op parameterized pre state parameterized pre state 
fail ce op update described learning updating operator effects 
observing operator time op simply parameterized delta state observation 
operator shown learned observation example 
note constant side effect add holding side generalized variable 
observation obs bindings variables operators need learned 
observer initializes empty set matches op delta state learn 
literals match generalized kept effects 
literals op learned conditional effects conditional preconditions op 
literals delta state op learned conditional effects conditional preconditions parameterized 
example second observation shown observer matches effects learned operator hold vise new observation 
effect add holding side unifies holding drill vise part side generalized add holding delta state kept effects 
variable bindings learned part vise drill 
generalized operator shown 
final example shows observer learns conditional effects observation produce operator hold vise shown 
add holding learned conditional effect element delta state add holding weakly side learned conditional effect holding weakly drill vise part side unify element effects operator 
observer learns effects suc way variable bindings successful execution need learned 
pre state device drill vise table drill part available table drill vise clean part empty holding device vise drill holding tool drill spot drill available part part size part diameter size part length material part bronze hardness part soft shape part cylindrical delta state adds holding weakly drill vise part side empty holding device vise drill table drill part available part part third observation operator hold 
conditional preconditions updated way regular preconditions general specific representations described section 
empirical results analysis fully implemented top prodigy architecture 
tested observer number domains including extended strips minton domain subset process planning domain gil results process planning domain complex prodigy domains 
experiments version prodigy random choices different alternatives choice point choosing goal choosing operator achieve goal 
random problem generator provide problems experiments 
operator hold vise preconds drill vise part side device available table empty holding device table clean available part effects spot drill size diameter size length shape cylindrical hardness soft material bronze holding tool add holding weakly side shape rectangular add holding del table del available part del empty holding device operator hold vise learning observations shown figures observer training set observation problems practice problems 
learns new operators observed solution traces problems refines operators practicing problems 
observer performance validation set different problems measured learning observation phase practice problems 
step measure average number operator executions average number planning nodes takes solve problem test problem set 
average sum number operators fail execute succeed execute solve problem validation set 
average sum number nodes generated find initial plan repair plans solve problem validation set 
compared performance human expert coded operators average number operator executions average number planning nodes solve problem validation set human expert coded operators 
measured times averages computed 
numbers vary due prodigy random search procedure 
learned operators accuracy operators higher number failures occuring executions lower number nodes generated plan repair 
expect decrease observer practices problems converge respectively 
figures show average operator executions average planning nodes solve problems validation set decrease practice respectively 
see practice observer solves problems effectively practice 
indicates practice crucial component observer 
spikes curves due planner random choices decision point 
prodigy search algorithm guaranteed find shortest solutions prodigy random choices decision point surprising learning experiments takes fewer average operator executions solve problems validation set learned operators 
furthermore consider difference statistically significant table shows interval includes true value gamma probability interval includes true value gamma probability 
stand point view statistical confidence performance learned operators learning human expert coded operators equally effective 
averages number operator executions number practice problems learned operators practice learned operators practice human expert coded operators average number operator executions solve problems validation set 
average number planning nodes number practice problems learned operators practice learned operators practice human expert coded operators average number planning nodes solve problems validation set 
number number operator executions planning nodes learned human learned human ops coded ops ops coded ops mean standard derivation confidence gamma gamma level demonstrated empirical results learning method effective difficult task acquiring new operator descriptions observation practice 
due factors learning space conjunctive preconditions 
reduces size search space possible preconditions 
negated preconditions rare 
section explained knowledge facilitates learning 
experience process planning domain shows necessary preconditions learned incorrectly time practice corrected negated preconditions learned 
observed mistakes learned critical preconditions 
observer ability practice generate effective training data 
see empirical results observations learned operators far inferior human expert coded operators ability solve test problems 
consistent results haussler learnability conjunctive concepts 
haussler proves conjunctive concept exists upper bound number objects example addition providing random examples allow learning algorithm subset queries 
observer ability practice way subset queries 
learning context simulator answer arbitrary queries arbitrary query may correspond legal state 
observer needs execute actions bring state query 
practice crucial component learning system 
novel method automatically learn planning operators observation practice 
previous approaches approach require considerable amount direct interactions domain experts initial approximate planning operators strong background knowledge 
shown system learns operators large process planning domain solve problems effectively human expert coded operators 
identified unique features algorithm learning effective 
major contributions 
demonstrates inductive learning techniques applied effectively problem learning complex action descriptions open question machine learning community 
second automatic learning planning operators provides starting point fielding planning systems addresses key bottleneck endeavor knowledge acquisition problem 
jaime carbonell richard caruana steve chien perez helpful comments jaime carbonell douglas fischer herb simon manuela veloso suggestions support 
research sponsored wright laboratory aeronautical systems center air force materiel command usaf advanced research projects agency arpa number 
views contained document authors interpreted necessarily representing official policies endorsements expressed implied wright laboratory united states government 
anzai simon anzai simon 
theory learning doing 
psychological review 
gaines gaines 
knowledge acquisition knowledge systems notes state art 
machine learning 
carbonell carbonell blythe etzioni gil joseph kahn knoblock minton perez veloso wang 
prodigy manual tutorial 
technical report school computer science carnegie mellon university 
chapman chapman 
planning conjunctive goals 
artificial intelligence 
chien chien hill jr fayyad 
real world planning difficult 
aaai fall symposium series planning learning real applications new orleans la 
chien chien 
intelligent planning knowledge base development environment 
aaai fall symposium series planning learning real applications new orleans la 
desjardins desjardins 
knowledge development methods planning systems 
aaai fall symposium series planning learning real applications new orleans la 
fikes nilsson fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
gil gil 
specification manufacturing processes planning 
technical report cmu cs school computer science carnegie mellon university pittsburgh pa 
gil gil 
acquiring planning experimentation 
phd thesis school computer science carnegie mellon university pittsburgh pa 
hammond hammond 
case planning viewing planning memory task 

haussler haussler 
learning conjunctive concepts structural domains 
machine learning 
hayes roth mcdermott hayes roth mcdermott 
interference matching technique inducing abstractions 
cacm volume pages 
mcallester rosenblitt mcallester rosenblitt 
systematic nonlinear planning 
proceedings ninth national conference artificial intelligence 
minton minton 
learning search control knowledge explanation approach 
kluwer academic publishers 
mitchell mitchell 
version space approach concept learning 
phd thesis stanford university 
nilsson nilsson 
principles artificial intelligence pages 
morgan kaufmann 
penberthy weld penberthy weld 
ucpop sound complete partial order planner adl 
proceedings kr 
quinlan quinlan 
learning logical definitions relations 
machine learning 
simmons simmons 
theory debugging plans interpretations 
proceedings sixth national conference artificial intelligence 
veloso stone forthcoming manuela veloso peter stone 
flecs planning flexible commitment strategy 
journal artificial intelligence research forthcoming 
veloso manuela veloso jaime carbonell perez daniel borrajo eugene fink jim blythe 
integrating planning learning prodigy architecture 
journal experimental theoretical artificial intelligence january 
ere vere 
multilevel counterfactuals generalizations relational concepts productions 
artificial intelligence 
wang carbonell wang carbonell 
learning observation practice real applications planning systems 
aaai fall symposium series planning learning real applications new orleans la 
wang wang 
learning planning operators observation practice 
proceedings second international conference ai planning systems chicago il 
watanabe rendell watanabe rendell 
effective generalization relational descriptions 
proceedings eighth national conference artificial intelligence boston ma july 
aaai press mit press 
wilkins wilkins 
practical planning extending classical ai planning paradigm 
morgan kaufmann 
