boolean query mapping heterogeneous information sources extended version kevin chen chuan chang hector garcia molina andreas paepcke searching heterogeneous information sources difficult non uniform query languages 
approach allow user compose boolean queries rich front language 
user query target source transform user query subsuming query supported source may return extra documents 
results processed filter query yield correct final result 
introduce architecture associated algorithms generating supported subsuming queries filters 
show generated subsuming queries return minimal number documents discuss minimal cost filters obtained 
implemented prototype versions algorithms demonstrated heterogeneous boolean systems 
index terms boolean queries query translation information retrieval heterogeneity digital libraries query subsumption filtering 
emerging digital libraries provide wealth information 
wealth search engines libraries different document model query language 
goal provide front collection digital libraries hides possible heterogeneity 
step focus translating boolean queries generalized form queries functionality syntax provided particular target search engine 
initially look boolean queries current commercial systems eventually incorporate types queries vector space probabilistic model ones 
example illustrates approach 
example suppose user interested documents discussing multiprocessors distributed systems 
say user query originally formulated follows user query title contains multiprocessor distributed system query selects documents words title field furthermore proximity operator specifies word distributed immediately precede system 
assume user wishes query inspec database managed stanford university system 
unfortunately source understand operator 
case approach approximate predicate distributed system closest predicate supported distributed system 
predicate requires words appear matching documents position 
native query sent inspec extended version entitled boolean query mapping heterogeneous information sources appeared ieee transactions knowledge data engineering vol 
august 

chang department electrical engineering stanford university stanford ca 
mail cs stanford edu 
garcia molina paepcke department computer science stanford university stanford ca 
mail cs stanford edu 
parser query syntax target collection user query query tree native query tree native query post filter query result document extractor target capability schema definition target syntax definition preliminary result set filter query tree parsed documents query translator query capability mapping front translation rejected queries warnings fig 

architecture front system illustrating query translation post filtering 
dashed boxes target specific metadata defining target syntax capabilities 
native query find title multiprocessor distributed system notice query expressed syntax understood 
native query return preliminary result set super set user expects 
additional post filtering step required front eliminate preliminary result documents words distributed system occurring 
particular filter query required filter query title contains distributed system shows main components proposed front system 
user submits lower left query powerful language provides combined functionality underlying sources 
shows query processed sending target source query intended multiple sources process repeated 
incoming query parsed tree operators 
operators compared capabilities document fields target source 
operators mapped ones supported query tree transformed process describe native query tree filter query tree 
syntax target native query tree translated native query sent source 
documents received parsed syntax source documents processed filter query tree yielding final answer 
heterogeneous search engines existed years approach advocate full search power front appropriate query transformations studied detail 
main reason approach significant cost documents user see retrieved remote sites 
involves sources network front 
may involve higher dollar costs sources charge document basis 
costs alternatives advocated past coping heterogeneity 
generally fall categories 
inconsistent query capabilities specific target systems intention hide heterogeneity user write queries specifically 
provide common denominator front query language supported sources 
copy document collections user may interested single system uses search engine language 
alternatives may adequate cases believe scale adequate supporting truly globally distributed digital library 
users really require powerful query languages describe information needs require access information stored different systems 
time increasing computer power network bandwidths making full front query power approach acceptable 
furthermore commercial sources opting easy manage broad agreements customers provide unlimited access 
cases may expensive retrieve additional documents front post filtering 
higher cost may worth paying get user required documents effort part 
summary benefits full query power believe worth studying approach carefully 
critical step understanding query translation works different operators provided boolean systems challenging determine weaker operators provide super set results 
furthermore see transformation process needs consider structure query tree just individual operators 
study central query transformation algorithms query capability mapping box 
details predicate rewriting discussed 
important issues covered 
focus feasibility translations cost 
feasible translations may expensive execute system component discussed inform user query translated reasonable cost 
cases user reformulate query 
second consider semantic mapping issues know author system really author 
simply assume tables possible transformation functions specify fields attributes map 
third discuss implementation algorithms 
note algorithms implemented transform queries systems knight ridder dialog stanford altavista digital equipment different boolean query syntax functionality 
process extending query transformation system boolean sources 
start briefly reviewing alternative approaches suggested access heterogeneous search engines 
section iii provide brief overview boolean query languages section iv discuss preliminary steps required query transformation 
section describes central algorithms yield query target source filter query 
ii 
related problem multiple heterogeneous line information retrieval ir systems observed early 
martin thorough comparative feature analysis line systems encourage unification search features 
solutions proposed address heterogeneity ir systems 
obviously solution standardization suggested development common command language ccl done iso 
accepted ir query standard 
approach accessing multiple databases transparently front ends intermediary systems approach advocate 
provide overviews systems 
front systems provide automated integrated access underlying sources 
tried support uniform comprehensive query language post filtering 
mentioned previous section approaches generally fall categories 
approach non uniform query capabilities specific target services 
user moves service capabilities system modified automatically reflect specific limitations 
examples systems oclc intelligent gateway service internet search services search 
kind system provide transparent access multiple sources 
user aware capability limitation target systems formulate queries 
impossible search multiple sources parallel single query may interpretable 
second approach provide simple query language common denominator supported sources 
front systems adopt approach 
examples include ol sam fred 
systems unify query functionality expense masking powerful features available specific sources 
particular features supported front ends user issue query pass mode query sent 
compromises transparency 
systems manage numbers collections search 
example knight ridder dialog system manages databases broad scope disciplines 
clearly centralized approach scale amount information keeps increasing 
closest works development meta searcher internet metacrawler savvysearch 
services provide single central interface web document searching 
represent meta searchers internal databases rely existing search services webcrawler lycos provide information necessary fulfill user queries 
query mapping optional post filtering 
provide relatively simple front query languages slightly powerful common denominator supported external sources 
example support subset boolean queries arbitrary ones 
iii 
boolean query languages boolean retrieval systems queries boolean expressions consisting predicates connected boolean operators 
document result set query query evaluates rue document 
boolean systems document consists set fields representing particular kind information title author 
general predicate consists components predicate operator field designation value expression 
example predicate contains title cat evaluates rue document contains word starting letters cat title field 
predicate equals author joe doe satisfied general query tree disjunctive normal form normalized form fig 

representations boolean query 
represent predicate subtrees fp pg author field exactly equal string joe doe 
seen example value expressions compound formed connecting expressions proximity operators 
processing represent predicate syntax tree root predicate operator left child field designation right child subtree representing value expression 
predicates query combined query tree appropriate operators see 
boolean systems mainly differ process predicates 
may different fields documents may disallow searches fields built index 
second may support different types operators value expressions 
example systems may support various kinds proximity expressions operators 
dialog language nw proximity operator specifies operand precede second words apart 
operator distance implicitly zero 
order matter operators nn may 
operators may available systems supports 
features systems differ include truncation stemming stopwords 
illustrate table iii provides feature comparison survey boolean query languages 
example systems define sets stopwords altavista words indexed 
systems having stopwords query containing stopwords systems may reject query ignore stopwords simply return hits 
languages provide way override stopwords searchable 
assume target systems support boolean operators 
source supports predicates supports 
surveyed commercial boolean search engines true exception systems support proper degenerate query rue 
discuss implications exception section 
iv 
query capability mapping discussed goal transform user query native query supported target source 
furthermore native query return extra documents possible 
case say native query minimally subsumes user query respect target language 
definitions formalize concepts 
notice notation hqi represents result set query table feature comparison query languages supported various information sources 
ccl stanford knight ridder dialog dec altavista boolean operators fielded search proximity operator nn nw field sentence paragraph truncation open right controlled right 
internal stemming synonym expansion soundex stopwords override ignore reject hits stopwords hits definition iv query subsumption query subsumes query hq hqi regardless contents collection 
hq oe hqi properly subsumes oe 
definition iv minimal subsuming query query minimal subsuming query query minimally subsumes target system 
supported 
subsumes 
query satisfies properly subsumed symbol represent minimal subsuming query target system clear context 
retrieving results native query need filter locally removing unnecessary answers 
definition iv filter query filter query subsuming query filter exists native query subsumes user query 
see note user query correct filter 
extreme rue possible filter 
case filtering necessary 
general may filter possible interested requires processing effort 
definition iv optimal filter query optimal filter processing cost definition query subsuming query filter query filter costs cost definition 
overview capability mapping process main steps transforming query query capability mapping box native query filter follows 
steps described detail subsections 

predicate 
starting query tree step outputs logically equivalent query tree predicates atomic 
tree obtained decomposing non atomic predicates distributive law 

query normalization 
tree transformed disjunctive normal form dnf ready step 
notice previous step target independent need done translations multiple target languages requested 

predicate rewriting 
predicate rewrite negative positive subsuming form depending negative positive mixed 
logic mapping 
dnf query subsuming forms predicates step constructs minimal native query derives optimal filter 
step predicate predicates basic constructs queries basis query mapping 
predicate contains logical conjunctions disjunctions effective break simpler atomic predicates 
example consider predicate contains title multiprocessor distributed system 
equivalent conjunction predicates contains title multiprocessor contains title distributed system 
lets separate predicates may unsupported target leads better native queries 
easy determine filtering required predicate query atomic predicate supported target filtering needed predicate entirety filter 
predicate phi phi predicate operator equals contains field designation value expression atomic operators pulled predicate 
decompose predicate atomic terms apply distributive law operator tree defines predicate 
careful distributed certain operators 
example predicate contains title multiprocessor distributed system equivalent contains title multiprocessor distributed contains title multiprocessor system 
additional details see 
step query normalization step transform query disjunctive normal form dnf see 
boolean expression dnf logical clauses logical normal negated predicates 
fp 
negation conjunction terms necessarily atomic predicates defined notice dnf representation canonical may dnf query 
known algorithms dnf transformations discuss transformation 
normalization preparation ensuing steps 
step required know predicate negative positive mixed query 
dnf query clear predicates negated 
second step required query expressed dnf trees guarantee minimality native query 
step predicate rewriting mapping single predicates basis query mappings ensures translated queries doable target systems 
predicate unsupported target system operators supported appearing predicate subtree 
considering individual predicates simple queries unsupported predicate find subsuming queries filter 
stated earlier finding filters atomic predicates straightforward 
rewriting unsupported predicates systematic procedure replacing unsupported operators supported ones 
proper substitutes supported operators weaker stronger sense selectivity close unsupported operators possible 
readers may refer details predicate rewriting 
due space limitation illustrate idea example 
example iv predicate rewriting consider predicate contains title color printer means title words appearing words apart order 
assume proximity operator available target system immediate adjacency operator distance implicitly zero 
case substitute closest weaker substitute 
substitution results contains title color printer 
notice ae consider happens negated query 
case correct replace ae subsumption relationship reversed negation oe possible answers may lost suggests unsupported operators negated predicates replaced closest stronger substitute replaced case 
obtain negative form predicate gamma contains title color printer 
see ae gamma replace query gamma get broader result set 
suggested example iv need different subsuming forms positive negative predicates 
formally query positive subsuming form predicate target system minimally subsumes similarly query gamma negative subsuming form predicate target system gamma minimally subsumes notice gamma extreme cases possible non trivial rewriting positive negative subsuming forms case rue gamma alse 
furthermore predicate logically equivalent expressible positive negative subsuming form call equivalent subsuming form note necessarily identical 
example contains title text logically equivalent different contains title text textual 
notice cases non trivial subsuming predicates may hard obtain may unwieldy 
example say front query requests soundex search documents word right 
search terms sound right write wrt target source support feature subsuming predicate include disjunction words sound alike source 
front access source vocabulary done subsuming predicate rue 
source vocabulary available list sounding terms may large 
logic mapping algorithms minimal native query construction replacing predicates positive negative subsuming forms depending negated obtain native query executable target source 
construction subsuming predicates executable target 
section iii assumption target execute boolean expressions supported predicates 
show native query correct subsumes original query 
operators monotonic sense successively increasing operands yield non decreasing results ch 
pp 

fact operators pushed top level query sort normalization critical 
cause subsumption relationship reversed consider full query 
general constructed native query correct minimal 
illustrate non minimality example 
example native query construction consider queries predicates 
notice logically equivalent normalized cnf dnf 
assume supported target 
suppose arbitrary query gamma alse 
substitution unsupported predicates yields clearly minimal subsumes reason fails minimal conjunction term satisfy property inferential completeness 
intuitively notice answers satisfying satisfy condition denote infer supported implied implied means yield smaller native query 
smaller fact shown logically equivalent summary existence condition fail complete defined 
definition inferential completeness conjunction conjunctive query qn complete target system query inferred case qn minimal subsuming query inferred conjunction minimal subsuming queries case 
importance inferential completeness necessary sufficient condition minimality preserved operators 
formally state theorem operators property required stated theorem 
theorem minimality preserving conjunction conjunctive query qn sub queries minimal subsuming query target system conjunction minimal subsuming queries qn complete proof denote fig 

venn diagram illustration simple case theorem 
regions represent result sets various queries 
notice subsumes subsumes definition iv operator monotonic just explained 
show minimal 
refer components proof illustrated venn diagrams terms result sets queries 
simplicity diagram shows simple case sub queries notice parts illustrate parts proof respectively 
suppose qn complete definition iv exists query supported oe qn definition conjunction qn complete inferred contradiction 
illustrates simple case sub queries 
suppose qn complete 
definition exists query inferred qn inferred subsumes properly subsumed definition iv minimal subsuming query contradiction 
illustrates simple case sub queries 
theorem minimality preserving disjunction disjunctive query delta delta delta qn sub queries minimal subsuming query disjunction minimal subsuming queries delta delta delta proof denote delta delta delta notice subsumes subsumes definition iv operator monotonic 
prove minimal 
please refer illustration simple case sub queries 
suppose definition iv exists query supported oe see 
exists subsumed exist true subsumes subsumes fig 

venn diagram illustration simple case theorem 
regions represent result sets various queries 
furthermore properly subsumed definition iv minimal subsuming query contradiction 
results motivate dnf represent queries 
query dnf substitute predicate minimal subsuming form obtain minimal subsuming query provided conjunction term complete 
conjunction terms atomic predicates argue holds vast majority cases 
inferential completeness hold predicates need interrelated hard achieve atomic predicates 
matter fact examples come ones reasonable user pose 
example equals title distributed system equals title color printer 
document title minimal subsuming query alse may obtained checking inferential completeness conjunction terms depends semantics predicates target system consideration 
doubt computationally feasible way checking worth effort cases hold rare 
summarize discussion algorithm generates native queries 
algorithm dnf minimal native query construction front query dnf respect target system find minimal subsuming query result ffl initially result ffl conjunction term result normal negated predicate 
positive substitute positive subsuming form 
negative substitute gamma negative subsuming form notice apply algorithm query example obtain minimal subsuming query 
earlier results state conditions algorithm yields optimal result theorem minimality algorithm query native query algorithm minimal subsuming query target system provided conjunction term dnf satisfies inferential completeness 
optimal filter derivation logic mapping front queries complete derivation filters 
query native query query satisfying definition iv correct filter 
may filters logically equivalent 
wish choose best 
glance may think broadest filter subsumes best 
valid filters produce exactly result set result native query right metric focus 
filter simplest boolean expression involve smallest computational effort 
example filters consider query suppose supported target gamma alse 
algorithm gives correct filters include filters valid filter broader subsumes clear better choice simpler expression implies processing cost normal cost definition 
correct filters difficult derive 
intuitively query find necessary conditions imply filter composed conjunction necessary conditions implied refer implied conditions residue conditions 
way find necessary conditions implies transform conjunctive normal form cnf 
written cnf fp disjunction terms predicates defined necessary conditions satisfy 
containing unsupported predicates necessary condition implied residue condition 
consequently filter composed conjunction residue 
illustrate procedure consider query example 
written cnf 
gamma alse second disjunction term residue filter case obtained optimal filter case example illustrates 
example filter derivation consider query resulted algorithm assuming rue gamma alse 
writing minimal cnf find disjunction terms contain unsupported predicate filter composed residue conditions 
optimal reader may easily verify correct simpler comparing query subsuming query find unique incomplete specification family correct filters 
constrained cost definition optimal filter formulated uniquely 
optimal filter derivation step procedure filter specification expression formulation 
studied problem boolean logic discuss filter specification detail direct readers existing literatures expression formulation 
algorithm determining filter specification 
presenting formal algorithm illustrate process redoing example 
example user query supported target 
suppose gamma arbitrary native predicates predicate rewriting process necessarily rewritten trivially rue alse 
obtain gamma goal derive optimal filter pair deriving optimal filter necessary know unsupported atomic predicates rewritten 
noted section iv atomic predicate applied post filtering entirety regardless rewritten 
consequently simplicity derive filters assume unsupported predicates rewritten trivially example rue gamma alse 
simplified native query construct optimal filter derive specification comparing differences explained 
considering boolean query function input variables predicates specify function canonically means truth table called table combination 
truth table listing combinations truth values input variables corresponding function values 
truth table specifications illustrated table ii 
notational convenience table rue alse respectively 
table ii truth table specification boolean functions specified example corresponding filter correctness requirement specification correct filters obtained comparing truth tables referring table ii row truth table ffl 
kind rows represents extra answers preliminary result set filtered 
ffl symbol stands don care meaning value 
kind rows represents extra answers filtered native query 
notice answers kind appear preliminary result set unimportant filter output equals 
ffl 
kind rows represents actual answers retained filtering 
notice situation possible subsumes definition 
resultant specification filter listed table ii 
comparing truth tables row row simpler decimal specifications 
decimal specification concise means specifying truth table lists numbers rows function value equal don care 
denote sets row numbers truth table values set set set respectively 
decimal specifications set set set set set set set algorithm formalizes filter derivation process illustrated example 
algorithm filter specification front query dnf find decimal specification correct filters minimal subsuming query respect target system 
run algorithm input assuming predicates equivalent subsuming forms rewritten trivially predicate rue gamma alse 
output 
compute decimal specifications 
decimal specification correct filter formed rules 
notice notation set set set resp 
stands set set set resp 
boolean function ffl set set ffl set set gamma set ffl set set easy see apply algorithm example get filter 
specification second step formulate optimal filter expression 
notice potentially filter expressions formulated decimal specification 
example expressions example possible formulations specification 
identical problem studied detail area combinational circuit design 
formal algorithms formulate cost effective expression uniquely function specification cost definition 
interested readers may refer ch 
techniques 
final theorem combines results 
theorem shown front query transformed minimal subsuming native query 
furthermore query hard see minimal subsuming query unique minimal target system conjunction executable smaller contradiction 
filters algorithm specification 
just mentioned optimal filter unique cost definition 
theorem query capability mapping query target system cost definition post filtering minimal subsuming query optimal filter cost definition uniquely 
keep mind theorem addresses existence native query filter practicality cost 
matter fact unable run native queries quirks real systems 
instance mentioned earlier systems accept valid query rue 
means algorithm generates minimal subsuming query user query impossible answer similarly systems may export certain fields documents 
filter wishes search locally hidden fields fail 
cases native query expensive user reformulate query access source directly 
vi 
gave overview query translation process focused logic mapping algorithms 
pointed earlier situations approach number drawbacks fails 
cases translation turn expensive 
example approach may create network traffic may create queries contain terms 
happen instance truncation approximated enumerating terms source vocabulary 
failure mode source simply provide information algorithms need 
example may possible obtain source vocabulary order provide approximations truncation 
similarly source large corpus generally able return contents algorithms cases call query translation produces rue native query 
case query executed 
general algorithms rewriting predicates briefly discussed section iv require underlying search engines perform complete translation contents target capability schema definition box 
schema definition set searchable fields indexing scheme field 

supported operators addition boolean operators 

stopword list 

vocabulary word vocabulary phrase vocabularies phrase indexed fields 

details expansion features stemming algorithm truncation supported truncation patterns 
items truncation patterns usually documented users search sources 
presently harder obtain 
factors mitigate drawbacks discussed 
reduce cost retrieving post filtering entire preliminary result set may process result incrementally 
user wishes see say documents source documents retrieved filtered 
user requests documents processed 
practically interesting cases translation possible 
example study shows predicate rewrites rue practice 
notice trivial rewriting predicate necessarily imply entire native query rue 
example query contains conjunctions translates rue remaining terms maintain reasonable selectivity 
native query degenerates rue components left 
precise query translator generates rue native query user query predicates forming implicant conjunction predicates implies query rue 
example query translates rue rewritten rue 
cases translations produce excessively large queries approximations applied 
truncation emulation example implementation decide expand possible terms 
yield complete result 
depending user task partial solution may acceptable produces documents 
required metadata available believe approximations help 
example common vocabulary set words dictionary approximate emulation truncation 
guarantee precise translation fatal drawback inherent uncertainty information retrieval 
approximation common dictionary greatly helps approach scale 
translation truly impossible approach provides benefit 
shown provide feedback loop user 
translation failure detected user informed precisely part query problematic 
user reformulate just part 
discussed section ii query unification attempted various forms years 
believe increased power search engines machines available locally users combined increased network bandwidth changing information access economics call re examination area 
cases feasible compensate lacking retrieval features extracting information filtering locally 
sketched efforts re examination 
initial prototype implementations encouraging 
transformed kinds queries shown successfully executed different search engines 
involve schema unification discuss extensions non boolean queries 
acknowledgments material supported national science foundation cooperative agreement iri 
funding cooperative agreement provided darpa nasa industrial partners stanford digital libraries project 

chang garcia molina paepcke 
predicate rewriting translating boolean queries heterogeneous information system 
technical report wp url www stanford edu dept computer science stanford univ stanford california jan 
cross 
search page 
url www albany net 
crystal 
fred front databases 
online sep 
dreilinger 
savvysearch home page 
url www cs colostate edu html 
frakes baeza yates 
information retrieval data structures algorithms 
prentice hall englewood cliffs 
hawkins levy 
front software online database searching part definitions system features evaluation 
online nov 
iso 
iso information documentation commands interactive text searching 
int organization standardization geneva switzerland edition 
lovins 
development stemming algorithm 
mechanical translation computational linguistics 
marcus 
user assistance bibliographic retrieval networks computer intermediary 
ieee trans 
systems man cybernetics smc 
martin 
feature analysis interactive retrieval systems 
report su comm icr institute communication research stanford univ stanford sep 

logic design principles 
prentice hall englewood cliffs 
mitchell 
note proximity operators information retrieval 
proc 
acm sigplan sigir interface meeting pages nov 
national information standards organization 
common command language online interactive information retrieval 
press bethesda 

development diane common command language 
proc 
rd int online information meeting pages 
porter 
algorithm suffix stripping 
program 
preece williams 
software searcher workbench 
proc 
rd american society information science annual meeting volume pages 
salton 
automatic text processing 
addison wesley reading mass 
selberg etzioni 
multi service search comparison metacrawler 
proc 
th int www conf 
url metacrawler cs washington edu papers www html overview html 

ol sam intelligent front bibliographic information retrieval 
information technology libraries 
ullman 
principles database knowledge base systems volume 
computer science press rockville 
williams 
transparent information systems gateways front ends intermediaries interfaces 
journal american society information science jul 
zinn sellers 
oclc intelligent gateway service online information access libraries 
library hi tech 
