cognitive modeling knowledge reasoning planning intelligent characters john funge intel tu intel behavioral animation taken impressive steps autonomous self animating characters production animation interactive games 
remains difficult direct autonomous characters perform specific tasks 
addresses challenge introducing cognitive modeling 
cognitive models go behavioral models govern character knows knowledge acquired plan actions 
help build cognitive models develop cognitive modeling language cml 
cml character domain knowledge elegantly specified terms actions preconditions effects direct character behavior terms goals 
approach allows behaviors specified naturally intuitively succinctly higher level abstraction possible 
cognitively empowered characters animator need specify behavior outline sketch plan reasoning character automatically detailed sequence actions satisfying specification 
exploit interval methods integrate sensing underlying theoretical framework enabling autonomous characters generate action plans highly complex dynamic virtual worlds 
demonstrate cognitive modeling applications advanced character animation automated cinematography 
keywords computer animation character animation intelligent characters behavioral animation cognitive modeling knowledge sensing action reasoning planning cr categories computer graphics dimensional graphics realism animation artificial intelligence knowledge representation formalisms methods representation languages modal logic temporal logic predicate logic artificial intelligence problem solving control methods search graph tree search strategies heuristic methods simulation modeling types simulation animation contact information see www cs toronto edu funge tu dt 
demetri terzopoulos university toronto cognitive modeling new apex cg modeling hierarchy 
making think modeling computer animation addresses challenge automating variety difficult animation tasks 
early milestone combination geometric models inverse kinematics simplify 
physical models animating particles rigid bodies deformable solids fluids gases offered means generate quantities realistic motion dynamic simulation 
biomechanical modeling employs simulated physics automate lifelike animation animals internal muscle actuators 
research behavioral modeling making progress self animating characters react appropriately perceived environmental stimuli 
remained difficult direct autonomous characters satisfy animator goals 
hitherto absent context substantive apex computer graphics modeling pyramid fig 
identify cognitive modeling 
introduces develops cognitive modeling computer animation interactive games 
cognitive models go behavioral models govern character knows knowledge acquired plan actions 
cognitive models applicable directing new breed highly autonomous quasi intelligent characters find production animation interactive computer games 
cognitive models play subsidiary roles controlling cinematography lighting 
decompose cognitive modeling related sub tasks domain knowledge specification character direction 
reminiscent classic dictum field artificial intelligence ai tries promote modularity design separating knowledge control 
domain knowledge specification involves administering knowledge character world world change 
character direction involves instructing character try behave certain way world order achieve specific goals 
advanced modeling tasks steps fraught difficulty animators right tools job 
develop cognitive modeling language cml 
cml knowledge directives intelligent behavior cml rests solid foundation grounded theoretical ai 
high level language provides intuitive way give characters cameras lights knowledge domain terms actions preconditions effects 
endow characters certain amount common sense domain leave tiresome details directives give 
missing details automatically filled run time character reasoning engine decides done achieve specified goal 
traditional ai style planning certainly falls broad umbrella description distinguishing features cml intuitive way domain knowledge specified affords animator familiar control structures focus power reasoning engine 
forms important middle ground regular logic programming represented prolog traditional imperative programming typified 
middle ground turns crucial cognitive modeling animation computer games 
animation production reducing development time reason important fast execution 
animator may choose rely heavily reasoning engine 
run time efficiency important approach lends incremental style development 
quickly create working prototype 
prototype runs slowly may refined including increasingly detailed knowledge narrow focus reasoning engine 
related tu terzopoulos taken major strides creating realistic self animating graphical characters biomechanical modeling principles behavioral animation introduced seminal reynolds 
criticism leveled behavioral animation methods robustness efficiency notwithstanding behavior controllers hardwired code 
blumberg galyean address concerns introducing mechanisms give animator greater control behavior blumberg superb thesis considers interesting issues behavior learning 
share similar motivations research takes different route 
unique features emphasis place investigating important higher level cognitive abilities knowledge representation reasoning planning domain ai 
research teams led badler bates hayes roth applied ai techniques produce inspiring results animated humans cartoon characters 
theoretical basis new graphics community consider novel applications 
employ ai formalism known situation calculus 
version product cognitive robotics community 
noteworthy point departure existing cognitive robotics render situation calculus amenable animation highly dynamic virtual worlds introducing interval valued fluents deal sensing :10.1.1.159.2797
perlin describes fascinating aimed providing animators useful behavior modeling tools 
defining implementing cognitive modeling language cml complements efforts encapsulating basic concepts techniques may soon incorporated advanced tools animation 
autonomous camera control animation particularly suited cognitive modeling approach exists large body widely accepted rules draw 
fact exploited subject implement hierarchical finite state machines camera control 
approach camera control employs cml 
overview remainder organized follows 
section covers theoretical foundations research presents cognitive modeling language cml 
section presents automated cinematography case studies 
primary aim show separating control information background domain knowledge easier understand maintain controllers 
camera controller ostensibly reactive making minimal cml planning capabilities demonstrates cognitive modeling subsumes conventional behavioral modeling limiting case 
section presents case studies character animation highlight ability approach generate intelligent behavior consistent goaldirected specification exploiting domain knowledge reasoning 
world case study show tools simplify development cognitive characters autonomously generate knowledge goal directed behavior 
world case study produce elaborate animation overwhelm naive goal directed specification approaches 
demonstrate cognitive modeling allows animator provide loose script characters follow details animation provided animator rest filled automatically character 
section presents suggestions 
theoretical background situation calculus ai formalism describing changing worlds sorted order logic 
mathematical logic somewhat departure repertoire mathematical tools commonly computer graphics 
shall overview section salient points situation calculus details documented 
emphasize user point view underlying theory hidden 
particular user required type axioms written order mathematical logic 
developed intuitive high level interaction language cml syntax employs descriptive keywords clear precise mapping underlying formalism 
domain modeling situation snapshot state world 
domainindependent constant denotes initial situation 
property world change time known fluent 
function relation situation term convention argument 
example broken fluent keeps track object broken situation primitive actions fundamental instrument change ontology 
counter intuitive term primitive serves distinguish certain atomic actions complex compound actions define section 
situation resulting doing action situation distinguished function 
possibility performing action situation denoted distinguished predicate poss 
sentences specify state world performing action known precondition axioms 
example possible drop object situation character holding poss drop holding 
cml axiom expressed intuitively need logical connectives explicit situation argument follows promote readability cml keywords appear bold type actions complex primitive italicized fluents underlined 
various predicates functions action drop possible holding effects action effect axioms 
give necessary conditions fluent take value performing action 
example effect dropping object character longer holding object resulting situation vice versa picking object 
stated cml follows occurrence drop results holding denotes negation occurrence pickup results holding surprisingly naive translation statements situation calculus give expected results 
particular stating change action performed problematic 
called frame problem ai 
character consider dropping cup instance results say vase turning bird flying room 
animated characters taken care implicitly programmer common sense 
need give thinking characters common sense 
need told assume things stay know 
characters virtual worlds start thinking tackle frame problem 
frame problem major reason approaches previously computer animation robotics 
fortunately frame problem solved provided characters represent knowledge assumption effect axioms enumerate possible ways world change 
called closed world assumption provides justification replacing effect axioms successor state axioms 
sensing artificial life complex dynamic virtual world appear unpredictable character human observer 
compare excitement watching character run cover falling stack bricks accurately brick trajectories realizing danger stands bricks crash 
practical note expense performing multiple speculative high fidelity forward simulations easily prohibitive 
usually far sense character decide simplified mental model world sense outcome perform follow actions things don turn expected 
characters realize outdated information perform sensing action get current information replan new course action 
simple way sidestep issue sense characters replan periodically 
problem wasteful real need replan 
worse character replanning certain critical times 
consequently characters replan necessary 
come way character represent uncertainty aspects world 
previous approaches problem ai modal logic represent character knows doesn know 
called epistemic fluent fluents 
underlined names indicate intended meaning 
convention cml fluents right keyword refer current situation 
example cml statements effectively translated successor state axiom cml uses internally represent character world change 
axiom states provided action possible character holding object just picked object holding object just drop object poss holding pickup drop holding 
speed time interval values actual speed values sensing action sensing narrows ive fluents bounding actual value 
allows principle express agent uncertainty value fluent world 
unfortunately result primarily theoretical interest clear ideas regarding practical implementation 
shall propose practicable concept interval valued epistemic fluents :10.1.1.159.2797
interval valued epistemic ive fluents interval arithmetic relatively known graphics community 
express uncertainty quantity way circumvents problem finite representation uncountable number possibilities 
natural ask intervals replace troublesome epistemic fluent 
answer show affirmative :10.1.1.159.2797
particular sensory fluent introduce interval valued epistemic ive fluent ive fluent represent agent uncertainty value sensing corresponds making intervals narrower 
introduce notion exogenous actions events generated environment character 
example introduce action generated underlying virtual world simulator simply sets value fluent speed tracks object speed 
introduce ive fluent takes values ir denotes set pairs extended positive real numbers 
intuitively interval state object speed initially known sec 
long bound fast speed change write logically true statements world 
bound rate change 
worst case choose rate change infinite sensing character completely ignorant object speed current situation depicts usual case reasonable bound 
solid line actual speed speed shaded region interval guaranteed bound object speed 
notice character uncertainty object speed increases time intervals grow wider sensing action causes interval col potential implementations epistemic fluent plagued combinatorial explosion 
general relational fluents values may learned sensing list potentially initial possible worlds 
things get worse functional fluents range real numbers list uncountably possible worlds associated uncertainty value 
ive fluents represent uncertainty intervals time dependent variables 
represent unrelated time intervals sort underlying semantics various temporal logics example see 
goal situation path depth search path breath search hide hidden faraway dir turn runaway lapse actual value assuming noise free sensing 
interval certain width say character knows property question 
write precondition axioms state world state character knowledge world 
example state character calculate travel time knows speed 
character wishes know arrive know speed speed wide infer perform sensing action 
prove theorems allow justify formally ive fluent replacement troublesome fluent :10.1.1.159.2797
complex actions actions effect axioms preconditions described far thought tree fig 

nodes tree represent situations 
effect axioms describe characteristics situation 
root tree initial situation path tree represents possible sequence actions 
precondition axioms mean sequences actions possible 
represented picture black portion tree 
situations desired goals conventional logic programming approach automatically search tree sequence actions takes goal 
green nodes represent goal situations various search strategies come appropriate sequence actions perform 
red path shows sequence actions result breadth search tree magenta path depth search 
problem exhaustive search approach search space exponential length plan 
planning literature sought address problem sophisticated search algorithms known algorithm stochastic planning techniques 
shall introduce different approach 
particular shall looking speed planning pruning search space 
choose search remaining space important independent problem previous planning equally applicable 
interesting note conventional imperative style programming regarded way prune tree single path 
searching programmer bears sole responsibility coming program generates desired sequence actions 
defining refer complex actions prune part search tree 
represents complex action corresponding effect reducing search space blue region tree 
follows situation tree pruning pruned precondition poss pruned complex action situation tree 
pruning tree 
shall see examples complex actions definitions 
important understand purpose complex actions give convenient tool encoding heuristic knowledge problem 
general search space exponential reducing search space difference character tractably plan steps ahead plan steps ahead 
get characters appear lot intelligent 
theory underlying complex actions described 
complex actions consist set recursively defined operators 
primitive action complex action 
complex actions composed various control structures 
familiar aid memorization control structure syntax cml designed resemble fig 
gives complete list operators specifying complex actions 
operators define instruction language issue direction characters 
syntax cml similar conventional programming language cml strict superset terms functionality 
user give characters instructions behavior outlines sketch plans 
particular behavior outline nondeterministic 
mean cover multiple possibilities instruction behavior random 
shall explain added freedom allows behaviors specified naturally simply succinctly higher level abstraction possible 
background knowledge character decide fill necessary missing details 
serious example powerful complex action left corresponding cml code right defines depth bounded steps depth planner proc planner goal 


planner proc planner choose test goal test pick planner written java application complete documentation publicly available assist interested reader mastering novel language 
adopted reiter forthcoming book knowledge action 
primitive action primitive action provided precondition axiom states possible action 
syntax cml action explicit action variable 
sequence means action followed action 
action action note semi colon statement terminator mimic test 
succeeds true fails 
test expression nondeterministic choice actions means action action 
choose action action conditionals fi just shorthand 


expression action action non deterministic iteration means zero times 
star action iteration od just shorthand 

expression action nondeterministic choice arguments means pick argument perform action 
pick expression action procedures proc 
xn declares procedure called 
xn 
void action complex action operators 
definition equivalent cml syntax square brackets 
mathematical definitions operators 
straightforward modify complex action definitions include check exogenous actions necessary include sequence resulting actions see details 
automated cinematography strange advocate building cognitive model camera 
soon realize natural capture cognitive model knowledge director control camera 
effect want treat elements scene lights cameras characters actors 
cml ideally suited realizing approach 
appreciate follows reader may benefit rudimentary knowledge cinematography 
exposition principles cinematography section excellent starting point 
authors discuss particular formula filming characters conversing 
idea flip external shots character focusing character doing talking fig 

break monotony shots interspersed reaction shots character 
formula encoded finite state machine 
show elegantly capture formula instruction facilities cml 
need specify domain 
conciseness restrict explaining principal aspects specification see details 
line external parallel internal apex parallel external common camera placements relative characters camera domain assuming motion objects scene computed task decide vantage point frame rendered 
fluent frame keeps track current frame number tick action causes incremented 
precomputed scene represented lookup function scene completely specifies position orientation shape object frame 
common camera placements cinematography modeled formalization primitive actions 
actions referred camera modules 
example term primitive misleading 
described low level camera placement complex challenging task right 
shall simplifications clarify exposition 
realistic equations easily substituted principles remain 
specify camera fluents 
assume remains constant simplifying assumption viewing fixed 
despite simplifications great deal flexibility specifications 
give examples effect axioms primitive actions ontology 
fixed action specify explicitly particular camera configuration 
example provide overview shot scene occurrence fixed results lookat complicated action external 
takes arguments character character places camera seen shoulder effect action camera looking character occurrence external results lookat scene centroid effect camera located character shoulder 
done effect axiom occurrence external results normalize scene shoulder centroid scene centroid suitable constants 
possible camera placement actions 
listed may 
remaining fluents concerned esoteric aspects scene effect axioms mundane shall explain english 
example fluent talking meaning talking true action false action 
currently concerning camera placement responsibility application generates scene descriptions produce start talking actions start talking actions represented exogenous actions underlying formal semantics 
interesting fluent keeps count long character spoke occurrence tick results talking occurrence results ka occurrence results ka note ka constant ka counter negative ka ticks speaking 
similar fluent keeps track long camera pointing character occurrence external results kb talking occurrence external results kc talking occurrence tick results kb kc constants kb kc state long continue shot counter negative 
note constants case looking non speaking character lower 
keep track constant fluent 
convenience introduce defined fluents express shot boring gone long shot gone long 
need notion minimum time shot avoid annoying shots defined boring defined toofast ks ks constant introduce fluent filming keep track character camera pointing 
mentioned preconditions actions 
stated assume actions possible 
contrast precondition axiom external camera action states want point camera character filming gotten boring filming anda talking stayed current shot long action external possible boring filming talking filming toofast position define controller move cognitive camera shoot character doing talking occasional focus character reactions pick external tick specification heavy ability nondeterministically choose arguments 
reader contrast specification encoding achieve result 
defined fluent defined terms fluents value changes implicitly fluents depends change 
user careful avoid circular definitions defined fluents 
defined fluent indicated keyword defined symbol 
autonomous camera animation 
top external shot rex 
center internal shot 
bottom apex shot actors 
character animation turn attention main application character animation 
example world second world 
worlds differentiated complexity underlying models world model significantly complex 
world world comprising volcanic territory jungle territory inhabited rex rex 
implemented game engine api runs real time modern pc 
dinosaur characters animated keyframed footprints inverse kinematics position legs ground 
add physical realism body modeled point mass moves dynamically response leg movements 
interfaced game engine reasoning engine implemented 
performance cognitive modeling aug tried compiling cml specifications prolog mented world remains real time average see occasional pauses reasoning engine takes longer usual plan suitable behavior 
cognitive modeling animations 
demonstrates approach camera control second demonstrates plan territorial behavior 
action camera control demonstration consists rex conversing 
camera films dinosaur long case get reaction shot dinosaur 
rex additional behavior gets bored listening attack 
camera automatically track moving creatures 
sample frames resulting animation filmed automatically jungle territory cognitive camera shown 
cognitive camera uses essentially cml code example section camera angles programmed bit differently 
territorial rex animation challenge administer knowledge rex world especially reactive behavior behave boids rex knows automatically formulate plans volcanic territory neighboring jungle territory 
rex herd narrow passage connects territories 
passage marked stone arch northwest corner volcanic territory 
reason fear larger stronger highly vicious rex come close 
code shows cml instruct rex frightened approaches occurrence move direction results frightened position rex position adjacent direction code demonstration slightly complicated instructed rex proximal frightened 
second cml expression tells rex frightened run away defined heading direction frightened direction opposite rex frightened direction rex rex heading rex fluent easily defined terms relative positions rex third cml expression instruct rex plan paths avoid obstacles action move direction possible position rex free adjacent direction patience skill ingenuity conceivable successfully program herding behavior sets stimulus response rules 
cml thing online java applet linking compiled prolog code api quintus prolog ability link visual 
convenient approach adversely affected real time performance abandoned favor complete implementation reasoning engine 
fact rex autonomously maps obstacles exploring world preprocessing step 
encounters obstacle rex remembers location obstacle mental map world 
relative ease higher level goal directed specification 
suppose want get heading particular direction 
simply give rex goal getting heading right direction initially heading way 
goal specified cml defined goal initially goal previous instructions enable rex plan actions smart 
autonomously plans collision free paths maneuver groups order desired direction 
rex plans moves ahead current position 
longer duration plans degrade real time performance 
rarely useful highly kinetic world rex partial knowledge 
better strategy adaptive herding periodic re planning 
speed things defined undesirable situations fluent undesirable 
antithesis goals represent situations illegal undesirable 
example far away point effect 
situation rex anticipating changing direction useless undesirable defined undesirable rex need consider subsequent situations searching appropriate behavior 
pack reactive prefer stay away passage arch smarter cognitively empowered rex succeeds mob territory 
frames corresponding animation shown 
world world entirely physics 
inhabited creatures sea head upper body man tail fish 
inhabitants predator sharks 
artificial life simulator implements virtual creatures fully functional pre cognitive autonomous agents 
modeling similar 
provides graphical display model captures form appearance characters biomechanical model captures anatomical structure including internal muscle actuators simulates deformation physical dynamics character body behavioral control model implements character brain responsible motor perception low level behavior control 
reactive behavior system interprets intentions generates coordinated muscle actions 
effect locomotion deforming body generate propulsion inducing forces virtual water 
sharks animated likewise 
goal equip cognitive model enables reason world acquired knowledge enabling interpret high level direction animator 
fig 
depicts relationship user reasoning system reactive system 
simulated dynamics hard reason precisely world case real world possible predict approximately ultimate effect actions 
reactive behavior model helps mediating reasoning engine physics environment 
higher level need consider actions note reactive rex cognitive rex allowed plan single move ahead chase agile 
sheer luck eventually chase narrow passage arch territory 
user reactive system territorial rex animation 
cognitively empowered rex herds smart 
domain specification behavior specification sensory information low level commands cognitive model preconditions performing action effect performing action virtual world initial state virtual world reasoning engine information virtual world interaction cognitive model user low level reactive behavior system 
swim forward turn left 
reactive system translates commands necessary detailed muscle actions 
includes sensorimotor control loops enable agent approximately satisfy commands go position 
reactive system furthermore acts fail safe reasoning system temporarily fall 
event character decide intelligent course action reasonable amount time reactive layer continually tries prevent character doing stupid obstacles 
typical default reactive behaviors turn right avoid collision swim life 
short performing precise multiple forward simulations impossible reasoning system predict exact position executes plan action 
typical solution re initialize reasoning engine time called difficult pursue long term goals tossing character knowledge just outdated knowledge 
solution characters represent positions ive fluents described section 
sensing positions visible objects known 
knowledge replan course action possibly long term strategy 
regular fluents model internal state goal position fear level animations animations revolve pursuit evasion behaviors 
hungry sharks try catch eat try superior reasoning abilities avoid fate 
part sharks instructed chase see 
see go saw 
fails start forage systematically 
shows selected frames animations 
animation verifies shark larger faster little trouble catching prey open water 
second animation introduce large rocks underwater scene things get lot interesting 
trouble cognitive modeling enables come short term plans take advantage rocks frequently evade capture 
hide rocks hug closely shark difficulty seeing reaching 
able control structures cml encode great deal heuristic knowledge 
example consider problem trying come plan hide predator 
traditional planning approach able perform search various paths criteria path routes hidden positions leads far predator unfortunately kind planning prohibitively expensive 
contrast control structures cml allow encode heuristic knowledge help overcome limitation 
example specify procedure encodes heuristic current position stay search area expensive planning part check obstacles hidden positions near obstacles animations 
duffy cleverly predator shark 
fails danger looms panic flee random direction 
suitable precondition prevents selecting goal meets certain minimum criteria cml procedure implements heuristic character proc evade choose search panic turn procedure part larger program directs hide sharks say trying visit rocks scene safe 
course planning necessary appropriate possible way generate aspect animation 
especially animator highly specific mind 
regard important remember cml support detailed behavioral programming offers full range control structures customary regular programming languages 
cml control structures animation great escape 
done simply instructing avoid eaten appears reasonably safe break large rock scene 
particular rock want get go narrow crack larger bodied shark pass 
wanted exciting animation eventually gets special rock shark hot pursuit 
evade procedure swing action hopefully enabling evade capture finding slipping crack 
specify exactly mechanism heavily stack deck getting desired animation 
turns got wanted attempt debugging 
animation desired remained elusive cml constrain happens 
extension behavioral animation approach enables linearly scale cognitive modeling efforts single character order create multiple similarly behaved characters 
character behave autonomously unique perspective world 
third animation demonstrate numerous cognitive characters may cooperate try survive shark waters 
specified brave timid 
timid ones danger shark food cry help brave ones come rescue provided isn dangerous 
brave managed attract shark attention away targeted victim hero tries escape 
introduced idea cognitive modeling substantive new apex computer graphics modeling pyramid 
behavioral models reactive cognitive models deliberative 
enable autonomous character exploit acquired knowledge formulate appropriate plans action 
assist animator game developer implementing cognitive models created cognitive modeling language cml 
powerful language gives intuitive way afford character knowledge world terms actions preconditions effects 
provide high level description desired goal character behavior cml offers general automatic mechanism character search suitable action sequences 
extreme cml serve conventional programming language allowing express precisely want character act 
employ combination extremes gamut build different parts cognitive model 
combination convenience automation cognitive modeling approach general cml particular potentially powerful tool animators game developers 
cognitive modeling opens numerous opportunities 
example incorporate mechanism learn reactive rules mimic behavior observed reasoning engine 
important issues arise user interface 
stands cml choice underlying representation developer want build cognitive model 
animator users probably prefer graphical user interface front 
order interface easy limit possible interactions supplying parameters predefined cognitive models visual programming metaphor specify complex actions 
cognitive modeling potentially vast topic just begun explore 
world instance concentrated endowing rex cml cognition 
reason similarly endow 
allow animation complex dinosaur behavior 
lone match rex imagine scenario pack conspire fell large opponent 
cognitive modeling hatch strategic plan 
domain knowledge inferred rex size big asset open terrain hamper narrow passage arch 
leader pack plays decoy unsuspecting opponent narrow passage 
pack mates assumed positions near ends passage rush command 
jump rex back bite legs 
pack overcomes brute strategic planning cooperation sheer number 
coordinating multiple way significantly increase branching factor situation trees cognitive models 
solution control intelligent subgroups 
exploit complex actions provide loose script specify key intermediate goals decoy stratagem 
acknowledgments eugene fiume helpful comments originally suggesting application cml cinematography steve rotenberg andy styles angel studios ca steve hunt developing low level see robert bakker novel red bantam 
rex api steven shapiro hector levesque technical assistance situation calculus jeffrey technical assistance interval arithmetic 
jf ramesh benevolent support final stages 
allen hendler tate editors 
readings planning 


grammar film language 
communication arts books hastings house publishers new york 
badler phillips zeltzer 
simulating humans 
oxford university press 
bates 
role emotion believable agents 
communications acm 
blinn 
am 
am looking 
ieee computer graphics applications 
blumberg 
old tricks new dogs ethology interactive creatures 
phd thesis mit media lab mit cambridge ma 
blumberg galyean 
multi level direction autonomous creatures real time environments 
proceedings siggraph aug 
funge 
cml compiler 
www cs toronto edu funge cml 
funge 
lifelike characters camera 
lifelike computer characters snowbird ut oct 
funge 
making behave cognitive models computer animation 
phd thesis department computer science university toronto toronto canada 
reprinted siggraph course notes orlando florida 
funge 
ai games animation cognitive modeling approach 
peters 
funge 
representing knowledge situation calculus epistemic fluents 
journal reliable computing 
hayes roth gent huber 
acting character 
trappl petta editors creating personalities synthetic actors 
lecture notes cs 
springer verlag berlin 
cohen salesin 
virtual cinematographer paradigm automatic real time camera control directing 
proceedings siggraph aug 
levesque reiter lesp rance lin scherl 
golog logic programming language dynamic domains 
journal logic programming 
pinhanez mase bobick 
interval scripts design paradigm story interactive systems proceedings chi mar 
magnenat thalmann thalmann 
synthetic actors computer generated films 
springer verlag berlin 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence pages 
edinburgh university press edinburgh 
perlin goldberg 
improv system scripting interactive actors virtual worlds 
proceedings siggraph aug 
reiter 
frame problem situation calculus simple solution completeness result goal regression 
lifschitz editor artificial intelligence mathematical theory computation 
academic press 
reynolds 
flocks herds schools distributed behavioral model 
proceedings siggraph jul 
scherl levesque 
frame problem knowledge producing actions 
proceedings aaai aaai press menlo park ca 
snyder 
interval analysis computer graphics 
proceedings siggraph jul 
tu 
artificial animals computer animation biomechanics locomotion perception behavior 
acm distinguished dissertation series springer verlag berlin 
tu terzopoulos 
artificial fishes physics locomotion perception behavior 
proceedings siggraph jul 

graphing equations generalized interval arithmetic 
msc thesis department computer science university toronto toronto canada 
see com 
