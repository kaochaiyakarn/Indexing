implementation quorum protocol liu agrawal el abbadi department computer science department computer science cal poly state university university california san luis ca santa barbara ca replica control subject intensive research fulfill promise practical applications 
major reason lack acceptance complexity implementation protocols 
describes simple efficient implementational approach protocols quorum consensus protocol 
replicated data employed distributed databases enhance data availability multiple copies critical data item maintained different sites data item retrieved copies data item accessed due system failures 
benefit data availability realized cost elaborate algorithms hide underlying complexity maintaining multiple copies single data item 
ideally application cognizant existence replicated data written non replicated database 
criterion relatively easy achieve normal system operation difficult cope face system failures existence main motivation replicating data place 
difficulty lies keeping copies consistent face system failures time maximizing data availability 
algorithms address problems called replica control algorithms 
replica control subject intensive research quite time fulfill promise practical applications 
current state distributed database technology data replication implemented typically enforced read write protocol 
complicated restrictive replica control protocols popular topic research implemented widely systems 
major reason supported cal poly faculty development 
partially funded nec japan 
lack acceptance complexity algorithms 
describes simple efficient implementation approach quorum consensus protocol known replica control protocols widely implemented 
quorum consensus protocol replicated database data item may stored redundantly copies item distributed different sites 
coordinator transaction translates read write data item manner copy equivalence observed 
property enforced replica control protocol 
protocol read translated transaction coordinator read xa read xa copy data item site similarly write translated write xb write 
composition read set fa amg write set fb depends protocol 
quorum consensus qc algorithm nonnegative weight assigned copy replicated object read threshold rt write threshold wt defined wt rt wt exceed total weight copies 
read quorum set copies weight rt write quorum set copies weight wt design write quorum copy common read quorum write quorum 
write operation write translated set write operations physical copy write quorum read translated set reads physical copy read quorum addition version number maintained copy 
read write maximum version number returned copies quorum latest version number copy copies associated version number contain current value write copies write quorum updated assigned incremented version number 
weights assigned copies seen votes algorithm known voting algorithm 
simplest form quorum majority set case algorithm known majority voting 
qc elegant algorithm provides equivalence presence network partitioning 
requiring complicated management network configurations replica sites required replica control algorithms virtual partitions primary copy 
require special treatment recover copies outdated copies latest version number read written 
hand qc algorithm known drawbacks requires multiple reads read ii requires large number copies tolerate site failures iii copies known advance determine weights quorum configurations 
drawback arises read operation qc dispatches multiple read requests requires read quorum respond operation completed 
comparison algorithms primary copy require reading copy may located site minimizes access time primary copy local copy copy site local transaction 
argue client server environment described concept local copies apply response time multiple reads take place concurrently far exceed single read assuming sites load balanced excessive message processing latency 
drawback ii true algorithms addresses network partitioning 
drawback iii addressed enhancements qc allow dynamic reconfiguration quorums 
replica control protocol qc received attention researchers implementation widespread 
protocol implementations replica control protocols difficult implement distributed database management system 
reasons fold due nature replication dramatic increase number sites involved protocol compared non replicated system 
example non replicated system coordinator interacts participant carry operation replicated system read set write set participants involved 
result significant increase number participants atomic commit phase transaction 
second complicated measures typically required failures occur 
example protocols read write available umbrella non trivial algorithm required satisfy equivalence criteria presence failures 
elaborate recovery actions necessary keep copies date 
surmise complex implementation protocols main impediments acceptance industry 
primary copy protocol protocol implemented practice prototype systems 
hand little written detailed implementation quorum consensus protocol 
rest section implementation approach deem simple efficient 
straightforward define quorum implementation performing operation quorum defined 
basic idea coordinator dispatch operation set copy sites responses received quorum clear translates coding 
note read write sufficient perform operation particular quorum operation performed superset quorum 
rest section describe implementation approaches gather quorum operation 
qc implementation approach send naive approach implement qc coordinator dispatches operation copy sites advancing operation soon responses site quorum gathered 
algorithm shown 
note timeout coordinator avoid indefinite blocking event site failures 
coordinator waits predetermined timeout period dispatches operation requests point aborts transaction responses quorum copy sites collected period 
obvious drawback approach large number messages required number copy sites object accessed operation 
quorum responses collected 
responses set possible quorums operation 
dispatch operation copy sites oe start timer timeout timed contain member response site received timeout abort transaction send implementation copy sites gathered coordinator responses collectively sent replica sites 
gamma jqj responses operation unneeded 
excessive messages undesirable contribute message processing latency 
excess responses simply ignored coordinator 
example system uses locking concurrency control lock object accessed operation may acquired copy site response arrives late 
response simply ignored coordinator possible object remain locked indefinitely 
alternatives handle situation coordinator generate message cancel operation allowing lock associated operation released soon possible ii coordinator includes transaction membership set set sites involved atomic commitment protocol operations 
alternative adds message overhead 
addition measures taken ensure operation cancelling message eventually arrives presence failures 
complications approach site maintain record lock acquired operation transaction know specific lock release operation cancellation message arrives 
fault tolerance record non volatile requires disk access operation 
hand alternative ii inflates transaction membership set adds message disk access overhead atomic commitment protocol transaction increases probability transaction blocked indefinitely failures occur atomic commitment 
naive approach simplistic surface leads complications leads excessive message disk access overhead 
qc implementation approach send needed set possible quorums copy sites hold accessed object 
oe repeat select members gamma send operation request sites wait timeout period adding sites responses contains quorum oe oe responses received operation failed abort transaction send needed implementation dispatching request copy sites alternative approach coordinator send randomly selected quorum responses received timeout period additional sites contacted responses quorum obtained 
operation fails quorum responded 
algorithm shown 
failures operation requests responses needed ith operation resulting total messages operation transaction 
size quorum selected smallest possible message overhead optimal approach 
unfortunately approach complications previous approach failures considered 
complications arise selected quorum operation fails respond collectively 
special actions necessary address late missing responses just previous approach 
qc implementation approach send random quorum way avoid complications mentioned previous approach simply attempt retry 
operation random quorum chosen coordinator dispatch requests 
sites quorum respond coordinator proceeds operation 
operation failed transaction aborted 
algorithm shown 
message overhead approach optimal excessive operation requests dispatched coordinator 
algorithm results simplified implementation 
approaches previously discussed late set possible quorums copy sites hold accessed object 
randomly select send operation request sites wait timeout period responses arrived whichever comes responses received operation failed abort transaction send random quorum implementation response copy site may arrive transaction active controller proceeded subsequent operation 
contrast approach late response copy site arrives transaction aborted 
result normal protocol aborting transaction ensure releasing locks acquired transaction participant sites including late responding copy site 
consequently special measures required cancel original request late responding copy site 
simplified approach reduces complexity implementation considerably major drawback 
failure randomly chosen quorum may include sites failed 
selection lead abort transaction responses failed sites collected coordinator 
result approach lead unnecessary data unavailability failures precisely provision replicated data supposed enhance 
applied indiscriminately approach unacceptable terms data availability 
qc implementation approach estimated approach randomly selecting quorum set operation coordinator selection list copy sites assumes communicate 
term list estimated 
algorithm expressed 
day systems information compiling readily available assume compilation list coordinator site add significantly overhead maintaining replicated data 
assuming estimated reasonably current quorum selected coordinator contain sites set possible quorums copy sites hold accessed object set sites current estimated 
randomly select exists operation failed abort transaction send operation request sites wait timeout period responses arrive responses received operation failed abort transaction estimated implementation accessible 
consequently coordinator able gather necessary set responses render operation successful presence failures 
note require accurate term estimated 
desirable list accurate possible correctness execution transaction enforced qc protocol 
comparison approaches transaction rate response time fi fi fi fi fi fi fi response time failures simulation testbed particular set system characteristics evaluate implementation approaches described section 
implementation file replicated times 
approaches implement quorums majority sets 
send approach approach locks acquired operation requests freed commit time 
send needed approach approach read write translated coordinator set reads writes dispatched randomly selected set sites predetermined global replica list size majority replica set responses received timeout period coordinator dispatches gamman additional requests copy sites replica list 
send approach locks acquired operation requests freed commit time 
random quorum approach approach coordinator dispatches operation randomly selected set copy sites accessed object 
estimated approach approach sites updated period site failure recovery 
set times message propagation time approximate time required probe detect failure recovery 
coordinator dispatches operation randomly selected set copy sites coordinator site 
objective find viable efficient implementation quorum consensus protocol 
deployment replica control protocol improve availability data presence failures unfortunate effect increasing overhead transaction execution normal operation 
typical system expected failure free time important overhead introduced replica control protocol excessive absence failures 
failures approaches needed random estimated access single quorum set expected incur similar overheads 
send approach larger message overhead dispatches operation request replica sites 
shows impact overhead transaction response time failures 
compared approaches send approach results greater response time transaction rate 
transaction rate response time compared approaches 
transaction rate response time compared 
furthermore implementation send approach failures considered difficult due complexity described section 
reasons eliminate implementation approach viable alternative 
remaining approaches examine performances failures 
comparison clear cut 
conceivable needed approach provision retries may yield better availability random estimated abort transaction single attempt gather quorum fails 
estimated probability success attempt gather quorum depends accuracy erroneously indicates site communicable lead abort transaction controller dispatches request hand risk aborting transactions unnecessarily disappears caught current status copy sites 
soon occurrence failure period number transactions may aborted unnecessarily due date information 
unnecessary aborts reduce data availability negative effects may offset savings overhead 
illustrates performances approaches introduce failures relatively moderate rate occurrences time unit 
note needed approach significantly higher response time 
transaction rate response time needed approach compared approaches 
transaction rate response times respective needed approach random approach estimated approach respectively 
transactions appear require longer commit needed approach explained delay required subsequent round rounds messages required attempt gathering quorum operation fails 
needed approach data availability comparable estimated approach 
said random approach data availability level compared approaches 
low data availability attributable hit characteristic random approach randomly chosen quorum gathered transaction aborted occurrence presence failure 
estimated approach enjoys better response time comparison approach better data availability random approach failures introduced relatively moderate rate 
addition approach best throughput 
higher transaction response time presence failures complexity implementation eliminated needed approach consideration 
increased failure rate compare performance random approach estimated approach failures occur frequent rate 
illustrates performance ap transaction rate response time fi estimated needed pi random fi fi fi fi fi 
pi pi pi pi pi transaction rate throughput fi estimated needed pi random fi fi fi fi fi pi pi pi pi pi transaction rate data availability fi estimated needed pi random fi fi fi fi fi pi pi pi pi pi qc implementation approaches transaction rate response time fi estimated random fi fi fi fi fi fi transaction rate throughput fi estimated random fi fi fi fi fi transaction rate data availability fi estimated random fi fi fi fi fi qc implementation approaches proaches failure rate 
frequent failures number misses random approach increases resulting transactions aborted lower data availability lower throughput 
data availability ranges transaction rate varies throughput ranges 
contrast similar decline data availability approach 
data availability ranges throughput varies 
compared random approach estimated approach enjoys better throughput better data availability failures occur frequently 
puzzling aspect results response time appears better random approach throughput worse 
explanation follows 
failures frequent random selection quorum include failed site leads transaction aborted 
likelihood increases number operations transaction 
transactions commit random approach relatively short resulting small response time 
proposed simple implementation quorum consensus protocol knowledge estimated status replica sites 
believe implementation viable effective quorum consensus protocol simple elegant protocol replica control embraced industrial implementors implemented simply efficiently 
abridged version original 
copy full version please send mail csc edu 
agrawal bernstein 
consensus protocol replicated data 
ieee transactions parallel distributed systems april 
bernstein hadzilacos goodman 
concurrency control recovery database systems 
addison wesley reading massachusetts 
burkhard 
consistency recovery control replicated files 
proceedings tenth acm symposium operating systems principles pages december 
el abbadi toueg 
maintaining availability partitioned replicated databases 
acm transactions database systems 
gifford 
weighted voting replicated data 
proceedings seventh acm symposium operating systems principles pages december 
herlihy 
dynamic quorum adjustment partitioned data 
acm transactions database systems june 
jajodia 
dynamic voting algorithms maintaining consistency replicated database 
acm transactions database systems june 
kumar 
performance analysis hierarchical quorum consensus algorithm replicated objects 
proceedings tenth international conference distributed computing systems pages may 
liu 
design distributed database systems presence failures 
phd thesis university california santa barbara 
liu agrawal el abbadi 
performance replica control protocols presence site failures 
appear ieee seventh symposium parallel distributed computing oct 
oki liskov 
new primary copy method support highly available distributed systems 
proceedings seventh annual acm symposium principles distributed computing pages 
ozsu valduriez 
distributed database systems 
computer august 
paris 
voting witnesses consistency scheme replicated files 
proceedings sixth international conference distributed computing systems pages june 
paris 
voting 
proceedings ninth international conference distributed computing systems pages june 
paris long 
efficient dynamic voting algorithms 
proceedings fourth ieee international conference data engineering pages february 
stonebraker 
concurrency control consistency multiple copies data distributed ingress 
ieee transactions software engineering pages may 
thomas 
majority consensus approach concurrency control multiple copy databases 
acm transaction database systems june 
tong 
vote assignments weighted voting mechanisms 
proceedings seventh symposium reliable distributed systems pages october 
van tanenbaum 
voting ghosts 
proceedings eighth international conference distributed computing systems pages june 
