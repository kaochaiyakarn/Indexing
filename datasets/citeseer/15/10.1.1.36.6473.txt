pergamon information systems vol 
pp 
copyright fl elsevier science printed great britain 
rights reserved invited project review happened database researchers met usability tiziana catarci dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy received january final revised form april database researchers building interactive information systems 
tells reader initial enthusiasm user induced frustration consequent discovery human computer interaction hci world concept system usability quite successful coupling hci databases 
fl elsevier science rights reserved key words user interface information system usability 
generally accepted factors mainly influence success computerized projects human organizational technological 
mere fact computer technologies reliable powerful innovative solve organization problems acquired instruments harmony attitudes motivations competencies workers organization social environmental context activities 
significant latest isos quality software products iso iec define quality capacity product help certain users reach certain objectives effective efficient safe satisfactory way certain contexts 
message simple objective computerized project provide multiple functional technologically innovative product defects 
productive interaction software system user utilizes 
precise interaction favor increase efficiency people performing duties having cause extra organizational costs dangers dissatisfaction user undesirable impacts context environment long periods learning assistance maintenance 
literature listed requirements synthetically associated qualitative software characteristic called usability 
late increase regulations publications associations meetings methods constant usability development 
contributing factors intended identify techniques methods competencies meant appropriately involve users design validation solutions anticipate assess impact solutions context 
accepted principle involvement user obvious research development projects 
difficulty cultural 
research oriented point view computer scientists tend underestimate contributions users provide consider smart definitely anticipate 
industrial perspective companies keep considering user involvement primarily definite cost paid view uncertain benefit 
tend implement user involved design methods obliged demand customer 
studies show portion global cost software development allocated applications usable half necessary amount 
recommended dennis shasha tiziana catarci intended little contribution diffusion usability culture database people 
tells story small group database researchers building interactive information systems unavoidable experiences real users discovery humancomputer interaction hci world eventually joy realizing fruitful marriage database human computer interaction hci techniques 
story started early goes 

experience qbd just got sort master degree university rome la sapienza 
period young student quite young time graduate advisor 
advisor carlo batini student giuseppe santucci 
advisor love entityrelationship er model diagrammatic representation database schemata 
defended master thesis layout er schemata 
obscure reason strongly wanted pursue academic career advisor interested having ph students time tried discourage 
anyway eventually agreed ph advisor gave idea marked years er diagrams database query interface 
idea common tens er visual query system proposals see survey time quite new liked 
started working system originally called query diagram qbd 
basically mind database issues expressive power query languages query evaluation sql thought potential user system nice idea substitute sql commands navigation diagrams 
main problem prove equivalence navigations relational algebra initially 
working expressive power concentrated expressing non relational queries transitive closure 
extending expressive power query languages fashionable time especially datalog growth graphical query languages high expressive power mainly proposed alberto mendelzon group university toronto working language 
extended qbd transitive closure graphically expressed decided compare expressive power mail know hard believe happened approximately years ago wrote real letter alberto 
ph students called isabel cruz replied 
extremely excited detailed answer reported results journal changing name language qbd opportunity develop maintain friendship scientific cooperation isabel story 
neglected users approach query languages reporting papers manipulating diagrams definitely easier writing sql commands 
esprit project venus years began discover real meaning usability 
working qbd thoroughly analyzed related literature just developing time reported results couple conference papers 
hardly proposal database literature seriously consider importance active user role designing usable systems user trials carried notable exception 
unfortunately today database proposals building usable systems completely ignore existence real users outside world sic 
remaining part section qbd briefly described criteria classifying visual query systems reported 
esprit project happened database researchers met usability fig 
schema navigation existing paths 
qbd system query language qbd system visual query environment diagrammatic representation entity relationship schema describing underlying relational database 
keeps high expressive power noticeable facility balanced 
expressive power proved relationally complete includes significant class recursive queries transitive closure handles extension relational algebra set oriented operators call generalized set oriented operators 
ease achieved fully graphical environment 
environment user interacts system mainly device keyboard necessary 
increase friendliness system set help facilities devised 
important top browsing schema transformation 
enables browsing library top refinements documenting er schema different levels abstraction 
browsing top schemata user easily locate fundamental concepts links 
top browsing may locate subschema interest 
schema transformation allows schema converted new version closer query 
example possible collapse path schema introduce new concept replace isa relationship child entity 
general structure qbd query location distinguishing concept called main concept entity relationship seen entry point subqueries 
subqueries express possible navigations main concept concepts schema 
attributes subquery determined strategy attributes main concept automatically considered explicitly deleted user ones shown result requested user 
presence main concept associates type subquery instance main entity entity person result query set persons possibly enriched attributes concepts matter kind subsequent operations user performs specify 
subqueries combined applying set oriented operators subqueries derived entity 
generally different structure subqueries involved impossible perform simple set oriented operations general approach needed see specific solution adopted qbd 
main concept selected different types primitives available navigating schema 
allows user follow existing paths schema see see comparing concepts building new tiziana catarci fig 
schema navigation building new relationship basis attribute comparison path relationship schema 
comparison conditions generic conditions attributes expressed means simple window mechanism includes suitable set icons 
roughly speaking say path schema corresponds ordered sequence natural joins pairs constituting path followed final selection projection 
explicit presence relationships releases user need looking concepts foreign keys system perform join operations right way 
hand comparing concepts new relationship corresponds theta join entities concerned user specify theta condition 
queries involving transitive closure expressed visual approach similar difference pre selection particular icon signals recursive session 
qbd semantics formally defined terms mapping er relational databases navigational operator er schemata meaning terms relational algebra 
query qbd interpreted application navigational operator 
generalized transitive closures formalized closure navigational operator 

examples qbd queries couple examples describe user interacts qbd expressing query 
database schema shown user 
query find names doctors working st john hospital 
proceed query qbd user indentation means user doing certain action exiting previous ffl starts sailing session selecting ship icon selects doctor clicking selects works selects hospital sets local condition attribute name selecting attribute previously opened window listing entity attributes selecting icon containing operator writing st john ffl ends sailing session selecting ship icon ffl selects menu query result 
happened database researchers met usability person city hospital resides works prescribes patient name sex cityname name doctor performs research reveals contains analysis nuclear ray echo description starting date name description problem described elaboration image fig 
example er schema point system opens window user set global query conditions conditions entire query path single concepts 
global conditions user just ignores window 
system elaborates natural language version query shows user 
computes query result displays tabular format 
query find names doctors working hospital situated city live city names 
proceed user ffl starts sailing session selects doctor selects works selects hospital selects selects city ffl adds cityname selecting attribute name previously opened window listing entity attributes keyword add selects resides selects doctor ffl ends sailing session selecting ship icon ffl selects menu query result point system opens mentioned window user set global query conditions 
window contains columns showing couples concepts involved path 
user scroll columns order find concepts interest 
case concept interest twice entity doctor 
user selects couple system shows twice entity doctor attributes 
user ffl selects icon containing operator ffl selects name column ffl selects name second column 
system proceeds proposing user rephrasing query natural language set tuples constituting query result 
tiziana catarci 
visual query systems visual query systems vqss defined query systems visual representations denote domain interest express related requests :10.1.1.45.8882
birth vqss due needs including providing friendly human computer interaction allowing database search non technical users introducing mechanism comfortable navigation case incomplete ambiguous queries 
worth noting real precursor vqss qbe proposed moshe zloof 
early vqss received greatest attention database community 
vqss reviewed classified criteria expressive power usability categories potential users :10.1.1.45.8882
expressive power important characteristic query language nowadays notion expressive power cope emerging new data types documents images videos new models semistructured data xml new technologies internet web 
notion usability quite database oriented different ones referred section hci community :10.1.1.45.8882:10.1.1.45.8882
usability specified terms models vqss denoting data queries corresponding visual representations strategies provided system order formulate query :10.1.1.45.8882
definition reflect hci view usability software quality related user perception software system 
particular data model significant impact user perception system 
visual representations interaction strategies influence user system interaction important parts system interface thing user sees system 
remarkably attention likewise majority researchers proposing vqss completely concentrated system 
course users existed asking opinion 
pioneering studies aimed categorizing mysterious creatures users dividing classes characterized different skills knowledge needs 
conjectured depending user class kind task certain vqss appropriate :10.1.1.45.8882
instance vqss extensive icons icon composition mechanisms typically suited express simple select project join queries naive users 
analysis underlying statements usually correct 
needed substantiated running comparison experiments experiments common vqs community 

usability completely unknown happy qbd database people writing papers systems improving human computer interaction deep knowledge human aspect apart reasonable quite obvious assumptions 
regard worth observing papers years common sense assumptions complex visual languages aimed simplifying user interaction proposed 
second part things happened dramatically changed perception word usability venus project started avi workshop organized visited navathe met people hci group particular 
venus eu funded esprit project aimed facilitating users accessing heterogeneous databases retrieving required information unified query system providing common integrated interface different information sources 
system intended provide user iconic diagrammatic interface 
interface enables user identify select retrieve information interest heterogeneous distributed databases homogeneous modality independent specific underlying database models languages systems 
venus consortium included initially called man machine interaction changed probably politically correct 
happened database researchers met usability software houses manufacturers universities actual users 
fact users mainly hospitals research centers involved forced start interacting intensively designing interface 
interaction real users students simulating users frustrating experience 
fact quite suddenly realized assumptions users understanding visual query system partly completely false instance users difficulties understanding entity relationship diagrams expected easy grasp representation database immediately understood concept hierarchical view schema initial drawing limited number concepts clicked show richer refinement thought difficult idea major difficulty combining selection conditions attributes boolean connectives 
real nightmare majority people largely underestimated problem venus interface 
expected users felt locked option possibility escape 
reminded escape functionality similarly basic commands way interface effect 
began suspect database experts design interactive information systems 
different kind knowledge user side important 
evidence project reviewers hci researcher called gilbert cockton 
literally told project user interaction databases give sufficient attention system usability 

building visual system reply time 
remember happy answer eventually decided look hci literature discover precisely community meant word usability causing bad score review 
meaning usability described detail 
anyway got quite hci community interaction started depth study topic 
realized hci quite italy decided contribute diffusion organizing rome avi international workshop advanced visual interfaces series 
workshop successful 
learned lot hci system usability decided search expert field capable contributing venus project 
incidentally spent summer atlanta year opportunity meet 
soon usability expert project 
spent months visiting roma taught correctly organize user trials evaluate system usability 
see section 

definitions usability usability evident requirement software product interactively utilized user 
systems identified literature abbreviation interactive computer system 
systems user system interface plays major role component establishes immediate contact user 
responsible informing user possibilities limits functionalities system 
clearly show actions user interface writing manipulating objects moving relations actions obtainable results referring information operations enable system execute commands 
software usability measured characteristics user system interface 
consolidated experiences methods utilized consciously unconsciously users judge interfaces certain user considers usable interface suitable environmental technological opportunities user everyday life 
specificity software respect types products determines complexity factor considered 
instance commonly items sort user experts discovered new peculiarities particular user group librarians european projects see section 
understanding derives fact users interact menu systems menus quite hierarchically organized 
tiziana catarci software understood external characteristics example case hammer plate 
computer product typically systemic needs components 
software system specialized product meant specific context 
usability considered easy understand screen mask iso ergonomic requirements office visual display terminals guidance usability usability defined extent product specified users achieve specified goals effectiveness efficiency satisfaction specified context iso identifies useful indicators measuring level usability product 

effectiveness accuracy completeness users achieve certain results 
efficiency resources utilized relation accuracy completeness users achieve certain results 
satisfaction freedom positive attitude product 
evident indicators define characteristic influenced technology internal elements products 
usable software intended adapted context user works enabling user optimize acquired knowledge increase productivity quality result obtained computerized application 
coincides definition goal quality new version iso iec information technology software product quality quality model usability enlarged influence defining comprehensive quality product 
goal quality reflects user supplier meet 
regulation goal quality evaluated called quality perceived user actual utilization product real context 
measure quality regulation suggests effectiveness efficacy satisfaction indicators associated usability security added 
considering mentioned objectives intended usability said characteristic measures distance designer model computer system model modalities possession designer user model functioning model system user creates regulates interaction system 
closer models system considered usable relation data 
respect usability level product measurable real environment real product specific user 
iso defines context environment containing users tasks carry hardware software resources materials physical social conditions product 
learning capacity level experience education personal consideration user system works purposes mainly characteristics taken consideration 
case studies showed simplicity interface reduces possibility errors users assessed resources allocated develop interactive application production interfaces 
osf motif open software foundation specific regulation unify user interfaces appearance available interaction strategies 
regulation defines guidelines styles components bottoms bars dialogue windows 
definition usability mcleod 
iso consists parts stems liaison iso iec jtc sc information technology software engineering committee iso ic ergonomics sc ergonomics human system interaction committee 
deals ergonomics human system interaction specifically field 
parts regulation concern implementation processes create usable application 
part contains specific guidance usability 
parts contain requirements hw system parts sw system 
standard taken account usability iso dis human centred design processes interactive systems providing guidance user oriented design processes 
happened database researchers met usability non iso regulations define concept usability fundamental text refer major dimensions usability efficiency learnability easy way main commands memorability easy way remembering main commands easy error recovering satisfaction 
various definitions usability minor differences agree considering usability fundamental software quality important traditional qualities robustness efficiency 
difference usability software qualities achieve concentrate system features user system interaction characteristics 
similarly software qualities usability simply added development process 
obtained development process focuses specifically 
clear user play key role development process 
term user centred coined denote design modes oriented systems usable 
major advantages obtained user participates contributes design process inception onwards 
complete benefits user centred design come calculating total life cycle costs product including conception development implementation support maintenance 

user centred design user centred design characterized features 
active user involvement 
clear identification user requirements tasks context 
appropriate allocation functions user system 
iterative design process solution 
design team multidisciplinary competencies 
active involvement users probably important requirement 
user main source information designer concerning context tasks computerized methods 
order achieve effective efficient satisfying results definition appropriate usage system consider appropriate allocation functions indicating specifically carried system users kinds communication protocols defined human computer interaction 
decisions factors relative capabilities limitations human versus technology terms reliability speed accuracy strength flexibility response cost importance successful timely accomplishment tasks user 
investigation information technology development projects showed strong relation participation users design realization activities satisfaction respect product 
appears evident necessary condition achieving usability computer application frequent controlled exchange opinions user designer development cycle realized 
respect fundamental follow iterative approach user feedback critical source information 
iteration combined active user involvement provides effective means minimizing risk system meeting user organizational requirements including requirements hidden difficult specify explicitly 
iteration allows preliminary design solutions tested real world scenarios results fed back progressively refined solutions 

carrying user centred design main activities take place carrying user centred design ffl understand specify context tiziana catarci ffl specify user organizational requirements ffl produce design solutions ffl evaluate designs requirements 
characteristics users tasks organizational physical environment define context system 
relevant characteristics users include knowledge skill experience education training physical attributes habits capabilities 
task description comprises goals system allocation activities operational steps human technological resources 
description environment includes physical characteristics may influence usage acceptance system 
design processes major activity specifying functional requirements product system 
user centred design essential extend activity create explicit statement user organizational requirements relation context description terms human computer interface workstation design users jobs including allocation tasks users comfort safety health motivation task performance design organisation operation communication users relevant parties management change including training personnel involved required new system performance operational financial objectives 
user centred requirements derived objectives set appropriate trade offs identified different requirements 
scenario users requirements clearly specified process iterative design may start 
process continuous interaction user involved design shown concrete realizations design solutions form models mock ups user allowed simulate real tasks feedbacks improve design realizing new models iterating process user centred design goals met 
phase essential exploit system prototypes prototypes simply demonstrations show users preview design derive user feedback exploited drive design process 
obtain maximum benefits best carry iterations users fewer iterations users 
order determine objectives met formal evaluation needs conducted realistic context example help interruptions evaluator 
evaluation essential step user centred design take place stages system life cycle order provide feedback improve design assess user organizational objectives achieved monitor long term product system 
early stage design emphasis placed obtaining feedback guide design process realistic prototype available possible assess user organizational objectives achieved 
early stages design development changes expensive stages evaluation started soon design proposals available 
depending development stage project evaluation may select validate design options best fit functional user centred requirements elicit feedback requirements users diagnose potential usability problems identify needs improvement system 
expert evaluation fast economical 
identifying major problems sufficient guarantee successful interactive system 
evaluation techniques vary degree formality rigour user involvement depending environment evaluation conducted 
choice determined financial time constraints stage development lifecycle nature system developed 

real user trials having studied fundamentals system usability user centered design understood approach qbd design user centered way happened database researchers met usability nice features system 
qbd transformed commercial product software organizations thing done point carry organized tests real users evaluate qbd usability get suggestions improve system 
recalling widely accepted definition usability section extent product efficiency effectiveness satisfaction specific users achieve specific goals specific environments notice main components evaluated effectiveness efficiency satisfaction 
effectiveness refers extent intended goals system achieved efficiency time money mental effort spent achieve goals satisfaction depends comfortable users feel system 
usually measure factor determining quality interaction provided 
effectiveness evaluated relating goals subgoals system accuracy completeness goals achieved 
case visual query systems main goal extract information database performing queries accuracy achieving goal generally measured terms accuracy query completion user correctness rate writing queries 
measures efficiency relate level effectiveness achieved expense various resources mental physical effort time financial cost principle point view user organization considered 
user efficiency frequently measured terms time spent complete query 
measures query accuracy response time evaluated quite precisely 
frequently done directly observing user recording real users performing predefined tasks system analysing recorded data 
common tasks query writing query reading performed investigating relationships database queries expressed natural language queries expressed system study 
query writing question query natural language easily user express query language statements 
question query reading query expressed query language statements user express query easily natural language 
precisely measured user performance accomplishing tasks 
performance usually expressed terms accuracy query completion user correctness rate writing queries user efficiency time spent complete query 
kinds measures defined evaluated precision 
measures satisfaction describe comfort acceptability system 
learnability product may measured comparing usability product handled user time scale 
flexibility product assessed measuring usability different contexts 

related experiments importance designing testing interfaces ease effectiveness qbd time widely recognized empirical studies aimed testing validating effectiveness various query styles interfaces conducted database field unfortunately true today 
due fact measuring ease query language difficult activity 
requires identification control large number extraneous variables including cognitive capabilities limitations user 
different classes experiments reported literature aims evaluating ease single language aims establishing easiest languages 
reisner reviews initial experimental research query languages mainly covering done sql qbe 
studies show better user performances qbe respect sql query reading query writing tests 
qbe sql compared account factors database management system similar environments 
interesting note tiziana catarci experiment query language type affected user performance called pencil tests case qbe users higher scores sql users 
line tests user accuracy affected type language adopted user satisfaction greater qbe user efficiency better 
earlier surveys experiments database field include papers shneiderman thomas 
interesting note published database journals conferences represented sort isolated contribution 

study concentrates language query technique called dynamic query 
query new query easily expressed moving position slider mouse display resulting data dynamically modified 
language tested query languages providing form fill input method having different output methods 
hypothesis dynamic query language perform better confirmed experimental results 
mentioned common goal empirical studies provide quantitative basis comparative effectiveness ease query language interface 
frequently aim verifying hypothesis come intuition authors simple observation people system 
general approach studies includes defining precisely measured developing task users perform measuring relevant parameters user performance error rate time complete task 
tens subjects usually involved experiments ranging 
limited number subjects common studies confirms high cost difficulty running user experiments 
worth noting significant results obtained reduced number users organized experiment see discounted usability theory proposed nielsen 

qbd experiments similarly people mentioned decided run comparison experiments 
decided compare qbd sql 
sql considered standard sustain hypothesis superiority qbd respect sql usability issues 
thought significant experiment comparison visual query languages diagrams icons 
qbd case qbi 
qbi system allows users query understand content database manipulating icons 
provides intensional browsing tools assist formulation complete queries incremental manner icons involving path specification 
objective studies measuring understanding comparative effectiveness efficiency subjects construct queries sql diagrammatic iconic languages 
experiments designed determine significant correlation query class query language type type query language experience user 
started design experiment settings 
generally speaking easy task needs choose evaluation method identify independent dependent variables select users classify questionnaires interviews design test run called pre test preliminary experiment couple users test adequacy variables factors respect experiment goals 
method adopted measure effectiveness efficiency systems called observational evaluation known methods evaluating usability 
method involves real users observed interacting system offers broad evaluation usability 
may apply observational evaluation direct observation record interaction users system 
recording video camera valuable store lot information example critical points interaction user consult manual user happened database researchers met usability blocked time user spends perform task mistakes user 
expensive terms equipment set time required analyze recorded data 
reason preferred rely careful direct observation 
subjects undergraduate students secretaries professionals different levels proficiency classification 
naive intermediate expert users 
naive user roughly characterized features interacts computer occasionally little training computer usage low tolerance formal query language unfamiliar details internal organization information system 
usually user want spend extra time learn interact query system finds irritating switch media manuals order learn interact system 
naive user want know moment interaction system 
notice naive user similar cuff casual users 
hand expert users possess knowledge database management systems query manipulation languages acquire deep understanding system 
order come thinner classification identified third kind users intermediate position respect categories call intermediate users 
people having general knowledge computer science experience databases 
purpose experiments needed identify prototypical classes queries 
argue query classifications proposed literature see 
classifications called expressive power query language 
kinds classifications extremely valuable general inadequate purposes 
mainly idea grouping queries depending constructs involve ground specified set constructs relational algebra 
example queries involving selection operations commonly considered belonging specific class despite kind formula expressing selection condition boolean operators 
contrary needed query classification evaluated different way queries belonging traditional class having different intrinsic complexities terms instance number involved database concepts kind mutual relationships concepts 
consider query languages compared different data models 
qbd entity relationship model sql relational model qbi slight variation graph model introduced 
order partly resolve difference lay basis query classification considered systems graph model 
shown mapping exists relational model graph model trivial entity relationship model graph model 
graph model allows define database terms triple hg mi typed graph set suitable constraints corresponding interpretation 
schema database represented graph model typed graph set constraints 
instances database represented notion interpretation 
set may specified logic constraint language intended exploited system designer order specify constraints meaningful properties nodes represented typed graph 
node typed graph class node representing class objects role node representing relationship classes edge connects class node role node 
class nodes partitioned subsets set printable class nodes set nodes 
represent sets objects values distinguished domains integers reals characters represent sets objects denoted simply object identifiers 
path typed graph sequence adjacent class nodes role nodes class node 
path possible associate multivalued function maps object belonging interpretation class node set objects class node path 
note definition path exclude presence cycles 
formal characterization user queries systems may terms tiziana catarci suitable subgraphs typed graphs representing database schemata 
consequently laid basis classification analysis features subgraphs relate user oriented query characteristics 
particular exploited notion path specifying coordinates classification maximum semantic distance paths involved query number cycles paths involved query 
concept semantic distance introduced establish order importance user access paths 
semantic distance formally introduced mathematical function modelling significance expected utility path composition query 
significance path regarded difficulty user encounters understanding meaning path 
expected utility measures path query 
referring second characteristic note number cycles greater zero follows existentially quantified independent variables ranging interpretation class node 
consequently query formulation requires cyclic paths forces user deal different class node 

experiment objective study measure understand comparative ease subjects construct queries qbd sql 
specifically interested questions query natural language easily user express qbd sql different types queries significant interaction query type query language different levels skill significant interaction skill level query language 
experiment designed determine significant interaction query class query language type type query language experience user 
said participants divided categories test background questionnaire 
got subdivisions 
total naive users 
total intermediate users 
total expert users 
subjects assigned groups involved qbd tests sql tests 
group composed non experts intermediates experts 
subjects underwent short training course environments equal times 
sql course relational model sql language qbd course entity relationship model usage qbd environment 
way users totally acquainted query language underlying model case qbd environment implementation 
way final test free concentrate exclusively query formulation 
training session subject set queries different levels complexity natural language asked construct queries query language environments 
order subjects queries close acyclic far acyclic far cyclic far acyclic consistent subjects order minimize learning effect 
basically close acyclic ca queries consisted selections single relational tables single entities qbd different kinds selection conditions simple positive simple negative multiple conjunction multiple disjunction 
far acyclic fa far acyclic queries comprised join operations path navigation qbd different join selection conditions 
far cyclic queries contained self joins paths involving twice concept qbd 
hypothesis graphical query language perform better sql confirmed experiment results 
happened database researchers met usability ca fa ca fa ca fa fc sql qbd naive intermediate expert fig 
accuracy queries user category ca fa ca fa ca fa fc sql qbd naive intermediate expert fig 
time completion user category qbd showed results accuracy response time respect semantic distance paths involved query expression see figures 
hand queries contain cycles expressing qbd slightly accurate sql 
reason qbd users performed better expressing queries characterized high semantic distance paths qbd displayed screen part database schema user follow 
user total control path specification possible backtrack path completed change previously specified conditions single step 
considering queries containing cycles say query involves attributes belonging concept qbd users get bit confused 
explanation mainly way system presents attributes user 
attributes concept entity relationship represented labels grouped form associated concept 
consequently query cyclic user sees copies form belonging different occurrences concept encountered path 
order associate form right concept occurrence system automatically adds number attribute labels 
noticed numbers users confused clearly understanding meaning replicated labels 
referring qbd noticed acyclic queries involving tiziana catarci connective selection conditions gave users problems 
certainly due fact system default assumptions modified user 
case default consisted considering selection conditions conjunction 
means user interested connective need specify required connective 
user probably tends forget difference connectives 
happened system default 
case system automatically included main concept attributes final result attributes concepts selected path explicitly added 
noticed users tended forget include attributes belonging main entity final result 
general default help user 
contrary introduces error possibilities 
hand case complex queries users conceptual errors wrong choice main concept path followed 
interesting note naive users performed surprisingly languages 
referring sql accuracy better intermediate users 
probably due fact intermediate users mainly acquainted types procedural languages difficult learn declarative language sql 
confident solve easy questions pay attention doing assignments 
hand naive users completely unaware programming techniques minds influenced learning certain kind language 
furthermore expert users small errors simple questions 
errors mainly due need remembering table names precise syntax 
confirms believes experts profit flexible query language 

second experiment said qbi system allows users query understand content database manipulating icons see 
qbi concepts class objects attributes class exclusively form external representation database structure due natural simplicity 
users database abstractions called complete objects completely encapsulated objects similar universal relation abstraction relational databases 
complete object properties called generalized attributes gas 
example set exams taken student treated ga student way similar simple attributes name birthday 
qbi class provides view underlying database viewpoint 
query language qbi select project paradigm query expressed defining conditions determine subset chosen class selection specifying gas part output result projection 
result query subsequently composition complex queries 
windows forming qbi interface referred workspace window query window browser window 
qbi windows containing icons related experiment database students professors see displayed 
workspace window displays primitive derived classes icon space corresponds class node underlying typed graph 
user freely arrange icons workspace create duplicates 
indicating icon corresponds selecting viewpoint class node query 
selected icon professor 
query window user composes selection conditions subwindow projection conditions show subwindow dragging arranging icons 
referring condition surname professor equal smith composed ga surname professor surname labelled icon constant value smith connective equal 
note ga age professor age labelled icon dragged condition space ga combined ga constant value create new atomic condition 
browser window contains gas chosen class node professor 
happened database researchers met usability fig 
qbi interface set composed thousands elements 
operators allow user search desired gas smaller set 
various operators possible select gas certain type 
possible select single valued ga gas include paths certain class node description talk certain concept 
example browser window shown contains icon student talk space professor selected icon 
consequently gas professor talking student 
note natural language sentence displayed left ga icon 
sentence automatically generated qbi order clarify meaning ga experiment setting similar discussed section 
unfortunately case able collect total subjects 
order small groups divided subgroups skilled unskilled users procedure discussed test questionnaire 
training session subject queries different levels complexity natural language asked construct queries query language environments 
queries belonged classes described 
typed graph experiment database 
example far acyclic query trial find professors surnames surname student enrolled rome university 
query expressed qbd selecting concepts concerned entity relationship diagram window pose global condition path see section 
qbi navigation phase replaced activity searching ga corresponding path specified 
reason qbi suffers path semantically distant due browsing activity cognitive process comes browsing activity user thinks path terms multivalued function generic instance selected class 
referring query user thought finding ga professor students name professor 
attribute difficult understand observed majority subjects just refused idea kind ga existed 
interesting report reaction surprise subjects having spent minutes trying understand construct query realized strange ga list 
sense reaction demonstrates problem query tiziana catarci professor student person university city integer string teaches enrolled lives born name surname age name name fig 
experiment typed graph find ga simply understanding 
previous experiment reason qbd users performed better expressing queries characterized high semantic distance paths qbd built manually 
user perceives path unique complex function sequence single steps 
considering queries containing cycles say query involves attributes belonging concept qbi users obtain better results qbd users 
discussed previous subsection fact qbd attributes concept entity relationship represented labels grouped form associated concept see query cyclic user gets confused see section 
contrary qbi path corresponds ga ga visually represented different icon screen 
query expression contains cycles user perceives clear distinction different occurrences concept 
case query find persons live city university attend located example path person lives city university enrolled person split qbi distinct paths city person lives city university person enrolled represented distinct city icons 
result subjects get confused constructing appropriate selection predicate combining icons 
summary basis figures got experiment say expert users performed better qbd system small difference exists respect performance non expert users slightly better qbi 
discover noticeable differences class queries containing cycles better performed qbi class queries containing paths better performed qbd considering query classes 
differences involve time accuracy totally independent skill users 
results experiment supported widely believed opinion interface offering user various visual representations query modalities appropriate wide set users applications see section 
exploited results experiments making changes prototypes 
referring qbd users commented default option combining attribute conditions logical misleading removed 
users reported need uniform way interacting system rearranged user interface happened database researchers met usability der phases query formulation homogeneous way spite conceptual difference 
qbi got extremely valuable hints improving operators query specification mechanism 
particular observed subjects dragging ga say talk space purpose selecting gas having path including different subjects selected icon specified atomic condition tried move gas selected icon directly workspace window 
operation allowed experiment version qbi 
consistent interface philosophy neat semantics variable ranging selected icon way bound atomic condition corresponding gas regarded queries 
mechanisms implemented observed significant improvements qbi ease 

experienced 
learned lot qbd tests 
got convinced user tests fundamental interactive system despite efforts system designers users completely predictable 
experimented expenses user tests cost lot terms efforts time spent main reasons pursued projects interactive systems see public administration section 
important achievement user centered design style 
usability testing carried system development valuable terms suggested hints problem recognition may reveal major interaction problems 
solving problems cause complete re design system unacceptable cost 
cost may lead software producer just minor changes leave major changes second release 
contrary usability testing inserted user centered design possible usability problems initial phases design making changes remain minor cost 
qbd test venus system development chance partially apply user centered design techniques fully applying project see section 
checking adequacy visual representations different users experimental proofs fact different users performing different tasks may need different representations interaction mechanisms 
starting idea decided provide venus adaptive interface briefly summarized 
stressing idea automatically providing user appropriate visual representation dare project mentioned 

venus adaptive interface main idea venus project allow different classes users access multiple heterogeneous databases means adaptive interface offering interaction mechanisms 
aim led design partially implement visual query system exhibiting multidatabase characteristics 
notable features approach presence common formalism graph model principle sufficiently represent databases expressed common data models wellknown visual representations equipped suitable constraints organize presentation query result better definition set elementary graphical actions selection nodes drawing edges called graphical primitives gps having clear semantics terms complex visual interaction mechanisms may defined precise definition suitable translations different representations terms database content visual interaction mechanisms construction management effective user model allows system propose appropriate visual representation user skill needs 
telematics program libraries project lb uibk ac tiziana catarci hand graph model powerful express semantics common data models suitable unifying canonical model 
user query examine results conceptually single database called graph model database 
user query translated set queries executed component databases results thereof combined form single result 
user oblivious existence underlying databases need concerned specific storage formats query languages 
hand semantics query operations expressed various representations uniformly defined terms gps user change visual representation query formulation 
user switch different visual representations formulating query possible switch visualizing result produced query execution 
representations available display query result different query phase 
mainly due fact visualized query purpose schema database actual database instances constitute query result displayed user 
architecture venus system shown 
system consists visual interface user model manager query formulation manager result visualization manager dbms interface interacting underlying database management systems 
kernel system consists managers cooperating processes 
query formulation manager capable supporting paradigms visual representations form iconic diagrammatic representations providing suitable representation internal query language operators see allowing user switch expressing query 
query formulation manager selects visual representation appropriate current user user model elaborated user model manager see 
equivalent queries may expressed different interaction modalities associated various visual representations 
user model manager continuously collects data actions performed user maintaining knowledge base user model components 
query expressed user query formulation manager interacts dbms interface turn handles problems arising data distribution heterogeneity underlying databases computes query result 
result visualization manager presents user query result exploiting available visual representations virtual reality forms nested forms 
user faced appropriate representation model result visualization manager allows switching different representations browsing query result 

dare project designing interface database system visual representation carefully chosen effectively convey database information 
words visual representation consistent respect database represents 
say representation consistent correct complete 
visual representation complete user perceive database information correct information perceived 
note consistent visual representation depict information interest crucial order user correctly grasps database information content see mackinlay pioneering automatic design graphical presentations book examples misleading visual representations 
example consider data table refer towns italy number people living town location distance kilometers respect rome 
may visualize data graph 
case visualization complete correct 
complete attribute values table appropriate representation 
infer information approximate number people distance rome mutual position 
distribution towns graph may convey wrong information position interpreted north rome milan east happened database researchers met usability query formulation manager visual interface user model manager user modeling knowledge gm schemata dbms dbms dbms db db db 
result visualization manager dbms interface query result query visualization paradigms data visualization paradigms fig 
venus architecture town people position distance rome milan north south east pisa north west east table example database visual representation correct 
example shows graph user infer data table 
representation complete correct 
referring geographic information account observer usually considers distribution data plane cardinal points 
representation correct user assumes wrong information south west rome 
large amount literature topic starting variety projects including zoo project university wisconsin ai proposals eu funded project 
basically proposals share limitations try automatically build complete representations correctness considered relevant property formally checked concentrate visualization schema instances database 
proposals restricted specific domain applications providing general solution 
plan solve drawbacks proposing general theory establishing adequacy visual representation database characteristics specified develop system called dare drawing adequate representations implements theory works modalities tiziana catarci rome milan pisa fig 
visual representation complete correct data table pisa km km km km rome milan people fig 
complete correct visual representation data table ffl representation check checking adequacy visual representations proposed user 
adequacy expressed terms completeness correctness visual representation respect database 
visual representation complete user perceive database information content correct perceived 
ffl representation generation automatically associating database effective visual representation 
visual representation adequate mentioned convey database features specified designer concepts relevant 
note dealing static representations consider changes representation caused user interaction database changes appropriate reflect user intentions suitable user tasks see initial reflections contributions aspect 
dare system knowledge base containing different kinds rules 
visual rules 
visual rules characterize different kinds visual symbols list visual attributes see associated different kinds visual symbols 

data rules 
data rules specify characteristics data model database schema database instances designer entity relationship model data rule say instance person entity john person 

mapping rules 
mapping rules specify link data visual elements entities represented rectangles person red rectangle john small red rectangle 
note happened database researchers met usability pisa km km km km rome milan people fig 
complete correct visual representation data table special kinds data objects naturally visual images charts forms force visual representation adhere natural representation 

perceptual rules 
perceptual rules tell user perceives visual symbol line geometric icon relationships symbols mutual placements figures plane perceptual effect relevant visual attributes color texture dare system presently development plan complete working prototype year 

experts 
failures understood crucial role played real users development database information system user interfaces considered quite experts matter 
studied hci theory usability issues run user trials developed complete projects user centered design approach 
considered database researchers troubles successful encounter usability 
venus project ended ready set new european project 
chance project 
libraries archives collecting newspaper unified integration networks eu funded project involving seventeen participants countries including large group libraries want easily available give wide visibility large cultural heritage collect catalog daily 
considerable number users libraries involved project give opportunity spread culture information far reaching public means internet 
major goals ffl set network newspaper clipping archives accessed internet centralized fashion searching retrieving 
ffl provide generic model individual libraries scanning storing indexing newspaper making accessible network 
project aims producing highly interactive system carried rigorous user centered design methodology envisioned solutions tiziana catarci understand specify context evaluate designs requirements specify user organizational requirements produce design solutions identify need human centered design system meets specified functional user organizational requirements fig 
user centered design activities really user needs requirements 
note kind approach particularly appropriate large number libraries involved project playing double role users test sites 
project ongoing system done going start running final user trials april 
worth noting learned new respect classes users interaction information systems project 
past experiences met users different kinds chance extremely expert users application domain libraries archives books journals 
instance users precise idea digital library accept different computer scientists 
librarian point view digital library different xml repository 
librarians familiar classifications thesauri taxonomies 
classifications years expect better information technology case 
forced satisfy skilled demanding users stressed importance quantity user inputs design methodology 
eventually came user centered design methodology briefly recalled subsection 

user centered design methodology design methodology follows general principles user centered design see section sequence activities shown 
methodology principles users massively involved design development process phase specification context direct interviews meetings questionnaire 
describe detail sub goals inputs outputs activity 

understand specify context local goals clearly define range intended users tasks environments sufficient detail support design activity inputs information users supply designers information directly acquired designers physical social cultural legislative environment 
approaches followed survey evaluation method 
method include kind surveys performed users especially questionnaires interviews frequently evaluation techniques 
studied questions get precise data valuable suggestions designers 
asking open ended questions important obtain suggestions unanticipated problems desired changes 
interviews useful happened database researchers met usability interview encourage subject making survey answer fully subject discouraged need writing long answers 
outputs output activity description relevant characteristics users tasks environment highlights aspects significant impact system design 
version description integrated outcome subsequent phase concerning user organizational requirements incorporated technical deliverables describing analysis design various system modules deliverable emphasizing relevant aspects corresponding module 
note description single output issued 
working document produced outline reviewed maintained extended updated design development process 
acceptance criteria description checked users users representatives designers retained complete consistent 
project analysis users questionnaires hard task differences existing different libraries 
instance librarians main tasks indexing newspapers 
unfortunately existing situation various libraries diverse different approaches 
instance participating archives national languages indexing names geographic terms 
main problem handling non roman alphabets libraries common rules handling depends origin source 
library uses known classification collection 
typically home classifications tend integrate system 
wishes answers question ideal indexing schema include 
transfer old indexing system new medium handling browser orientated thesaurus internet resources included procedure transparent simple 
heading source date article type article size author named person geographical name link relevant articles keywords 
theme sub theme section date author communication 
analogously special requirements range easy handling simple structure finding indexing technique articles belonging topic linked user driven way 
case analysis user requirements real iterative process carried various users come selection main system features representing acceptable compromise libraries 
specify user organizational requirements local goals clearly define functional user organizational requirements relation context description terms human computer interface workstation design users jobs task performances design organisation operation communication users relevant parties 
inputs output previous phase analysis working environment technical specification system 
approaches followed analytical evaluation 
analysis organization documentation analysis typical workflow expected changes caused system 
worth noting substantial impact workflow basically users ready extra encounter initial difficulties light envisioned benefits 
outputs description user organizational requirements integrated documents produced activity analysis context 
acceptance criteria description integrated analysis context checked users designers consistency completeness 
version prototype exhibiting features rejected complex users proposed 
tiziana catarci 
produce design solutions local goals create potential design solutions drawing established state art experience knowledge participants 
inputs output previous phases knowledge state art experience designers internal user interface style guides international standards 
approaches followed solutions designed inputs proposed users validation 
simulations models mock ups allows designers anticipate user problems reduces need cost reworking occur systems need revised 
user evaluation see activity provides feedback stage design 
early stages users involved evaluation scenarios simple partial prototypes 
design solutions developed evaluations involving users progressively complete concrete versions system 
order get structured feedback users requested simulate real tasks available prototypes 
outputs possible refinement documents produced activities documents describing revised design system revisions reasons revision new improved versions prototypes 
acceptance criteria design solutions iterated design objectives met including users satisfaction 
got interesting suggestions starting prototypes 
instance librarians asked list requirements query interface analysis phase basically concentrated query mechanisms keywords available information authors date newspaper thesaurus search 
various access modalities differentiated user skill casual expert 
evaluating prototype asked access modalities access collection meaning emphasis single archive 
required possibility browsing making virtual tour selected archive browsing considered access modality analysis phase 
users able give timely suggestions visual order main buttons convincing 
scan ok button important rarely 
order interfaces scanning clipping 
concerning sentence worth noting users sensitive inconsistencies interface 
expect icon represent concept command concept command represented way 
unjustified changes ambiguities generate major user problems 

evaluate design requirements local goals early design emphasis obtaining feedback guide design realistic prototype available possible measure user organizational objectives achieved 
inputs descriptions context user organizational requirements system prototypes evaluation plan essential working prototypes system available 
approaches followed different methods depending stage project available resources terms money people specific results achieved observational evaluation method involves real users observed performing tasks system depending stage project system varies mock ups real product 
method offers broad evaluation usability 
depending specific situation may apply observational evaluation direct observation record interaction users system 
recording video camera valuable store lot information example critical points interaction user consult manual user blocked time user spends perform task mistakes user expensive especially time required analyse recorded data 
happened database researchers met usability survey evaluation method see 
case questionnaires interviews get feedback users comfortable feel performing tasks system degree likeness method offers broad evaluation usability user view point possible identify critical aspects user system 
controlled experiment method particularly valid test change design project modify usability 
may applied phase development system provides advantages possible separately test alternative designs independently system 
method mainly aims checking specific cause effect relations possible controlling variables 
expert evaluation method exploits knowledge hci expert predict usability system users 
method main disadvantages depends quality expert user 
outputs refinements documents produced activities see 
specific evaluation reports 
types evaluation reports depending purpose evaluation provide feedback design test specific standards provide evidence usability health safety performance 
reports design feedback mainly credible sources evaluation users design reviews provide design feedback appropriate form support design decisions 
reports test design specific standards identify relevant standards provide rationale report minor non dealt design justify deviations standards expected users 
reports testing detailed contain description context system tested status measurements effected users methods testing results appropriate statistical analysis 
acceptance criteria evaluation assess design objectives achieved 
design objectives checked evaluation 
objectives relate primary goal indexing clipping sub goal search secondary goals maintainability 
setting objectives specific sub goals permit evaluation earlier development process 

lessons learned key aspects project presence libraries act users 
permitted develop truly user centered design methodology test design choices real user requirements 
discovered users system conscious needs clear expectations particular librarians tests done 
exposed mock ups interface workflow simulations reacted constructive criticisms led improvements system 
instance librarians rejected complex interfaces offered functionalities extra functionalities considered marginal respect easy accomplishment tasks 
contrast various designers team tried interfaces able satisfy functional requirements collected analysis phase 
worth noting users ready give requirements favor simpler interaction 
proof fact majority users prefer simple way get basic things complex way get principle 
practice featured interfaces 
cultural diversity rana library catalonia library represented real problem contributed richer project 
country strongly pushed preserve identity 
instance thesaurus interface developed way participating library native language 
unified english interface accepted librarians 

big project usability pa close happy story 
eventually sort real experts usability issues relationships information systems design 
tiziana catarci usability seed italian realities including italian public administration pa 
italian public administration important test field implementation usability 
due volume existing applications various types ongoing projects potential users produced applications addressed 
various reasons information technology market italy basically characterized contracts service outsourcing models relevant section absorbed pa acquisitions computer products pa terms ad hoc developments 
type development provide principle best condition usability purposes consistent contiguity designers users 
unfortunately lead user centered projects usable products reality 
various factors strongly determine necessity define usable systems pa growing computerization administrative processes diffusion computers public offices consequent need pa clerks 
second effort re engineer administrative procedures workflow processes functional decentralization 
new services spread interoperability cooperation administrations introduce possibility citizens having remote exchange information governmental bodies computerized means various types totem internet 
making pa focused usability trigger market increasing suppliers investments demand training 
request usability comes alongside factors related pa structure 
instance new expectation users linked diffusion knowledge graphic interfaces technologies data presentation internet communication 
quite natural citizens expect remote interaction pa standard internet connection help specialized administrative information processes 
unfortunately admitted notwithstanding numerous positive expectations usability italian pa response far poor 
occurs observed pa particularly favourable conditions contiguity designer user 
surprisingly ad hoc products developed pa users far proved competitive usability respect offered general purpose products 
data stemming surveys conducted period relevant contracts italian pa concerning supply products services information technology showed software applications pa information systems possess insufficient usability requirements respect iso 
surveys conducted questionnaires users satisfaction confirmed reasons dissatisfaction low usability level available procedures 
projects terminate due date product continuously modified release need evolution maintenance substantially correct characteristics products released users 
large diverse community pa users need better specified 
users pa applications divided classes pa internal personnel operates computerized system implementing process self administration included lifecycle service provided users citizens user citizen personally uses services provided pa application requirements classes users partially different common expectation support increase productivity effectiveness satisfaction 
final citizen user pa services needs interact easy product automatic teller machines presently quite common totem supply information reaching internet web sites public administrations provide services data 
creation unitary network pa unified information system increase number involved users 
users probably particular computer competencies know specific procedures obtain service 
language physical cultural 
hand possible division class various sub classes differ respect users profile gives rise issue matter fact usability product adaptability happened database researchers met usability user context pursued participation iterative development methods involving user right early phases lifecycle 
considering variety user pa class users model analysis 
certainly satisfying users possible objective 
view various profiles users citizens right relation consumer systems number functionalities richness ease profiles users possible 
studies showed little percentage users utilize advanced functionalities common applications 
possible non usefulness specific advanced functionalities reason uncompleted awareness possible positive relation necessary effort learn benefit 
case adequate information prevent user rejecting advanced applications 
right relation costs benefits 
current unanswered questions confirm importance peculiarity pa testbed software systems 

usability working group approximately half years ago italian authority controls software diffusion pa created working group usability working group main purposes assessing extent suppliers computer technologies public administration pay attention product usability surveying level comfort discomfort pa users reach interacting new software systems 
group duty determining possible areas improvement indicating obtain term 
group composed eleven people including university professors professors computer science working user interfaces social communication science officers background computer science contract monitoring pa officers computer science law background external usability experts 
past eighteen months group carried main activities ffl running tests different development designs software products italian pa particular concentrating methods design teams participation modes public administration design process users evaluation system usability respect implicit explicit needs ffl producing document analyzing connection consolidated productive experiences achieved usability specific requests computerization pa considering particular conditions constraints influencing development information technology italian pa 
indications provided define feasibility studies contracts usability needs ways assess 
particular document tries answer crucial questions considering italian pa scenario ideal conditions achieving usability objective resources 
cost benefits choice quantified 
requirements product usable 
appropriate design implementation processes obtaining really usable product 
usability level product stage development cycle assessed 

test description case studies referred product product confidential reasons conducted objective assessing design processes systems different design teams 
tests offered opportunity determine possible areas improvement obtain short medium term 
products delivered users release tests conducted 
total designers users participating design process users participating design process involved tests 
informatica 
including group coordinator 
tiziana catarci 
objectives method tests members focused attention aspects assessed designs ffl method design teams methods obtaining information users context usability aspects types product evaluation procedures ffl participation modes pa users design process methods interaction design team type information provided typology users involved design participation verification procedure capability provide useful information solve problems ffl users self evaluation system usability respect implicit explicit needs 
product usability tests carried objective tests 
tests carried phases interview design team users involved design interview users involved involved design product utilization test 
interview forms case studies 

product interview results product interactive information system meant collect data sources necessary information create documents 
test carried product released 
meetings held people involved project designers design team representative customer different user user involved design process users involved design members 
design group supplier consists people 
mainly technical backgrounds engineers computer specialists 
integration team external usability specialists envisaged 
supplier traditional design methods 
specific human centered design techniques rapid prototyping techniques adopted 
design process supplier team interacted users 
designers design process total commitment design interviews users 
particular consideration possibility obtaining benefits specific costs implement usability 
relevant software product features logic organization information screen easy navigation 
particular attention reaching specific usability objectives 
designers opinion acquired sufficient information users 
information provided user considered prominent representative 
meetings representative held design process 
inputs obtained prototype realization design phases 
designers show specific interest analysis context 
representative user involved design process description organization 
usage product requires user knows microsoft word internet browser 
user may exposed small organizational changes product manual tasks scheduled 
final verification phase total users involved workshops held separate days 
designers significant inputs workshops 
designers user suggestions concerning product characteristic structural navigation opinion users interviewed significant characteristics application 
inputs users caused project partly modified 
designers important information user representative 
evaluation test product user driven modifications user representatives held 
final evaluation limited conformity functional operational characteristics 
difficulties organizing test interviewed users involved design process total 
interview took place designers happened database researchers met usability short test product 
interviewed users users product involved design 
time users saw product 
know organizational domain served application showed knowledge editor chosen designers microsoft word 
interviewees solution offered product quite rigid difficult transfer offices users took part design 
users think solution chosen search information data sources best 
consider solutions offered commercial browsers easier 
said greater involvement users design phase significant inputs 
regard product developed basis indications user flexible difficult applied slightly different contexts 
single meeting short time disposal users able give precise indications interaction style product starting lack openness user customization scarce flexibility 
indicated possible changes look feel interface position bars order menu items 
users observations collected designers confirmed useful information obtainable tests meetings designers users 
having meetings mean producing hardly usable products transferring subsequent versions cost deriving lack user centered design 

product interview results product interactive system retrieving exchanging information different pa offices various purposes 
test carried release time 
meetings organized people involved project design team consisting experts representative customer different user members users involved design process eleven users involved design 
design team consists professionals engineer computer specialist mathematician team assisted external expert carry analysis usability aspects 
specific human centered design techniques 
prototypes produced development 
course design process design team interacted users 
designers commitment analysis requirements users total commitment design process 
designers particularly interested usability cost benefit 
relevant characteristics software product consistency logic organization data screen easy navigation 
users considered prominent representatives gave information organization context 
information users collected interaction representative users considered adequate designers 
representative users final customer users responsible procedures offered application released 
designers show striking awareness need analyze context product specific techniques 
adoption product cause reorganization external relation offices pa customer 
meetings held users design process 
designers defined users significant sample real users product 
designers meetings users provided significant inputs 
inputs caused design modified revision phase prototype 
final evaluation test product carried representative users 
test conducted supplier standard procedure designer non participating observer 
particular test aimed checking correct understanding user requirements completeness displayed data content appropriate functional organization accomplishing objectives user tasks easy understanding defined interaction navigation methods understandability menu items organization screen layouts 
functional operative features product evaluated highlight difficulties interaction tiziana catarci possible improvement interventions 
mentioned users involved design interviewed short test product conducted designers 
interviewed users executives design played dual role users supervisors users 
reflects real life roles users play role supervisors customers 
users regard meetings designer satisfactory 
users consider partially representative sample probably users computer knowledge 
contacted definition phase product 
users intermediate prototype asked evaluate prepared complained tests went prepared supplier 
frequent mistakes development software products pa due poor attention designers gave user requirements 
order avoid mistakes suggested carry accurate process meant identify profile better match expected user 
tests prototypes users assistance designers giving time needed assessments 
eleven users involved design interviewed 
users different professional qualifications executives officers operators technicians 
different computer expertise 
users product users previously contacted 
time saw product 
product produce organizational changes workflow particularly distribution tasks 
expect product speed administrative procedures computerization guarantee simplified processes 
basic knowledge computer software required product expect acquire new specific computer skills training courses 
examining product satisfied 
quite difficult heavy interaction modalities navigations simple tasks lack correspondence working procedures commonly offices scarce adherence laws regulations applied specific application area 
organization information screen rated low aesthetic interface considered general comment got users frequent mistakes development software products pa users met link center periphery 
solution designers advised contact various periods users start considering products real context 

lessons learned findings mentioned tests analysis data coming monitoring existing processes products group reached main problems obstruct achievement acceptable usability values applications italian pa problem representativeness users involved project 
functionalities analyzed systems tailored information provided users 
generally speaking products ordered people users 
officers act behalf users organization projects 
way evaluations products development lifecycle carried users utilize products 
important different classes users involved phases product design development 
designers necessarily acquire data roles users respect product tasks carry help 
occurs analyzing conditions systems real potential users environment destination similar 
analysis effects products designers consider aesthetic interface crucial factor achieving users approval users care 
happened database researchers met usability processes individual group activities carried assisted new products organization new flows procedures redistribution workloads responsibilities 
quite designers tend consider users competitors communicate little possible partners achieve common objective 
user involvement occurs hardly starts early phases development lifecycle proximity release presentation prototype 
suppliers customers informed usability principles 
customers particular express desire participate definition requirement validation solution possess procedures guidelines guarantee adequate involvement users design process 
customers expected broad personal experiences development projects software applications 
suppliers hand noted little knowledge human centered development methods particular give little attention contexts products develop 
process collecting information users called review meetings subject procedures generally implemented personal receptivity designers 
contracts adequate provision involvement users criteria awarding adequately reward quality basically consider usability 
quality plans defined contracts hardly mention usability scheduled functional related reliability 
user satisfaction considered instrument define contract terms suppliers indicate areas development 
relevant methodological deficiency concerns techniques assess usability products practically ignored suppliers usability laboratories operating customers principle test supplied products 
real interdisciplinary competencies development teams lacking 
oriented satisfy engineering functional aspects product 
series causes connected deficiencies identified 
persistence technological constraints causes italian pa applications cobol languages third generation simple graphic interfaces little interaction user 
obsolete applications inevitably hinders innovation spur development environments 
suppliers convinced investing usability mentioned considered rewarding factor contracts awarded 
usability represents definite additional cost terms decrease software production rate increase product control revision procedures acquisition new expertise benefits easy evaluate 
existing procedures contract prevent suppliers possible competitive advantages deriving focusing usability 
suppliers poor knowledge user centered development methods general lack competencies user centered design available italian market 
training field considered limited requests getting organized provide specific competencies 
attitude customer usability ambiguous 
hand usability considered important increase efficacy effectiveness safe comfort product 
hand usability seen additional cost paid supplier delay factor delivery products 
attention effects users involvement analysis validation proposed solutions 
users certain way responsible chosen solutions 
fact way proceeding gives rise organizational problems assessed probably line organization pa list mentioned deficiencies causes substantially indicates possible strategy intervention 
law contains definition innovation cycle pa requirements supplier contracts deduced content feasibility study 
necessary documents contain new demand reward tiziana catarci quality prototyping development adoption user centered methods plus constant appraisal users satisfaction structural instrument supplier plan improvement development methods 
release phase application considered 
maintenance assistance capacity respond flexible way various customer capacity continuous improvement crucial factors users satisfaction 
steps taken direction 
technical terms development contracts new software applications provide usability oriented design development requirements originating iso 
steps taken 
suppliers customers understand usability benefits showing specific methods decreases cost duration projects reduce inconsistency requirements user dissatisfaction need costly corrections advanced phases lifecycle 
key awareness represented new receptivity usability contracts include adequate terms favour human centered development processes quality plans specific usability objectives 

tells story initially difficult meeting people working information systems intended real users systems 
long hard discovery different contributions essential hints users provide design interactive system database people experimented different moods various feelings users 
initially thought smart appreciate wonderful interfaces 
enthusiastic considered inadequate design suitable systems interfaces 
place role theirs right perspective understood importance right combination tools methods user centered design usability theory conjunction database oriented concepts methodologies designing interactive system 
consider successful experience strongly encourage people hci background database community broader interaction 
worth noting interdisciplinary groups scattered large software companies rare research sector small industrial realities large application sectors public administration 
long research experience enjoyed meeting learning people including giuseppe santucci maurizio lenzerini carlo batini isabel cruz maria francesca costabile stefano levialdi chang michele john cardiff laura yannis ioannidis ben shneiderman navathe antonio lorenzo dieter phil gray matthias anna sebastiano 

special sophie cluet having provided oql source inspiration structure style 
ahlberg williamson shneiderman 
dynamic queries information exploration implementation evaluation 
sparks innovation pp 
ablex publ 

ahmed editor 
special issue intelligent visualization systems 
journal visual languages computing 
catarci santucci 
qbd graphical query language recursion 
ieee transactions software engineering 
catarci santucci 
comparative ease diagrammatic vs iconic query language 
interfaces databases 
electronic series workshop computing pp 
springer 
batini catarci costabile levialdi :10.1.1.45.8882
visual query systems taxonomy 
proceedings nd ifip working conference visual databases budapest pp 
north holland 
batini catarci costabile levialdi 
visual strategies querying databases 
proceedings ieee workshop visual languages kobe japan pp 
ieee press 
happened database researchers met usability macleod 
usability assessment measurement 
kelly editor management software quality 
technical gower press 
boyle bury 
studies evaluating learning qbe sql 
proc 
th annual meeting human factors soc 

card mackinlay shneiderman 
readings information visualization 
morgan kaufmann 
catarci 
expressive power graphical query languages 
proc 
nd ifip working conference visual databases budapest pp 
north holland 
catarci chang costabile levialdi santucci 
graph framework visual access databases 
ieee transactions knowledge data engineering 
catarci chang santucci 
query representation management visual query environment 
journal intelligent information systems 
catarci costabile levialdi editors 
advanced visual interfaces 
world scientific 
catarci costabile levialdi batini 
visual query systems databases survey 
visual languages computing 
catarci costabile levialdi santucci editors 
proceedings second int le workshop advanced visual interfaces avi bari italy acm press 
catarci costabile levialdi santucci editors 
proceedings third int le workshop advanced visual interfaces avi italy acm press 
catarci costabile levialdi santucci editors 
proceedings fourth int le working conference advanced visual interfaces avi aquila italy acm press 
catarci 
di italian 
technical report 
catarci 
la nei sistemi della pa studi di italian 
technical report 
catarci santucci 
query diagram graphic query system 
proceedings th conference entity relationship approach roma italy pp 
north holland 
catarci santucci 
fundamental graphical primitives visual query languages 
information systems 
catarci santucci cardiff 
graphical interaction heterogeneous databases 
vldb journal 
catarci santucci costabile cruz 
foundations dare system drawing adequate representations 
proceedings international symposium database applications non traditional environments kyoto japan pp 
ieee press appear 
chandra 
theory database queries 
proceedings seventh acm sigact sigmod sigart symposium principles database systems pods austin usa pp 
acm press 
chen 
entity relationship model unified view data 
acm transactions database systems 
cluet 
designing oql allowing objects queried 
information systems 
cruz james brown 
integrating layout multimedia information retrieval 
proc 
aaai fall layout generation understanding retrieval documents cape cod massachusetts appear aaai press 
cuff 
casual users 
international journal man machine studies 
esprit working group 
foundations advanced information visualization 
www cui cs darmstadt gmd de visit activities ieee 
haber ioannidis livny 
foundation visual metaphors schema display 
journal intelligent information systems 
cruz mendelzon wood 
graphical query language supporting recursion 
proceedings acm sigmod conf 
management data san francisco usa pp 
acm press 
jarke vassiliou 
framework choosing database query language 
acm computing surveys 
cardiff catarci santucci 
semantic query processing venus environment 

kanellakis 
elements relational database theory 
handbook theoretical computer science 
elsevier science 
mackinlay 
automatic design graphical presentations 
ph thesis 
department computer science stanford university 
tiziana catarci maier ullman 
maximal objects semantics universal relation databases 
acm transactions database systems 

iconic query system large medical databases 
ph thesis 
universit di roma la sapienza 
chrysanthis 
qbi query icons 
proceedings acm sigmod conf 
management data san jose usa acm press 
relationship user participation user satisfaction investigation contingency factors 
mis quarterly 
mendelzon mihaila milo 
querying world wide web 
proc 
pdis miami beach usa pp 
ieee computer society press 
zloof 
query example database language 
ibm syst 
nielsen 
usability engineering 
academic press 
nielsen 
hci discount usability engineering penetrate barrier 
usability academic press 
norman draper 
user centered system design 
lea hillsdale 

reisner 
query languages 
handbook human computer interaction pp 
elsevier science 
reiter mackworth 
logical framework depiction image interpretation 
artificial intelligence 
santucci 
dynamic form data visualizer semantic query languages 
sawyer editor interfaces database systems pp 

santucci 
query diagram visual environment querying databases 
software practice experience 
shneiderman 
improving human factors aspect data base interactions 
acm transactions database systems 
shneiderman 
software psychology 

soininen 
generalized transitive closure relational queries 
proceedings acm sigact sigmod sigart symposium principles database systems pods austin usa pp 
acm press 
catarci santucci 
visual query languages easier traditional ones 
experimental proof 
international conference human computer interaction hci 
catarci santucci 
diagrammatic vs textual query languages comparative experiment 
proceedings ifip working conference visual databases lausanne switzerland pp 
chapman hall 
catarci costabile santucci 
environment interacting databases 
acm sigchi bulletin 
thomas 
psychological issues data base management 
proceedings int 
conf 
large databases tokyo japan pp 
ieee computer society 
tsuda hirakawa tanaka ichikawa 
iconic browser iconic retrieval system object oriented databases 
journal visual languages computing 
ullman 
principles database knowledge base systems volume 
computer science press maryland 
yen 
human factors experimental comparison sql qbe 
ieee transactions software engineering 
