appear aaai trap escaping strategies discrete lagrangian methods solving hard satisfiability maximum satisfiability problems wu benjamin wah department electrical computer engineering coordinated science laboratory university illinois urbana champaign urbana il usa mail manip crhc uiuc edu url www manip crhc uiuc edu efficient trap escaping strategies search discrete lagrange multipliers solve difficult sat problems 
basic discrete lagrangian method dlm solve satisfiable dimacs sat benchmarks efficiently large benchmarks solutions local search methods today 
difficult benchmarks generally traps attract localsearch trajectories 
identify existence traps change variable cause resulting lagrangian value increase 
hanoi par benchmarks illustrate unsatisfied clauses trapped 
difficult remember explicitly traps encountered propose remember traps implicitly giving larger increases lagrange multipliers unsatisfied clauses trapped 
illustrate merit new update strategy solving difficult satisfiable sat benchmarks dimacs archive hanoi hanoi simple par par par par 
apply algorithm improve solutions benchmark max sat problems solved 
general satisfiability sat problem defined follows 
set clauses fc delta delta delta cn variables delta delta delta xm boolean formula conjunctive normal form delta delta delta cn find truth assignment truth assignment combination variable assignments boolean formula true 
maximum satisfiability max sat problem general case sat 
max sat clause research supported national science foundation nsf mip 
source code dlm manip crhc uiuc edu 
copyright fl american association artificial intelligence www aaai org 
rights reserved 
associated weight objective find assignment variables maximizes sum weights satisfied clauses 
search methods developed previously solving sat classified types 
traditional approaches resolution constraint satisfaction backtracking computationally expensive suitable solving large instances 
local search methods frank selman kautz cohen contrast iteratively perturb trajectory satisfiable assignment 
methods solve larger instances may difficulty solving hard satisfy instances 
successful shang wah formulate sat problem discrete constrained optimization problem follows min subject ng binary expression equal zero th clause satisfied number unsatisfied clauses 
note formulation constraints satisfied objective function automatically minimum 
extend shang wah wu discrete lagrange multiplier method solve 
summarizing theory discrete lagrange multipliers basic approach shang wah solving sat problems identify traps limit search trajectory 
intuitively traps points search space attract search trajectory prevent escaping 
trap escaping strategy remembers traps implicitly increasing lagrange multipliers unsatisfied clauses traps forcing search visit traps repeatedly 
show results solving difficult previously unsolved satisfiable sat problems max sat benchmarks dimacs archive 
appear aaai discrete lagrangian formulations shang wah wu extended theory lagrange multipliers continuous space discrete space 
contrast methods continuous space lagrangian methods discrete space require continuous differentiable space find equilibrium points 
section summarize theory methods solving discrete optimization problems 
define discrete constrained optimization problem follows min subject xm vector discrete variables objective function vector inequality constraints hn vector equality constraints 
discrete lagrangian methods handle problems equality constraints transform inequality constraint equality constraint max 
shang wah formulates resulting discrete lagrangian function follows max lagrange multipliers continuous 
discrete lagrangian function derive order necessary conditions similar continuous space luenberger gradients differentiation discrete space 
concepts calculus continuous space applicable discrete space 
understanding gradients continuous space shows define directions small neighborhood function values decrease 
wu defines discrete space direction maximum potential drop point fixed vector points neighbor minimum delta psi gamma yn gamma xn fxg ld min fxg ld psi vector subtraction operator changing discrete space user defined neighborhood points 
intuitively vector pointing point minimum value simplify symbols represent points space explicit vector notation 
neighboring points including 
minimum 
shang wah wu define concept saddle points discrete space similar continuous space luenberger 
point saddle point sufficiently close 
starting wu proves stronger order necessary sufficient conditions discrete space satisfied saddle points delta note condition defines discrete space fixed conditions continuous space fixed readers refer correctness proofs wu 
order necessary sufficient conditions lead discrete space order search method seeks discrete saddle points 
equations discrete approximations implement 
general discrete order search method phi delta max phi vector addition operator phi xn yn positive real numbers controlling fast lagrange multipliers change 
easy see necessary condition converge implying feasible solution original problem 
constraints satisfied unsatisfied constraints continue evolve 
note continuous lagrangian methods order conditions satisfied saddle points imply time find saddle point finite exists 
dlm solving sat problems dlm basic sat basic dlm advantage formulating solution sat discrete lagrangian search method solid mathematical foundation shang wah wu 
theory discrete lagrange multipliers explains weight update heuristics frank morris practice heuristics developed ad hoc fashion 
appear aaai procedure dlm basic sat 
reduce original sat problem 
generate random starting point fixed seed 
initialize gamma 
solution time 
pick reduces ld 
maintain 
flip 

gamma ffi 
adjust 
gamma gamma ffi 

dlm basic sat shang wah implementation basic discrete order method solving sat 
lagrangian function sat problem shows basic discrete lagrangian method dlm shang wah solving sat problems 
uses heuristics tabu lists glover flat selman kautz cohen hill moves 
explain steps improved dlm 
quite simple dlm basic sat find solutions satisfiable dimacs benchmarks problems aim ii par ssa classes seconds 
takes long time solve dimacs benchmarks difficulty solving large ones shang wah 
example takes long time solve par par solve hanoi hanoi simple hanoi par par par problems 
improve dlm basic sat identify subsection traps prevent dlm trajectories moving closer satisfiable assignments 
propose new strategies overcome traps 
traps local search examining output profiles applying dlm basic sat solve hard sat problems find clauses frequently flipped satisfied unsatisfied 
typical scenario follows 
clause initially unsatisfied satisfied flips due increases clause 
unsatisfied flips due increases unsatisfied clauses 
state changes happen repeatedly clauses tremendously inefficient trap trajectory unsatisfiable assignment 
quantify observations introduce new concept called traps 
weight terms number times trap clause index avg max hanoi maximum theta average total number flips theta weight terms number times trap clause index avg max par maximum theta average total number flips theta large disparity maximum average numbers times clause traps 
trap combination point unsatisfied clauses change single variable cause associated increase 
note satisfiable assignment trap clauses satisfied may increase perturbed 
show clauses unsatisfied plot number times clause trap 
number times clause unsatisfied clause may unsatisfied outside trap 
consider path search takes reach trap clause may unsatisfied different paths reach trap crucial determining strategy escape 
shows clauses reside traps average dlm basic sat applied solve hanoi par hard sat problems dimacs archive 
behavior detrimental finding solutions search may trapped points long time search restricted small area search space 
ideally trajectory visit point twice solving optimization problem 
difficult achieve practice appear aaai procedure dlm sat 
reduce original sat problem 
generate random starting point fixed seed 
initialize gamma gamma 
solution time 
pick reduces ld 
search trap 
unsatisfied clauses tu gamma tu ffi 
maintain 
flip 

gamma ffi 
adjust 
gamma gamma ffi 
call special increase 
procedure special increase 
pick set clauses 
max 
clause largest gamma ffi 
procedures dlm sat implementation discrete order method solving sat problems special increase special increments certain clauses weights balance 
impractical keep track history entire trajectory 
alternatively try repeat visiting trap times 
design strategy depend escape traps 
ways bring trajectory traps maintains history information explicitly maintains history implicitly 
perturb variables time see decreases trap defined respect perturbation variable 
practical combinations enumerate number variables large 
restart search random starting point region reaches trap 
lose valuable history information accumulated local search detrimental solving hard sat problems 
history information local search needs maintained explicitly 
update help escape trap 
placing extra penalties unsatisfied clauses inside trap unsatisfied clauses trapped large lagrange multipliers making unsatisfied 
strategy implicitly reduces probability visiting trap experiments 
dlm sat improved dlm sat outlines new dlm solving sat 
defines weight lagrange multiplier increases weights unsatisfied clauses time search reaches trap 
may lead undesirable balance situation clauses larger weights average 
cope problem ratio largest weight average larger predefined threshold increase lagrange multipliers clauses largest weight order force satisfaction 
increases large corresponding unsatisfied clauses unsatisfied resolving balance situation 
explain detail line dlm sat 
line carries straightforward reductions variable clauses 
variable clauses set value variable clause satisfied propagate assignment 
line generates random starting point fixed seed 
allows experiments repeatable 
line initializes temporary weight clause lagrange multiplier clause zero order experiments repeatable 
note increases faster larger 
line defines loop time maximum number flips runs satisfiable assignment 
line chooses variable reduce variables 
picks increase 
call flip hill move causes increase flat move selman kautz cohen change allow flat hill moves help trajectory escape traps 
lines locate trap increase ffi unsatisfied clauses trap 
line maintains queue problem dependent length tabu len par par hanoi 
line flips chosen false true vice versa 
records number times trajectory doing flat hill moves 
lines increase lagrange multipliers unsatisfied clauses ffi sum hill flat moves exceeds predefined threshold par par hanoi 
note ffi 
increasing lagrange multipliers unsatisfied clauses increase counter adjust 
lines reduce lagrange multipliers clauses ffi adjust reaches threshold par par appear aaai 
help change relative weights clauses may allow trajectory go region search space reduction 
line calls procedure special increase handle case clauses appear traps clauses 
line picks problem dependent set clauses par par set currently unsatisfied clauses set clauses 
lines compute ratio maximum weight average weight see ratio balance number clauses 
ratio larger par par hanoi increase lagrange multiplier clause largest weight ffi problems 
intuitively increasing lagrange multipliers unsatisfied clauses traps reduce chance traps 
illustrates point plotting number times clauses appear traps special increase 
compared see special increase controlled large imbalance number times clauses unsatisfied 
hanoi resp 
par maximum number times clause trapped reduced resp 
number flips 
note balance controlled parameters ffi smaller larger ffi better balance achieved 
better balance lead better solutions search may leave trap quickly smaller larger ffi missing solutions hard problems 
results sat max sat apply dlm sat solve hard satisfiable sat problems dimacs archive 
dlm sat solve quickly par par par par hanoi high success ratio 
problems solved single method literature 
solve hanoi simple high success ratio par par high success ratios 
problems solved local search method today 
simpler problems dimacs archive dlm sat similar performance best existing method developed past 
due space limitation details experiments 
table lists experimental results hard problems solved dlm sat experimental results walksat gsat 
lists cpu times current implementation pentium pro mhz linux computer number machine weight terms number times trap clause index avg max hanoi maximum theta average total number flips theta weight terms number times trap clause index avg max par maximum average total number flips theta reduced disparity maximum average numbers times clause traps 
dependent flips algorithm find feasible solution success ratios multiple randomly generated starting points columns success ratios sr cpu times walksat gsat 
problems tried algorithm random starting points 
hanoi hanoi simple tried starting points run took hours cpu time average complete 
note hanoi hanoi simple par problems harder problems par classes number flips larger 
table lists results applying dlm sat solve class problems solved shang wah 
number flips solving problems indicate easier problems par class 
far able find solutions satisfiable problems dimacs archive hanoi par par par par 
assignments hanoi par par unsatisfied clause 
results encouraging point view number unsatisfied clauses 
apply algorithm improve solutions max sat benchmark problems appear aaai table comparison performance dlm sat solving hard sat problems class problems shang wah solve 
experiments run pro computer linux 
walksat gsat experiments run sgi challenge processor model unknown 
na columns stands available problem succ 
cpu num 
walksat gsat id ratio sec 
flips sr sec 
par delta na na par delta na na par delta na na par delta na na par delta na na par na na par na na par na na par na na par na na na na na hanoi delta delta na na hanoi delta delta na na par delta na na par delta delta na na par delta delta na na results selman kautz cohen similar problems dimacs archive results selman solved shang wah 
recall weight clause goal maximize weighted sum satisfied clauses 
solving maxsat set initial values dlm sat clause ffi ffi ffi 
empirically set parameters able find optimal solutions max sat benchmark problems runs flips 
table presents results respect number successes randomly generated starting points average cpu seconds optimal solutions 
cases lead optimal solutions show third column average deviation optimal solutions 
column shows indices problems max sat benchmarks achieving results 
algorithm solves max sat better shang wah grasp average number successes slightly worse average mills tsang 
due fact algorithm originally designed solving sat max sat 
table performance dlm sat solving max sat dimacs benchmark problems shang wah 
problem solved sun ultra computer randomly generated starting points limit flips 
cpu sec 
average cpu time runs led optimal solution 
deviation optimal solution average deviation runs lead optimal solution 
cpu deviation list gamma 
benchmark succ 
sec 
opt 
problems achieving performance frank 
learning short term weights gsat 
proc 
th int joint conf 
ai 
glover 
tabu search part orsa computing 
luenberger 
linear nonlinear programming 
addison wesley publishing 
mills tsang 
solving max sat problem guided local search 
technical report csm university essex colchester uk 
morris 
breakout method escaping local minima 
proc 
th national conf 
artificial intelligence 
selman kautz cohen 
local search strategies satisfiability testing 
proc 
nd dimacs challenge workshop cliques coloring satisfiability rutgers university 
selman kautz cohen 
noise strategies improving local search 
proc 
th national conf 
artificial intelligence 
selman 
private 
shang wah 
discrete search solving max sat problems 
proc 
th int joint conf 
ai 
shang wah 
discrete lagrangian global search method solving satisfiability problems 
global optimization 
wu 
discrete lagrangian methods solving nonlinear constrained optimization problems 
urbana il sc 
thesis dept computer science univ illinois 
