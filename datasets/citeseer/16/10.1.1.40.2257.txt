appears proceedings ieee computer society conference computer vision pattern recognition pp 
june 
real time closed world tracking stephen intille james davis aaron bobick mit media laboratory ames street cambridge ma usa intille bobick media mit edu real time tracking algorithm uses contextual information described 
method capable simultaneously tracking multiple non rigid objects erratic movement object collisions common 
assumption adaptively select weight image features correspondence 
results algorithm testing method discussed 
algorithm track children interactive narrative 
video understanding tasks require observation tracking multiple rigid non rigid objects undergoing rapid unpredictable motion 
consider scenario year old children game bedroom foot space furnished child bedroom complete movable bed 
children run room objects furniture speak children actions 
suddenly room transforms images forest fade room walls 
children embark interactive adventure instructed observed room 
constructed imagination space called computer system tracks analyzes actions interactions people objects 
shows experimental setup viewed stationary color camera tracking objects 
people scene 
typical multi person interaction particularly people young children similar looking objects bump move rapid large body motions 
describe real time tracking algorithm uses contextual information simultaneously track multiple complex non rigid objects 
context mean knowledge objects tracked current relationships 
information adaptively weight image features correspondence 
algorithm designed 
goal detail generic problems solutions similarly complex tracking tasks 
previous approaches real time tracking systems track non rigid objects designed scenes containing single large objects person hand face tested domains independent multiple objects interact 
adaptive correlation template tracking methods energy deformable models typically assume template varies slowly smoothly templates don collide high resolution support data available 
discuss difficult separate tracking boundary estimation problem 
people tracking methods require accurate object boundary detection intensity optical flow difficult apply tracking task :10.1.1.16.1712
difficulty segmenting colliding children rapid changes appearance motion prevents differential motion estimators smooth planar motion models tracking techniques require reasonably stable edge computation 
motion difference blob size shape characteristics 
top view real time tracking algorithm 
people movable bed room 
fast simple clustering algorithm small background difference clusters merged larger nearby clusters marked bounding boxes 
tracking background blobs 
children small difference blobs merge frequently usually single feature object remains trackable seconds 
consequently believe low resolution nonrigid multiple object tracking real time domains requires contextual information change different features tracking contextual information 
systems context dynamic situations include fu shopper system active vision tracker rosin context tracking recognition surveillance system 
modify tracking approach uses context sensitive correlation templates tracking nonrigid objects real time application 
closed worlds strat demonstrated context dependent visual routines powerful tools image understanding complex static domains 
context way addressing knowledge selection problem dynamic multi object tracking 
consider context tracking problem boundary space knowledge boundary outside knowledge helpful solving tracking problem 
domain context region room away door contains children floor child reddish average color moving left child average color moving right 
way generate exploit contextual knowledge closed world assumption 
closed world region space time specific context region assumed known 
internal state closed world positions objects necessarily known 
visual routines tracking selected differently knowledge objects closed world 
closed worlds circumscribe knowledge relevant tracking instant reduce complexity tracking problem 
nagel mundy suggested closed world information useful building systems extract conceptual descriptions images image sequences 
robust tracking complex scene tracker understand context current situation know visual features object tracked frame frame features 
observations technique described called tracking 
line implementation adaptive correlation templates track small non rigid colliding objects players football field 
closed world contextual information select pixel features inclusion matching template method selecting pixels changes objects closed world 
remaining sections describe real time implementation closed world tracking 
closed world information adaptively weight different types image features single correspondence measure current context 
closed world assumption determine order different matching situations considered 
details real time closed world tracking algorithm differ described limitations introduced real time requirements differences imaging environment 
nature tracking systems similar 
describe algorithm detail problems encountered difficulties generic need addressed similar tracking tasks 
objects blobs closed worlds tracking algorithm uses data structures object world data structure stores object estimated size color velocity current past position 
information matching object frame blob new frame 
image blobs computed frame background differencing blob size color position recorded 
local closed world data structure exists blob stores objects assigned blob long 
objects touching mundy suggested closed world system assume simple explanation explanation consistent data consider complicated explanations 
nearly touching appear blob assigned closed world 
state closed world object assigned determines object properties re estimated current frame 
system uses knowledge global closed world stores information objects entire scene 
time step algorithm match objects frame blobs new frame object blob properties color position 
metric matching weighted sum individual feature distance measures local global closed world information frame set weights control matching strategy 
objects matched blobs object properties updated new blob information state new assigned 
algorithm uses global closed world information determine objects entered left scene 
algorithm iterates 
sections describe stage detail 
computing blobs recall room configured shown 
camera static reliable background image free people movable objects obtained 
due difficulty modeling rapidly moving people particularly small children background difference blobs primary visual representation 
background removed frame yuv background subtraction method similar method described uses color intensity intensity information 
method correctly removes shadowed regions 
practice resulting thresholded blob images noisy due camera noise objects broken apart regions colored background 
dilation operations performed fast bounding box merging algorithm cluster small groups blobs 
resulting blob image frame bounding boxes drawn clusters shown thresholded dilated image received background removal 
connected regions bounding boxes computed 
distance cluster surrounding clusters closest bounding box points determined 
clusters small distance pixels system clusters merged single cluster 
morphological growing connect merged pixels 
simply assigned cluster 
chaining process invoked current cluster continues growing nearby clusters considered inclusion clusters included 
process repeats clusters merged far clusters merge 
large diagonally oriented objects large bounding boxes 
large cluster replaced slower algorithm estimates smallest distance boundaries blobs 

blob size position average color computed clustering operation original dilated threshold image 
dilated image corrupt size color estimates blob contain background pixels 
unfortunately image sensitive color thresholds background differencing algorithm 
threshold balanced setting discriminate clothing background including background pixels difference blob 
matching objects blobs section describes image features matching features combined single match score matrix match score matrix determine object blob correspondence 
real time features properties computed object average color position velocity size compute matching distance measures 
due blob thresholding errors estimates noisy person moves room 
measure distance average color object blob 
average color reliable discriminator objects shadow pixels small percentage blob pixels blob color reestimated possible color normalized brightness 
frame rate hz higher average color change frames object blob small compared color difference objects 
second measure euclidean distance object position blob position new frame 
high frame rates objects normally close blob new frame 
third measure distance predicted position 
velocity estimated object current previous positions 
position object predicted new frame euclidean distance computed predicted position blob position new frame 
fourth measure size difference object current blob blobs new frame vary slowly high frame rates 
computing match score matrix distance measure match score matrix created entry ij match score object properties selected quickly computable 
line system augment information histogram algorithms image templates 

match best locally best matches closed region considered 
distance traveled feature object blob best match creates poor match 
blob simplify combination measures matrix normalized ij 
matrices weighted summed single matching score matrix ij single distance measure object frame blob new frame 
discussed shortly weighting depends local global closed world situation objects merging splitting entering room exiting room 
matching phases different weights step 
computing best match global closed world assumption object blob matches known objects simultaneously 
consider situation active matching measure closest distance 
illustrates scenario total number objects world known 
objects frame need matched blob objects frame 
considering distance measure clearly matches 
matching independently best match 
match distance remaining match possible large 
best match keeps distance best match low providing match rangarajan shah described non iterative greedy algorithm score matrix objects object blob matches 
algorithm find near optimal pairing objects avoiding individual assignments bad trying keep match cost small possible 
reader referred details algorithm 
tracking algorithm knows number objects scene rangarajan shah algorithm compute correspondence match score matrix discuss problem approach section 
test system objects compute best global match little additional cost domains objects greedy algorithm required 
enforcing hard constraints hard constraints prohibit match object blob flagging ij invalid 
constraints currently system maximum distance constraint size explanation constraint 
closed world context controls constraints applied stage matching process 
maximum distance constraint eliminates possibility match object new blob greater reasonable maximum distance 
object far blobs match considered 
system maximum distance set pixels third scene 
second hard constraint prohibit object blob matches inconsistent size information known objects assigned blob 
object size pixels matched blob pixels marked assigned 
correspondence algorithm proposes object match blob remaining unassigned blob pixels accommodate second object 
closed worlds closed rooms closed worlds ways 
global closed world determine order matching proceed order correctly maintain number objects closed room objects enter exit 
knowledge objects local closed worlds global closed world select combination weightings generate match score matrix determine matching constraints applied 
matching object local closed world determine object attributes size velocity re estimated held constant object matched new blob 
global closed world global closed world assumption requires tracking algorithm accurate count number objects entire scene 
domain room domains initialization performed automatically emptying space movable objects defining closed room way obtained real life adding door 
rule constraint set high object collides objects object position estimated center group 
large changes estimated position possible 
current implementation half pixel size object added 
inaccuracies size estimation caused shadows fully removed camera noise objects look similar background 
space people objects enter time door 
door represented small region image marked box bottom left corner 
objects permitted enter exit room door tracker initialized 
tracker maintain global closed world 
correspondence algorithm described section fact objects don appear thin air order matching reduce chance matching error 
match order feature weighting staged matching process ordered global closed world information minimize chance incorrect matches due objects entering leaving room 
main algorithm broken stages 
weightings create contextsensitive matching measure matrix set differently depending matching step 
example second step matching object blobs assigned blob matching step unmatched room objects tested occupied blobs big contain object 
context color matching feature known color average invalid comparing object blob contains multiple objects 
algorithm currently designed person door time simplifies vision 
imagine placing additional cameras room focus door perform special processing recognize comes 
current system correctly interpret person walking door object dropping object system explicitly told new person object 
space prevents including details weights adjusted step readers referred extended version 
briefly matching stages follows 
step known object unoccupied blob 
match objects known room frame unoccupied blobs new frame 
blobs door temporarily ignored 
perform reliable matching 
step room object occupied blob 
step door object door blob 
person object allowed door time unassigned object door blob door assign object door blob 
step room object door blob 
door blob explained assignment object door try explain matching object remaining room match room blobs 
step door object room blob 
case object door frame moved room object existed previously scene enter door 
step door blob object object 
objects assigned blobs step door blob exists explanation new object just came door 
new object created 
step door object door blob remove object 
stage object exists door blob match door room 
object left room door object removed 
step resort 
point algorithm able explain situation 
system try automatically handle error loosening constraints size best guess strategy 
step failure 
objects assigned blobs blobs objects assigned left algorithm best guess option simply signal error 
stages ordered exploit fact objects appear disappear thin air common common explanations 
updating object properties object assignment completed local determine object properties reliably updated blob particular context 
color estimation occurs object object closed world 
times average color corrupted objects 
objects assigned closed world object average color held constant 
color estimation resumes object isolated closed world 
strategy controls size estimation 
objects single object closed worlds object size reestimated current blob object multi object closed world size tag held constant 
object position updated frame regardless closed world status centroid object blob 
objects closed world frame position 
consequently objects split separate closed worlds distance measure affect matching objects distance candidate blobs 
velocity estimates error prone objects move multi object closed worlds single object visa versa 
velocity reestimated objects multi object closed worlds 
matching objects multi object just split multiple single closed worlds velocity measure prefer matches objects moving direction moving originally merged 
preference desirable objects merged short time probably just passing nearby longer objects objects changed velocity 
additional parameter stored object merged time amount time object multi object closed world 
weight velocity feature scaled merged time weight value falls gradually frames thresholded second 
position object multi object closed world centroid closed world far actual position create spurious velocity measurement object returns single closed world blob position suddenly shifts center single object 
merged time weight set exp sqr merged time cutoff zero frames 
tracking results real time tracking system takes video input color sony 
images pixels processed approximately hz single sgi indy mhz processor adult room hz adults room 
debugging testing performed recording multiple people vhs tape playing recorded data back real time tracking system classify interactions study errors 
typical situations evaluate algorithm recorded minutes test video people space 
people seen camera shown 
video contains people wearing colored rain 
people asked walk jog tracking space perform different types movement fool tracker isolated movement entry exits pass bys outs merge stops merge travels large group merges illegal activity 
algorithm running hz performance change run run single sequence depending frames happen 
test sequence evaluated twice 
table shows number type situation observed regular data test data number times tracker mislabeled tracked objects type situation 
performance algorithm best performance predictably single object tracking collisions objects 
cases method adaptive feature weighting strategy usually leads correct match objects similar looking clothing different shades blue making large body motions moving rapidly room 
algorithm reliably maintain number objects space objects enter exit limit number people tracked performance suffers thenumber pixels 
isolated movement basic tracking situation individual moving space isolated individuals 
entry exits person enters leaves space door 
pass bys individuals move near close merge walk run past 
outs special test action individuals stand apart rapidly lean merge split 
merge stops people walk merge seconds splitting 
merge people merge walk room close split 
large group people merging splitting 
illegal activity person enters leaves room space going door drops unknown object walks away 
tuned loses object may swap object labels tested extensively children system 
surprisingly algorithm generally performs better objects tracked distinctive color features colored 
color features weak objects merge large group matching performance suffers 
limitations analysis system matching errors revealed unanticipated limitations real time closed world architecture issues common generic tracking tasks 
system overly reliant blob data 
main problems blob representation regardless color difference thresholds set blobs perfectly segment objects errors blob computation propagate feature matching multi object blobs provide little meaningful information matching re estimation object properties 
solution processing power available may features computed independently blob regions correlation templates partition merged blobs possible see 
second related architectural limitation algorithm mechanism handling slow variation image features objects merged large 
algorithm designed adapt frame slowly varying matching features 
merge object single object closed world color velocity size measurements updated 
consequently objects merge travel matching errors objects change appearance see merge travels table 
objects merge don travel object move limbs change significantly size corrupt subsequent matching 
third architectural issue match evaluation 
algorithm uses rangarajan shah greedy correspondence algorithm avoid bad global matches making individual matches strategy leads bad matches pass errors 
instance tracker correct best scoring match object blob depends matches object problem may just multi object blob may matching multi object blob possible matches may mediocre scores 
match change depending lowest value match scores poor small difference provides useful information 
consequently match best match score isolated entry merge merge large group illegal movement exits pass bys outs stops travels merges activity examples errors run errors run examples regular regular errors run regular errors run table 
table shows number type tracking situation appears test sequence people tracked 
events classified manually 
test number times tracker error indicated 
matching measure distance color size velocity matches equally poor may match incorrectly 
short bad isn terrible algorithm needs non linear context sensitive cutoffs distinguish 
scene contains merged objects chance error increase objects may mediocre terrible match possibilities lead algorithm ignoring best match 
fourth object properties multi stable depend object assignment blobs 
example objects assigned blob position blob merges position objects pixels apart 
similarly color unstable depending number objects closed world 
fifth architectural problem system forced binding matching decision frame 
mechanism detecting questionable match looking match evidence frames making final decision 
different match possibilities similar evaluation scores noise unusual merge configurations lead spurious matches corrected frames considered 
architectural limitations system sensitive thresholds size constraint background differencing thresholds situations multi object merges 
unfortunately threshold setting problems 
significantly improving algorithm probably requires changing architecture address problems described 
summary closed world regions perform context tracking real ime domain object motions smooth small rigid multiple objects interacting 
tracking system interactive narrative children prove useful overhead tracking domains observation city street intersections sporting events pedestrian malls parking lots 
baumberg hogg :10.1.1.16.1712
learning flexible models image sequences 
proc 
european conf 
comp 
vis volume pages stockholm sweden may 
blake curwen zisserman 
affine invariant contour tracking automatic control spatiotemporal scale 
proc 
int 
conf 
comp 
vis pages berlin germany may 
blostein huang 
detecting small moving objects image sequences sequential hypothesis testing 
ieee trans 
signal proc 
bobick intille davis baird campbell ivanov pinhanez schutte wilson 
perceptually interactive immersive story environment 
media laboratory perceptual computing section media laboratory perceptual computing section november 
revised september see vismod www media mit edu vismod demos 
fu hammond swain 
vision navigation man environments looking syrup right places 
proc 

visual behaviors pages seattle june 
hager toyama 
xvision system general purpose substrate portable real time vision applications 
comp 
vis graph img 
proc 
appear 
huttenlocher noh rucklidge 
tracking non rigid objects complex scenes 
proc 
int 
conf 
comp 
vis pages berlin germany may 
intille bobick 
closed world tracking 
proc 
int 
conf 
comp 
vis pages june 
intille davis bobick 
real time closed world tracking 
mit media lab perceptual computing group technical report mit nov 
mundy 
draft document morse 
technical report general electric research development center feb 

nagel 

image vision comp 
polana nelson 
low level recognition human motion 
proc 

non rigid motion pages nov 
swain kahn 
task environment sensitive tracking 
proc 

visual behaviors pages seattle june 
rangarajan shah 
establishing motion correspondence 
comp 
vis graph img 
proc 
rosin ellis 
detecting classifying intruders image sequences 
proc 
british mach vis 
conf pages sep 
strat fischler 
context vision recognizing objects information imagery 
ieee trans 
patt 
analy 
mach 
intell 
christopher wren ali azarbayejani trevor darrell alex pentland 
pfinder real time tracking human body 
ieee trans 
patt 
analy 
mach 
intell 
