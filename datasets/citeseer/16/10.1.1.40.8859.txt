achieving balanced low cost architecture mass storage management multiple fast ethernet channels beowulf parallel workstation thomas sterling donald becker center excellence space data information sciences code nasa goddard space flight center md gsfc nasa gov daniel savarese department computer science university maryland college park md dfs cs umd edu michael berry department electrical engineering computer science george washington university washington seas edu chance center excellence space data information sciences code nasa goddard space flight center md gsfc nasa gov network workstations seek leverage commercial workstation technology produce high performance computing systems costs appreciably lower parallel computers specifically designed purpose 
capabilities technologies emerging pc commodity mass market rapidly evolving converge workstations significantly lower cost 
new operating point price performance design space parallel system architecture may derived parallelism pc subsystems 
pile pcs pronounced pop see approach explored beowulf parallel workstation developed provide order magnitude increases disk capacity bandwidth single user environment costs commensurate conventional high workstations 
explores critical aspect architecture trade space beowulf associated balance parallel disk throughput internal network bandwidth 
findings demonstrate parallel channels commodity mbps ethernet necessary sufficient support data rates multiple concurrent file transfers sixteen processor beowulf parallel workstation 
beowulf parallel workstation integrates shelf commodity subsystems create new operating point price performance single user scientific workstation environments 
beowulf capabilities include peak performance half gbyte main memory disk storage capacity gbytes achieved cost conventional high scientific workstation 
capabilities accomplished parallel configuration multiple processor subsystems disks interconnection networks commodity components derived pc marketplace 
challenge define structures components provide balanced ensemble resources support user needs 
looks specific problem balancing parallel disk capacity file transfer bandwidth message passing bandwidth system internal interconnect network 
achieve high intra system interconnect bandwidth beowulf project pioneered multiple commodity networks single workstation 
shown network bandwidth scaled parallel ethernet networks mbps achieve useful sustained throughput gain 
example dual ethernets delivered sustained bandwidth mbytes second favorable conditions packet size 
achieved user transparent manner changes operating system 
beowulf employs linux operating system features comes source code ideal class research 
modifications linux support channel bonding allowing message packets available networks 
multiple networks channel bonding shown dual parallel mbps ethernet impose bottleneck disk file transfers unfavorable conditions 
experiment revealed discrepancy factor respect disk throughput demand 
approaches pursued beowulf project 
approach alters topology interconnection segment busses segments moderate cost switches 
results experiments separate 
second approach exploit advances mbps ethernet referred fast ethernet 
months technology reached commodity market price level commensurate objectives beowulf workstation project 
early analysis showed network marginal dual fast ethernets able provide sufficient useful bandwidth remove internal interconnect limiting factor transferring files remote processor subsystems 
new realm system architecture created opportunities implied emerging low cost processor network technology base 
pile pcs approach enables site configuration essentially interchangeable components easily locally multiple vendors distributors 
flexibility configuration permits user match needs specific immediate workload requirements adapt resources requirements evolve 
experimental possible linux operating system 
linux provided sophisticated robust system software platform source code availability essentially legal constraints 
perspective unique tool systems research catalyst beowulf experiment 
presents published results experiments conducted evaluate multiple fast ethernet channels interconnection medium parallel workstation 
empirical means new form communication characterized 
shown capacity fully utilized single processor software limitations 
demonstrated multiple processor subsystems single channel concurrently exploit available capacity precisely mode required beowulf approach 
single source mode achievable bandwidth shown exceed sustainable disk file transfer rates 
quantitative data provided demonstrates balanced architecture mass storage management fast ethernet technology channel bonding techniques employed beowulf 
beowulf architecture characteristics beowulf parallel workstation architecture comprises processor nodes interconnected multiple parallel ethernet channels includes keyboard dual high resolution screens 
processor node combines intel processor memory disk storage network interfaces 
initial beowulf prototype previously described intel dx mhz processor connected local bus mbytes memory single mbytes ide disk drives 
dual mbps ethernet channels provided system connectivity 
entire system housed single half height rack shown 
beowulf philosophy provide general structure may track rapid evolution commodity technology providing capability growth minimizing need changes underlying software 
approach followed implementation completed beowulf demonstration system 
new system retains general beowulf architecture described incorporates new components incremental enhancements making prototype 
beowulf demonstration system processor new pentium mhz connected pci bus mbytes main memory gbytes disk 
shown important difference beowulf parallel workstation prototype demonstration systems employs new fast ethernet technology available commodity market 
network technology peak performance mbps times regular ethernet prototype system 
substantially expensive regular ethernet improved bandwidth required achieve balanced system architecture demonstrated 
major objective beowulf provide rapid access disk storage 
elements beowulf architecture impact movement spinning pixels beowulf primary uses scientific data visualization rate data moves disk memory rate data moves memories separate processor subsystems 
beowulf prototype target empirical studies characterize principal attributes 
primary importance sustainable performance achieved multiple ethernets parallel 
ability gang ethernet channels key factor enhancing interprocessor communication low cost technology 
determine scaling properties parallel ethernets mbps set experiments conducted essential findings captured figures 
results experiments new beowulf demonstration system figures 
experimental method results sets experiments discussed sections implications distributed computing section 
experimental results key elements beowulf parallel workstation design critical performance characteristics system 
factors sustained usable bandwidth network raw throughput disks 
experiments devised measure efficiency network disks original beowulf prototype repeated beowulf demonstration system 
results prototype system figures beowulf prototype network throughput beowulf prototype file transfers channels total local remote files demonstration system figures 
network bandwidth done artificial network traffic ultimately intended maximally load system generated approximate sustained usable bandwidth network 
basic unit generating network load consisted pair processes exchanging fixed size token message arbitrary number times chose exchanges took sufficient time minimize timing error 
token exchanges performed linux implementation bsd sockets send receive system calls tcp ip 
process send token partner partner receive store buffer immediately send buffer back 
maximize throughput sockets token exchange nonblocking linux implementation posix system call 
process pair assigned different processor traffic generating process assigned processor 
network traffic increased ways 
increasing size tokens exchanged second beowulf demonstration network throughput beowulf demonstration file transfers channels total local remote files increasing number traffic generating processes increasing number tokens 
time experiment performed processors concurrent tokens employed 
results experiment performed beowulf demonstration system shown 
data taken demonstration system mbps network active channel mode represented solid lines mbps networks active channel mode represented double dashed lines 
number tokens varied token sizes varied 
seen prototype system utilizing mbps ethernet see maximal network utilization occurred larger token sizes 
appears variation number tokens exchanged 
maximum throughput achieved channel mode mb mb peak fast ethernet 
channel mode maximum throughput mb theoretical mb peak dual channels higher peak single mbps net 
parallel disk designed artificial test determine approximate disk bandwidth beowulf prototype limiting factors remote interprocessor file accesses 
results experiment originally run beowulf prototype shown demonstration system results shown 
experiment measured throughput simultaneous file transfers mix intra processor interprocessor copies range file sizes 
simultaneous file transfers performed 
file transfer remote local 
local file transfer involved processor copy file local disk file local disk 
remote file transfer involved processors 
processor run process reading file local disk writing network processor running process reading data network writing local disk 
processor involved file transfer avoiding local disk contention 
problem arises conducting experiment type linux operating system automatically caches files accessed attempt reduce cost accesses 
ensure file transfers involved uncached files copied dummy mb file prior run 
local file transfers performed linux implementation posix read write system calls remote file transfers additionally tcp ip transferring files network 
shows results running experiment channel mode file sizes ranging mb varying remote file copies local copies remote copies 
expect file transfer rate mb largest achieved occurred file transfers local 
smallest transfer rate achieved mb prototype system see network clearly constrained disk throughput 
longer case 
number remote file transfers increase curves longer converge maximum sustained network performance 
remain flat degrading additional remote file transfer seen beowulf prototype mbps ethernet 
discussion preceding experiments demonstrate qualitatively distinct operational behaviors beowulf system mbps ethernet new fast ethernet technology 
system characterized parallel disk bandwidth significantly exceeds interprocessor communications bandwidth 
network imposes bottleneck system 
second system provides sufficient interprocessor bandwidth match demands disk throughput tested 
key qualitative distinction fast ethernet beowulf balanced architecture predecessor unbalanced 
previously shown mbps ethernet channels parallel provide increased bandwidth 
packet go faster aggregate communications bandwidth supporting multiple concurrent traffic sources effectively increased 
showed favorable conditions bandwidth gain channels respect reach 
new finding fast ethernet channels scale comparably 
demonstrates fast ethernet achieve gain bandwidth channels essentially mbps case 
terms utilization slower channels superior achieving peak compared fast ethernet peak single channel 
ratio peak performance fast ethernet versus regular ethernet ratio respective sustained throughputs factor respectable enhancement 
fair current port cost fast ethernet compared regular ethernet factor direct price performance advantage considering just networks 
performance cost gain occurs network capability related file transfer traffic created parallel disk array 
previously discussed clearly demonstrates bandwidth bottleneck caused limitations mbps ethernet 
disk traffic forced go processors total sustained file transfer bandwidth throttled capable supported network mbytes second 
degradation greater factor best concurrent local disk file transfer rate 
noted higher aggregate local file transfer bandwidth achieved done actual experiment 
hold traffic demand constant time avoid processing node contention processor role producer consumer file 
operational behavior fast ethernet system better prototype system performs new regime achieves balance demands parallel disk array throughput capacity interprocessor communications support concurrent remote file transfers 
shows sustained throughput system concurrent file transfers range entirely local entirely remote 
corresponding curves beowulf prototype drop dramatically file copies exclusively remote constrained mbps ethernets fast ethernet system experiences small degradation system file transfer throughput 
loss factor throughput degrades range tests 
comparative behavior best represented 
curves figures single case mbyte file transfers repeated expose differences mbps mbps ethernet channels 
file copies respective local disks significant file transfer throughput gain achieved 
networks entirely consequence processing node 
improved processor architecture pentium versus superior properties pci bus respect local bus combine provide performance gain 
relative gain increases file copies beowulf disk bandwidth comparison channels total local remote files remote system cost increase fast ethernet channels 
fundamental contribution new balanced operating point distributed computing systems identified evaluated direct implications real world computing 
shown cost constraints scientific workstations systems implemented incorporate close order magnitude greater mass storage capacity data access bandwidth conventional workstations 
achievement enabled exploitation pc mass market commodity computing subsystems parallel structure demonstrated series experiments conducted beowulf parallel workstation 
seminal finding implied results sustained data transfer rates possible way parallel disk array supported parallel combination dual mbps ethernet channels 
beowulf testbed shown configuration necessary sufficient achieve interprocessor communications rates comparable disk array 
application rapidly emerging fast ethernet technology scientific workstations type feasible time 
implications real world computing significant specific environments substantial benefits achieved little additional cost 
realm scientific computing large data sets manipulated explored visualized 
working set size may easily exceed capacity conventional scientific workstations require repeated access shared file servers common local area networks 
reason repeated access ordinarily entire data set maintained conventional workstation data usually requires repeated examinations 
new capability provided beowulf stage large working sets entirely workstation single access required remote file server data set resides 
impact user faster response time approaching order magnitude cases permitting innovative ways working research data 
global system means significantly reduced burden shared resources reducing contention improving response time 
remains open question software support systems beowulf 
distributed computing systems pvm mpi message passing applications programming condor job stream scheduling brought beowulf 
management parallel disk arrays especially applications programmer perspective continues challenge topic active research number groups country 
beowulf project evaluating experimental packages 
findings reported accurately characterize capabilities beowulf architecture represent programming interface transparent user 
currently low level techniques opportunity superior mass storage single user context available 
improved software tools potential distributed disk arrays workstation environment lost 
wu parallel workload characteristics vesta proceedings rd annual workshop input output parallel distributed systems april pp 

boggs mogul kent measured capacity ethernet myths reality wrl research report western research laboratory september 
kotz dynamic file access characteristics production parallel scientific workload supercomputing november pp 

linux documentation project accessible internet world wide web url sunsite unc edu linux html 
anderson pci system architecture richardson tx 
sterling becker savarese beowulf parallel workstation scientific computation proceedings international conference parallel processing icpp august vol 
pp 

sterling savarese becker olson communication overhead space science applications beowulf parallel workstation proceedings fourth ieee symposium high performance distributed computing hpdc august pp 

