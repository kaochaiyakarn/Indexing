fast accurate robust method self localization polygonal environments laser range finders jens steffen gutmann bernhard nebel albert universitat freiburg institut fur informatik am freiburg germany informatik uni freiburg de january self localization important robotic tasks 
playing aesthetic effective game robotic soccer self localization necessary prerequisite 
designed robotic soccer team participating robotic soccer competitions turned existing approaches meet requirements fast accurate robust 
reason developed new method analyzed 
method key components probably explanations success team national international competitions 
experimental evidence method outperforms self localization methods robocup environment 
robotic soccer interesting scientific challenge ideal domain testing new ideas demonstrating existing techniques 
main intentions participating robotic soccer competitions demonstrate usefulness techniques developed 
turned existing self localization techniques efficient dynamic environment robotic soccer 
furthermore techniques robust 
reason developed new technique exploits particular characteristic robocup environment purely polygonal structure 
able come fast accurate robust self localization technique probably key factors success team cs freiburg 
team won german competitions vision robocup vision robocup 
addition team world champion robocup came third place robocup 
solving self localization problem problem determining position orientation robot necessary tasks 
robotic soccer impossible play effective aesthetic game soccer agents know oriented 
matter fact problems displayed games middle size league robocup fact soccer robots wrong idea positions led erratic movements number goals 
self localization problem addressed wide range sensors odometry sonars vision laser range finders sensors combinations thereof wide range methods 
sequel consider combination data odometry laser range finders provide accurate reliable data interpreted computational effort say data vision system 
self localization recognizing known landmarks dense sensor matching 
approach features extracted sensor inputs matched features landmarks order determine locations landmarks 
robocup environment natural landmarks visible sensors reason consider approach 
second approach sensor inputs matched expected sensor inputs model 
competing methods dense sensor matching grid markov localization kalman filtering scan matching 
demonstrated markov localization robust generates position hypotheses recover catastrophic failures 
self localization kalman filtering scan matching accurate rely grids 
robotic soccer need robustness accuracy efficiency property means want estimate position orientation milliseconds 
unfortunately approaches described satisfies requirements 
reason designed new scan matching approach extracts features raw sensor inputs straight lines matched priori model 
scan match computed efficiently new position estimation derived combining odometry reading kalman filtering 
rest structured follows 
section sketches scan matching methods estimate position kalman filtering 
section describes method gives analysis run time complexity 
describe section experiments order compare different scan matching methods robocup environment 
section conclude sketch 
scan matching scan matching process translating rotating range scan obtained range device laser range finder way maximum overlap sensor readings priori map emerges 
scan matching methods presume initial pose estimation close true pose order limit search space 
robot pose update scan matching modeled single gaussian distributions 
advantage robot poses calculated high precision efficient method computing update step kalman filtering 
extended kalman filter method form 
probability robot pose modeled gaussian distribution sigma ff mean value sigma theta covariance matrix 
robot motion ffi sigma robot moves forward certain distance ffi rotates pose updated ffi cos ff ffi sin ff ff sigma rf sigma rf rf sigma rf denotes expected value function rf rf jacobians respect scan matching pose update sigma obtained robot pose updated standard kalman filter equations sigma gamma sigma gamma gamma delta sigma gamma sigma gamma sigma sigma gamma sigma gamma gamma success kalman filter depends heavily ability scan matching correct robot pose 
number methods matching scans cox matches sensor readings line segments hand crafted cad map environment 
assigns scan points line segments closest neighborhood searches translation rotation minimizes total squared distance scan points target lines 
weiss histograms matching pair scans 
compute called angle histogram determining rotation scans histograms computing translation 
method suited robocup environment computationally expensive precision algorithm depends discretization size histograms 
lu milios match pairs scans assigning points scan points scan 
finding corresponding scan point heuristics called rule matching range rule applied combination computing rotation translation scans 
idc algorithm iterative dual correspondence suited type environment including non polygonal ones 
gutmann schlegel combination cox matching approach idc method combining efficiency robustness line matching method universal capabilities idc algorithm 
call algorithm combined scan matcher csm 
unfortunately matching algorithms possess high computational complexity number scan points robustness limited due small search space 
developed new algorithm linematch simple polygonal structure robocup environment trades generality speed ability globally localize robot soccer field 
approach linematch algorithm extracts line segments scan matches priori map line segments similar methods 
expect algorithm better run time performance robust scan matchers retaining accuracy matchers 
far expectations realistic shown section 
linematch algorithm order guarantee extracted lines really correspond field border lines scan lines significantly longer extend soccer robots considered 
algorithm shows matching model lines scan lines computed recursively trying pairings scan lines model lines algorithm linematch input model lines scan lines pairs output set positions hypotheses jp jsj return selects scan line matched verifies new pairing compatible set pairings accepted computing common rotation translation 
algorithm returns position hypotheses form sets pairs easily transformed possible locations scan taken 
robocup field algorithm capable determining global position robot modulo symmetry field 
means get position hypotheses field borders visible see hypotheses borders visible 
position hypotheses robocup field model robot scan extracted line segments fig 

linematch algorithm returns hypotheses robot position 
scan matching method similar methods described castellanos shaffer 
contrast approaches verify global constraints concerning translation rotation length restrictions scan lines satisfied 
sufficient determining position hypothesis efficient 
need initial estimation pose means robot extreme error position estimation may able recover 
matching range scan plausible position kalman filter step updating robot position see 
position information odometry determine plausible position combination closest neighborhood similarity heading 
initializing self localization system robot placed position robocup field roughly oriented opponent goal mean error covariance robot position set sigma ensures global self localization scan match 
scan matching check plausibility kalman filter plausible position set position hypotheses scan laser odometry position self localization module robocup field model robot fig 

self localization plausible hypothesis updating robot position 
turns implemented algorithm extremely fast robocup environment see section may wonder scales size set rough analysis suggests worst case runtime algorithm jm jsj depth recursion jsj recursive call linematch jm different pairings tried 
turns possible come better run time estimation 
second level recursion pairings degrees freedom rotation translation removed implemented way chooses non parallel lines levels recursion 
means deeper levels recursion pairing consistent leads invoking recursive call linematch 
means may get jm possible pairings levels recursion verified recursive calls trying jm different pairings 
needs jsj time get bound jm jsj 
possible ways optimize algorithm general case live cubic upper bound 
realistic environments walls visible simultaneously case office environments preprocessing reduce complexity 
preprocessing phase store line lines simultaneously visible 
typical office environment shown 
demonstrated particular wall dashed thick line walls simultaneously visible solid thick lines 
obviously generalizes walls 
fig 

preprocessing walls solid thick lines simultaneously visible particular wall dashed thick lines 
data structure amount lines tested dramatically reduced assuming constant upper bound simultaneously visible walls get linear complexity algorithm 
comparison scan matchers order show advantages linematch algorithm compared cox csm linematch techniques 
include idc histogram matching methods properties algorithms covered csm algorithm 
csm algorithm needs set scans priori map collected small set scans corrected accumulated odometry error applying registration method scans 
approach proven successful easy way enabling mobile robot navigation indoor environment modifying environment creating hand crafted maps 
comparing different methods recorded real data mobile robotic soccer players see 
soccer robots pioneer mobile robot equipped sick laser range finder vision system ball tracking ct laptop wireless ethernet connection custom kicking device 
laser range finder covers ffi field view angular resolution ffi range resolution cm 
order record data realistic game scenario ran soccer robot robocup environment stationary moving obstacles 
data computed average run time different algorithms added different kinds fig 

cs freiburg robotic soccer players 
noise data determining accuracy robustness methods 
similar reported shaffer compare scan matching methods similar cox linematch algorithm 
single scan matches experiments experiments data recorded robot run taken account 
ran algorithms static environment recorded data realistic dynamic scenario stationary moving obstacles block robot sensors 
results give better picture methods dynamic environment robocup 
noise models kinds noise typically observed robots operate real world environments 
hand typical gaussian noise odometry proximity sensors coming inherent inaccuracy sensors 
hand non gaussian errors arising robot colliding obstacles robot players interference sensors 
odometry errors coming wheel slippage uneven floors different payloads characterized parameters see left part 
delta ff ffi ff delta ff ff ff ffi delta ffi ffi fig 

effect adding noise delta ffi ffi delta ff ff delta ff ffi left bump noise hx ffi right odometry 
range noise error delta ffi ffi range robot moves certain distance ffi 
rotation noise error delta ff ff delta ff ffi rotation robot turns certain angle ff moves certain distance ffi 
source frequent larger odometry error coming situations robot collides obstacles 
abrupt errors characterized parameters see right part 
error odometry error ff added odometry information 
frequency probability bump occurs robot travels meter 
experiments described probability set meter traveled 
run time performance computing run time performance scan matching techniques measured average time method needed computing pose update fused odometry estimate 
order receive measurements show performance real game conditions setup realistic game scenario robocup environment stationary moving objects see soccer robot right defender moved entire field couple times 
run robot moved total distance approximately meters turned total degrees revolutions collected scans 
shows run time results performed robots board computer pentium mhz laptop running linux operating system 
expected linematch algorithm outperforms competing techniques 
times faster cox algorithm times faster csm method 
low average runtime ms scan match allows processing incoming range finder data real time 
fig 

experimental setup boxes placed robocup field give realistic game scenario 
noisy sensor readings caused moving obstacles 
cox csm linematch ms ms ms fig 

run time results pentium mhz laptop 
performance typical game scenario showing accuracy robustness linematch algorithm data collected run added different kinds noise odometry information 
order measure accuracy position estimates generated different matching methods set positions needed 
ease determination positions run scan matching algorithms cox method recorded data output set positions 
set noise values runs different seed values initializing random noise generator performed 
shows trajectory measured robots wheel encoders typical trajectory adding maximum gaussian noise 
values correspond standard deviation gaussian noise delta ffi ffi delta ff ff delta ff ffi units mm deg ffi deg scan matching method computed number times robot position lost distance heading error pose case position lost 
threshold distance ffi heading error determining position robot lost 
shows average distance average heading error positions different levels gaussian noise 
value triples axis correspond standard deviation gaussian noise delta ffi ffi delta ff ff delta ff ffi noisy data odometry information fig 

trajectory measured robot typical trajectory obtained adding large gaussian noise standard deviations data 
figures error bars indicate confidence interval average mean 
distance error mm noise cox csm linematch fig 

distance error positions typical game scenario different levels gaussian noise 
figures seen methods similar accuracy usually better cm ffi cox method significant higher accuracy gaussian noise due fact heading error deg noise cox csm linematch fig 

heading error positions typical game scenario different levels gaussian noise 
positions generated cox method 
linematch method robust matching algorithms 
shows number times robot position lost levels gaussian noise previous figures 
linematch algorithm shows performance keeps robot localized high odometry noise 
maximum level noise linematch starts loosing position 
believe higher robustness linematch due larger search space uses finding matches 
manner investigated methods compare simulated bump noise 
accuracy results similar case gaussian noise 
methods similar accuracy distance heading error gaussian case 
shows average number positions robot lost bump noise added odometry information 
triples axis correspond bump noise values hx ffi experiment 
scale values mm degrees ff 
addition bumps occurring probability meter applied small gaussian odometry error parameters 
seen scan matching approaches problems bump noise 
due fact gaussian distribution assumption fusing observations odometry kalman filter model bump noise 
linematch method shows failures methods robust ones 
lost positions noise cox csm linematch fig 

number times position error ffi typical game scenario different levels gaussian noise 
lost positions noise cox csm linematch fig 

number times position error ffi typical game scenario different levels bump noise 
performance confusing game scenario evaluated performance different scan matching algorithms confusing game scenario long wall placed inside robocup field 
shows data collected experiment 
fig 

confusing game scenario long wall formed boxes inside robocup field linematch algorithm 
expect conditions linematch algorithm gets long wall filtered preprocessing step linematch produces wrong matches relies dead reckoning position estimation 
confusing scenario quite occur happen opponent team tries placing robots straight row producing surface laser range finders 
luckily linematch algorithm didn suffer conditions 
suspect due fact lot situations irritating wall range scans limited range field view laser ranger finder 
robot able linematch algorithm update position irritating wall range data re localizes wall vanishes data 
accuracy similar results previous runs recorded 
robustness linematch dropped similar cox csm matching methods 
shows number lost positions adding gaussian noise odometry information 
methods show similar robustness 
shows number times robot lost adding bump noise odometry information 
linematch robust due larger search space methods 
new method matching range scans priori model line segments suited localizing mobile robot dynamic environment robocup 
similar feature matching methods proposed shaffer castellanos 
results lost positions noise cox csm linematch fig 

number times position error ffi confusing game scenario different levels gaussian noise 
lost positions noise cox csm linematch fig 

number times position error ffi confusing game scenario different levels bump noise 
computational complexity reported far able globally localize robot experimental results properties methods 
furthermore unclear algorithms perform dynamic environments robocup obstacles block sensors experiments conditions carried far 
analytical results show method feasible small polygonal environments extended larger environments preprocessing step included 
experimental results demonstrate method faster robust existing scan matchers retaining accuracy competing methods 
scan matching method developed key components cs freiburg robotic soccer team proven fast reliable precise robust 
failed official official game led team success various competitions middle size league 
won german vision robocup won world championship robocup paris came third place robocup stockholm 
method utilized robocup far obvious step polygonal shaped environments localization method navigation system office environments 
extend algorithm various ways allow partial matches lines range scan matched model lines explore ways optimize algorithm order deal larger environments 
going explore problem cooperative self localization robocup environment allowing disoriented group members 
asada kitano editors 
robocup robot soccer world cup ii 
springerverlag berlin heidelberg new york 
burgard fox cremers 
integrating global position estimation position tracking mobile robots dynamic markov localization approach 
proc 
international conference intelligent robots systems iros 
burgard fox schmidt 
estimating absolute position mobile robot position probability grids 
proceedings th national conference american association artificial intelligence aaai pages 
mit press july 
castellanos tardos 
constraint mobile robot localization 
international workshop advanced robotics intelligent machines 
university apr 
cox 
experiment guidance navigation autonomous robot vehicle 
ieee transactions robotics automation 

gutmann burgard fox konolige 
experimental comparison localization methods 
proceedings international conference intelligent robots systems iros 
ieee rsj 

gutmann herrmann nebel topor 
cs freiburg robotic soccer team reliable self localization multirobot sensor integration basic soccer skills 
asada kitano pages 

gutmann nebel 
navigation mit 
levi oswald editors mobile system informatik pages stuttgart germany 
springer verlag 

gutmann schlegel 
amos comparison scan matching approaches indoor environments 
proceedings st euromicro workshop advanced mobile robots pages 
ieee 
kitano editor 
robocup robot soccer world cup volume lecture notes artificial intelligence 
springer verlag berlin heidelberg new york 
kitano asada kuniyoshi noda osawa matsubara 
robocup challenge problem ai 
ai magazine 
lu milios 
robot pose estimation unknown environments matching range scans 
journal intelligent robotic systems 
lu milios 
globally consistent range scan alignment environment mapping 
autonomous robots 
maybeck 
kalman filter concepts 
cox wilfong editors autonomous robot vehicles 
springer verlag berlin heidelberg new york 
nebel 
gutmann 
cs freiburg team 
veloso 
shaffer gonzalez stentz 
comparison range estimators mobile robot 
spie conf 
mobile robots vii volume pages 
shaffer position estimator underground mine equipment 
ieee transactions industry applications volume september 
veloso kitano editors 
robocup robot soccer world cup iii 
springer verlag berlin heidelberg new york 
wei von 
map geometric interpretation 
kanade editors intelligent autonomous systems ias pages 
ios press 

