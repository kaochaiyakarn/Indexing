discrete mathematics theoretical computer science finely homogeneous computations free lie algebras philippe universit de des sciences laboratoire informatique de mont saint dex france mail dir univ fr give fast algorithm compute maximal lyndon word respect lexicographic order ly give algorithm compute words living ly best known method generating lyndon words duval gives way go lyndon word length successor respect lexicographic order length space worst case time complexity 
give simple algorithm uses duval method compute standard bracketing lyndon word lexicographic order length 
find interesting application algorithm control theory wants compute command lie algebra dynamical system letters vector fields 
keywords lie algebras finely homogeneous computations fa set elements associative non commutative algebra defining lie bracket xy yx module turns lie algebra denote lie subalgebra generated free lie algebra enveloping algebra 
called alphabet elements letters anda free monoid set words know graded module ln ln submodule generated homogeneous components degree furthermore ln direct sum finely homogeneous submodules chapman hall philippe classical monomial basis finely homogeneous see reutenauer example viennot components finely homogeneous lie monomials computation lie polynomials elements computation fine homogeneity class 
want emphasize particular basis lyndon basis introduced chen late interested reader find details construction 
purpose choose total order induces lexicographic order lyndon word primitive minimal class 
means written vu uv set lyndon words lyndon word define right standard factorization unique couple lyndon words maximal length 
recursive lie bracketing standard factorization called right standard bracketing denoted 
convenient define left standard factorization unique couple lyndon words uv maximal length 
recursive lie bracketing left standard factorization called left standard bracketing denoted 
note included ly letter exemple fa bg primitive proper suffix standard bracketings known ly factorization ly basis called lyndon basis 
organized follows 
give fast algorithm compute maximal lyndon word respect lexicographic order ly nk see letters lyndon word maximal fine homogeneity class regularly distributed possible 
second part give algorithm compute words living ly nk best known method generating lyndon words duval gives way go lyndon word length successor respect lexicographic order length space worst case time complexity 
easy see special case fa bg ba lyndon words length successor fine homogeneity class ba 
method exponential worst case time complexity purpose 
give simple algorithm uses duval method compute standard bracketing lyndon word lexicographic order length 
find interesting application algorithm control theory wants compute command lie algebra dynamical system letters vector fields 
standard bracketing expansive compute context want generate quickly possible lexicographic order length 
finely homogeneous computations free lie algebras maximal finely homogeneous lyndon words question find description maximal finely homogeneous lyndon word respect lexicographic order merely denote confusion possible 
answering question give short description problem background 
lyndon word fine homogeneity course lyndon word appearing reciprocal may may true 
led algorithmic answer question fa bg time finite alphabet 
just fun know reciprocal true able find lot counter examples help computers supp ly example words ly fa bg verify equation 
binary case consider case fa bg 
theorem couple positive integers function returns maximal lyndon word ly fa bg respect lexicographic order function fa bg input couple positive integers 
fa bg alphabet 
output fa bg return div mod return ba return fa bg philippe div mod return ab ab ab return fab ab proof 
couple positive integers 
denote result function 
algorithm recursive denote ni mi ai instances formal parameters th function call fa bg 
note algorithm terminate finite number steps say step sum ni mi strictly decrease 
furthermore denote word ni mi stage multiple orm multiple obviously fa bg 
consider case depending value anda fa bg fab ab accordingly 
course ly ly prove previous inequality turns equality 
proof trivial relation implies proof complete justify relation 
purpose suppose fa bg 
write easily see ly fa bg 
existence imply existence lyndon word ly fa bg greater 
write wv vt ba hj defined left standard bracketing furthermore consider vt vi greater greater split vi words apply transformation 
construct finely homogeneous computations free lie algebras sequence lyndon words vi greater hand splitted ones 
concatenating reordered sequence give new lyndon word greater begins 
fact contradicts maximality doesn exist 
second case multiple substantially different previous 
denote alphabet equipped reverse order band isomorphism order preserving clearly fa bg fa bg uk uk mirror image word analysis algorithm trivial recurrence tree structurally equivalent algorithm computing greatest common divisor theorem positive integers worst case time complexity function log max 
proof 
see knuth instance theorem corollary 
general case second time able generalize function finite alphabet manner function input tuple positive integers 
fa ordered alphabet 
output pk return div mod return return fa return fa decreasing downto philippe qi div ri mod ri ri return qk aq qk aq qk aq increasing ri return pt rij ri rit fa qk aq qk ak qk reasonably expect complexity algorithm function size alphabet maximum components unfortunately able analyse behaviour function case deeply 
fine homogeneous generation lyndon words problem find words ly need known reducing property see example duchamp partially commutative version proposition proposition fa ak ly 
see example dissect lyndon words solve problem 
suppose fa bg 
proposition ab ly ly denoting minimal subset ly mean code fa ab abb want find lyndon words ly know fine homogeneity don know look ab abb 
note take times ab lyndon words primitive 
initial problem breaks smaller subproblems find words ly fa ly fa ab 
subproblems smaller insofar length involved lyndon words smaller new alphabets previous compare fa fa ab fa bg 
necessary detail way compute ly fa ab 
fa ab andb code fa aabb ab finely homogeneous computations free lie algebras word ly lyndon word aabb ab 
ly fa ab ly abg ly fa clearly iterating process give finite number steps lyndon word fa bg fine homogeneity 
fact algorithm ultimately construct alphabets letter word ly fa bg 
example subproblems decomposition tree case ly fa bg pq ly fa ly fa ab ly fa ly fa ly abg ly ly ly ly fa bg 
translation terms partition looking closely process gives feeling breaking problem smaller ones exactly finding set partitions constraints 
example stage previous computation searched set elements verifying constraint 
accepted refused lyndon words primitive solutions decomposition ly fa ab searched set elements verifying solutions 
formulation problem terms composition partition need notations definitions 
jxj xp jjxjj hj philippe composition positive integer tuple np jxj furthermore jjxjj say constrained 
denote resp 
compositions parts resp 
set compositions constrained 
partition positive integer tuple jyj yp 
denote set partitions parts set partitions parts value exceed 
consistency previous notations call xi xit composition xij xi zero denote bx subset elements ij th place lexicographic order 
trivial property helpful computing compositions know constant worst case time complexity algorithm derive successor partition see wilf 
proposition partition equivalent unique composition 
proof 
proof immediate see partition corresponding composition xi number parts equal 
example compositions constrained parts 
proposition says equivalent partitions parts greater evident notation partition form equivalent composition write sequence non zero exponents example algorithm state theorem fa kg ly proof 
hand study case consider fa bg fab mg 
elements composition associate fine homogeneous class words fx fw jwj ab xj mg fx empty lyndon word fx note proposition ly ly want determine fx contains lyndon word ly finely homogeneous computations free lie algebras lyndon word fx belong ly 
course ly union set clear criteria choosen jxj jjxjj composition parts constrained theorem proved 
hand consider case 
jbj 
problem find jx pk jjx jj inequalities jjx jj clear set solutions system exactly union set jbj tuple non negative integers verifying jx jjx jj 
theorem proposition deduce takes input alphabet outputs set elements ly function input tuple positive integers 
fa ordered alphabet 
output ly 
return fa kg fg lyn fg increasing lyn lyn bx return lyn philippe tests execution time function algorithm hand computing homogeneity class lyndon words derived duval method 
see section method allows go lyndon word lexicographically length 
new function say born alphabet letters homogeneity vector construct set ly iterative application duval method picking words homogeneity 
bear mind exponential algorithm number lyndon words length kn 
wanted get feeling complexities methods 
purpose algorithms implemented maple ss workstation solaris operating system 
time generation homogeneity class lyndon words function efficient 
second time decided finite alphabet size integer generate words lyn lexicographic order duval method homogeneity classes function 
average running time homogeneity class gradually smaller running time ofd grow linear execution time ratio increases 
obvious algorithms devoted different problems suited lexicographic enumeration lyndon words length just right homogeneity generation lyndon words 
generating lyndon basis want generate standard bracketing lyndon words lexicographic order length 
know efficient algorithm due duval gives lyndon word lexicographic order length constant average time complexity 
idea quite simple adapt duval method obtain index standard factorization addition lyndon word course preserving time complexity convenient tree data structure recursively store standard factorizations 
duval theorem write lexicographic order lexicographic order length respectively 
total orders defined follows iff iff ua ras rbt juj jvj juj jvj lyndon word denote sense successor lexicographic order computed follows remove terminal maximal letters finely homogeneous computations free lie algebras replace non maximal letter successor notice smaller size 
example fa cg aab 
duval proves theorem lyndon word length maximal fine homogeneous class lyndon word js ut qt ui lyndon words derived prefixes 
precisely ui defined follows prefix length ju div mod ju div mod ut rt dt qt rt div dt rt rt mod dt feeling behaviour underlying algorithm lyndon word bab fa bg 
prefix compute positive 
get compute ab giving bab 
algorithm worst case time complexity berstel proved optimal average time complexity give asymptotic bound cardinal 
adapted duval algorithm seen duval constructs lyndon word computing successive prefixes natural idea left standard factorization right usual 
denote index left standard factorization lyndon word notations theorem theorem ut dt 
proof 
notice relation ui ri implies existence integer di ri andthe letter succ ui di set ui ui di di ri di ri ui ui philippe grayed zones means suppression maximal letters 
carry proof 
js thatis succ case obviously 
cases left 
hand preliminary 
hand general case ort longest prefix lyndon long ut qt ut qt ut preliminary longer word 
qt dt dt 
example consider fa bg 
table ut qt aab ab aabb ab abb lines fifth 
sake completeness give slight improvement duval algorithm function input lyndon word maximal fine homogeneous class 
index standard factorization 
output successor length phic order length empty word maximal fine homogeneous class 
index standard factorization maximal fine homogeneous class 
maximal letter lexicographic order succ return finely homogeneous computations free lie algebras increasing increasing succ dt increasing dt increasing dt dt return return return dt means th letter letter clear complexity original algorithm added tests function body new integer variables 
duval 

ration une section des classes de des mots de lyndon de born theor 
comput 
sci 

philippe reutenauer 

free lie algebras 
london mathematical society monographs new series vol 

academic press 
viennot 

alg de lie mono des 
lecture notes mathematics 
springer verlag 
chen fox lyndon 

free differential calculus iv 
quotient groups lower central series 
ann 
mathematics 


combinatorics words 
encyclopedia mathematics 
addison wesley 
knuth 

art computer programming vol 
semi numerical algorithms nd ed 
addison wesley 
duchamp 

combinatorics trace monoids ii 
rozenberg editors book traces 
wilf 

combinatorial algorithms 
academic press 
berstel 

average cost duval algorithm generating lyndon words 
preprint laboratoire informatique de ecole normale sup rieure paris 
