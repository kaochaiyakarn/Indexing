international workshop field programmable logic applications vpr new packing placement routing tool fpga research jonathan rose department electrical computer engineering university toronto toronto canada toronto edu describe capabilities algorithms new fpga cad tool versatile place route vpr 
terms minimizing routing area vpr outperforms published fpga place route tools compare 
algorithms previously known approaches enhancements improve run time quality 
placement routing results new set large circuits allow benchmark comparisons fpga place route tools circuit sizes typical today industrial designs 
vpr capable targeting broad range fpga architectures source code publicly available 
associated netlist translation clustering tool number research projects worldwide useful areas fpga architecture research 
fpga research typically evaluate utility new architectural features experimentally 
benchmark circuits technology mapped placed routed fpga architectures interest measures architecture quality speed area readily extracted 
accordingly considerable need flexible cad tools target wide variety fpga architectures efficiently allow fair comparisons architectures 
describes versatile place route vpr tool designed flexible allow comparison different fpga architectures 
vpr perform placement global routing combined global detailed routing 
publicly available www toronto edu software html 
order meaningful fpga architecture comparisons essential cad tools map circuits architecture high quality 
routing phase vpr outperforms previously published fpga routers standard benchmarks results available combination vpr placer router outperforms published combinations fpga placement routing tools 
organization follows 
section describe features vpr range fpga architectures may 
sections describe placement routing algorithms 
section compare number tracks required vpr successfully route circuits required published tools 
section conclude outline 
supported walter sumner memorial fellowship nserc scholarship information technology centre ontario 

tools standard benchmark results compare 
international workshop field programmable logic applications enhancements vpr 
overview vpr outlines vpr cad flow 
inputs vpr consist netlist text file describing fpga architecture 
vpr place circuit pre existing placement read 
vpr perform global route combined global detailed route placement 
vpr output consists placement routing statistics useful assessing utility fpga architecture routed track count maximum net length 
architectural parameters specified architecture description file number logic block inputs outputs side logic block input output accessible logical equivalence various input output pins lut inputs functionally equivalent number pads fit row column fpga dimensions logic block array logic blocks 
addition global routing performed specify relative widths horizontal vertical channels relative widths channels different regions fpga 
combined global detailed routing performed specifies switch block architecture routing tracks interconnected number tracks logic block input pin connects value logic block outputs value pads 
current architecture description format allow segments span logic block included routing architecture presently adding feature 
adding new routing architecture features vpr relatively easy vpr uses architecture description create routing resource graph 
routing track pin architecture node graph graph edges represent allowable connections 
router graphics technology mapped netlist vpr architecture description file place circuit read existing placement perform global combined global detailed routing placement routing output files placement routing statistics fig 

cad flow 
existing placement placement cad tool international workshop field programmable logic applications inputs tion statistics computation routines routing resource graph adding new routing architecture features involves changing subroutines build graph 
vpr initially developed island style fpgas row fpgas 
vpr currently capable targeting hierarchical fpgas adding appropriate placement cost function required routing resource graph building routines allow target 
vpr built graphics allow interactive visualization placement routing available routing resources possible ways interconnecting routing resources 
logic block netlist translator reads format netlist circuit technology mapped luts flip flops packs luts flip flops desired fpga logic block outputs netlist vpr netlist format 
target logic block consisting lut ff shown common fpga logic element 
capable targeting logic blocks contain luts flip flops shared lut inputs 
logic blocks similar employed fpgas altera xilinx lucent technologies 
placement algorithm input lut clock vpr uses simulated annealing algorithm placement :10.1.1.123.7607
experimented different cost functions call linear congestion cost function provides best results reasonable computation time 
functional form cost function flip flop fig 

basic fpga logic block 
nets cost summation nets circuit 
net denote horizontal vertical spans bounding box respectively 
factor compensates fact bounding box wire length model underestimates wiring necessary connect nets terminals suggested 
value depends number terminals net nets fewer terminals slowly increases nets terminals 
cav cav average channel capacities tracks directions respectively bounding box net cost function penalizes placements require routing areas fpga narrower channels 
results obtained fpgas channels capacity 
case cav con cav cav international workshop field programmable logic applications stant linear congestion cost function reduces bounding box cost function 
annealing schedule essential obtain high quality solutions reasonable computation time simulated annealing 
developed new annealing schedule leads high quality placements annealing parameters automatically adjust different cost functions circuit sizes 
compute initial temperature manner similar 
blocks total number logic blocks plus number pads circuit 
create random placement circuit 
perform blocks moves pairwise swaps logic blocks pads compute standard deviation cost blocks different configurations 
initial temperature set times standard deviation ensuring initially virtually move accepted start anneal 
default number moves evaluated temperature default number overridden command line allow different cpu time placement quality tradeoffs 
reducing number moves temperature factor example speeds placement factor reduces final placement quality 
temperature high move accepted essentially moving randomly placement little improvement cost obtained 
conversely moves accepted due temperature low current placement fairly high quality little improvement cost 
motivation mind propose new temperature update schedule increases amount time spent temperatures significant fraction moves accepted 
new temperature computed tnew told value depends fraction attempted moves accepted told shown table 
table 
temperature update schedule 
fraction moves accepted accept accept accept accept accept shown desirable keep accept near long possible 
accomplish value accept control range limiter interchanges blocks equal limit units apart directions attempted 
small value limit increases accept ensuring blocks close considered swapping 
local swaps tend result relatively small changes placement cost increasing likelihood acceptance 
initially limit set entire chip 
temperature reduced value limit updated new old old clamped range international workshop field programmable logic applications maximum fpga dimension 
results limit size entire chip part anneal shrinking gradually middle stages anneal low temperature part anneal 
anneal terminated cost nets movement logic block affect net 
temperature small fraction average cost net move results cost increase accepted terminate anneal 
routing algorithm vpr router pathfinder negotiated congestion algorithm 
basically algorithm initially routes net shortest path find regardless overuse wiring segments logic block pins may result 
iteration router consists sequentially re routing lowest cost path net circuit 
cost routing resource function current overuse resource overuse occurred prior routing iterations 
gradually increasing cost routing resources algorithm forces nets alternative routes avoid resources leaving net needs resource 
experimental results set maximum number router iterations circuit successfully routed number tracks iterations assumed channels width 
avoid overly circuitous routes save cpu time allow routing net go channels outside bounding box net terminals 
important implementation detail deserves mention 
original pathfinder algorithm vpr router dijkstra algorithm maze router connect net 
terminal net maze router invoked times perform required connections 
invocation maze routing wavefront expands net source reaches net sinks 
path source sink part net routing 
maze routing wavefront emptied new wavefront expansion started entire net routing far 
invocations maze router terminals net connected 
unfortunately approach requires considerable cpu time high fanout nets 
high fanout nets usually span fpga 
invocations maze router partial routing net source large take long time expand maze router wavefront sink 
fortunately efficient method 
net sink reached add routing resource segments required connect sink current partial routing wavefront expansion list cost 
empty current maze routing wavefront just continue expanding normally 
new path added partial routing cost zero maze router expand 
new path typically fairly small take relatively little time add new wavefront sink reached quickly entire wavefront expansion started scratch 
illustrates difference graphically 
international workshop field programmable logic applications unconnected sink expansion wavefront current partial sink reached routing expansion reaches sink experimental results expansion wavefront traditional method restart wavefront various fpga parameters section chosen allow direct comparison previously published results 
results section obtained logic block consisting input lut plus flip flop shown 
clock net routed sequential circuits usually routed dedicated routing network commercial fpgas 
lut input appears side logic block logic block output accessible bottom right sides shown 
logic block input output connect track adjacent channel 
wire segment connect wiring segments channel intersections switch box topology disjoint wiring segment track connects wiring segments track 
experimental results input pin previous fpga routing results assumed input pin possible 
connection box input pin tracks connects consists independent pass transistors controlled sram bits possible turn switches order electrically connect tracks input pin 
refer input pin 
commercial fpgas re expand new wire expansion wavefront vpr method maintain wavefront expand new wire fig 

sink reached new wavefront built scratch incrementally 
clk fig 

logic block pin locations 
international workshop field programmable logic applications implement connection box input pin channel multiplexer track may connected input pin 
multiplexer independent pass transistors saves considerable area fpga layout 
normally buffer track connection block multiplexers connects order improve speed buffer means input pin 
allow input pin section order fair comparison past results best fpga routers tested input pin 
section compare minimum number tracks channel required successful routing various cad tools set benchmark circuits 
results table obtained routing placement produced mincut placement tool 
columns consist step global detailed routing routers perform combined global detailed routing 
vpr requires fewer tracks second best router third best router consists vpr global route phase plus detailed routing 
table 
tracks required route placements generated 
global gbp vpr tracer detail alu alu apex example term large total table lists number tracks required implement benchmarks new cad tools allowed place route circuits 
size column lists number logic blocks circuit 
vpr uses fewer tracks performs combined global detailed routing perform detailed routing vpr generated global route 
fpr performs placement global routing simultaneously attempt improve requires total tracks vpr 
allowing vpr place circuits forcing placements reduces number tracks vpr requires route indicating vpr simulated annealing placer considerably better min cut placer 
experimental results input pin table compares performance vpr tool 
benchmarks available download www toronto edu 
vpr international workshop field programmable logic applications table 
tracks required place route circuits 
placement global routing number logic blocks fpr vpr detailed routing circuit set allow input pin 
tools allowed route generated placement vpr requires fewer tracks 
tools allowed place route circuits vpr requires fewer tracks combination 
vpr simulated annealing 
believe vpr placer outperforms partially handles high fanout nets efficiently allowing moves evaluated time partially efficient annealing schedule 
experimental results large circuits benchmarks sections range size logic blocks accordingly small representative today fpgas 
section experimental results largest benchmark circuits range size logic blocks 
technology map circuit luts flip flops vpr alu alu apex example term large total table 
tracks required place route circuits input 
placement global detailed route vpr alu alu apex example term large vpr total international workshop field programmable logic applications combine flip flops luts basic logic block 
number pads fit row column set line current commercial fpgas 
circuit placed routed smallest square fpga contain 
input pin allowed 
note benchmarks des fpga architecture assumed 
table 
channel widths required place route large benchmark circuits 
circuit lbs vpr circuit lbs table compares number tracks required place completely route circuits vpr number required place globally route circuits vpr perform detailed routing 
table gives size circuit terms number logic blocks 
entries column sign successfully routed ran memory 
perform detailed routing global route generated vpr increases total number tracks required route circuits vs having vpr perform routing completely 
clearly difficulty routing large circuits input pin allowed 
encourage fpga researchers publish routing results larger benchmarks issue fpga challenge time verified results beat previously best verified results benchmarks announced pay authors sorry cdn track reduce total number tracks required previously best results 
technology mapped placements generated vpr currently best routing track total available www toronto edu software html 
vpr circuit new fpga placement routing tool outperforms tools direct comparisons 
addition benchmark results larger circuits typically characterize academic fpga place route tools 
hope generation fpga cad tools compared basis larger benchmarks closer approximation kind problems mapped today fpgas 
main design goals vpr keep tool flexible allow fpga architectural studies 
currently working improvements vpr increase utility fpga architecture research 
near vpr support buffered segmented routing structures soon plan add timing analyzer timing driven routing 
lbs vpr alu apex elliptic apex ex ex seq des tseng total international workshop field programmable logic applications brown francis rose field programmable gate arrays kluwer academic publishers 
xilinx programmable logic data book 
orca datasheet 
fpga data book 
altera data book 
rose cluster logic blocks fpgas area efficiency vs input sharing size pp 

kirkpatrick gelatt jr vecchi optimization simulated annealing science may pp 

rose directional bias non uniformity fpga global routing architectures iccad pp 

rose biased non uniform global routing architectures cad tools fpgas csri tech 
rep dept ece university toronto 
cheng accurate efficient placement modeling dac pp 

huang romeo sangiovanni vincentelli efficient general cooling schedule simulated annealing iccad pp 

swartz new algorithms placement routing macro cells iccad pp 

lam performance new annealing schedule dac pp 

ebeling hauck burns placement routing tools fpga ieee trans 
vlsi dec pp 

lee algorithm path connections applications ire trans 
electron 
comput vol 
ec pp 

rose automatic standard cell layout program canadian conf 
vlsi pp 

rose parallel global routing standard cells ieee trans 
cad oct pp 

brown rose detailed router field programmable gate arrays ieee trans 
cad may pp 

brown detailed router allocating wire segments fpgas acm sigda physical design workshop pp 


wu marek efficient router field programmable gate arrays pp 


wu marek orthogonal greedy coupling new optimization approach fpga routing dac pp 

alexander robins new performance driven fpga routing algorithms dac pp 

brown step routing fpgas int 
symp 
physical design pp 


lee wu performance driven router fpgas considering path delays dac pp 

alexander cohoon robins performance oriented placement routing field programmable gate arrays pp 

architectures algorithms field programmable gate arrays embedded memories ph dissertation university toronto 
yang logic synthesis optimization benchmarks version tech 
report microelectronics centre north carolina 
cong ding optimal technology mapping algorithm delay optimization lookup table fpga designs ieee trans 
cad jan pp 


