sgml basis data intensive natural language processing mckelvie brew thompson language technology group human communication research centre university edinburgh february 
describes lt nsl system mckelvie architecture writing corpus processing tools 
system compared systems address similar issues gate system cunningham ims corpus workbench christ 
particular address advantages disadvantages sgml approach compared non sgml database approach 
key words sgml natural language processing corpus linguistics abbreviations sgml standard generalised markup language normalised sgml tei text encoding initiative dtd document type description nlp natural language processing 

theme design software data architectures natural language processing corpora 
major issues corpus nlp best deal medium large scale corpora complex linguistic annotations system architecture best supports reuse software components modular interchangeable fashion 
describe lt nsl system mckelvie architecture writing corpus processing tools developed attempt address issues 
system compared systems address issues gate system cunningham ims corpus workbench christ 
particular address advantages disadvantages sgml approach compared non sgml database approach 
order back claims merits sgml corpus processing number case studies lt nsl system corpus preparation linguistic analysis 
main focus software architectural issues primary interest developers nlp software 
issues addressed relevance choice corpus annotation schemes non computationally minded users nlp mckelvie brew thompson software viewers automatic taggers statistical pro ling tools semi automatic annotation software 
basic position annotate corpus sgml descriptively adequate allows generic software di erent corpora reuse software user interfaces 

sgml standard generalised markup language sgml goldfarb meta language de ning markup languages 
markup language way annotating structure sort class text documents 
sgml originally designed kind text formatting language drew clear distinction logical structure formatting issues 
exibility ease new markup schemes de ned means dtds document type descriptions meant sgml quickly taken linguists working large computer readable corpora solution needs standardised scheme linguistic annotation 

brief sgml sgml standard annotating texts 
allows decompose document hierarchy tree structure elements 
element contain elements plain text mixture 
associated element set attributes associated values 
attributes allow add information markup de ne subtypes elements 
attributes link elements document hierarchy 
entities provide structured means de ning abbreviations 
elements attributes entities user de nable providing exibility support markup scheme 
de ned dtd includes grammar de ning elements occur inside elements order 
example sgml shows basic structure sgml markup shown bold 
id id cat sat mat 
id gender sleeping 
sgml way describing structure grammar allowed markup document 
sgml basis data intensive nlp example consists elements representing case sentences associated id attributes 
rst contains phr element text 
second contains pro element 
ref attribute pro refers back element id attribute phr element 

sgml computation linguistics sgml context collecting distributing processing large text collections tens case hundreds millions words size computational linguistics research development 
lt nsl api associated tools developed meet needs arise rst instance creation elaboration transformation markup collections usually called corpora 
corpora large high density markup word associated markup 
needed support pipelined transformation programs running batch mode allow modular distributed software development specialised interactive editors allow hand correction automatically added markup 
increasingly common sgml markup language text corpora question arises best way processing corpora 
example task common linguistic applications raw corpus segmenting words looking results lexicon complex sgml marked corpora marked corpus 
approach taken lt nsl library sgml markup retained input output format tool pipelines inter tool communication 
advantage sgml de ned language markup purpose 
value precisely closes option proliferation ad hoc markup notations associated software 
second advantage provides notation allows application access document right level abstraction attending text markup relevant needs ignoring 
lt nsl de nes query language retrieval functions selection relevant text content straight forward task 
mckelvie brew thompson 
lt nsl system lt nsl tool architecture sgml processing primarily text corpora 
generalises unix pipe architecture making possible pipelines general purpose tools process annotated corpora 
original unix architecture allows rapid construction ecient pipelines conceptually simple processes carry relatively complex tasks restricted simple model streams sequences bytes lines elds 
lt nsl lifts restriction allowing tools access streams sequences tree structured text representation sgml marked text 
sgml stream format programs advantage sgml de ned standard representing structured text 
important reason sgml corpus linguistic annotation forces formally describe markup provides software checking markup invariants hold annotated corpus 
practise extremely useful 
sgml human readable intermediate results inspected understood 
noted densely annotated text dicult read ease readability really requires transformation suitable display format 
fortunately customisable display software sgml readily available 
means easy programs access information relevant ignoring additional markup 
advantage text corpora available sgml example british national corpus dunlop 
sgml medium inter program communication disadvantage requires rewriting existing software example unix tools record eld format longer 
reason developed api library ease writing new programs 
lt nsl system released source code 
software consists language application program interface api function calls number stand programs api 
current release known unix sunos solaris linux windows nt version released 
api python programming language 
question arises respect sgml format cost parsing sgml 
surely pipelines inecient 
parsing sgml full generality providing validation adequate error detection hard 
eciency reasons wouldn want long pipelines tools tool sgml deal full language 
fortunately sgml basis data intensive nlp lt nsl doesn require parsing sgml easy fast handle subset full notation don validate assume valid input 
accordingly basic architecture underlying approach arbitrary sgml documents parsed full validating sgml parser regardless length tool pipeline process 
initial parsing produces results 
optimised representation information contained document dtd cached subsequent 
normalised version document instance piped tools built api augmentation extraction rst stage processing input producing simpli ed informationally equivalent form document 
subsequent tools lt nsl api parses normalised sgml henceforth approximately times ciently best parsers full sgml 
api returns parsed sgml calling program data structures see gure 
fully expanded text form sgml informationally equivalent output sgml parsers 
means markup minimisation expanded full form sgml entities expanded value entities sgml names elements attributes normalised 
result format easily readable humans programs 
translation space time trade expect processing faster normalised sgml input les tend larger unnormalised sgml markup minimisation extensively 
lt nsl programs consist program converting arbitrary valid sgml normalised sgml rst stage pipeline lt nsl tools number programs manipulating normalised sgml les nds sgml elements match query 
software packages lt pos part speech tagger lt wb mikheev finch lt nsl library 
addition normalised sgml program writes le containing compiled form dtd lt nsl programs read order know structure input output fast 
processes requiring sequential access large text corpora supported 
lt nsl prove rate limiting step sequential corpus processing 
kinds repeated search required lexicographers problem james clark sp parser clark 
mckelvie brew thompson file sgm 
file sgm 
file sgm 
file stream parser api program stream parser api program lt nsl lt nsl doctype structure 
data ows pipeline lt nsl programs 
system designed purpose 
standard distribution fast search engine les words 
searching british national corpus total words mb currently times slower lt nsl allows complex structure sensitive queries 
prototype indexing mechanism mikheev mckelvie distribution improves performance lt nsl acceptable levels larger datasets 
say primarily text corpora 
technology directly applicable multimedia corpora edinburgh map task corpus anderson 
tools interpret sgml elements corpus text sets les audio data allowing exible retrieval output audio infor sgml basis data intensive nlp mation queries de ned corpus text annotations 
done video clips passing say great similarity idea normalised sgml de ned extensible markup language xml de ned www consortium bray sperberg mcqueen intended easily processed subset sgml suitable www page annotation 
current release lt nsl library capable processing xml documents 

hyperlinking inclined steer middle course monolithic comprehensive view corpus data possible views annotations corpus component combined single heavily structured document massively decentralised view corpus component organised hyper document information stored separate documents utilising inter document pointers 
aspects lt nsl library aimed supporting approach rst formulated context multext project ballim thompson ide 
necessary distinguish les storage units sgml documents may composed number les means external entity hyper documents linked ensembles documents hytime tei sperberg mcqueen link notation 
implication corpus components hyperdocuments low density token level annotation expressed indirectly terms links 
reasons separating markup material marked annotation may attractive proposition 
base material may read large copying introduce markup may unacceptable 
requires line normalisation process accessing hyperlinked data base material normalised form 

markup may involve multiple overlapping hierarchies 
distribution base document may controlled markup intended freely available 
example lines sentences poetry inline footnotes transcriptions multi party dialogues multi media corpora 
mckelvie brew thompson introduce kinds semantics hyperlinks facilitate type annotation describe lt nsl toolset supports semantics 
kinds hyperlink semantics describe inclusion includes sequence sgml elements base le replacement provides replacement material base le incorporating 
crucial idea annotation allows distribute aspects virtual document structure markup actual document pipelined architecture allows tools require access virtual document stream 
seen sgml paradigm step sgml allows single documents stored transparently desired number entities proposal allows virtual documents composed transparently desired network component documents 
note examples follow simpli ed version draft proposed syntax links xml link draft proposal bray derose span elements tei extended pointer expressions separated dots 

adding markup distance consider marking sentence structure read corpus text marked tags words punctuation 


inclusion semantics mark sentences separate document follows 
crucially lt nsl lt xml products implement semantics want application see document collection single stream words nested inside sentences 


sgml basis data intensive nlp 
note linking attribute gone start tag job done 
believe simple approach wide range powerful applications 
currently development shared research database allowing independent development orthogonal markup di erent sub groups lab 

invisible inverse replacement semantics correcting errors readonly material 
suppose previous example 

interpret inverse replacement semantics time mean take base document word content 
words take document target sentence example ll get composition linking producing stream sentences containing corrected word 

multiple point linking uses hyperlinks inclusion replacement uses discussed 
example multilingual alignment may want keep alignment information separate single language documents ref ref refer paragraphs english french documents respectively 
lt nsl api supports accessing separate aligned paragraphs identi ers necessarily want expand alignments virtual document structure 

hyperlinking overlapping hierarchies hyperlinking inclusion create invalid sgml included material formed contains start tag corresponding tag 
problem addressed 
mckelvie brew thompson terms asking questions overlap di erent markup hierarchies views best far express overlapping hierarchies terms base sgml le contains material common views 
possible read view les parallel calculate intersection terms base sets markup elements views see example intersect program lt nsl release addresses problem 

lt nsl query language api provides program mer alternative views stream object stream view tree fragment view 
rst lower level ecient views sgml document sequence events 
events occur signi cant piece document start empty tags attributes text content tags bits pieces 
lt nsl provides data structures access functions reading processing events 
view programmer write code take place events 
provides simple sucient way processing documents 
alternative higher level view lets treat input sequence tree fragments order de ned order sgml start tags api provides functions read write complete sgml element 
provides function infile query subquery regexp outfile call query lt nsl query allows specify particular elements basis position document structure attribute values 
subquery regexp allow specify matching element subelement matching subquery text content matching regular expression 
function call returns sgml element satis es conditions 
elements match query passed unchanged outfile 
models processing essentially loop calls api case choosing discard modify output unchanged bit element 
example function call infile text preceding keywords xml link proposal bray derose 
sgml basis data intensive nlp table syntax lt nsl query language th ei outfile return element dominated depth element satisfying additional requirement contain element depth text containing instance possibly mis 

lt nsl query language lt nsl queries way specifying particular nodes sgml document structure 
queries coded strings give partial description path root sgml document top level element desired sgml element 
example query text describes element occurs level nesting inside element turn occur inside top level document element 
query basically path terms separated term describes sgml element 
syntax queries de ned table 
query sequence terms separated 
term describes sgml element nested sequence sgml elements 
item sgml element name optionally followed list attribute specs square brackets optionally followed 
item ends matches nested sequence number sgml elements including zero match item 
example match element arbitrarily deeply nested inside elements 
special gi match sgml element name 
common way nding element inside document query 
aname attribute name aval attribute value sgml mckelvie brew thompson table ii 
example dtd doc implied implied term consists number aterms separated match individual aterms match 
condition index matches index th sub element enclosing element 
index counting starts rst subelement numbered 
conditions indices match index th sub element satis es 
attribute tests exhaustive rend match rend rend 
match explicitly defaulted attribute values string equality 
bare satis ed value explicit defaulted 
matching queries bottomup deterministic shortest rst 

examples lt nsl queries section show examples lt nsl queries assuming dtd table 
sgml structure sample document uses dtd shown gure 
query corpus doc title means elements directly title directly doc 
shown graphically gure 
lt nsl query functions return indicated items set denoted query exhausted 
query corpus doc means directly directly doc shown gure 
query corpus doc means underneath doc 
thought standing nite sequences 
example document structure means corpus doc nested structures sgml basis data intensive nlp corpus doc ni title body docno doc ni title body docno 
hierarchical structure example document 
corpus doc ni body docno doc ni body docno title title 
result query corpus doc title corpus doc ni body docno doc ni body docno title title 
result query corpus doc mckelvie brew thompson corpus doc ni title body docno doc ni title body docno 
result query corpus doc ni title body docno doc ni title body docno 
result query body case 
alternative way addressing sentences specify query 
provide means specifying nth node particular local tree 
query means st element rd element nd element stream elements shown gure 
referent query corpus doc body assuming elements body doc illustrates combination positions types 
query body refers set rst elements body 
referent shown gure 
additionally refer attribute values square brackets rend lc gets initial elements sgml basis data intensive nlp element long words rend lc lower case words starting sentence 
obvious preceding description query language designed provide small set orthogonal features 
queries depend knowledge prior context third element rst occurrence sentence having attribute quotation supported 
possible tools lowerlevel api nd items desired 
reason limitation search engine obliged keep potentially unbounded amounts context 
systems taken di erent view tradeo simplicity expressive power de ned complex query languages sgml documents 
example language le sql program part lt nsl software language de ned dsssl 
abiteboul colleagues 
abiteboul christophides sql query languages semistructured data interest respect de ne formal framework path query languages 

comparisons systems major alternative corpus architecture advocated database approach annotations kept separately base texts 
annotations linked base texts means character sets sophisticated indexing scheme 
discuss systems compare lt nsl approach 

gate gate system cunningham currently development university system support modular language engineering 

system components consists main components gdm object oriented database storing information corpus texts 
database tipster document architecture grishman stores text annotations separate texts 
annotations linked texts means character sets precisely inter byte locations 
mckelvie brew thompson creole library program data resource wrappers allow interface externally developed programs resources gate architecture 
ggi graphical tool shell describing processing algorithms viewing evaluating results 
muc compatible information extraction system vie built gate architecture 

evaluation separating corpus text annotations general exible method describing arbitrary structure text 
may useful means publishing corpora may prove inecient underlying corpus liable change 
tipster lets de ne annotations associated attributes version presumably gate de nitions treated documentation validated system 
contrast sgml parser validates dtd provides check annotations intended way 
sgml concept content models restrict allowed positions nesting annotations 
gate allows annotation 
powerful restricted tree structures validation annotations dicult 
idea having formalised interfaces external programs data 
ggi graphical tool shell lets build store recover complex processing speci cations 
merit having high level language specify tasks translated automatically executable programs shell scripts 
area lt nsl address 

comparison lt nsl cunningham gate architecture compared earlier version lt nsl architecture developed multext project 
answer points latest version software 
see cunningham addressed points discussed 
claimed normalised sgml implies large storage overhead 
normally normalised sgml created passed pipes nal results need stored 
may problem large corpora bnc 
sgml basis data intensive nlp stated representing ambiguous overlapping markup complex sgml 
agree 
represent overlapping markup sgml number ways 
described quite possible sgml represent stand annotation similar way tipster 
lt nsl provides hyperlinking semantics interpret sgml 
normalised sgml compiled dtd le means overheads parsing sgml program small large dtds tei 
lt nsl speci particular applications dtds 
multext architecture tool speci api de ned prede ned set units linguistic interest words sentences de ned functions 
multext undecided format lt nsl contrast decided sgml common format provides functions read sgml element 
mean lt nsl architecture application neutral 

principle limit encoded sgml document 
easier clear happens di erent view needed xed format read information turns read information systematically corrected 
details matter ongoing research important motivation architecture lt nsl allow edits requiring read information copied 
practice corpus encoded way re ects assumptions corpus developers 
corpora include level representation words include higher level groupings breath groups sentences paragraphs documents 
sample back tools distributed lt nsl re ect fact 
claimed easy way sgml di erentiate sets results produced 
requires convention encoding meta information text corpora 
example sgml dtds tei include resp attribute identi es responsible changes 
lt nsl require tools obey particular conventions meta information convention xed straightforward encode necessary information sgml attributes 
tipster lt nsl built database take advantage built mechanisms version control 
far corpus annotation goes unix rcs program proved adequate solution version control needs 
alternatively version control provided means hyperlinking 
mckelvie brew thompson processing architectures non sequential control structures agent blackboard systems 
pipe lined architecture lt nsl gate provide builtin support kinds architecture 
experience common tasks nlp sequential nature require access limited size window text order 
examples kind algorithm tokenisation morphological analysis sentence boundary markup parsing multilingual alignment 
lt nsl designed kind application 
gate idea providing formal wrappers interfacing programs 
lt nsl corresponding interfaces formalised de ned specifying dtds program input output les 
example part speech tagger expect elements inside elements tag attribute output elements 
input le dtd satis ed constraint tagged 
sgml architectural forms method dtd subsetting provide method formalising program interfaces 
cunningham say reason implementation lt nsl read sgml elements database les 
similarly tipster architecture gate read sgml convert internal database 
case point sgml suitable abstraction programs limited level interface 
currently discussion gate team best allow interoperability systems 

ims corpus workbench ims corpus workbench christ includes query engine motif user visualisation tool 
provides query language conservative extension familiar unix regular expression facilities user interface tuned corpus search 
providing standard keyword context facilities giving access query language gives user sophisticated tools managing query history manipulating display storing search results 
interesting points comparison lt nsl areas query language underlying corpus representation 
lt nsl ims cwb built top henry spencer public domain regular expression package sgml basis data intensive nlp 
model treats corpora sequences attribute value bundles 
attribute thought total function corpus positions attribute values 
syntactic sugar apart special status attribute word 

query language query language ims cwb usual regular expression operators works uniformly attribute values corpus positions 
regularity clear bene users syntax learnt 
expressions considerable sophistication generated successfully beginners 
consider pos dt word pos jj 
pos means context penn treebank tagset find sequences determiners followed optional adjectives things nominal qualities 
intention presumably nd particular sub class noun phrases 
workbench plainly achieved extremely successful generalisation regular expressions validated extensive lexicography corpus building 
limited access structural information 
possible sentence boundaries marked corpus restrict search sentence matches facilities making re ned hierarchical structure 
typical working style concerned syntax search sequences attributes believe highly correlated particular syntactic structures 

data representation requires users transform corpora searched fast internal format 
format properties central role corpus position necessary input corpus mapping word raw input set attribute value pairs corpus position 
logically separate index attribute name corpus 
terminology positional attributes 
mckelvie brew thompson uses representation corpus items having value attribute mapped integer descriptor index represents attribute 
means character data corresponding distinct corpus token need stored 
attribute item list containing sequence integer descriptors corresponding sequence words corpus 
presence list storage cost adding new attribute linear size corpus 
new attribute sparse possible reduce space cost switching attribute space ecient encoding 
evaluation ims cwb design dominated need frequent fast searches corpus xed annotation scheme 
disk space cheap cost preparing storing indices ims cwb architecture mainly appropriate linguistic lexicographic exploration immediately useful situations obtain corpus development recurring need experiment di erent evolving attributes representational possibilities 
support provided user written tools published api potentially useful query language facilities 
indexing tools come ims cwb exible lt nsl index words index level corpus annotation 
query language ims cwb elegant orthogonal design believe appropriate adopt adapt standard corpus search 
stands need extension provide exible access hierarchical structure query language lt nsl possible template extensions opaque powerful program provided penn treebank 
ims cwb supports compressed index les special purpose encoding formats presumably save space 
may specialised need academic linguists applications undoubtedly important provide clean facilities non hierarchical queries premature close option access 
sgml basis data intensive nlp 
case studies 
creation marked corpora application area paradigm sequential adding markup sgml stream ts closely production annotated corpora 
marking major sections paragraphs headings word sentence boundary marking part speech tagging parsing tasks performed sequentially small moving window texts 
addition markup created earlier steps 
creating annotated corpus public distribution sgml probably format choice sgml nlp system lt nsl appropriate 
precursors lt nsl software annotate corpora multext project 
similarly lt nsl recode edinburgh corpus sgml markup process showed number inconsistencies original non sgml markup 
lt nsl allows multiple les different dtds brew mckelvie possible apply tools task nding translation english french 
part corpus part speech tagged sentence aligned lt nsl tools explored various techniques nding word alignments 
lt nsl programs useful evaluating techniques 
see mikheev finch mikheev finch uses lt nsl tools annotating linguistic structures interest extracting statistics markup 

transformation corpus markup sgml human readable practice amount markup order magnitude textual content reading sgml dicult 
similarly editing texts normal text editor tedious error prone 
committed sgml corpus nlp needs specialised software facilitate viewing editing sgml 
similar problem appears database approach corpora dif culty seeing original text seeing markup relationship text 
mckelvie brew thompson 
batch transformations address issue lt nsl includes number text tools conversion sgml 
tools easy select portions text interest query language convert plain text text format html 
addition large number commercial public domain software packages transforming sgml 
advent dsssl transformation language area 

hand correction specialised editors sgml available exactly wants powerful markup text edited 
required markup correction specialised editors allow speci subset markup edited provide optimised user interface limited set edit operations 
order support writing specialised editors developed python api lt nsl mckelvie 
allows rapidly prototype editors python tk graphics package 
editors pipeline lt nsl tools allowing hand correction disambiguation markup automatically added previous tools 
api developing generic sgml editor 
object oriented system associate display interaction classes particular sgml elements 
generic editor number tasks hand correction part speech tags correction turn boundaries innovation corpus carletta evaluation translation equivalences aligned multilingual corpora 
generic editor framework possible quickly write new editors new tasks new corpora 

sgml markup language base level annotations published corpora 
experience lt nsl shown system sequential corpus processing locality 
sgml basis data intensive nlp provides modular architecture require central database allowing distributed software development reuse components 
works existing corpora extensive pre processing 
support tipster approach separating base texts additional markup means hyperlinks 
fact sgml hytime allows exible addressing just character sets 
bene working corpora may change 
lt nsl applications require database approach need access markup random text example lexicographic browsing creation book indexes 
processing large plain text unnormalised sgml corpora indexing required generation normalised les large overhead 
working extending lt nsl direction allow processing bnc corpus entirety 
sgml database approaches optimised di erent nlp applications seen complimentary con icting 
reason attempt strengths database sgml stream approaches 
recommended include attention allowing interfacing approaches 

carried human communication research centre baseline funding comes uk economic social research council 
lt nsl began context lre project multext support european union 
bene ted discussions multext partners particularly issco geneva drew institution steve finch andrei mikheev 
wish hamish cunningham oliver christ useful discussions referees detailed comments 
abiteboul quass mchugh widom wiener lorel query language semistructured data journal digital libraries 

mckelvie brew thompson anderson bader bard boyle doherty isard kowtko mcallister miller thompson 
hcrc map task corpus 
language speech 
ballim thompson 
multext task milestone report 
technical report available laboratoire parole langage universite de provence aix en provence france 
bray derose eds 
extensible markup language xml version 
wd xml link world wide web consortium 
see www org pub www tr bray sperberg mcqueen eds 

extensible markup language xml version 
world wide web consortium working draft wd xml 
available www org pub www tr wd xml html 
brew mckelvie 

word pair extraction lexicography 
proceedings pp ankara turkey 
dunlop 

encoding british national corpus 
th international conference english language research computerised corpora nijmegen 
available www sil org sgml bnc encoding html see info ox ac uk bnc carletta fraser 

empirical study innovation manufacturing teams preliminary report 
proceedings international workshop communication modelling lap ed 
dietz springer verlag electronic workshops computing series 
christ 

modular exible architecture integrated corpus query system 
proceedings complex rd conference computational lexicography text research budapest july budapest hungary 
cmp lg archive id christophides abiteboul cluet scholl structured documents novel query facilities sigmod 
clark 
sp sgml system conforming international standard iso standard generalized markup language 
available www com sp index htm 
cunningham humphreys gaizauskas wilks 

software infrastructure natural language processing 
th conference applied natural language processing washington april 
cunningham wilks gaizauskas 

new methods current trends software infrastructure nlp 
proceedings second conference new methods language processing pages ankara turkey march 
cunningham gaizauskas wilks 

general architecture text engineering gate new approach language engineering 
technical report dept computer science university 
available www dcs shef ac uk research groups nlp gate goldfarb 

sgml handbook 
clarendon press 
grishman 

tipster phase ii architecture design document version 
technical report dept computer science new york university 
available www cs nyu edu tipster ide multext task milestone report 
technical report available laboratoire parole langage universite de provence aix en provence france 
le 
language querying sgml documents 
proceedings th european conference information systems 
lisbon pp 

information available www univ aix fr projects multext sgml basis data intensive nlp mckelvie thompson finch 

normalised sgml library lt nsl version 
technical report language technology group university edinburgh 
available www ltg ed ac uk software nsl mckelvie brew thompson 
sgml basis nlp 
proc 
anlp washington april 
mikheev finch 

workbench acquisition domain knowledge natural language 
proceedings seventh conference european chapter association computational linguistics eacl 
dublin ireland 
mikheev finch 

workbench finding structure texts 
proc 
anlp washington april mikheev mckelvie 

indexing sgml les lt nsl 
technical report language technology group university edinburgh 


manual page 
available www ldc upenn edu ldc online treebank man cat van rossum 

python tutorial 
available www python org sperberg mcqueen eds 

guidelines electronic text encoding interchange 
text encoding initiative oxford 
mckelvie 

python interface normalised sgml library 
technical report language technology group university edinburgh 
address correspondence language technology group human communication research centre university edinburgh buccleuch place edinburgh eh lw scotland email david mckelvie ed ac uk chris brew ed ac uk thompson ed ac uk 
