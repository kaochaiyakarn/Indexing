founded abduction tabled dual programs jos alferes lu pereira swift abductive logic programming offers formalism declaratively express solve problems areas diagnosis planning belief revision hypothetical reasoning 
tabled logic programming offers computational mechanism provides level prolog supported successful applications fields parsing program analysis model checking 
show tabled logic programming evaluate queries abductive frameworks integrity constraints frameworks contain default explicit negation 
approach consists transformation evaluation method 
transformation rule finite ground program new rule true false 
call resulting program dual program 
evaluation method abdual operates dual program 
abdual sound complete evaluating queries abductive frameworks entailment method founded semantics explicit negation answer sets 
abdual asymptotically efficient known method class problems 
addition abduction desired abdual operating dual program provides novel tabling method evaluating queries ground extended programs complexity termination properties similar best tabling methods founded semantics 
publically available meta interpreter developed abdual xsb system 
abductive logic programming general non monotonic formalism potential applications striking 
known problems domains diagnosis planning temporal reasoning naturally modeled abduction 
lay basis efficiently computing queries ground valued abductive frameworks extended logic programs notion entailment rests founded semantics 
query processing technique termed abdual relies mixture program transformation tabled evaluation 
abductive frameworks transformation removes negative literals program abduction performed integrity rules 
specifically dual transformation defines rule dual rule true false 
tabled evaluation resulting program turns simpler untransformed normal programs abduction needed time maintaining termination complexity properties tabled evaluation extended programs abduction needed 
contributions ffl describe abdual fully consider abductive frameworks entailment method founded semantics explicit negation 
abdual sound complete terminating queries frameworks finite ground programs integrity rules 
ffl show abductive frameworks entailment method founded semantics dep 
matematica univ centre univ nova de lisboa portugal 
jja pt centre de ciencias tecnologia univ nova de lisboa portugal 
lmp di fct unl pt department computer science university maryland college park md usa 
cs umd edu explicit negation complexity abdual line best known methods 
addition normal extended programs viewed abductive frameworks containing abducibles integrity constraints query evaluation polynomial data complexity 
ffl provide transformation generalized stable models computed abdual show abdual provides sound complete evaluation method computing models 
furthermore efficiency abdual computing generalized stable models line best known methods 
ffl provide access abdual meta interpreter written xsb system illustrating evaluate abdual practice describe abdual applied medical diagnosis 
preliminaries terminology assumptions terminology logic programming defined modifications 
objective literal atom explicit negation denoted gammaa 
objective literal atom explicit conjugate conj atom gammaa form gammaa explicit conjugate literal form objective literal default negation default conjugates defined explicit conjugates default conjugate conj objective literal default conjugate atom objective literal objective literal literal 
extended program formed countable language function predicate symbols lp set rules form body objective literal body possibly empty sequence literals 
objective literals program contain explicit negation symbol called normal 
set literals occurring termed literals 
extended herbrand base program denoted hp set ground objective literals lp valued interpretation program mean set literals hp denote set objective literals set literals form ground objective literal truth value undefined 
interpretation consistent objective literal coherent implies conj information ordering interpretations defined follows 
interpretations info subset subset program denote wfs valued founded model wfsx valued founded model explicit negation generalizes wfs 
consistent valued interpretation viewed function hp set ff tg 
accordingly convenience assume symbols belong model belong model 
simplicity presentation assume left right literal selection strategy results hold fixed literal selection strategy 
dual programs introduced allow literal head rule terms goal query literal 
founded semantics explicit negation recall definitions founded stable models extended programs 
definitions operator 
definition operator extended program interpretation 
operator maps interpretations interpretations defined follows 
valued coherent interpretation atom explicitly false resp 
true false resp 
true default 
interpretations objective literal defined 
iff rule ln objective literal form 
iff rule ln literal form objective literal operator extension similar operator normal programs 
addition required explicit negation clause ensures coherency 
shown monotonic truth ordering valued interpretations unique fixed point denoted lfp neg neg fnot jo hp furthermore shown operator monotonic information ordering interpretations leading definition founded semantics explicit negation 
definition paraconsistent founded semantics explicit negation extended program 
defined fixed point 
example program containing rules fc gammab gammab gammaa gammac note compute coherency condition definition infer gammab 
operator possible define stability operator extended programs allows partial possibly paraconsistent models 
definition partial stable interpretation extended program extended program 
call interpretation partial stable interpretation interpretation contains gammao coherency contain inconsistent 
definition partial stable interpretation inconsistent 
see abductive frameworks consistency ensured means integrity constraints instance prohibiting gammao true objective literals valued abductive frameworks definitions valued abductive frameworks modify 
definition integrity rule integrity rule program form ln literal formed element lp definition abductive framework abductive framework triple hp ii set ground objective literals lp called abducibles objective literal iff conj set ground integrity rules ground program rule head predicate symbol occurring lp abductive subgoal ha seti literal set abducibles set called context context contains objective literal explicit default conjugate termed inconsistent consistent 
requirement rule head abducible leads loss generality program abducibles rewritten obey instance desired may introduce new abducible predicate rule 
definition abductive scenario scenario abductive framework hp ii tuple hp ii consistent valued interpretation pb contains rule iff iff definition abductive solution abductive solution scenario oe hp ii abductive framework false oe pb 
say oe hp ii abductive solution query oe oe minimal abductive solution oe hp ii wfm info wfm 
evaluation abductive solutions query wellfounded semantics explicit negation informally introduce abdual series examples 
example illustrate abdual compute queries ground programs founded semantics abduction integrity constraints needed 
accordingly consider abductive framework hp set abducibles set integrity rules empty 
note taken normal program wfm fs order evaluate query abdual create dual form taken query rule query 
query assumed lp rule ensures integrity constraints checked abductive solutions derived 
dual program dual query shown 




query 
query 
query 





dual program query note dual form program rules default literals form heads rule designed true false 
lines coherency axioms named ensure coherency model computed abdual 
usual tabled evaluations abdual evaluation query dual represented sequence forests abdual trees 
forest consisting single tree query jquery calls query rule 
successor ordinal forest created abdual operation adds new tree expands node existing tree forest trees possible abdual evaluation query shown nodes regular having form abductive subgoal abductive subgoal subgoal definition sequences literals 
abdual terminology evaluation encounters 






query 


































simplified abdual evaluation normal program new literal tree root js added forest new subgoal operation 
literal selected node new subgoal operation creates node single tree 
children roots trees created program clause resolution operations 
left right literal selection strategy broken delaying operation non root node moves selected literal node nodes created way 
simplicity presentation include computation paths include coherency axioms 
answer leaf node empty 
consisting nodes index nodes answers 
delay lists non empty termed conditional answers 
founded model answers unconditionally true order derive unfounded set removal operation needed 
note nodes form analogue dual program unfounded set consisting analogue called unfounded set 
positive literals unfounded set false negative literals unfounded set true 
set conditional answers determined form unfounded set answers unconditionally true 
answers returned nodes answer clause resolution operation combines abductive contexts answer node 
instance answer fg 
returned node answer clause resolution 
formalize definitions concepts introduced example 
definition dual program extended program 
dual transformation creates dual program dual defined union smallest program containing set rules follows 
objective literal facts rules lm nm contains rule fold fold om contains rules fold fold fold conj fold assumed occur lp rules termed folding rules literals formed atoms predicate symbol fold called folding literals 
literals rule head contains rule consists axioms coherence relate explicit default negation defined objective literal literals dual form true iff false instance fact objective literal dual rule 
definition abdual trees forest abdual forest consists forest abdual trees 
nodes abdual trees failure nodes form fail regular nodes form abductive subgoal abductive subgoal abductive subgoal 
sequences literals called delay literals goal literals respectively 
call non failure leaf node answer empty 
empty unconditional conditional 
definition ensures root node abdual tree form hs js literal 
case say root goal tree similarly ops forest contains root goal forest contains tree literal selection rules apply node mentioned section fixed left right order simplicity presentation 
example illustrates abdual evaluate queries general abductive frameworks 
example consider abductive framework hp ii program 

fp gammap program constr constr constr 
constr 
ground integrity constraints represent abductive interpretation default negation 
query rule query 
dual program shown 




constr 
constr constr constr constr 
constr constr 
constr 
constr constr 
query 
query 
query 

constr constr constr constr constr constr constr constr dual program query 
illustrates forest trees created abdual evaluation initial query 
derivations stemming coherency axioms 
abducibles encountered evaluation provision selected literal node abducible propagation abducibles abductive goals 
case selected atom node abducible addition selected atom context abductive subgoal context inconsistent definition abduction operation applicable example abduction create child node fg 

abducibles propagated answer clause resolution operation restriction context answer consistent context node answer returned 
instance unique abductive solutions 
returned node query fp 















query 



const constr 
constr 
constr 
constr 



constr 



finite abdual forest query fq 
final definitions abdual provided 
notion needed determine set trees produced abductive answers produce 
captured notion set trees completely evaluated 
definition completely evaluated forest set abdual trees completely evaluated iff conditions satisfied tree 
contains unconditional answer context empty 
node selected literal sl ffl tree sl belongs set completely evaluated trees ffl new subgoal program clause resolution answer clause resolution operations definition applicable literal completely evaluated tree belongs completely evaluated set evaluation program example required detection unfounded set formal definition follows 
definition unfounded set answers abdual forest set answers unfounded set iff 
literal abductive subgoal completely evaluated 

set context fc abductive subgoal answer sg consistent 
answer dl dl non empty dl exists answer context dl abdual evaluation consists possibly transfinite sequence abdual forests 
definition follows generalized slg trees 
order define behavior abdual evaluation limit ordinal define notion upper bound set abdual trees 
global ordering literals assumed elements context node uniformly ordered ordering equivalence relation defined nodes abdual trees 
furthermore rooted tree viewed partially ordered set node represented fn pg tuple representing path root tree 
represented manner easily seen rooted trees iff subtree furthermore root union defined set union taken sets 
definition abdual evaluation hp ii abductive framework query 
abdual evaluation sequence abdual forests fn operating ground instantiation dual qg ffl forest containing single tree query fg jquery ffl successor ordinal fi fn obtained fn applying abdual operation definition 
ffl limit ordinal ff fi ff defined ff iff root node fg js root node tree forest ff ft jt ff root js operation applicable fn called final forest similarly slg abdual propagate delay lists delayed answers answer rj returned node jp resulting node pjs 
action necessary abdual polynomial complexity normal programs absence abduction theorem 
certain special cases possible propagate conditional answers simplified away 
case answers unsupported see example 
definition supported answers forest root goal tree supported iff 
completely evaluated 
exists answer context positive delayed literal dl supported definition abdual operations fn abdual forest evaluation query abductive framework hp ii suppose successor ordinal 
fn may produced operations 
new subgoal fn contain non root node assume fn contains tree root goal add tree fg js 
program clause resolution fn contain root node 
fg js program clause body 
assume fn child child 
fg add child child 
answer clause resolution fn contain non root node 
dl jg body suppose fn contains answer node dl consistent 
dl dl dl empty dl dl 
assume fn child child 
dl add child child 
delaying fn contain non root leaf node 
context body abducible fn contains tree answer form fg add context child 
simplification 
node tree root goal delayed literal dl 
ffl fn contains unconditional answer node consistent dl dl gamma child 
dl descendent add child child ffl tree completely evaluated contains answers non supported create child fail 
unfounded set removal unfounded set union consistent union contexts answers 
create child child 
union 
abduction 
context body abducible suppose context consistent 
assume fn child child 
context add child child definitions abdual bear similarity slg see section 
theorem hp ii abductive framework extended program set extended integrity rules 
abdual evaluation ffl final forest fi ffl query set answer fi oe hp set ii abductive solution ffl hp set ii minimal abductive solution query set answer fi finite termination complexity abdual extended programs termination abdual evaluations characterized theorem 
theorem hp ii abductive framework finite ground extended programs finite set abducibles 
abdual evaluation query reach final forest finite number abdual operations 
known problem query evaluation abductive frameworks np complete frameworks entailment founded semantics 
special case abductive framework reduces extended normal program abdual evaluate queries polynomial data complexity definition recall 
definition intension program consists rules non empty bodies extension pe consists rules body empty 
data complexity computational complexity deciding answer ground atomic query function size pe theorem extended program hp abductive framework ground instantiation finite 
abdual evaluation non abductive query final forest fi fi constructed time polynomial jp proofs theorems provided full version available www cs sunysb edu 
construction generalized stable models abdual valued abductive frameworks section semantics abduction generalized stable models provide important alternative 
shown abductive framework section expressive power generalized stable models 
section reformulate results show abdual evaluate abductive queries generalized stable models 
allowing positive literals inferred abduction abdual construct partial stable interpretations definition 
choosing appropriate integrity constraints interpretations constrained consistent total 
adapting concept generalized stable model terminology section 
definition generalized partial stable interpretation model oe scenario oe hp ii abductive framework 
generalized partial stable interpretation hp ii ffl partial stable interpretation pb ffl false 
addition answer set pb oe generalized stable model hp ii 
generalized stable models computed adding additional program rules abducibles integrity constraints abductive frameworks computing solution frameworks definition 
definition hp ii abductive framework 
objective literal abd new objective literal hp body rule shadow rule rule shadow body abd literal form body hp replaced abd 
corresponding shadow rules shadow constraints shadow form abd abd abd abd 
consistency constraints consist consist integrity rules form abd abd totality rules total form hp applying transformations definition allows abdual compute 
theorem hp ii abductive scenario set shadow rules shadow abd 
generalized partial stable interpretation hp ii iff exists abductive solution shadow shadow oe 

generalized stable model hp ii iff exists abductive solution shadow shadow consist total oe 
theorem implications 
paraconsistent founded model program partial stable interpretation shadow program constraints includes computation paraconsistent founded model special case 
addition theorem states abdual query evaluation abductive frameworks abdual compute generalized partial stable interpretations generalized stable models 
cost computation course includes cost potentially evaluating shadow rules various additional integrity constraints 
known problem deciding answer ground query abductive framework npcomplete entailment method founded semantics problem deciding abductive framework generalized stable model 
lack polynomial data complexity abdual arbitrary abductive frameworks understandable power frameworks 
discussion meta interpreter abdual application diagnosis preliminary meta interpreter abdual written xsb system available www cs sunysb edu 
meta interpreter termination property theorem complexity property theorem 
underway xsb system unfounded set removal operation implemented engine level complexity results theorem attained 
abdual originally motivated desire implement psychiatric diagnosis 
knowledge psychiatric codified dsm iv sponsored american psychiatric association 
knowledge dsm iv represented directed graph positive links represent relations diagnoses sub diagnoses symptoms 
graphs negative links called exclusion links represent symptoms diagnoses shown false order derive diagnosis 
dsm iv graph requires abduction non stratified negation seen considering diagnosis adjustment disorder pg 

criterion diagnosis consequences terminated symptoms persist additional months 
diagnose patient presently undergoing adjustment disorder physician hypothesize events step naturally modeled abduction 
adjustment disorder requires exclusion criterion stress related disturbance meet criteria specific axis disorder merely preexisting axis axis ii disorder 
admits possibility loop negation adjustment disorder diagnosis 
fact occur instance alzheimer dementia pg 

far physician tell patient fulfills criteria adjustment disorder criterion criteria alzheimer criterion disturbance better accounted disorder physician essentially faced situation patient adjustment disorder alzheimer dementia alzheimer dementia patient adjustment disorder 
unclear situation envisioned dsm iv committees model physician situation 
physician provisional diagnosis adjustment disorder revision beliefs alzheimer dementia alternatively physician choose adjustment disorder mechanism argumentation semantics 
begun abdual implement psychiatric diagnosis commercial system developed abdual interpreter mentioned 
comparisons methods dual programs compute founded semantics normal programs introduced method limitations compared abdual handle abduction explicit negation exponential complexity queries 
definitions abdual derived slg reformulated computes queries normal programs founded semantics 
normal programs abdual shares finite termination complexity properties slg 
abdual adds capability handle abduction dual transformation extended programs unfounded set removal operation abdual allow evaluation non ground program slg 
unfortunately performance tradeoffs abdual slg available due lack engine level implementation unfounded set removal operation abdual 
main contribution abdual incorporation abduction 
aware efforts added abduction tabling method 
tabling responsible termination complexity results sections 
furthermore abdual evaluations confluent sense theorem holds ordering applicable abdual operations 
complexity termination wfs distinguishes abdual approaches iff proof procedure sldnfa 
approaches allow variables rules abdual 
methods compute abductive explanation form valued rule completion non abducible predicates clark completion called transaction programs 
similar dual program methods abductive explanations computed part completion bottom fashion 
methods severe restriction class programs apply generally acyclic programs 
restriction due completion 
contrast abdual founded semantics impose restriction cycles programs 
generalizing abdual programs variables generalizing abdual non ground covered programs ground queries difficult task clark completion consider rule heads free variables explicitly represent unifications body dual obtained rules usual negation 
allowing non ground queries covered programs obtained considering abducibles terms form adding appropriate method verifying consistency sets inequalities 
difficult step order fully generalize abdual deal non ground programs abandon restriction covered programs 
free variables body program rules introduce universally quantified variables body rules dual program problem similar floundering normal programs 
underway generalize abdual deal non ground programs constructive negation methods 
practical advantage abdual allows easy propagation abducibles positive negative literals 
abductive answer returned abductive subgoal contexts immediately checked consistency regardless subgoal positive negative regardless levels negation needed produce answer 
note dual non abducible predicates acyclic programs completion 
program covered iff variables appearing body rules appear corresponding head 
partially supported nsf ccr eia int 
authors praxis xxi projects mental nsf project reap support 
alferes dam asio pereira 
logic programming system non monotonic reasoning 
journal automated reasoning 
chen warren 
tabled evaluation delaying general logic programs 
jacm january 
console torasso 
relationship abduction deduction 
journal logic computation 
dam asio 
paraconsistent extended logic programming constraints 
phd thesis univ nova de lisboa 
dam asio pereira 
abduction valued extended logic programs 
lpnmr pages 
springer verlag 
denecker de schreye 
sldnfa abductive procedure normal abductive programs 
jicslp pages 
mit press 
diagnostic statistical manual mental disorders 
american psychiatric association washington dc th edition 
prepared task force dsm iv committees groups american psychiatric association 
thomas eiter georg gottlob nicola leone 
abduction logic programs semantics complexity 
theoretical computer science december 
fung kowalski 
iff proof procedure abductive logic programming 
journal logic programming 
inoue sakama 
computing extended abduction transaction programs 
annals mathematics artificial intelligence 
appear 
kakas kowalski toni 
abductive logic programming 
journal logic computation 
kakas mancarella 
generalized stable models semantics abduction 
ecai pages 
morgan kaufmann 
lloyd 
foundations logic programming 
springer verlag berlin germany 
pereira apar icio alferes 
derivation procedures extended stable models 
international joint conference artificial intelligence 
przymusinski 
logic program natural stratification iterated fixed point model 
acm pods pages 
acm press 
swift 
new formulation tabled resolution delay 

available www cs sunysb edu 
van gelder ross schlipf 
unfounded sets founded semantics general logic programs 
jacm 
