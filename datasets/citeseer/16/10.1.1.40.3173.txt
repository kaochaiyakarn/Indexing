siggraph orlando july computer graphics proceedings annual conference series bottle neck cloth simulation systems time steps small avoid numerical instability 
describes cloth simulation system stably take large time steps 
simulation system couples new technique enforcing constraints individual cloth particles implicit integration method 
simulator models cloth triangular mesh internal cloth forces derived simple continuum formulation supports modeling operations local anisotropic stretch compression unified treatment damping forces included 
implicit integration method generates large sparse linear system time step solved modified conjugate gradient method simultaneously enforces particles constraints 
constraints maintained exactly independent number conjugate gradient iterations typically small 
resulting simulation system significantly faster previous accounts cloth simulation systems literature 
keywords cloth simulation constraints implicit integration physically modeling 
physically cloth animation problem interest graphics community decade 
early terzopoulos terzopoulos fleischer deformable models correctly characterized cloth simulation problem deformable surfaces applied techniques mechanical engineering finite element communities problem 
research groups notably volino breen eberhardt taken challenge cloth 
specific details vary underlying representations numerical solution methods collision detection constraint methods deep commonality approaches physically cloth simulation formulated time varying partial differential equation discretization numerically solved ordinary differential equation 
equation vector diagonal matrix represent geometric state mass distribution cloth scalar func author affiliation september david baraff andrew witkin animation studios west cutting blvd richmond ca 
email deb com aw com 
electronic reprint 
permission granted copy part noncommercial provided title copyright notice appear 
electronic reprint cmu 
original printed acm 
large steps cloth simulation david baraff andrew witkin robotics institute carnegie mellon university tion yields cloth internal energy function describes forces air drag contact constraint forces internal damping acting cloth 
describe cloth simulation system faster previously reported simulation systems 
system faster performance begins choice implicit numerical integration method solve equation 
reader note implicit integration methods cloth simulation far novel initial terzopoulos applied methods problem 
time research cloth simulation generally relied explicit numerical integration euler method runge kutta methods advance simulation case energy minimization analogous methods steepest descent 
unfortunate 
cloth strongly resists stretching motions comparatively permissive allowing bending shearing motions 
results stiff underlying differential equation motion 
explicit methods ill suited solving stiff equations require small steps stably advance simulation forward time 
practice computational cost explicit method greatly limits realizable resolution cloth 
applications required spatial resolution dimension state vector quite low resolution particles nodal points depending formulation terminology sufficient comes modeling flags 
animate clothing main concern requires higher spatial resolution adequately represent realistic semi realistic folding configurations 
demonstrate implicit methods cloth overcome performance limits inherent explicit simulation methods 
describe simulation system uses triangular mesh cloth surfaces eliminating topological restrictions rectangular meshes simple versatile formulation internal cloth energy forces 
previous metric tensor formulations model deformation energies quartic functions positions model deformation energies quadratic functions suitably large scaling 
quadratic energy models mesh implicit integration numerical properties 
introduce simple unified treatment damping forces subject largely ignored far 
key step simulation process solution sparse linear system arises implicit integration method 
respect implementation differs greatly implementation terzopoulos large simulations additional implicit methods animation dynamics includes kass miller terzopoulos qin tu 
worse number time steps frame tends increase problem size explicit method 
cloth simulations size meaning ir generally require explicit steps unit simulated time 
cost explicit step setting aside complications collision detection explicit methods cloth require time worse 
siggraph orlando july computer graphics proceedings annual conference series alternating direction implicit adi method 
adi method generates series tightly banded quickly solved linear systems large sparse system 
price forces system notably diagonally adjacent non adjacent nodes involved self collisions treated explicitly implicitly 
speed ease sparse linear systems robustly solved systems involving variables convinced benefit gained adi method adi methods applied irregular triangular meshes 
regardless simulation size treat forces part implicit formulation 
extremely stiff systems numerical stability issue simulator 
specific contributions performance system stems development implicit integration formulation handles contact geometric constraints direct fashion 
specifically simulator enforces constraints introducing additional penalty terms energy function adding lagrange multiplier forces force 
sort direct constraint treatment trivial equation integrated explicit techniques problematic implicit methods 
formulation directly imposing maintaining constraints harmonious extremely fast iterative solution algorithm modified version conjugate gradient cg method solve linear system generated implicit integrator 
iterative methods general solve linear systems exactly run solution error drops tolerance threshold 
property approach constraints maintained exactly regardless number iterations taken linear solver 
additionally introduce simple method tailored cloth simulation dynamically adapting size time steps course simulation 
combination implicit integration direct constraint satisfaction powerful approach allows take large steps forward 
general simulations require average time steps frame hz animation relatively fast moving cloth 
large step sizes complement fact cg solver requires relatively iterations converge 
example simulating node system solver takes iterations solve linear system formed step 
additionally running time simulator remarkably insensitive cloth material properties quite opposite behavior explicit methods 
advantages translate directly fast running time 
example demonstrate results similar breen eberhardt node cloth running time just seconds frame sgi octane mhz processor 
similarly show shirts pants exhibiting complex folding behavior key framed motion captured characters 
representative running times include long nodes triangles dancing character cost seconds frame shirt nodes triangles cost varying seconds frame depending underlying character motion 
previous terzopoulos discretized cloth rectangular mesh 
energy functions derived continuum formulation 
recognized need damping forces simple viscous drag force 
linear systems result ing implicit integration techniques solved small systems direct methods factorization iterative techniques gauss seidel relaxation conjugate gradients 
square system nodes resulting linear system bandwidth case banded factorization requires time 
previously discussed terzopoulos adi method larger cloth simulations 
terzopoulos treatment deformable surfaces described cloth simulation system rectangular discretization formulation terzopoulos explicit integration 
recognized need damping functions penalize motions cloth simple viscous damping added force cloth stretch shear bend 
group includes volino focuses mainly collision detection response uses triangular mesh mention damping forces 
system uses midpoint method explicit method advance simulation 
far accumulated group see volino overview gives published results know simulated moving characters 
reported resolutions approximately triangles garment roughly nodal points running times minutes frame garment sgi mhz processor 
breen depart completely continuum formulations energy function describe call approach problem 
making real world cloth material properties measuring system produced highly realistic static images rectangular cloth meshes reported resolutions nodes 
focus static poses cloth opposed animation simulation process best described energy minimization methods analogous explicit methods 
speed secondary concern 
refinements eberhardt notably higher order explicit integration methods maple optimized code dynamic static treatment problem obtain similarly realistic results dropping computational cost approximately minutes frame sgi processor 
mention damping terms 
provot focuses improving performance explicit methods post step modification nodal positions 
iteratively adjusts nodal positions eliminate unwanted stretch convergence properties method unclear 
comprehensive discussion cloth research survey ng 
simulation overview section give brief overview simulator architecture introduce notation 
section derives linear system step simulator forward implicitly section describes specifics internal forces derivatives form linear system 
section describes constraints maintained established discussion section collision detection constraint initialization 
section describes adaptive step size control conclude section simulation results 
notation geometry simulator models cloth triangular mesh particles 
particles position world space ith particle xi ir geometric state particles simply ir siggraph orlando july computer graphics proceedings annual conference series component notation applies forces force ir acting cloth exerts force fi ith particle 
real world cloth cut flat sheets material tends resist deformations away initial flat state creases 
capture rest state cloth assigning particle unchanging coordinate ui vi plane 
section planar coordinates 
collisions cloth solid objects handled preventing cloth particles solid objects 
current implementation models solid objects faced polyhedra 
face associated thickness orientation particles sufficiently near face wrong side deemed collided face subject contact constraint 
relative velocities extremely high simple test may collisions 
case analytically checking intersection previous current positions guarantee collisions missed 
cloth cloth collisions detect face vertex collisions cloth particles triangles edge edge collisions portions cloth 
case solids close proximity actual intersection cloth initiates contact handling 
energy forces critical forces system internal cloth forces impart cloth characteristic behavior 
breen describes system measurement realistic determination plane shearing plane bending forces cloth 
call forces shear bend forces 
formulate shear force triangle basis bend force formulated edge basis pairs adjacent triangles 
strongest internal force call stretch force resists plane stretching compression formulated triangle 
normal conditions cloth stretch appreciably weight 
requires stretch force high coefficient stiffness fact stretch force responsible stiffness equation 
common practice explicitly integrated cloth systems improve running time decreasing strength stretch force leads cloth 
system uses stiff stretch force combat problem detrimental effects run time performance 
shear bend force stiffness coefficients depend material simulated stretch coefficient essentially large value simulations 
course cloth specifically called stretch coefficient smaller 
complementing internal forces damping forces 
section formulate damping forces subdue oscillations having respectively stretching shearing bending motions cloth 
damping forces dissipate energy due modes motion 
additional forces include air drag gravity user generated generated mouse forces interactive simulations 
cloth cloth contacts generate strong repulsive linear spring forces cloth particles 
combining forces net force vector acceleration xi ith particle simply xi fi mi ith particle mass mass mi determined summing third mass general particle unique coordinate accommodate pieces cloth topologically sleeve particles lying seam multiple coordinates 
particles coordinate depend triangle currently examining 
coordinates useful texturing 
triangles containing ith particle 
triangle mass product cloth density triangle fixed area uv coordinate system 
defining diagonal mass matrix ir diag mn mn mn write simply sparse matrices 
implicit integration method described section generates large sparse linear systems 
solve systems modified conjugate gradient cg iterative method described section 
cg methods exploit sparsity quite easily solely matrix vector multiplies require rudimentary sparse storage techniques 
sparsity matrix generated implicit integrator best represented block fashion system particles deal matrix non zero entries represented dense matrices scalars 
matrix represented array rows row linked list non zero elements row accommodate possible run time changes sparsity pattern due cloth cloth contact 
dense vectors multiplied matrix stored simply element arrays vectors 
implementation sparsity completely straightforward 
constraints individual particle position velocity completely controlled dimensions 
particles attached fixed moving point space constrained fixed moving surface curve 
constraints user defined time period constraint active user controlled automatically generated case contact constraints cloth solids 
cloth solid contacts particle may attached surface depending magnitudes frictional forces required particle constrained remain surface sliding allowed 
mechanism releasing contact constraint switching sliding sliding described section 
constraint techniques individual particles just collections particles handle cloth cloth intersections technique described section cost potentially large 
reason chosen deal cloth cloth contacts penalty forces particle near cloth triangle detected passed cloth triangle add stiff spring damping pull particle back correct side triangle 
implicit solver easily tolerates stiff forces 
implicit integration known position velocity system time goal determine new position velocity time compute new state velocity implicit technique transform equation order differential equation 
accomplished simply defining system velocity writing dt dt 
simplify notation define 
define 
siggraph orlando july computer graphics proceedings annual conference series explicit forward euler method applied equation approximates force defined 
previously discussed step size quite small ensure stability method 
implicit backward euler method appears similar approximated 
difference methods forward method step solely conditions time backward method step written terms conditions terminus step 
forward method requires evaluation function backward method requires solve values satisfy equation 
equation nonlinear equation solve equation exactly require iteration apply taylor series expansion firstorder approximation equation derivative evaluated state similarly substituting approximation equation yields linear system 
bottom row equation substituting yields hm letting denote identity matrix regrouping ob tain hm hm solve trivially compute 
backward euler step consists evaluating forming system equation solving system updating sparse data structures described section store linear system 
sparsity pattern equation described section solution techniques deferred section 
method called backward euler starting output state forward euler step run system backward time step brings back 
value 
forward euler takes notice wildly changing derivatives proceeds forward quite blindly 
backward euler forces find output state derivative points back came essentially additional layer consistency sanity checking 
forces cloth material behavior customarily described terms scalar potential energy function force arising energy equation requires vector matrix expressing energy single monolithic function encompassing aspects cloth internal behavior derivatives impractical bookkeeping point view 
better approach decompose sum sparse energy functions write depends elements particles possible 
decomposing sparse energy functions 
energy functions undesirable starting point sensible damping functions derived energy functions 
define internal behavior formulating vector condition want zero defining associated energy stiffness constant 
section show sensible damping functions constructed formulation 
added bonus starting vector energy description tends result simpler compact easily coded formulation proceeding energy function structure lost 
forces force derivatives condition want zero associate energy function ec writing ec stiffness constant choice 
assuming depends particle gives rise sparse force vector recall section view vector block form element fi vector ir particle depends fi ec xi xi elements zero 
similarly derivative sparse 
defining derivative matrix nonzero entries kij pairs particles depends 
treat block fashion ir matrix 
equation kij fi xi 
xi additionally kij second derivative kij fi xi kij kt ji symmetric 
note depend matrix zero 
easily describe internal forces acting cloth just writing condition functions 
forces derivatives easily derived equations 
stretch forces recall cloth particle changing position xi world space fixed plane coordinate ui vi 
cloth modeled discrete set points grouped triangles convenient pretend momentarily single continuous function maps plane coordinates world space 
stretch measured point cloth surface examining derivatives wu wv point 
magnitude wu describes stretch compression direction material wu 
stretch siggraph orlando july computer graphics proceedings annual conference series direction measured wv 
previous continuum formulations modeled stretch energy axis essentially wt wu quartic function position 
find needlessly stiff worse near rest state force gradient quadratic function position quite small partially negates advantage implicit integration exploiting knowledge force gradient 
quadratic model energy numerically better choice 
apply stretch compression measure triangle follows 
consider triangle vertices particles define xi xk xi 
ui uk ui similarly 
approximate linear function triangle equivalent saying wu wv constant triangle 
lets write wu wv wu wv 
solving wu wv yields wu wv 
note vary simulation matrix equation 
treat wu wv functions realizing depend xi xk equation obtain deriva tives 
condition stretch energy wu bu wv bv triangle area uv coordinates 
usually set bu bv need 
particular want slightly lengthen garment example sleeve direction increase bu causes wu seek larger value tends induce wrinkles direction 
likewise decrease bv near sleeve inducing tight cuff 
ability control shrink stretch indispensable modeling tool 
shear bend forces cloth likewise resists shearing plane 
measure extent cloth sheared triangle considering inner product wv 
rest state product zero 
stretch term prevents magnitudes wu wv changing overly need normalize 
small angle approximation product wv reasonable approximation shear angle 
condition shearing simply wv triangle area uv plane 
measure bend pairs adjacent triangles 
condition write bend energy depends particles defining adjoining triangles 
denote unit normals triangles unit vector parallel common edge angle faces defined relations sin cos 
condition bending writing simply results force counters bending 
assumption stretch energy keep cloth stretching allows treat reasonably equilateral triangles edge lengths decrease curvature represented particular angle triangles increases 
square curvature measure bend energy cloth increases rate triangle area decreases condition scaled triangles areas 
see breen discussion relating curvature bend angle 
having constant length step simulation 
differentiating respect manageable task 
rectangular meshes simple treat bending 
uv coordinates associated particles possible triangular meshes 
material bending directions weighted ku kv emulate anisotropy follows 
edge triangles particles define ui vi stiffness weighting edge simply additional forces ku kv forces add easily implemented forces gravity air drag formulated triangle basis opposes velocities triangle normal direction 
simulation fast interact add user controlled mouse forces 
forces gradients easily derived 
damping energies just described functions position 
robust dynamic cloth simulation critically dependent chosen damping forces function position velocity 
example strong stretch force accompanied suitably strong damping force prevent anomalous plane oscillations arising connected particles 
strong damping force confine solely damping plane stretching compressing motions stretch damping arise due motions causing stretch compression 
terzopoulos treatment cloth simple viscous damping function dissipated kinetic energy independent type motion 
improved somewhat borrowing formulation due platt barr damping function linear function velocity match quartic energy functions continuum formulation 
section describe general treatment damping independent specific energy function damped 
tempting formulate damping function energy func tion measuring velocity energy dt 
easy trap fall gives nonsensical results 
equilibrium point gradient vanishes 
minimum regardless system velocity general small near system rest state 
clearly basing damping force want 
believe damping function defined terms energy terms condition define energies 
force arising energy acts direction damping force 
additionally damping force depend component system velocity direction words damping strength depend 
putting propose damping force associated condition form kd 
neatly parallels fact ks 
siggraph orlando july computer graphics proceedings annual conference series condition functions defined section stretch bend shear forces add accompanying damping forces applying equation 
di nonzero particles depends sparsity pattern differentiating equation obtain di kd xi 
xi note second derivative function case equation expect symmetrical 
equation term xi breaks symmetry 
anticipating section find expedient simply leave term restoring symmetry 
simplification clearly physically justifiable observed ill effects omission 
omitting equation causes serious problems 
equation requires derivative tv wehave fact write di kd kd xi xi case result symmetrical dropping terms 
constraints section describe constraints imposed individual cloth particles 
constraints discuss section automatically determined user geometric attachment constraints particle contact constraints generated system solid object particle 
techniques describe section multi particle constraints constraints share particle need merged 
set particle constraints vertex triangle edge edge contacts cloth merge form single constraint arbitrarily particles expensive maintain 
handle cloth cloth contacts strong springs easily dealt simulator underlying implicit integration base position alteration technique described section 
step simulation cloth particle completely unconstrained subject forces particle may constrained dimensions 
differential nature formulation particle acceleration equivalently change particle velocity constrained 
particle constrained dimensions explicitly setting particle velocity step 
constraint dimensions constraining particle velocity mutually orthogonal axes 
describing constraint method discuss possible enforcement mechanisms explain chose 
reduced coordinates obvious quite exact method constraining particle reduce number coordinates describing particle position velocity 
completely constrained particle coordinates particle dimension constraint coordinates 
possible complicates system immensely 
change number coordinates particle alter size derivative matrices equation sparsity pattern happens particle changes having coordinates coordinates vice versa 
transient nature contact constraints cloth solids unappealing 
computation derivative matrices entries greatly complicated introduce extra jacobian matrices relate particle reduced coordinates motion world space 
correct constraint release behavior cloth solid objects difficult achieve reduced coordinate formulation 
considering immediately rejected method constraints 
penalty methods constrain particles strong energy functions essentially stiff springs attempt prevent illegal particle motions 
entire formulation geared handle stiffness usual objections enforcing constraints springs stiff equations carry weight 
tried time unreasonable constraint enforcement mechanism 
penalty methods enforce constraints exactly add additional stiffness system 
mechanism describe enforces constraints exactly adds extra stiffness turned away penalty methods case cloth cloth interactions 
lagrange multipliers introduce additional constraint forces lagrange multipliers system satisfy constraints 
involves augmenting linear system equation extra variables multipliers extra equations constraint conditions 
unfortunately turns positive definite system indefinite system means iterative methods cg need square system doubling running time degrading numerical linear system 
additionally iterative method generally enforce constraints exactly large number iterations 
direct method solving augmented system avoid problem 
constraint method describe steps past difficulties turned away lagrange multipliers 
mass modification idea constraint enforcement mechanism described quite simply actual implementation somewhat complicated maximize performance 
dynamic simulation usually requires knowledge inverse mass objects example note appearance equation 
case single particle write xi fi describe particle acceleration 
inverse mass trivial enforce constraints altering mass suppose example want keep particle velocity changing 
take mi zero give particle infinite mass making ignore forces exerted 
complete control particle acceleration taken care storing value zero particle inverse mass wish constrain particle acceleration dimensions 
normally think particle mass scalar need 
suppose write xi fi 
xi mi siggraph orlando july computer graphics proceedings annual conference series lie xy plane acceleration direction possible 
note unconstrained particle considered inverse mass matrix identity matrix 
mi course restricted coordinate aligned constraints 
generally unit vector ir particle prevented accelerating inverse mass matrix mi ppt follows fact ppt 
similarly mutually orthogonal unit vectors prevent particle accelerating direction inverse mass matrix pp mi 
allowing constrained particles sorts inverse masses build constraints directly equation 
create modified version block diagonal matrix diagonal blocks zero diagonal blocks defined follows indicate number degrees freedom particle particle prohibited directions pi pi qi pi qi mu orthogonal unit vectors 
diagonal blocks wii si si pip 
limited constraining particles zero accelerations certain directions control exactly change velocity constrained directions 
particle change velocity wish enforce particle constrained direction 
implies choose value zi completely constrained particle directions constrained unconstrained particle zi constrained directions 
rewrite equation directly enforce constraints 
solve hw hw obtain consistent constraints 
completely constrained particles vi zi partially constrained particles vi component constrained direction equal zi 
implementation initially implemented constraints equation worked exactly advertised 
small test systems solved equation direct method gaussian elimination problems 
larger systems planned iterative sparsity exploiting cg method immediately presents problem equation symmetric linear system 
matter equation particles mass cg methods require symmetric matrices 
apply cg method unsymmetric matrix equation normal equations involves multiplying matrix equation transpose doubles cost iteration squaring condition number system desirable plan 
decided cg method solve unsymmetric problem acceptable 
note constraints applying cg method equation difficult transform equation fact best positive definite symmetric matrices 
matrices ultimately hand cg method positive definite 
symmetric positive definite system left multiplying entire equation system symmetric solution equation 
unfortunately apply transformation equation singular filtering blocks equation rank deficient multiply solution problem asymmetry modify cg method operate equation procedurally applying constraints inherent matrix iteration 
modified method need know particles constraints vector define symmetric positive definite matrix vector residual vector constraints particles modified cg method try find satisfies conditions particle component ri particle unconstrained direction equal zero assuming method run sufficiently iterations 
particle component vi particle constrained direction exactly zi matter iterations taken 
note conditions imply unconstrained particles ri close zero completely constrained particles vi zi 
case particles constrained modified cg method produce result regular cg method 
modified conjugate gradient method cg method technically preconditioned cg method takes symmetric positive semi definite matrix symmetric positive definite preconditioning matrix dimension vector iteratively solves iteration stops user defined tolerance value 
preconditioning matrix easily invertible speeds convergence extent approximates refer reader shewchuk information cg method 
derive modified conjugate gradient method observing effect matrix equation filter velocity changes constrained directions 
idea define invariant component vi constrained direction particle equal zi establish maintain invariant iteration defining filtering procedure filter 
role filter take vector perform filtering operation see equation multiplying leaving scaling mi procedure filter return siggraph orlando july computer graphics proceedings annual conference series filter define modified cg method modified pcg follows procedure modified pcg filter filter filter new new filter ac new old new new filter new old line procedure establishes invariant 
lines maintain invariant filtering adding unmodified conjugate gradient method establishes stopping criterion pb 
constrained formulation ignores certain components stopping criterion add filtering line 
vector measures solution error include error due constraints add filtering lines 
note removing calls filter changing line yields standard preconditioned conjugate gradient method 
simple preconditioner making diagonal matrix pii aii products involving trivially computed 
elaborate preconditioners doubt large speedup gained 
matrix vector products course implemented sparse matrix vector fashion data structures defined section 
modified pcg obvious questions followed compare unmodified cg method proofs cg methods difficult general practice method converges answers question 
prior implementing modified pcg penalty method applied standard cg method equation 
began procedure modified pcg notice substantial change number iterations required method 
empirically conclude methods similar convergence behavior 
result section indicate running time close unmodified cg expected deliver sort problem 
determining constraint forces contact constraints cloth solid objects need know actual force constraint order determine terminate constraint 
additionally need know constraint force exerted order model frictional forces properly 
fortunately easy add step modified pcg determine constraint force 
modified pcg terminates residual error property ei need close zero particle constrained 
fact ei exactly extra constraint force supplied enforce constraint 
compute constraint forces modified pcg performing product compute 
vector modified pcg equal filter extra matrix vector product compute really necessary 
particles accelerations inherently dependent matrix equation 
means correct approach constraint release combinatoric baraff 
reject approach impractical dimension allow contacts release constraint force particle solid switches repulsive force attractive 
practice proven 
friction presents similar problem 
cloth contacts solid lock particle surface relative tangential velocity low 
monitor constraint force tangential force exceeds fraction normal force allow particle slide surface 
high sliding velocities apply dissipative tangential force opposite relative sliding direction proportional normal force 
collisions written collision detection cloth substantial add subject collision detection se 
cloth cloth collisions detected checking pairs intersections cloth particle cloth triangle respectively edges cloth triangles 
previous known legal state cloth postulate linear motion cloth particles current possibly illegal state check particle triangle edge edge crossings 
avoid comparisons coherency approach cull majority pairs 
collisions cloth vertex triangle cloth edges detected insert strong damped spring force push cloth apart 
dissipative force tangent contact applied countering sliding motion 
force strictly speaking frictional force proportional slip velocity actuality damping force reasonably emulates dynamic friction 
applying static friction forces cloth contacts far difficult problem solved 
forces derivatives respect position velocity course included equation 
system detects collisions cloth particles solid objects testing individual cloth particle faces solid object 
solid object faces grouped hierarchical bounding box tree leaves tree individual faces solid 
tree created simple recursive splitting coordinate axes 
maintenance contacts application friction forces described previous section 
constraint initiation cloth cloth cloth solid collisions give rise problem contacts form 
types collisions detection algorithm reports intersection takes action remedy situation enforcing constraint cloth solid collisions adding penalty force cloth cloth collisions 
simulator proceeds discrete steps collisions resulting reasonably substantial interpenetration depth occur step 
clearly situation needs remedied 
cloth cloth collisions appear problem spring forces added counter colliding velocities push cloth apart 
cloth solid collisions situation complicated 
simply enforce constraint causes colliding cloth particle velocity consistent solid object velocity continue enforce constraint cloth particle continue remain embedded solid object surface 
unacceptable 
siggraph orlando july computer graphics proceedings annual conference series solution stabilization schedules particle acceleration position velocity error particle respect surface decay asymptotically zero 
experimented technique lacking 
particular fast rise surface prone noise eliminated cost decreasing step size 
slower rise surface caused visual artifacts 
tried simpler solution intersections occurred wait scheduled constraint penalty force eliminate intersection simply altered positions cloth particles effecting instantaneous discontinuous change position 
problematic multi step differential equation solver expects continuity runge kutta method interfere step solver backward euler method 
unfortunately simply changing particle positions produced disastrous results 
stretch energy term cloth system extremely strong altering particle positions arbitrarily introduced excessively large deformation energies altered particle neighborhood 
resulted visibly behavior cloth localized regions 
position alteration despite initial failure ability arbitrary small changes particle position continued attract attention 
entire process implicit integration considered filtering process postulated mechanism filtering energy changes caused displacing particles position alteration viable technique 
considered sort extra implicit step filter forming solving additional linear system step expensive 
happily filtering effect implicit integration extra 
consider particle collided solid object 
particle change velocity step control constraint techniques described section 
particle position step follows equation xi vi recall particle current velocity 
reason changing positions step taken doesn particle neighbors receive advance notification change position confronted alteration step 
presents obvious solution simply modify top row equation xi vi yi yi arbitrary correction term choice introduced solely move particle desired location backward euler step 
having modified top row equation follow change equation repeating derivation section symmetric transform section yields modified symmetric system 
modification gives complete control position velocity constrained particle just step extra computational cost 
technique bring particles quickly stably surface solid objects creating visual artifacts limiting allowable step size 
add correction terms particles involved cloth cloth collisions 
constraint particles velocities guarantee go exactly want step ability induce sizeable jumps position excessively stiff spring forces adds greatly stability simulation 
adaptive time stepping methods introduced previous sections usually allow take sizeable steps forward loss stability 
times step size reduced avoid divergence 
large number methods altering size time step explicit implicit integrators methods tend concentrate accuracy simulation stability 
goal animation engineering visually pleasing results meaning numerically stable solution accuracy deciding voice 
trick recognize instability see screen late 
stiffness potential instability arises completely strong stretch forces cloth 
implicit step treat resulting proposed change cloth state examine stretch terms section triangle newly proposed state 
triangle undergoes drastic change stretch direction discard proposed state reduce step size try 
subtlety required find unstable step invariably results stretch changes quite large easily detected 
simulation run parameter indicates maximum allowable step size parameter set user equal frame 
simulations involving human motions step size seconds 
simulator reduces step size successes reduced step size simulator tries increase step size 
simulator fails larger step size reduces size waits longer period time retrying increase step size 
limit simulator try increasing step size steps user chooses large step simulator settles wasting steps attempting large step 
method simple served 
results table gives performance summary assorted animations shown figures 
unaccounted overhead simulation typically includes tasks geometry transformations memory allocation clothes figures modeled discrete planar panels topologically 
simulator relax clothing initial deformed state got clothes characters fitting state characters 
bu bv parameters see equation smaller certain regions produce strategically increased induce behavior regions 
ran simulation range bend term 
stiffness parameters ran simulation bend multiplied total range stiffness 
variance running times 
doubt simulators explicit integration methods similar claim 
tried estimate simulator performance function number cloth particles 
ran simulation cloth resolutions shown particles 
running times respectively seconds frame seconds frame seconds frame seconds frame 
slightly better performance line convergence rates conjugate gradient method systems equation 
siggraph orlando july computer graphics proceedings annual conference series 
vertices triangles time frame step size total frames task breakdown percentage cloth solid cpu sec 
min max ms total steps eval cg shirt pants table system performance simulations figures 
minimum maximum time steps milliseconds simulation time 
time frame indicates actual cpu time frame averaged simulation 
percentages total running time tasks eval forming linear system equation cg solving equation cloth cloth collision detection cloth solid collision detection 
acknowledgments research supported part onr young investigator award nsf career award intel 
alias wavefront supplying models motion capture data figures 
baraff 
dynamic simulation non penetrating rigid bodies 
phd thesis cornell university may 
baraff 
fast contact force computation rigid bodies 
computer graphics proc 
siggraph 
breen house 
predicting woven cloth interacting particles 
computer graphics proc 
siggraph pages 
yang thalmann thalmann 
dressing animated synthetic actors complex deformable clothes 
computer graphics proc 
siggraph pages 
eberhardt weber 
fast flexible particle system model cloth 
ieee computer graphics applications 
golub van loan 
matrix computations 
john hopkins university press 
kass 
physically modeling chapter continuum dynamics computer graphics 
siggraph course notes acm siggraph 
kass miller 
rapid stable fluid dynamics computer graphics 
computer graphics proc 
siggraph pages 
ng 
computer graphics techniques modeling cloth 
ieee computer graphics applications 
okabe 
dimensional apparel cad system 
computer graphics proc 
siggraph pages 
platt barr 
constraint methods flexible models 
computer graphics proc 
siggraph volume pages 
acm july 
press flannery teukolsky vetterling 
numerical recipes 
cambridge university press 
provot 
deformation constraints mass spring model describe rigid cloth behavior 
graphics interface pages 
shewchuk 
conjugate gradient method pain 
technical report cmu cs tr carnegie mellon university 
see www cs cmu edu quake papers painless conjugate gradient ps 
terzopoulos fleischer 
deformable models 
visual computer 
terzopoulos fleischer 
modeling inelastic deformation plasticity fracture 
computer graphics proc 
siggraph volume pages 
acm august 
terzopoulos platt barr 
elastically deformable models 
computer graphics proc 
siggraph 
terzopoulos qin 
dynamics nurbs geometric constraints interactive sculpting 
acm transactions graphics 
tu 
artificial animals computer animation biomechanics locomotion perception behavior 
phd thesis university toronto may 
volino magnenat thalmann 
versatile efficient techniques simulating cloth deformable objects 
computer graphics proc 
siggraph pages 
volino magnenat thalmann thalmann 
evolving system simulating clothes virtual actors 
ieee computer graphics applications 
siggraph orlando july computer graphics proceedings annual conference series top row cloth cylinder frames 
second row sheet fixed particles frames 
third row shirt twisting frames 
bottom row walking man frames 
siggraph orlando july computer graphics proceedings annual conference series top row dancer short frames 
middle row dancer long frames 
bottom row figures 

