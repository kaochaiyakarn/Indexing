gene structure prediction linguistic methods shan dong david department genetics university pennsylvania school medicine curie boulevard philadelphia pa usa appear genomics higher order structure genes features biological sequences described means formal grammars 
grammars general purpose parsers detect assemble structures means syntactic pattern recognition 
describe grammar parser eukaryotic protein encoding genes measures effective current connectionist combinatorial algorithms predicting gene structures sequence database entries 
parameters grammar rules optimized different species mixing experiments performed determine degree species specificity relative importance compositional signal syntactic components gene prediction 
formal language theory views languages sets strings alphabet specifies potentially infinite languages concise sets rules called grammars 
grammars exceptionally studied methodology familiar computer scientists description complex higher order structures embodied strings symbols 
input general purpose programs called parsers capable determining string satisfies rules grammar 
parser technology extensively developed applied problem searching complex patterns specified grammars large amounts data technique known syntactic pattern recognition 
formidable pattern recognition problem biology recognition protein encoding genes primary sequence data 
traditionally problem recognizing coding sequence variety statistical metrics reviewed 
compositional methods termed gene search content typically produce sample window sequence measure similarity criterion typical sequence data 
commonly compositional measures algorithm measures positional asymmetry tendency base compositions vary systematically position codon frequencies relative frequencies occurrence mer bases coding frame independent frame versus non coding sequences 
methods disadvantage accuracy invariably declines smaller window sizes metrics optimum window size greater mean exon size typical vertebrate gene sets 
new systems grail markedly improved methods combining evidence number connectionist architecture 
approach gene finding involves termed gene search signal recognition specific local binding sites cues processes involved gene expression splice sites 
subtlety degree variation signals means detection uncertain global compositional measures progress front sophisticated statistical machine learning techniques neural networks 
weight matrices widely relatively example means detecting local signals 
number systems including versions grail united compositional signal detection techniques hybrid gene prediction systems evidence combined predict gene structure stretch primary sequence 
gene assembly programs provide information strictly compositional exon finders imposing additional constraints improve performance 
systems built rule architectures 
advances brought focus combinatorial problem assembling testing large sets candidate exons addressed system clustering exons equivalence classes system novel dynamic programming approach see 
systems achieve similar levels performance 
proposed formal grammars assemble gene structures primary sequence time worked build domain specific parser enable grammars versatile reasonably efficient pattern recognition tools 
successfully system called genlang recognition trna genes group introns variety features 
report comprehensive efforts genlang system recognize predict structures eukaryotic protein encoding genes 
methods grammars parsing gene grammars described implemented logic programming language prolog powerful extensible grammar paradigm called definite clause grammar dcg 
dcgs directly translated prolog compilers executable code simple recursive descent parsers 
dcgs offer excellent rapid prototyping environment optimized form search number adaptations course developing genlang parser largely sake efficiency ease grammar development domain dna sequence data 
genlang grammars aug mented hidden parameters additional functionalities lower levels system implemented programming language 
particularly important speedup chart parsing techniques related dynamic programming intermediate results parse subtrees saved re highly nondeterministic parsing chart parsing allows order magnitude speedup grammars described 
details implementation genlang 
significant feature genlang grammars incorporation notion cost 
allow imperfect matching example simple oligonucleotide sequence maximum cost may imposed rule invoked number mismatches allowed 
complicated cost models possible including user defined functions edit distance weight matrix scores see 
costs resulting parse tree summed node parse threshold cost subtree 
allows rules varying context sensitive 
design cost model employed gene parsing task follows 
set rules designated leaf rules chosen members referred directly primary sequence significant units evidence signal compositional measure related presence gene enumerated detail 
grammar elaborated additional set node rules invoked exactly leaf rules node rules 
formal terms core grammar reduced chomsky normal form known context free grammar structured 
resulting parse trees binary 
node rule responsible combining cost lower level rules left right child passing parent 
purpose uniform cost function designed single mixing parameter follows gamma delta delta parameter intended range zero giving full weight left child right shifting weight right child 
associated node rule pair thresholds representing maximum costs allowed left right subtrees respectively 
developing parse tree child node applied span sequence accumulated cost exceeding threshold imposed parent child node said fail 
point grammar backtrack retry child node span sequence allowed grammar 
parse succeeded subtrees assembled satisfy thresholds including top level threshold applied tree 
succeeding grammar backtrack find alternative answers case predicted structure taken minimum top level cost 
surprisingly effectiveness resulting grammars large part determined values assigned mixing threshold parameters finding optimal values parameters major concern 
total cost putative gene calculated directly single formula assembled cost functions may imagined identical results arrived generating putative genes means applying formula repeatedly 
important note application thresholds multiple levels greatly prunes search space provides finer control acceptable subtrees 
fact procedural aspects parse described permit fact require exhaustive search possible gene structures performed 
compositional signal measures noted number compositional measures tendency proposed interrelated greater lesser degree 
chosen frame frequency position asymmetry measured algorithm 
described discussion 
local signals largely detected weight matrices implemented genlang follows 
input special form grammar rule consists table numbers occurrences base type fa tg position set examples drawn aligned consensus sequences length compiled code evaluates candidate sequence fashion optimized rapid parsing 
method proved effective signals described evaluates sequence subarray negative log likelihood function follows cost gamma log gamma log max cost sum negative logs individual base position frequencies normalized base position contributes zero cost 
certain signals improved performance achieved account negative examples done machine learning techniques generally weight matrices 
accomplished dividing frequencies positive examples negatives produce log likelihood ratio 
gene grammars protein encoding gene grammars complex built full detail 
source code documentation available request aspects grammar design appeared 
described core new grammar designed specifically automated optimization gene prediction 
leaf rules leaf rules called linguistic context termed sensors certain gene prediction systems collect variety forms evidence assembly grammar 
constitute leaves eventual parse tree enumerated 
frequencies features compiled gene sets described section 

start codon consensus 
weight matrix cost region extending gamma bp bp putative start translation obligatory atg 
proved effective positive examples drawn authentic starts translation 

atg spacing 
cost inversely proportional distance putative start codon preceding atg sequence 
authentic start sites observed distance greater mean due tendency exclude non start upstream atgs initial exons 

upstream words 
cost inversely proportional average region bp upstream putative start site frequencies occurrence upstream authentic start sites 

exon size 
obligatory open reading frame length putative internal exon cost proportional average exon length divided note penalizes exons short exons longer mean course arise chance parsing 
initial final exons assessed cost wider size variations observed 

coding words 
putative coding region cost inversely proportional score 
score calculated sum logarithms ratios frequency occurrence coding versus non coding regions plus offset insure positive result 

position asymmetry 
putative coding region cost derived algorithm tables probabilities weights calculated individually sets described 

donor consensus 
weight matrix cost region extending gamma putative splice donor obligatory gt 
positive examples confirmed donors negative examples gt containing sequences bp confirmed donors 

donor words 
putative splice donor cost proportional coding words cost frame portion region bp upstream minus region bp downstream plus offset insure positive result 
differential indicative transition sequence 

acceptor consensus 
weight matrix cost region extending gamma putative splice acceptor obligatory ag 
positive examples confirmed acceptors negative examples ag containing sequences bp confirmed acceptors 

acceptor words 
putative splice acceptor cost proportional coding words cost frame portion region bp downstream minus region bp upstream plus offset insure positive result 

exon number 
cost proportional average number exons divided observed putative gene structure 
penalizes genes fewer exons mean rule considered simply establish bias better worse genes greater numbers exons 

splice quality 
cost equal average cost introns entire putative gene encompassing local global measures mixed level intron rule see 

coding quality 
cost equal average cost exons putative gene encompassing local global measures mixed level exon rule 
emphasized effort establish outset relative values leaf rules gene prediction 
costs produced initially scaled roughly order magnitude mixing coefficients determine relative contribution sensor cost level parse goal training regimen described determine posteriori locally optimal mixing coefficients 
example bias larger numbers exons leaf rule proved ill founded poorly formulated cost contributed leaf node presumably mixing coefficient possibly zero training process 
node rules internal nodes grammar represented graphical form 
top level rule gene analogous sentence typical natural language grammars invokes translation termination rule turn invoke lower level node rules leaf rules 
remainder rule recursive right child permits left child rule intron exon pair times necessary 
recursive rules grammar exon rule gathers codons open reading frame included core grammar depicted 
shown escape recursion special rule final intron exon pair 
recursion interesting interpretation cost model described 
entire cost remainder left child intron exon particular top level cost just intron exon pair gene 
level recursion additional intron exon effect treated isolation required meet cost threshold hand cost right children passed meaning eventually just final intron exon intervening intron exon pairs thresholded individually 
cases apply final intron exon additional requirement case consider intermediate mixing parameter values 
cost passed invocation remainder half cost current intron exon plus fourth cost 
threshold individual intron exon pairs threshold apply remaining pairs weighted fashion 
formally top level cost left recursion depth encompassing costs gamma left children final right child shown gamma delta gamma delta delta gene translation initial exon initiation start codon consensus upstream atg spacing upstream words remainder intron exon intron donor acceptor exon exon size coding coding words position asymmetry donor consensus donor words acceptor consensus acceptor words termination exon number exon quality splice quality coding quality graphical depiction core grammar structure roughly corresponding instantiated parse tree gene 
solid lines depict rule invocations dashed lines indicate transmission costs means 
apparent dual exon rule reflects fact invoked different times distinct higher level rules 
circular arc remainder indicates recursion see text 
arrangement desirable property total average cost asymptotic length recursion precisely shown induction constant case special arrangements need adjust thresholds different numbers exons different depths recursion 
rate weight subsequent terms decreases depends small shifts emphasis left children shortens half life costs larger shifts emphasis right levels contributions intron exon pairs 
cases final intron exon contributes greater cost shorter recursion earlier recursion terminate better final intron exon justify termination 
value thought effective width decaying window determines intron exon pairs taken account time thresholds remainder 
noted formal grammars grammar constrained invoke terminal elements strictly order appear input string 
example efficient detect start codon consensus evaluating upstream elements grammar 
theory practice aspect genlang discussed 
rules refer primary sequence directly tradition formal grammars intermixed global evaluative rules distinctly heuristic flavor 
example termination branch grammar effect constitutes wrap evaluation putative gene product terms number quality entire set exons proposed 
noted enumeration leaf rules splice quality coding quality rules costs individual intron exon rule invocations respectively rules termination calculate uniform average opposed half life window employed recursive rule 
particularly complex genes may important allow global local assessments exon quality 
departure formal grammars incorporation features costs give resulting system flavor hierarchical rule system 
traditional linguistic techniques chart parsing analogues technical domains 
lower levels gene grammar recognition engine general purpose tools find variety types features 
logic grammar framework suited rapid prototyping inherently supports useful features input management scenes parameter hiding easily modified syntax higher level language features efficient backtracking search mechanism 
feel important practical grammar built tied formally founded idealized gene grammar continues provide solid foundation ongoing research parallelization formal grammars gene parsing single parsing run entails generation evaluation large number alternative parses minimum cost parse selected final answer 
thresholds grammar gradually relaxed course parsing 
mixing coefficients specified user parsing begins remain constant thresholds increase parse range determined training set known sample genes 
training set grammar parse gene way known authentic structure allowed 
advantages dcg methodology properly written grammars may instantiated parse tree input producing output enforce parse 
thresholds may set maximum costs encountered node entire training set just barely allow known gene element gene called setpoint grammar thresholds group 
order vary thresholds trained values user change individual thresholds setpoint grammar 
example setpoint uniformly increase threshold times maximum value encountered training set 
setpoints handled differently 
thresholds elements occurring parse tree start codons allowed decrease value remain fixed level lower setpoints 
elements occurring gene exons complete list costs encountered training set examined 
setpoint determines percentage costs included threshold exons chosen setpoint percentage known exons training set succeed 
process repeated series setpoints typically determine range threshold values tailored training set 
process called threshold calibration set sample genes 
note threshold gene rule determined rule invoked rules top level parser 
threshold calibration mixing parameter having set procedure described parse proceed 
setpoint level order increasing percentage decreasing top level rule invoked input generally entire genbank entry sequence 
prolog parser implements topdown backtracking search grammar complete candidate gene compares genbank annotations records various measures quality result see 
parser immediately backtracks produce alternative results possible specified maximum number parses reached typically time limit exceeded typically minutes sparcstation 
point higher percentage setpoint tried top level threshold decreased maximum cost encountered higher 
setpoints tried timeout occurred setpoint parses having produced parse terminates batch mode parser moves sequence database 
protocol proved effective wide range genes minimum cost parses different genes distributed setpoints 
level parsing generally proceeded quickly due higher parses established lower toplevel threshold turn sped subsequent lower parsing 
coarse grained branch bound technique chart parsing described necessary produce large numbers alternative structures inherently costly parsing methodology number examined small compared combinatorial algorithms perform exhaustive searches 
training test sets philosophy selecting normalizing training sets sequence database entries automated fashion practicable part help drive human bias primarily permit uniform rapid treatment multiple species eventually subdivisions data 
consequently hand picked training sets genlang scripts written select various data sets directly genbank 
current version genlang uses dcg genbank entry syntax scan flat file versions database performing selections extracting various header fields interest 
addition human entries mouse drosophila entries selected genus mus drosophila respectively broader collection plants class 
sets entries extracted phylogenetic groups follows cdna gene set 
set contained entries selected type rna having substring complete cds description field 
coding sequence extracted entries expected full length 
sequences compile statistics start codon weight matrices coding position asymmetry coefficients frame coding frequency tables 
genomic gene set 
set consisted entries type ds dna length greater cds annotation listing coding region single transcript containing intron 
complete partial genomic sequences compile splice junction weight matrices non coding position asymmetry coefficients non coding frequency tables 
complete gene set 
set essentially subset genomic gene set consisted entries type ds dna having substring complete cds description field 
complete genomic dna sequences assess average number exons gene average internal exon length compile frequency tables regions bps upstream start codons complete cds entries cds list trusted actual start codon 
region expected contain entries including known proximal promoter elements tata boxes confirmed direct examination frequency tables 
parsing gene set 
serve pool training establish values testing gene grammar entries complete gene set selected random constraints ffl sequences bp selected 
practical matter permitted uniform depth parsing gene training set time limits set case current entries exceed length 
parsing longer genes addressed 
ffl sequences unknown bases selected 
sensors designed deal unknown bases algorithms substitute bases random cases simply skipping eliminated small percentage complete gene entries greatly simplified interpretation 
ffl entries exhibiting multiple gene products example due known alternative splicing eliminated 
accomplished selecting entries single cds feature 
longer gene entries class growing size contains interesting gene structures evaluation performance see problematic cases 
parsing alternatively spliced genes discussed 
entries removed genomic complete gene set cases statistics indicated compiled 
members cdna gene set blast scores exceeding member parsing gene set removed served exclude gene closely related genes family 
criterion applied ensure closely related genes included parsing gene set 
training test sets 
parsing gene set divided randomly noted sets fold cross validation training gene grammar 
training runs performed time entries training leaving entries testing different non overlapping sets omitted run 
addition removing parsing gene set cdna genomic complete gene sets normalized give approximately equal consideration closely related gene family opposed individual gene 
example give undue weight large number globin gene entries sequence databases desirable cluster single representative class 
done simple expedient counting number blast scores greater entry compared entries set assigning weight entry equal inverse number hits 
compiling frequency tables weight matrices sequence contributed weight unity counts 
seen member closely related family genes contribute weight equal size family entire family possess unit weight 
token unique genes unit weight 
case representative training sets member cluster vote consensus 
find technique threshold produces clusters subjective examination contain nearly obviously related entries including large number unexpected associations distant evolutionary relationships 
note equal weighting gene family may best policy de novo discovery genes expected occur proportion current distribution gene classes databases 
purposes validation technique important minimize crosstalk training test sets occur happened contain genes bearing remote similarities large families heavily represented training set 
sizes training sets results normalization summarized table 
sharp reductions observed clustering drosophila genomic complete gene sets due large number alcohol genes represented 
complete parsing sets may obtained anonymous ftp upenn edu directory pub genlang 
table effective sizes data sets employed number entries 
gene set stage human mouse drosophila cdna initial selection parsing set clustering genomic initial selection parsing set clustering complete initial selection parsing set clustering performance assessment variety means assess quality gene structure predictions classify groups correct genes 
method simply counts number genes correctly predicted entirety coding sequence expresses fraction total number genes attempted 
stringent test existing software produced high scores 
correct exons 
method counts number exons correctly predicted gives fraction total 
may useful count half right exons explicitly determine number splice sites type correctly predicted start codons note different assessing individual signal sensors isolation required correct wider context 
exon overlap 
method determines degree set predicted exons overlaps authentic exons 
done counting number bases correctly predicted true positives tp falsely predicted fp correctly excluded tn falsely excluded fn applying variety statistical metrics sensitivity specificity 
measure exon overlap definitions sensitivity tp tp fn specificity tp tp fp correlation coefficient tp delta tn gamma fp delta fn tp fp tn tp fn fp fn note definitions vary authors 
particular formula specificity called sen appears literature positive predictive value 
different formula specificity counts true negatives numbers generally large application informative nearly case formula produced values varied 
appears consensus matthews correlation coefficient cc best indicator overlap providing single scalar metric performance 
sequence entries set individual average values metrics minimum cost parse compiled 
purposes comparison different methods aggregating results described results 
training regimen noted training grammar parameters proceeded way fold crossvalidation training sets entries test sets 
regimen start st nd rd cc exons human start st nd rd cc exons drosophila training gene grammar data sets mouse shown 
connected points median values error bars indicate remaining values cross validated test sets 
circles give values correlation exon overlap scales left squares indicate exon fraction correct percent scales right 
filled circles dashed lines indicate training set results open figures solid lines give test set results 
horizontal axes indicate progression training epochs corresponding perturbations respectively starting mixing coefficients 
arrived testing variety hill climbing schemes adjusting parameters local optimum 
training began mixing parameters set threshold parameters arrived thresholding training set stage 
thresholds subsequently test sets 
training epoch consisted perturbation step followed combination step 
perturbation step series parses entire training set run node grammar changed value delta parameters nodes held constant 
results changes producing highest average ccs collected combination step 
step possible combinations changes tried combination producing highest average cc selected outcome training epoch 
changes node parameters left previous values constituted baseline epoch 
total epochs run values delta equal respectively 
ad hoc training regimen formally justified probabilistic theoretical grounds effective number alternatives tried 
alternation perturbation combination steps particularly important earlier attempt perturbation revealed favorable changes distinct mixing coefficients self cancelling combination 
amount time re quired parsing methodology limiting number respects including sizes training test sets degree cross validation importantly number different vectors parameters independently tested 
seen section training appeared progress rapidly effectively limitations architecture 
results grammar training results grammar training illustrated 
cases training sets showed sharp improvements initial epoch generally improvement 
human test sets started unexpectedly high level terms correlation coefficient exon fraction correct showed improvement initial epoch declined training suggested grammar overtraining adapting specific training sets ways generalize test sets 
mouse test sets shown started somewhat lower level performance demonstrated continued increasing average performance epochs eventually achieving correlation coefficients similar human peak 
drosophila test sets improved epochs drosophila sets starting highest levels 
sets achieved higher average performance vertebrates 
believe primarily approximation vertebrates short exons long introns opposite case drosophila reason global signals stronger 
gives indication nature grammars training 
parse trees shown representative data sets depicted way width pair arcs parent nodes children reflects relative cost contribution children parent cost determined mixing coefficient parent input costs children threshold values threshold values chosen representative critical cutoffs parses essentially results observed average input costs 
grayscale intensity arcs indication criticality mixing coefficient parent node determined deviation observed correlation coefficient perturbation final training epoch 
correlation coefficients gamma compared penultimate trained value square root sum squares differences correlation coefficient combination width intensity arcs gives indication flow costs parse tree 
extreme differences cost weighting children width disparities initial exon upstream exon nodes somewhat discounted importance generally faint arcs indicates little sensitivity change nodes 
important note addition small weight criticality arc indicate child node unimportant result cost child need evaluated combination costs higher level cost 
node may constitute strong human gene translation initial exon initiation start codon consensus upstream atg spacing upstream words remainder intron exon intron donor acceptor exon exon size coding coding words position asymmetry donor consensus donor words acceptor consensus acceptor words termination exon number exon quality splice quality coding quality drosophila gene translation initial exon initiation start codon consensus upstream atg spacing upstream words remainder intron exon intron donor acceptor exon exon size coding coding words position asymmetry donor consensus donor words acceptor consensus acceptor words termination exon number exon quality splice quality coding quality nature grammars resulting training data sets 
trees represent grammars arcs indicate status third epoch 
width arc indicates relative weight accorded arc trained mixing coefficient grayscale intensity indicates criticality mixing coefficient final result defined text 
independent evidence discriminates local threshold simply great advantage passing cost parse tree 
values parameters means training sets 
resulting grammars demonstrated degree intra species variation final mixing coefficients cross validated training runs greater expected relative uniformity results see discussion 
striking differences relative weights mixing consensus words components splice donor acceptor rules moderate criticality instances tend inconsistent training runs 
consistent observations greater weight put translation cost human mouse top level compared termination cost emphasized drosophila 
recall translation rule line procedural rule assesses developing cost gene fly termination rule line post hoc evaluation gene results observed suggest components important combination varying ratios effective evaluation gene 
termination node shows fairly consistent criticality suggesting bias greater exon number built left child effective balance indication exon quality 
translation subtree vertebrate datasets showed consistent weighting criticality recursive remainder node indicating species subtree greatest weight effective window intron exon pairs evaluated described methods section important parameter 
beneath intron exon node intron rule somewhat greater weight exon rule criticality suggests animal datasets fruitful threshold combination particular ratio 
effort ensure test sets properly separated training sets noted methods section 
removal training sequences showing high similarity score test set sequences clustering highly similar entries training sets helped avoid undue influences 
addition believe cross validated study arena gene prediction 
order ensure subtle similarities final training sets affecting test results looked correlation performance cumulative blast scores individual test sequences training set 
suggestion correlation measuring performance exon overlap exon fraction correct data shown 
comparative studies results appear similar achieved variety specialpurpose gene assembly algorithms genlang parser general purpose pattern matching tool especially adapted exhaustive combinatorial search 
direct comparisons difficult number reasons ffl test sets standardized comparisons test sets appeared previously generally slight variations faults identified entries changes underlying databases individual limits requirements systems test 
ffl different metrics standards employed different workers 
described differences performance measures authors completely different means evaluation 
difficult adjust differences authors separation training test sets normalization training sets adjust clusters similar genes cross validation 
ffl systems generally distinct virtue architectures selections sensors means combining evidence approach combinatorics exon assembly difficult attribute performance differences particular factor 
ffl gene prediction active field research systems constantly improved comparative results time reach press 
caveats mind compared genlang performance programs current 
table ii shows results comparison version grail october obtained anonymous ftp arthur ornl gov 
statistics individual entries averaged ways gene base summing results nucleotide nucleotide basis 
example test set sequence entries formula sensitivity gene tp tp fn sensitivity base tp tp fn 
method presenting data table ii comparison grail genlang test sets test gene base program set gene exon cc sn sp cc sn sp genlang mean grail mean data shown gene exon fractions correct statistics correlation cc sensitivity sn specificity sp calculated gene base human test sets described text 
gives better indication success rate attempted sequence entry avoids lending extra weight genes longer easier exons 
results table ii illustrate distinction important terms correlation programs comparable measured gene gene grail performs better averaged base 
believe grail slightly better genes larger numbers exons genlang better recognizing exons bases length data shown factors tend favor grail performance measured base base 
version grail achieves improved performance smaller exons part allowing assessment coding measures variable window sizes personal communication inherent genlang system 
table ii indicates rule grail performs higher specificity genlang relatively sensitive 
reports grail results generally emphasize specificity measure performance probably reflecting orientation grail predict putative exons laboratory investigation situation false positives prove costly 
shows direct comparison systems gene attempted degree scatter individual results programs indicates extent disjoint strengths weaknesses general may advisable perform multiple analyses novel sequence data 
analyzed performance genlang relative special purpose gene prediction programs data original papers test set 
retrained genlang grammar entries training test sets appear new test set removing larger sets entries similar member new test set criteria previously 
training results single training epoch confirmed sufficient achieve peak performance 
table iii compares results original data recalculated required direct comparison 
cc genlang grail performance grail vs genlang individual entries genlang human test sets 
circle represents single entry correlation scores programs indicated positions respective axes 
points left dashed line represent entries genlang correlation score exceeded grail 
radius circle proportional number exons gene ranging 
genlang demonstrates generally greater sensitivity lower specificity programs comparable correlation scores 
test set contained slightly half human sequences remainder rodent 
genlang showed lower correlation test set cross validation test sets human subset consisting sequences extracted tested separately 
genlang performance improved respects consistent human study 
time results training set mixed species composition similar test set show improvement 
grammars trained maximize correlation essentially represents tradeoff sensitivity specificity presumably degree freedom axis 
tried training genlang grammars maximization specificity selection criterion 
table iii shows change result higher values specificity expense sensitivity correlation specificity levels achieved grail data table ii 
training maximization exon fraction produced identical results seen correlation training data shown 
phylogenetic specificity data table iii suggests performance may enhanced training testing species specific manner 
test tried individual grammars phylogenetic group results shown 
table iii comparison test sets test gene base program set gene exon cc sn sp cc sn sp genlang total human total human total genlang total sp trained human total test set mixed vertebrate set excluding entry total entries human test set consisted human sequences total test set 
data table ii taken case recalculation original entries human subset statistics base 
results indicate differences grammars differences human mouse grammars slight statistically significant variation observed cross validation 
example human trained grammar gave correlation human test set mouse plants 
similarly trained grammar produced correlation human test set 
performances exon fraction showed similar patterns exceptions matrices roughly symmetric 
order summarize differences calculated ad hoc distance pair phylogenetic groups defined correlation cc delta cc gamma cc delta cc cc indicates individual correlation training set test set 
similarly exon fraction 
attempt dissect reasons apparent phylogenetic differences grammars performed mixing experiments various compositional signal measures grammar parameters combined applied different species 
example human trained grammar demonstrated correlation exon fraction tested drosophila compositional measures tables position asymmetry frequencies substituted human ones reduced performance metrics respectively 
human grammar drosophila local signals weight matrices splice junctions effect deleterious performance reduced correlation exon fraction 
similar results obtained drosophila mixing coefficients governing combination evidence substituted human grammar respectively 
mixing experiments tried combinations species data shown essentially analogous results varying degree 
summarize compositional measures important factors performance indications aspects grammars contribute degree 
correlation test train exon fraction test train distance correlation exon fraction application grammars phylogenetic groups 
row column labels indicate phylogenetic groups training test sets employed human mouse drosophila plants 
matrices give results correlation exon fraction matrix shows correlation exon fraction distances defined text 
mixing coefficients test sets selected previous cross validation experiment results gave highest combined performance training test sets applied consistently species 
discussion general parser surprisingly robust face varying vectors mixing coefficients 
direct examination trained coefficients suggested key changes required species achieve results observed individual perturbations produced neutral slightly detrimental effect 
fact generalizations possible concerning optimization process 
species training sets appear converging vector coefficients final results comparable suggesting system surface optimal vectors may relatively shallow local optima 
training performed species starting coefficients developed training species final vector coefficients characteristics species final vectors usual training final performance somewhat degraded data shown 
guarantee arrived global near global optima ad hoc training regimen observations suggest may suboptimal local cost minima susceptible 
possibly effective training methodology result better performance length time required test change parsing limits amount search accomplished technique 
results required order cpu months computer time 
currently investigating means process may sped allow extensive search analyzing parse trees allow credit assignment detailed level short complete parses alternative search methodologies genetic algorithms 
improvement efficiency allow increase number training examples large compared number parameters mixing coefficients noted typically exons training sets critical internal nodes 
hand overtraining observed variation test sets final mixing coefficient vectors suggests additional training may produce diminishing returns 
supported observation training improvements subset genes typically produce offsetting losses subset epochs 
suggests possibility disjunctive grammars essentially genes branching training process 
effect done way sliding threshold values genes produce alternatives stringent earlier thresholds produce parses thresholds greatly relaxed 
observed famine effect sequence entries vary tremendously numbers potential genes produce ranging continuously orders magnitude 
course interesting disjunctive grammars recognized functional differences types genes recognized instance happened classify genes time tissue expression reflecting subtle differences gene expression machinery 
apparent species specificities identified may fact reflect selection biases types genes commonly isolated various species entered database 
ways interesting eventuality actively investigating possibility 
emphasized training test results depend integrity database annotations coding sequence certainly doubt cases said genlang trained recognize authentic genes genbank feature tables 
apparent general purpose parser genlang grammars produce results comparable special purpose gene prediction algorithms 
specifically designed optimized exhaustively search combinatorial space exon assemblies parser uses grammar formalism serves equally higher order structures trna genes examines complete parses produced 
compare typically evaluates tens thousands gene models includes multiple equivalent exon clusters uses dynamic programming matrix literally examine possible assignment intron exon boundaries sequence 
smaller number parses examined genlang fact necessitated known time penalty paid general purpose parsers compared fully customized code fact genlang averaged minutes total sequence sparcstation order magnitude slower version grail tested platform 
ported system native code compiler achieved fold speedup collaborators developed parallel versions promise better performance 
performance comparisons problematic domain reasons enumerated programs designed slightly different problems example meant take pre mrna input intended recognize internal exons generalized deal genes embedded intergenic sequences 
possible programs may prove superior sequences longer bases limit imposed study particular genes large numbers exons genlang depends backtracking left right search 
feel advantage chart parser designing grammar rules specialized scanning lengthy sequences able adapt genlang deal complex genes effectively level intrinsically bottom approaches programs 
genlang return multiple genes sequence simple extensions fact demonstrated previously multiple parses globin gene region 
partial genes problematic grammar represents model entire gene grammars easily written span subtrees 
disease gene alleles mutations affect translation recognized entirety grammar described shown similar grammars relaxed allow detection messages produced certain splicing defects required forms mutations modelled grammar methods described 
inherent non determinism genlang parser may prove advantage addressing alternative splicing 
alternatively spliced genes examined known gene products ranked high parse ordering particularly mode alternative splicing fit backtracking scheme alternative final exons drosophila 
argue left right parsing paradigm way represents better model aspects gene expression known unknown 
may evidence fact parses returned sequence minimal cost parse fact relatively early general th parse vertebrate species average th parse groups 
drosophila particular entries test sets produced authentic gene parse returned minimum cost parse 
species best parses returned significantly better minimum cost parses human data best parses produced correlation coefficient exon fraction indicating room improvement evaluation gene structures generated grammar 
case feel grammar representation constitutes excellent foundation domain 
grammar rules intrinsically modular hierarchical suited rapid prototyping proven suitable framework embedding algorithms sensors managing combination evidence 
note sensors far sophisticated currently study include compositional measures drawn signal processing information theory reviewed signal measures connectionist classification techniques machine learning 
ability apply advanced sensors plug test mode variety grammar architectures evidence combination schemes allow best effect 
believe take full advantage capacity grammars represent syntactic complexity diversity may expected domain 
information adjacent regulatory regions accumulates models splicing elaborate flexibility grammars increasingly come fore representing predicting gene structure 
genlang parser available form quintus prolog source code system ported expensive sicstus envi ronment 
grammars described freely available runtime versions currently development 
contact address electronic mail upenn edu 
authors kyle hart kevin jim chris overton charles bailey helpful discussions contributions 
supported number de fg er department energy 
brunak engelbrecht knudsen 
prediction human mrna donor acceptor sites dna sequence 
mol 
biol 


tuple frequency analysis intron exon discrimination cell mapping 
methods 

recognition protein coding regions dna sequences 
nucleic acids res 

tung 
assessment protein coding measures 
nucleic acids res 
fields 
gm practical tool automating dna sequence analysis 

fu 
syntactic pattern recognition applications 
prentice hall englewood cliffs nj 
gelfand 
computer prediction exon intron structure mammalian 
nucleic acids res 
gelfand 
dynamic programming approach predicting exon intron structure 
biosystems 
knudsen drake smith 
prediction gene structure 
mol 
biol 
hopcroft ullman 
automata theory languages computation 
addison wesley reading ma 
kudo kitamura abe 
analysis context splice site sequences mammalian mrna precursors subclass method 

lathrop webster smith winston smith 
integrating ai sequence analysis 
hunter editor artificial intelligence molecular biology chapter pages 
aaai press 
matthews 
comparison predicted observed secondary structure 
acta 
pereira warren 
definite clause grammars language analysis 
artif 
intell 

representing genetic information formal grammars 
proceedings national conference artificial intelligence pages 
american association artificial intelligence 

investigating linguistics dna definite clause grammars 
lusk overbeek editors logic programming proceedings north american conference pages 
mit press 

linguistics dna 
american scientist 

computational linguistics biological sequences 
hunter editor artificial intelligence molecular biology chapter pages 
aaai press 
dong 
syntactic pattern recognition system dna sequences 
lim cantor robbins editors proceedings nd international conference bioinformatics supercomputing complex genome analysis pages 
world scientific 
noordewier 
pattern matching search dna sequences logic grammars 
proceedings conference artificial intelligence applications pages 
ieee 
snyder stormo 
identification coding regions genomic dna sequences application dynamic programming neural networks 
nucleic acids res 

computer methods locate signals nucleic acid sequences 
nucleic acids res 
stormo 
consensus patterns dna 
methods 
mural 
locating protein coding regions human dna sequences multiple sensor neural network approach 
proc 
nat 
acad 
sci 
usa 

