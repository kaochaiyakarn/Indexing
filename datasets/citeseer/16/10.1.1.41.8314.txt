journal intelligent information systems fl kluwer academic publishers boston 
manufactured netherlands 
discovering dynamics inductive logic programming machine discovery sa zeroski saso dzeroski ijs si todorovski todorovski ijs si institut jozef stefan ljubljana slovenia editor gregory piatetsky shapiro 
machine discovery systems help humans find natural laws collections experimentally collected data 
laws existing machine discovery systems describe static situations physical system reached equilibrium 
consider problem discovering laws govern behavior dynamical systems systems change state time 
ideas inductive logic programming machine discovery systems qmn lagrange discovery qualitative quantitative laws quantitative numerical descriptions dynamical system behavior 
illustrate generating variety models 
keywords machine discovery machine learning dynamical system identification 
task modeling natural artificial dynamical systems systems change state time omnipresent 
usually dynamical systems described set differential equations completely specify rate change system variables 
modeling task easier qualitative formalisms qde qualitative differential equations kuipers qualitative relationships describe dependencies system variables necessarily specify rates change system variables complete precise manner 
qde states system variables described pairs qualitative values directions change qualitative relationships defined sequences state descriptions qualitative behaviors 
considerable effort devoted problem automating task building qualitative models example behaviors bratko coiera dzeroski bratko 
viewing qualitative models logic programs formulating qde constraints logic bratko dzeroski bratko systems inductive synthesis logic programs inductive logic programming muggleton lavrac dzeroski automatically synthesize qualitative models example behaviors 
misq re incarnation genmodel coiera generate qualitative model numerical trace translating numerical trace qualitative behavior qualitative model generated 
zeroski todorovski task identification dynamical systems addressed find set laws describe dynamics system example behavior 
precisely set real valued system variables measured regular intervals period time illustrated table 
laws discovered called model dynamical system typically take form set qualitative ordinary differential equations 
refer task task discovering dynamics 
table 
behavior trace dynamical system 
time system variables xn xn xn 
nh nn part describes qmn qualitative models numerical traces system generates qualitative models numerically described behaviors directly translating qualitative behaviors 
qmn assumes original numerical interpretation qualitative constraints qde kuipers include addition multiplication time derivation 
generate test methodology qmn similar ones genmodel coiera misq 
turns short step automatic generation qualitative differential equations numerical traces generation ordinary differential equations numerical traces 
viewed problem discovering quantitative empirical laws dynamical systems 
exists variety systems discovery quantitative empirical laws addressed problem discovering dynamics 
problem addressed discovery system lagrange described second part 
initially lagrange simple process give derivatives observed system variables system variables observed period time existing discovery system 
produce set laws differential algebraic equations describing observed behavior 
existing discovery systems bacon langley fahrenheit zytkow zhu suitable lagrange ask additional data consider dependencies variables 
develop discovery mechanism lagrange ask additional data considers dependencies variables time 
multidimensional linear regression introduces new terms multiplication ideas inductive logic programming machine discovery systems 
section describes qmn system generates qualitative models numerically described behaviors 
qmn illustrated section discovering dynamics application behaviors dynamical systems described 
lagrange machine discovery system constructs quantitative models sets algebraic differential equations described section 
experiments lagrange involve construction models dynamical systems described section 
related discussed section 
section concludes elaborates directions 

qmn algorithm qmn qualitative models numerical traces generates qualitative model numerically described dynamical system behavior 
qde kuipers constraints system variables generated qualitative model 
constraints taken repertoire table 
table 
qde constraints tested qmn 
qde constraint meaning const constant time deriv time derivative dt minus gammaf monotonically increases gamma monotonically decreases add mult input qmn behavior trace dynamical system table 
addition values parameters specified 
order dynamical system order highest derivative dynamics equations maximum depth new variables introduced combining old variables tolerances ffl ffi testing qualitative constraints 
optionally dimensions system variables specified 
set system variables fx xn qmn introduces time derivatives order 
introduces new variables repeatedly applying basic arithmetic operations variables time derivatives 
set old new variables generates tests possible qualitative constraints variables 
time derivatives system variables introduced numerical derivation lines qmn algorithm formula delta gamma gamma delta gamma delta gamma values variables time derivative dx dt time point ih 
numerical derivation lead large errors due care exercised derivatives measured measurement error lower corresponding numerical derivation error 
zeroski todorovski 
qmn ffl ffi 
introduce time derivatives 

forall 

dt gamma 
introduce new variables 



forall theta gamma 

gamma 


fa 

generate test qualitative constraints 

forall 
satisfied const ffl ffi 
forall theta 
satisfied deriv minus gamma ffl ffi 
minus gamma 
forall theta theta 
satisfied add mult ffl ffi 
fadd mult 
return system variables time derivatives combined pairwise possible ways basic arithmetic operations lines 
variables dimension may added subtracted 
values new variables time points calculated new variables introduced 
qualitative constraints generated tested lines 
testing constraints testing constraint zero holds variable represents constant zero tolerances ffl ffi precisely variable considered represent constant zero jt ffi ffl 
probability approximated proportion measurements jt ffi holds 
parameter ffi fact numerical precision discovering dynamics tolerance parameter ffl allows constraint considered satisfied small proportion ffl measurements consistent 
testing qde constraints implemented procedure satisfied done follows ffl system variable considered constant constraint const satisfied constraint zero gamma satisfied tolerances ffl ffi ffl test derivative numerical derivative computed 
constraint zero gamma tested satisfied tolerances ffl ffi considered derivative deriv satisfied 
note dimensions specified satisfy constraint dim dim denotes time seconds 
ffl constraint minus tested testing zero satisfied tolerances ffl ffi dimension specified 
ffl test add mult constraints zero gamma gamma zero gamma delta tested 
dimensions variables specified satisfy dim dim dim add dim dim delta dim mult constraint 
ffl test check time points 
precisely considered satisfied dx delta dy ffi ffi ffl dx gamma dy gamma similarly gamma considered satisfied dx delta dy ffi ffi ffl 
case dimension constraints consider computational complexity qmn 
denote number variables depth jv gamma gives variables process introducing new variables 
number const constraints tested number deriv minus gamma constraints number add mult constraints qualitative constraints const deriv minus add mult takes test total number time points example behavior 
calculation variables tested representing constant zero takes counting necessary test constraint zero takes 
counting needed testing gamma takes pairs values variables considered 
testing gamma takes 
total time complexity qmn zeroski todorovski 
experiments qmn experiments qmn proceeded follows set differential equations modeling real life dynamical system chosen appropriate values parameters involved 
initial state system variables integration step solving differential equations number integration steps selected 
differential equations integrated fourth order runge kutta method press pp 

obtained behavior qmn generated set qualitative laws 
dimensional information system variables qmn 
qmn applied dynamical systems earlier test examples automatic generation qualitative models 
tube system cascaded tanks system 
parameters ffl ffi set 
qmn written programming language run sun sparc ipc workstation 
running times experiments described order minute 

tube tube system consists containers connected thin pipe filled liquid levels respectively 
difference levels causes liquid flow pipe container 
change liquid levels described differential equations gamma gamma initial state assumed parameter value 
equations simulated integration steps time units 
resulting behavior qmn 
derivatives new variables introduced qualitative model generated qmn deriv deriv minus gamma gamma gamma gamma new variables introduced constraints consistent example behavior 
include constraints typically included qualitative model tube gamma constraints happen true particular behavior 
example constraint const true behavior 
addition various redundant constraints derived constraints generated const add gamma gamma discovering dynamics numerous versions qmn benefit path finding graph connectedness approach similar misq 
retains subset constraints connects system variables 

cascaded tanks cascaded tanks system illustrate misq learning qualitative models dynamical systems 
consists tanks liquid flows second 
tank constant inflow 
system described model gamma oa gamma ob ob inflow tank oa ob tanks corresponding liquid levels 
values chosen parameters behavior system simulated initial state steps time units 
behavior parameter settings derivatives new variables qmn qualitative constraints const oa settings produces new constraints addition deriv constraints constraints 
note constraints add oa add ob oa typically qde model cascaded tanks dynamical system 
const oa gamma gamma oa gamma gamma oa add oa add ob oa add oa add ob ob comparison misq generated subset model numerical trace behavior cascaded tanks system 
system variables misq ob introduce new variables 
note misq qmn dimensional information reduce number constraints generated tested 
behavior trace misq qmn 
misq generates qualitative model numerical trace translating numerical trace qualitative behavior qualitative model generated 
transformation process simplistic encounters problems numerical precision trace qmn 
zeroski todorovski qmn avoids problems numerical precision noise tolerances ffl ffi misq implemented prolog efficiency problem dealing long numerical trace qmn 
reason misq generated subset model generated qmn misq retains subset constraints consistent behavior 
subset retained sufficient connect variables 
model gives rise graph variables nodes arc appear model constraint 
variables connected graph corresponding model connected 

lagrange algorithm qmn generates set qualitative differential equations example behavior lagrange generates set ordinary quantitative differential equations 
may generate algebraic equations contain time derivatives 
early version lagrange described dzeroski todorovski 
input lagrange behavior trace dynamical system form qmn table 
dimensions system variables optional 
addition values parameters specified 
order dynamical system order highest derivative appearing dynamics equations maximum depth new terms introduced combining old terms variables maximum number independent regression variables generating equations tolerances testing equations 
lagrange algorithm consists main stages 
set system variables fx xn lagrange introduces time derivatives order 
introduces new variables terms repeatedly applying multiplication variables time derivatives 
values new variables terms time points calculated variables introduced 
set variables lagrange generates tests equations linear regression 
stage introduces time derivatives system variables identical corresponding stage qmn section 
second stage new variables introduced ways 
system variable measured radians represents angle corresponding sine cosine added current set variables line 
second variables combined multiplication introduce new variables terms products degree lines 
terms depth gathered depth term ff defined ff example term sin depth term depth 
equations generated tested third stage lines 
roughly speaking subset sized generate linear equation 
term greatest depth complexity chosen dependent variable ties discovering dynamics resolved arbitrarily expressed linear combination remaining ones 
constant coefficients linear equation calculated applying linear regression line 
equation appears significant corresponding criteria exceed prespecified thresholds added model 

lagrange 
introduce time derivatives 

forall 

dt gamma 
introduce new variables 
forall dim rad cos xg 



forall theta gamma fv delta ug 

generate test equations linear regression 


forall jrj 
select dependent variable 
fyg 
linear regression oe 
vr gamma vs 


forall jc oe cx fxg 
linear regression oe 
fy xg 
return linear taken calculates values coefficients linear equation minimize sum squares calculated line fit measured data close possible 
calculates deviations oe oe oe cm coefficients line 
significance criteria evaluated multiple correlation coefficient vr normalized deviation lines 
zeroski todorovski 
linear regression fx xm oe 
xm xm 
xmn 
theta 
gamma 
theta vy 
ji 
gamma 
oe gamma 
oe theta oe oe oe cm 

vr gamma gamma 
gammay 
return oe multiple correlation coefficient vr usually called takes values interval 
higher vr significant equation 
equation significant vr gamma default value 
normalized deviation vs defined ratio average error approximation average dependent variable 
term gammay added denominator avoid division zero change value significantly case essentially equals average error approximation 
takes values interval 
lower vs significant equation 
equation considered significant vs default value 
linear equation considered form perfect fit cause division zero calculation vr vs significance criterion case 
note implies vr vice versa 
vs discriminative criterion 
significant equation added model independent variables jc oe removed equation line lagrange algorithm 
may affect coefficients independent variables 
consequently linear regression procedure invoked calculate new coefficients line 
analysis computational complexity lagrange algorithm terms parameters 
calculate total number terms generating equations observe jv delta jv jv jjv gamma gives jv 
yields total number discovering dynamics terms jv second stage 
total number regressions tried jv 
account complexity linear regression procedure number independent variables 
total complexity lagrange algorithm nr 
exponential parameters note small values parameters usually sufficient real dynamical systems 

experiments lagrange experiments lagrange performed analogously ones qmn set differential equations modeling real life dynamical system chosen appropriate values parameters involved initial state system variables 
differential equations integrated fourth order runge kutta method press pp 
steps time units 
obtained behavior lagrange generated set equations describing behavior 
lagrange implemented programming language run sun sparc ipc workstation 
applied problems domains fluid dynamics tube cascaded tanks population growth population dynamics mechanical dynamics inverted pendulum 
table gives overview experiments conducted lagrange 
domain dimension system number system variables values parameter settings lagrange 
include order depth number regression variables significance thresholds tolerances number equations generated domain corresponding running time 
table 
overview experiments conducted lagrange 
domain variables parameters equations time tube cascaded tanks population dynamics inverted pendulum parameters lagrange set reflect complexity original models differential equations 
significance thresholds set default cases produced equations 
cases criterion distinguish equations progressively lowered reasonable number equations obtained 
note additional runs lagrange necessary lowering significance thresholds sufficient filter equations satisfying higher lower thresholds 
zeroski todorovski 
tube behavior tube dynamical system described section lagrange generated equations gamma gamma gamma gamma gamma gamma equation expresses law mass volume conservation equation equation original model 
equations obtained equation account equation 
equations obtained equations account equation 

cascaded tanks cascaded tanks system described model containing variables equations section variables essentially describe dynamical system 
reflected model equivalent mentioned gamma gamma behavior described section lagrange generated equations parameter settings table 
parameter lowered default obtain small number equations 
default values resulted equations 
progressively lowered 
best equations lowest values 
gamma gamma gamma equation obtained expressing equation squaring sides resulting equation 
equation obtained adding equations expressing squaring sides resulting equation subtracting equation 
discovering dynamics 
population dynamics volterra lotka model periodic behavior model coexistence prey predator populations 
example take populations 
grazing grass assume unlimited supply grass hunt assume food 
hare population large lynx population grows fast 
causes eaten diminishing hare population point food 
lynx population consequently decreases multiply faster 
behavior depicted denotes size hare size lynx population 
time 
oscillatory behavior sizes hare lynx populations 
oscillatory behavior sizes hare lynx populations described model gamma sn sn gamma choosing initial hare lynx populations predation growth death rates integrating differential equations steps time units results behavior shown 
behavior lagrange discovered equations obtained algebraic manipulation equations original model equivalent original model 
gamma gamma zeroski todorovski 

inverted pendulum 

inverted pendulum task balancing inverted pendulum standard benchmark problem testing classical modern approaches control dynamical systems geva bratko 
inverted pendulum consists cart move horizontal track pole top cart rotate vertical plane defined track fixed point 
force parallel track applied cart 
system variables case distance cart origin point track inclination angle pole relative vertical line fixed point 
dynamics inverted pendulum described system second order differential equations 
explicit form equations expressing looks quite complicated equivalent implicit form listed quite manageable 
equations masses cart pole respectively length pole force applied cart gravitational acceleration 
ml cos gamma sin cos sin kg kg behavior simulated 
initially cart origin pole inclined left immobile 
cart pushed left constant force 
results pole passing vertical position falling right cart moving left time 
pole falls integration steps seconds 
experiment quality criterion discriminate equations considered 
threshold value set gamma default parameter values resulted large number equations 
value discovering dynamics progressively lowered trials number equations produced lagrange manageable 
cos gamma sin cos gamma sin sin gamma cos cos sin gamma sin gamma cos time series settings described lagrange discovered equations 
equation expresses known relationship sine cosine angle 
equations equivalent original equations respectively 
equation obtained multiplying equation sin account equation 

related qmn lagrange systems described related areas fields qualitative reasoning machine learning 
include automatic generation qualitative models inductive logic programming machine discovery 
related identification dynamical systems 
lagrange qmn generate test approach similar existing systems automatic generation qualitative models example behaviors genmodel coiera misq 
addition qmn addresses precisely problem misq problem generating qualitative models numerical behavior traces 
qmn preceded attempts learn qde kuipers models dynamical systems bratko dzeroski bratko relied inductive logic programming muggleton lavrac dzeroski systems induce models example qualitative behaviors background knowledge consisting logical definitions qde constraints 
qmn lagrange inspired benefit ideas developed field inductive logic programming ways 
qmn addresses problem tackled golem bratko dzeroski bratko systems inductive logic programming 
second qmn lagrange introduce new variables way new variables introduced determinate literals linus dzeroski 
related claudien de raedt bruynooghe performs clausal discovery systematically generating clausal integrity constraints testing consistency database 
linus approach inductive logic programming lavrac dzeroski lagrange initially introduce new variables time derivatives system variables apply existing zeroski todorovski machine discovery systems transformed problem 
basic requirements satisfied machine discovery system transformed discovery problem 
able find laws involving variables observational data asking additional experiments 
second able find set laws single laws hold domain explicitly stated variables involved dependent independent 
existing discovery systems bacon langley abacus michalski fahrenheit zytkow zhu satisfy second criterion meets criteria satisfactory way 
systems bacon fahrenheit typically propose experiments require outcomes provided violating criterion 
regarding second criterion abacus fahrenheit able discover law domain 
laws usually hold disjoint subspaces domain 
ideas discovering set simple laws observational data bacon incorporated bacon 
systems meets criteria satisfactory way 
equation finder zytkow module fahrenheit comes closest meeting requirements 
set real valued pairs tries find formula asking additional data 
main problem equation finder looking function variable 
dynamical systems value system variable certain point time depend past values system variables 
ability discover equations variables necessity 
important features equation finder ability handle errors input data 
feature necessary handling real life data 
important convergence equation finder sensitivity errors input data thoroughly studied zytkow 
machine discovery community paid attention dynamical systems recognized need techniques handle systems 
ids langley system touches problem discovering dynamics 
qualitative schemata generated ids considered qualitative states system 
transitions states schemata capture way qualitative change system time global dynamics 
phase transition type continuous state changes described differential equations 
numerical laws qualitative states principle include time dependent variables 
qmn lagrange related area dynamical system identification addresses essentially problem lagrange 
mainstream system identification summarized ljung ljung assumption model structure form differential equations discovering dynamics known 
task determine suitable values parameters appearing model model fits observed behavior 
linear model structures 
contrast qmn lagrange assume prespecified model structure explore space equations nonlinear report consistent observed behavior 

discussion important contribution extension scope machine discovery dynamical systems 
qmn lagrange able construct set qualitative respectively ordinary differential equations describing behavior dynamical system 
way extend scope machine discovery systems high school physics college physics 
important qmn lagrange able generate set laws involving variables observational data 
contrast machine discovery systems perform problem decomposition find laws involving variables 
practice systems keep variables constant require experiments vary 
impossible cases especially context dynamical systems scientist full experimental control system variables 
qmn brings improvements existing approaches automatic generation qualitative models 
introduce new variables genmodel coiera misq 
second qmn handle numerical precision noise problems built tolerances misq handle 
qmn efficient misq 
inductive logic programming approaches automatic generation qualitative models problems new variables bratko dzeroski bratko 
new variables introduced adding existing qualitative variables uniquely determined values indeterminate cause computational complexity problems 
original motivations development qmn avoid problem indeterminacy adding quantitatively valued system variables yields unique outcomes 
consider qmn stepping stone area learning qualitative models intersects inductive logic programming area machine discovery lagrange situated 
lagrange unique machine discovery systems ability discover laws govern behavior dynamical systems 
regarded small extension existing discovery algorithms handle large class new problems 
lagrange bacon tradition langley showing handle large number apparently complex laws simple discovery mechanisms 
demonstrated successful lagrange generating models dynamical systems simulated data including fluid dynamics models population dynamics model inverted pendulum model 
cases lagrange generated zeroski todorovski models correctly describing behaviors 
judging successful lagrange building models dynamical systems conclude lagrange promising step application machine discovery real dynamical systems 
task identification dynamical systems discovering dynamics omnipresent lagrange potentially applicable wide variety real life problems 
directions appear promising 
problem handling noise measurement errors addressed 
extending space models equations explored promises wider applicability increases computational complexity 
respect domain specific knowledge considered 
integration logical conditions numerical laws discovered models deserves attention inductive logic programming dynamical system identification perspective 
highest priority improving lagrange handling measurement errors noise input data necessary practical applications 
experiments domains artificially introduced noise shown lagrange sensitive noisy data 
numerical derivation process identified main cause problem 
alleviate system descendant lagrange employs remedies digital filtering numerical integration 
appropriately different fitting mechanism downhill simplex method press determine parameter values equations 
searches differential equations explicitly express highest derivatives terms system variables derivatives lower order 
way redundancy problem lagrange 
mention addition successfully reconstructing dynamical system models noisy data successfully applied real life domains 
new terms introduced multiplication transformations equation finder easily incorporated lagrange 
number new terms significantly increase case require reduction search complexity 
heuristics reduce number new terms introduced 
addition terms linear regressions chosen intelligent way 
depending transformations linear regression procedure may unsuitable determining appropriate values equation parameters 
case equations considered nonlinear parameters 
nonlinear optimization computationally expensive cases 
alternative approach genetic search techniques systematically generate test possible equations stochastically explore subset space possible equations 
allow reasonable time complexity cases space possible equations larger exploited lagrange 
dzeroski report preliminary experiments lines 
approach domain specific knowledge form substructures subexpressions discovering dynamics appear model dynamical system 
compromise completely specifying model structure mainstream system identification specifying structure lagrange 
inductive logic programming system claudien de raedt bruynooghe systematically generates logical constraints tests consistency database 
similar approach taken lagrange systematically generates equations tests consistency behavior 
similarity suggests possibility integration van laer de raedt 
adding arithmetic predicate mult background knowledge claudien predicate implementing linear regression claudien encompass numerical law capabilities lagrange ability logical conditions generated models 
research area dynamical system identification ljung suggests models great practical interest 
research described funded ministry science technology part esprit iii basic research project inductive logic programming 
written visit saso dzeroski katholieke universiteit leuven belgium supported commission european communities 
ivan bratko luc de raedt boris pat langley jan zytkow stimulating discussions suggestions regarding described 


molecules dynamics life 
john wiley sons new york 


machine discovery approach dynamic systems real laboratory 
ml workshop machine discovery 
aberdeen scotland 


numerical methods 
society mathematicians physicists astronomers slovenia ljubljana slovenia 
bratko muggleton 

learning qualitative models dynamic systems 
muggleton editor inductive logic programming pages 
academic press london 
coiera 

learning qualitative models example behaviors 
third international workshop qualitative physics 
stanford ca 
de raedt bruynooghe 

theory clausal discovery 
proc 
thirteenth international joint conference artificial intelligence pages 
morgan kaufmann san mateo ca 
dzeroski bratko 

handling noise inductive logic programming 
second international workshop inductive logic programming 
tokyo japan 
dzeroski 

discovering dynamics genetic programming 
proc 
seventh european conference machine learning 
springer berlin 
appear 
zeroski todorovski dzeroski todorovski 

discovering dynamics 
proc 
tenth international conference machine learning pages 
morgan kaufmann san mateo ca 
dzeroski muggleton russell 

pac learnability determinate logic programs 
proc 
fifth acm workshop computational learning theory pages 
acm press new york 
michalski 

integrating quantitative qualitative discovery abacus system 
kodratoff michalski editors machine learning artificial intelligence approach pages 
morgan kaufmann san mateo ca 
geva 

experimental benchmark trainable controllers 
ieee control systems 
richards kuipers 

automatic abduction qualitative models 
fifth international workshop qualitative physics 
austin tx 

handling noisy data automated modeling dynamical systems 
msc thesis faculty electrical computer engineering university ljubljana slovenia 
kuipers 

qualitative simulation 
artificial intelligence 
langley simon bradshaw zytkow 

scientific discovery 
mit press cambridge ma 
lavrac dzeroski 
inductive logic programming techniques applications 
ellis horwood chichester 
lavrac dzeroski grobelnik 

learning nonrecursive definitions relations linus 
proc 
fifth european working session learning pages 
springer berlin 
ljung 

modelling industrial systems 
proc 
seventh international symposium methodologies intelligent systems pages 
springer berlin 
muggleton editor 
inductive logic programming 
academic press london 
langley 

robust approach numeric discovery 
proc 
seventh international conference machine learning pages 
morgan kaufmann san mateo ca 
press flannery teukolsky vetterling 

numerical recipes 
cambridge university press cambridge ma 
bratko 
learning control dynamic systems 
michie spiegelhalter taylor editors machine learning neural statistical classification 
ellis horwood chichester 
press 
van laer de raedt 

discovering quantitative laws inductive logic programming 
workshop machine discovery 
spain 


applied statistics engineers 
mcgraw hill new york 
zytkow 

discovery equations experimental evaluation convergence 
proc 
tenth national conference artificial intelligence pages 
mit press cambridge ma 
zytkow zhu 

application empirical discovery knowledge acquisition 
proc 
fifth european working session learning pages 
springer berlin 
