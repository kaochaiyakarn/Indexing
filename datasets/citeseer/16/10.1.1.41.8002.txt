distributed rational decision making tuomas sandholm automated negotiation systems self interested agents increasingly important 
reason technology push growing standardized communication infrastructure internet www nii edi kqml fipa concordia voyager odyssey telescript java separately designed agents belonging different organizations interact open environment realtime safely carry transactions 
second reason strong application pull computer support negotiation operative decision making level 
example witnessing advent small transaction electronic commerce internet purchasing goods information communication bandwidth 
industrial trend virtual enterprises dynamic alliances small agile enterprises take advantage economies scale available respond diverse orders individual agents suffer scale 
multiagent technology facilitates negotiation operative decision making level 
automation save labor time human negotiators addition savings possible computational agents effective finding beneficial short term contracts humans strategically combinatorially complex settings 
chapter discusses multiagent negotiation situations agents may different goals agent trying maximize concern global 
self interest naturally prevails negotiations independent businesses individuals 
building computer support negotiation settings issue self interest dealt 
cooperative distributed problem solving system designer imposes interaction protocol strategy mapping state history action 
protocol mean low level communication protocol negotiation protocol determines possible actions agents take different points interaction 
sealed bid price auction example protocol bidder free submit bid item awarded highest bidder distributed rational decision making way protocol agent 
main question social outcomes follow protocol assuming agents imposed strategies 
hand multiagent systems agents provided interaction protocol agent choose strategy 
self interested agent choose best strategy explicitly imposed outside 
protocols need designed noncooperative strategic perspective main question social outcomes follow protocol guarantees agent desired local strategy best agent agent 
approach required designing robust non manipulable multiagent systems agents may constructed separate designers may represent different real world parties 
rest chapter discusses protocols voting auctions bargaining markets contracting coalition formation 
central evaluation criteria protocols 
evaluation criteria negotiation protocols mechanisms evaluated types criteria listed 
choice protocol depend properties protocol designer wants system 
social welfare social welfare sum agents payoffs utilities solution 
measures global agents 
criterion comparing alternative mechanisms comparing solutions mechanisms lead 
measured terms utilities criterion somewhat arbitrary requires interagent utility comparisons really agent utility function specified positive affine transformations 
pareto efficiency pareto efficiency solution evaluation criterion takes global perspective 
alternative mechanisms evaluated pareto efficiency comparing solutions mechanisms lead 
solution pareto efficient pareto optimal solution agent better agent worse pareto efficiency measures global require questionable interagent utility comparisons 
social welfare maximizing solutions subset pareto efficient ones 
price bid 
evaluation criteria sum payoffs maximized agent payoff increase agent payoff decreases 
individual rationality participation negotiation individually rational agent agent payoff negotiated solution payoff agent get participating negotiation 
mechanism individually rational participation individually rational agents 
individually rational mechanisms viable negotiated solution individually rational agent self interested agent participate negotiation 
stability self interested agents mechanism designed stable motivate agent behave desired manner 
self interested agent better behaving manner desired 
possible design mechanisms dominant strategies 
means agent best specific strategy matter strategies agents 
agent best strategy depends strategies agents choose 
settings dominant strategies exist stability criteria needed 
basic nash equilibrium 
strategy profile hs jaj agents nash equilibrium agent agent best strategy best response agents choose strategies hs gamma jaj words nash equilibrium agent chooses strategy best response agents strategies 
main problems applying nash equilibrium 
games nash equilibrium exists 
second games multiple nash equilibria obvious agents play 
limitations regarding nash equilibrium guarantees exists unique 
sequential games guarantees stability game 
stage strategies need equilibrium anymore 
refined solution concept called subgame perfect nash equilibrium defined nash equilibrium remains nash equilibrium subgame subgames actual path play reached 
solution concept suffers existence uniqueness problems 
second nash equilibrium weak subgroups agents deviate coordinated manner 
refinements nash equilibrium solution concept guarantee stability collusive deviations 
discussed section 
distributed rational decision making efficiency goals stability goals conflict 
simple example prisoner dilemma game unique welfare maximizing pareto efficient strategy profile agents cooperate table 
hand dominant strategy equilibrium nash equilibrium agents defect 
column player cooperate defect row cooperate player defect table prisoner dilemma game 
row player payoff listed 
computational efficiency clearly mechanisms designed agents little computation needed possible 
classically mechanisms designed lead domain solutions satisfy evaluation criteria 
mechanisms ones lowest computational overhead preferred 
advanced approach explicitly trade cost process solution quality :10.1.1.72.5760
distribution communication efficiency equal distributed protocols preferred order avoid single point failure performance bottleneck reasons 
simultaneously minimize amount communication required converge desirable global solution 
cases goals conflict 
rest chapter discusses different interaction protocols evaluation criteria far 
mechanisms include voting auctions bargaining markets contracting coalition formation 
voting voting social choice setting agents give input mechanism outcome mechanism chooses inputs solution agents 
settings outcome enforced agents abide solution prescribed mechanisms 
voting truthful voters classic goal derive social choice rule ranks feasible social outcomes individuals rankings outcomes 
set agents set feasible outcomes society 
furthermore agent asymmetric transitive strict preference relation social choice rule takes input agents preference relations jaj produces output social preferences denoted relation intuitively properties social choice rule desirable social preference ordering exist possible inputs individual preferences 
defined pair asymmetric transitive outcome pareto efficient scheme independent irrelevant alternatives 
specifically arrays consumer rankings satisfy iff social ranking situations 
agent dictator sense implies preferences agents 
unfortunately possible satisfy desiderata theorem arrow impossibility theorem social choice rule satisfies conditions 
design social choice rules desiderata relaxed 
commonly property relaxed sense domain combinations individual preferences rule works restricted 
discussed conjunction voting 
third desideratum relaxed 
done plurality protocol majority voting protocol alternatives compared simultaneously highest number votes wins 
introducing irrelevant alternative split majority favor old favored alternative favor newly introduced alternative 
may cause old favorite newly introduced irrelevant alternative drop originally preferred alternatives social choice 
binary protocol alternatives voted pairwise winner stays challenge alternatives loser eliminated 
plurality protocols binary protocols irrelevant alternatives changes outcome 
furthermore binary protocols agenda order pairings totally change socially chosen outcome 
example shows different agendas lead different outcome preferences agents 
interestingly agenda alternative distributed rational decision making wins agent prefers words social choice pareto dominated case 
agents preferences agents preferences agents preferences different agendas binary protocol alternatives number alternative outcomes large pairwise voting may slow alternative called borda protocol 
borda count assigns alternative joj points highest agent preference list joj gamma second 
counts summed voters 
alternative highest count social choice 
borda protocol lead paradoxical results example irrelevant alternatives 
table shows example removing lowest ranked irrelevant alternative set possible outcomes leads worst remaining alternatives turning best best turning worst 
agent preferences borda count wins loses borda count removed wins loses table winner turns loser loser turns winner paradox borda protocol 
voting strategic voters far assumed executing social choice method agents preferences known 
reality seldom case 
agents usually reveal declare preferences 
assuming knowledge preferences equivalent assuming agents reveal preferences truthfully 
agent benefit declaring preferences 
complicates design social choice mechanisms 
area game theory called mechanism design explores interaction mechanisms rational agents 
goal generate protocols agents stability solution concept dominant strategy equilibrium nash equilibrium refinements type equilibrium desirable social outcomes follow 
strategies externally imposed agents agent uses strategy best 
agent type theta totally characterizes preferences affected possible private information 
social choice function chooses social outcome agents types 
agents hard implement needs motivate agents reveal types 
protocol rules game said implement particular social choice function protocol equilibrium may involve play agents outcome outcome social choice function agents revealed types truthfully 
positive result conceptually allows restrict search desirable protocols ones revelation occurs truthfully single step 
theorem revelation principle suppose protocol may include multiple steps implements social choice function delta nash dominant strategy equilibrium agents strategies necessarily truthful 
delta implementable nash dominant strategy respectively equilibrium single step protocol agents reveal entire types truthfully 
proof changing protocol construct best original equilibrium strategic revelation behalf agent revelation depends agent truthful preferences simulate old protocol agents constructed 
new protocol agent motivated reveal type truthfully single step protocol take care optimally lying agent behalf 
idea incorporating strategy generation protocol problematic computationally limited agents 
original protocol may infeasible prohibitively costly agent compute best strategy 
complex protocol agents play equilibrium 
may undesirable agents may play uncoordinated strategies leading undesirable distributed rational decision making outcomes 
hand equilibrium outcomes undesirable protocol designer construct complex protocol agents find equilibrium hope desirable outcome emerge 
revised protocol proof assumed protocol solve equilibrium 
computation costly pays computation required solve equilibrium 
protocols solving equilibrium hard noncomputable 
nash equilibrium version theorem additional weaknesses 
assumes agents protocol designer common knowledge joint probabilities agents types 
second revised protocol may nash equilibria addition truthful theorem says truthful exists 
problem partially alleviated called augmented revelation mechanisms 
theorem positive nature negative result establishes general case non manipulable protocols theorem satterthwaite impossibility theorem agent type consist preference order restrictions agent may rank outcomes order 
joj 
social choice function delta truthfully implementable dominant strategy equilibrium delta agent gets preferred outcomes chosen matter types reveal 
circumventing satterthwaite impossibility theorem restricted preferences groves clarke tax mechanism design protocols impossible may light theorem 
individual preferences may happen belong restricted domain invalidating conditions impossibility theorem known islands space agents preferences protocols constructed 
go example 
outcomes form jaj amount divisible money agent receives outcome encodes features outcome 
agents preferences called quasilinear represented utility functions form example voting build joint pool say pool built 
call agent gross benefit pool gross say cost pool divided equally agents gammap jaj 
agent net benefit gross gamma jaj 

theorem applies agent preferences restricted complete transitive strict 
voting agent reveals valuation possible social choice arg maxg agent levied tax tax gamma arg maxg vk algorithm clarke tax algorithm 
environment require things 
agent care divide payoffs 
violated agent wants enemies pay friends 
second agent valuation gross pool depend amount money agent 
violated example rich agents time enjoy pool 
voting build pool agents vote pool impose externality pay 
hand pro pool voters pay incentive vote pool free ride pool built anyway due votes 
solution agents precisely internalize externality imposing tax agents vote changes outcome 
size agent tax exactly vote lowers utility 
agents changing outcome pay tax 
theorem agent quasilinear preferences algorithm agent dominant strategy reveal true preferences example pool built utility agent gamma jaj gamma tax 
mechanism leads socially preferred chosen 
agents dominant strategy agents need waste effort preference declarations 
furthermore participation mechanism increase agent utility participation individually rational 
unfortunately mechanism maintain budget balance tax collected 
truth dominant algorithms problem little tax collected negative taxes guarantee sum taxes zero 
schemes little collected require external operate 
schemes collect pareto efficient extra tax revenue burnt 
back agents donated cause agents care 
redistribution affect agents utilities longer dominant 
problem algorithm coalition proof 
coalition voters coordinate preference achieve higher utilities 
table presents agent example distributed rational decision making cost building pool agent 
study case agents collude 
collusion agents collude gross tax tax build build gamma gamma gamma gamma gamma table example collusion clarke tax algorithm 
traditionally clarke tax mechanism solve single isolated social choice problem 
multiagent planning ai mean voting possible multiagent plans 
intractable 
reduce complexity ephrati variant method agents repeatedly clarke tax mechanism planning timestep plan time 
multistep approaches careful dominant strategy 
outcomes different independent value agent risk agent speculatively reveal higher truthful valuations outcomes anticipates outcomes particular ones currently available outcomes 
ways circumvent satterthwaite impossibility theorem agents happen preferences restricted particular way allows avoid negative theorem 
ways circumvent seemingly unavoidable tradeoff 
example ex ante fairness achieved choosing dictator randomly protocol 
done protocol agent submits vote hat decisive vote pulled hat random 
clearly agent dominant strategy vote truthfully vote gets chosen best voting preferred alternative vote chosen matter agent voted 
possible way getting theorem 
protocol computing revelation better truthful prohibitively costly computationally 
difficulty approach guarantee agent manipulate manipulation provably hard instance combination agents preferences just worst case 
difficulty possible prove auctions deterministically finding beneficial manipulation hard agent randomly generate simulate protocol strategies matter dominant strategy equilibrium check guessed manipulations beneficial 
auctions mechanism design auctions provide special setting important relatively easily analyzable 
auctions practical computer science applications successful web sites exist buying selling items auction protocols 
voting outcome binds agents auctions outcome usually deal agents auctioneer bidder 
voting protocol designer assumed want enhance social auctions auctioneer wants maximize profit 
auction theory analyzes protocols agents strategies auctions 
auction consists auctioneer potential bidders 
auctions usually discussed situations auctioneer wants sell item get highest possible payment bidders want acquire item lowest possible price 
discussion section pertain classical setting contracting setting auctioneer wants subcontract tasks lowest possible price bidders handle tasks want receive highest possible payment doing 
mechanisms setting totally analogous mechanisms 
auction settings qualitatively different auction settings depending agent value monetary equivalent utility item formed 
private value auctions value depends agent preferences 
example auctioning cake winning bidder eat 
key winning bidder item get utility showing cases value depend agents valuations valuation monetary equivalent expected utility 
agent assumed know value exactly 
hand common value auctions agent value item depends entirely agents values identical agent symmetry criterion 
example auctioning treasury bills fulfills criterion 
inherently prefers having bills value bill comes entirely possibilities 
correlated value auctions agent value depends partly preferences partly values 
example negotiation contracting setting fulfills criterion 
agent may handle task case distributed rational decision making agent local concerns define cost handling task 
hand agent task case cost depends solely agents valuations 
section discusses different auction protocols 
protocols different properties different auction settings 
auction protocols english price open cry auction bidder free raise bid 
bidder willing raise anymore auction ends highest bidder wins item price bid 
agent strategy series bids function private value prior estimates bidder valuations past bids 
private value english auctions agent dominant strategy bid small amount current highest bid private value price reached 
correlated value auctions rules varied auctioneer increase price constant rate rate thinks appropriate 
open exit bidder openly declare exiting re entering possibility 
provides bidders information regarding agent valuation 
price sealed bid auction bidder submits bid knowing bids 
highest bidder wins item pays amount bid 
agent strategy bid function private value prior beliefs valuations 
general dominant strategy bidding auction 
agent best strategy bid true valuation depends bid 
agent want bid lowest amount wins auction amount exceed valuation 
common knowledge assumptions regarding probability distributions agents values possible determine nash equilibrium strategies agents 
example private value auction valuation agent drawn independently uniform distribution nash equilibrium agent bids jaj gamma jaj see 
dutch descending auction seller continuously lowers price bidders takes item current price 
dutch auction strategically equivalent price sealed bid auction games agent bid matters highest relevant information revealed auction process 
dutch auctions efficient terms real time auctioneer decrease price pace 
observe participating dutch auction simulation www edu auction 
vickrey second price sealed bid auction bidder submits bid knowing bids 
highest bidder wins price second highest bid 
agent strategy bid function private value prior beliefs valuations 
auctions theorem bidder dominant strategy private value vickrey auction bid true valuation 
bids valuation increment difference winning loss wins 
bids smaller chance winning winning price unaffected theorem means agent best bidding truthfully matter bidders capabilities operating environments bidding plans desirable sides 
agents reveal preferences truthfully allows globally efficient decisions 
second agents need waste effort agents matter making bidding decision 
vickrey auctions widely advocated adopted computational multiagent systems 
example versions vickrey auction allocate computation resources operating systems allocate bandwidth computer networks computationally control building heating 
hand vickrey auctions widely adopted auctions humans protocol invented years ago 
limitations vickrey auction protocol especially computational multiagent systems discussed 
pay auctions family auction protocols 
mechanisms participating bidder pay amount bid amount auctioneer 
schemes computational multiagent systems tool reallocation 
methods susceptible infinite escalations bids discussed 
efficiency resulting allocation isolated private value common value auctions auction protocols english dutch price sealed bid vickrey allocates auctioned item pareto efficiently bidder values 

bidders know values result depend bidders risk neutrality 
hand bidder uncertainty valuation result holds risk neutral bidder risk averse bidder better bidding expected valuation 

private value auctions vickrey auction strategically equivalent english auction 
produce allocation prices 
hand correlated value auctions agents bids english auction provide information agent valuation 
english vickrey auctions strategically equivalent general may lead different results 

holds long auctioneer sells item 
hand auctioneer reservation price may inefficiently item highest bidder really values item auctioneer 
distributed rational decision making pareto efficient allocation ones dominant strategies vickrey auction english auction efficient sense effort wasted bidders 
revenue equivalence non equivalence imagine price auctions give higher expected revenue auctioneer second price auctions auctioneer gets second price 
hand price auctions bidders second price auctions bid truthfully 
effects stronger protocol auctioneer choose maximizes expected revenue 
turns effects exactly equally strong theorem revenue equivalence auction protocols produce expected revenue auctioneer private value auctions values independently distributed bidders risk neutral 
risk averse bidders dutch price sealed bid protocols give higher expected revenue auctioneer vickrey english auction protocols 
protocols risk averse agent insure bidding optimal risk neutral agent 
hand risk averse auctioneer achieves higher expected utility vickrey english auction protocols dutch price sealed bid protocol 
fact revenue equivalence holds private value auctions mean usually holds practice auctions pure private value auctions 
non private value auctions bidders english auction especially open exit variant leads higher revenue vickrey auction 
reason bidders willing go high price causes bidder increase valuation auctioned item 
type auctions english vickrey protocols produce greater expected revenue auctioneer price sealed bid auction equivalent dutch auction 
bidder collusion problem auction protocols english dutch price sealed bid vickrey collusion proof 
bidders coordinate bid prices bids stay artificially low 
manner bidders get item lower price normally 
english auction vickrey auction self enforce collusion agreements 
perspective collusion price sealed bid dutch auctions preferable 
example shows 
bidder smith value bidder value auctioned item 
say bidders collude auctions deciding smith bid bid 
english auction self enforcing agents exceeds smith observe willing go way cheater gain breaking coalition agreement 
vickrey auction collusion agreement just smith bids smith get item anyway 
bidding removes incentive bidder break coalition agreement bidding bid win auction 
hand price sealed bid auction smith bids agents incentive bid higher smith bid cause win auction 
holds dutch auction 
collusion occur vickrey auction price auction dutch auction bidders need identify submission bids non member coalition win auction 
hand english auction necessary bidders identify bids 
prevent auctioneer organize computerized english auction bidding process reveal identities bidders 
lying auctioneer auctioneer may problem vickrey auction 
auctioneer may second highest bid highest bidder bidder verify 
second offer give highest bidder higher bill receive auctioneer truthful 
cheating auctioneer suggested main reasons vickrey auction protocol widely adopted auctions humans 
solve problem cryptographic electronic signatures bidders auctioneer second best bid winning bidder able alter 
auction protocols english dutch price sealed bid suffer lying auctioneer highest bidder gets item price bid 
non private value auctions english pay auction protocol auctioneer bid auction order real bidders increase valuations item 
possible sealed bid protocols dutch protocol bidders observe bids 
auctioneer may tools disposal 
example may place bid guarantee item sold certain price achieved having reservation price may may public bidders 
example vickrey auction auctioneer motivated bid true reservation price 
chance bid second highest case determines item price 
leads possibility auctioneer ends inefficiently keeping item bidders valuations exceed true distributed rational decision making reservation price 
bidders lying non private value auctions auctions pure private value auctions agent valuation depends part agents valuations 
example contracting settings bidder evaluation task affected prices agent subcontract task parts agents 
type commonly allowed automated versions contract net protocol 
common value correlated value auctions suffer winner curse 
agent bids valuation wins auction know valuation high agents bid 
winning auction amounts monetary loss 
knowing advance agents bid valuations 
best strategy vickrey auctions 
vickrey auction promotes truthful bidding private value auctions fails induce truthful bidding auction settings 
undesirable private information revelation vickrey auction truthful bidding dominant strategy private value auctions agents bid truthfully 
leads bidders revealing true valuations 
information sensitive bidders prefer reveal 
example winning contract low bid production cost low making larger profits thought 
observed auction results revealed want deals get higher payoff 
suggested problem lying auctioneer main reasons vickrey auction protocol widely auctions humans 
price auction protocols expose bidder valuation clearly bid agent model bidders possibly inaccurate model known 
auction types may desirable vickrey auction valuations sensitive 
roles computation auctions auction theory usually study computational aspects auctions 
dai perspective crucial 
issues arise computation auctions discussed computationally complex lookahead arises auctioning interrelated items time implications costly local marginal cost valuation computation information gathering single shot auction 
auctions inefficient allocation lying interrelated auctions addition single item auctions vickrey auctions widely studied allocation multiple items homogeneous dominance maintained 
case auctioning heterogeneous interrelated goods received attention 
setting real world problems including computational agents :10.1.1.72.5760
section discusses cases heterogeneous items auctioned time agent valuations items interdependent additive 
occurs example task allocation transportation problems 
presents simple example problem delivery tasks task auctioned auctioneer wants get tasks handled agent agent small example problem agents delivery tasks 
paying agents little possible handling 
initial locations agents 
handle task agent needs move arrow take parcel arrow 
agent movement incurs cost irrespective carrying parcel 
agents need return initial locations 
costs handling tasks subscripted name agent measured ft ft ft ft ft ft 
say costs common knowledge agents 
clearly globally optimal allocation agent handles tasks 
allocation reached agents treat auctions independently bid truthfully 
auction example task allocated 
agent bids ft agent bids ft 
task allocated agent 
second auction task allocated 
agent bids ft agent bids ft allocated agent 
resulting allocation tasks suboptimal 
agent takes ownership account bidding bid ft gamma ft gamma 
case may allocated agent 
cases resulting allocation tasks suboptimal 
alternatively agents incorporate full lookahead auction strategies 
way optimal allocation reached agents bid true item costs 
auction example agent distributed rational decision making best bidding costs takes account tasks agent 
look auction agent bid ft gamma ft gamma ft 
agent bid ft gamma ft gamma ft 
agent win price get payoff gamma second auction agent gets zero 
hand agent bids equal agents get zero payoff second auction irrespective gets allocated 
known getting auction worth extra agent extra agent 
auction agent dominant strategy bid ft gamma gamma 
lower agent bid ft gamma gamma agent gets second auction agent gets discussed 
globally optimal allocation reached 
agent bids truthful bid auctions treated independently lookahead 
put lookahead key feature auctions multiple interrelated items 
date adequately addressed computational multiagent systems vickrey auctions common misunderstanding vickrey auctions promote single shot truth telling interrelated auctions 
auctions humans interrelationships addressed allowing bidder pool interrelated items entirety bid 
method enhancing efficiency interrelated auctions allow agents backtrack commitments paying penalties 
allows winning agent beneficially decommit auctioned item case agent get items related auctions :10.1.1.72.5760
question revisited section 
avoidance counterspeculation original reasons suggested adopting vickrey auction lookahead requires speculation sense trying guess items going auctioned agents going win auctions 
speculative issues sequential vickrey auctions discussed example 
complete information computational cost full lookahead searching game tree deep items auctioned sequentially may prohibitively great 
required devise methods controlling search advantages partial lookahead traded cost 
counterspeculation computing valuation vickrey auction protocol fails avoid counterspeculation single shot auction 
look situation agent uncertainty regarding valuation auction item pay remove uncertainty 
situation occurs computational agents value task contract determined carrying costly computation solution combinatorial auctions problem :10.1.1.72.5760
alternatively payment viewed cost solving prediction problem cost performing information gathering action cost paid expert oracle 
theorem incentive single shot private value vickrey auction uncertainty agent valuation risk neutral agent best deliberation information gathering action depend agents 
follows counterspeculation cheap worth 
proof example 
bidders 
valuation auctioned item uniformly distributed agent know valuation exactly 
exact valuation common knowledge 
say implies agent choice finding exact valuation auction paying cost agent take informative costly action 
matter agent chooses agent bid bidding ones valuation dominant strategy single shot private value vickrey auction 
agent chooses pay agent bid bidding ones expected valuation risk neutral agent dominant strategy private value vickrey auction 
agent gets item price agent valuation turns agent suffer loss 
agent expected payoff gamma dv gamma agent chooses pay exact information bid bidding ones valuation dominant strategy single shot private value vickrey auction 
agent gets item note agent chance suffering loss hand invested information 
agent expected payoff info gamma gamma gamma gamma agent choose buy information iff info gamma gamma gamma agent best choice action depends agent valuation agent benefit agent 
distributed rational decision making bargaining bargaining setting agents mutually beneficial agreement conflict interest agreement 
classical microeconomics assumptions monopoly perfect competition 
monopolist gets gains interaction agent facing perfect competition profit 
real world settings usually consist finite number competing agents monopoly perfect competition assumptions strictly apply 
bargaining theory fits gap 
major subfields bargaining theory axiomatic strategic 
axiomatic bargaining theory noncooperative strategic game theory axiomatic bargaining theory idea solution concept agents strategies form type equilibrium 
desirable properties solution called axioms bargaining solution postulated solution concept satisfies axioms sought 
nash bargaining solution historically early solution concept uses approach 
nash analyzed agent setting agents decide outcome fallback outcome fallback occurs agreement reached 
utility function 
agent 
assumed set feasible utility vectors jo og convex 
occurs example outcomes include possible lotteries actual alternatives 
deals individually rational higher utility fallback agents multiple nash equilibria exist 
example agents bargaining split dollar splits give agent zero equilibrium 
agent strategy offer ae agent best response take offer opposed fallback zero 
best response offer ae 
nash equilibrium exists ae defines contract individually rational agents feasible ae 
due equilibrium stronger axiomatic solution concept nash bargaining solution needed prescribe unique solution 
axioms nash bargaining solution invariance agents numeric utility functions really represent ordinal preferences outcomes actual cardinalities utilities matter 
possible transform utility functions way strictly increasing linear function fallback fallback 
anonymity symmetry switching labels players affect outcome 
bargaining independence irrelevant alternatives outcomes removed remains solution 
pareto efficiency feasible give players higher utility 
theorem nash bargaining solution unique solution satisfies axioms arg max gamma fallback gamma fallback nash bargaining solution directly extended agents long fallback occurs agent disagrees 
agent nash bargaining solution agent special case shapley value particular solution concept payoff division coalition formation discussed section coalitions agents cooperate agents agree 
bargaining solutions exist 
postulate different desiderata axioms arrive different utility combination outcome 
strategic bargaining theory axiomatic bargaining theory strategic bargaining theory postulate desiderata axioms solution concept 
bargaining situation modeled game solution concept analysis players strategies equilibrium 
follows games solution unique 
hand strategic bargaining theory explains behavior rational utility maximizing agents better axiomatic approaches 
agents choose strategies rely agents pertaining axiomatic imposed notions fairness 
strategic bargaining theory usually analyses sequential bargaining agents alternate making offers prespecified order 
agent gets offer 
example think deciding split dollar 
protocol finite number offers time discount unique payoffs subgame perfect nash equilibria get dollar minus ffl agent better accepting ffl rejecting receiving 
simplicity rest section say similar situations ffl zero agent accept 
time discount factor ffi incorporated model 
round dollar worth round worth ffi 
time discount subgame perfect nash equilibrium finite game length solved starting 
example ffi table represents maximal claims acceptable agent 
round accept zero 
round keep knows loose waiting round 
reasoning works previous rounds 
distributed rational decision making round share share total value 
gamma gamma gamma gamma gamma gamma gamma table maximal acceptable claims finite game 
protocol non discounted setting allows infinite number bargaining rounds solution concept split dollar supported subgame perfect nash equilibrium just single shot case 
hand discounting infinite game solved theorem rubinstein bargaining solution discounted infinite round setting subgame perfect nash equilibrium outcome unique 
agent gets gamma ffi gamma ffi ffi ffi discount factor ffi 
agent gets minus 
agreement reached round 
proof denote maximum undiscounted share get subgame perfect nash equilibrium turn offer 
logic example table filled 
ways round share share 
gamma gamma ffi gamma ffi gamma gamma ffi 
table maximal acceptable claims infinite game different discount factors 
represent maximum undiscounted share get subgame perfect nash equilibrium turn offer 
setting equal gives gamma ffi gamma ffi gamma ffi gamma ffi ffi upper bound undiscounted share get subgame perfect nash equilibrium turn offer 
go bargaining argument replacing minimum undiscounted share get subgame perfect nash equilibrium turn offer 
minimum equal maximum completes proof 
proof technique allows solve subgame perfect nash equilibrium payoffs impossible carry complete lookahead game tree infinitely long 
model sequential bargaining discounts assumes fixed bargaining cost negotiation round 
agents symmetric bargaining costs solution concept split dollar supported subgame perfect nash equilibrium 
bargaining cost slightly smaller cost gets entire dollar 
offered round period gamma offer gamma gamma keep 
round gamma offer gamma keep gamma gamma reasoning round gamma agent get keep gamma gamma gamma approaches gamma increases 
realizing bargain accept zero front 
bargaining cost greater receives payoff equals second agent bargaining cost agent receives rest 
agreement reached round 
case equivalent previous case agent smaller bargaining cost willing give agent order avoid going period bargaining 
kraus extended sequential bargaining case outside options 
analyze case agent gains loses time 
discuss negotiation time agents know types 
computation bargaining bargaining models discussed assume perfect rationality agents 
computation required finding mutually desirable contract 
space deals assumed fully comprehended agents value potential contract known 
hand focus developing methods cost search deliberation solutions explicit decision theoretically traded bargaining gains search provides 
particularly important bargaining techniques scaled combinatorial problems multidimensional negotiation space opposed combinatorially simple ones splitting dollar 
searches occurring bargaining 
intra agent deliberative search agent locally generates alternatives evaluates lookahead negotiation process inter agent committal search agents binding agreements regarding solu distributed rational decision making tion 
agreements may occur part solution time 
agreed issues provide context focused intra agent deliberative search reducing amount costly computation required 
committal search may involve iteratively parts solution agreed desirable light newer agreements regarding parts solution 
search model proposed similar real time search agent trade thorough deliberation real world actions 
similarly modeling bargaining settings require nontrivial computations agent strategy incorporate negotiation actions deliberation actions 
bargaining setting complex single agent setting real time multiple self interested agents agents strategies equilibrium 
general equilibrium market mechanisms section presents general equilibrium theory microeconomic market framework successfully adapted computational multiagent systems application domains :10.1.1.31.779
general equilibrium theory provides distributed method efficiently allocating goods resources agents striking best tradeoffs moderately complex multidimensional search space market prices 
market commodity goods commodities coffee meat parameters airplane design flows traffic network electricity power network mirror sites internet 
amount commodity unrestricted commodity assumed arbitrarily divisible continuous opposed discrete 
different elements commodity distinguishable different commodities distinguishable 
market prices pn price market types agents consumers producers 
consumer utility function encodes preferences different consumption bundles ig consumer allocation consumer initial endowment ig endowment commodity producers commodities produce 
jn production vector jg amount producer produces 
net usage commodity denoted negative number 
producer capability turning inputs outputs characterized production possibilities set set feasible production vectors 
profit producer delta producer profits divided consumers predetermined proportions need equal think consumers owning stocks producers 
ij general equilibrium market mechanisms fraction producer consumer owns 
producers profits divided consumers shares 
consumers assumed say producers production decisions 
prices may change agents may change consumption production plans actual production consumption occur market reached general equilibrium 
say general walrasian equilibrium markets clear ii consumer maximizes preferences prices arg max 
deltax deltae ij deltay iii producer maximizes profits prices arg max delta properties general equilibrium general equilibrium solutions desirable properties theorem pareto efficiency general equilibrium pareto efficient agent better making agent worse 
means possible methodology finding solutions agents problem agent better general equilibrium 
solution stable collusion theorem coalitional stability general equilibrium producers stable sense core solution concept coalition formation games subgroup consumers increase utilities pulling equilibrium forming market 
situation complex producers example set consumers part producer shares coalition produce 
unfortunately domains general equilibrium exists 
example may best producer produce infinite amount 
sufficient conditions existence known theorem existence production possibilities sets closed include boundaries convex bundles gamma ff ff distributed rational decision making bounded infinite amount produced 
consumers preferences continuous preferences jumps strictly convex consumer prefers prefers gammaff ff strongly monotone consumer strictly prefers commodity 
society wide bundle amount commodity positive positive endowments trivially imply general equilibrium exists 
example economies scale production violate convexity production possibilities 
continuity consumer preferences violated bandwidth allocation agent welfare jumps threshold able participate video conference reached 
similarly consumer preferences convex consumer starts prefer relative goods gets 
drugs web surfing examples 
general equilibrium exists unique 
easily understood sufficient condition uniqueness theorem uniqueness gross substitutes general equilibrium unique society wide demand nondecreasing prices goods 
example price meat increases consumers convert satisfying hunger expensive foods 
follows demand potatoes increases 
hand conditions theorem met 
example price bread increases demand butter decreases 
complementarities common production producers need inputs create outputs 
basic general equilibrium framework account externalities 
consumption externalities agent consumption affects agent utility 
production externalities agent production possibilities set directly affected agent actions 
glance hogg examples computational ecologies general equilibrium theory externalities dominant adding resources system operate efficiently 
hogg shown externality problems common computational ecosystems 
evolutionary aspects systems discussed behaviors incomplete delayed information analyzed 
mechanisms attack externality problems include taxes viewing externality issues commodities 
distributed search general equilibrium operational motivation market mechanisms agents find efficient joint solution takes account tradeoffs agents fact values different goods single agent may interdependent general equilibrium market mechanisms algorithm price pg set positive number gamma repeat broadcast consumers producers receive production plan producer broadcast plans consumers receive consumption plan consumer gamma pg pg ig gamma ig gamma jg ig gamma ig gamma jg ffl inform consumers producers equilibrium reached algorithm consumer repeat receive receive production plan announce consumption plan maximizes budget constraint delta delta ij delta informed equilibrium reached exchange consume algorithm producer repeat receive announce production plan maximizes delta informed equilibrium reached exchange produce algorithm distributed price tatonnement algorithm 
centralizing information control 
algorithms search general equilibrium centralized decentralized 
common decentralized algorithm purpose price tatonnement process algorithm steepest descent search method 
clearly general equilibrium exists algorithm find 
furthermore price tatonnement algorithm fails find equilibrium equilibria exist 
sufficient conditions guarantee equilibrium exists 
sufficient condition gross substitutes property theorem 

generally theorem convergence price tatonnement algorithm general equilibrium delta gamma gamma proportional equilibrium price vector 
strictly speaking convergence guarantees apply continuous distributed rational decision making variant dp dt ig gamma ig gamma jg realistic discrete step version algorithm 
results suggest discrete variant converges gross substitutes long multipliers algorithm sufficiently small 
multipliers large search may keep overshooting equilibrium 
hand small multipliers convergence slow 
potential solution problem dynamically adjust step size newton method dp dt gamma gamma ig gamma ig gamma jg gammae gamma delta delta delta gammae gamma pn 
xin gammae gamma jn delta delta delta xin gammae gamma jn pn newton method requires fewer iterations steepest descent iteration computationally intensive requires computation communication derivative information consumers producers 
conceptually take information communication limit having producers consumers submit entire production consumption functions plans function possible price vectors price run centralized search known efficient algorithms equilibrium 
conflicts original motivations market mechanisms decentralization 
tatonnement process walras simulation differs algorithm 
walras uses asynchronous declarations agents agent change plan regarding subset goods time 
similarly agents take arbitrary turns making new declarations 
certain conditions process converges general equilibrium 
tatonnement trades walras occur market process arrived close general equilibrium 
addition price market mechanisms quantity resource mechanisms exist reaching general equilibrium 
mechanisms announces production consumption plans producers consumers announce willingness pay terms prices marginal utilities 
price algorithms quantity algorithms maintain feasible solution front feasible solution markets clear iteration 
constitutes interruptible anytime algorithm 
quantity algorithms offer choice carrying ac general equilibrium market mechanisms tual exchanges iteration price algorithms 
advantages come cost increased information centralization communication example needs know production possibilities sets 
treatments market search discuss complexity finding equilibrium agent supply demand functions known 
may computationally complex agent generate optimal supply demand decision current prices 
example agent manufacturer may need solve planning scheduling problems just construct production possibilities set choose profit maximizing production plan 
furthermore agent go local deliberation iteration market protocol prices change affects optimal plan agent speculative strategies equilibrium markets general equilibrium markets agents assumed act competitively treat prices exogenous 
means agent reveals demand supply decisions truthfully maximize utility profit market prices assuming impact prices 
idea assumption market large single agent actions affect prices 
paradoxical agents declarations completely determine prices 
price assumption valid number agents approaches infinity infinitely agents comparable size agent best acting competitively affect prices 
markets finite number agents agent act strategically potentially achieve higher utility representing pp :10.1.1.31.829

doing agent speculate affects market prices simultaneously affected agents respond prices changed due agent strategic actions 
words general equilibria general correspond strictly rational strategic equilibria game theory 
section :10.1.1.31.829
analyze agent gain speculation 
standard lies agent drive market solution maximizes agent gains speculation looks general equilibrium agents 
results independent market algorithm long actual exchanges take place market reached close equilibrium 
case speculating consumer goal self interested consumer find consumption bundle maximizes utility 
find optimal bundle acting equilibrium market consumer speculate agents respond prices 
distributed rational decision making demand decisions affect prices affect demand supply decisions affect prices consumer faces 
model agents consumer computes optimal demand decisions 
note agents speculating way suboptimal way 
included agent model agents 
solution maximization problem gives highest utility speculating consumer possibly obtain 
max 
sg consumer produce sg sg gamma consumers ig gamma ig gamma jg supply meets demand delta gamma sj delta budget constraint case speculating producer goal self interested producer find production vector maximizes profits 
requires model react prices producer production decisions affect prices affect demand supply decisions affect prices producer faces 
solution maximization problem gives highest profit speculating producer possibly obtain 
max delta 
feasible production plan sg ig gamma ig gamma producers jg supply meets demand equality turns free disposal inputs outputs possible 
solution applicable optimization problem depending speculator producer consumer denoted equilibrium pareto efficient general 
violate theorem 
result applies true general equilibria agents act competitively 
reaching equilibrium speculation driving market discussion focused prices speculating agent drive market 
risk speculator equilibrium exists market algorithm find 
speculating agent best strategy declare demand plans production plans market clears desired prices equilibrium exists market process find 
formally market clears general equilibrium market mechanisms sg sg gamma consumers ig gamma ig gamma jg consumer sg ig gamma ig gamma producers jg producer 
remains analyzed particular market algorithms finds equilibrium speculator acts strategically 
standard market algorithms price tatonnement newtonian price tatonnement walras guaranteed find equilibrium ig gamma ig gamma jg society wide demand decreases price increases ig gamma ig gamma jg goods goods gross substitutes 
assume conditions hold market speculator 
speculating agent uses strategy satisfies eq 
sg gamma sg consumer sg producer goods sg gamma sg consumer sg producer market guaranteed converge unique equilibrium prices maximize speculator gain 
turns simple generic strategies exist speculator guarantee conditions met speculator able drive market equilibrium maximal gain speculation materializes :10.1.1.31.829
example linear strategy viable consumer gammae gamma gamma consumers ig gamma ig gamma jg constant strategy gammae gamma consumers ig gamma ig gamma jg corresponding strategies speculating producer gamma ig gamma ig gamma producers jg ig gamma ig gamma producers jg distributed rational decision making consideration speed convergence equilibrium 
particular market setting may market converges slower faster agent acts strategically acts competitively 
strategic behavior multiple agents analysis far agent designed speculative strategy strategies fixed 
tailor strategies specific strategy agent chooses 
reason argue strategic solution concepts game theory design market protocols 
strategies nash equilibrium agent strategy best response strategies 
viewed necessary condition system stability settings agents act strategically 
stronger condition require dominant strategy equilibrium agent strategy optimal agent matter strategies choose 
market protocols studied dominant strategy equilibrium 
results negative sense agents need price ratios trading advance protocol designer designer know agents preferences capabilities 
beneficial trades occur solution usually pareto efficient 
sequential protocols strengthen nash equilibrium solution concept multiple ways requiring strategies stay equilibrium step game 
market speculation analysis section far nash equilibrium outcome specific market protocol 
important factors impacting outcome order bids submitted see vs cournot models bids sealed open protocol iterative agents change excess demand iterations agents decommit agreements paying penalty games nash equilibrium exists market pure strategies 
simple example illustrates 
consumer agents engage market reveal excess demand functions simultaneously single round 
agent choose strategies choose 
provided knows choose choose chooses 
provided knows choose choose chooses 
possible pair strategies agent motivated deviate strategy nash equilibrium exists 
general existence uniqueness general equilibrium agents act competitively market imply existence uniqueness nash equilibrium 
market protocols may difficult analyze game theoretically 
example walras agents change demand functions computation equilibrium 
agents may deliberately send false bids generate iterations market process order learn contract nets agents excess demand supply functions 
agents involved probing time important factor 
agents reveal progressively competitive demands order speed convergence urgent get resources traded extend probing order maximize benefit trade 
game theoretic approach clearly preferred viable general equilibrium approach designing interaction mechanisms self interested agents general equilibrium approach may allow build reasonably multiagent systems 
example number comparably sized agents increases gains strategic acting decrease approaching zero number agents approaches infinity :10.1.1.31.829
secondly lack knowledge may speculation unprofitable 
minor uncertainty speculator estimates strategies speculator expected payoff may significantly higher acting competitively acting speculatively :10.1.1.31.829
beneficial lies easy compute strategies known may computationally complex deduce strategies speculator knows physical characteristics completely 
example speculator need solve manufacturer planning scheduling problems order able deduce production possibilities sets manufacturer manufacturer competitive strategy 
potential gains speculation great warrant costly computation may required speculation 
contract nets general equilibrium market mechanisms global prices implementations date single centralized mediator 
mediator communication computation bottleneck potential point failure system 
settings agents want direct control receives sensitive information posting information mediator controls dissemination 
furthermore unrealistic assume prices global may market costs propagate information agents settings distributed negotiation may warranted 
contract net protocol see chapter early variant distributed 
addressed non competitive behavior walras speculating agent experiments agent limited simple linear price prediction actions affect prices 
analysis required determine optimal strategy captured model 
need case optimal strategy may involve aggressive behavior probing described 
distributed rational decision making negotiation task allocation domain 
section discusses improvements contract net protocol 
new methods lead better results viable self interested agents original contract net protocol cooperative agents 
task allocation negotiation capability re allocating tasks agents key feature automated negotiation systems 
domains significant savings achieved tasks agents 
tasks inherently handled agent 
hand tasks negative interactions case better allocate different agents 
furthermore different agents may different resources leads different capabilities costs handling tasks 
section discusses task allocation self interested agents model captures considerations 
definition task allocation problem defined set tasks set agents cost function :10.1.1.26.6320
states cost agent incurs handling particular subset tasks initial allocation tasks agents ht init init jaj init init init original contract net variants lacked formal model making bidding awarding decisions 
formal model introduced gives rise negotiation protocol provably leads desirable task allocations agents :10.1.1.26.6320
model contracting decisions marginal cost calculations model invokes concept individual rationality contract basis implies individual rationality sequences contracts 
contract individually rational ir agent agent better contract 
specifically contractee accepts contract gets paid marginal cost mc add contract jt contract gamma handling tasks contract contract 
marginal cost dynamic sense depends tasks contractee 
similarly contractor willing allocate tasks contract current task set contractee pay contractee saves 
static version problem discussed contracting scheme works tasks resources resources affect cost functions added removed dynamically 
contract nets handling tasks contract mc remove contract jt gamma gamma contract protocol agents suggest contracts accepting rejecting decisions marginal cost calculations 
agent take contractor contractee roles 
tasks received earlier contract 
scheme assume agents know tasks cost functions 
domain independent contracting scheme task allocation improve step 
corresponds hill climbing space task allocations height metric hill social welfare gamma 
fact contractor pays contractee amount marginal costs half way causes benefit improved task allocation divided agent worse contract 
scheme anytime algorithm contracting terminated time worth payments received minus cost handling tasks agent solution increases monotonically 
follows social welfare increases monotonically 
details asynchronous distributed implementation marginal costs 
convergence globally optimal task allocation contract net implementations contract regards task task moved agent payment 
original contract understood particular search operator global hill climbing contracting algorithm task reallocation 
contracting protocol equipped contracts may get stuck local optimum contract individually rational task allocation globally optimal 
solve problem new contract types introduced cluster contracts set tasks atomically contracted agent swap contracts pair agents swaps pair tasks multiagent contracts agents involved atomic exchange tasks :10.1.1.26.6320
contract types avoids local optima theorem contract types exist task allocations ir contract contract types possible ir contract fourth type :10.1.1.26.6320
unfortunately contracting protocol equipped contract types globally optimal task allocation may reached ir contracts oracle choosing sequence contracts distributed rational decision making theorem instances task allocation problem ir sequence initial task allocation optimal exists contracts :10.1.1.26.6320
clearly subset contract types suffices 
problem oracle contracting may get stuck local optimum ir sequence exists agents may choose ir sequence 
address shortcoming new contract type ocsm contract defined combines characteristics contracts contract type ideas earlier contract types applied simultaneously atomically definition ocsm contract defined pair ht aei jaj theta jaj matrices 
element set tasks agent gives agent element ae amount pays ocsm contracts allow moving task allocation task allocation single contract 
shown ir sequence exist task allocation optimal contracting protocol incorporates ocsm contracts 
stronger claim 
theorem states ocsm contracts sufficient reaching global task allocation optimum finite number contracts 
result holds sequence ir ocsm contracts hillclimbing algorithm uses ocsm contracts oracle needed choosing sequence 
means perspectives social welfare maximization individual rationality agents accept ir contracts offered 
need wait profitable ones need worry current contract may profitable contract unprofitable 
need accept contracts ir anticipation contracts combination beneficial 
furthermore hill climbing algorithms need backtrack 
theorem jaj jt finite 
contracting protocol allows ocsm contracts hill climbing algorithm sequence ir contracts finds globally optimal task allocation finite number steps backtracking 
proof ocsm contracts local optima global optima global optimum reached task allocation single contract 
contract ir moving optimum suboptimal allocation improves welfare gain arbitrarily divided contract parties 
algorithm run ir contracts optimum reached 
finite jaj jt finite number task allocations 
algorithm hill climbs task allocation contract nets repeated 
optimum reached finite number contracts 
ocsm contracts necessary weaker set contract types suffices oracle choose order apply theorem ocsm contract protocol allow instances task allocation problem ir sequence exists initial allocation optimal :10.1.1.26.6320
ocsm contracts necessary general case may cost functions delta special structure guarantees global optimum reached powerful contract types 
theorem gives powerful tool problem instances number possible task allocations relatively small 
hand large problem instances number contracts optimal task allocation reached may impractically large albeit finite 
example large scale realworld distributed vehicle routing problem instance traconet marginal cost contracting system reached local optimum just contracts multiple hours negotiation unix machines 
problem ocsm contract represented jaj jt space identification welfare increasing contracts may complex especially distributed setting gammav jaj jt jtj possible evaluation just contract requires contract party compute cost handling current tasks tasks allocated contract 
large problem instances expect reach global optimum practice 
contracting occur long time solution ready anytime character contracting scheme important 
agents task allocation far section contracting assumed agents act individual rationality 
differs payoff maximizing agents game theory 
agent may reject ir contract believes better waiting beneficial contract accepted contract accepted due limited resources 
similarly agent may accept non ir contract anticipation contract combination beneficial 
furthermore strategic agents speculate order accepting contracts different sequences ir contracts may different payoff agent 
ir approach practical full game theoretic analysis contract evaluating just single contract contract party evaluating new task set doing exponential lookahead 
deviation game theory comes cost able guarantee self interested agent distributed rational decision making best strategy accepting ir contracts 
section contracting assumed agents truthfully bid marginal costs 
agent benefit contract payment marginal cost 
hand lying may cause ir contracts perceived non ir rejected 
issue lying valuation discussed section auctions 
agents lie tasks 
type lying thoroughly analyzed agent task allocation setting 
task oriented domains tods strict subset task allocation problems 
specifically assume agents symmetric cost functions agent capable handling tasks agents cost functions finite 
analysis specific protocol agents reveal costs possible task sets front social welfare maximizing allocation chosen payoff divided nash bargaining solution section 
protocol anytime algorithm task allocations evaluated agreement 
truthfully agents reveal tasks agent knows tasks 
domain class tods includes subclasses different properties regarding task revelation 
subadditive tods tods 
subclass subadditive tods concave tods tods gamma gamma 
subclass concave tods modular tods tods gamma 
alternative types deals analyzed 
pure deals agents deterministically allocated exhaustive disjoint task sets 
mixed deals specify probability distribution partitions 
deals mixed deals alternatives include partitions agent handles tasks agents 
forms lying analyzed 
agent may hide tasks revealing 
second may declare phantom tasks exist generated agent wants see 
may announce decoy tasks really exist generated demand 
forms lying possible different domain classes different deal types summarized table 
general tods different lying methods profitable 
analysis shows restricted settings lying beneficial variants protocol 
restricted domains subproblems complex task allocation domains negative results carry directly complex settings 
results leave open possibility protocols demote lying leading pareto efficient ir outcomes 
contract nets deal type general tod concave tod modular tod hid pha dec hid pha dec hid pha dec hid pha dec pure mixed table results lying task revelation 
indicates lying specified type profitable problem instances domain class deal type 
general tods deals negotiation set set individually rational pareto efficient deals may empty 
contingency contracts leveled commitment contracts traditional multiagent negotiation protocols self interested agents contract binding party back 
agent agrees contract follow matter events unravel 
contract may profitable agent viewed ex ante need profitable viewed events occurred ex post 
similarly contract may low expected payoff ex ante realizations events contract may desirable viewed ex post 
normal full commitment contracts unable efficiently take advantage possibilities probabilistically known events provide 
hand multiagent systems consisting cooperative agents incorporate form decommitment possibility order allow agents accommodate new events 
example original contract net protocol agent contracted task send termination message cancel contract contractee partially fulfilled contract 
possible agents self interested contractee mind losing part effort monetary compensation 
similarly role decommitment possibilities cooperative agents studied meeting scheduling contracting approach 
agents require monetary compensation efforts agent agreed cancel contract merely fact agent wanted decommit 
multiagent systems consisting cooperative agents agent trusted externally imposed strategy strategy agent self interest 
research game theory focused utilizing potential provided probabilistically known events contingency contracts self interested agents 
obligations contract contingent events 
games method provides expected payoff increase parties contract compared full commitment contract 
distributed rational decision making deals enabled contingency contracts sense full commitment contract agents prefer fallback positions contingency contract agent prefers fallback 
problems regarding contingency contracts automated negotiation self interested agents 
useful anticipating small number key events contingency contracts get cumbersome number relevant events monitor increases 
limit domain events changes domain problem new tasks arriving resources breaking negotiation events contracts negotiations affect value obligations original contract conditioned 
furthermore events may affect value original contract independently value original contract may depend combinations events 
potential combinatorial explosion items conditioned 
second feasible cumbersome contingency contracts computerized agents impossible enumerate possible relevant events advance 
third problem verifying unraveling events 
event observable agents 
agent may incentive lie party contract event case event associated disadvantageous contingency directly observing agent 
viable contingency contracts require event verification mechanism manipulable prohibitively complicated costly 
leveled commitment contracts method advantage possibilities provided probabilistically known events 
conditioning contract events mechanism built contract allows unilateral decommitting point time 
achieved specifying contract decommitment penalties agent 
agent wants decommit freed obligations contract simply paying decommitment penalty party 
contracts called leveled commitment contracts decommitment penalties choose level commitment 
method requires explicit conditioning events agent conditioning dynamically 
event verification mechanism required 
leveled commitment contracting protocol intuitive appeal practical advantages obvious beneficial :10.1.1.72.5760
gain may smaller breach victim loss 
second agents decommit 
truthful agent decommit best outside offer plus decommitting penalty better current contract 
rational self interested agent reluctant decommitting 
take account chance party decommit case agent gets freed contract obligations pay decommitting penalty collect decommitting penalty party 
due reluctant decommitting contracts may kept breaking best social welfare perspective 
coalition formation issue analyzed formally 
nash equilibrium analysis carried contract parties decommitting strategies characterized agent outside offer induce agent decommit best responses 
agents decommitting motivated change extent lie change 
shown decommitting leveled commitment protocol outperforms full commitment protocol 
enables contracts making ir settings full commitment contract ir reverse happen 
second leveled commitment contracts increase contract parties expected payoffs full commitment contracts 
coalition formation domains self interested real world parties companies individual people save costs coordinating activities parties 
example planning activities automated useful automate coordination activities 
done negotiating software agent representing party 
general approach state coalition formation protocol normal form game see table extensive form sequential game analyze nash equilibria see game played efficient outcomes 
rigorously incorporate computation analysis treat computational actions part agent strategy just physical actions 
nash equilibrium weak subgroups agents deviate coordinated manner 
strong nash equilibrium solution concept guarantees stability 
requires subgroup deviate changing strategies jointly manner increases payoff members nonmembers deviate original solution 
strong nash equilibrium strong solution concept games equilibria exist 
coalition proof nash equilibrium suggested partial remedy nonexistence problem strong nash equilibrium 
requires subgroup mutually beneficial deviation keeping strategies nonmembers fixed way deviation stable criterion 
conceptual problem solution concept deviation may stable deviating group solution concept ignores possibility agents deviated may prefer deviate agents originally deviate 
furthermore kinds solutions exist games 
strategic approach uses equilibrium analysis coalition formation studied setting called characteristic function game distributed rational decision making cfg 
rest section restricted coalition formation cfgs 
games value coalition characteristic function words coalition value independent nonmembers actions 
general value coalition may depend nonmembers actions due positive negative externalities interactions agents solutions 
negative externalities coalition nonmembers caused shared resources 
nonmembers resource certain extent resource available agents coalition carry planned solution minimum cost 
negative externalities caused conflicting goals 
satisfying goals nonmembers may move world coalition goal state 
positive externalities caused partially overlapping goals 
satisfying goals nonmembers may move world closer coalition goal state 
coalition reach goals actions nonmembers 
settings externalities coalitions nonmembers modeled normal form games 
cfgs strict subset 
real world multiagent problems happen cfgs 
coalition formation cfgs includes activities 
coalition structure generation formation coalitions agents agents coalition coordinate activities agents coordinate coalitions 
precisely means partitioning set agents exhaustive disjoint coalitions 
partition called coalition structure cs 
example game agents possible coalitions possible coalition structures ff gg ff gg ff gg ff gg ff gg 

solving optimization problem coalition 
means pooling tasks resources agents coalition solving joint problem 
coalition objective maximize monetary value money received outside system accomplishing tasks minus cost resources 
problems tasks handled 
incorporated associating cost omitted task 

dividing value generated solution agents 
value may negative agents incur costs resources 
activities may interleaved independent 
example coalition agent wants join depends portion value agent allocated potential coalition 
coalition formation activity coalition structure generation classically coalition formation research focused payoff division activity 
coalition structure generation optimization coalition coalition formation previously received attention 
research focused superadditive games games vs vt disjoint coalitions games coalition structure generation trivial agents best forming grand coalition agents operate 
superadditivity means pair coalitions best merging 
classically argued games superadditive worst agents composite coalition solutions separate coalitions 
games superadditive cost coalition formation process 
example coordination overhead communication costs possible anti trust penalties 
similarly solving optimization problem composite coalition may complex solving optimization problems component coalitions 
costly computation component coalitions may better forming composite coalition 
time limited agents may time carry communications computations required coordinate effectively composite coalition component coalitions may advantageous 
games superadditive coalitions best merging 
settings social welfare maximizing coalition structure varies coalition structure generation highly nontrivial 
goal maximize social welfare agents finding coalition structure cs arg max cs partitions cs cs cs vs problem number coalition structures large theta jaj jaj coalition structures enumerated number agents extremely small practice 
search subset ae partitions coalition structures pick best coalition structure seen far cs arg max cs cs outsider view coalition structure generation process viewed search coalition structure graph 
graph searched nodes search completely 
desideratum able guarantee coalition structure worst case bound optimal cs cs distributed rational decision making level coalition structure graph agent game 
nodes represent coalition structures 
arcs represent mergers coalition followed downward splits coalition coalitions followed upward 
finite small possible 
define nmin smallest size allows establish bound theorem sandholm bound suffices search lowest levels coalition structure graph 
search bound jaj bound tight number nodes searched jaj gamma search algorithm searches bottom levels establish bound searching jaj gamma nodes fewer 
interpreted positively means somewhat worst case bound optimum guaranteed seeing css 
number agents grows fraction coalition structures needed searched approaches zero nmin aj jaj 
algorithm needs see jaj gamma coalition structures total number coalition structures theta jaj jaj 
interpreted negatively theorem shows exponentially coalition structures searched bound established 
may prohibitively complex number agents large albeit significantly better attempting enumerate coalition structures 
viewed general impossibility result theorem states algorithm coalition structure generation establish bound general characteristic function games trying jaj gamma coalition structures 
sheds light earlier algorithms 
specifi 
restricted domains vs values special structure may possible establish bound search 
shehory kraus analyzed coalition structure generation setting 
bound compute bound optimum benchmark best achievable preset limit coalition formation 
search bottom levels coalition structure graph 

continue breadth search top graph long time left entire graph searched 

return coalition structure highest welfare seen far 
algorithm coalition structure search sandholm cally prior coalition structure generation algorithms general characteristic function games know fail establish bound 
words coalition structure find may arbitrarily far optimal 
hand algorithm establish bound minimal amount search rapidly reduce bound time search 
domain happens superadditive algorithm finds optimal coalition structure immediately 
theorem shows algorithm reduces worst case bound graph searched 
convenience introduce notation jaj gammal 
theorem sandholm searching level algorithm bound jaj jaj gamma mod jaj mod 
bound jaj bound tight 
discussed earlier jaj gamma nodes searched bound established jaj gamma bound jaj 
surprising fact seeing just additional node top node bound drops half jaj 
drop jaj levels need searched 
roughly speaking divisor bound increases time levels searched 
anytime phase step algorithm desirable feature bound drops rapidly early diminishing returns search 
comparison algorithms previous coalition structure generation algorithms general cfgs know fail establish worst case bound search fewer gamma coalition structures 
compare algorithm obvious candidates merging algorithm breadth search top coalition structure graph 
algorithm establish bound searched entire graph 
establish bound algorithm needs see size coalitions may arbitrarily far optimum 
distributed rational decision making number nodes searched coalition structure search splitting algorithm ratio bound function search size agent game 
coalition grand coalition occurs bottom node 
visiting grand coalition special case help part level needs searched coalitions size gamma occur 
splitting algorithm breadth search bottom graph 
identical algorithm point gamma nodes searched bound established 
splitting algorithm reduces bound slower algorithm 
shown constructing bad cases splitting algorithm worst case may worse 
construct bad case set jsj 
cs ff fagg cs cs gamma level algorithm completed number unit coalitions cs exceeds gamma 
cs cs gamma 
words divisor drops time level searched 
levels algorithm searches nodes levels algorithm searches 
variants coalition structure generation problem construct anytime algorithm establishes lower amount search compared anytime algorithm 
algorithm exist 
conceivable search establishes minimal searching nodes include nodes search establishes minimal searching nodes 
hypothesis supported fact curves cross 
conclusive algorithm optimal anytime algorithm bad cases splitting algorithm worst cases 

exception comes algorithm completes top level cs cs 
coalition formation turns anytime algorithm best information exact probabilistic bounds termination time construct design time algorithm establishes lowest possible specified amount search 
far discussed algorithms line search control policy nodes searched selected information accrued search far 
line search control establish lower search search redirected values observed nodes far 
line search control difference search observes values coalition structures cs values individual coalitions vs structures 
gives information 
variants anytime vs design time line vs line search control affect result searching bottom levels coalition structure graph unique minimal way establish worst case bound bound tight 
results searching vary different settings 
parallelizing coalition structure search agents section discusses parallelizing coalition structure search search matter agents search done efficiently parallel agents share burden computation 
agents prefer greater personal payoffs search coalition structures maximize personal payoffs ignoring algorithm motivate self interested agents exactly follow socially desirable search 
algorithm done trusted third party distributed protocol randomly permuting agents discussed section 
coalition formation activity optimization coalition unlimited costless computation coalition solve optimization problem define value coalition 
practice domains complex combinatorial viewpoint solve problem exactly 
approximate solution 
settings self interested agents want strike optimal tradeoff solution quality cost associated computation 
affect values coalitions turn affect coalition structure gives highest welfare 
issue related questions studied detail 
coalition formation activity payoff division payoff division strives divide value chosen coalition structure agents fair stable way agents motivated stay distributed rational decision making 
deciding part coalition structure graph search 
decided advance dictated central authority randomly chosen agent decided form negotiation 

partitioning search space agents 
agent assigned part coalition structure graph search 
enforcement mechanism step motivate agents search exactly assigned matter unfairly assignment done 
way achieving ex ante fairness randomly allocate set search space portions agents 
way agent searches equally expected value basis ex post may search 
option distribute space equally agents agents pay compensate unequal amounts search 

actual search 
agent searches part search space tells cs maximized cs search space 

enforcement 
agents selected random 
agent re search search space verify performed search 
agent gets caught mis searching finds better cs space reported sees cs reported belong space 
gets caught pay penalty motivate conduct additional search claimant pure strategy nash equilibrium protocol 
searches penalty high motivated search 
motivated search receive mixed strategy nash equilibrium search truthfully probabilities 
increasing probability searches arbitrarily close 
probability searches approaches zero minimizes enforcement overhead 

additional search 
previous steps repeated time search remains 
example agents step algorithm 
repeatedly search time allows 

payoff division 
alternative methods payoff division agents 
concern division cs may affect cs agent wants report result search different css may give agent different payoffs depending payoff division scheme 
making high compared cs consideration negligible compared risk getting caught 
algorithm parallel search self interested agents sandholm coalition formation repeat choose coalition agent new gamma jt new maintain feasibility agent new gamma new gamma cs jaj algorithm transfer scheme reaching core 
coalition structure move 
ways dividing payoffs proposed literature 
section discusses core shapley value 
payoff division core core cfg transferable payoffs set payoff configurations cs vector payoffs agents manner subgroup motivated depart coalition structure cs definition core cs ae cs vs clearly coalition structures maximize social welfare stable sense core coalition structure group agents prefer switch social welfare maximizing 
core strongest classical solution concepts coalition formation 
strong cases empty 
games way divide social coalition structure stable payoff configuration prone deviation subgroup agents 
new solution acquired deviation prone deviation 
infinite sequence steps payoff configuration 
avoid explicit mechanisms limits negotiation rounds contract costs social norms need place negotiation setting 
problem core may include multiple payoff vectors agents agree 
solution pick intuitively speaking corresponds payoff vector center set payoff vectors core 
problem core constraints definition numerous number agents increases 
due combinatorial subset operator definition 
reduce associated cognitive burden agents try reach payoff division core algorithm payoff division 
stays cs iteratively changes payoff division 
core nonempty algorithm converge solution core starting initial payoff division 
choice random largest gamma 
variant tends converge faster 
guarantee self interested agent motivated follow transfer scheme truthfully 
distributed rational decision making payoff division shapley value shapley value policy dividing payoff cfgs 
characterized axiomatically 
agent called dummy fig gamma fig coalition include agents called interchangeable fjg coalition includes axioms shapley value symmetry interchangeable dummies dummy fig additivity games equals plus game defined vs ws theorem shapley payoff division scheme satisfies axioms jaj gamma jsj jsj gamma 
jaj 
gamma payoff called shapley value agent interpreted marginal contribution agent coalition structure averaged possible joining orders 
joining order matters perceived contribution agent varies agents joined 
shapley value exists unique core guarantees desirable properties 
core shapley value pareto efficient entire value coalition structure gets distributed agents 
core shapley value guarantees individual agents grand coalition motivated stay coalition structure 
core guarantee subgroups agents better coalition structure breaking coalition 
guaranteed shapley value games solution exists core nonempty 
problem shapley value marginal contribution agent computed joining orders jaj 

guarantee agent expected payoff equal shapley value randomizing joining order 
allows focus joining order 
trusted third party needs carry randomization agent strong preferences different joining orders orders lead different payoffs agent 
need trusted third party overcome zlotkin rosenschein distributed protocol finding randomized joining order 
agent constructs random permutation agents encrypts sends 
agent received encrypted permutation agent broadcasts key 
keys decrypt permutations 
joining order determined sequentially permuting results 
example say game agents agent permutation agent permutation agent permutation 
applying agent permutation gives 
applying permutation gives 
applying permutation results joining order 
agent better randomize permutation assuming agent randomizes permutation agent knew exactly agents permutations agent tailor permutation better 
assumes agent change interpretation permutation changing key receiving keys decrypting permutations 
changing key customize interpretation permutation point may difficult difficult enhancing zlotkin rosenschein protocol requiring agent prefixes permutation common string hello world 
manipulation require agent construct key change interpretation agent permutation desirable way changing prefix 
multiagent systems consisting self interested agents ubiquitous 
agents coordinated externally imposing agent strategies 
interaction protocols designed agent really motivated follow strategies protocol designer wants follow 
chapter discussed issues different types protocols different settings 
substantial knowledge exists impossibility results constructive possibility demonstrations 
chapter touched 
implications computational limitations special emphasis topic traditionally received adequate attention 
clear limitations fundamental impact strategies agents want protocols desirable im possible 
area microeconomics computer science fruitfully blend 
area substantial current potential cross fertilization relaxation common knowledge assumption underlies nash equilibrium solution concept refinements 
systems increasingly designed built operated distributed manner 
larger number systems multiple real world parties 
problem coordinating parties avoiding manipulation tackled technological economic methods 
successful solutions emerge deep understanding careful hybridization 
distributed rational decision making exercises 
level satterthwaite theorem states impossible devise voting mechanism agents 
hand clarke tax mechanism voting mechanism 
explain contradiction 

level salesman located coordinates 
customer locations 
customer assigned exactly salesman visit customer 
visiting customers assigned salesman return initial location 
domain cost salesman incurs travel euclidean length trip 
tasks locations customers known salesmen 
write program uses clarke tax voting mechanism solve problem tax levied way salesman motivated reveal preferences task allocations agents truthfully 
possible task allocations 
list agent preference numeric value 
task allocation chosen 
list route salesman 
domain travel cost salesman incur 
tax agent pay receive 
budget balance deficit 
demonstrate way exists agents beneficially collude revealing preferences 
changes answers 

level program example general equilibrium market economy satisfies gross substitutes property 
compare convergence price tatonnement algorithm newtonian price tatonnement algorithm 
experiment agent gain acting strategically speculatively acting competitively price taker 

level discuss revelation principle relates vickrey auction english auction 
relate agent bids human behalf www com 

level prove theorem 
level show example agent best bidding second price auction implemented open cry sealed bid 

level construct example contracts lead local optimum agents contract individual rationality decision criterion globally optimal 

level agents look ahead contracting auctions interrelated items 
extremes lookahead ir contracts full game theoretic lookahead 
practice extremes best tradeoff computational cost looking ahead domain cost savings lookahead may provide 

level construct agent task allocation problem instance agent benefits decoy lie 
protocol agent reveal tasks cost functions tasks may assumed common knowledge pure deals divide payoffs nash bargaining solution 

level program transfer scheme core 
run example problem instance core nonempty 
happens run problem instance core empty 

level question 
agents 
unit cost computation day supercomputer time 
algorithms performance profiles cpu delta gammat cpu cpu delta gammat cpu cpu delta gammat cpu cpu delta gammat cpu cpu delta gammat cpu cpu delta gammat cpu cpu delta gammat cpu note different coalitions different amounts computation 
social welfare maximizing coalition structure 
stable core justify answer 
answers change computation free 

martin andersson tuomas sandholm 
contract types satisficing task allocation ii experimental results 
aaai spring symposium series satisficing models stanford university ca march 

kenneth arrow 
social choice individual values 
new haven foundation nd edition 
st edition 

aumann 
acceptable points general cooperative person games 
volume iv contributions theory games 
princeton university press 
distributed rational decision making 
salvador matthew jackson 
strategy proof exchange 
econometrica 

douglas peleg michael whinston 
coalition proof nash equilibria concepts 
journal economic theory june 

douglas michael whinston 
coalition proof nash equilibria ii applications 
journal economic theory june 

alan bond les gasser 
readings distributed artificial intelligence 
morgan kaufmann publishers san mateo ca 

john cheng michael wellman 
walras algorithm convergent distributed implementation general equilibrium outcomes 
computational economics 

clarke 
multipart pricing public goods 
public choice 

durfee lesser corkill 
cooperative distributed problem solving 
barr cohen feigenbaum editors handbook artificial intelligence volume iv pages 
addison wesley 

ephrati 
non manipulable meeting scheduling system 
proc 
th international distributed artificial intelligence workshop lake washington july 
aaai press technical report ws 

ephrati jeffrey rosenschein 
clarke tax consensus mechanism automated agents 
proceedings national conference artificial intelligence pages anaheim ca 

ephrati jeffrey rosenschein 
multi agent planning dynamic search social consensus 
proceedings thirteenth international joint conference artificial intelligence pages chambery france 

ronald fagin joseph halpern yoram moses moshe vardi 
reasoning knowledge 
mit press 

drew fudenberg jean tirole 
game theory 
mit press 


manipulation voting schemes 
econometrica 

glance tad hogg 
dilemmas computational societies 
proceedings international conference multi agent systems icmas pages san francisco ca 

gmytrasiewicz durfee 
rigorous operational formalization recursive modeling 
proceedings international conference multi agent systems icmas pages san francisco ca june 

theodore groves 
incentives teams 
econometrica 

cheng gu toru ishida 
quantitative analysis contract net protocol 
proceedings international conference multi agent systems icmas page san francisco ca june 
poster collection 

tad hogg 
social dilemmas computational ecosystems 
proceedings fourteenth international joint conference artificial intelligence pages montreal canada 

hu wellman 
self fulfilling bias multiagent learning 
proceedings second international conference multi agent systems icmas pages plaza kyoto japan december 

bernardo huberman scott clearwater 
multi agent system controlling building environments 
proceedings international conference multi agent systems icmas pages san francisco ca june 

bernardo huberman tad hogg 
behavior computational ecologies 
huberman editor ecology computation 
north holland 

hurwicz 
informationally decentralized systems 
mcguire radner editors decision organization chapter pages 
university minnesota press 
second edition 

matthew jackson james peck 
speculation price fluctuations private extrinsic signals 
journal economic theory 

james kahan amnon rapoport 
theories coalition formation 
lawrence erlbaum associates publishers 

ehud kalai 
solutions bargaining problem 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

ravi andrew whinston 
frontiers electronic commerce 
addison wesley publishing 

steven ketchpel 
forming coalitions face uncertain rewards 
proceedings national conference artificial intelligence pages seattle wa july 

richard korf 
real time heuristic search 
artificial intelligence march 

sarit kraus jonathan gilad zlotkin 
multiagent negotiation time constraints 
artificial intelligence 

david kreps 
course microeconomic theory 
princeton university press 

jacques peter 
pay auction approach reallocation 
proceedings th european conference artificial intelligence pages august 

jeffrey mackie mason hal varian 
pricing internet 
proceedings public access internet conference 
jfk school government may 


lectures microeconomic theory 
north holland 

mas colell michael whinston jerry green 
microeconomic theory 
oxford university press 

eric 
theory implementation nash equilibrium survey 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

preston mcafee john mcmillan 
analyzing auction 
journal economic perspectives 

paul milgrom 
economics competitive bidding selective survey 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

mark miller eric drexler 
comparative ecology computational perspective 
huberman editor ecology computation 
north holland 

tracy mullen michael wellman 
simple computational market network distributed rational decision making information services 
proceedings international conference multi agent systems icmas pages san francisco ca june 

muller mark 
strategy existence dominant strategy mechanisms 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

roger myerson 
bayesian equilibrium incentive compatibility 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

john nash 
bargaining problem 
econometrica 

john nash 
equilibrium points person games 
proc 
national academy sciences 

peter 
game theory political theory 
cambridge university press 

martin osborne ariel rubinstein 
bargaining markets 
academic press 

martin osborne ariel rubinstein 
course game theory 
mit press 

andrew 
implementation nash equilibria economic environments 
leonid hurwicz david hugo editors social goals social organization essays memory chapter pages 
cambridge university press 

raiffa 
art science negotiation 
harvard univ press cambridge mass 

eric rasmusen 
games information 
basil blackwell 

donald john roberts andrew 
incentives price behavior large exchange economies 
econometrica 

jeffrey rosenschein gilad zlotkin 
rules encounter 
mit press 

michael rothkopf ronald 
models bid taker cheating vickrey auctions 
journal business 

michael rothkopf thomas edward kahn 
vickrey auctions rare 
journal political economy 

ariel rubinstein 
perfect equilibrium bargaining model 
econometrica 

tuomas sandholm 
implementation contract net protocol marginal cost calculations 
proceedings national conference artificial intelligence pages washington july 

tuomas sandholm 
limitations vickrey auction computational multiagent systems 
proceedings second international conference multi agent systems icmas pages plaza kyoto japan december 

tuomas sandholm 
negotiation self interested computationally limited agents 
phd thesis university massachusetts amherst 
available www cs wustl edu sandholm dissertation ps 

tuomas sandholm 
unenforced ecommerce transactions 
ieee internet computing nov dec 
special issue electronic commerce 

tuomas sandholm 
contract types satisficing task allocation theoretical results 
aaai spring symposium series satisficing models stanford university ca march 

tuomas sandholm victor lesser 
issues automated negotiation electronic commerce extending contract net framework 
proceedings international conference multi agent systems icmas pages san francisco ca june 
reprinted readings agents huhns singh eds pp 


tuomas sandholm victor lesser 
advantages leveled commitment contracting protocol 
proceedings national conference artificial intelligence pages portland august 

tuomas sandholm victor lesser 
coalitions computationally bounded agents 
artificial intelligence 
special issue economic principles multiagent systems 

tuomas sandholm fredrik ygge 
gains losses speculation equilibrium markets 
proceedings fifteenth international joint conference artificial intelligence pages nagoya japan august 

satterthwaite 
strategy arrow conditions existence correspondence theorems voting procedures social welfare functions 
journal economic theory 

selten 
eines mit 
zeitschrift fur die 

sandip sen tradeoffs contract distributed scheduling 
phd thesis univ michigan 

sandip sen edmund durfee 
role commitment cooperative negotiation 
international journal intelligent cooperative information systems 

lloyd shapley 
value person games 
kuhn tucker editors contributions theory games volume annals mathematics studies pages 
princeton university press 

onn shehory sarit kraus 
task allocation coalition formation autonomous agents 
proceedings fourteenth international joint conference artificial intelligence pages montreal canada august 

onn shehory sarit kraus 
kernel oriented model coalition formation general environments results 
proceedings national conference artificial intelligence pages portland august 

reid smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers december 

wim van der linden albert verbeek 
coalition formation game theoretic approach 
henk wilke editor coalition formation volume advances psychology 
north holland 

hal varian 
microeconomic analysis 
new york norton 

vickrey 
counterspeculation auctions competitive sealed tenders 
journal finance 

carl waldspurger tad hogg bernardo huberman jeffrey kephart distributed rational decision making scott stornetta 
spawn distributed computational economy 
ieee transactions software engineering 

michael wellman 
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 

michael wellman 
computational market model distributed configuration design 
proc 
th national conference artificial intelligence aaai pages seattle wa july 

wu 
dynamic theory class games nonempty cores 
siam journal applied mathematics 

ygge akkermans 
power load management computational market 
proceedings second international conference multi agent systems icmas pages plaza kyoto japan december 

gilad zlotkin jeffrey rosenschein 
coalition cryptography stability mechanisms coalition formation task oriented domains 
proceedings national conference artificial intelligence pages seattle wa july 
