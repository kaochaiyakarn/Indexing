multiagent systems societies agents michael huhns larry stephens agents operate exist environment typically computational physical 
environment open closed contain agents 
situations agent operate usefully increasing interconnection networking computers making situations rare usual state affairs agent interacts agents 
previous chapter defined structure characteristics individual agent focus chapter systems multiple agents 
times number agents may numerous deal individually convenient deal collectively society agents 
chapter learn analyze describe design environments agents operate effectively interact productively 
environments provide computational infrastructure interactions take place 
infrastructure include protocols agents communicate protocols agents interact 
communication protocols enable agents exchange understand messages 
interaction protocols enable agents conversations purposes structured exchanges messages 
concrete example communication protocol specify types messages exchanged agents propose course action accept course action reject course action retract course action disagree proposed course action course action message types conversation instance multiagent systems societies agents interaction protocol negotiation occur agent agent agent proposes course action agent agent evaluates proposal sends acceptance agent sends agent sends disagreement agent sends rejection agent chapter describes protocols communication interaction large small groups agents 
motivations interested distributed systems agents 
centralized solutions generally efficient computed distributed system moved single computer optimized efficient 
distributed computations easier understand easier develop especially problem solved distributed 
distribution lead computational algorithms discovered centralized approach 
times centralized approach impossible systems data belong independent organizations want keep information private secure competitive reasons 
information involved necessarily distributed resides information systems large complex senses geographically distributed components huge content number concepts amount data concept broad scope coverage major portion significant domain 
components systems typically distributed heterogeneous 
topology systems dynamic content changing rapidly difficult user application program obtain correct information enterprise maintain consistent information 
major techniques dealing size complexity enterprise information systems modularity distribution abstraction intelligence smarter seek modify information 
intelligent distributed modules combines techniques yielding distributed artificial intelligence dai approach 
accord approach computational agents need distributed embedded enterprise 
agents function intelligent application programs active information resources wrappers surround buffer conventional components line network services 
agents knowledgeable information resources local cooperate provide global access better management information 
practical reason systems large dynamic open global solutions formulated implemented agents need execute autonomously developed independently 
rationale interconnecting computational agents expert systems enable cooperate solving problems share expertise parallel common problems developed implemented modularly fault tolerant redundancy represent multiple viewpoints knowledge multiple experts reusable 
possibility agent interacting agents unanticipated ways causes developer think construct differently 
example developer consider exactly agent know agent access knowledge agent 
lead agent knowledge represented declaratively buried procedural code 
multiagent systems best way characterize design distributed computing systems 
information processing ubiquitous 
computer processors seemingly embedded aspects environment 
kitchen places microwave oven toaster coffee maker number consider electrical power system probably uses hundreds getting electricity kitchen 
large number processors myriad ways interact distributed computing systems dominant computational paradigm today 
processors kitchen intelligent considered agents convenient think anthropomorphic terms 
example toaster knows toast done coffee pot knows coffee ready 
systems interconnected interact know coffee toast ready approximately time 
terms kitchen just collection processors distributed computing system multiagent system 
traditional ai concerned agent constructed function intelligently single locus internal reasoning control implemented von neumann architecture 
intelligent systems function isolation part environment operate environment typically contains intelligent systems 
sense view systems societal terms 
characteristics multiagent environments 
multiagent environments provide infrastructure specifying communication interaction protocols 
multiagent systems societies agents 
multiagent environments typically open centralized designer 

multiagent environments contain agents autonomous distributed may self interested cooperative 
multiagent execution environment includes number concerns enumerated possible characteristics table 
table characteristics multiagent environments property range values design autonomy platform interaction protocol language internal architecture communication infrastructure shared memory blackboard message connected connection email point point multicast broadcast push pull synchronous asynchronous directory service white pages yellow pages message protocol kqml html ole corba mediation services ontology 
transactions 
security services timestamps authentication services billing currency operations support archiving redundancy restoration accounting table environment agent characteristics property definition extent environment known agent predictable extent predicted agent controllable extent agent modify environment historical states depend entire history current state teleological parts purposeful agents real time environment change agent table lists key properties environment respect specific agent inhabits 
generalize presentation 
agent communications agent communications provide basic definition agent need order describe languages protocols needed multiagent systems 
fundamentally agent active object ability perceive reason act 
assume agent explicitly represented knowledge mechanism operating drawing inferences knowledge 
assume agent ability communicate 
ability part perception receiving messages part action sending messages 
purely computer agent may agent perceptual acting abilities 
coordination agents communicate order achieve better goals society system exist 
note goals known agents explicitly depending agents goal 
communication enable agents coordinate actions behavior resulting systems coherent 
coordination property system agents performing activity shared environment 
degree coordination extent avoid extraneous activity reducing resource contention avoiding livelock deadlock maintaining applicable safety conditions 
cooperation coordination agents negotiation coordination competitive simply self interested agents 
typically cooperate successfully agent maintain model agents develop model interactions 
presupposes sociability 
coordination cooperation competition planning negotiation centralized planning distributed planning taxonomy different ways agents coordinate behavior activities multiagent systems societies agents coherence system behaves unit 
problem multiagent system maintain global coherence explicit global control 
case agents able determine goals share agents determine common tasks avoid unnecessary conflicts pool knowledge evidence 
helpful form organization agents 
social commitments means achieving coherence addressed section 
section discusses means economic principles markets 
regard simon argues markets excellent clearing goods finding price sold effective computing optimal allocations resources 
organizational structures essential purpose 
believed coherence optimality intimately related 
dimensions meaning aspects formal study communication syntax symbols structured semantics symbols denote pragmatics symbols interpreted 
meaning combination semantics pragmatics 
agents communicate order understand understood important consider different dimensions meaning associated communication 
descriptive vs prescriptive 
messages describe phenomena prescribe behavior 
descriptions important human comprehension difficult agents mimic 
appropriately agent communication languages designed exchange information activities behavior 
personal vs conventional meaning 
agent meaning message differ meaning conventionally accepted agents agent communicates 
greatest extent possible multiagent systems opt conventional meanings especially systems typically open environments new agents introduced time 
subjective vs objective meaning similar conventional meaning meaning determined external agent message explicit effect environment perceived objectively 
effect different understood internally subjectively sender receiver message 
speaker vs hearer vs society perspective independent conventional objective meaning message message expressed viewpoint speaker hearer observers 
semantics vs pragmatics pragmatics communication concerned communicators communication 
includes considerations agent communications mental states communicators environment exist considerations external syntax semantics communication 
contextuality messages understood isolation interpreted terms mental states agents state environment environment history arrived state 
interpretations directly affected previous messages actions agents 
coverage smaller languages manageable large agent convey meanings intends 
identity communication occurs agents meaning dependent identities roles agents involved involved agents specified 
message sent particular agent just agent satisfying specified criterion 
cardinality message sent privately agent understood differently message broadcast publicly 
message types important agents different capabilities able communicate 
communication defined levels communication lowest level communication capable agent 
order interest agents able participate dialogue 
role dialogue may active passive allowing function master slave peer respectively 
keeping definition assumptions agent assume agent send receive messages communication network 
messages types defined 
basic message types assertions queries 
agent active passive ability accept information 
simplest form information communicated agent external source means assertion 
order assume passive role dialog agent additionally able answer questions able accept query external source send reply source making assertion 
note standpoint communication network distinction unsolicited assertion assertion reply query 
order assume active role dialog agent able issue queries assertions 
capabilities agent potentially control agent causing respond query accept information asserted 
means control extended control neural networks databases 
agent functioning peer agent assume active passive roles dialog 
able accept assertions queries 
summary capabilities needed different classes agents shown table 
multiagent systems societies agents table agent capabilities basic agent passive agent active agent peer agent receives assertions ffl ffl ffl ffl receives queries ffl ffl sends assertions ffl ffl ffl sends queries ffl ffl table interagent message types communicative action illocutionary force expected result assertion inform acceptance query question reply reply inform acceptance request request explanation inform agreement command request permission inform acceptance refusal inform acceptance offer bid inform acceptance acceptance agreement proposal inform offer bid confirmation retraction denial types messages derived speech act theory listed table 
communication levels communication protocols typically specified levels 
lowest level protocol specifies method interconnection middle level specifies format syntax information transfered top level specifies meaning semantics information 
semantics refers substance message type message 
binary ary communication protocols 
binary protocol involves single sender single receiver ary protocol involves single sender multiple receivers called broadcast multicast 
protocol specified data structure fields 
sender 
receiver agent communications 
language protocol 
encoding decoding functions 
actions taken receiver 
speech acts spoken human communication model communication computational agents 
popular basis analyzing human communication speech act theory 
speech act theory views human natural language actions requests suggestions commitments replies 
example request simply making statement creating request 
jury declares defendant guilty action taken defendant social status changed 
speech act aspects 
locution physical utterance speaker 
intended meaning utterance speaker 
action results locution 
example john say mary please close window 
act consists physical sounds generated john character sequences typed john john intent message request command goes window shut 
communication humans intent message easily identified 
example am cold viewed assertion request sweater demand increase room temperature 
communication agents want insure doubt type message 
speech act theory uses term performative identify illocutionary force special class utterance 
example performative verbs include promise report convince insist tell request demand 
illocutionary force broadly classified statements fact directives commands structure commitments statements fact expressions emotion 
performatives usually represented stylized form tell request 
performatives special property saying verbs performatives 
example stating solve problem create solution 
term speech discussion speech acts communication forms spoken word 
summary speech act theory helps define type message concept illocutionary force constrains semantics communication act 
sender intended communication act clearly defined receiver doubt type message sent 
constraint simplifies multiagent systems societies agents design software agents 
message contained protocol may ambiguous may simple response may require decomposition assistance agents communication protocol clearly identify type message sent 
kqml fundamental decision interaction agents separate semantics communication protocol domain independent semantics enclosed message may depend domain 
communication protocol universally shared agents 
concise limited number primitive communication acts 
knowledge query manipulation language kqml protocol exchanging information knowledge illustrated 
elegance kqml information understanding content message included communication 
basic protocol defined structure kqml kqml agent agent application program kqml protocol communications agents application programs kqml performative sender word 
receiver word 
language word 
ontology word 
content expression 
syntax lisp arguments identified keywords preceded colon may order 
kqml performatives modeled agent communications speech act performatives 
semantics kqml performatives domain independent message defined fields content message language langauge message expressed ontology vocabulary words message 
effect kqml wraps message structure understood agent 
understand message recipient understand language access ontology 
terms content language ontology delineate semantics message 
arguments including sender receiver reply reply parameters message passing 
kqml assumes asynchronous communications fields reply sender reply responding agent link outgoing message expected response 
kqml part broad research effort develop methodology distributing information different systems 
part effort involves defining knowledge interchange format kif formal syntax representing knowledge 
described section kif largely order predicate calculus 
part effort defining ontologies define common concepts attributes relationships different subsets world knowledge 
definitions ontology terms give meaning expressions represented kif 
example blocks world ontology concept wooden block size represented unary predicate block fact block top block communicated follows tell sender agent receiver agent language kif ontology blocks world content block block language kqml message restricted kif languages prolog lisp sql defined agent communication language 
kqml speaking agents appear clients servers 
communications synchronous asynchronous illustrated 
synchronous communication sending agent waits reply 
asynchronous communication sending agent continues reasoning acting interrupted replies arrive time 
interestingly kqml messages nested content kqml message may kqml message self contained 
example agent communicate directly agent communicate agent agent ask agent forward message agent forwarded kqml message value field value multiagent systems societies agents client server client server client server query query handle reply reply reply reply reply subscribe synchronous blocking query waits expected reply asynchronous nonblocking subscribe results replies server maintains state replies sent individually requested synchronous asynchronous communications agents understand kqml agent communications forward agent agent sender agent receiver agent language kqml ontology kqml ontology content tell sender agent receiver agent language kif ontology blocks world content block block sender field content message value field forward value receiver field 
kqml performatives may organized basic categories basic query performatives evaluate ask ask 
query performatives stream stream 
response performatives reply sorry 
generic informational performatives tell achieve cancel 
generator performatives standby ready rest 
capability definition performatives advertise subscribe monitor 
networking performatives register unregister forward broadcast 
advertise performative sender agent inform receiver sender capabilities advertise sender agent receiver agent language kqml ontology kqml ontology content ask sender agent receiver agent reply id language prolog ontology blocks world content multiagent systems societies agents agent may query agent ask sender agent receiver agent reply id reply id language prolog ontology blocks world content agent respond matching assertions knowledge base tell sender agent receiver agent reply id language prolog ontology blocks world content issues sender receiver understand agent communication language ontology created agents communicating 
kqml operate communication infrastructure allows agents locate 
infrastructure part kqml specification implemented systems custom utility programs called routers perform function 
advertise example agent sent message agent agents query facilitator find agent capabilities 
kqml progress semantics completely defined 
labrou finin proposed new kqml specification refines original draft 
kqml specification agent builders rely 
knowledge interchange format agents need descriptions real world things 
descriptions expressed natural languages english japanese capable describing wide variety things situations 
meaning natural language statement subject different interpretations 
agent communications symbolic logic general mathematical tool describing things 
simple logics order predicate calculus capable describing interest utility people intelligent agents 
things include simple concrete facts definitions abstractions inference rules constraints metaknowledge knowledge knowledge 
kif particular logic language proposed standard describe things expert systems databases intelligent agents readable computer systems people 
specifically designed serve interlingua mediator translation languages 
example translation program map step pdes expression products equivalent kif expression vice versa 
translation program mapping healthcare language hl kif way translate step pdes hl exchange information healthcare products kif intermediate representation 
kif prefix version order predicate calculus extensions support nonmonotonic reasoning definitions 
language description includes specification syntax semantics 
kif provides expression simple data 
example sentences shown encode tuples personnel database arguments stand employee id number department assignment salary respectively salary widgets salary salary complicated information expressed complex terms 
example sentence states chip larger 
width chip length chip width chip length chip kif includes variety logical operators assist encoding logical information negation disjunction rules quantified formulas 
expression shown example complex sentence kif 
asserts number obtained raising real number power positive 
real number number 
expt kif provides encoding knowledge knowledge backquote comma operators related vocabulary 
example sentence asserts agent joe interested receiving triples salary relation 
commas signals variables taken literally 
multiagent systems societies agents commas sentence interested joe salary say agent joe interested sentence salary instances 
kif describe procedures write programs scripts agents follow 
prefix syntax kif programs resemble lisp scheme 
example step procedure written kif 
step ensures fresh line standard output stream second step prints hello standard output stream final step adds carriage return output 
progn fresh line print hello fresh line semantics kif core kif rules definitions similar order logic 
extension handle nonstandard operators backquote comma restriction models satisfy various axiom schemata give meaning basic vocabulary format 
despite extensions restrictions core language retains fundamental characteristics order logic including compactness semi decidability logical entailment 
ontologies ontology specification objects concepts relationships area interest 
blocks world example term block represents concept term represents relationship 
concepts represented order logic unary predicates higher arity predicates represent relationships 
express idea block physical object order expression block general representations 
block expression instanceof block 
block objects universe discourse new relationships instanceof subclassof introduced class block class subclassof block instanceof subclassof instanceof agent communications sentence rule expresses notion type hierarchy 
ontology taxonomy classes types ontology describe relationships 
classes relationships represented ontology instances classes need represented 
example need represent ontology block instanceof block 
ontology analogous database schema contents database 
implicit discussion agent represent knowledge vocabulary specified ontology 
agents constructed people effect agent creator specified ontology represent agent knowledge 
agents share ontology knowledge representation understanding words agent communication language 
agents knowledge bases relationships defined detail just character string 
example domain range binary relationship specified domain range restrictions limit values allowed relationship 
permitted instances transitive closure subclassof dream prohibited assuming dream type 
ontology editors developed stanford university south carolina typically frame knowledge representation systems allow users define ontologies components classes instances relationships functions 
shows example ontology 
ontology editors offer variety features ability translate ontologies representation languages ability distributed groups develop ontologies jointly internet 
communication protocols protocols interagent communication way preclude means computational agents interact communicate interconnected 
example agent may able view second agent camera resulting images coordinate actions second agent 
communication protocols defined agreed set agents higher level protocols readily implemented 
section describes 
multiagent systems societies agents thing agent person enterprise employee department part time employee full time employee entity class attributes agent attributes enterprise department attributes attributes class relations employment relations works employee person attributes attributes part time employee attributes attributes full time employee person ssn person name id employee name department example ontology simple business showing classes subclasses relationships instances indicated dashed line agent interaction protocols previous section describes mechanisms agents communicate single messages 
interaction protocols govern exchange series messages agents conversation 
interaction protocols devised systems agents 
cases agents conflicting goals simply objective protocols maximize payoffs utilities agents 
cases agents similar goals common problems distributed problem solving dps objective protocols maintain globally coherent performance agents violating autonomy explicit global control 
cases important aspects include determine shared goals determine common tasks avoid unnecessary conflicts pool knowledge evidence 
agent interaction protocols coordination protocols environment limited resources agents coordinate activities interests satisfy group goals 
actions multiple agents need coordinated dependencies agents actions need meet global constraints agent sufficient competence resources information achieve system goals 
examples coordination include supplying timely information agents ensuring actions agents synchronized avoiding redundant problem solving 
produce coordinated systems dai research concentrated techniques distributing control data 
distributed control means agents degree autonomy generating new actions deciding goals pursue 
disadvantage distributing control data knowledge system state dispersed system agent partial imprecise perspective 
increased degree uncertainty agent actions difficult attain coherent global behavior 
actions agents solving goals expressed search classical goal graph 
goal graph includes representation dependencies goals resources needed solve primitive goals leaf nodes graph 
indirect dependencies exist goals shared resources 
formulating multiagent system manner allows activities requiring coordination clearly identified 
activities include defining goal graph including identification classification dependencies assigning particular regions graph appropriate agents controlling decisions areas graph explore traversing graph ensuring successful traversal reported 
activities may collaborative may carried agent acting isolation 
determining approach phases matter system design 
distributed goal search formalism frequently characterize global local problems key agent structures commitment convention 
commitments viewed undertake specified course action conventions provide means managing commitments changing circumstances 
commitments provide degree predictability agents take activities consideration dealing interagent dependencies global constraints resource utilization conflicts 
situations change agents evaluate existing commitments valid 
conventions constrain conditions commitments specify associated actions undertaken retain rectify abandon commitments 
circumstances change agent endeavor honor commitments 
obligation constrains agent subsequent decisions making new commitments knows sufficient resources reserved honor existing ones 
reason agent commitments internally multiagent systems societies agents consistent consistent beliefs 
conventions help agent manage commitments specify agent behave alters modifies commitments 
goals dependent essential relevant agents informed substantial change affects 
convention type social 
communication resources limited social convention appropriate limited bandwidth social convention invoke local commitment dropped local commitment satisfied actions rule local commitment satisfied inform related commitments rule local commitments dropped unattainable motivation inform strongly related commitments rule local commitments dropped unattainable motivation communication resources inform weakly related commitments agents decide pursue joint action jointly commit common goal expect bring desired state affairs 
minimum information team cooperating agents share status commitment shared objective status commitment team framework 
agent beliefs issues change semantics joint commitments requires team members informed 
joint actions depend participation entire team change commitment participant jeopardize team efforts 
agent comes believe team member longer jointly committed needs position respect joint action 
basic assumptions encoded convention represents minimum requirement joint commitments shown 
basic joint action convention invoke status commitment joint action changes status commitment attaining joint action agent interaction protocols team context changes status joint commitment team member changes actions rule status commitment joint action changes status commitment team context changes inform team member changes rule status joint commitment team member changes determine joint commitment viable commitments conventions cornerstones coordination commitments provide necessary structure predictable interactions social conventions provide necessary degree mutual support 
cooperation protocols basic strategy shared protocols cooperation decompose distribute tasks 
divide conquer approach reduce complexity task smaller subtasks require capable agents fewer resources 
system decide alternative decompositions available decomposition process consider resources capabilities agents 
interactions subtasks conflicts agents 
task decomposition done system designer decomposition programmed implementation agents hierarchical planning inherent representation problem andor graph 
task decomposition done spatially layout information sources decision points functionally expertise available agents 
tasks decomposed distributed criteria avoid overloading critical resources assign tasks agents matching capabilities agent wide view assign tasks agents assign overlapping responsibilities agents achieve coherence assign highly interdependent tasks agents spatial semantic proximity 
minimizes communication synchronization costs reassign tasks necessary completing urgent tasks 
multiagent systems societies agents mechanisms commonly distribute tasks market mechanisms tasks matched agents generalized agreement mutual selection analogous pricing commodities contract net announce bid award cycles multiagent planning planning agents responsibility task assignment organizational structure agents fixed responsibilities particular tasks 
illustrates methods task distribution 
details additional methods described sections follow 
spatial decomposition information source decision point functional decomposition expertise internist psychologist cardiologist agent agent agent commonly methods distributing tasks cooperative agents contract net mechanisms best known widely applied contract net protocol 
contract net protocol interaction protocol cooperative problem solving agents 
modeled contracting mechanism agent interaction protocols businesses govern exchange goods services 
contract net provides solution called connection problem finding appropriate agent task 
illustrates basic steps protocol 
agent wanting task solved called manager agents able solve task called potential contractors 
manager perspective process announce task needs performed receive evaluate bids potential contractors award contract suitable contractor receive synthesize results 
contractor perspective process receive task announcements evaluate capability respond respond decline bid perform task bid accepted report results 
roles agents specified advance 
agent act manager making task announcements agent act contractor responding task announcements 
flexibility allows task decomposition contractor specific task may act manager soliciting help agents solving parts task 
resulting manager contractor links form control hierarchy task sharing result synthesis 
contract net offers advantages graceful performance degradation 
contractor unable provide satisfactory solution manager seek potential contractors task 
structure task announcement includes slots addressee eligibility specification task abstraction bid specification expiration time 
tasks may addressed potential contractors meet criteria specification 
task abstraction brief description task contractors rank tasks task announcements 
bid specification tells potential contractors information provided bid returned bid specifications give manager basis comparing bids different potential contractors 
expiration time deadline receiving bids 
potential contractor evaluates task announcements determine eligible offer bid 
contractor chooses attractive task criteria offers bid corresponding manager 
manager receives evaluates bids task announcement 
bid deemed satisfactory may accepted expiration time task announcement 
manager notifies contractor bid acceptance multiagent systems societies agents manager announces existence tasks possibly selective multicast agents evaluate announcement 
agents submit bids manager awards contract appropriate agent manager contractor communicate privately necessary basic steps contract net important generic protocol interactions cooperative agents agent interaction protocols award message 
limitation contract net protocol task awarded contractor limited capability better qualified contractor busy award time 
limitation manager obligation inform potential contractors award 
manager may receive bids reasons potential contractors busy tasks potential contractor idle ranks proposed task tasks consideration contractors idle capable working task 
handle cases manager may request immediate response bids contractors respond messages eligible busy ineligible task ranked low contractor bid 
manager adjustments task plan 
example manager wait busy potential contractor free 
contract net provides directed contracts issued negotiation 
selected contractor responds acceptance refusal 
capability simplify protocol improve certain tasks 
blackboard systems blackboard problem solving metaphor imagine group human agent specialists seated large blackboard 
specialists working cooperatively solve problem blackboard workplace developing solution 
problem solving begins problem initial data written blackboard 
specialists watch blackboard looking opportunity apply expertise developing solution 
specialist finds sufficient information contribution records contribution blackboard 
additional information may enable specialists apply expertise 
process adding contributions blackboard continues problem solved 
metaphor captures number important characteristics blackboard systems described 
independence expertise 
specialists called sources kss trained solely specific group specialists 
expert aspects problem contribute solution independently particular mix specialists room 
diversity problem solving techniques 
blackboard systems internal representation inferencing machinery ks hidden direct view 
flexible representation blackboard information 
blackboard model place prior restrictions information placed blackboard 
common interaction language 
kss blackboard systems able correctly interpret information recorded blackboard kss 
prac multiagent systems societies agents tice tradeoff representational expressiveness specialized representation shared kss fully general representation understood kss 
event activation 
kss blackboard systems triggered response blackboard external events 
blackboard events include addition new information blackboard change existing information removal existing information 
having ks scan blackboard ks informs blackboard system kind events interested 
blackboard system records information directly considers ks activation kind event occurs 
need control 
control component separate individual kss responsible managing course problem solving 
control component viewed specialist directing problem solving considering benefit contributions triggered kss 
currently executing ks activation completes control component selects appropriate pending ks activation execution 
ks triggered ks uses expertise evaluate quality importance contribution 
triggered ks informs control component quality costs associated contribution performing compute contribution 
control component uses estimates decide proceed 
incremental solution generation 
kss contribute solution appropriate refining contradicting initiating new line reasoning 
shows architecture basic blackboard system 
negotiation frequent form interaction occurs agents different goals termed negotiation 
negotiation process joint decision reached agents trying reach individual goal objective 
agents communicate positions conflict try move agreement making concessions searching alternatives 
major features negotiation language participating agents protocol followed agents negotiate decision process agent uses determine positions concessions criteria agreement 
groups developed systems techniques negotiation 
environment centered agent centered 
developers techniques focus problem rules environment designed agents regardless origin capabilities intentions interact productively fairly 
resultant negotiation mechanism ideally attributes agent interaction protocols efficiency agents waste resources coming agreement 
stability agent incentive deviate agreed strategies 
simplicity negotiation mechanism impose low computational bandwidth demands agents 
distribution mechanism require central decision maker 
symmetry mechanism biased agent arbitrary inappropriate reasons 
articulate entertaining treatment concepts 
particular types environments identified worth oriented domains state oriented domains task oriented domains 
blackboard 
control components pending ks activations executing activated ks library kss events architecture basic blackboard system showing blackboard knowledge sources agents control components task oriented domain agents set tasks achieve resources needed achieve tasks available agents achieve tasks help interference 
agents benefit sharing tasks 
example internet downloading domain agent list documents access internet 
cost associated downloading agent multiagent systems societies agents minimize 
document common agents save downloading cost accessing document sharing 
environment provide simple negotiation mechanism constraints agent declares documents wants documents common agents assigned agents toss coin agents pay documents download agents granted access documents download common sets 
mechanism simple symmetric distributed efficient document downloaded twice 
determine stability agents strategies considered 
optimal strategy agent declare true set documents needs regardless strategy agents adopt documents need 
incentive agent diverge strategy stable 
developers agent centered negotiation mechanisms focus problem environment agent operate best strategy follow 
negotiation strategies developed specific problems general principles negotiation emerged 
general approaches assumption particular type agents involved 
approach speech act classifiers possible world semantics formalize negotiation protocols components 
clarifies conditions satisfaction different kinds messages 
provide flavor approach show example commitments agent part negotiation formalized oe goal eventually achieves oe oe intend eventually achieves oe rule states agent forms maintains commitment achieve oe individually iff agent adopt achieve oe goal achieve oe individually willing achieve oe individually 
chapter formal methods dai provides information descriptions 
second approach assumption agents economically rational 
set agents small common language common problem abstraction reach common solution 
assumptions rosenschein zlotkin developed unified negotiation protocol 
agents follow protocol create deal joint plan agents satisfy goals 
utility deal agent amount willing pay minus cost deal 
agent wants maximize utility 
agents discuss negotiation set set deals positive utility agent 
agent interaction protocols formal terms task oriented domain approach tuple set tasks set agents monotonic function cost executing tasks deal redistribution tasks 
utility deal agent gamma conflict deal occurs agents reach deal 
deal individually rational deal pareto optimal deal set deals individual rational pareto optimal negotiation set ns 
possible situations 
conflict negotiation set empty 
compromise agents prefer agree negotiated deal 
cooperative deals negotiation set preferred agents achieving goals 
conflict agents benefit negotiating better acting 
alternatively flip coin decide agent gets satisfy goals 
negotiation best alternative cases 
agents execution autonomy principle deceive mislead 
interesting research problem develop protocols societies effects deception misinformation constrained 
aspect research develop protocols rational agents honest 
connections economic approaches human oriented negotiation argumentation fully worked 
multiagent belief maintenance multiagent truth maintenance system serve detailed example highlevel interaction agents 
truth maintenance system tms designed ensure integrity agent knowledge stable wellfounded logically consistent 
depending beliefs justifications data represented stable state knowledge base datum valid justification believed datum lacks valid justification 
founded knowledge base permits set beliefs mutually dependent 
logically consistent knowledge base stable time consistency determined logical contradiction exists 
consistent knowledge base datum believed datum negation multiagent systems societies agents believed 
desirable properties knowledge base complete concise accurate efficient 
single agent tms attempts maintain founded stable states knowledge base adjusting data believed 
important group agents able assess maintain integrity communicated information knowledge 
multiagent tms provide integrity 
consider modified justification tms datum set justifications associated status internal believed valid local justification external believed agent asserted 
consider network agents system beliefs 
agents interact communicating data unsolicited response query 
foundedness communicated datum internal agents believes internal external rest 
support status communicated datum jointly maintained agents 
single agent generally free change status accord 
coordinate agents consistent status datum 
multiagent tms invoked addition removal justification obeys principles belief changes resolved agents possible 
belief changes resolved changing beliefs possible 
invoked things 
data including newly justified datum presumably consequences 
unlabeled data set confined single agent span agents 
communicated datum unlabeled agent unlabeled agents share 

chooses labelings unlabeled shared data defined 

initiates labeling affected agents respect requirements imposed shared data 
affected agents fails label successfully backtracks 
chooses different labelings shared data step different set data step 
consider justification network 
agents agent agent share communicated datum assume initial labeling shown diagram perturbed addition new justification agent initially just changed datum private data downstream consistent relabeling 
agent shared data downstream private data downstream ts labeling fails 
shared data downstream agent agent upstream privately downstream agent interaction protocols gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma gamma internal external gamma gamma gamma gamma unreliable agent gamma agent agent multiagent tms network new justification datum shown dashed added invokes multiagent tms algorithm results relabeling network ts labeling succeeds shown 
labeling failed able data report network inconsistent 
market mechanisms protocols mechanisms described earlier chapter require agents communicate directly appropriate small numbers agents 
mechanisms coordination needed large unknown number agents 
mechanism voting agents choose set alternatives adopt alternative receiving votes 
mechanism simple equitable distributed requires significant amounts communication organization useful just defined issues decided 
multiagent systems societies agents gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma agent agent resultant stable labeling justification network produced multiagent tms algorithm computational economies market mechanisms approach 
effective coordinating activities agents minimal direct communication agents 
research challenge build computational economies solve specific problems distributed resource allocation 
interest agent described current prices preferences abilities irrelevant insofar automatically affect prices 
types agents consumers exchange goods producers transform goods goods 
agents bid goods various prices exchanges occur current market prices 
agents bid maximize profits utility 
cast problem terms computational market needs specify goods traded consumer agents trading goods producer agents technologies transforming goods societies agents bidding trading behaviors agents 
markets goods interconnected price affect supply demand 
market reach competitive equilibrium consumers bid maximize utility subject budget constraints producers bid maximize profits subject technological capability net demand zero goods 
important property equilibrium corresponds sense optimally allocation resources dictates activities consumptions agents 
general equilibria need exist unique certain conditions effect individual market assumed negligible guaranteed exist uniquely 
open market agents free choose strategy behave rationally 
economic rationality assumes agent preferences knowledge effects agent actions 
rational action agent maximizes preferences 
economic rationality charm simple common denominator approach reduce money talk maximizing 
apply requires careful selection target problem 
oldest applications economic rationality decision theoretic planning models costs effects actions quantitatively probabilistically 
applications probabilities estimated reliably leads highly effective plans actions 
need maximize preferences essentially requires scalar representation true preferences agent 
words preferences reduced single scalar compared effectively scalars 
difficult carefully circumscribe application domain 
ends essentially recreating concepts veneer rationality 
example agent governed past commitments just attractive choice time develop utility function gives additional weight past commitments 
approach may principle practice serves hide structure commitments utility function chooses 
section describes social commitments fully 
societies agents traditional ai concerned agent constructed function intelligently single locus internal reasoning control implemented von neumann architecture 
intelligent systems function isolation part environment operate environment typically contains intelligent systems 
multiagent systems societies agents sense view systems societal terms 
promising opportunities engendered combination increasingly large information environments national information infrastructure intelligent vehicle highway system advances multiagent systems 
planned information environments large complex dynamic open managed centrally predefined techniques feasible alternative computational intelligence embedded places environments provide distributed control 
locus embedded intelligence best thought autonomous agent finds conveys manages information 
nature environments agents long lived able execute unattended long periods time adaptive able explore learn environment including social interact coordinate achieve goals goals society rely agents know things know 
techniques managing societies autonomous computational agents useful large open information environments large open physical environments 
example techniques yield new efficiencies defense logistics considering item materiel intelligent entity goal reach destination distribution system manage complicated schedules unforeseen difficulties 
group agents form small society play different roles 
group defines roles roles define commitments associated 
agent joins group joins roles acquires commitments role 
agents join group autonomously constrained commitments roles adopt 
groups define social context agents interact 
social agency involves abstractions sociology organizational theory model societies agents 
agents best studied members multiagent systems view agency important gaining recognition 
sociability essential cooperation essential moving somewhat rigid client server paradigm today true peer peer distributed flexible paradigm modern applications call agent technology finds greatest payoffs 
mental primitives beliefs desires intentions appropriate number applications situations suitable understanding aspects social interactions 
economic models agency quite general principle typically limited practice 
value functions tractable essentially reduce agent selfish agent 
argue self interested agent need selfish may interests immediate personal gain 
certainly true cases describing humans richer assumption modeling artificial agents settings appropriately complex 
social commitments commitments agent agent 
societies agents carefully distinguished internal commitments 
social commitments studied number researchers including 
number definitions literature add components witnesses contexts 
social commitments flexible means behavior autonomous agents constrained 
important concept social dependence defined goal eventually agent depends agent regard act realizing state goal unable realize able 
social dependence voluntary agents adopt roles bind certain commitments 
relationship holds independently agents awareness 
course may consequences occur agents aware try influence pursue social dependencies may compound 
example mutual dependence occurs depend realizing common goal achieved plan including different actions depends doing depends doing cooperation form mutual dependence 
reciprocal dependence occurs depend realizing different goals social exchange form reciprocal dependence 
basis group agents form cooperative team agents share common goal 
agent required share achieve common goal group subgroup 
agent adopts request share 
social dependencies social laws may govern behaviors large numbers agents society 
see treatment concept 
multiagent systems societies agents chapter described elements computational environment needed interaction multiple software agents 
elements enable agents communicate cooperate negotiate act interests society 
research needed develop basis techniques societies autonomous computational agents execute open environments indefinite periods 
research rely ability agents acquire representations 
needed negotiation cooperation coordination multiagent learning 
contents representations subsequent chapters textbook provide answers 
exercises 
level advantages disadvantages synchronous versus asynchronous communications agents 

level imagine agents negotiating contract 
course negotiation engage speech acts propose accept reject retract explain ask clarification agree disagree 
draw state diagram negotiation protocol followed agent 

level consider environment having broker agent information agents advertise 
information agent advertises provides broker list predicate calculus expressions summarizing knowledge 
find information agents knowledgeable certain topics query agent supplies predicate calculus expressions broker asks pointers relevant information agents 
broker returns list relevant information agents 
list kqml message sent query agent asks broker agent pointers information agents knowledgeable predicate calculus expression weight automobile 
hint example kqml message information agent advertising broker advertise content weight automobile language predicate calculus ontology transportation domain sender info agent receiver broker transportation domain ontology common agents 
draw exercises state transition diagram agent 
sure speech act sent received serves condition state transition 
state simplifying assumptions 

level difference concepts coherence coordination 
level give advantage disadvantage contract net protocol 

level formalize protocol contract net kqml 
clearly state parts content part communications 
agent manager task wants solved 
manager announces task broadcasting task description message agents potential contractors 
contractors receives task announcement evaluate respond bid message containing estimate ability cost 
manager evaluates bids chooses best sends award message winning contractor 

level list sequence kqml performatives generated agents solving problem agent wants find cost football tickets 
agent know cost agent knows agent exists 
agent know cost agent knows agent exists 
agent knows cost 
assume agents cooperative truthful 

level describe agents negotiate find common telephone line conference call 
assume agent telephones lines agent agent 
negotiation proceeds pair wise agents time 
agents negotiate order 
alternate lines chosen order specified agent 
initially agent proposes line agent agent accepts 
agent proposes line agent agent rejects 
complete process agents picked common line 

level multiagent truth maintenance single agent knows knowledge labeled follows multiagent systems societies agents fact status shared nil justification premise rule status shared nil justification premise fact status shared nil justification fact rule agent shares fact agent fact status changes internal agent receiving knowledge labels new fact having status external 
consider situation knowledge initially local agent agent agent agent fact rule fact rule rule rule rule suppose agent shares fact agent uses forward chaining possible knowledge 
show effect agent sharing fact status shared justification fields data agent 
suppose agent shares fact agent show effect sharing knowledge status shared justification fields data agent 
suppose agent retracts fact making fact status 
show changes occur status shared justification fields data agent 

level discussion unified negotiation protocol stated agents decide flip coin negotiation set empty 
conditions beneficial agents 

level imagine dimensional domain consisting packages destinations 
domain robots move packages correct destinations 
robots carry package time allowed exercises destination domain robots move packages destinations travel package maneuver 
cost associated moving package picking setting 
robot encounters package carrying move package way go 
moving higher cost beneficial robots package way 
assume robot rewarded amount moves package closer destination 
develop computer simulation domain try establish answers questions robots develop social conventions regarding direction move packages obstacles 
conditions paths obstacles form robots travel 
destination points congested robots attempting drop packages 
occur 
robots specialized operation robots bring packages near destinations robots move drop points final destinations 
robots communicate information intentions regarding packages moving robots able take advantage information 
suggestions choose grid size nxn containing packages robots destinations initial values parameters 
assume robot package take square multiagent systems societies agents grid 
assume robot move adjoining squares time interval 

level initial state block world table table 
desired goal state table table 
agent manipulate blocks agent manipulate blocks solving problem action movetotable agent block place block table 
express movement block table terms social dependence formula chapter 

john austin 
things words 
clarendon oxford uk 

briggs diane cook 
flexible social laws 
proc 
th ijcai 

birgit burmeister haddadi kurt 
generic configurable cooperation protocols multi agent systems 
proceedings rd european workshop modelling autonomous agents multi agent world maamaw 

stefan jurgen muller 
communication architecture cooperating agents 
computers artificial intelligence vol 
pages 

cristiano castelfranchi 
commitments individual intentions groups organizations 
proceedings international conference multiagent systems pages 

man kit chang 
communication level protocol supporting machine machine negotiation organization 
ms thesis british columbia vancouver canada 

conte cristiano castelfranchi 
cognitive social action 
ucl press london 

daniel corkill kevin gallagher kelly murray 
gbb generic blackboard development system 
proc 
aaai philadelphia pa pages 

randall davis reid smith 
negotiation metaphor distributed problem solving 
artificial intelligence vol 
pages january 

jon doyle 
truth maintenance system 
artificial intelligence vol 
pages 

edmund durfee 
coordination distributed problem solvers 
kluwer 

edmund durfee thomas montgomery 
hierarchical protocol coordinating multiagent behaviors 
proc 
aaai 

edmund durfee victor lesser daniel corkill 
coherent cooperation communicating problem solvers 
ieee transactions computers 

adam farquhar richard fikes james rice 
ontolingua server tool collaborative ontology construction 
technical report ksl knowledge systems laboratory stanford university september 

tim finin don mckay rich fritzson 
overview kqml knowledge query language 
technical report maryland cs department 

taylor 
social cognition 
addison wesley new york 

les gasser 
social conceptions knowledge action dai foundations open systems semantics 
artificial intelligence 

les gasser michael huhns editors 
distributed artificial intelligence volume ii 
pitman publishing london 

gilbert doran editors 
simulating societies computer simulation social phenomena 
proceedings symposium simulating societies 
university college press london 

gilbert conte editors 
artificial societies computer simulation social life 
university college press london 

haddadi 
pragmatic theory interactions 
proc 
international conference multiagent systems icmas san francisco 

peter haddawy 
believing change changing belief 
ieee transactions systems man cybernetics special issue higher order uncertainty 

carl hewitt 
open information systems semantics distributed artificial intelligence 
artificial intelligence vol 
pages 

eric horvitz geoffrey rutledge 
time dependent utility action uncertainty 
proceedings th conference uncertainty artificial intelligence pages 

huhns mukhopadhyay stephens 
dai document retrieval minds project 
huhns editor distributed artificial intelligence 
pittman london 

michael huhns munindar singh 
mediated approach open large scale information management 
proc 
ieee int 
phoenix conf 
computers communications 

michael huhns david 
multiagent truth maintenance 
ieee transactions systems man cybernetics vol 
pages december 

jennings 
commitments conventions foundation coordination multi agent systems 
knowledge engineering review 

nick jennings 
coordination techniques distributed artificial intelligence 
hare jennings editors foundations distributed artificial intelligence pages 
john wiley sons new york 

tokoro 
negotiation protocol conflict resolution multi agent environments 
proc 
pages 

yannis labrou tim finin 
semantics approach kqml general purpose communication language software agents 
proc 
int 
conf information knowledge management 

mahalingam michael huhns 
ontology tool distributed information environments 
ieee computer june 

robin milner 
elements interaction 
cacm vol 
pages 

yoram moses moshe 
computational aspects artificial social systems 
proc 
th dai workshop glen arbor mi 
multiagent systems societies agents 
neches fikes finin gruber patil senator swartout 
enabling technology knowledge sharing 
ai magazine fall 

jeffrey rosenschein gilad zlotkin 
rules encounter 
mit press cambridge ma 

jeffrey rosenschein gilad zlotkin 
designing conventions automated negotiation 
ai magazine pages 

stuart russell peter norvig 
artificial intelligence modern approach 
prentice hall upper saddle river nj 

john searle 
speech acts essay philosophy language 
cambridge press 

herbert simon 
sciences artificial 
mit press cambridge ma third edition 

munindar singh 
commitments autonomous agents information rich environments 
proceedings th european workshop modelling autonomous agents multi agent world maamaw 

munindar singh 
considerations agent communication fipa workshop 

munindar singh 
semantics speech acts 
annals mathematics ai vol ii pages 

reid smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers vol 
pages december 

reid smith randall davis 
frameworks cooperation distributed problem solving 
ieee transactions systems man cybernetics vol 
smc pages january 

katia sycara 
resolving goal conflicts negotiation 
proc 
aaai pages 

michael wellman 
computational market model distributed configuration design 
ai 

eric werner 
cooperating agents unified theory communication social structure 
gasser huhns editors distributed artificial intelligence volume ii pages 
pittman london 

gio wiederhold 
mediators architecture information systems ieee computer vol 
pages march 

carson woo frederick lochovsky 
knowledge communication intelligent information systems 
international journal intelligent cooperative information systems vol 
pages 
