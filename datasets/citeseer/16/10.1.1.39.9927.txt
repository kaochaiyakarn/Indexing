unifying view logic programming non monotonic reasoning antonio brogi lamma paolo mancarella paola mello provide simple formulation framework extensions logic programming non monotonic reasoning treated uniformly kinds negation abduction 
resulting semantics purely model theoretic gives meaning abductive logic program 
embeds generalizes existing semantics deal negation abduction 
framework equipped correct top proof procedure 
keywords programming languages logic programming non monotonic reasoning negation abduction 
dipartimento di informatica universit di pisa corso italia pisa italy 
brogi di unipi deis universit di bologna viale bologna italy 
deis unibo dipartimento di informatica universit di pisa corso italia pisa italy 
paolo di unipi deis universit di ferrara ferrara italy 
ing contents motivations preliminaries positive version program supported interpretations definite programs negation default model theory related preferential semantics stationary semantics stable founded semantics forms negation model theory related forms negation valued stable semantics answer set semantics scenario semantics coherence principle abductive semantics dealing contradiction dealing contradiction related argumentation semantics contradiction explicit negation approaches abduction preliminaries model theory compositional semantics extended logic programs compositionality establishing compositionality logical equivalence relations semantics proof procedure basic algorithm related motivations logic programming lp widely recognized powerful formalism knowledge representation various artificial intelligence ai domains 
lp ai greatly benefited interaction 
particular logic programming typical ai domains called various extensions basic lp framework better understanding existing extensions negation abduction 
need extending pure lp horn clauses deal forms non monotonic reasoning recognized early years lp 
negation failure introduced express negative information recognized suitable form non monotonic reasoning 
instance negation failure provides simple elegant solution known frame problem ai exemplified called yale shooting problem 
extensions proposed enrich expressive power lp order turn general formalism knowledge representation survey see 
mention abductive lp lp different forms negation 
particular shown logic programs kinds negation default explicit negation applied diverse domains knowledge representation hierarchies reasoning actions 
formalization extensions called new semantics capable capture intended meaning 
case negation failure number different characterizations defined different perspectives inspired interpretation negation failure general notion negation default 
survey semantics logic programs negation default reported 
survey focuses proof theoretic model theoretic issue relations 
similar happening extensions abductive lp lp second form negation addition negation default see instance :10.1.1.13.7065
extension general agreement semantics 
formal comparisons different semantics hard drawn mainly different grounds 
furthermore proposals proof theoretic approach model theoretic approach constitutes obstacle study formal properties formal comparisons different proposals 
crucial issue understand relations different extensions 
instance relation negation default abduction thoroughly studied starting 
ongoing proliferation alternative proposals may ultimately create sort labyrinth lp nmr similar labyrinth lp concurrency potential risk getting far away lp 
reason trying give uniform view extended lp encompasses various extensions proposed far effort 
done direction 
instance dung studies relation stable founded semantics normal logic programs shows stable semantics considered valued founded semantics 
authors pointed framework fact argumentation approach logic programming non monotonic reasoning :10.1.1.13.7065
dung intuitive notions arguments attack arguments adopted reconstructing number nmr formalisms understanding different semantics extended lp quite simple way 
inspired dung general assumption framework non monotonic reasoning developed semantics extended logic programming easily reconstructed 
choice employing argumentation framework simple powerful may seen departure standard formalisms widely employed lp community 
time absence model theory dung argumentation framework constitutes obstacle study formal properties typically model theoretic grounds compositionality 
valuable argumentation alferes pereira authors define parameterizable schema encompass characterize diversity semantics involving kinds negation default negation classical strong weak pseudo explicit negation 
goal propose semantics lp extensions 
aim provide simple formulation unified lp semantic framework main extensions lp nmr treated uniformly forms negation abduction 
semantics known notion herbrand models definite horn programs extended logic programs simply viewed definite horn programs notion positive version program 
intuitively idea restrict step wise fashion set herbrand models positive version program order identify intended models original program 
extended version previous applied ideas case normal logic programming logic programming negation default 
provided alternative characterization semantics normal logic programs purely model theoretic arguments allowed reconstruct compare existing seemingly different proposals przymusinski stationary semantics dung preferential semantics 
results slightly different way partly inspired 
allows naturally generalize approach extensions logic programming including second form negation abduction integrity constraints 
final outcome semantics framework model theoretic grounds extensions accommodated easy uniform way 
interesting issue related semantic characterization study equivalence notion induces particular compositionality fully abstractness properties 
discus topic particular show compositionality include proofs results simply stated 
property easily accommodated semantic framework model theoretic grounds 
develop specification proof procedure framework simple extension proof procedure abductive logic programming developed 
proof procedure shown sound weakly complete respect model theory 
preliminaries set basic notations terminology 
shall basic concepts logic programming 
lowercase letters possibly subscripted denote atoms literals 
standard terminology extended deal extensions logic programming dealing 
particular need distinguish negation default denoted second form negation denoted 
extended logic program set rules form literal form atom 
refer herbrand interpretations models consider possibly infinite propositional programs 
non propositional program understood shorthand possibly infinite set ground rules obtained instantiating original rules possible ways herbrand universe program 
positive version program positive version extended program mean definite program obtained replacing negated literals form new positive atoms 
extended program denote set ground atoms occurs new propositional symbols introduced represent default negation negation default negation default negation 
notations sets symbols occurring positive version program fa fnot point intuitive meaning atoms referred positive negated standard default atoms respectively 
positive version extended program obtained replacing literals form corresponding standard default atoms respectively 
example positive version extended program definite program onwards distinguish extended program positive version 
denote directly positive version extended program 
herbrand base extended program extended program viewed definite program viz positive version talk herbrand interpretation usual subset interpretation resp stand set default resp standard atoms resp 
natural syntactic correspondence standard atom negation default notion complement respect negation default ae ff ff ff ff notion lifted sets atoms interpretations obvious way 
interpretation complement respect negation default fl xg interpretation total semantically role forms negation characterized basic properties herbrand interpretations call consistency non 
properties defined notion satisfaction integrity constraints 
program integrity constraint mean denial form fl definition extended logic program phi set denials form fl interpretation 
oe phi say satisfies oe denoted oe fl say satisfies phi denoted phi oe oe phi 
sets integrity constraints ic ic associated positive version extended program 
sequel write simply lead ambiguity 
definition extended program 
integrity constraints associated possibly infinite sets denials ic ic notions consistency non interpretation follows 
definition extended program herbrand interpretation 
consistent ic inconsistent 
ii non contradictory ic contradictory 
interpretation consistent true standard atom 
hand non contradictory true standard atom supported interpretations definite programs semantics extended logic programs considering negation abduction integrity constraints built semantics characterization normal logic programs logic programs negation default 
starting point characterization supported interpretations definite ground programs 
concept supported interpretations adopted inherited similar concept introduced exploited 
supported interpretations provide alternative characterization standard herbrand interpretations definite logic program provides compositional model theoretic semantics logic programs see section 
notion supported interpretation definition generalization 
section logic program propositional definite program denotes underlying herbrand base 
definition logic program predefined subset called set assumables 
herbrand interpretation set assumables say supported denoted herbrand model program worth noting notion supported interpretation coincides previous definition set assumables herbrand base herbrand models definite logic program just supported interpretations respect set assumables shown 
predefined set assumables standard herbrand model program obviously interpretation supported empty set assumables 
worth noting interpretation supported different sets assumables example shows 
example program set assumables fpg 
clearly herbrand model fp qg supported fpg 
semantics various extensions logic programming going deal defining case subset taken predefined set assumables identifying subset supported interpretations intended models extended program 
example initial program definite logic program standard meaning herbrand model simply reconstructed considering unique supported interpretation 
negation default model theory consider case logic programs negation default usually referred normal logic programs 
notice definitions results stated section proof included 
positive version normal logic program set rules form positive atom positive atom negation default atom positive atom 
words normal logic programs 
reduces set fnot set assumables case set default atoms herbrand base definition supported interpretation definition suitably instantiated definition set assumables normal programs 
definition normal logic program set assumables 
herbrand interpretation supported herbrand model intuitively speaking supported interpretation corresponds assuming truth set default hypotheses set default atoms form view basically corresponds abductive interpretation negation default introduced refined 
example consider program herbrand base associated fa bg set assumables fnot bg 
supported interpretations fg supported fg fnot ag supported fnot ag fa bg supported fnot bg fa bg supported fnot bg intuitively speaking supported interpretation represents possible world default atoms assumed hold 
supported interpretation taken intended model original normal program depends various issues 
supported interpretation consistent sense definition true atom 
definition normal program 
supported interpretation supported model consistent 
secondly supported model satisfy admissibility condition going discuss basis proposed semantics negation default 
worth noting condition reconstruction framework supported interpretations admissibility condition introduced dung definition preferential semantics normal logic programs 
shown formulation admissibility allows easily reconstruct stationary semantics normal logic programming introduced 
allows formal comparison approaches unifying framework supported interpretations 
notion admissibility relies notion conservative extension supported model 
supported model may extended enlarging set assumables default atoms 
extensions supported model supported interpretations assume default hypotheses look supported models representing consistent possible worlds extension model represents richer world defaults assumed hold 
clearly enriching set defaults possible world interested assuming new defaults true world start move inconsistent world 
extensions supported model satisfy property conservative extensions interpretation admissible conservative extensions contradict default hypotheses words supported model admissible way conservatively extend defeat default assumptions 
notions formalized definitions 
section argumentation interpretation notions lines 
definition normal program supported interpretations 
consistent 
conservative extension 
supported interpretation ce denotes set conservative extensions notice extend enlarging set default atoms assumables inconsistent fact condition previous definition states atom assumed furthermore may possibly inconsistent consistent 
example consider program abuse notation write ce ce 
easy see supported interpretation conservatively extends model supported empty set 
hand conservative extension supported model fa bg extension fa bg consistent viz 
fnot bg fa bg fag 
admissibility supported model depends conservative extensions 
supported model admissible conservative extensions defeats default assumptions definition normal program 
supported model admissible model conservative extension 
notice normal programs supported model admissible property holds ce mentioned supported interpretation consistent admissible order taken candidate intended model program 
determined admissible models normal program wish identify intuitively assume default hypotheses possible 
complete model model assumes defaults true conservative extensions 
definition normal program 
admissible model complete model property holds ce section show complete models coincide dung complete scenaria 
proposition direct consequence results 
proposition normal program 
complete model ii total supported model complete model show framework allows reconstruct przymusinski stationary semantics 
byproduct obtain formal result states dung przymusinski semantics coincide 
related section discuss relations semantics negation default previous section approaches semantics normal logic programming 
relations dung preferential semantics przymusinski stationary semantics 
results stated 
mentioned unified view semantics provides formal result equivalence 
equivalence extended sacc zaniolo partial stable models semantics exploiting results establishing equivalence main approaches semantics normal logic programming far 
mention relations semantics normal logic programming stable model semantics founded semantics 
preferential semantics dung exploited treatment negation hypothesis logic programming introduced order set simple semantics logic programs negation default 
main idea look negative literals possible abductive hypotheses highly inspired subsequent proposals including 
semantics program notion admissible extensions theory represented extension called scenario obtained augmenting set abductive hypotheses stated scenario theory recall basic notions results 
follow original presentation different equivalent argumentation theoretic formulation refined :10.1.1.13.7065
reason view concepts quite simple intuitive 
better understand relations framework restate notions adopting possible terminology notations set section 
mentioned semantics normal program terms admissible scenaria form set default assumptions 
admissibility condition scenario argumentation theoretic criterion 
roughly speaking admissible set assumptions able successfully counter attack set assumptions attacks 
intuitively speaking set assumptions corresponds set arguments able defeat counter argument 
key notion notion attack sets arguments 
definition normal program sets assumables 
attacks definition viewed positive program stands standard provability relation horn clause logic 
scenario theory attack 
definition normal program 
scenario theory attack scenaria dung identifies admissible able counter attack attack 
call admissible scenaria order avoid confusion notion admissibility 
definition normal program 
scenario admissible attacks attacks notice attacks means evidence contrary hypothesis admissibility scenario informally explained ability defeat evidence contrary hypothesis preferential semantics program set maximal admissible scenaria called preferred extensions 
definition normal program 
preferred extension maximal respect set inclusion admissible scenario 
shown preferred extensions viewed maximal elements space complete scenaria 
refer complete scenaria order avoid confusion notion completeness 
scenario complete contains hypotheses acceptable respect contains hypothesis counter attacks attack fnot ag 
definition normal program 
admissible scenario complete fnot attacks fnot ag attacks proposition summarizes main results 
proposition normal program 
admits preferred extension ii admits complete scenario iii founded model corresponds set inclusion complete scenario 
position stating direct correspondence complete admissible scenaria complete admissible models 
notice obvious direct correspondence supported models scenaria 
proposition normal program interpretation supported scenario consistent 
proof 
trivial 
easily relate definitions attack admissibility terms properties supported interpretations follows 
proposition normal program interpretations supported respectively 
attacks 
proof 
attacks fnot ag theorem relates dung admissible scenaria admissible models showing coincide normal program 
notice dung definition definition admissibility scenario requires able counter attack attack 
view definition admissibility supported model requires conservative extension attack apparently different notions reconciled theorem 
theorem normal program admissible model admissible scenario proof 
admissible model need show admissible scenario 
scenario consistent proposition 
need show admissible attacks attacks assume admissible definition attacks attack interpretation supported attacks attack consider interpretation 
ce construction ii consistency 
contradicting fact admissible model 
assume admissible scenario 
consistent proposition 
assume admissible interpretation ce ce ce attacks notice dung semantics evidence contrary may inconsistent 
approach conservative extensions may possibly inconsistent 
attacks attack attacks contradiction admissibility establish correspondence complete models complete scenaria 
theorem normal program interpretation supported complete model complete scenario 
proof 
assume complete model 
theorem admissible 
assume complete 
definition attacks fnot ag attacks equivalently attack attack fnot ag conservative extension 
definition proposition attack ce contradicting fact complete 
assume complete scenario 
admissible model theorem 
assume complete definition ce completeness attacks fnot ag attack interpretation supported ce consistency ii attack attacks fnot ag construction attacks fnot ag equivalently 
ce contradicting 
stationary semantics przymusinski interprets negation disjunctive normal programs negation default 
negation default oe propositional formula oe treated new propositional symbol 
default propositions oe allows deal classical negation oe negation default oe 
przymusinski framework formula oe form called objective proposition oe called default proposition 
considered new predicate symbol classical negation taken account talk consistency inconsistency classical sense opposed notions consistency inconsistency see definition 
sequel recall basic definitions results 
basic idea define semantics program terms stationary expansions theories obtained augmenting default propositions form imposing stationarity condition 
go details przymusinski definitions 
normal program expansion theory obtained augmenting default propositions form sequel classical notions herbrand interpretations models theory recall theory herbrand interpretation identified subset herbrand base interpretation default objective proposition oe kind true oe false 
model satisfies statements definition normal program expansion model minimal model ae coincides default propositions 
denote min class minimal models theory formula oe true minimal models write min oe expansions program przymusinski identifies stationary expansions obtained adding original program default propositions form resp 
way corresponding objective propositions false resp 
true minimal models definition normal program theory stationary expansion non contradictory satisfies conditions min pointed notion minimal model corresponds considering predicate circumscription circ theory objective propositions minimized default propositions fixed 
objective proposition 
illustrate definition simple example 
example consider program taken program stationary expansions fnot cg fnot cg notice minimal model fb cg fa cg respectively 
order state relation stationary expansions complete models program need relate framework supported interpretations theories expansions theories 
achieved definition 
definition normal program supported interpretation expansion theory associated defined follows ii supported interpretation associated supported interpretation propositions clarify meaning mapping showing correspondence minimal models theories conservative extensions supported interpretations 
precisely proposition states supported model set conservative extensions coincides set minimal models 
hand second proposition states theory satisfying condition definition set minimal models coincides set conservative extensions 
proposition normal program supported model 
conservative extension minimal model 
proof 
consistent 
conservative extension show model rule fb proof fby construction fh conservative extension fk proof fby construction fk conservative extension fk proof rule fb supported interpretation 
need show minimal 
consequence fact assume minimal exists model agrees default propositions means show induction base case obvious 
assume holds gamma 
ng fb gamma fb fnot mg fb fnot fm model get contradiction 
min definition show supported 
proof interpretation supported ffl ffl model construction 
agrees default propositions minimality supported 
proof fj model fj kg proof fj model fj kg proposition normal program theory satisfying condition definition 
minimal model conservative extension 
proof 
assume minimal model definition need show 
proof fj model tg fj kg proof minimal model tg tg fj kg assume conservative extension 
need show ii iii rule fb proof fby construction fh ce fj kg proof ii construction fk ce fj kg proof iii rule fb proof minimality analogous proof proposition prove main result states correspondence complete models stationary expansions 
theorem normal program 
complete model stationary expansion ii stationary expansion complete model proof 
proof show satisfies conditions definition 
proof min ce fm ce min ce ce ce ce min proof min min min min ce fm complete model proof ii need show fnot aj ce ng sg ft stationary min min min satisfies ce corollary theorem theorem important result states equivalence complete scenaria stationary expansions normal program corollary normal program 
complete scenario aja stationary expansion 
ii stationary expansion complete scenario discussed section theorem holds normal logic programs apply case logic programs kinds negations 
stable founded semantics worth observing stationary semantics preferential semantics extend gelfond lifschitz stable model semantics normal programs 
fact stable models program coincide total stationary expansions complete scenaria 
notably result restated framework follows 
proposition program stable model fnot aja mg total model proof 
straightforward proposition ii total models stable models complete complete models equivalent valued stable models dung przymusinski related semantics founded semantics defined 
program complete scenario stationary expansion correspond founded model consequence results previous sections complete model corresponds founded model 
proposition program fm complete model pg 
complete model corresponds founded model mw founded model proof 
straightforward theorem results 
forms negation large body research see oriented increase expressive power logic programming introducing forms negation negation default 
different kinds negation studied literature pseudo classical strong weak explicit negation usage knowledge representation purposes investigated see 
general framework dealing forms negation described 
section show forms negation called pseudo negation modeled framework introduced previous section normal logic programs 
discuss forms negation accommodated framework 
model theory extend language introduced section consider case logic programs kinds negation referred extended logic programs 
positive version extended logic program set rules form standard atom positive atom syntactic negation atom case set assumables taken set default atoms underlying herbrand base notice fnot default atoms form atom 
define semantics negation programs class 
negated atoms form viewed new positive atoms negation default treated way negation default ordinary positive atoms treated previous section 
view think employing definitions supported interpretation conservative extension admissible complete model previous section take complete models intended models extended program view naive take account non sense definition ii complete models 
example illustrates point 
example program herbrand base associated fa set assumables fnot fa fb complete models sense definition contradictory 
order take contradictions account refine definition admissible model definition replacing definition admissible pre model 
definitions supported interpretation conservative extension previous section definitions 
definition extended program 
consistent supported interpretation admissible pre model conservative extension 
notice definition differs definition normal programs admissible consistent supported interpretations called pre models models 
distinction introduced admissible consistent supported interpretations extended programs may contradictory 
similarly analogous complete models normal programs complete pre models definition 
definition extended program 
admissible pre model complete premodel property holds ce definition extended program 
admissible viz complete pre model admissible viz complete model non contradictory 
intended meaning extended program defined set complete models definition 
programs inherently contradictory example shows 
example program herbrand base associated fa set assumables fnot interpretation fa complete pre model complete model contradictory 
way deal contradictions restrict class extended programs semantics defined 
introduce notion inherently non contradictory program rule programs program example 
natural condition require interpretation supported empty set assumables non contradictory 
instance example interpretation supported empty set assumables contradictory supported interpretation contradictory 
definition extended program non contradictory supported interpretation non contradictory 
worth observing non program ensure existence complete model illustrated example 
example program herbrand base associated fa program non contradictory interpretation supported empty set assumables simply fg 
complete pre model fa model contradictory 
summing defined semantics non contradictory extended logic program set complete models observed restricting non contradictory programs programs complete model exists contradictions 
section shall discuss contradictions dealt 
related section discuss relations semantics defined section approaches semantics extended logic programs 
moment consider approaches dealing contradiction considered section 
clarify form negation dealt pseudo negation referring alferes pereira parameterizable schema defined encompasses characterizes diversity proposed semantics extended logic programs 
various forms negation section consider strong negation classical negation stationary semantics particular explicit negation coping coherence principle 
particular relate approach founded semantics defined explicit negation pereira alferes 
show complete models definition capture answer set semantics przymusinski valued stable semantics extended logic programs 
differently complete model semantics defined syntactic transformation program clauses intuitive concept extensibility herbrand interpretations 
mention relationships semantics extended logic programs abductive semantics brewka konolige 
forms negation alferes pereira define parameterizable scheme characterize variety semantics proposed extended logic programs 
scheme parameterized parameters set axioms ax defining negation minimality condition defining negation 
show different semantics programs kinds negation modeled suitably instantiating parameters 
show semantics dealing contradiction removal accommodated scheme 
worth observing complete pre models extended program correspond stationary ax expansions set axioms ax empty 
correspondence directly follows results section definition stationary ax expansions 
complete pre models characterize form negation called pseudo negation 
semantics pseudo negation inconsistent complete models define consistent version stationary semantics pseudo negation 
strong negation form negation defined means set ax strong axioms form literal complete models model properly strong negation illustrated example 
example consider program shown meaning associated syntactic negation interpreted strong negation 
hand complete models assign meaning fb complete model worth observing enforcement totality requirement satisfies axioms ax strong strong negation coherence principle required explicit negation discussed 
correspondence complete total models program stable ax strong models answer sets equivalent stable ax strong models 
alferes pereira point semantics extended logic programs supportive 
semantics classical weak negation examples non supportive semantics 
definition semantics necessarily supportive program stationary resp 
stable model standard literal exists rule form fb easy observe semantics directly reconstruct non supportive semantics interpretations supported definition 
stationary semantics deals classical negation negation default relies principles minimization predicate circumscription see section case normal logic programs 
equivalence result complete models stationary expansions stated section theorem normal logic programs extend case extended logic programs 
example consider program meaning program semantics complete model fnot pg 
hand stationary semantics allows conclude holds non property classical negation 
way reconstruct non supportive semantics framework extend program rules suitably coping axioms various semantics 
instance pereira alferes show classical negation reconstructed introducing disjunction axioms form strong negation axioms kind pereira alferes introduced form negation called explicit negation default explicitly negated literals related coherence principle 
coherence principle defined means inference rules form standard atom authors define founded semantics extended logic programs terms extended stable model wfsx model 
example extended program taken extended stable model fa coherence principle enforces truth default assumption clause true 
transformation defined clause deleted clause left allowing assumption default semantics associated unique complete supported model fa semantics defined differs semantics consider coherence principle 
way reconstruct semantics enforce coherence principle perform suitable program transformation program clauses replace standard atom pair 
example consider program example transform clauses order incorporate coherence principle see 
obtain new program easy observe extended stable model fa notice complete supported model fa enforcing coherence obtain exactly extended stable model alferes pereira przymusinski analyze properties strong explicit negation relation 
analyze relation strong explicit negation default classical negation general context knowledge representation terms autoepistemic logic beliefs 
show logic program transformed belief theory exists correspondence stationary models consistent static autoepistemic expansions corresponding belief theory 
theorem theorem establish correspondence complete models program consistent static autoepistemic expansions belief theory obtained notice logic programming setting results show strong explicit negation coincide gelfond lifschitz classical negation extended logic programs stable answer set semantics 
result applies smoothly total complete models strong explicit negation coincide 
valued stable semantics przymusinski extends framework valued stable models case logic programs kinds negation 
normal logic programs valued stable models defined extended gelfond lifschitz transformation stability requirement 
framework adapted case extended logic programs viewing negated literals new atoms done far 
extended logic program transformed normal logic program valued stable semantics exploited provide valued stable semantics 
valued stable model corresponding candidate valued model obtained follows resp 
true resp 
true ii resp 
false resp 
true resp 
false default iii resp 
undefined resp 
undefined resulting set non contradictory valued stable model discarded 
complete model corresponds valued stable model vice versa stated proposition 
proposition extended program 
complete model valued stable model proof 
proof follows results section viewing normal logic program 
straightforward theorem results 
non contradictory complete pre models correspond stationary expansions non contradictory valued stable models 
straightforward valued stable models viewed normal logic program correspond complete models example consider program fa complete model coincides unique valued stable model answer set semantics gelfond lifschitz answer set semantics generalization valued stable model semantics extended programs 
easy show answer sets extended program stable models program obtained viewing negated literals new positive atoms 
notation answer set interpretation stable model normal logic program obtained replacing literal contains pair complementary literals contradictory mapped set standard atoms section shown total consistent supported interpretations complete coincide stable models normal logic program 
case extended logic programs similar result holds 
proposition extended program 
total model corresponds answer set ii non contradictory answer set corresponds total model proof 
trivial proposition 
example consider program total model fb coincides answer set scenario semantics coherence principle alferes dung pereira unifying framework studying explicit negation notion admissible scenaria coherence principle 
introduce ideal skeptical semantics founded semantics counterpart 
coherence principle implies mandatory hypotheses assumed 
formally set mandatory hypotheses respect scenario mand fnot fnot jl lg alferes consider consistent programs extended logic program consistent iff mand fg consistent scenario 
consistent program admissible scenario 
ideal skeptical semantics defined largest set hypotheses satisfying condition admissible scenario admissible 
founded semantics defined grounded part ideal skeptical semantics 
precisely wellfounded skeptical semantics program fixpoint bottom process starts empty scenario extends step mandatory hypotheses belonging ideal skeptical scenario 
skeptical semantics alferes dung pereira characterize credulous semantics terms complete scenaria 
framework tackle skeptical semantics addressed briefly discuss relations framework credulous semantics 
notions admissibility completeness equivalent provided mandatory hypotheses added interpretations 
precisely mandatory hypotheses may accommodated framework means suitable syntactic transformation program clauses suggested dealing explicit negation 
abductive semantics brewka konolige abductive semantics generalized propositional logic programs defining meaning program terms extensions 
default literals modeled abductive hypotheses logic program considered background theory 
criterion defining acceptable hypotheses called extension bases introduced 
semantics applies programs kinds negation disjunctions clause heads 
program set hypotheses default literals closure interpretation supported consistent non contradictory 
closure herbrand base 
closure set hypotheses program cover defined cov fnot cg extension consistent non contradictory terminology set hypotheses closure cov ae cov 
set hypotheses supporting called extension base preference criterion adopted brewka konolige models intuition undefinedness minimized 
perspective brewka konolige select interpretations consistent non contradictory assign truth value literals possible 
respect semantics credulous semantics founded stationary semantics 
case resulting semantics defined non contradictory program 
semantics defined equivalent stable model semantics programs having stable model 
property easily accommodated framework enforcing preference criterion total models exist partial models 
main drawback semantics stable model exists notably departs valued stable model semantics stationary semantics 
hand solves instance floating problem founded semantics stationary semantics 
example consider program founded semantics conclude abductive semantics defined extension bases fnot bg fnot ag derive closures fa cg fnot cg respectively 
worth mentioning brewka adopts approach introduces coherence principle pereira alferes account explicit negation 
dealing contradiction second form negation may lead inconsistencies models extended program presence different ways handling inconsistencies 
inconsistencies may allowed knowledge represented program derived instance answer set semantics 
paraconsistent semantics adopted semantics allowing derivation inconsistencies general paraconsistency logic programming see 
intuitively speaking paraconsistent semantics aim modeling situation program contains incorrect information due human error 
approach may employed program diagnosis intelligent debugging see 
belief revision techniques may employed perform contradiction removal 
intuitively speaking inconsistencies stem assumptions longer warranted erroneous information 
assumptions removed possibly minimal way order restore consistency 
pointed section considering kinds negation semantics complete pre models may lead contradictions 
pre models de facto paraconsistent models correspond paraconsistent version semantics proposed przymusinski 
non contradictory programs definition supported interpretation admissible non contradictory viz interpretation supported empty set assumables 
shown example may problems completeness requirement imposed admissible models interferes non requirement 
discuss contradiction removal approach give meaning non contradictory program 
intuition underlying semantics contradiction removal see section roughly speaking assumption supports contradiction take back assumption 
approach admissibility criterion taken basis defining meaning negation default 
completeness requirement relaxed identify intended models program admissible supported interpretations contain assumables possible consistent non contradictory 
intuitively speaking contradictory complete pre model idea withdraw assumables possible order restore non 
intended models extended program admissible models maximal subsets complete pre models 
definition non contradictory extended program 
supported interpretation contradiction removal model iff admissible model maximal set inclusion subset complete pre model example program clearly non contradictory complete pre model fa contradictory 
contradiction removal models fa fa obtained removing respectively contradiction removal semantics defined non contradictory extended program stated proposition 
proposition non contradictory extended logic program 
set contradiction removal models empty 
proof 
non contradictory admissible model 
proposition exists complete pre model complete pre model set supported interpretations subsets admissible models non empty 
worth observing set contradiction removal models includes set complete models 
proposition non contradictory extended logic program 
complete model contradiction removal model proof 
straightforward complete model admissible maximal 
notice extended programs may happen model 
single admissible model meet contradiction removal models lower semi lattice contradiction removal models ordered supportive hypotheses 
dealing contradiction related problem removing contradiction inconsistent programs approached authors :10.1.1.38.904
section consider approaches coping contradiction 
order give meaning program main approaches followed 
contradiction removal hypotheses discarded possibly minimal way order restore non model despite completeness 
basic approach follow 
alternatively contradiction avoidance applied avoiding assume hypothesis acceptable contradiction arise assuming 
prove contradiction removal semantics definition equivalent complete scenaria semantics introduced dung approach contradiction avoidance contradiction removal 
dung originated argumentation view negation logic programming introduced 
refinement dealing contradiction argumentation approach defined 
relating semantics relate approach semantics considering explicit negation pseudo negation contradiction removal contradiction avoidance :10.1.1.38.904
argumentation semantics dung shows approaches non monotonic reasoning artificial intelligence logic programming expressed different forms argumentation 
idea applied develop simple intuitive framework semantics normal logic programs proposed approached negation default unified see section 
argumentation framework extended deal case extended logic programs 
consider dung 
order simplify comparison section restate definitions terms argumentation employing notion attack 
semantics formulated means notion attack definition scenario definition properly extending notion admissibility see take account second form negation 
definition extended logic program 
scenario dr admissible attacks attacks consistent non gamma contradictory definition complete scenario definition remains unchanged case normal logic programs 
talk dr complete scenaria avoid confusion 
definition extended logic program 
dr admissible scenario fnot attacks fnot ag attacks dung follow contradiction avoidance approach considering hypotheses assumption leads contradiction 
correspondence complete scenaria complete models established section case normal programs extends smoothly case extended programs 
prove contradiction removal semantics equivalent contradiction avoidance approach 
establish equivalence contradiction removal models extended program scenaria introduce lemma 
lemma extended program admissible model dr admissible scenario proof 
assume dr admissible scenario 
admissible definition admissible pre model scenario admissible model assume admissible model admissible scenario theorem 
model scenario consistent non contradictory dr admissible 
proposition extended logic program interpretation supported contradiction removal model dr complete scenario 
proof 
assume contradiction removal model prove supported scenario admissible model dr admissible scenario maximal subset complete pre model dr complete scenario statement trivial 
proof contradiction 
assume dr complete 
attacks fnot ag attacks fnot ag non contradictory 
fnot ag dr admissible scenario lemma fnot ag admissible model get contradiction maximal 
lemma admissible model rest proof done contradiction 
suppose maximal subset complete pre model fnot ag admissible model get contradiction scenario fnot ag dr complete 
intuitively speaking equivalence contradiction removal models extended program dr complete scenaria derives fact framework new condition admissibility definition obtained removing complete pre models default literals introducing contradictions 
example program example 
contradiction removal supported models fa fa fb correspond dr complete scenaria propositions allow relate semantics extended logic programs considered 
extended program sm cs denote non contradictory answer sets valued stable models dr complete scenaria respectively 
proposition shows dr complete scenaria semantics subsumes valued stable semantics turn subsumes answer set semantics 
total supported models complete models complete models turn supported models 
proposition extended logic program 
sm cs 
proof 
trivial non contradictory answer sets correspond total models proposition total models complete models complete models correspond turn valued stable models proposition 
complete models contradiction removal models proposition turn correspond dr complete scenaria proposition 
dung presents argumentation semantics extended logic programs notion attack refined distinguishing ground attacks attacks reductio ad attacks raa attacks 
notion attack section introduced considering attacks caused contradictions arising extended logic programming 
definition extended program sets assumables supporting non contradictory interpretations 
say raa attacks contradictory attack attack raa attack 
leads definition admissible set hypotheses scenario 
definition extended program 
scenario admissible attacks attacks notice differently approach notion admissibility rely symmetric notion attack 
attacking agent definition arguments counter attacking 
notion complete scenario introduced usual way see section 
semantics argumentation semantics nice property defined non contradictory logic program 
approach defines credulous semantics illustrated example 
example extended program fnot rg complete scenario fnot qg fnot pg 
hand contradiction removal models fa qg fa pg 
contradiction explicit negation section briefly review works dealing contradiction removal contradiction avoidance semantics explicit negation 
works inspired founded semantics coherence principle 
pereira alferes define semantics extends wfsx semantics explicit negation 
roughly speaking key idea remove contradictions identify models program obtained revising closed world assumptions cwa supporting contradictions 
precisely cwa relaxed back assumptions viz default literals minimal way means simple syntactic transformation original program 
authors show proposed technique contradiction removal adequate deal general kinds contradictions arising violation integrity constraints 
contradiction removal technique described consists back minimal set default assumptions false cwa called revisable literals 
definition revisable literal associated notion contradiction removal set minimal set revisable literals supporting contradiction refined 
worth observing method proposed pereira selective back assumptions 
undefined default literals truth cwa depend truth cwa default literals 
approach default literal principle revisable 
example consider program taken 
revisable literal approach default literal undefined instance depends semantics framework employed founded semantics explicit negation 
hand apply contradiction removal stable semantics pseudo negation 
worth noting absence contradictions semantics coincides wfsx semantics 
similarly complete pre models non contradictory semantics coincides valued stable semantics 
alferes damasio pereira generalize previous approaches contradiction removal 
consider extended language order deal general form integrity constraints denials form revised non contradictory version contradictory program obtained introducing new predicates 
original program modified introducing removing rules literals depend literals 
program partitioned parts subprogram changed adding rules revisable literals subprogram left unchanged 
revised non contradictory program obtained composing parts 
perspective program view open see section 
remove contradiction modifying truth value literals undefined truth value changed value value 
contradiction removal approach proposed general suggests alternative way removing contradiction framework 
view programs open add variable part program change truth value revisable literals value unknown original approach 
precisely truth value literal resp changed true adding rule resp 
unknown adding rule resp 

revised program obtained composing fixed variable components 
notice compositionality properties approach see section supported interpretations composition programs directly obtained supported interpretations separate sub programs 
example consider program example complete pre model fa contradictory 
contradiction removal models fa fa obtained building revisions obtained adding variable part program obtained adding variable part program contradiction removal model turns complete model complete model alferes pereira propose contradiction avoidance semantics defined terms hypotheses 
particular extend argumentation framework defined complete scenaria semantics defined extended logic programs negation default explicit negation 
program may complete scenario non contradictory 
alferes pereira allow programmer specify hypotheses build scenaria 
hypotheses accepted scenario complete respect 
scenaria may partially complete complete respect non possibly complete respect 
equivalence contradiction avoidance defined contradiction removal approach proved 
approaches problem removing contradiction inconsistent programs approached authors 
address issue belief revision terms stable revisions 
stable revision minimal modification stable model constructed eliminate inconsistencies retraction assumptions 
authors consider language symmetric logic programs including modal operator form negation show language easily mapped language extended logic programs 
approach similar 
inconsistent answer sets program remove inconsistencies minimally changing assumptions program corresponding default literals 
implementation technique truth maintenance system 
sakama extends founded semantics case paraconsistent logic programs 
contradiction addressed identifying suspicious facts facts proofs include inconsistent information 
facts supported suspicious facts suspicious 
approach default literals considered suspicious possibly retracted 
explains provide solution instance program fp qg sakama able retract facts leading contradiction 
abduction section move final extension basic language consider case logic programs negation default explicit negation abduction integrity constraints referred abductive logic programs 
way define model theoretic semantics abduction logic programming setting see section 
correct proof procedure wider class programs section 
abduction recognized powerful mechanism hypothetical reasoning presence incomplete knowledge 
abduction focus intensive research questions concerning declarative operational semantics abduction arise 
theory formula goal abduction find set atoms delta entails delta operationally derivable conditional answer delta 
section focus abductive logic program extended programs predicate symbols identified abducibles definitions program 
abducible predicate represents source incomplete information negation default 
preliminaries previous sections directly refer positive version abductive logic programs 
abductive logic program triple hp ab ici extended logic program section ii ab set abducible atoms ab may occur ic occurs head clause iii ic set integrity constraints set denials form 
worth noting condition ii consider explicit negation abducible atom negation default 
justified observation abducible default hypothesis sense assuming explicit negation hypothesis negation anyway default assumption 
keep distinction abducibles non abducibles clear sequel refer set atoms ab occurs symbols occurring hp ab ici partitioned sets fa ab fnot point intuitive meaning atoms referred positive negated standard default abducibles literals respectively 
herbrand base abductive logic program herbrand interpretation denote set abducibles model theory order assign semantics abductive logic program hp ab ici build model theory extended logic programs defined section 
keep abductive interpretation negation default means case set assumables contains set default atoms assumables extended contain set abducible literals due inherent nature assumables 
set assumables case admissible supported interpretations characterized notion conservative extensions definition 
rephrase definition case abductive logic programs 
definition hp ab ici abductive logic program supported interpretations 
conservative extension 
abductive logic program hp ab ici conservative extension supported interpretation standard atom ii abducible ab resp 
resp 
notice ii follows fact abducibles definitions abducible belongs supported interpretation belongs set assumables allows keep notion admissible interpretations definition case abductive logic programs 
definition hp ab ici abductive logic program 
supported interpretation admissible conservative extension 
notice definition analogous definition 
due ii admissibility supported interpretation depends fact conservative extension consistent set default hypotheses set case extended logic programs assign abductive logic program semantics due fact abductive logic program may inherently contradictory notice extended logic program seen abductive logic program hp 
notion non interpretation consequently abductive logic program hp ab ici take account set integrity constraints 
role integrity constraints ic fact rule interpretations satisfy 
obtained extending notion non interpretation definition ii follows 
definition hp ab ici abductive logic program interpretation 
non contradictory ic ic 
naturally extend definition abductive logic programs follows 
definition abductive logic program hp ab ici non contradictory supported interpretation non contradictory 
onwards consider non contradictory abductive logic programs assigned semantics extending natural way definition admissible pre models complete pre models section 
definition hp ab ici non contradictory abductive program 
supported interpretation admissible pre model hp ab ici admissible consistent 
case term pre model model admissibility consistency supported interpretation sufficient ensure non 
similarly extend definition follows 
definition hp ab ici non contradictory abductive program 
admissible premodel complete pre model property holds ce case extended programs complete pre models promising approximations intended models non contradictory abductive programs 
non complete pre models respect set integrity constraints ic ic guaranteed 
take approach followed extended logic programs characterizing intended models abductive logic program follows 
definition hp ab ici non contradictory abductive program 
supported interpretation abductive model hp ab ici iff admissible model maximal set inclusion subset complete pre model hp ab ici definition abductive model hp ab ici admissible model 
abductive semantics defined non contradictory abductive logic program stated proposition 
proposition hp ab ici non contradictory abductive logic program 
set abductive models hp ab ici empty 
proof 
non contradictory exists admissible pre model non contradictory 
proposition exists complete pre model complete pre model set supported interpretations subsets admissible models non empty single element 
abductive semantics embeds generalized stable model semantics kakas mancarella 
particular proposition holds 
proposition hp ab ici abductive logic program 
generalized stable model hp ab ici corresponds abductive model 
proof 
proof follows fact generalized stable models total total models complete see proposition ii abductive models 
semantics introduced section negation default section explicit negation obtained directly instances abductive framework 
related approach damasio pereira 
basic semantics inspired valued stable semantics approach inspired founded semantics plus coherence principle 
framework abductive defined triple hp ii program possibly extended variable part set abducibles integrity constraints 
allow general integrity constraints part program add constraints detect paraconsistency 
consistency viz 
non terminology regained revising truth value lend violation integrity constraints 
various semantics recovered relaxing coherence principle possibly varying set abducibles set constraints 
particular relate framework various abductive valued semantics extended logic programs generalized stable models stable models stationary models founded semantics 
framework contradiction removed changing truth value abducibles undefined constraints denials 
damasio pereira allow revision introducing removing rules change truth value literal undefined true false 
surprisingly approach coincide abducibles default literals totality constraints added program wfsx model total 
case wfsx model unique complete model coincides unique stable model program coherence principle satisfied case 
arbitrary literals default literals considered abducibles semantics recovers semantics generalized stable model semantics 
compositional semantics extended logic programs section devoted discuss issue defining compositional semantics extended logic programs 
show model theoretic semantics supported interpretations allows obtain compositionality results various semantics considered 
compositionality property compositionality plays major role study semantics programming languages 
simply stated semantics compositional homomorphic meaning program obtained meaning components see instance 
definition compositional semantics programming language induces interesting results equivalence programs program parts basis operations programs program parts 
method giving semantics programming language induces equivalence relation programs 
programs equivalent meaning chosen semantics 
semantics compositional respect composition operations induced equivalence relation congruence operations 
property establishes instance firm foundation reasoning programs program transformations 
suppose program consists parts say suitably composed 
suppose instance efficient version obtained applying program transformation technique equivalent chosen semantics property compositionality ensures substitution affect meaning program consider case extended logic programs 
generally speaking means clear programs considered equivalent 
general agreement meaning extended logic program number alternative proposals 
existing semantics extended logic programs address compositionality issues 
words clear determine models program models components 
example consider case logic programs negation default 
easy show instance stable model semantics proposed gelfond lifschitz compositional respect union programs 
consider instance programs unique stable model fag 
programs extended clause obtain programs different stable models fa bg fbg respectively 
possible general determine stable models program stable models clauses 
establishing compositionality show model theoretic semantics define compositional semantics class extended logic programs 
section considered extensions logic programming negation default pseudo negation abduction 
extensions alternative semantics proposed literature 
semantics represented mapping associating meaning set models program suppose equivalence relation induced semantics compositional respect union programs 
means programs example illustrates situation case stable models 
objective define compositional semantics preserves intended meaning programs 
standard approach consists considering distinguishing semantics preserves semantics congruence set compositions considered 
case extended logic programs semantics corresponds finding semantics ffl congruence operation union programs 
formally 
ffl preserves 
compositional semantics allow reason programs program compositions 
instance suppose program consists parts say compositionality result allows replace instance program having semantics affecting meaning program 
definition congruence 
preserves 
rest section show exists semantics extended logic programs compositional respect union programs preserves meaning extended logic programs considered 
precisely show semantics coincides known logical equivalence positive versions extended logic programs 
recall compositionality logical equivalence respect union definite logic programs established instance 
show results imply logical equivalence positive versions programs preserves various meanings extended logic programs previously discussed 
order study property compositionality extended logic programs necessary fix suitable notions needed multi program setting 
considering multi program setting assume language programs written fixed 
global vocabulary contains set predicate function constant symbols various programs constructed 
put way herbrand base collection programs determined set predicate function constant symbols includes function predicate symbols programs 
definition positive version program section extended take account global vocabulary programs written 
denoting set ground atoms occurs general definition 
denote set atomic formulae constructed predicate function constant symbols logical equivalence semantics extended logic programs notion supported interpretation introduced section 
intuitively speaking idea consider set assumables hypotheses say interpretation program supported set hypotheses herbrand model program definition supported interpretation employed sections model logic programs negation default pseudo negation abduction respectively 
case notion supported interpretation extended considering different sets hypotheses ffl set default atoms case negation default case pseudo negation ffl set default atoms set abducible literals case abduction 
observed section set assumables coincides herbrand base notion supported interpretation coincides notion herbrand model definite programs 
interpretation model program supported interpretation 
lemma definite programs lhm lhm stands herbrand model 
proof 
lhm definition herbrand model hg lemma hg definition trivial 
equivalence relation induced herbrand model semantics known logical equivalence 
definite programs logically equivalent herbrand models 
denote logical equivalence hm hm hm denotes set herbrand models definite program si denote equivalence relation induced supported interpretations program si si si si denotes set supported interpretations definite program si fi lhm virtue lemma easy observe logical equivalence preserves equivalence relation si choice set assumables si shown instance logical equivalence compositional respect operation union programs 
herbrand models union programs determined herbrand models separate programs shown lemma 
lemma definite programs proof 
immediate 
suppose definition herbrand model ground suppose clause belongs ground case analogous 
definition herbrand model model contradiction 
relations semantics conclude discussion showing logical equivalence positive version programs preserves equivalence relations induced semantics extended logic programs considered 
sections considered main extensions logic programming negation default pseudo negation abduction 
case proposed model theoretic semantics definition consists steps 
extended logic program construct positive version 
consider set supported interpretations positive version program 
select supported interpretations models characterize intended meaning program 
shown existing correspondence models models proposed authors 
instance section shown correspondence complete models ffl complete scenaria dung ffl stationary expansions przymusinski ffl stable models gelfond lifschitz ffl founded semantics van gelder ross schlipf 
correspondences equivalently described way 
semantics considered exists suitable projection function set supported interpretations si positive version program yields models corresponding semantics si terms program equivalence means supported interpretations semantics preserves semantics considered 
semantics si combining observation observation logical equivalence preserves equivalence relation induced supported interpretations program result 
proposition extended logic programs 
positive versions logically equivalent programs meaning considered 
proof 
trivial 
consider instance logic programs negation default 
positive versions programs logically equivalent programs complete scenaria stationary expansions stable models 
compositionality logical equivalence suggests reasoning extended logic programs 
instance suppose program consists parts say replace program positive versions logically equivalent 
compositionality logical equivalence resulting programs meaning meaning considered 
application results analyze program transformation techniques extended logic programs scope see 
proof procedure section top proof procedure correct semantics discussed section 
rely terminology introduced section abductive semantics defined section includes defined normal extended logic programs 
method described effective considered interpreter 
address problems loops termination fundamental having mind real implementation 
proof procedure grounded defined kakas mancarella 
starting point consider abductive logic program positive program shown section provided integrity constraints kind lj aj added ic 
procedure extended eshghi kowalski procedure order manipulate arbitrarily abducibles 
deals ground abductive logic programs manipulates class integrity constraints denials containing abducible default atom integrity constraint 
assume hypotheses 
accommodate procedure framework ffl lifting valued case 
particular consider integrity constraints kind imposed 
way remove totality requirement ffl dealing explicit negation considered 
negated literal viewed new positive atom integrity constraint added program 
notice integrity constraint satisfy requirement having abducible default atom 
application unfolding standard atoms possibly reduce case example consider program added integrity constraint transformed unfolding equivalent kind constraint enforced procedure 
fact non checking checks integrity constraints denials 
solution proposed forward evaluation rules adopted order check form integrity constraints 
proof procedure abductive semantics dealing broader class integrity constraints forward evaluation rules reported 
basic algorithm recall main steps procedure basic defined 
abductive derivation abductive derivation delta delta hp ab ici selection rule sequence delta delta delta form delta obtained rules abducible default delta delta resolvent clause selected literal abducible default delta gamma delta delta abducible default delta delta exists consistency derivation fl delta fl fg delta gamma delta delta steps sld resolution steps rules abductive default hypotheses respectively 
step new abductive default hypotheses required added current set hypotheses provided non contradictory 
consistency derivation consistency derivation abducible default literal ff ff delta delta hp ab ici sequence ff delta delta delta delta union goals form obtained resolving abducible default ff denials ic goal empty ii form delta obtained rules abducible default set resolvents clauses literal delta delta abducible default delta gamma delta delta abducible default delta delta delta abducible default delta delta exists abductive derivation delta delta delta delta case current branch splits branches number resolvents clauses empty clause resolvents consistency check fails 
case goal consideration simpler literal belongs current set hypotheses delta case current branch non contradictory assumptions delta branch dropped consistency checking 
case current branch consistency search space dropped provided provable 
query atomic sake simplicity procedure succeeds returns set abducibles delta exists abductive derivation fg delta 
example program example algorithm produce abductive explanation exists consistency derivation default literal unfolding performed integrity constraints algorithm produce fnot bg abductive explanation explanation clearly right 
kakas mancarella stated soundness procedure respect generalized stable model semantics program call consistent 
theorem hp ab ici abductive logic program call consistent literal observation 
fg abductive derivation delta subset delta delta delta delta abductive explanation literal abductive explanation delta exists generalized stable model delta ic 
example shows unsoundness procedure call consistent programs 
example consider call consistent abductive program ab fcg ic cg 
exists abductive derivation fg fg generalized stable models exists 
fact complete total interpretations fa cg fa cg satisfy integrity constraints 
semantics gives meaning program terms abductive model fag 
correctness proof procedure respect abductive semantics established theorem theorem stating respectively soundness completeness results 
order prove theorems lemma extension lemma 
lemma consider non contradictory abductive logic program hp ab ici standard atom 
assume exists abductive derivation fg delta 
supported interpretation delta hp ab ici non contradictory 
ii assume exists non contradictory supported interpretation hp ab ici 
suppose selection rules proof procedure terminates success failure 
exists abductive derivation fg delta delta theorem soundness consider non contradictory abductive logic program 
standard atom 
exists abductive derivation fg delta exists abductive model delta proof 
sketched lemma delta non contradictory 
proposition theorem delta admissible 
definition exists abductive model delta theorem weak completeness consider abductive logic program 
standard atom 
suppose selection rules proof procedure terminates success failure 
exists abductive model exists selection rules procedure succeeds returning delta delta proof 
sketched straightforward lemma ii abductive model non contradictory definition 
procedure defined sound respect abductive semantics complete predicate program depends program contains loop 
theorem obtain corollary finite failure 
corollary consider abductive logic program 
standard atom 
procedure finitely fails abductive model exists corollary directly follows finite failure check literal unknown abductive models finite failure procedure means abductive model contain related eshghi kowalski firstly introduced top proof procedure refined compute negation failure abduction sound respect admissible scenaria 
considering normal logic programs procedure practice abductive proof procedure eshghi kowalski 
theorem states weak completeness result case finite failure admissible scenaria 
mainly focus proof procedures abductive extended logic programs 
consider procedures defined normal logic programs see survey 
proposition shown extended logic programs semantics embeds valued stable semantics turns subsumes answer set semantics 
proof procedure weakly complete conditions theorem respect answer set semantics extended logic programs course sound 
fact totality requirement answer set semantics enforced procedure 
provide query evaluation method abduction kakas mancarella extended eshghi kowalski procedure manipulate arbitrarily abducibles 
procedure top maintains backward evaluation integrity constraints 
satoh iwayama pointed proof procedure unsound respect generalized stable model semantics new query procedure regarded improvement kakas mancarella correct respect generalized stable model semantics 
obtained expense complex integrity checking involving forward evaluation rules handling general integrity constraints implicit deletion rules 
pointed section procedure kakas mancarella correct respect abductive semantics 
checking implicit deletion forward evaluation rules needed equip semantics correct query proof procedure 
proof procedure abductive framework obtained defined satoh iwayama 
extension concern check implicit deletion rules 
exists fact intimate bond implicit deletion checking totality requirement valued stable semantics 
check implicit deletion verifies model consideration gives absolute truth value true false atom 
abductive models required total removing check implicit deletion procedure ensures correct behavior respect abductive semantics see details 
presents proof procedure extended logic programs correct respect proof theoretic semantics 
pointed author implemented semantics give intuitive expected results 
semantics guarantee global non guaranteed proof procedure considered complex tested form local non 
denecker de schreye introduce proof procedure normal abductive logic programs extending sldnf resolution case abduction 
resulting proof procedure sldnfa correct respect completion semantics 
crucial property abductive procedure treatment non ground abductive goals considered procedure limited ground case 
authors consider general integrity constraints constraints kind overcome limitation consider treatment general integrity constraints quite inefficient way 
practice check integrity constraints proof query set abductive hypotheses supporting query computed 
pointed poole better check consistency soon hypotheses generated 
proof procedure check consistency incremental way easily done variable hypotheses 
problem incremental consistency checking generated hypotheses possibly containing variables considered poole develops default abductive reasoning system called theorist order language abductive resolution 
theorist consistency immediately checked hypotheses variables delayed hypotheses containing variables time generated 
alternative solution allow consistency check return constraints value variables 
authors define slx top derivation procedure wfsx semantics semantic tree characterization wfsx 
derivation procedure generalized paraconsistent version wfsx account general forms integrity constraints removing contradiction 
basically derivation procedure relies kinds derivations derivations proving truth tu derivations proving non falsity 
shifting required proving default literal derivation succeeds iff tu derivation fails tu derivation succeeds iff derivation fails 
derivation succeeds derivation succeeds account coherence principle tu derivation fails derivation succeeds 
procedure amenable simple implementation 
guarantee termination suitable rules introduced prune search space eliminate cyclic positive recursion cyclic negative recursion 
procedure similarities procedure procedure eshghi kowalski procedures treat positive recursion non cyclic negative recursion 
fact abductive consistency derivation resemble derivation tu derivation respectively 
big differences pointed procedure take account coherence principle second compute wfsx abductive models 
semantics uniformly integrates abduction kinds negation logic programming setting 
model theoretic semantics defined terms herbrand models equipped interpretation terms argumentation 
model theoretic semantics herbrand models widely accepted concept logic programming community accounts interesting properties compositionality program equivalence 
distinguishing property semantic framework defined non contradictory program strictly related known semantics considered extensions abduction negation default pseudo negation taken separately 
case logic programming extended negation default recovered considering abductive logic program hp ab ici normal logic program viewed positive ab fg ic fg 
case interpretation non contradictory abductive semantics defined coincides valued stable model semantics 
resulting semantic framework 
set abductive models corresponds set valued stable models stationary expansions complete scenaria equivalent proved 
results hold 
particular total complete supported models corresponds gelfond lifschitz stable models 
extended logic programs dealt abductive framework viewing negated literals new positive atoms enforcing suitable non condition capture meaning pseudo negation 
particular case extended logic programming recovered considering abductive logic program hp ab ici extended logic program viewed positive ab fg ic prove extended logic program set complete models captures valued stable semantics contradiction removal semantics coincides complete scenaria semantics extended logic programs 
total complete models capture answer set semantics 
abductive semantics considered common ground kinds negation abduction associated semantics formally compared uniformly integrated 
equipped abductive framework query correct proof procedure order provide schema interpreter language 
procedure practice defined kakas mancarella coincides defined eshghi kowalski normal logic programs considered 
course order transform procedure real algorithmic issues search loop checking treated 
subject 
acknowledgments anonymous referees useful pertinent comments version 
partially supported murst project 
alferes 
personal communication 
alferes damasio pereira 
top query evaluation founded semantics explicit negation 
cohn editor proc 
ecai pages 
morgan kaufmann 
alferes damasio pereira 
slx top derivation procedure programs explicit negation 
bruynooghe editor proc 
int 
symp 
logic programming ilps 
mit press 
alferes damasio pereira 
logic programming system nonmonotonic reasoning 
journal automated reasoning 
alferes dung pereira 
scenario semantics extended logic programs 
pereira nerode editors proc 
nd int 
workshop logic programming non monotonic reasoning pages 
mit press 
alferes pereira 
logic program semantics kinds negation 
apt editor proc 
int 
joint conf 
symp 
logic programming pages 
mit press 
alferes pereira 
reasoning scenario semantics 
warren editor proc 
th int 
conf 
logic programming pages 
mit press 
alferes pereira 
contradiction avoidance equals removal part editor proc 
th int 
workshop extensions logic programming 
lncs vol 
pages springer verlag 
alferes pereira 
contradiction avoidance equals removal part ii 
editor proc 
th int 
workshop extensions logic programming 
lncs vol 
pages springer verlag 
alferes przymusinski pereira 
classical negation non monotonic reasoning logic programming 
proc 
int 
workshop artificial intelligence mathematics 
fort florida january 
dung 
correctness unfold fold transformation normal extended logic programs 
journal logic programming 
apt 
logic programming 
van leeuwen editor handbook theoretical computer science vol 
pages 
elsevier science publisher 
apt bezem 
acyclic programs 
new generation computing 
springer verlag 
apt bol 
logic programming negation survey 
journal logic programming 
baral gelfond 
logic programming knowledge representation 
journal logic programming 
bondarenko toni kowalski 
assumption framework nonmonotonic reasoning pereira nerode editors proc 
nd int 
workshop logic programming non monotonic reasoning pages 
mit press 
levi meo 
contributions semantics open logic programs 
proc 
int 
conference fifth generation computer systems fgcs pages 
icot 
brewka 
abductive framework generalized logic programs 
pereira nerode editors proc 
nd int 
workshop logic programming non monotonic reasoning pages 
mit press 
brewka konolige 
abductive framework general logic programs nonmonotonic systems 
proc 
int 
joint conf 
artificial intelligence ijcai pages 
aaai 
brogi lamma mancarella mello 
normal logic programs open positive programs 
apt editor proc 
int 
joint conf 
symp 
logic programming pages 
mit press 
brogi lamma mancarella mello 
abductive framework extended logic programming 
inproc 
rd int 
workshop logic programming non monotonic reasoning 
lncs lnai series vol 
pages springer verlag 
brogi lamma mello 
compositional model theoretic semantics logic programs 
new generation computing 
springer verlag 
brogi turini fully compositional semantics algebra logic programs 
theoretical computer science 
lamma mello 
modularity logic programming 
journal logic programming 
north holland 
chen warren 
abductive logic programming 
technical report dept computer science state university new york october 
clark 
negation failure 
gallaire minker editors logic databases 
plenum press new york 
console torasso 
abductive reasoning direct deduction completed domains models 
methodologies intelligent systems vol 
page north holland 
cox 
causes events computation applications 
proceedings cade page 
damasio 
paraconsistent logic programming constraints 
ph 
thesis 
universidade nova de lisboa 
damasio pereira 
abduction valued extended logic programs 
inproc 
rd int 
workshop logic programming non monotonic reasoning 
lncs lnai series vol 
pages springer verlag 
denecker de schreye 
sldnfa abductive procedure normal abductive programs 
apt editor proc 
int 
joint conf 
symp 
logic programming pages 
mit press 
denecker de schreye 
representing incomplete knowledge abductive logic programming 
proc 
international logic programming symposium ilps pages 
mit press 
dix 
semantics logic programs intuitions formal properties 
fuhrmann roth editors logic action information 
de gruyter berlin new york 
doyle 
truth maintenance system 
artificial intelligence 
dung 
negation hypothesis abductive foundation logic programming 
furukawa editor proc 
th int 
conf 
logic programming iclp pages 
mit press 
dung 
relations stable founded semantics logic programs 
theoretical computer science 
dung 
acceptability arguments fundamental role non monotonic reasoning 
proceedings int 
joint conf 
artificial intelligence ijcai pages 
aaai 
dung 
argumentation semantics logic programming explicit negation 
warren editor proc 
th int 
conf 
logic programming iclp pages 
mit press 
dung 
acceptability arguments fundamental role non monotonic reasoning logic programming persons games 
journal artificial intelligence forthcoming 
dung 
argumentation theoretic foundation logic programming 
journal logic programming 
dung 
founded reasoning classical negation 
proc 
st int 
workshop logic programming non monotonic reasoning pages 
mit press 
eshghi kowalski 
abduction compared negation failure 
levi martelli editors proc 
th int 
conf 
logic programming iclp pages 
mit press 
evans 
negation failure approach hanks mcdermott problem 
proc 
nd int 
symp 
artificial intelligence mexico 
gelfond lifschitz 
stable model semantics logic programming 
kowalski bowen editors proc 
th int 
conf 
logic programming pages 
mit press 
gelfond lifschitz 
logic programs classical negation 
warren szeredi editors proc 
th int 
conf 
logic programming iclp pages 
mit press 
gelfond lifschitz 
representing actions extended logic programming 
apt editor proc 
int 
joint conf 
symp 
logic programming pages 
mit press 
kakas kowalski toni :10.1.1.13.7065
abductive logic programming 
journal logic computation 
kakas mancarella 
generalized stable models semantics abduction 
proceedings th european conference artificial intelligence ecai pages 
pitman publishing 
kakas mancarella 
relation truth maintenance abduction 
proceedings pricai 
kakas mancarella 
preferred extensions partial stable models 
journal logic programming 
north holland 
kakas mancarella 
stable theories logic programs 
proc 
int 
symp 
logic programming pages 
mit press 
kowalski 
problems promises computational logic 
lloyd editor computational logic symposium proceedings pages springer verlag 
inoue 
extended logic programs default assumptions 
furukawa editor proc 
th int 
conf 
logic programming iclp pages 
mit press 
maher 
equivalences logic programs 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann 
mancarella pedreschi 
algebra logic programs kowalski bowen editors proc 
fifth int 
conf 
symp 
logic programming pages 
mit press 
pereira alferes 
founded semantics logic programs explicit negation 
proc 
ecai pp 

john wiley sons 
pereira alferes 
contradiction removal founded semantics 
proc 
st int 
workshop logic programming non monotonic reasoning pages 
mit press 
pereira alferes 
contradiction removal semantics explicit negation 
alferes editors knowledge representation reasoning uncertainty lnai vol 
pages 
springer verlag 
pereira alferes 
derivation procedures extended stable models 
proc 
ijcai pages 
morgan kaufman 
pereira alferes 
non monotonic reasoning logic programming 
journal logic programming 
pereira damasio alferes 
debugging diagnosing assumptions 
fritzson editor proc 
automatic algorithmic debugging vol lncs vol 
pages springer verlag 

belief revision paraconsistency logic programming framework 
proc 
st int 
workshop logic programming non monotonic reasoning pages 
mit press 
poole 
compiling default reasoning system prolog 
new generation computing 
springer verlag 
przymusinski 
extended stable semantics normal disjunctive programs 
warren szeredi editors proc 
th int 
conf 
logic programming pages 
mit press 
przymusinski 
semantics disjunctive logic programs deductive databases 
proc 
dood 
sadri kowalski 
theorem proving approach database integrity 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann 
sakama 
extended founded semantics paraconsistent logic programs 
proc 
int 
conference fifth generation computer systems fgcs pages 
icot 
satoh iwayama 
query evaluation method abductive logic programming 
apt editor proc 
int 
joint conf 
symp 
logic programming pages 
mit press 
sacc zaniolo 
stable models non determinism logic programs negation 
proc 
acm sigmod sigact symp 
principles database systems pages 
algorithms treating abductive logic programming stable model semantics 
erasmus thesis university bologna march 

proof procedure extended logic programs 
proceedings international logic programming symposium ilps pages 
mit press 
van gelder ross schlipf 
unfounded sets founded semantics general logic programs 
proc 
acm sigmod sigact symposium principles database systems 
yuan 
equivalence semantics normal logic programs 
journal logic programming 

