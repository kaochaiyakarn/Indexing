ieee symposium information visualization infovis san francisco october cushion treemaps visualization hierarchical information new method visualization hierarchical information directory structures organization structures 
cushion treemaps inherit elegance standard treemaps compact space filling displays hierarchical information recursive subdivision rectangular image space 
intuitive shading provide insight hierarchical structure 
subdivision ridges added rectangle rendered simple shading model 
result surface consists recursive 
method efficient effective easy implement wide applicability 
hierarchical structures information ubiquitous family trees directory structures organization structures catalogues computer programs etcetera 
small hierarchical structures effective locate information content organization large structures harder grasp 
new visualization method large hierarchical structures cushion treemaps 
method treemaps developed shneiderman johnson 
treemaps efficient compact displays particularly effective show size final elements structure 
cushion treemaps provide shading strong extra cue emphasize hierarchical structure 
quick impression show treemaps show corresponding cushion treemaps 
section discuss existing methods visualize hierarchical structures 
new method section 
embedding method interactive system tree visualization described section 
discuss extensions alternatives section summarize results section 
jarke van wijk van de eindhoven university technology dept mathematics computing science box mb eindhoven netherlands win tue nl background methods exist display browse hierarchical information structures short trees 
file browsers best known example 
usually listing files directories levels hierarchy shown means indentation 
number files directories shown simultaneously limited problem knows search 
want get overview want answer global question disk full scrolling opening closing subdirectories intensively 
process hard form mental image structure 
node link diagram treemap 
tree representations techniques proposed show structures effectively 
important category node link diagrams fig 

elements shown nodes relations shown links parent child nodes 
sophisticated techniques improve efficiency aesthetic qualities diagrams 
diagrams effective small trees usually fall short couple elements visualized simultaneously 
main reason limitation simply node link diagrams display space inefficiently pixels background 
treemaps developed remedy problem 

treemap file system full display space visualize contents tree 
overview concept depth treatment original 
shows example 
node shown node link diagram name letter associated size number 
size leaves may represent instance size individual files size non leave nodes sum sizes children 
treemap constructed recursive subdivision initial rectangle 
size sub rectangle proportional size node 
direction subdivision alternates level horizontally vertically etcetera 
result initial rectangle partitioned smaller rectangles size rectangle reflects size leaf 
structure tree reflected treemap result construction 
color annotation give extra information leaves 
treemaps effective size important feature displayed 
shows overview file system files shown effortlessly determine largest ones 
labels shown shown interactively pointing areas interest 
treemaps limitations 
problem addressed treemaps fall short visualize structure tree 
worst case balanced tree parent number children leaf size 
tree map degenerates regular grid 
leaves close tree close screen reverse true 
example shows artificial organization chart modeled structure university 
university faculties subdivided departments turn divided sections 
section di 
treemap organization vided units 
unit contains different types staff members full associate assistant professor 
final rectangles denote individual employees 
questions largest section division units balanced hard answer 
nested treemaps partial remedy 
subdivision process initial rectangle slightly smaller rectangle group siblings enclosed margin 
consumes screen space visual interpretation especially deeply nested trees requires effort viewer 
variation properties surrounding lines option 
number steps intensity discerned effort small user required trace lines maze image 
coloring rectangles 
color provide natural hierarchical structure furthermore want color show attributes elements 
alternative exploited shading visualize structure 
remainder show done 
cushion treemaps method shading show tree structure 
human visual system trained interpret variations shade illuminated surfaces 
answer question constructing surface shape encodes tree structure 
introduce solution simple dimensional example binary subdivision interval 
subdivide interval add bump sub 
binary subdivision interval intervals 
repeat step recursively 
new sub interval add bump shape half size previous 
levels results segments top curve 
interpret curve side view bent strip render viewed bumps transform sequence ridges 
separate segments clearly visible bounded sharp discontinuities shading 
furthermore binary tree structure clearly visible depth valleys segments proportional distance segments tree 
generalize idea dimensional case 
suppose axis horizontal axis vertical axis points viewer 
subdivide rectangle direction add ridges aligned direction vice versa subdivision direction 
result generated summation orthogonal ridges gives cushion shape 
numerically simplest bump parabola rectangle treemap segment parabolic surface 
height surface ax cx dy 
initially surface flat coefficients zero 
consider new rectangle results subdivision axis 
ridge add bounds rectangle 
height ridge equal center 
parameter denotes height proportional width controls shape ridge 
ridge depend bump shape cross section subdivision axis done similarly ridge added 
value level tree gives selfsimilar surface 
decreasing value useful emphasize global structure tree 
convenient solution hi hi actual value level andf scale factor 

cushion treemap shading geometry simple model diffuse reflection suffices 
normal follows ax 
intensity ia max ia intensity ambient light intensity directional light source vector points light source 
results method shown cushion treemap file system cushion treemaps organization different values scale factor images resolution pixels 
compare treemap versions clear shading provides strong cue hierarchical structure substructures identified effortlessly 
scale factor continuous trade visualization global detailed information 

cushion treemaps organization algorithm ingredients supplied previous section complete algorithm derived 
full detail complexity show simplicity 
define data types 
directions encoded array indexing enable compact algorithm 
surface described linear quadratic coefficients direction 
surface coefficients andd equation correspond respectively 
constant coefficient ignored shading calculation 
tree record associated size pointer parent child sibling 
type dir bound min max degree rectangle array dir bound real surface array dir degree real record real size tree parent child tree pointer procedure ctm generates cushion treemap recursively lines original treemap algorithm 
main extension generation rectangles surface constructed 
surface bent direction tree leaf cushion rendered direction changed children visited 
height updated equation 
procedure ctm tree rectangle real dir surface var tree tc real parent nil min max child nil max min size tc child tc nil max min tc size ctm tc min max tc tc main input ctm consists root tree rendered initial rectangle settings simple driver routine procedure tree root integer width height var rectangle surface min max width min max height ctm root procedure takes care update coefficients parabolic surface equation procedure real var real ctm leaf node rendered called 
rectangle defined continuous space scan converted sampling centers pixels fall rectangle 
intensity pixel calculated equation 
straightforward implementation 
clarity optimization applied 
early outs rectangle cover center pixel priori calculation common subexpressions removal constant sub expressions loops incremental evaluation quadratic expression easily added 
extensions rendering lines separate rectangles color visualize property leaf 
fixed settings light source give results 
frontal light slightly offset right 
procedure rectangle surface const ia lx ly lz var integer ix iy real nx ny cosa iy trunc min trunc max ix trunc min trunc max nx ix ny iy cosa nx lx ny ly lz sqrt nx nx ny ny ix iy ia max cosa concludes presentation complete algorithm 
shows cushion treemaps easily implemented compact way 
interaction presentation hierarchical structures aspect effective visualization structures interaction equally important 
embedded cushion treemaps interactive system analysis visualization large tree structures 
cushion treemaps generated slightly extended version previous algorithm 
takes second sgi larger images trees 
interaction image copied screen annotation overlaid selected rectangles colored superimposing transparent rectangles 
various coloring options available show size level attributes leaves 
regeneration image done tree image parameters change 
options provided navigation selection 
user click rectangles properties leaf displayed separate window 
current node highlighted red outline 
arrow keys select siblings left right parent child 
selected elements continuously updated highlighted enables fast accurate navigation 
elements user defined size range selected elements selected matching name regular expressions 
user zoom sub trees zoom 
various applications file systems tries organization charts lexical parse trees software structures 
cushion treemaps supported multiple options navigation selection turned highly effective 
discussion simpler complex variants cushion treemap conceivable 
consider show version optimal sense variants improvements 
chosen geometric model shown shaded surface viewed 
direct model shading 
lead efficient algorithm normalization normal pixel 
instance value defined directly denote intensity 
simple model satisfactorily 
result rectangle filled spot 
sophisticated models control cumbersome compared intuitive model parameters 
geometrically shading leads automatically image easy interpret 
option view surface oblique angle surface 
views pay 
view expensive generate height provide direct cue structure view rectangles viewed simultaneously top view 
spend effort areas 
open questions anti aliasing provided handle rectangles fall pixels 
effectively multi dimensional attributes leaf 
graph information symbolic links file systems included 
combination representation types presentations pay 
presentation size improved perceptual characteristics taken account 
summarizing done area tree visualization 
new method visualize hierarchical information 
cushion treemaps inherit elegance standard treemaps add intuitive shading provide insight hierarchical structure 
features summarized follows efficient generation image typically takes second effective structure visualized effective compared standard treemaps 
obvious compare instance compact display area efficiently leaves displayed easily image resolution 
result scrolling opening closing nodes needed view structure easy implement complete algorithm fits page easy control appearance controlled intuitive parameters default values suffice 
cushion treemaps address important topics visualization 
wide applicability probably struck research 
klein wood 
drawing trees nicely tex electronic publishing 
card robertson mackinlay 
information visualizer information workspace 
proc 
acm chi conference human factors computing systems pages 
chimera wolman shneiderman 
evaluation interfaces browsing hierarchical tables contents 
technical report technical report car tr cs tr university maryland february 
eick 
visualization interaction techniques 
chi tutorial notes information visualization 
acm sigchi march 
foley van dam feiner hughes 
computer graphics principles practice nd edition 
addison wesley reading ma 
freeman adelson pentland 
shape shading analysis 
inv 

vis 
sci 
supp page 
association research vision spring 
furnas 
generalized fisheye views 
proc 
acm chi conference human factors computing systems pages 
johnson shneiderman 
treemaps spacefilling approach visualization hierarchical information structures 
proc 
nd international ieee visualization conference pages october 
knuth 
fundamental algorithms art computer programming volume 
addison wesley reading ma 
robertson mackinlay card 
cone trees animated visualizations hierarchical information 
proc 
acm chi conference human factors computing systems pages 
shneiderman 
tree visualization tree maps space filling approach 
acm transactions graphics september 
