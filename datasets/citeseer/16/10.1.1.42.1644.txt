properties task allocation problem de september parallel scientific computing simulation group faculty mathematics computer science physics astronomy university amsterdam kruislaan sj amsterdam netherlands phone fax mail wins uva nl www uva nl research pscs shows cross sections landscape task allocation problem 
shape clearly influenced variation fl 
contents application machine models correlation structure tap relaxation random walks random walks tap landscape step correlation function task allocation problem physics task allocation spin glasses graph bi partitioning task allocation hamiltonian tap phase transition experimental methods simulated annealing optima search search cost estimation measuring phase space structure experimental results statistical quantities correlation length experimental verification cost terms analytical measured phase transitions computational search cost summary discussion statistical quantities correlation length phase transitions computational search cost concluding remarks essential problem field parallel computing called task allocation problem tap set parallel communicating tasks parallel application parallel distributed memory machine find optimal allocation tasks parallel system 
quality allocation turn time application depends various components 
parallel application generally distinguish phases dominated communication components calculation components 
method minimise turn time optimise components simultaneously 
due fact terms regarded independent components strongly related 
task allocation tasks placed single processor obviously minimizes amount communication calculation maximal 
hand equal distribution set parallel tasks account communication term lead optimised calculation term communication degraded 
toss term frustration fact optimisation term conflicts analogy physical systems exhibit frustration 
intuitively clear increasing dominance communication calculation term reduces amount frustration system 
fundamental problems natural sciences deal complex systems 
complex system described population unique elements defined attributes interactions 
cases systems characterised disorder frustrated non linear interactions set elements constituting system 
known system ingredients contribute emergent unpredictable behaviour demonstrated systems 
disorder initial condition cellular automata interaction elements spin glasses 
combination frustration occurring due mutual conflicts certain properties systems analytically intractable 
examples properties asymptotic behaviour exact location optimal states 
characteristic causes corresponding optimisation problems np hard 
fact tap objective function minimization turnaround time contains competitive terms behaviour similar known complex systems expected 
order deepen knowledge tap intend explore characteristics terms phase space optima structure 
specifically degree frustration tap constitutes fundamental difficulty problem 
important distinguishing aspect tap presence transition sequential parallel optimal allocation 
example consider parallel machine topology consisting identical processors performance rate 
increasing peak performance continuously flop flop induce transition optimal parallel sequential allocation finite communication speed network 
analogy combinatorial optimisation problems exhibit frustration phase transitions expect phenomenon known critical slowing observed transition region 
difficulty finding optimal solutions peaks near transition region see 
general selection suited heuristic method finding sub optimal solutions requires knowledge shape phase space 
great care taken selecting optimisation method searching optimal solution tap known np hard problem 
study structure landscape tap necessary order identify effective optimisation methods 
furthermore sensitivity tap small set machine application specific parameters investigated 
restrict attention specific subset tap 
focus applications described static parallel task graphs 
addition assume static resource parallel machine homogeneous fully connected 
structured follows 
section introduces application machine representations model performance characteristics parallel static applications parallel machines 
section gives detailed study structure phase space landscape tap 
section dedicated geometrical phase transition occurring tap 
section experimental methods simulated annealing sa finding optima weinberger correlation phase space structure characterisation 
section experimental results discussed section 
concluding remarks directions section 
application machine models order facilitate study parallel applications introduce random graph representation model static communicating parallel tasks 
task assigned workload pair tasks vertices task graph connected probability fl fl 
message size assigned link communicating tasks 
restrict attention constant loads message sizes 
furthermore target processor topology assumed static parallel machine fully connected homogeneous 
communication channels processor pairs bi directional equal bandwidths 
processors homogeneous identical constant performance 
metric deciding quality task allocation turn execution time 
variety cost models graph representation literature 
example cost function known model actual execution time task allocation reasonable accuracy 
course simplification real situation message latencies network congestion neglected 
max max pq ffl task parallel task graph ffl set processors ffl set tasks connected task ffl set tasks residing processor ffl associated task terms flop ffl processor flop ffl number bytes sent due nodal connectivity host processor task task ffl pq bandwidth route processor bytes property specific function execution time determined slowest processor parallel machine 
cost function reasonable representation actual execution time 
value eq 
change task transfers involve slowest processor sensitive task rearrangements 
unsuitable local search optimisation techniques sa 
usage sa finding optimal solutions necessitates formulation alternative cost function see 
pq ffl total processor terms flop 
ffl pq pq pq pq ffl control parameter expressing communication calculation ratio 
incremental search allocation moving task requires complete re calculation cost eq 

hand eq 
locality property means incremental changes task allocation propagated cost having recalculate cost function 
difference calculated 
specifically useful optimisation algorithm applied incremental changes sa exploit direct consequence increments 
disadvantage fact correct model absolute cost 
objective minimise variance workload distribution simultaneous communication volume system opposed optimisation execution time slowest processor eq 

correlation structure tap configuration space tap consists possible task allocations tasks processor topology 
configuration encoded sequence length composed letters taken alphabet pg 
index sequence letter corresponds task id distance number positions sequences differ metric distance measure hamming distance 
hamming graph constructed connecting sequence pair 
number configurations distance arbitrary point total number configurations diameter configuration space easily gamma random walk landscape characterise structure 
landscapes self similar known corresponding random walk auto correlation function decaying exponential correlation length landscapes classified ar landscapes identified various fields 
bio physics combinatorial optimisation 
shown incremental search methods simulated annealing perform optimally landscapes show self similar structure 
derive expressions relaxation auto correlation functions random walks task allocation landscape 
relaxation functions indicate rate random walk hamming graph deviates starting point analogous relaxation diffusion processes physical systems 
auto correlation function quantify rugged ness landscape tap 
landscape constitutes hamming graph cost values assigned vertices eq 

expressions shown landscape ar correlation length linearly proportional number tasks relaxation random walks statistical properties random walks graph completely contained probabilities oe sd oe sd denotes probability random walk distance starting point steps 
general probability distribution fulfills recursion relations distance transitive graph 
oe sd gamma oe gamma gamma oe gamma gamma oe gamma oe oe sd coefficients gamma denote probability making step forward backward respectively walk distance starting point 
gamma equal 
tap graph obtain expressions gamma gamma np gamma np gamma np closed expression oe sd obtain insight relaxation behaviour random walks expected values distance moment squared distance second moment starting point steps walk delta doe sd delta oe sd eqs 
derive recursion relations delta delta delta gamma oe gamma gamma oe gamma gamma oe gamma gamma oe gamma gamma gamma gamma gamma oe gamma gamma gamma analogously delta gamma oe gamma gamma oe gamma gamma oe gamma gamma oe gamma gamma gamma gamma filling explicit expressions coefficients see eq 
obtain delta gamma delta gamma gamma delta gamma delta gamma gamma np gamma delta gamma gamma fixed points difference recursion equations unique correspond limit equivalently random sampling delta 
random gamma delta 
random gamma gamma np random configurations distance 
define corresponding relaxation functions follows random gamma 
random gamma delta delta initial final point random walk length rewriting arrive recursion relations gamma gamma gamma gamma np gamma gamma gamma gamma gamma clearly obtain immediately gamma gammas ln gamma arrive closed formula recursion relation rewritten relation gamma gamma gamma np gammap gamman gammap gamma gamma 
derive ba gamma gamma sum term recognise geometrical series gamma gamma gamma leads general expression gamma gamma gamma rewritten different relaxation times 
gamma gammas gamma gamma gammas obviously gamma gamma random walks tap landscape previous subsection restricted attention correlation structure distance sequences hamming graph 
section vertex graph cost value assigned function eq 

weinberger proposed autocorrelation function ae 
gamma gamma 
oe number random walks steps oe variance useful characteristic fitness landscape ir 
apart totally uncorrelated landscapes ae ffi simplest class consists nearly fractal ar landscapes 
time series isotropic gaussian markovian lead autocorrelation function form characterised ae ae gammad correlation length 
definition autocorrelation function rewritten ae gamma 
gamma oe eq 
auto correlation function ar landscape determined analysis step auto correlation 
configurations corresponding costs write ae gamma 
gamma oe gamma assume reasonable look small variation sufficiently small gamma gamma ln gamma equivalently oe 
gamma step correlation function task allocation problem previously stated consider task allocation problem processor topology fully connected homogeneous processor link speeds set unity 
furthermore task considered unity 
consider general class random task graphs 
pair tasks connected probability fl 
graph theoretical terms consider simple graphs maximally edge connects vertices tasks task connected 
tap phase space properties studied cost function 
mutate allocation number task arbitrary initial configuration derive formula change cost ffih gamma ffih wm gamma wn gamma task gets assigned new allocation number 
ffih 
associated task previous allocation number new wm execution time due processor equivalently processor calculation time values taken mutation 
term denotes change communication cost communication cost communication cost 
interested 
ffih 
algebra obtain including fact fraction gamma mutations contributes amount 
ffih gamma gamma 
gamma gamma wmr order obtain analytical expression need calculate quantities wmr 
continuing derivation step auto correlation expression oe derived 
oe 
gamma simplest terms see pq 
probability task gets assigned specific allocation number denoted consequently probability task doesn get allocation number equal gamma consider binomial distribution 
probability tasks get assigned specific processor number gamma gammak obviously expectation value nq variance gamma equal gamma 
leads directly expression gamma equal case tasks unit weight 
consider pq 
interested probability having tasks processor tasks processor sharing edges 
denote probability event occurs 
express probability product probabilities bayes theorem xjl probability look xjl product probability nodes processor nodes processor times probability restriction tasks processors share edges 
leads expression expected communication arbitrary processor pair pq gamma gammal gamma gamma gammal gammak lk fl gamma fl lk gammax gamma reduces pq 
gamma gammal gamma gamma gammal gammak pq gamma gammal fll gamma simplifying pq gammafl 
saw gamma pq fl gamma gives expression take account term counts times pq term counts gamma times 
gamma fl gamma gamma expression derived 
qr 
qr 
term rewritten separate sums 
distinguish possibilities consider case assuming tasks processor 
gamma gamma binomial distribution kurtosis th moment 
gamma nq gamma gamma gamma nq gamma 
gamma 
furthermore skewness rd moment 
gamma nq gamma gamma 
gamma 

gamma find nq nq nq gamma 
gamma gamma gamma gamma np gamma np delta consider 

analogous manner arrives gamma gamma gamma gamma np delta case interference term qr consider cases case get qr fl gamma gamma delta gamma second case qr fl gamma gamma gamma gamma np delta left qr st terms 
case distinguish contributing cases 
leading terms form qr st 
leading terms form qr qt 
leading terms form qr qr analogous method expressions derived 
qr qr fl gamma gamma fl gamma fl fl gamma fl fl np delta qr qt fl gamma gamma delta gamma qr st fl gamma gamma gamma delta having available essential terms write full formula account proper pre factors gamma gamma gamma qr gamma qr gamma qr qr gamma gamma qr qt gamma gamma gamma qr st filling terms simplifying expression expression variance oe gamma fl gamma gamma fl gamma gamma note appearance fl terms eq 
predict variance ensemble random graphs fixed fl 
due fact deg deg states squared sum individual vertex degrees generally equal sum squared vertex degrees 
order experimentally verify result calculate variance multiple graph instances 
fl term expression average cost eq 
implies valid specific random graph instance 
turn 
ffih 
express follows 
ffih gamma 
gamma lr 
gamma kl averaging procedure consider ffih cases processor tasks processor transfer tasks 
expressions individual terms derived fl gamma lr fl gamma gamma gamma kl gamma gamma leads 
ffih gamma fl gamma gamma step auto correlation ae gamma 
gamma oe gamma fl gamma fl applying eq find directly fl gamma see fixed fl linearly proportional number tasks note assumed derivation ae defined 
important observe dependencies fl eq 
implies variance fl due oe get eliminated 
strictly speaking means derived formula correctly predict correlation structure landscape single task graph instances 
term obviously eq 
corresponds correlation time derived section 
section shall see correlation length experimentally 
physics task allocation shown hamiltonian energy function spin glass similar cost function known np complete problem graph bi partitioning 
cost function graph bi partitioning problem considered special instance tap 
analogy spin glasses graph bi partitioning tap hamiltonian formulated 
application specific parameters distinguish different phases parallel allocation phase spectrum optimal task allocations 
location separation phases function aforementioned parameters determined mean field argument 
location gives rough estimate transition region 
search methods shown behave certain critical parameters instance combinatorial search problems critical slowing 
speculate existence anomaly observable sudden increase search cost spectrum tap instances 
spin glasses graph bi partitioning area condensed matter physics canonical model describe properties magnet ising model 
dimensions regular square lattice atomic magnets may spin spin 
formally variables individual magnet take values gamma 
hamiltonian describing magnetic energy specific configuration external magnetic field gamma ik ising spin model interaction strength ik constant 
ik independent negative non negative random variables obtain spin glass hamiltonian 
spin glass model exhibits frustration opposed square lattice ising model 
specific characteristic ising system causes ground states ising model spins spins highly degenerate ground states spin glass 
ising model pair aligned spins contributes amount energy true spin glass 
alignment neighbouring spin result unfavourable situation neighbour 
known np complete problem graph bi partitioning cost function equivalent hamiltonian spin glass model 
consider graph set vertices edges 
configuration equal partition vertices 
expressed constraint vertex partition gamma 
edges encoded connectivity matrix ik ik connected ik 
hamiltonian configuration expressed follows ik gamma eq 
equal spin glass hamiltonian eq 
constant value ik 
constraint introduces frustration cost minimal vertices partition 
words constraint simple ising ferro magnet 
detailed review spin glass theory graph bi partitioning refer book 
task allocation hamiltonian analogy models rewrite task allocation cost function follows gamma fi ik gamma ffi fi ffi ae pg ik communication time processors total calculation time processor note introduced parameter fi hamiltonian 
fi parameter varied range order tune amount frustration calculation communication terms 
variations fi interpreted variation application ratio machine processor speed bandwidth ratio 
connection probability fl random graph considered dual parameter fi 
fl increased range equivalent augmenting average communication load realised decreasing fi 
tap phase transition task allocation problem np hard extremes fi fi easy solve 
fi relevant term hamiltonian attracting communication term cause connected tasks allocated processor 
extreme number optima exactly corresponding lowest energy state value zero 
situation corresponds parallel machine infinitely fast processors 
fi repulsive workload term force variance workload distribution minimised 
results equal partitioning total workload available processors 
easily shown total number optima case equals 

assumed tasks unit weight integer 
corresponding optimal cost value obviously case fi optima maximally distant terms defined distance metric see section 
ary inversion operation analogous spin flipping spin glass theory arbitrary permutations applied optimal configuration leave value hamiltonian invariant 
note case tap landscape highly symmetrical 
entire landscape consists identical sub landscapes 
sub landscape optimum automatically global optimum 
case fi optima relatively close 
distinguish types operations leave value hamiltonian invariant 
type trivial permutation tasks allocated processor corresponds point phase space 
second type may change point phase space 
examples operations rotation sequence permutation arbitrary tasks 
perspective parallel computing ideal processors engaged computation 
employment available processors correspond optimal solution due communication overhead 
machine application specific parameters summarised ratio communication calculation time determine optimal value 
observe transition sequential parallel allocation fi increased equivalently fl decreased 
order quantify transition define order parameter measure degree parallelism optimal allocation 
assume tasks connection weights unity define order parameter quantifying parallelism optimal allocation gamma 
gamma gamma time spent calculation gamma maximal possible variance eq 
takes value case optimal parallelism fi fl value fi fl case sequential allocation 
number processors beta beta beta vs increasing fi fl eq 
expresses average cost derived section calculate average cost increase decrease processors allocation 
note fi included eq 

expect transition sequential parallel allocation approximately occur values fi fl average cost change monotonically decreasing function monotonically increasing function fin gamma gamma fi fl gamma gamma eq 
predict values fl fi transition occur approximately 
fig 
example transition depicted task graph fl 
transition point predicted approximately occur values fi fl keeping variables fixed additional constraint 
fi fl fl fl fi gamma fi interpret fi fl critical values fi fl analogy critical temperature thermal phase transitions percolation threshold percolation problems 
note fig 
point average value hamiltonian independent fi approximately 
due fact eq 
contains fi independent terms fi dependent terms eliminated certain values fixed fl 
experimental methods section experimental methods study introduced 
firstly sa find sub optimal solutions tap 
secondly method quan tify computational search cost 
thirdly briefly discuss experimental method determine correlation length phase space tap instance 
simulated annealing optima search simulated physical systems configurations thermal equilibrium sampled metropolis algorithm 
determination location critical temperature established sampling fixed temperatures temperature range 
case task allocation interested finding equilibria optimal configurations 
purpose exhaustive search correct method finding global optima 
unfortunately inefficient worst case requires exponentially large search times 
effective search method selected 
previous applied parallel cellular genetic algorithm find optimal solutions tap parallel finite element application 
possibility sa 
usefulness sa tap depends shape phase space 
section argued landscape self similar structure indication performance local heuristic search techniques 
sa superior ga efficiency quality solution 
sa applied find sub optimal solutions 
search cost estimation comparable np hard problems computational cost determining optimal solutions shows dependence problem specific parameters 
example case graph colouring observed difficulty determining graph coloured increases abruptly average connectivity graph gradually increased critical value 
example system computational cost affected parameters physical system thermal phase transition occurs ising model 
difficulty finding equilibrium value increases critical point approached theoretically thermodynamic limit infinite critical point 
generally referred critical slowing 
analogy behaviour expect task allocation problem comparable phenomena critical region fi fl domain 
fi extremes optima known advance 
difficulty find optima reduced order unity 
calculation communication term hamiltonian comparable magnitude say system critical frustrated area 
moving away critical region term small noise 
interested method obtaining estimate computational cost difficulty finding optima problem parameters 
order quantify search cost measure number local optima independent steepest descent runs get stuck 
specific search space considered simple contains relatively small number local optima 
hand number local optima large corresponding search space classified difficult 
distinction local optima cost corresponding task allocations 
allocations local optima called distinct experiments number steepest descent runs taken number tasks 
measuring phase space structure structure tap phase space characterized auto correlation function random walk 
ae gamma oe distance configurations introduced section 
value task allocation phase space directly determined ae 
experimental results section experimental results regarding statistical quantities correlation length phase transition search cost tap 
number experiments conducted verify analytical results derived section 
established tap landscape ar supports argument sa subsequent experiments finding optimal allocations 
occurrence phase transition parameter values observed corresponding experiments 
complementary phase transition divergence computational cost shown manifest 
statistical quantities correlation length example travelling salesman problem tsp statistical quantities landscape instances obtained random walk averaging 
possible tap 
connectivity extrema fl fl random walk self averaging means ensemble average obtained random walk 
values fl instance random graph differs connectivity implies statistical quantities estimated averaging multiple instances random graphs 
number tasks different average connectivity different fl determination auto correlation functions obtained specific instance tap fixed fl derived formula variance predict variance single tap instance due presence fl terms expression oe see eq 

terms formulae 
eq 

ffih 
eq 

figures error bars displayed applicable 
experimental verification cost terms section experimentally verify derived expressions eqs 
expected cost expected squared cost 
furthermore equation 
ffih 
eq 
experimentally number processors different average connectivity different fl verified 
carried experiments variable number processors connectivity fl number tasks 
variable parameter parameters kept fixed fl 
results shown figs 

number processors different number tasks different number tasks 
ffih different average connectivity 
ffih different fl analytical measured section correlation length experimentally determined 
experiments random walks tap landscape approximate lengths steps generated 
subsequently autocorrelation functions values encountered calculated 
fig 
measured predicted correlation functions displayed 
experiment tasks processors connection probability 
second experiment tap instance non zero connection probability fl 
number processors 
ffih different exp exp analytical experimental values autocorrelation function fl fl 
phase transitions computational search cost beta transition gamma gamma phase transition fixed fl increasing fi 
vertical solid lines indicates location transition predicted eq 
gamma transition beta beta phase transition fi 
vertical solid line indicates location transition predicted eq 
experiments performed demonstrate existence phase transition location transition predicted eq 
checked 
experiments depicted data corresponds carried 
fig 
fi varied range fl fixed different values 
fig 
dual experiment performed fl varied range fi fixed value 
results comparable arbitrary parameter values 
mean field transition points plotted vertical lines 
figs 
divergence search cost near transition point observed 
method described section quantify cost 
fig 
fl fixed 
increase number local optima location phase transition 
example shown fig 
fi fixed 
computational cost increases neighbourhood phase transition 
summary discussion analogy graph bi partitioning spin glass theory constructed cost function expresses task allocation quality hamiltonian form 
argued tap beta cost order computation cost diverges phase transition fl fi varied beta cost order example fi fl varied 
example called frustrated systems expected show typical complex behaviour 
competition calculation communication terms hamiltonian source frustration 
order facilitate study frustration tap control parameter fi introduced hamiltonian 
fi parameter considered dual parameter degree connectivity tasks task graph 
case random task graphs fl connection probability vertices tasks 
fi parameter important interpretation terms high performance computing terminology 
expresses application calculation communication ratio machine processor speed bandwidth ratio 
order select suitable method find optima aspects tap phase space investigated 
firstly basic characteristics size tap phase space diameter 
secondly concept ar landscapes discussed performance sa landscapes exhibit structure 
derived correlation length random walk trough tap phase space 
derived analytical expressions relaxation functions random walks tap landscape 
shown correlation length phase space corresponds relaxation times expression eq 

secondly formal expression variance cost squared difference cost subsequent allocations derived 
number global optima extreme values fi hamiltonian discussed invariance properties hamiltonian cases 
order parameter introduced quantify degree parallelism 
expression average value hamiltonian cost rough location transition region optimal solution changes sequential parallel allocation 
observation comparable systems show divergent behaviour computational cost associated finding optimal values critical region near phase transition 
argued transition sequential parallel allocation induced varying fi fl expected give rise analogous critical behaviour search cost tap 
statistical quantities correlation length figs 
clear analytical formulae predict corresponding average quantities high degree accuracy 
specific choice parameters influence accuracy experiments 
words specific problem instances data shown indicative correctness derived expressions 
expression variance ensemble random graphs fixed value fl 
predict correlation length autocorrelation function random graph instance 
derive exact expression step autocorrelation function 
correlation time eq 
corresponds correlation length experimentally 
empirically shown variance random graph instance approximately described equation gamma fl gamma gamma gamma eq 
correctly predicts variance single random graph instance data shown 
equation eq 
find correct prediction ae gamma corresponding correlation length indicates tap landscape smooth comparison graph bi partitioning 
correlation length strongly related chosen perturbation mechanism 
increasing correlation length indicates phase space smoother easier search 
fact search process benefits larger correlation lengths established 
phase transitions computational search cost shown figs 
approximate location phase transition induced variation fi fl predicted simple mean field argument practical consequence observation real application machine parameters provide estimate usefulness parallel computation problem hand 
figs 
shown presence phase transition accompanied anomalous behaviour search cost 
behaviour analogous observed comparable combinatorial optimisation problems argued 
concluding remarks sequential allocation allocation order specific semi parallel different allocation regimes task allocation problem varying fi shown landscape tap classified ar landscape 
fact correlation length defined cost function neighbourhood structure tap easier problem solve local search methods graph bi partitioning 
shown landscape spin glasses graph bi partitioning correlation length landscapes smooth tap 
results clearly show task allocation problem exhibits variety interesting properties 
specific parameter sets task allocation problem exists small parameter range 
outside range problem trivial 
problem complex range calculation communication terms comparable magnitude 
location complex region marked presence transition sequential parallel allocation 
different allocation regimes summarised fig 

sequential allocation region contains optima tasks allocated processor 
semi parallel allocation region correspond situation 
available processors necessarily due high competition communication cost 
locality task graph consequences allocation sequence 
tasks connected desire grouped processor 
region parallel allocation corresponds mode inter task connectivity insignificant 
may due high speed communication network weakly connected task graph 
case optimal allocations realized scattered decomposition 
near intend investigate effects introducing locality task graph processor topology 
study critical behaviour detail means finite size scaling experiments 
furthermore interest goes thorough understanding task allocation dynamic heterogeneous parallel applications machines cluster computing 
bernstein rodeh 
complexity scheduling problems parallel pipelined machines 
ieee transactions computers 
cheeseman kanefsky andw taylor 
computational complexity phase transitions 
workshop physics computation 
ieee computer society 
de reeve 
load balancing redundant decomposition mapping 
editors high performance computing networking volume lecture notes computer science pages 
fox johnson otto salmon walker 
solving problems concurrent processors volume 
prentice hall 
hamming 
error detecting error correcting codes 
bell syst 
tech 

hogg 
statistical mechanics combinatorial search 
workshop physics computation dallas texas 
de 
load balancing data parallel programs distributed memory computers 
parallel computing 
kirkpatrick gelatt jr vecchi 
optimization simulated annealing 
science may 
macready kauffman 
criticality parallelism combinatorial optimization 
science 
mansour fox 
hybrid genetic algorithm task allocation 
proceedings th international genetic pages july 
mansour fox 
allocating data multicomputer nodes physical optimization algorithms loosely synchronous computations 
concurrency practice experience 
metropolis rosenbluth rosenbluth teller teller 
equation state calculations fast computing machines 
journ 
chemical physics 
parisi 
spin glass theory 
world scientific 

dynamic load balancing system parallel cluster computing 
generation computer systems 
de 
parallel cellular genetic algorithm finite element simulation 
accepted parallel problem solving nature ppsn 

complexity due disorder frustration 
jen editor lectures complex systems volume ii santa fe institute studies sciences complexity pages 
addison wesley 

dynamic complex systems dcs new approach parallel computing computational physics 
technical report tr cs university amsterdam 
sorkin 
simulated annealing fractals theoretical analysis relevance combinatorial optimisation 
dally editor advanced research vlsi proceedings th mit conference pages 
stadler 
correlation structure landscape graph bipartitioning problem 
phys 
math 
gen 
stadler 
landscape traveling salesman problem 
physics 

weinberger 
correlated uncorrelated fitness landscapes tell difference 
biol 
cybern 
williams hogg 
deep structure locate hard problems 
proc 
th nat 
conf 
artificial intelligence pages san jose california 
williams hogg 
phase transitions coarse grained search 
workshop physics computation dallas texas 

