new monte carlo method solving light transport problem inspired metropolis sampling method computational physics 
render image generate sequence light transport paths randomly mutating single current path adding new vertex path 
mutation accepted rejected carefully chosen probability ensure paths sampled contribution ideal image 
estimate image sampling paths recording locations image plane 
algorithm unbiased handles general geometric scattering models uses little storage orders magnitude efficient previous unbiased approaches 
performs especially problems usually considered difficult involving bright indirect light small geometric holes glossy surfaces 
furthermore competitive previous unbiased algorithms relatively simple scenes 
key advantage metropolis approach path space explored locally favoring mutations small changes current path 
consequences 
average cost sample small typically rays 
second important path nearby paths explored amortizing expense finding paths samples 
third mutation set easily extended 
constructing mutations preserve certain properties path light source changing exploit various kinds coherence scene 
possible handle difficult lighting problems efficiently designing specialized mutation way 
cr categories computer graphics dimensional graphics realism computer graphics picture image generation numerical analysis integral equations equations 
keywords global illumination lighting simulation radiative heat transfer physically rendering monte carlo integration variance reduction metropolis hastings algorithm markov chain monte carlo mcmc methods mail cs stanford edu guibas cs stanford edu metropolis light transport eric leonidas guibas computer science department stanford university great deal graphics solving light transport problem efficiently 
current methods optimized fairly narrow class input scenes 
example algorithms require huge increase computer resources bright indirect lighting surfaces non diffuse reflectors 
light transport algorithms widely important find techniques fragile 
rendering algorithms run acceptable time bounds real models yielding images physically plausible visually pleasing 
support complex geometry materials illumination essential components real life environments 
monte carlo methods attractive starting point search algorithms generality simplicity 
especially appealing unbiased algorithms compute correct answer average 
algorithms error solution guaranteed show random variations samples image noise 
error estimated simply computing sample variance 
hand methods graphics biased 
claims correctness results algorithms bound amount bias 
general difficult estimated simply drawing samples 
biased algorithms may produce results noisy incorrect 
error noticeable visually form discontinuities excessive blurring objectionable surface shading 
graphics unbiased monte carlo light transport algorithm proposed kajiya building earlier cook whitted 
refinements suggested see 
improvements adapted neutron transport radiative heat transfer literatures long history solving similar problems 
surprisingly difficult design light transport algorithms general efficient artifact free 
monte carlo viewpoint algorithm efficiently sample transport paths light sources lens 
problem environments paths contribute significantly image strike surfaces low reflectivity go solid objects 
example imagine lit room dark room containing camera door slightly 
naive path tracing inefficient difficulty generating paths regard certain ray tracing problems shown undecidable solved turing machine 
expect light transport algorithm perform badly geometry materials input scene approach provably difficult configuration 
go doorway 
similar problems occur glossy surfaces strong indirect lighting techniques proposed sample difficult paths efficiently 
bidirectional path tracing developed independently willems guibas 
methods generate subpath starting light source starting lens consider paths obtained joining prefix subpath suffix 
leads family different importance sampling techniques paths combined minimize variance 
effective solution certain kinds indirect lighting problems 
idea build approximate representation directional sampling basic path tracing algorithm 
done particle tracing adaptively recording radiance information spatial subdivision 
moderate variance reductions reported problems including inadequate directional resolution handle concentrated indirect lighting substantial space requirements 
similar ideas applied particle tracing 
propose new algorithm importance sampling space paths call metropolis light transport mlt 
algorithm samples paths contribution ideal image means random walk path space 
section give highlevel overview mlt describe components detail 
section summarizes classical metropolis sampling algorithm developed computational physics 
section describes path integral formulation light transport methods 
section shows combine ideas yield effective light transport algorithm 
results section followed suggested extensions section 
knowledge application metropolis method transport problems kind 
overview mlt algorithm image sample paths light sources lens 
path sequence xk points scene surfaces length path number edges 
numbering vertices path follows direction light flow 
show define function paths measure power flux flows light sources image plane set paths image contribution function proportional contribution image light flowing strategy sample paths probability proportional record distribution paths image plane 
generate sequence paths xn obtained random mutation path xi 
mutations desired form typically involve adding deleting replacing small number vertices current path 
mutation chance rejected depending relative contributions old new paths 
example new path passes wall mutation rejected setting xi xi 
metropolis framework gives recipe determining acceptance probability mutation limit sampled paths xi distributed stationary distribution random walk 
path sampled update current image stored memory dimensional array pixel values 
find image location corresponding path sample xi update values pixels filter support contains 
samples weighted equally light dark regions final image caused differences number samples recorded 
mlt algorithm summarized 
sections describe detail 
image array zeros mutate random image return image metropolis sampling algorithm metropolis rosenbluth rosenbluth teller teller introduced algorithm handling difficult sampling problems computational physics 
originally predict material properties liquids applied areas physics chemistry 
method works follows discussion 
state space non negative function ir initial state 
goal generate random walk xi eventually distributed proportionally matter state start 
sampling methods metropolis algorithm require integrate 
sample xi obtained making random change xi case path mutations 
type random walk xi depends xi chain 
denote probability density going state currently state function satisfies condition 
stationary distribution 
xi random variable distribution pi determined pi pi pi 
mild conditions discussed section pi converge unique distribution stationary distribution 
depend initial state 
give simple example idea consider state space consisting vertices arranged grid 
vertex connected neighbors edges edges wrap left right top bottom necessary topology torus 
transition consists randomly moving current vertex neighboring vertices probability staying vertex suppose start arbitrary vertex andp 
transition distributed equal probability neighbors 
similarly randomly distributed vertices equal probability 
process continued eventually pi converges fixed probability distribution necessarily satisfies example uniform distribution detailed balance 
typical physical system transition function determined physical laws governing system 
arbitrary initial state system evolves equilibrium transitions governed metropolis algorithm works opposite direction 
idea invent construct transition function resulting stationary distribution proportional converge quickly possible 
technique simple intuitive physical interpretation called detailed balance 
xi xi follows 
choose tentative sample way desired 
represented tentative transition function wheret gives probability density xi tentative sample accepted rejected acceptance probability defined 
xi probability xi xi see set suppose reached equilibrium pi proportional wemust define equilibrium maintained 
consider density transitions states transition density proportional similar statement holds transition density maintain equilibrium sufficient densities equal condition known detailed balance 
verify pi condition holds equilibrium preserved pi pi pi pi acceptance probability 
recall chosen arbitrarily 
equation condition ratio 
order reach equilibrium quickly possible best strategy large possible achieved letting min 
rule transitions direction accepted direction rejected expected number moves way 
comparison genetic algorithms 
metropolis method differs genetic algorithms ways 
different purposes genetic algorithms solve optimization problems metropolis method solves sampling problems search optimum value 
genetic algorithms population individuals metropolis stores single current state 
genetic algorithms freedom choosing allowable mutations need compute conditional probability actions 
beyer lange applied genetic algorithms problem integrating radiance hemisphere 
start population rays directional samples evolved improve distribution respect incident radiance particular surface point 
methods lead feasible light transport algorithm 
path integral formulation light transport light transport problem written integral equation solve equilibrium radiance function written pure integration problem domain transport paths 
mlt algorithm formulation 
start reviewing light transport measurement equations show transform integral paths 
light transport equation 
assume geometric optics model light emitted scattered absorbed surfaces travels straight lines surfaces perfectly incoherent 
conditions light transport equation le fs da 
union scene surfaces area measure le emitted radiance leaving direction equilibrium radiance function fs bidirectional scattering distribution function 
notation symbolizes direction light flow points denotes symmetry argument pair 
function represents throughput differential beam da da cos cos represent angles segment surface normals respectively mutually visible zero 
note different formulations bidirectional path tracing proposed measure paths global reflectance distribution function 
path measure approach defines notion probabilities paths required combining multiple estimators 
technically equations section deal spectral radiance apply wavelength separately 
redundancy representation lie direction measurement equation 
light transport algorithms estimate finite number measurements equilibrium radiance consider algorithms compute image directly measurements consist pixel values mm number pixels image 
measurement form mj da da weight indicates light arriving direction contributes value measurement 
real sensors called flux units graphics called importance function 
path integral formulation 
recursively expanding transport equation write measurements form mj le da da le fs da da da 
goal write expression form mj fj handle pure integration problem 
set paths form xk define measure paths length xk da da xk product measure 
union define measure 
integrand fj defined extracting appropriate term expansion see 
example fj le 
call fj measurement contribution function 
tricky just expanded rearranged transport equations 
significant aspect removed sum different path lengths replaced single integral measure space paths 
function zero 
non zero lies virtual camera lens ray mapped lens small region image plane corresponding filter support pixel discussion may 
measure paths similar 
case infinite length paths excluded 
easy verify fact measure directly axioms 
measurement contribution function fj product factors shown path length 
metropolis light transport complete mlt algorithm outlined section tasks 
formulate light transport problem fits metropolis framework 
second show avoid start bias affects metropolis applications 
importantly design suitable set mutations paths metropolis method efficiently 
reduction metropolis framework show metropolis method adapted estimate pixel values mj simultaneously bias 
observe integrand fj form fj wj wj represents filter function pixel andf represents factors fj pixels 
physical terms radiant power received image area image plane set paths 
note wj depends edge xk xk path call lens edge 
image computed sampling paths xi distribution identity wj mj xi xi xi normalization constant estimate pixel mj xi equation evaluated efficiently pixels path contributes pixel values 
idea requires evaluation ability sample distribution proportional hard problems 
second part metropolis algorithm help samples xi desired distribution limit metropolis applications handled starting fixed initial state discarding samples random walk approximately converged equilibrium distribution 
difficult know large 
small samples strongly influenced choice bias results called start bias 
assume paths contribute pixel value waste samples 
eliminating start bias 
show mlt algorithm initialized avoid start bias 
idea start walk random initial state whichis sampled convenient path distribution bidirectional path tracing purpose 
compensate fact desired distribution sample assigned weight 
sample estimate pixel wj 
quantities computable known 
additional samples xn generated mutating metropolis algorithm target density 
xi different distribution pi approaches toavoid bias sufficient assign samples weight wi original sample estimate pixel mj wi wj xi 
show unbiased recall initial state chosen randomly average choices computing expected values 
consider group starting paths obtained sampling times 
obviously starting group equilibrium 
general leads exactly distribution weight starting paths expect initial conditions unbiased 
see appendix proof 
technique removing start bias specific light transport 
requires existence alternative sampling method metropolis applications easy obtain 
initialization 
practice initializing mlt algorithm single sample 
generate path bidirectional path tracing quite path goes wall 
subsequent samples weight wi lead completely black final image 
conversely initial weight runs may larger expected 
algorithm unbiased statement useful applied average result runs 
obvious solution run copies algorithm parallel accumulate samples image 
strategy implemented sample moderately large number paths corresponding weights resample obtain smaller number equally weighted paths chosen equal spacing cumulative weight distribution 
independent seeds metropolis phase algorithm 
value determined indirectly generating fixed number eye light subpaths pairs considering ways link vertices pair 
note necessary save paths resampling step regenerated restarting random number generator seed 
reasonable choose single metropolis seed 
case purpose phase estimate mean value determines absolute image brightness 
image desired precisely represents total power falling image region film plane 
constant scale factor small 
main reasons retaining seed implement convergence tests see lens subpath mutations section 
effectively separated image computation subproblems 
initialization phase estimates image brightness metropolis phase determines relative pixel intensities image 
effort spent phase decided independently 
practice initialization phase negligible part total computation time bidirectional samples typically constitute sample pixel 
convergence tests 
reason run copies algorithm parallel facilitates convergence testing 
apply usual variance tests samples generated single run metropolis algorithm consecutive samples highly correlated 
test convergence metropolis phase runs independent seed paths contributions image recorded separately form separate images 
done small representative fraction pixels expensive maintain copies large image 
sample variance test pixels computed periodically results prespecified bounds 
spectral sampling 
discussion far limited monochrome images modifications color straightforward 
represent light sources point sampled spectra easy representation 
path compute energy delivered lens sampled wavelengths 
resulting spectrum converted color value rgb accumulated current image 
image contribution function redefined compute luminance corresponding path spectrum 
implies path samples distributed luminance ideal image luminance filtered image sample irrespective color 
effectively color component sampled estimator form proportional luminance 
human eye substantially sensitive luminance differences color variations choice helps minimize apparent noise 
designing mutation strategy main disadvantage metropolis method consecutive samples correlated leads higher variance get independent samples 
happen proposed mutations path small mutations rejected 
problem minimized choosing suitable set path mutations 
consider properties mutations minimize error final image 
note tests number mutations image specified manually explicit control computation time 
way handle color separate run wavelength 
inefficient get information path leads unnecessary color noise 
additions deletions single vertex allowed paths mutate side barrier 
high acceptance probability 
acceptance probability small average long path sequences form rejections 
leads samples point image plane appears noise 
large changes path 
acceptance probability mutations high samples highly correlated proposed path mutations small 
important propose mutations substantial changes current path increasing path length replacing specular bounce diffuse 
ergodicity 
allowable mutations restricted possible random walk get stuck subregion path space integral 
see happen consider suppose allow mutations add delete single vertex 
case way path mutate side barrier part path space 
technically want ensure random walk converges ergodic state 
means matter chosen converges stationary distribution sufficient ensure pair states andf 
implementation true see section 
changes image location 
minimize correlation sample locations image plane desirable mutations change lens edge xk xk 
mutations portions path provide information path distribution image plane interested 
stratification 
potential weakness metropolis approach random distribution samples image plane 
commonly known balls bins effect randomly throw balls bins expect ball bin 
bins may empty fullest bin contain log balls 
image distribution produces noise 
kinds mutations effect difficult avoid 
worthwhile consider mutations form stratification possible 
low cost 
desirable mutations inexpensive 
generally measured number rays cast costs relatively small 
mutation strategies consider specific mutation strategies bidirectional mutations perturbations subpath mutations 
strategies designed satisfy different subsets goals mentioned implementation uses mixture discuss section 
note metropolis framework allows greater freedom standard monte carlo algorithms designing sampling strategies 
need compute conditional probability mutation words mutation strategy allowed depend current path 
bidirectional mutations bidirectional mutations foundation mlt algorithm 
responsible making large changes path modifying length 
basic idea simple choose subpath current path replace different subpath 
divide steps 
subpath delete chosen 
current path xk assign probability pd tothe deletion subpath xs xt 
subpath endpoints included xs xt consists edges vertices indices satisfying 
implementation pd product factors 
factor pd depends subpath length purpose favor deletion short subpaths 
expensive replace yield mutations accepted smaller change current path 
purpose second factor pd avoid mutations low acceptance probabilities described section 
determine deleted subpath distribution pd normalized sampled 
point split possibly empty pieces xs xt xk 
complete mutation choose number vertices added side 
steps choose new subpath length la 
desirable old new subpath lengths similar tend increase acceptance probability represents smaller change path 
choose la discrete distribution pa assigns high probability keeping total path length 
choose specific values subject la discrete distribution pa assigns equal probability candidate value convenience pa denote product pa pa 
sample new vertices add time appropriate subpath 
involves sampling direction current subpath endpoint convenient approximation sampling exact difficult followed casting ray find surface intersected 
initially empty subpath handled choosing random point light source lens appropriate 
join new subpaths testing visibility endpoints 
path obstructed mutation immediately rejected 
happens ray casting operations failed intersect surface 
notice non zero probability throwing away entire path generating new scratch 
automatically ensures ergodicity condition section algorithm get stuck small subregion path space 
parameter values 
values provided reasonable results test cases 
probability pd ld deleting subpath length ld pd pd ld ld 
probability pa la adding subpath length la ld pa ld pa ld remaining probability assigned allowable subpath lengths 
evaluation acceptance probability 
observe written ratio 
form similar sample value computed standard monte carlo algorithms simply replaced absolute probability conditional probability 
specifically product discrete probability pd deleting subpath xs xt probability density generating new vertices calculate take account ways new vertices split subpaths generated xs xt 
vertices generated particular choice probability take account ways going state note unchanged portions contribute calculation 
convenient ignore factors andf shared paths change result 
example 
path suppose random mutation step deleted edge 
itis replaced new vertex casting ray sothat new path 
corresponds random choices ps probability density sampling direction measured respect projected solid angle 
probability density sampling measured respect surface area ps 
information necessary compute 
numerator fs fs fs factors shared andr omitted dropped arrow notation brevity 
denominator pa ps pd pa ps similar way find fs fs pd pa pd pa refer implement calculation general convenient define functions fs fs fs ps terms functions 
formulation extends easily subpaths arbitrary length evaluated efficiently precomputing edge 
form easy handle specular ratio defined 
density respect ordinary solid angle ps cos ois angle surface normal 
lens perturbation perturbation lens edge perturbed regenerating side call lens perturbations perturbations 
perturbations lighting situations bidirectional mutations rejected 
happens small regions path space paths contribute average 
caused difficult visibility small hole concave corners surfaces meet form singularity integrand 
problem bidirectional mutations relatively large usually attempt mutate path outside high contribution region 
way increase acceptance probability smaller mutations 
principle nearby paths similar contributions image acceptance probability high 
having rejections path explore nearby paths high contribution region 
solution choose subpath current path move vertices slightly 
call type mutation perturbation 
idea applied arbitrary subpaths main interest perturbations include lens edge xk xk changes help prevent long sample sequences image point 
implemented specific kinds perturbations change lens edge termed lens perturbations perturbations see 
described 
lens perturbations 
delete subpath xt xk form ds heckbert regular expression notation specular non specular lens light vertices respectively 
called lens subpath consists edges vertices 
note xt specular perturbation xt result path replace lens subpath perturb old image location moving random distance random direction 
angle chosen uniformly exponentially distributed values exp ln uniformly distributed 
cast ray new image location extend subpath additional specular bounces length original 
mode scattering specular bounce preserved specular reflection transmission making new random choices 
allows efficiently sample rare combinations events specular reflection surface light transmitted 
calculation similar bidirectional case 
main difference method directional sampling distribution 
perturbation moves vertex specular material mutation immediately rejected 
chain perturbation sample pool water 
lens edge perturbed generate pool bottom 
direction original point light source perturbed ray cast direction 
perturbations 
lens perturbations possible situations notable example occurs computing 
paths form ls de unacceptable lens perturbations 
way perturb paths suffix xt xk form de 
generate new subpath starting xt 
direction segment xt xt perturbed amount exponentially distributed uniform 
technique similar lens perturbations 
multi chain perturbations 
handle paths suffix form ds ds de seen specular surface see 
handled perturbing path specular chain 
non specular vertex choose new direction perturbing corresponding direction original subpath 
parameter values 
lens perturbations image resolution guide useful range values 
pixels chosen perturbation region image area 
multi chain perturbations radians radians 
algorithm particularly sensitive values 
lens subpath mutations describe lens subpath mutations goal stratify samples image plane reduce cost sampling re subpaths 
mutation consists deleting lens subpath current path replacing new 
lens subpath form 
lens subpaths stratified image plane pixel receives number proposed lens subpath mutations 
briefly describe 
initialize algorithm independent seed paths section mutated rotating sequence 
times store current lens subpath xe 
eye subpath mutation consists deleting lens subpath current path replacing xe 
current subpath xe re fixed number times ne new generated 
chose ne prevent lens subpath multiple times path 
generate xe cast ray point image plane follow zero specular bounces obtain non specular vertex 
stratify samples material specular non specular components randomly choose 
image plane maintain tally number lens subpaths generated pixel 
generating new subpath choose random pixel quota lens subpaths choose 
rover search non full pixel efficient 
control distribution samples pixel computing poisson minimum disc pattern tiling image plane 
probability similar bidirectional case way generating new subpath 
subpath re influence calculation 
selecting mutation types step assign probability mutation types 
discrete distribution sampled determine kind mutation applied current path 
important probabilities relatively balanced 
mutation types designed satisfy different goals difficult predict advance types successful 
goal mutations large possible having reasonable chance acceptance 
achieved randomly choosing mutations different sizes chance trying appropriate mutation path 
observation similar multiple importance sampling alternative name technique 
set mutations cover possibilities may need know optimum way choose path 
perfectly fine include mutations designed special situations result rejections time 
increases cost sampling small amount increase robustness considerably 
refinements describe ideas improve efficiency mlt 
direct lighting 
standard techniques direct lighting see metropolis algorithm 
cases standard methods give better results lower cost due fact metropolis samples stratified image plane section 
excluding direct lighting paths metropolis calculation apply effort indirect lighting 
expected sample value 
proposed mutation probability accumulating image sample probability accumulating efficient accumulating sample locations weighted corresponding probability 
effectively replaced random variable expected value common variance reduction technique 
especially useful sampling dim regions image receive samples 
importance sampling mutation probabilities 
describe technique increase efficiency mlt substantially increasing average acceptance probability respect deciding mutation attempt 
done weighting possible mutation probability bidirectional path tracing samples pixel 
metropolis light transport average mutations pixel computation time 
light visible portion scene comes door slightly light adjacent room comes doorway 
light source diffuse ceiling panel far large adjacent room virtually light coming doorway bounced times 
mlt algorithm efficiently generates paths go small opening rooms preserving path segment goes doorway 
images pixels include effects paths length 
deleted subpath regenerated 
factor pd mentioned section current path consider mutation deletes subpath xs xt 
insight deleted subpath possible compute factors acceptance probability 
particular see proportional possible compute com ponents discrete probabilities pd pa apply generated 
computable factors denoted pd 
example section instance pd discrete probabilities mutation type weighted factor mutation selected 
results rendered test images compare metropolis light transport classical bidirectional path tracing 
path tracing implementations support efficient direct lighting calculations importance sampled russian roulette shadow rays optimizations 
shows test scene difficult indirect lighting 
equal computation times metropolis light transport gives far better results bidirectional path tracing 
notice details difficult obtain light transport algorithms contact shadows glass teapot light reflected white tiles door brighter strip back floor due narrow gap table wall 
scene contains diffuse glossy specular surfaces wall untextured clearly reveal noise levels 
scene mlt gains efficiency ability change part current path 
portion path doorway preserved re mutations successfully mutated different path doorway 
note perturbations essential process efficient path doorway needs change infrequently 
compares mlt bidirectional path tracing scene strong indirect illumination 
methods give similar results top row images indirect lighting floor lamp dominates 
mlt performs better zoom due ability generate new paths perturbing existing paths 
image quality degrades magnification computation time slowly 
notice appearance noise highest magnification 
due perturbations ray spotlight perturbed narrow cone lens maps cone directions elongated shape 
due long strings mutations broken successful mutations kind 
top row images slight differences methods 
mlt algorithm leads lower noise bright regions image bidirectional algorithm gives lower noise dim regions 
expect number metropolis samples varies pixel brightness number bidirectional samples pixel constant 
shows difficult lighting situation bottom small pool seen indirectly ripples water surface 
path tracing path strikes bottom pool reflected direction sampled brdf 
case small number paths contribute light source occupies visible hemisphere pool 
bidirectional path tracing help paths generated starting eye 
perturbations key sampling efficiently recall 
interesting feature mlt obtains results special handling light sources specular surfaces see examples achieved restriction lifted 
measured performance mlt relative path tracing pt bidirectional path tracing bpt computation time 
computed relative error ej mj mj mj pixel mj value computed mlt pt bpt mj images show formed spotlight glass egg 
column computed bidirectional path tracing samples pixel uses metropolis light transport number ray queries varying mutations pixel 
solutions include paths length images pixels 
value image computed bpt large number samples 
computed norms resulting error image array ej 
normalized results dividing error norms pt bpt corresponding error norm mlt 
gave table test case pt vs mlt bpt vs mlt fig 
fig 
top fig 
note efficiency gain mlt methods proportional square table entries path tracing samples pixel 
metropolis light transport average mutations pixel computation time 
pool water viewed indirectly ripples surface 
difficult unbiased monte carlo algorithms find important transport paths generated starting lens light source occupies hemisphere seen pool bottom curved 
mlt algorithm able sample paths efficiently means perturbations 
images pixels 
error pt bpt decreases square root number samples 
example rms relative error times higher approximately times bpt samples required achieve error levels 
topmost images bpt suited notice mlt bpt competitive 
computation times approximately minutes image hours images fig ure hours images times measured mhz mips processor 
memory requirements modest store scene model current image single path small number paths mutation technique section 
high resolution images memory requirements reduced collecting samples batches sorting scanline order applying image disk 
novel approach global illumination problems showing adapt metropolis sampling method light transport 
algorithm starts seed light transport paths applies sequence random mutations 
steady state resulting markov chain visits path probability proportional path contribution image 
mlt algorithm notable generality simplicity 
single control structure different mutation strategies handle variety difficult lighting situations 
addition mlt algorithm low memory requirements computes unbiased result 
refinements basic idea possible 
example modest changes mlt compute view independent radiance solutions letting mj basis function coefficients defining jfj 
mlt render sequences images animation sampling entire space time paths mutation try perturb path forward backward time 
interesting problem determine optimal settings various parameters algorithm 
values extensively tuned efficiency improvements may possible 
hope address refinements extensions 
especially anonymous reviewers detailed comments 
particular review led significant improvements formulation exposition 
matt comments artwork 
research supported nsf contract number ccr muri contract daah 
arvo kirk particle transport image synthesis 
computer graphics siggraph proceedings aug 
beyer lange evolutionary ray tracing algorithm 
eurographics rendering workshop proceedings june pp 

photorealistic rendering techniques springer verlag new york 
collins reconstruction indirect illumination area luminaires 
rendering techniques pp 

eurographics rendering workshop proceedings june 
cook porter carpenter distributed ray tracing 
computer graphics siggraph proceedings july 
willems potential driven monte carlo particle tracing diffuse environments adaptive probability density functions 
rendering techniques pp 

eurographics rendering workshop proceedings june 
goldberg genetic algorithms search optimization machine learning 
addison wesley reading massachusetts 
measure theory 
van nostrand new york 
heckbert adaptive radiosity textures bidirectional ray tracing 
computer graphics siggraph proceedings aug vol 
pp 

jensen importance driven path tracing photon map 
eurographics rendering workshop june eurographics 
kajiya rendering equation 
computer graphics siggraph proceedings aug vol 
pp 

monte carlo methods volume basics 
john wiley sons new york 
willems bi directional path tracing 
proceedings portugal dec pp 

willems theoretical framework physically rendering 
computer graphics forum june 
willems variance monte carlo ray tracing 
rendering techniques pp 

eurographics rendering workshop proceedings june 
metropolis rosenbluth rosenbluth teller teller equations state calculations fast computing machines 
journal chemical physics 
mitchell hanrahan illumination curved reflectors 
computer graphics siggraph proceedings july vol 
pp 

adjoint equations random walks illumination computation 
acm transactions graphics jan 
optimum monte carlo sampling markov chains 
biometrika 
reif tygar yoshida computability complexity ray tracing 
discrete computational geometry 
shirley wade hubbard walter greenberg global illumination density estimation 
eurographics rendering workshop proceedings june pp 

rendering techniques springer verlag new york 
shirley wang zimmerman monte carlo methods direct lighting calculations 
acm transactions graphics jan 
monte carlo principles neutron transport problems 
addison wesley reading massachusetts 
non symmetric scattering light transport algorithms 
eurographics rendering workshop proceedings june 
rendering techniques springer verlag new york 
guibas bidirectional estimators light transport 
eurographics rendering workshop proceedings june pp 

photorealistic rendering techniques springer verlag new york 
guibas optimally combining sampling techniques monte carlo rendering 
siggraph proceedings aug addison wesley pp 

whitted improved illumination model shaded display 
communications acm june 
appendix prove unbiased show identity satisfied step random walk ir dw qi joint probability distribution th weighted sample wi xi 
clearly condition satisfied noting denotes dirac delta distribution 
observe true pj replaced qj mutations set wi wi 
multiplying sides integrating obtain ir dw ir preserved mutation step 
desired estimate unbiased wi wj xi ir pi dw wj mj 
