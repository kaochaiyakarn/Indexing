modeling multidimensional databases rakesh agrawal ashish gupta sunita sarawagi ibm almaden research center harry road san jose ca propose data model algebraic operations provide semantic foundation multidimensional databases 
distinguishing feature proposed model symmetric treatment dimensions measures 
model provides support multiple hierarchies dimension support adhoc aggregates 
proposed operators composable closed application 
operators minimal sense expressed terms dropped sacrificing functionality 
possible declarative specification optimization multidimensional database queries currently specified operationally 
operators designed translated sql implemented top relational database system special purpose multidimensional database engine 
effect provide algebraic application programming interface api allows separation frontend backend 
proposed model provides framework study multidimensional databases opens new research problems 
codd ccs coined phrase line analytical processing olap characterize requirements summarizing consolidating viewing applying formulae synthesizing data multiple dimensions 
olap software enables analysts managers executives gain insight performance enterprise fast access wide variety views data organized reflect multidimensional nature enterprise data col 
said current relational database systems designed tuned line transaction processing oltp current affiliation sunnyvale ca 
adequate olap applications cod fin ks 
response multidimensional database products appeared market see rad survey 
database research community far played major role market phenomenon 
gray proposed extension sql data cube operator generalizes groupby construct support multidimensional analysis 
techniques developed computing data cube aad deciding subset data cube pre compute estimating size multidimensional aggregates indexing pre computed summaries sr js 
research multidimensional indexing structures see example gut overview relevant 
lastly research statistical databases see example sho overview addressed concerns 
presents framework research multidimensional databases 
review concepts terminologies multidimensional database products section 
point deficiencies current products 
propose section data model provide semantic backing techniques current multidimensional database products 
salient features model ffl data model multidimensional cube set basic operations designed unify divergent styles today extend current functionality 
ffl proposed model provides symmetric treatment dimensions measures 
model flexible providing support multiple hierarchies dimension support adhoc aggregates 
ffl operators defined cube produce output new cube 
operators closed freely reordered 
free composition allows user form larger queries replacing relatively inefficient operation time approach existing products 
algebraic nature cube provides opportunity optimizing multidimensional queries 
ffl proposed operators minimal 
expressed terms dropped sacrificing functionality 
ffl modeling framework provides logical separation frontend graphical user interface gui business analyst backend storage system 
operators provide algebraic application programming interface api allows interchange frontends backends 
discuss section design choices show currently popular multidimensional database operations expressed terms proposed operators 
operators designed translated sql albeit minor extensions 
refer reader ags translations 
data model implemented general purpose relational system specialized engine 
conclude summary section 
current state art brief overview current state art multidimensional databases 
example consider database contains point sale data sales price products date sale supplier sale 
sales value functionally determined attributes 
intuitively attributes vary accordingly determine sales value 
illustrates multidimensional view 
date product jan feb feb mar sales supplier 
example data cube terminology determining attributes product date supplier referred dimensions determined attributes sales referred measures 
dimensions called categorical attributes measures called numerical summary attributes statistical database literature sho 
formal way deciding attributes dimensions attributes measures 
left database design decision 
dimensions usually associated hierarchies specify aggregation levels granularity viewing data 
day month quarter year hierarchy date specifies various aggregation levels 
similarly product name type category hierarchy product dimension 
analyst want see subset data view attributes selected attribute restrict values interest 
multidimensional database parlance operations called pivoting rotate cube show particular face slicing dicing select subset cube 
multidimensional view allows hierarchies associated dimension viewed logical manner 
aggregating product dimension product name product type expressed roll operation 
converse roll drill displays detail information aggregated point 
drilling product dimension product category product type gets sales product type corresponding product category 
drill get sales individual products 
drill essential users want see aggregated data selectively see detailed data 
example give queries provide flavor multidimensional queries 
queries database example necessary hierarchies product time dimensions 
ffl give total sales product quarter 
note quarter function date 
ffl supplier ace product give fractional increase sales january relative sales january 
ffl product give market share category today minus market share category october 
ffl select top suppliers product category year total sales 
ffl product category select total sales month product highest sales category month 
ffl select suppliers currently sell highest selling product month 
ffl select suppliers total sale product increased years 
ffl select suppliers total sale product category increased years 
implementation architectures main approaches currently build multidimensional databases 
approach maintains data dimensional matrix non relational specialized storage structure 
database designer specifies aggregations consider useful 
building storage structure aggregations associated possible roll ups precomputed stored 
roll ups drill downs answered interactive time 
products adopted approach instance arbor arb iri express iri 
approach uses relational backend operations data cube translated relational queries posed possibly enhanced dialect sql 
indexes built materialized views heavily systems 
approach manifests products instance eri mic 
additional desired functionality believe multidimensional database systems provide additional functionality missing poorly supported current products ffl symmetric treatment dimensions measures 
selections aggregations allowed dimensions measures 
example consider query finds total sales product ranges sales price 
sales price product treated measure grouping attribute 
queries require categorizing measure quite frequent 
non uniform treatment dimensions measures queries hard current products 
proposed olap council api ola provides measures put dimension cube 
proposal maintains sharp distinction measures dimensions solve problem able categorize measure 
ffl support multiple hierarchies dimension 
instance example illustrates type category hierarchy products interest consumer analyst 
alternative hierarchy manufactures product owns product manufacturer parent interest stock market analyst 
roll ups drill downs hierarchies 
ffl support computing ad hoc aggregates 
aggregates originally prespecified computable 
instance product total sales average sales interesting numbers 
ffl support query model place time computation model 
currently user operates cube obtains resulting cube 
user operation 
intermediate cubes interest user 
set basic operators defined semantics enable computation replaced query model 
having tools compose operators allows complex multidimensional queries built executed faster having user specify step 
approach declarative operational 
related research data models developed context temporal spatial statistical databases incorporate dimensionality similarities 
temporal databases tcg rows columns relational table viewed dimensions time adds third dimension forming called time cube 
cube different cube model dimensions correspond arbitrary attributes dimensions treated uniformly attaching fixed connotation 
modeling efforts spatial databases gut concentrate representing arbitrary geometric objects points lines polygons regions multidimensional space 
viewing olap data points multidimensional space attributes draw analogies models 
operations central spatial databases overlap containment quite different common olap operations roll drill joins 
multi dimensional indexing structures developed spatial databases see gut may useful developing efficient implementations olap databases 
statistical databases address concerns olap databases 
models statistical database literature mic cl primarily concerned extending existing data models relational representing summaries supporting operations statistical data analysis 
contrast objective develop model set basic operations analysts view enterprise data 
statistical databases category dimensions summaries measures treated quite differently treat dimensions measures uniformly 
instance mers describes algebra operations union selections aggregation similar operators define 
treat measures dimensions symmetrically additional operators unique model 
irrespective differences olap databases benefit implementation techniques developed statistical databases particularly related aggregation views see sho stl 
concurrent gls proposed model tabular data embeds relational multidimensional data model 
model allows measures dimensions interchanged model 
model state handle aggregations operation fundamental olap databases 
data model outline proposed multidimensional data model operations capture functionality currently provided multidimensional database products additional desired functionality listed 
design driven key considerations ffl treat dimensions measures symmetrically 
ffl strive flexibility multiple hierarchies adhoc aggregates ffl keep number operators small 
ffl stay close relational algebra possible 
operators translatable sql 
logical model data organized multidimensional cubes 
cube components ffl dimensions dimension name domain dom values taken 
ffl elements defined mapping dom theta theta dom tuple 
refers element position cube note refer values positions se 
model require dimensions ranked discrete domain 
ffl tuple names describes tuple element cube 
elements cube tuple xn 
element corresponding combination dimension values exist database 
indicates existence particular combination 
tuple indicates additional information available combination dimension values 
elements cube elements tuple vice versa 
represent values dimension cube elements cube 
elements cube cube empty 
additionally domain dom dimension values cube considered empty 
model distinction measures dimensions 
example sales just dimension 
note logical model force storage mechanism 
cube data model may logical dimensions number dimensions physically store cube multidimensional storage system 
operators discuss multidimensional operators 
illustrate operators subset cube introduced example 
omit supplier dimension display product date sales dimensions 
note sales measure dimension albeit logical model 
date product jan feb feb mar sales 
logical cube sales dimension omitting operate logical cube sales dimension may folded cube sales values determined product date dimensions 
describe achieved 
cube sales values sole member elements cube 
value date mar product indicates logical cube element corresponding date mar product sales 
show metadata description elements annotation cube 
sales 
indicates element cube sales value 
notation define operators cube dimensions 
refer dimensions refer domain dimension context usage clear refer domain dimension dom 
lower product date jan feb feb mar product product date jan feb feb mar 
push operation dimension product pull st member element new dimension sales product product sales 
pull member element dimension sales case letters refer constants 
dimension values data model functionally determine elements cube 
result application operation element value may mapped element combination values dimension attributes answer cube 
element values combined value maintain functional dependency specifying call element combining function denoted elem merge values dimension 
call functions purpose dimension merging functions denoted merge push push operation see convert dimensions elements manipulated function elem operator needed allow dimensions measures treated uniformly 
input output non element extended additional member value dimension element 
mathematically push phi 
operator phi defined cases concatenates 
pull operation converse push operator 
pull creates new dimension specified member elements 
operator useful convert element dimension element merging joining 
operator needed symmetric treatment dimensions measures 
input new dimension name integer output additional dimension obtained pulling th element element matrix 
constraint non elements tuples non element need member enable creation new dimension 
mathematically pull st dimension cube 
dom th member 
gamma 
note elements 
product date jan feb feb mar prod product date jan feb feb mar 
restriction operation destroy dimension dimensionality cube needs reduced 
operator removes dimension domain single value 
presence single value implies remaining gamma dimensions unique gamma dimensional cube 
dimension eliminated resulting gamma dimensional space occupied unique cube 
input dimension name output dimension absent 
constraint value say mathematically destroy gamma dimensions gamma gamma 
dimension multiple values directly destroyed elements longer functionally determined dimension values 
multi valued dimension destroyed applying merge operation described applying operation 
note get zero dimensional cube scalar result destroy operation 
restriction restrict operator operates dimension cube removes cube values dimension satisfy stated condition 
illustrates application restriction 
note operator realizes slicing dicing cube multidimensional database terminology 
input cube predicate defined output new cube obtained removing values dimension satisfy predicate general notion predicate evaluated set values just single value 
form greater evaluated single values time form top values evaluated entire domain outputs set values 
element dimension satisfies empty cube 
mathematically restrict dom dom dom 

join join operation relate information cubes 
result joining dimensional cube dimensional cube dimensions called joining dimensions cube gamma dimensions 
joining dimension combines exactly dimension get resulting dimension follows joined dimension mapping functions mapping corresponding joining dimension resulting dimension elements formed function elem combines elements get mapped element illustrates cube joining cube dimension mapping function identity 
dimension resulting cube values 
function elem divides element value cube element value element resulting element 
values result dimension elements corresponding eliminated values dimension 
input dimensions dm dimensions dm gammak dn dm gammak dm join dimensions loss generality 
mapping functions fm gammak fm defined dimensions dm gammak dm map map dimension identify mapping divides elem element element elements exist 
returns 
joining cubes ping function gammak defined dimensions dm gammak dm 
mapping applied value dom produces values dimension similarly applied dom produces values dimension needed function elem combines sets elements output elements output dimensions dn multiple elements get mapped element elements get mapped point combined function elem produce output element value dimension elements xn values dimensions included dimension mathematically join gammak fm gammak elem dom dom gamma dom fd jd dom dom gammak dn elem ft ft dm gammak dm gammak dm dn defined general notion join operator covers important special cases 
notable cartesian product natural join union merge associate 
case cartesian product cubes common joining dimension 
case natural join mapping function identity elem function returns elements 
sub cases union merge discussed 
associate especially useful sub case olap applications computations express month sale percentage quarterly sale 
associate asymmetric requires dimension joined dimension illustrates associating cube month dimension date dimension joined mapping date dimension similarly category product joined mapping product dimension month month mapped dates month 
dimension category value cat mapped products cat mapped 
dimensions date product identity mapping 
function elem divides element value cube element value element resulting element 
note value mar eliminated corresponding elements 
merge merge operation aggregation operation 
illustrate 
shows hierarchies multidimensional database implemented merge operator 
intuitively dimension merging function map multiple product names categories function map individual dates corresponding month 
multiple elements dimension merged produce di date product jan feb feb mar category month cat cat jan feb date product jan feb feb total map month date month map category product category element exist 
returns elem divides element 
associating cubes product date jan feb feb mar cat cat date month category month cat cat jan feb mar sum merge merge elem 
merging dimensions date product elem sum possibly smaller domain 
result merging dimension multiple elements original cube get mapped element new cube 
element combining function specify multiple elements aggregated 
example aggregation function elem sum 
general dimension merging function mapping takes element lower level multiple elements higher level hierarchies 
instance mapping merge product belonging categories handle multiple hierarchies 
input function elem merging elements dimension function pairs 
loss generality assume pairs dm output cube dimensionality dimension merged function element corresponding merged elements aggregated elem mathematically merge dm elem dom ff je dom dom 
elem 
special case merge operator merging functions identity 
case merge operator apply function elem element cube 
merge operator strictly part basic set operators 
expressed special case self join cube merge transformation functions dimensions merged identity transformation functions dimensions 
chose separately define merge unary operator binary join performance reasons 
discussion reader may noticed similarities operators proposed relational algebra cod 
design 
goals explore functionality current multidimensional products abstracted terms relational algebra 
developing operators translated sql see ags translations hope create fast path providing olap capability top relational database systems 
hasten add arguing specialized olap engines believe design prototyping engines fruitful research direction 
suggesting simply translating operators sql sufficient providing olap capabilities relational database systems 
point directions optimization techniques storage structures relational database systems need evolve 
goal treating dimensions measures symmetrically influence design 
functionality poorly supported current multidimensional database products 
absence causes expensive schema redesign unanticipated need arises aggregation attribute initially thought measure 
hindsight push pull operations may appear trivial 
key symmetric treatment dimensions measures possible 
reader may argue way chosen incorporate order information algebra 
rely functions purpose implies system may able information optimizing queries 
debated allowing native order specified dimension providing ordering operators 
decided large number operators semantics gets quite complex multiple hierarchies dimension 
practical implementation model worthwhile allow default order specified dimension system aware built ordering functions 
holds providing knowledge built aggregate functions 
reader may notice absence direct analogs relational projection union intersection difference 
operations expressed terms proposed operators follows projection projection cube computed merging dimension included projection destroying dimension 
elem function specifying multiple elements combined needed part specification projection 
union cubes union compatible number dimensions ii dimension dimension domain type 
union computed joining cubes identity transformation functions dimension cube choosing function elem produces non empty element element element cubes mapped dimension resulting cube values union values dom dom 
intersect intersection union compatible cubes computed joining cubes identity mapping effectively retains dimension values cubes 
function elem non element point elements cubes mapped difference difference union compatible cubes expressed intersection followed union result 
elem function combining elements intersection steps discards value element retains element 
elem function combining elements union step saves value element elements different result identical expressive power algebra seen powerful relational algebra cod 
precise circumscription expressive power proposed data model open problem 
related interesting open question pertains defining formal notion completeness multidimensional database queries evaluating complete algebra respect metric 
take empirical approach discuss current high level multidimensional operations built proposed operators 
implementation corresponds semantics gamma ca equals 
alternative semantics ca equals 
semantics implemented small change elem function union step 
roll roll merge operation needs dimension merging function element combining function 
hierarchy specified dimension dimension merging function defined implicitly hierarchy 
elements corresponding merged values dimension combined userspecified element combining function sum 
drill operator binary operation current multidimensional database products unary operation 
consider computing sum values 
drill underlying values possible infinite ways 
underlying values known 
aggregate cube joined associated cube detailed information 
continuing analogy drill constituents database keep track obtained associate values 
users merge cubes stored paths unique path merging tree drill uniquely specified 
storing hierarchy information restricting single element merging functions hierarchy drill provided high level operation top associate 
star join star join eri large detail mother table joined small daughter tables describe join keys mother table 
star join mother table joining daughter tables applying selection conditions descriptive attributes 
describe operators capture star join daughter table describes join key field table viewed dimensional cube join key field dimension description fields pulled elements 
restriction description attribute table corresponds function application elements restrictions join key attribute translate restrictions dimension join achieved associating mother cube daughter cube key dimension identity mapping function 
description key value pulled daughter cube mother cube elem function 
expressing dimension function dimensions functionality basic spread sheets 
create new dimension expressed function dimension pushing cube elements modifying cube elements applying function pulling corresponding member cube element new dimension example queries section illustrates express queries example operators 
assume cube dimensions product month supplier element sales 
supplier ace product give fractional increase sales january relative sales january 
restrict supplier ace dates january january 
merge date dimension elem combines sales gamma sale jan sale jan 
product give market share category month minus market share category october 
restrict date october current month 
merge supplier single point sum sales elem function get 
merge product dimension category sum elem function get total sale months interest 
associate mapping category products 
identity mapping month dimension 
function elem divides element element get market share 
resulting cube merge dimension month single point elem function gamma market share month market share october 
product category select total sales month product highest sales category month 
restrict dimension month month 
merge supplier single point sum sales elem function 
push product dimension resulting tuple elements sale product 
merge product category elem function retains element maximum sales 
pull product category dimension riding category dimension easily done basic operators 
resulting cube 
cube highest sales value element month 
restrict dimension date month merge supplier single point sum sales elem function associate product dimension elem function outputs element corresponding elements returns 
select suppliers total sale product increased years 
restrict months years 
merge month year 
merge years single point elem function maps sales values sales values increasing 
merge product point elem function arguments 
introduced data model set algebraic operations unify extend functionality provided current multidimensional database products 
illustrated section proposed operators composed build olap operators roll drill star join 
addition model provides symmetric treatment dimensions measures 
model provides support multiple hierarchies dimension support adhoc aggregates 
absence features current products results expensive schema redesign unanticipated need arises new aggregation aggregation attribute initially thought measure 
proposed operators desirable properties 
defined semantics 
minimal sense expressed terms dropped sacrificing functionality 
operator defined cubes produces output cube 
operators closed freely composed reordered 
allows inefficient operation time approach currently replaced query model multidimensional queries amenable optimization 
proposed operators enable logical separation frontend user interface backend stores executes queries 
provide algebraic api allows interchange frontends backends 
operators designed translated sql 
implemented relational system specialized engine 
modeling side needed incorporate duplicates null values model 
believe duplicates handled treating elements cube pairs consisting arity tuple values 
arity gives number occurrences corresponding combination dimensional values 
nulls represented allowing null value dimension 
details extensions possible alternatives require investigation 
implementation side interesting research problems implementing model top relational system specialized engine 
proposed operators translated sql query simply executing translated sql relational engine quite inefficient 
corresponding multidimensional query composed operators get sequence sql queries offers opportunity multi query optimization 
needs investigated known techniques sg suffice need develop new techniques 
similarly opportunity research storage access structures materialized views 
acknowledgments wish mike carey goel bala iyer eugene shekita stimulating discussions probing questions 
aad agarwal agrawal deshpande gupta naughton ramakrishnan sarawagi 
computation multidimensional aggregates 
proc 
nd int conference large databases pages mumbai bombay india september 
ags rakesh agrawal ashish gupta sunita sarawagi 
modeling multidimensional databases 
research report ibm almaden research center san jose california 
available www almaden ibm com cs quest 
arb arbor software sunnyvale ca 
multidimensional analysis converting corporate data strategic information 
www com 
ccs codd codd 
decision support 
july 
cl lakhal 
matrix relation statistical database management 
proc 
fourth int conference extending database technology edbt march 
cod codd 
relational model large shared data banks 
comm 
acm 
cod codd 
providing olap line analytical processing user analysts mandate 
technical report codd associates 
col george 
olap relational multidimensional database systems 
technical report arbor software sunnyvale ca 
eri christopher erickson 
data warehouse 
data warehousing conference orlando florida february 
fin richard finkelstein 
mdd database reaches dimension 
database programming design pages april 
gray bosworth layman pirahesh 
data cube relational aggregation operator generalizing group cross tabs sub totals 
proc 
th int conference data engineering pages 
gupta harinarayan anand rajaraman jeffrey ullman 
index selection olap 
proc 
th int conference data engineering birmingham april 
gls gyssens lakshmanan subramanian 
tables paradigm querying restructuring 
proceedings acm symposium principles database systems pods 
gut 
spatial database systems 
vldb journal 
harinarayan rajaraman ullman 
implementing data cubes efficiently 
proc 
acm sigmod conference management data june 
iri iri software information resources waltham ma 
olap turning corporate data business intelligence 
www com 
js johnson shasha 
hierarchically split cube forests decision support description tuned design 
working 
ks kimball 
wrong sql 
datamation june 
mers meo ricci shoshani 
semantic completeness macro data operators statistical aggregations 
proceedings sixth international working conference scientific statistical database management 
mic vienna va 
true relational olap 
www com 
mic michalewicz 
statistical scientific databases 
ellis horwood 
ola olap council 
md api olap application program interface version specification september 
rad neil 
data data 
information week pages october 
shukla deshpande naughton 
storage estimation multidimensional aggregates presence hierarchies 
proc 
nd int conference large databases pages mumbai bombay india september 
sg sellis ghosh 
multiple query optimization problem 
ieee transactions knowledge data engineering 
sho shoshani 
statistical databases characteristics problems solutions 
proceedings eighth international conference large databases vldb pages mexico city mexico september 
sr salzberg reuter 
indexing aggregation 
working 
stl srivastava tan lum 
access method efficient processing statistical queries 
ieee transactions knowledge data engineering 
tcg tansel clifford gadia jajodia segev snodgrass 
temporal databases theory design implementation 
benjamin cummings 
