random sampling databases survey frank olken doron rotem information computing sciences div 
lawrence berkeley laboratory road berkeley ca management information systems department school business san jose state university san jose ca march reviews literature techniques obtaining random samples databases 
discussion want include sampling facilities database management systems 
review basic sampling techniques constructing dbms sampling algorithms acceptance rejection reservoir sampling 
discussion sampling various data structures follows trees hash files spatial data structures including trees quadtrees 
algorithms sampling simple relational queries single relational operators selection intersection union set difference projection join described 
describe sampling estimation aggregates size query results 
discuss clustered sampling sequential sampling approaches 
decision theoretic approaches sampling query optimization reviewed 
draft march 
survey literature techniques random sampling databases especially relational databases 
sampling databases external uses provide ability answer random sampling queries internal uses sampling database management systems dbmss support query optimization 
sampling queries random sampling query returns random sample randomly selected subset bag results relational retrieval query 
generally sampling operator appear nested sql query select appear 
example relations employee emp id name address salary doctors emp id specialty query sample select emp id address employee salary produce random sample size employees 
records query simply return records satisfied selection predicate 
query select avg salary max salary employee emp id sample select emp id draft march 
doctors specialty surgeon produce average maximum salaries computed random sample surgeons 
sample dbms 
sampling may purposes database management system ffl estimate results aggregate queries sum count average ffl retrieve sample records database query subsequent processing ffl internal query optimizer ffl provide privacy protection records individuals contained statistical databases 
statistical analyses frequently large databases scientific decision support purposes 
approximate answers suffice 
random sampling offers efficient method obtaining approximate answers aggregate queries see hou ozsoyoglu hou ozsoyoglu hou cochran 
applications illustrated 
third application internal sampling query optimization decisions discussed section 
privacy security applications discussed section 
database setting sampling offers possible advantages conventional query processing ffl reduction cost time answer query draft march 
ffl reduction cost time post process query results computation financial auditing physical inspection ffl assistance making query optimization decisions 
computing free sampling important applications require physical inspection interviewing real world objects persons correspond sampled database records points case spatial db 
inspection applications include financial auditing weapons materials inventories quality control epidemiology policy analysis 
spatial applications include forestry de vries pest management geology ecology environmental monitoring entail physical inspection sites designated database records 
sampling reduce dataset size prior graphical display data reduce computational effort resolution limits displays 
inclusion sampling operators dbms yield major gains efficiency sampling queries minor cost normal operations 
efficiency gains arise reduction amount data retrieved sampling queries exploiting indices access methods dbms 
completely processing database query sampling result effect interchange sampling query operators sample prior query evaluation 
database terminology assume reader familiarity idea relational database see ullman date 
definitions included readers familiar database terminology 
draft march 
ffl tuple record comprised set attributes columns fields 
attribute value constant taken attribute domain integers reals strings 
ffl relation set tuples records table rows tuples records 
ffl selection operator selects subset tuples records relation table satisfy logical predicate persons salary exceeds 
ffl predicate selectivity refers number proportion records satisfy particular selection predicate 
ffl projection operator selects subset attributes columns relation removing duplicate rows remaining columnar restriction 
ffl set intersection union difference defined usual 
ffl natural join equi join operator written 
merge relations 
computes cross product relations selects elements cross product satisfy equality predicate specified attributes 
example perform equi join student id number relation containing student enrollment records student id course section student name relation student id student name 
specified join refer natural join 
ffl semijoin relation relation written 
natural join projected attributes plain english records match join attribute record match name social security number 
ffl attribute relation key value uniquely identifies tuple relation bank account number 
draft march 
ffl view derived relation specified query base relations previously defined views database 
views subsequent queries relation may appear 
ffl materialized view view instantiated computed definition materialized views maintained updated recomputed underlying base relations modified 
ffl select project join spj query consists selects projects joins 
sampling terminology readers unfamiliar sampling terminology include definitions 
ffl population sampled assumed set records tuples 
ffl fixed size random sample sample size specified constant 
ffl binomial random sample sample size binomial random variable 
samples generated sequentially scanning set records including record fixed probability ff 
ffl simple random sample replacement subset elements population element population equally included sample 
duplicates allowed 
naturally generated sampling algorithms sequentially scan file 
usually informative simple random sample replacement duplicates allowed size see discussion immediately 
ffl simple random sample replacement generated repeatedly simple random sample size concatenating samples 
element draft march 
population equally second element sample 
duplicates allowed 
naturally generated iterative batch sampling algorithms 
samples implement sampling joins tuples records joined relations may joined tuple second joined relations 
ffl stratified random sample obtained partitioning population sex srs usually wor specified size strata 
typically sample sizes allocated strata proportion population size strata 
ffl weighted random sample inclusion probabilities element population uniform 
ffl probability proportional size pps ps sample weighted random sample replacement probability inclusion element population proportional size mass dollar value element 
ffl dollar unit sample dus monetary unit sample mus weighted random sample generated iteratively sample size inclusion probabilities proportional sizes typically monetary value elements 
similar pps sample duplicates allowed 
samples simpler generate true pps samples informative 
ffl clustered samples generated sampling cluster unit household disk page sampling elements cluster unit records disk page 
samples typically cheaper obtain simple random samples complex analyze 
draft march 
ffl systematic sample obtained th element file 
starting point chosen random 
sampling procedures may ffl single stage just choose sample specific size 
ffl stage choose small sample information initial sample decide large second sample needs obtain desired level accuracy estimation 
ffl sequential sampling sample file iteratively sample element obtained decide necessary continue sample 
known adaptive sampling 
ffl group sequential sampling similar sequential sampling decides continue groups sample elements obtained 
sampling algorithms may classified ffl iterative algorithms loop generating sample element time 
typically generate 
ffl batch algorithms generate group sample elements time 
algorithms analogous batch searching avoid redundant disk pages may arise iterative algorithms 
ffl sequential scan class sampling algorithms sequentially scan possibly skipping file generate sample 
typically generate 
algorithms require file size known 
ffl reservoir subclass sequential scan sampling algorithms sample files unknown size 
algorithms sample fly results draft march 
query results generated time know size result file 
basic sampling techniques simple random sampling shall concerned fixed size simple random samples 
fixed size indicates target sample size specified user 
simple random sample indicates want uniform inclusion probabilities record 
shall assume sample size small compared number records file ignore costs removing duplicates increasing sample size convert samples replacement samples replacement 
noted refer sample mean simple random sample replacement 
measure cost algorithms terms number disk pages read 
acceptance rejection sampling basic tactic acceptance rejection ar sampling 
construct weighted samples inclusion probabilities record proportional arbitrary weight calculated record attributes 
compensate algorithm data structure induced variations sample inclusion probabilities obtain simple random sample uniform inclusion probabilities 
brief explanation classic sampling technique included database community may unfamiliar 
suppose wish draw weighted random sample size file records denoted inclusion probability record proportional weight maximum draft march 
denoted wmax generating uniformly distributed random integer accepting sampled record probability ff ff wmax acceptance test performed generating uniform random variate accepting ff rejected repeat process accepted 
reason dividing max assure proper probability ff 
know max bound omega omega 
number iterations required accept record geometrically distributed random variable mean ff gamma max avg omega lieu max results efficient algorithm 
acceptance rejection sampling suited sampling ad hoc weights weights frequently updated require auxiliary indices 
specifically acceptance rejection techniques sampling blocked files number records qualify inclusion sample block known block retrieved 
occurs sampling variable block files case sampling done subject predicate 
cases choose block random accept record block probability ff max number records block qualify max quantity known larger 
reservoir sampling method classic reservoir sampling algorithm described fan muller jones sequential sampling algorithm finite population records population draft march 
size unknown 
previously olken rotem discussed database context sample query outputs intermediate results fly 
assuming sample size desired 
commence placing records encountered putative sample reservoir 
subsequent record considered turn 
th record accepted probability accepted displaces randomly chosen record putative sample 
fan fan 
showed produce simple random sample 
version due vitter vitter permits skip records included reservoir 
variant reservoir method obtain spatial samples 
index assisted weighted random sampling wong easton wong easton developed method finding weighted random sample replacement 
weights attribute record typically size transaction amount 
put succinctly consecutive records mapped consecutive intervals real line interval proportional length weight associated respective interval 
sample records inclusion probability proportional weight ffl generating random number sum lengths intervals 
ffl selecting interval spans point wong easton observed interval question logarithmic time means binary tree records 
records constitute leaves tree 
internal nodes store sum weights leaves subtree 
desired interval traversing tree root leaf summing weights left subtree draft march 
pass time take right branch 
indexing technique long known finding th ranked leaf tree see knuth 
obtain sample replacement wong easton simply deleted leaf sampled updated tree log time 
shall describe method adapted trees 
sampling data structures trees trees see bayer mccreight comer popular data structure dbmss 
data stored leaves uniform height tree constructed keys 
insertions records leaves propagate upward tree keys 
nodes split evenly overflow combined lightly loaded 
result average fan maximum fan 
variation fan loading leaves naive approaches picking path tree random yield uniform inclusion probabilities 
basic approaches sampling trees partial sum tree acceptance rejection depending keeps auxiliary index purpose 
partial sum tree algorithm algorithm straightforward adaptation wong algorithm wong easton discussed 
merely extend sampling algorithm binary ary trees 
different method achieve sampling replacement 
wong easton updated tree sample element obtained simply perform sampling replacement invariant tree duplicate elimination subsequent comparison previously collected draft march 
sample elements 
dealing ary trees advantageous promote partial sums leaf cardinalities level tree storing partial sum node parent node 
avoids need inspect child node calculating branch pursue sample 
approach effectively yields sample record traversal tree root leaf 
better results analogous batch searching possible batch sampling 
see srivastava lum discussion algorithm 
acceptance rejection olken rotem discussed acceptance rejection sampling trees 
random walk tree combined acceptance rejection yield uniform inclusion probabilities 
algorithm best understood attempting sample complete uniform fan ary tree 
missing branch encountered random walk restarted root 
batch variants method possible 
efficiency method expected number nodes visited avg max gamma terms maximum average fan height tree 
root node accepted unconditionally ff 
note assumed convenience fan internal nodes number records leaf probability distribution maxima assumed uniform record sizes key compression 
see discussion 
early abort method sampling tree derives naive method 
acceptance rejection sampling random paths tree 
difference naive method traverses complete paths root leaf deciding acceptance rejection early abort method performs acceptance rejection test node root 
node rejected abort searching path permitting early draft march 
path 
effect reject leaf node part way path requiring retrieve entire path 
early abort algorithm fewer expected page naive algorithm tree full 
see olken rotem olken 
way thinking algorithm imagine sampling random paths full multi way tree 
soon go branch actual partially full tree abort path 
node root path root leaf perform acceptance rejection test acceptance probability node denoted ff ff max fan node number records contained leaf max maximum fan node records leaf 
root node accepted unconditionally ff 
effect early abort algorithm searches paths naive algorithm aborts search rejection 
paths accesses fewer pages 
expected cost nodes pages visited strictly naive algorithm pages full 
recall trees uniform height leaves distance root 
rosenbaum rosenbaum described similar algorithm uniform random sampling arbitrary trees leaves distance root 
hybrid acceptance rejection combined approximate partial sum tree index acceptance rejection techniques olken rotem create hybrid algorithm called ranked tree sampling algorithm 
algorithm intended draft march 
support variant trees employs front compression keys variable blocking leaf pages 
features variability node fan outs record blocking factors considerable severely impacting performance early abort tree algorithm 
ranked partial sum tree sampling algorithm described required maintain rank information partial sums cardinalities leaves node 
heavy update traffic expensive maintain 
algorithm required rank information inefficient 
effect sampling trees sampled full tree abandoning sample encountered null pointer 
maintains bounds partial sums cardinalities number records leaves subtrees rooted internal node called cardinality bounds 
samples tree specified cardinality bounds exactly analogous early abort tree algorithm abandoning sampling encounters virtual null pointer 
effectively performing acceptance rejection sampling acceptance probability level ff accept gamma slack cardinality bound gamma slack difference sum cardinality bounds node level cardinality bound node higher level 
allows modest amount slack bounds 
substantially reduces effort required maintain rank information changes propagate far tree small impact sampling performance 
algorithm efficient earlier algorithm class trees described 
draft march 
hash files olken rotem xu discussed simple random sampling hash files secondary storage 
considered iterative batch sampling algorithms static dynamic hash files 
main contribution show introduce simple random sampling hash files substantial modification data structure substantial increase normal costs accessing updating hash files 
provided detailed cost formulae supporting simulations 
showed relationship sampling costs cost searching data structures 
considered static hash files types open addressing method bucket overflow primary area separate overflow chaining primary bucket separate chain overflow pages 
considered dynamic hashing methods linear hashing litwin see litwin extendible hashing fagin fagin nievergelt pippenger strong 
hash file considered iterative methods repeatedly extract sample size accumulate sample requisite size 
considered batch sampling methods modeled batch retrieval methods 
batch processing avoids re referencing page twice occur iterative sampling 
extendible hashing fagin fagin 
considered different methods sampling double acceptance rejection disk pages acceptance rejection sampling directory cells 
synopsis results extendible hashing described fagin 

extendible hash files resemble grid files employ cell directory multiple cell pointers may point single data page 
improves storage utilization light loadings 
draft march 
file heavily loaded data pages repeatedly split eventually data pages pointed single directory cell entry 
data page contains records single cell overflows forced double size directory 
note data page overflowed data pages need split point 
ways sampling extendible hash files 
double page sampling sample data page cell directory sample record page 

cell sampling sample directory cell sample records directory cell corresponding data page showed expected cost disk page double page sampling equal cell sampling 
spatial data structures olken rotem discuss algorithms get uniform random samples points satisfy spatial predicate represented union set polygons 
common applications involve geographic information systems 
spatial predicate typically represented quadtree samet tree see guttman samet 
structures somewhat complicated sample trees 
quadtree variable depth tree tree 
tree decomposes space possibly overlapping regions 
discusses accommodate issues sampling algorithms 
particular develop pass spatial reservoir algorithm sampling trees 
draft march 
sampling relational operators simplest relational queries consist expressions single relational operator 
olken rotem discuss simple random sampling simple relational queries 
summarize results 
detailed cost estimates algorithms proofs treatment relational operators see original thesis olken 
thesis discusses sampling complex relational expressions 
order facilitate exposition treat simpler relational operators leaving interesting results concerning joins 
sampling operator denoted 
sampling method size denoted subscripts 
noted simple random sampling replacement default sampling method 
selection selection easy case sampling relational operators 
sampling selection readily interchanged affecting inclusion probabilities 
choice depends respective selectivities availability indices 
union interchanging sampling union operators yields incorrect results records intersection relations twice sampled records 
typically sample relations proportion cardinalities ffl include records include records ffl include records include records ffl include records include records probability draft march 
randomized combination strategies 
choice strategy typically depends availability indices avoid checking relation lacks index 
projection projection operator relational database systems generates relation comprised specified subset columns relation customarily removes duplicate tuples 
problem interchanging sampling projection operators concerns duplicate removal 
alters inclusion probabilities 
types algorithms projection sampling 
relation sorted hashed indexed projection domains easy determine cardinality projected tuple base relation 
ar sampling acceptance probability inversely proportional projected tuple cardinality 
alternatively design sequential algorithm includes projected tuple tuple encountered sequential scan base relation 
closely related spatial reservoir sampling algorithm trees discussed olken rotem 
join recall natural join equijoin 
relations consists elements cross product common attributes equal 
obtain sample join 
merely interchange sampling join operators obtain correct inclusion probabilities 
relations relation result equijoin 
section describe algorithms sampling reasons efficiency draft march 
wish avoid computing full join 
simplicity exposition discuss sampling replacement section 
conversion sampling replacement straightforward 
sampling done different ways depending initial structure relations important factors determining sampling method 
join attribute key joined relations 

relations indexed hashed join attribute 
join selectivity factor large 
section cover basic methods 
attribute defined domain fx xm set includes tuples value attribute join selectivity factor ae 
relations attribute defined ae 
jr 
jr number distinct values join domain jrj denotes cardinality relations jr denotes cardinality value join domain relation described section simpler algorithms available sample join join attribute key relations 
acceptance rejection join sampling algorithm describe exploits indices join attribute find cardinalities individual join domain values needed calculate acceptance probabilities 
indices available expensive algorithms needed described thesis olken 
large join selectivity factors favor acceptance rejection join sampling algorithm described 
low join selectivity factors suggest perform join sample 
see thesis olken 
draft march 
join keys deal case join attribute key relations assume relation indexed join attribute jt xj max defined known 
reasons explained 
recall semijoin relation relation join domain 
comprised records match join attribute record match name social security number 
sampling schemes relation said equivalent denoted possible instance relation generate size samples inclusion probability element population schemes 
note samples necessarily identical 
theorem acceptance rejection algorithm generate simple random sample size 
wr accept jt jt xj max 
jt denotes cardinality relation join domain value resulting sample jt jt 
jt xj max maximum cardinality relation join domain value jt xj max max jt wr 
expr denotes expr 
sampling expression repeatedly evaluated sample size obtained replacement 
accept ff expr indicates accept sample element generated expr probability ff 
proof clearly righthand side sampling scheme produce sample requisite size 
show uniform inclusion probabilities 
draft march 
iteration algorithm begins sampling tuple tuple inclusion probability jrj gamma sampled tuple joined random sample result taken denoted 

clearly member 
inclusion probability jt gamma defined 
single sample accepted probability jt jt inclusion probability member 
single iteration product jrj gamma jt gamma jt jt xj max xj max uniform inclusion probabilities iteration 
induction true full algorithm 
practice assume indexed join domain possible quickly obtain 
cardinality jt evaluate acceptance rejection test 
sample element accepted generate 
equivalent 


note subexpressions refer sample element 
avoids computing full join result 
need sample size 
code shown 
goes 
join keys sampling join expressions 
join domain key domain relation suppose easier assuming indexed key join domain 
simply sample join result 

draft march 
possible join return record element 
maintaining materialized sample views olken rotem discussed maintain materialized sample view 
view relational database simply virtual relation specified result query 
views supported query modification essentially macro expansion queries replacing view name subquery materializing instantiating maintaining view 
view materialization typically preferable views heavily update traffic light 
discussion view materialization preferable query modification see hanson segev park segev fang segev fang 
basic idea reuse maximal portion original sample constructing updated sample 
results synthesis classical techniques updating materialized views shmueli itai shmueli itai larson tompa tompa hanson ceri widom classical sampling algorithms 
devroye discusses similar idea sample reuse coupled samples simulation setting 
sample reuse basis panel surveys widely longitudinal studies 
treat case maintaining view consists just selection predicate single relation 
see olken rotem extensive treatment relational operators projection join 
updating sample selection view operations performed base relation affect sample view insert delete update 
treat tuple insertion 
cases draft march 

inserted tuple qualifies query predicate 
case need adjust sample manner described 

inserted tuple qualify query predicate 
case 
treat tuple deletion 
cases 
deleted tuple sample 
case need replace deleted tuple sample simply additional size base relation 

deleted tuple sample 
case 
treat tuple updates 
possible cases 
updated tuple qualifies query predicate 
equivalent insertion base relation 

updated tuple longer qualifies query predicate 
equivalent deletion 

status query predicate tuple unchanged 
action necessary update tuple included sample 
view insertion algorithms briefly describe algorithms update sample view single relation selection query inserted tuples known qualify selection predicate noted tuples require action 
inserted record part query result sampled need reevaluate sample conceivable record replaced sample newly inserted records 
algorithms available 
describe briefly 
draft march 

reservoir sampling method usually described earlier 
commence reservoir sampling position jqj jqj size query result constructed original sample initialize reservoir 
obviously method requires knowledge size original query result sampled 
usually available sampling base relations may available sampling selection types queries 
feasible algorithm requires time delta delta set qualifying inserted tuples 
assuming original sample memory 

file method 
assume know jqj delta size original base query insertion set respectively 
allocate sample partitions delta binomial distribution probabilities proportion respective cardinalities 
obtain specified size partition samples partition reuse earlier sample 
method assumes randomly access delta cost fixed blocked random access file terms expected time delta jqj deltai 
assuming original sample memory 

correlated acceptance rejection car methods require knowledge jqj delta index selection predicate employ reservoir sampling original sample jqj unknown 
car method assumes know number blocks original file original net sample size number sample probes rejected 
employs acceptance rejection techniques effectively rerunning original sampling augmented file 
requires knowledge max maximum number records block similar cardinality information elaborate queries 
details see olken rotem draft march 
olken 
database abstracts estimating query sizes commencing discussion sampling selectivity query size estimation briefly consider alternative approaches estimating predicate selectivity query result sizes keeping various statistics database 
predicate selectivity number records satisfying selection predicate key parameter query optimizer choose scanning relation test selection predicate secondary index evaluate selection predicate 
anti sampling neil rowe outspoken advocate anti sampling 
doctoral dissertation subsequent papers rowe rowe rowe proposed keeping database statistical comprised various count sum statistics defined various partitions database 
developed set techniques combining various statistics construct bounds statistics portions database 
required statistical tables quite modest uni dimensional histograms 
simple predicate selectivity estimation required 
complex predicates anticipated want construct multi dimensional histograms statistics consume space 
practically speaking appears keep histograms dimensionality higher 
requisite statistics relation stored read single disk read 
required computations quite fast 
rowe argued approach faster sampling statistics updated database updates raising issues concurrency control hot spots 
agree draft march 
rowe simple single predicate queries database abstracts efficient sampling 
current commercial databases ingres largely rely histograms selectivity estimation 
histograms selectivity estimation adopted ingres project 
histograms distribution individual attributes relation computed 
initially bins histograms chosen equi width range attribute partitioned equal intervals 
equi depth histograms determined choosing attribute partitioning histogram bin count bin boundaries uniformly spaced quantiles empirical attribute distribution 
subsequently piatetsky shapiro connell argued equi depth histograms bins common equi width histogram bins gave better control errors estimation selectivities 
sampling relations generate histograms 
dewitt described construct equi depth multi dimensional histograms variant tree call tree 
sampling relations generate histograms 
partial sum ranked trees long known knuth store number leaves subtrees internal nodes tree order determine rank leaf logarithmic time summing counts left branches passed way tree target leaf 
selectivity index rapidly determine selectivity range predicates tree index exists 
method readily extended computing desired additive statistic sum count range ordered tree 
described earlier weighted sampling wong easton 
variations technique rediscovered authors 
bennett kruskal draft march 
implement efficient lru stack processing algorithms bennett kruskal 
stonebraker stonebraker lynn guttman technique implement ordered relations support text editing documents relational dbms 
srivastava lum method trees compute variety aggregate statistics sum count order statistics sampling stratified random systematic 
ghosh variant employing partial sum tries ghosh 
exodus project univ wisconsin uses technique access method support insertion deletion sequences see carey dewitt richardson shekita 
described approach computes bounded approximations rank statistics 
allowing counts stored node avoids need propagate changes counts way tree modification tree insert delete 
sampling estimation common sampling estimate size relational query results 
may done give user approximate answer count query may estimate selectivities intermediate result sizes query optimization purposes 
note wants information query optimization typically prefers block selectivity estimate record selectivity 
block selectivity estimate better predictor time 
point discussed section 
cluster sampling hou ozsoyoglu wrote papers hou 
hou 
hou ozsoyoglu estimating results count queries 
motivation real time control systems see hou 

draft march 
approach involved cluster sampling disk pages relations constituted clusters 
having read disk pages argued information disk page 
course sample elements necessarily independent 
correct computation estimator variance 
cluster sampling worthwhile significant variability records page terms attributes sought intra cluster variability 
relation ordered attributes sampled little intra cluster variability clustered sampling may offer little improvement simple random sampling 
relation ordered attribute irrelevant desired attribute name vs salary great intracluster variability clustered sampling quite worthwhile 
original procedure hou 
estimating size set intersection entails sampling operand constructing intersection samples 
approach may inefficient large databases 
suppose sample small fraction base relations say percent records records base relation jr sj expected size intersection samples records gamma times size full intersection 
may prove small provide reliable estimates size intersection 
cases method simple random sampling intersections section entails sampling operand checking inclusion intersection second operand prove preferable assuming necessary index hand 
similar problems arise estimation size joins especially keys 
cases methods section preferable requisite index hand 
hou ozsoyoglu incorporated methods version hou ozsoyoglu 
draft march 
special estimators total tuple count created hou ozsoyoglu hou ozsoyoglu account effects relational operators 
discuss estimators complex aggregate count relational queries 
methods attractive relations ordered respect attributes interest relations moderate size records indices available relations 
sequential sampling lipton naughton lipton naughton schneider lipton naughton revived sequential sampling called adaptive sampling approach wald wald selectivity estimation 
sequentiality statistical decides element sampled continue sampling contrast usage dbms sequential algorithms usually refer sequentially scanning relation 
known sequential sampling algorithms outperform conventional single stage sampling algorithms terms number sample points required adjust sample size population parameters 
note sequential sampling policies effectively require iterative sampling algorithms efficient batch sequential scan algorithms 
lipton naughton consider efficiencies garnered batch sequential scan sampling 
batch sampling algorithms efficient avoid pages esp upper part tree index 
sequential scan sampling algorithms may efficient due reduced seek time sequential vs random disk reads 
efficiencies may insignificant hashed files potentially significant factor tree files 
subsequent haas swami haas swami haas swami developed improved stopping rules sequential sampling selectivity estimation 
haas swami observed lipton priori bounds mean variance draft march 
population stopping rule 
haas swami suggested estimating mean variance stopping rule sample taken far 
prove sampling procedure asymptotically efficient uses minimum sample size required accuracy 
note hybrid accuracy constraint absolute accuracy small values relative accuracy large values 
haas swami suggest batch sampling grounds traversing access manager interface sample inefficient ignore savings costs attainable batch sampling akin batch searching 
see olken rotem olken 
batch sampling 
experimental results suggest sampling procedure comparable stage sampling method hou 
discussed better lipton procedure 
haas swami analyze stratified sampling uniform sample sizes allocated strata 
allocation sample sizes appropriate strata equal variances 
suggest checking assumption sampling resort additional sampling large variance strata 
experimental results suggest algorithm offers slightly better coverage depending intra strata homogeneity earlier algorithm consistently beats lipton procedure 
haas swami incorporate improvements sequential sampling procedure correct tendency sequential sampling algorithms report confidence intervals include smaller proportion sample distribution nominally specified 
stage sampling hou 
describe stage sampling estimate count query results 
stage sample estimate required sample size second stage sample 
specific sampling design expect stage sampling intermediate single draft march 
stage sequential sampling terms expected sample size level accuracy 
attractive database setting permits batch sampling algorithms base relations see olken rotem olken 

hou find attractive readily adapted earlier estimation procedure effectively computes relational query cross product samples base relational files 
combination stage sampling estimator outperformed sequential sampling algorithm lipton naughton see lipton 
lipton naughton 
hou suggest simple random sampling replacement place simple random sampling replacement 
efficient long known statistical literature estimators mean smaller mean squared errors estimators sample size 
hou suggest systematic sampling presumably random starting point 
observe systematic sampling similarly outperform srs relation sorted common practice worse periodic fluctuations value desired attribute function ordinal position record 
known priori recorded db catalog prepared compute spectra database difficult see strategy safely employed 
hou note methods require indices relations contrast methods lipton methods developed 
true pay large penalty intersections sample size sampling large relations small intersections small join selectivities 
experiments consider large relations small intersections join selectivities 
consider join selectivity gamma draft march 
transitive closure lipton naughton lipton naughton showed sampling estimate size transitive closure 
essentially sample base relation compute size reachability set element sample 
estimated size transitive closure sum sizes reachability sets sample elements times inverse sampling proportion 
parallel sampling seshadri naughton naughton seshadri seshadri discuss stratified clustered sampling parallel sampling multi processor estimate selectivities see seshadri naughton 
show simple random sampling asymptotically inefficient parallel environment number processors grows leads heavily skewed workloads waits processor largest number samples 
cite theorem gonnet limit maximum path length hash overflow log log log number records number buckets 
propose stratified sampling processors achieve perfect load balancing allocating uniform sample sizes strata processor disk pair 
go argue lines hou ozsoyoglu favor clustered sampling selectivity estimation disk page cluster unit 
see discussion 
percentile estimation seshadri naughton naughton seshadri seshadri discuss random sampling estimate percentiles data distribution 
estimation percentiles important applications parallel sorting types join computations draft march 
parallel machines band approximate joins inequality joins 
goal minimize skew load imbalance parallel processors minimize completion join sorting operation 
example sorting processors done estimating gamma percentiles file called splitters letting processor sort independently keys fall successive splitters 
percentile estimation done random sample sufficient size sample percentiles estimators 
goal provide guaranteed bound skew processors minimal sample size 
dewitt naughton schneider describe percentile estimation sampling partitioned band join algorithms 
band joins extension equi joins error tolerance allowed equality test difference join attributes tuples join relations error bound 
similarly authors dewitt naughton schneider describe successful implementation partitioned external sorting algorithm partitioning splitting vector quantiles estimated sampling 
provide extensive discussion literature sample quantiles various types partitioned distributive sorting algorithms main memory external 
asymptotic analysis distributive sorting algorithms discussed devroye 
estimating size projections estimating size projections classical topic database research long history statistical literature problem known estimating number species classes 
bunge fitzpatrick provide survey results problem extensive bibliography citations bunge fitzpatrick 
discuss draft march 
database literature 
naughton seshadri describe estimation size projections sampling 
approaches problem vary depending index available projection attributes 
projection count 

scan relation doing probabilistic counting see whang vander zanden taylor flajolet martin flajolet flajolet martin astrahan whang 

sample base relation element sample find number records base relation match sampled record projection attributes call jx estimate size projection estimated average contribution element base relation projection size times size base relation jrj jx gamma sample size jrj cardinality relation estimation procedure require relation sorted hashed indexed projection attributes 

sample base relation count duplicates projection attributes tuples sample 
estimate size projection goodman estimator described goodman method require base relation indexed 
method unreliable sample size small encompass significant number duplicates 
example suppose base relation records projection particular projection domain records 
simple random sample records probably contain duplicates 
sample probably draft march 
contain duplicates projection size records 
method accurate method estimating projection sizes large projections sample size small 
note hou ozsoyoglu hou 
goodman estimator size projections 
naughton seshadri propose estimator variant third algorithm described 
assume projection attributes assume base relation sorted hashed indexed sample tuple determine cardinalities tuples match number tuples match estimator sample size 
note method implicitly assumes relation indexed sorted hashed necessarily scan relation 
intermediate indexing requirements 
naughton seshadri show estimator size projection outperform goodman estimator esp small samples 
hardly surprising 
note method commences simple random sample base relation 
estimating size joins seshadri chapter thesis seshadri considers problem estimating size joins equivalently join selectivity sampling 
considers variations cross product sampling approach hou ozsoyoglu discussed 
considers ffl tuple independent sampling srs sampling pairs tuples relations ffl tuple cross product sampling cross product srs samples tuples relation draft march 
ffl page independent sampling cluster disk page sampling pairs pages relations ffl page cross product sampling cross product cluster disk page samples relation seshadri cluster disk page sampling corresponding tuple level sampling 
cross product sampling corresponding independent sampling 
unable establish order independent cluster page sampling tuple cross product sampling 
clearly clustered page level cross product sampling preferred algorithm index 
seshadri goes describe analyze index join selectivity estimation algorithm 
algorithm related simple random sampling join sampling algorithm discussed section 
basically samples relation say looks index number matching tuples estimator join size simply jrj seshadri shows estimation algorithm outperforms previous algorithms 
block selectivity estimation previous section discussed papers concerned sampling estimate record selectivity intermediate result size records 
query optimization purposes record selectivity needed block selectivity disk reads done units disk blocks 
random record placement models yao derive block selectivity estimates record selectivity estimates assumption records draft march 
randomly placed respect blocks 
assumption appropriate estimating block selectivity simple random sampling queries 
authors extended results various types tree structured tree files 
see example shneiderman goodman lang driscoll jou lang manolopoulos rubric batch searching files 
christodoulakis christodoulakis christodoulakis discusses block selectivity estimation records may clustered file sorted attribute selection predicate 
note block selectivity estimated sampling techniques estimate size projections block id attribute 
blocks referenced randomly lose control disk drive successive block reads model expected time simply constant times number blocks accessed 
blocks read spatially clustered disk cylinders hang disk long read nearby blocks time models account cylinder selectivity cylinder proximity 
advent workstations local disks plausible scenario 
plausible large mainframes number disks exceeds degree multiprogramming 
note able techniques estimating cylinder selectivity block selectivity estimating block selectivity record selectivity 
sampling query optimization query optimizers choose possible query processing strategies 
efficient query plan typically function sizes various intermediate query results selectivities various partial query predicates 
sampling estimate selectivities sizes results 
alternative typically maintain histograms draft march 
summary statistics assist estimating query result sizes predicate selectivities 
noted reality require estimate block cylinder selectivities largely confine remarks record selectivities 
frequentist approach willard willard considered problem determining asymptotically optimal sample size required estimate predicate selectivities query optimization scan operations 
specifically trying decide predicates evaluate scanning relation conjunctive query 
showed optimal minimax sample size minimize maximum combined cost sampling evaluating query 
result holds loss function linear estimated parameter relation size relation records optimal sample size approximately records 
blocking factor records disk page implying file occupies theta disk pages reading half pages file simple random sample 
clearly cluster sampling attractive feasible 
main memory database blocking factor effectively simple random sampling practical 
willard discounts bayesian approaches problem arguing frequently sufficient information construct prior distribution 
decision theoretic approach see precursor decision theoretic approach chu chu estimating block selectivities access path selection 
calculates bounds block selectivities considers query optimization problem index access vs complete file scan 
bounds sufficient settle question query strategy choose draft march 
attempt accurate estimates 
kevin barnes morris considered problem selectivity estimation systematically perspective decision theoretic framework 
prior probability distribution parameters interest predicate selectivity uses sampling bayes rule compute posterior probability distribution 
bayesian posterior probability distribution incorporated decision rule expected query processing costs function estimated parameters 
estimate value additional sampling terms improving query optimization decision 
point additional sampling refine parameter estimates accuracy needed decide alternative query processing strategies 
approach lends naturally sequential sampling techniques adaptive query optimization 
facilitates inclusion sources information database parameters previous queries histograms moments 
applications dewitt naughton schneider seshadri sampling determine amount skewness data distribution relation choose parallel join processing strategies 
wolfson zhang mok concerned choosing run time strategies computing single source reachability queries 
describes random sampling selectivity estimation rdb vms dynamic query optimizer 
draft march 
statistical database security privacy protecting privacy data individuals contained statistical databases key problem census bureau statistical database generators 
increasingly important issue statistical databases purchasing behavior marketing analyses see larson 
survey article topic see guthrie 

discussion denning guthrie 
contain extensive bibliographies 
variety methods disclosure control attempted various sophisticated attacks 
attacks facilitated provision sophisticated query facilities modern statistical databases 
users supply information identify individual determine value confidential attributes asking highly specific count queries return 
particular methods simply refuse answer small cardinality count queries defeated trackers described denning denning schwartz denning queries pad response counts sufficient size circumvent restrictions small count queries 
padding introduced trackers removed reveal desired counts individual data 
trackers principle defeated refusing process queries intersections previous queries small 
practical method known see denning 
attention focused methods avoid providing precisely correct answers aggregate count sum std 
dev 
queries 
methods include rounding query results perturbing query results additive multiplicative noise perturbing data values additive multiplicative noise preferably keeping noise values separately database facilitate internal operational uses swapping data fields similar records aggregating draft march 
attribute categories averaging data values groups records random sample queries 
dorothy denning denning described random sampling queries provide security privacy statistical databases 
answering queries database queries run sample database 
introducing sampling errors random sampling queries effectively preclude precise computations various trackers deduce information individuals 
rerunning sampling query times averaging results trackers eventually obtain sufficient precise statistics deduce private information 
defeated performing sampling fashion rerunning query yield identical sample 
done pseudorandom numbers decide record included sample functions query database record product pseudorandom number generator 
example compute hash function record attributes generate pseudorandom number determine inclusion record 
denning provides extensive discussion various aspects potential threats system 
small cardinality queries problem require suppression 
confirmed study duncan 
denning method quite attractive readily integrated existing statistical analysis techniques fast require significant additional storage 
argues regression techniques recover approximate estimates confidential parameters 
tested methods estimating income statistics census sample microdata file 
estimates correlation true income statistics 
method nearly accurate previous trackers give exact answers 
method denning random sample queries 
draft march 
regression attacks possible construct reasonably reliable regression model confidential attribute 
clearly income statistics vulnerable correlate education size house number confidential attributes medical status presumably vulnerable attacks 
ironically implementation method relies heavily randomly generated sum count std 
dev 
queries independent random variables 
large numbers queries required 
cheon subsequent cheon improved performance method small samples 
census bureau routinely uses random samples percent sample microdata files disclosure suppression distributing micro data individual level data files 
low sampling fractions discourage efforts identify individuals 
reviewed literature sampling databases 
basic techniques simple random sampling databases sufficiently understood permit development prototype implementations dbmss include sampling facilities 
inclusion sampling operators dbmss greatly facilitate statisticians auditors query optimizers 
expect see support sampling commercial dbmss close decade 
issued lbl tech 
report lbl 
partially supported director office energy research office basic energy sciences applied mathematical draft march 
sciences division partially supported director office health environmental research department energy contract de ac sf 
authors electronic mail addresses olken ux lbl gov rotem csr lbl gov authors prof michael stonebraker prof alan jay smith prof leo referees prof james french editorial suggestions 


random sampling pseudo ranked trees proceedings th international conference large databases vldb pp 



dynamic query optimization rdb vms proceedings ieee data engineering conference pp 

astrahan whang 

approximating number unique values attribute sorting information systems 
bayer mccreight 

maintenance large ordered indices acta informatica 
bennett kruskal 

lru stack processing ibm journal research development 
larson 
tompa 

efficiently updating materialized views zaniolo ed acm sigmod international conference management data pp 

bunge fitzpatrick 

estimating number species review journal american statistical association 
draft march 


analysis performance inverted database structures communications acm 
carey dewitt richardson shekita 

object file management exodus extensible database system proceedings th international conference large databases vldb morgan kaufmann 
ceri widom 

deriving production rules incremental view maintenance lohman sernadas camps eds proceedings th international conference large databases vldb pp 

cheon 

regression compromise statistical databases modification attribute correlation modeling approach journal database administration 
christodoulakis 

estimating block selectivities information systems 
christodoulakis 

implications certain assumptions database performance evaluation acm transactions database systems 
chu 

database access path selection step approach information systems 
cochran 

sampling techniques wiley 
comer 

ubiquitous tree computing surveys 
date 

database systems th edition edn addison wesley 
de vries 

sampling theory forest inventory springer verlag 
draft march 
denning 

fast procedure finding tracker statistical database acm transactions database systems 
denning denning schwartz 

tracker threat statistical database security acm transactions database systems 
denning 

secure statistical databases random sample queries acm transactions database systems 
devroye 

lecture notes bucket algorithms birkhauser boston 
devroye 

coupled samples simulation operations research 
dewitt naughton schneider 

comparison non equijoin algorithms proceedings th international conference large databases vldb pp 

dewitt naughton schneider 

parallel sorting architecture probabilistic splitting proceedings international conference parallel distributed information systems pp 

dewitt naughton schneider seshadri 

practical skew handling parallel joins proceedings th international conference large databases vldb pp 

duncan mukherjee 

microdata disclosure limitation statistical databases query size random sample query control proceedings 
ieee computer society symposium research security privacy ieee computer society press pp 

fagin nievergelt pippenger strong 

extendible hashing fast access method dynamic files acm transactions database systems 
draft march 
fan muller 

development sampling plans sequential item item selection techniques digital computers journal american statistical association 
flajolet 

approximate counting detailed analysis bit 
flajolet martin 

probabilistic counting th annual symposium foundations computer science pp 

flajolet martin 

probabilistic counting algorithms database applications journal computer system sciences 
ghosh 

siam statistics information access method information systems 
goodman 

estimation number classes population annals mathematical statistics 
guthrie 

statistical models analysis auditing panel nonstandard mixture statistical science 
guttman 

trees dynamic structure spatial searching acm sigmod international conference management data pp 

haas swami 

sequential sampling procedures query size estimation technical report rj ibm 
haas swami 

sequential sampling procedures query size estimation acm sigmod international conference management data pp 

hanson 

performance analysis view materializations strategies acm sigmod international conference management data pp 

draft march 
hou 

relational aggregate query processing techniques real time databases phd thesis case western reserve university 
hou 
ozsoyoglu 

statistical estimators aggregate relational algebra queries acm transactions database systems 
hou ozsoyoglu 

error constrained count query evaluation relational databases acm sigmod international conference management data pp 

hou ozsoyoglu 

statistical estimators relational algebra expressions proceedings seventh acm conference principles database systems pp 

hou ozsoyoglu 

processing aggregate relational queries hard time constraints acm sigmod international conference management data pp 

jones 

note sampling tape file communications acm 
knuth 

art computer programming vol 
sorting searching addisonwesley 
lang manolopoulos 

efficient expressions completely partly unsuccessful batched search tree structured files ieee transactions software engineering 
lang driscoll jou 

unified analysis batched searching sequential tree structured files acm transactions database systems 
larson 

naked consumer private lives public commodities holt 
draft march 
lipton naughton 

query size estimation adaptive sampling proceedings acm conference principles database systems pp 

lipton naughton 

estimating size generalized transitive closures proceedings th international conference large databases vldb pp 

lipton naughton schneider 

practical selectivity estimation adaptive sampling acm sigmod international conference management data pp 

litwin 

linear hashing new tool file table addressing proceedings th international conference large databases vldb pp 

dewitt 

equi depth histograms estimating selectivity factors multi dimensional queries acm sigmod international conference management data pp 

naughton seshadri 

estimating size projections abiteboul kanellakis eds proceeedings icdt third international conference database theory springer verlag pp 

olken 

random sampling databases phd thesis university california berkeley 
issued lbl tech report lbl 
olken rotem 

simple random sampling relational databases proceedings th international conference large databases vldb pp 

olken rotem 

random sampling trees proceedings th international conference large databases vldb morgan kaufman pp 

draft march 
olken rotem 

maintenance materialized views sampling queries proceedings ieee data engineering conference pp 

olken rotem 

sampling spatial databases statistics computing 
olken rotem xu 

random sampling hash files acm sigmod international conference management data pp 



regression methodology compromise confidential information statistical databases acm transactions database systems 


expressions batched searching sequential hierarchical files acm transactions database systems 
piatetsky shapiro connell 

accurate estimation number tuples satisfying condition acm sigmod international conference management data pp 

rosenbaum 

sampling leaves tree equal probabilities journal american statistical association 
rowe 

rule statistical calculations database phd thesis stanford 
rowe 

anti sampling estimation overview ieee transactions software engineering se 
rowe 

absolute bounds set intersection union sizes ieee transactions software engineering se 
samet 

applications spatial data structures addison wesley 
draft march 
segev fang 

currency updates distributed materialized views proceedings ieee data engineering conference pp 

segev fang 

optimal update policies distributed materialized views management science 
segev park 

updating distributed materialized views ieee transactions knowledge data engineering 


bayesian approach selected database issues phd thesis univ texas austin 
barnes morris 

bayesian approach database query optimization orsa journal computing 
seshadri 

probabilistic methods query processing phd thesis univ wisconsin 
seshadri naughton 

sampling issues parallel database systems proceedings conference extending database technology springer verlag pp 

shmueli itai 

maintenance views acm sigmod international conference management data pp 

shmueli itai 

complexity views tree cyclic schemas siam computing 
shneiderman goodman 

batch searching sequential hierarchical files acm transactions database systems 
draft march 
srivastava lum 

tree access method fast processing aggregate queries proceedings th international conference data engineering ieee computer society pp 

stonebraker lynn guttman 

document processing relational database system acm transactions office information systems 
tompa 

maintaining materialized views accessing base data information systems 
ullman 

principles database knowledge base systems vol 
vol 
computer science press 
vitter 

random sampling reservoir acm transactions mathematical software 
wald 

sequential analysis john wiley sons 
whang vander zanden taylor 

linear time probabilistic counting algorithm database applications acm transactions database systems 
willard 

optimal sample cost residues differential database batch query problems journal acm 
wolfson zhang mok 

methodology evaluating parall graph algorithms application single source reachability proceedings international conference parallel distributed information systems pp 

wong easton 

efficient method weighted sampling replacement siam journal computing 
draft march 
yao 

approximating number accesses database organizations communications acm 
draft march 
figures figures follow page 
numbers lower left hand corner 
note legends follow 
figures 
figures page draft march 
comment version algorithm samples set accept false accept false retrieve random record determine value join domain find cardinality accept sample probability jt jt xj max case record accepted choose randomly tuple join 
store result 
sample file 
set accept true 
endwhile endfor page draft march 
legends 
algorithm legends page 
