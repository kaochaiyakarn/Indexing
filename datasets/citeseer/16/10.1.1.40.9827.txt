time critical multiresolution scene rendering enrico eric crs center advanced studies research development sardinia italy describe framework time critical rendering graphics scenes composed large number objects having complex geometric descriptions 
technique relies scene description objects represented multiresolution meshes 
perform constrained optimization frame choose resolution potentially visible object generates best quality image meeting timing constraints 
technique provides smooth level detail control aims guaranteeing uniform bounded frame rate widely changing viewing conditions 
optimization algorithm independent particular data structure represent multiresolution meshes 
requirements ability represent mesh arbitrary number triangles traverse mesh structure arbitrary resolution short predictable time 
data structure satisfying criteria described experimental results discussed 
keywords multiresolution modeling level detail adaptive rendering time critical graphics steadily increasing complexity graphics applications presents important challenges application developers 
particularly true highly interactive programs visual simulations virtual environments inherent focus interactivity low latency real time processing 
application domains interactive graphics characterized need visualize real time dynamic graphics scenes complex geometric description 
scenes exceeding millions polygons hundreds objects handled directly interactive speeds high machines 
upper bound complexity scene visible specific viewpoint meeting performance requirements dictated human perceptual system requires ability trade rendering quality speed 
ideally time quality conflict handled adaptive techniques cope wide range viewing enrico crs eric crs crs vi uta ca italy www crs conditions avoiding worst case assumptions 
number efficient adaptive algorithms introduced incrementally adapt rendering complexity large scale surfaces terrains large organic surfaces 
types graphics scenes contain large number distinct possibly animated small scale objects rigid body simulations virtual engineering prototypes 
traditional approach render scenes time critical setting pre compute small number independent level lod representations object composing scene switch run time lods 
propose model scenes collections multiresolution meshes choose resolution mesh solving continuous constrained optimization problem maximization scene quality timing constraints 
multiresolution scene rendering framework improves current solutions areas ability meet timing constraints 
contrast current static feedback algorithms technique aims guaranteeing uniform bounded frame rate widely changing viewing conditions technique appropriate time critical setting enables prediction reduce perceived lag scene hardware independence 
desired qual ity hardware behavior modeled customizable heuristics 
possible incorporate contextsensitive quality constraints algorithm independent specific hardware application running primary importance distributed graphics applications visualizing shared model 
measurable image quality distance optimum 
objects modeled multiresolution meshes nearly imperceptible transitions resolutions obtained cost 
furthermore algorithm provides image quality measure bound distance quality optimal 
typical accuracy solutions order magnitude better guaranteed current combinatorial optimization approaches data structure independence :10.1.1.103.7998
optimization algorithm independent particular data structure represent multiresolution meshes 
requirements ability represent mesh arbitrary number triangles traverse structure arbitrary resolution short predictable time 
data structure satisfying criteria section 
background related levels detail applications dealing time critical graphics include possibility store model fixed number independent resolutions vrml 
main advantages lods simplicity implementation fact lods pre calculated polygons organized efficient way triangle strips display list exploiting raw graphics processing speed retained mode graphics 
main drawbacks technique related memory overhead severely limits practice number lods object 
constraint introduce visual artifacts due sudden changes resolution differing representations importantly limits degrees freedom lod selection algorithm 
run time lod selection typically done static heuristics feedback algorithms 
static heuristics distance coverage lod mappings adaptive inherently unable produce uniform frame rates feedback algorithms adaptively vary lod mappings past rendering times suffer unavoidable overshoot oscillation problems visualization discontinuous virtual environments 
demonstrated funkhouser quin guarantee bounded frame times predictive algorithms optimize lod selection estimate time render frame 
having guarantee total maximum lag application necessary precondition prediction techniques lag reduction unfortunately combinatorial optimization problem associated lod selection equivalent version multiple choice knapsack problem np complete approximation algorithms guarantee optimality 
current state art techniques funkhouser quin greedy algorithm mason blake incremental technique produce result guaranteed half optimal solution 
dynamic simplification alternative object lod selection dynamically visible objects continuously viewing position shifts 
dynamic re tessellation adds run time overhead approach suitable dealing large objects static environments time gained better simplification larger additional time spent selection algorithm 
reason technique applied entire scene seen single multiresolution object extract variable resolution representations 
classic applications dynamic re tessellation techniques terrain visualization see survey 
hoppe introduced view dependent simplification progressive meshes applying visualization single large objects 
xia discuss application progressive meshes scientific visualization 
luebke apply hierarchical dynamic simplification large polygonal cad models adaptively processing entire database decomposing environment individual objects 
support interactive animated environments composed objects restrict object constant resolution rendering 
overview approach approach relies scene description objects represented multiresolution triangle meshes compact data structures able efficiently provide demand triangle mesh approximation object requested number faces 
frame aim find fixed short time triangle mesh representation potentially visible object produces best quality image target frame time 
done optimization phase takes input set potentially visible objects determined culling algorithm bounding box occlusion culling selects output list triangle meshes rendered 
formally triangle mesh piecewise linear approximation shape denoted tuple simplicial complex specifying connectivity mesh simplices adjacency vertices edges faces vm set vertex positions defining shape mesh am set attributes associated vertices quality approximation rendering complexity dependent sizes multiresolution representation mrm mesh nv vertices nt triangles seen function takes input desired resolution produces output mesh mrm approximates shape desired faces 
frame culling algorithm produces parameterized representation visible objects set associates parameter value actual set triangle meshes mrm mrm rn goal find optimal parameter vector viewing configuration define heuristics visible object set cost heuristic estimates time required render scene containing visible objects resolution bene heuristic estimates quality rendered image 
multiresolution representation discontinuous nt possible values base mesh nt triangles safely assume benefit cost heuristics smooth 
simplifying assumption core approach introduces error clearly negligible sufficiently large values nt respect error intrinsically induced heuristics 
furthermore noticed fact implementation smooth transitions lods smooth benefit heuristics obtained geomorphs 
formalism approach predictive adaptive rendering stated follows maximize bene subject cost desired denote componentwise inequality constant vectors desired target display time 
cost benefit heuristics optimization algorithm multiresolution mesh representation discussed sections 
cost benefit heuristics cost heuristics cost heuristic provides estimation time necessary render viewing configuration camera lights scene composed multiresolution objects resolutions time critical typically running top pipelined graphics hardware implementing buffer algorithm 
scene display starts initialization phase initial setup buffer clears followed sequential rendering meshes finishes finalization phase buffer swap 
initialization finalization time considered constants assuming fast cpu efficient multiresolution mesh representation mesh rendering dominated time define rendering attributes process triangles time fill covered pixels depending pipeline bottleneck hardware configurations time define rendering attributes process triangles just dictated speed graphics pipe line operations rasterization 
high graphics systems fetching triangles multiresolution structure may dominant phase 
cases assume cost remains linear number triangles need determine speed dominant phase prediction rendering time 
words cost rendering multiresolution mesh resolution estimated follows setup max tri pix coverage maximum number triangles mesh setup time associated setup rendering environment object material binding time opengl tri time send triangle pipeline maximum time fetch triangle multiresolution structure processing rasterization pix time fill pixel coverage estimation number pixels covered mesh rendered viewing configuration equation derive minimal resolution min reduction resolution possibly quality reduce rendering time min pix coverage tri cost heuristics modeled cost fixed max min fixed init final setup portion frame time init final frame initialization finalization times max vector containing maximum rendering time tri mesh min vector minimal resolutions equation 
constants setup tri pix init final determined benchmarks preprocessing step 
constants obviously depend rendering attributes shading model number light sources texturing pre compute values combination rendering attributes choose run time appropriate set values object 
cost model assumes ideal environment rendering time dictated rendering operations 
practice process scheduling page faults direct indirect blocking kernel calls user control impact rendering time 
current approach reduce unwanted variations frame rate add fixed worst case estimate impact system application environment rendering time 
benefit heuristics bene heuristic provides estimation quality image produced rendering multiresolution objects resolutions currently simple formula derived bene importance si accuracy si ri importance factor measuring importance object viewpoint accuracy factor measuring mesh resolution approximates mesh maximum resolution 
currently model object importance importance coverage semantics coverage estimation number pixels covered object distance object projection center screen semantics object importance factor impose higher quality interactively manipulated objects 
experimented definition accuracy heuristics 
visually pleasing results obtained accuracy max mesh max vertices highest level detail provides diminishing returns higher resolutions intuitively relates representation accuracy indication distance samples surface 
temporal coherence benefit heuristic defined previous section measures image quality depend variation time 
useful include temporal coherence quality component minimize sudden changes resolution visible objects example extremely large objects appear disappear 
done including hysteresis factor penalizing resolution changes equation 
define hysteresis follows hysteresis ri old number visible objects old resolution previous frame 
complex scenes hysteresis necessary factor included examples 
optimization algorithm idea barrier method benefit cost functions convex smooth straightforward method solving resolution optimization problem guaranteed specified accuracy interior point algorithm convex optimization 
idea interior point methods transform original problem effectively unconstrained problem incorporating objective barrier function smooth convex tends infinity parameter approaches boundary feasible set 
initial feasible point known transformed problem efficiently solved standard unconstrained convex minimization techniques newton method 
case logarithmic barrier function resolution optimization problem minimize subject fi xi max importance si xi log fi fixed max desired fi xi min xi fi benefit heuristic equation functions non negative cost constraints equation met logarithmic barrier function penalizing constraint violations 
demonstrated solution problem point optimum solution original problem 
words computation optimal resolution scene potentially visible objects implies solution linear problem quadratic linear constraints solution accuracy unconstrained minimization smooth convex function generation feasible starting point problem straightforward known lower resolution bounds min cost heuristic increasing monotonously simplest solution start min small 
incremental technique produces value closer optimum start resolution objects computed previous frame minimal resolution newly visible objects iteratively reduce object resolutions factor starting objects lowest benefit cost ratio 
iteration terminates problem feasible objects lowest resolution 
time critical sequential unconstrained minimization depending size problem required accuracy directly solving equation small may require excessive number newton iterations fail due numerical problem 
efficient way solve sequence problems decreasing values starting step previously computed sub optimal value 
nonlinear programming technique known sequential unconstrained minimization 
easy prove starting requested accuracy updating iteration factor algorithm con accuracy exactly log steps 
case optimization algorithm time critical context means ensure approximate result available certain time deadlines 
termination criterion time critical implementation algorithm expiration allocated time accuracy criterion 
algorithm time critical rendering optimization require visible object set size timing constraints desired optimize desired accuracy desired machine parameters setup tri pix init final algorithm parameters min minimum resolution equation strictly feasible point section desired time elapsed optimize ensure suboptimal ensure desired time elapsed optimize ensure rendering time desired idea algorithm 
proposed method properties controlled optimization rendering time cpu time spent optimization time spent rendering meshes resolution suggested optimization algorithm parameters algorithm externally imposed customizable quality measure algorithm depend specific quality measure fact function convex smooth certificate sub optimality algorithm provides suboptimal solution bound distance quality optimal 
measure provides direct indication resources allocated optimization sufficient great help design phase time critical programs 
certain algorithms share properties typically meet capability algorithm areas 
characteristics ideal candidate optimization stage time critical rendering pipeline 
time critical rendering pipeline time critical rendering pipeline aims display image certain time deadlines independently complexity scene 
reach goal exploit properties algorithm adaptively controlling frame time budget allocated optimization desired display time see 
parameters system control maximum visual feedback lag lag fraction frame time devote optimization 
frame perform culling optimization display steps sequence 
culling step time may vary dependent type algorithm complexity scene seen current viewpoint 
starting optimization step measure frame time available allocate range appropriate time budgets optimization display steps 
optimization step run allocated time result passed final display stage 
time critical computing approach bounds maximum visual feedback lag enables prediction culling optimization display optimize checkpoint desired lag time critical rendering pipeline 
total frame time imposed user 
time budget allocated optimization display stages decided measuring time spent culling stage 
techniques extrapolate past user input data time points lag reduction 
single processor machine maximum visual feedback lag dictates maximum visual feedback frequency 
multi processor machine visual feedback frequency independently controlled separate threads pipeline stage 
multiresolution mesh representation optimization algorithm independent particular data structure represent multiresolution meshes 
requirements ability represent mesh arbitrary number triangles traverse structure arbitrary resolutions faster graphics pipe line time compatible linear cost model 
additional requirement approach practical large scene databases data structure compactness 
progressive mesh pm representation suitable candidate structure 
pm representation compact rendered directly traversed construct single resolution mesh structure rendering 
managing dynamic mesh structures associated multiresolution representation introduces time space overheads scene rendering application 
experimental results indicate reconstruction rate triangles sec pentium pro mhz 
cost amortized frame single resolution meshes cached expense memory 
exploiting object frame coherency partial solution complex scenes discontinuities scene complexity caused objects entering exiting viewing frustum 
section propose simple multiresolution triangle mesh structure tom totally ordered mesh efficiently supports vertex packing indexing 
structure compact requiring small overhead single full resolution mesh provides fast triangle vertex traversal rates resolution 
similar structure independently developed gu streaming geometry vrml 
tom totally ordered mesh algorithms published simplify polygonal mesh iteratively contracting vertex pairs tom vertex list triangle list active vertices rv active triangles traversal rt vertex substitution chains tom data structure 
multiresolution meshes stored vertex list triangle list sorted contraction resolution 

vertex pair contraction operation denoted replaces vertices single target point incident edges linked removes triangles degenerated lines points 
operation quite general express edge collapse vertex clustering algorithms 
primary difference vertex pair contraction algorithms lies particular vertex pairs contracted chosen new vertices positioned 
define vertex substitution denoted restricted form vertex pair contraction target point constrained second vertex pair 
iteratively applying vertex substitution triangle mesh reduced removing vertex possibly degenerated faces time 
research results demonstrate simplification quality speed obtained technique 
iterative vertex substitution modify vertex data add new vertices information stored explicitly vertex substitution history vertex 
total order defined vertex list triangle list contraction resolution 
sorting order simplification generates compact efficient data structure see 
ordering vertex list obtain packed representation active vertices vertex resolution rv exactly nv ones vertex array size nv 
ordering triangle list way iterate triangles define mesh arbitrary resolution time depending number active triangles lengths vertex substitution chains 
memory overhead introduced store multiresolution mesh limited space required store vertex substitution history associated vertex pair contraction 
encode vertex substitution associating vertex vertex resolution transformation occurs vertex substituted 
vertices sorted resolution vertex needs stored vertex resolution implicit vertex index 
minimal vertex resolution triangle vertex resolution triangle removed mesh contraction edges need stored retrieved short time traversing substitution chains vertices 
render mesh specified number triangles determine minimal vertex resolution triangle number traverse triangles vertex chains active vertices reached 
lengths chains limited nv nt relatively independent model size 
case depth full resolution triangle traversal full resolution strictly linear 
resolution decreases traversal rate decreases slowly vertex substitution definition create long chains vertices 
fact vertex substitution increments depth vertex chains containing vertex keeps unchanged length chains containing vertex 
representation space overhead single resolution mesh representation equal just vertex index vertex 
typical mesh nt nv triangles considering single word represent vertex index floating point number overhead associated structure single full resolution mesh memory footprint position normal associated vertices smaller attributes colors texture coordinates 
implementation results experimental software library supporting time critical multiresolution scene rendering algorithm described implemented tested silicon graphics irix windows nt machines 
results obtained silicon graphics pc running windows nt configured single mhz pentium iii processor kb cache mb ram graphics chipset 
test behavior algorithm written simple walkthrough application top multiresolution modeling time critical rendering libraries 
application culling phase uses simple bounding box test optimization phase uses algorithm rendering performed opengl positional light material object gouraud shading normal vertex 
application single threaded high api timing measures 
cost model coefficients cost model coefficients corresponding rendering environment benchmark application determined experimentally rendering sample objects variety sizes lods 
table summarizes values tests 
description cost model coeff 
value initialization finalization setup final triangle draw tri tri pixel fill pix pix material setup init ob table cost model coefficient benchmark application experimental measures sgi single mhz pentium iii kb cache mb ram graphics 
rendering environment positional light material object gouraud shading independent triangles normal vertex test environment recorded various parameters walkthrough test scene containing objects total polygons see color plates 
images displayed window 
camera path established include various extreme viewing configurations 
polygons initially visible point progressively exiting viewing scene walkthrough environment 
test scene full resolution contains objects total triangles 
path camera defined segments frustum point reached 
point camera suddenly changing orientation large number objects immediately visible 
resolution adaptation rendering times machine tests varies milliseconds frame depending number visible objects 
experimental results discussion number potentially visible triangles frame number triangles rendered meet display time constraint desired ms 
shows frame time statistics observer viewpoint test path 
predicted frame time closely matches actual measured frame time validating cost model assumptions 
actual frame time maintained desired time presence large variations visual complexity 
relatively large number objects see optimization time remains relatively small compared display time 
tests performed time constraint optimization step opt ms target quality accuracy 
large portions path accuracy reached time sensibly inferior allocated limit leaving time system tasks 
elaborate implementation feedback algorithm adaptation opt color plate section presents scene viewpoints 
row objects rendered flat shading resolution adjustment 
middle row images recorded flat shading resolution optimization algorithm 
row images recorded conditions middle row depicts resolution chosen object darker shades gray representing detail 
mapping illustrates effect benefit heuristic distribution polygon budget 
described framework time critical rendering graphics scenes complex geometric description 
technique relies scene description objects represented multiresolution meshes 
perform constrained optimization frame choose resolution potentially triangles visible triangles rendered triangles frame visible vs displayed polygons test scene walkthrough 
polygons initially visible point progressively exiting viewing frustum point reached 
point camera suddenly changing orientation large number objects immediately visible 
time measured display measured frame predicted frame measured optimize measured cull frame desired optimize frame time statistics observer viewpoint test path 
predicted time closely matches actual frame time maintained targeted ms 
visible object generates best quality image meeting timing constraints 
technique provides smooth level detail control aims guaranteeing uniform bounded frame rate widely changing viewing conditions 
furthermore algorithm provides image quality measure bound distance quality optimal 
typical accuracy solutions order magnitude better guaranteed current combinatorial optimization approaches 
optimization algorithm independent particular data structure represent multiresolution meshes 
requirements ability represent mesh arbitrary number triangles traverse structure arbitrary resolution short predictable time 
data structure satisfying criteria section 
experimental results demonstrate feasibility discussed optimization approach time critical rendering pc scenes composed hundreds objects millions triangles 
current concentrating extending approach object view dependent lods step optimization process exploiting possibilities offered general convex optimization framework improving benefit heuristics incorporation specific perceptual component 
parallel exploring simpler possibly faster optimization techniques exploit particular structure optimization problem associated current simplified heuristics 
plan explore feedback techniques dynamically allocating time budget time critical sequential optimization procedure 
acknowledgments authors anonymous reviewers helpful comments suggestions 
research partially sponsored european project esprit contract 
acknowledge contribution regional authorities 
kobbelt seidel 
efficient decimation complex triangle meshes 
technical report computer graphics group university erlangen germany 
cignoni scopigno representation visualization terrain surfaces variable resolution 
visual computer 
issn 
funkhouser quin adaptive display algorithm interactive frame rates visualization complex virtual environments 
computer graphics sig graph proc 

garland heckbert surface simplification quadric error metrics 
sig graph proc 
aug pp 

url www cs cmu edu garland quadrics 
gu surface simplification variable tolerance 
second annual intl 
symp 
medical robotics computer assisted surgery november pp 

gu surface simplification inside tolerance volume 
tech 
rep yorktown heights ny mar 
ibm research report rc url www watson ibm com search shtml 
gu taubin horn lazarus framework streaming geometry vrml 
ieee computer graphics applications mar apr 
heckbert garland multiresolution modeling fast rendering 
proc 
graphics interface banff canada may canadian inf 
proc 
soc pp 

url www cs cmu edu ph 
heckbert garland survey polygonal surface simplification algorithms 
tech 
rep cs dept carnegie mellon appear 
url www cs cmu edu ph 
hong kaufman virtual voyage interactive navigation human colon 
siggraph conference proceedings aug whitted ed annual conference series acm sig graph addison wesley pp 

isbn 
hoppe progressive meshes 
siggraph proc 
aug pp 

url www research microsoft com research graphics hoppe papers html 
hoppe efficient implementation progressive meshes 
computers graphics january 
hoppe smooth view dependent level detail control application terrain rendering 
proceedings ieee visualization ieee pp 

hoppe derose duchamp ald stuetzle mesh optimization 
siggraph proc 
aug pp 

url www research microsoft com research graphics hoppe papers html 
numerical methods non linear optimization 
academic press 
luebke view dependent simplification arbitrary polygonal environments 
siggraph conference proceedings aug whitted ed annual conference series acm siggraph addison wesley pp 

isbn 
mason blake automatic hierarchical level detail optimization computer animation 
computer graphics forum aug 
proceedings eurographics 
issn 
open inventor architecture group 
open inventor manual official document open systems 
addison wesley reading ma usa 
press teukolsky vetterling flannery numerical recipes second ed 
cambridge university press cambridge 
helman iris performer high performance multiprocessing toolkit real time graphics 
proceedings siggraph orlando florida july july glassner ed computer graphics proceedings annual conference series acm siggraph acm press pp 

isbn 
ronfard rossignac full range approximation triangulated polyhedra 
computer graphics forum aug 
proc 
eurographics 
system collaborative prototyping 
proc 
international scientific workshop virtual reality prototyping may 
conference held laval france june 
vrml international specification iso iec dec 
wloka lag multiprocessor virtual reality 
presence teleoperators virtual environments sept 
xia el varshney adaptive real time level detail rendering polygonal models 
ieee transactions visualization computer graphics apr 
xia varshney dynamic view dependent simplification polygonal models 
ieee visualization oct ieee 
isbn 
ye interior point algorithms theory analysis 
wiley interscience series discrete mathematics optimization 
john wiley sons new york 
