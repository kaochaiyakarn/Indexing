taxonomy describing matching scheduling heuristics mixed machine heterogeneous computing systems tracy braun howard jay siegel noah beck maheswaran albert james robertson mitchell bin yao school electrical computer engineering purdue university west lafayette usa hj noah ecn purdue edu cs purdue edu problem mapping defined matching scheduling tasks communications multiple machines networks heterogeneous computing hc environment shown np complete general requiring development heuristic techniques 
different types mapping heuristics developed years 
selecting best heuristic scenario remains difficult problem 
factors making selection difficult discussed 
motivated difficulties new taxonomy classifying mapping heuristics hc environments proposed purdue hc taxonomy 
taxonomy defined major parts models applications communication requests models target hardware platforms characteristics mapping heuristics 
part taxonomy described examples help clarify taxonomy 
benefits uses taxonomy discussed 

different portions computationally intensive application diverse computational requirements 
general high performance machine may perform poorly application difficult single machine architecture satisfy research supported part darpa ito quorum program nps subcontract numbers part darpa iso program office naval research number 
computational requirements different portions equally 
mixed machine heterogeneous computing hc system alleviates problem utilizing suite different high performance machines interconnected high speed links 
system coordinates execution various portions application different machines system exploit different architectural capabilities available achieve increased application performance :10.1.1.128.1188
take advantage hc systems manner application task may decomposed subtasks subtask computationally homogeneous 
different subtasks may require different architectural capabilities 
subtasks may share stored generated data creating potential inter machine dependencies data transfer overhead 
subtasks may determined user specification analysis mapping heuristic separate program subtask 
application decomposed subtasks subtask assigned machine matching subtasks assigned particular machine ordered scheduling execution time application minimized 
combination matching scheduling subtasks machines defined subtask mapping 
subtask separate item mapped mapping decision subtask may impact mapping decision 
version mapping problem meta task mapping deals matching scheduling collection tasks machines hc environment 
term meta task different ways 
tasks meta task independent data dependencies 
task may subtasks dependencies subtasks 
systems tasks subtasks meta task defined referred just tasks 
example meta task mapping mapping arbitrary set independent tasks different users waiting execute heterogeneous suite machines 
task may associated properties deadline priority 
general finding optimal solutions mapping problem scheduling inter machine communications hc environments np complete requiring development near optimal heuristic techniques 
years numerous different types mapping heuristics developed see :10.1.1.54.4093:10.1.1.128.1188
selecting particular heuristic certain practical scenario remains difficult problem 
reasons difficulty heuristic evaluated literature typically different assumptions underlying target platform earlier heuristics degree capabilities machines differ hc suite making comparisons problematic 
similarly different assumptions application models complicate comparisons variation average task execution times 
mapping heuristics usually different characteristics different optimization criteria different execution times 
fair comparison various heuristics challenging problem 
comparison problems compounded fact exist standard set application benchmarks target platforms hc environments 
motivated difficulties new taxonomy classifying mapping heuristics hc environments proposed 
purdue hc taxonomy defined major parts models applications communication requests models target hardware platforms characteristics mapping heuristics 
new taxonomy builds previous taxonomies 
section previous taxonomies fields distributed computing hc reviewed 
proposed taxonomy mapping heuristics defined section 
benefits possible uses new taxonomy examined section 
research supported part darpa ito quorum program project called mshn management system heterogeneous networks 
mshn collaborative research effort naval postgraduate school purdue university university southern california 
technical objective mshn project design prototype refine distributed resource management system leverages heterogeneity resources tasks deliver requested qualities service 
research supported part darpa iso battlefield awareness data dissemination program 
program communications large number heterogeneous information sources databases sensors large number heterogeneous destinations laptops proxy servers scheduled set heterogeneous networks 
taxonomy pertains environment 

previous taxonomies taxonomies related various degrees appeared literature 
section overviews related taxonomy studies 
taxonomy classifying scheduling techniques general purpose distributed computing systems 
classification target platforms application characteristics outside scope study 
taxonomy combine defined hierarchical characteristics general flat characteristics differentiate wide range scheduling techniques 
examples different scheduling techniques published literature classified taxonomy 
hc systems scheduling half mapping problem 
matching tasks machines greatly affects execution schedules system performance 
taxonomy proposed section includes categories platform characteristics application characteristics influence matching scheduling decisions 
different taxonomies 
em taxonomy classifies computer systems categories execution mode machine model 
taxonomy proposed section assumes heterogeneous systems single execution mode multiple machine models memm multiple execution modes multiple machine models categories 
modestly extended version taxonomy 
modified taxonomy introduces new descriptors applied heterogeneous resource allocation techniques 
aside considering different parallelism characteristics applications target platform application properties classified part study 
taxonomy comparing heterogeneous subtask matching methodologies included 
taxonomy focuses static subtask matching approaches classifies specific examples optimal sub optimal techniques 
single taxonomy distinct parts purdue hc taxonomy section 
optimal restricted classification includes algorithms place restrictions underlying program multicomputer system 
purdue hc taxonomy uses studies foundation extends concepts specific hc mapping problem domain considered 
relevant ideas studies incorporated unique structure part taxonomy described section allowing detailed classifications hc mapping heuristics 

proposed taxonomy 
mentioned section assumed mixed machine hc system composed different machines possibly multiple execution models 
system defined heterogeneous characteristics varies machines result different execution performance machines processor type processor speed mode computation memory size number processors parallel machines interprocessor network parallel machines new purdue hc taxonomy describing mapping heuristics mixed machine hc systems defined major components application model communication requests characterization platform model characterization mapping strategy characterization 
previous taxonomies focused third item 
intelligent mapping decisions require information hardware platform application executed 
special platform application requirements priorities associated task military environment important mapping strategy able support 
purdue hc taxonomy classifies components hc environment attempts qualitatively define aspects environment affect mapping decisions performance 
doing quantitatively thorough rigorous complete standard manner long term goal hc field 
taxonomy existing mapping heuristics literature previous research experience field hc 
research mapping heuristics active growing field taxonomy capture features current state research certain level detail 
assumed taxonomy refined expanded time serve evolving standard describing hc mapping heuristics assumed environments 

application model characterization category taxonomy defines models applications executed hc system communications scheduled inter machine network 
applications classified functionality traits define application computational characteristics may impact mapping decisions 
furthermore taxonomy able include application traits subject simplifying implementation assumptions may reflect effective implementations subtask capable execution partial set data forced wait input data arrives 
defining characteristics applications tasks subtasks listed 
characteristics relevant communication requests environments including deadlines versions priorities qos requirements temporal distribution 
application size tasks meta task subtasks task 
application type type applications mapped 
tasks independent mapping performed 
single task decomposed subtasks recall subtasks dependencies subtask mapping 
situation meta task independent tasks tasks subtasks 
case meta task subtask mappings necessary 
communication patterns source destination subtasks data item transferred data availability time input data needed subtask output data generated subtask utilized varies relation subtask start finish times data available forwarded subtask completes subtask execution receiving input data 
example clustering non uniform directed graph heuristic assumes subtask send data waiting subtasks completely finishes executing 
deadlines applications deadlines 
property refined hard firm deadlines required 
applications completed firm deadline provide valuable results 
application completes firm deadline hard deadline able provide useful data 
hard deadline passed data application useless 
execution time model mapping techniques require estimate execution time application machine 
estimated execution times modeled 
choices commonly probabilistic deterministic modeling 
probabilistic modeling uses probability distribution application execution times making mapping decisions :10.1.1.54.4093
deterministic modeling uses fixed expected value average previous executions application 
meta task heterogeneity machine hc suite greatly properties probability distribution execution times different tasks meta task vary 
multiple versions applications multiple versions executed 
example application requires fft able perform fft different procedures different precisions different execution times different resource requirements 
relative values different versions user 
priorities applications priorities 
environments require priorities include military systems machines time sharing enforced 
priorities generally assigned user allowed range relative weightings priority usually determined party system administrator 
priorities relative weightings required mapping strategy preemptive subsection 
qos requirements certain application specific quality service qos requirements may need considered security level 
subtask heterogeneity similar meta task heterogeneity 
task profile task profiling specifies types computations application code task subtask data processed :10.1.1.128.1188
information may mapping heuristic conjunction analytical benchmarking subsection estimate task subtask execution time 
temporal distribution complete set tasks meta task mapped known priori static applications tasks arrive real time non deterministic manner dynamic applications combination 
characteristics defined largely independent considered flat characteristics taxonomy hierarchical characteristics dependencies 
previous taxonomies listed section hierarchical structure show relationships 
checklist format necessary capture aspects applications influence mapping decisions 

platform model characterization second category taxonomy defines models target hardware platforms available hc systems 
existing heuristics simplifying unrealistic assumptions target platforms assumes infinite number machines available 
taxonomy limited set realistic target platforms 
framework classifying models target platforms provided 
analytical benchmarks analytical benchmarking provides measure available machine hc platform performs type computation :10.1.1.128.1188
information may mapping heuristic conjunction task profiling subsection estimate task subtask execution time 
communication time time take send data machine 
may expressed function path establishment time bandwidth 
concurrent send receives machine perform concurrent sends receives machines assuming network connections 
interconnection network volumes literature exist topic interconnection networks classified 
general interconnection network taxonomy 
merely noted network characteristics affect mapping decisions system performance including bandwidth ability perform concurrent data transfers latency switching control topology 
network properties functions source destination machines 
machine architecture machine various architectural features impact performance considered processor type processor speed external bandwidth mode computation simd mimd vector memory size number processors parallel machines inter processor network parallel machines 
machine heterogeneity task subtask greatly properties probability distribution execution times task vary different machines hc suite 
number connections connections machine interconnection network structure directly machines 
number machines property defined subclasses quantity variability number machines finite infinite fixed variable new machines come line 
furthermore heuristic finite fixed number machines may treat number parameter changed mapping 
overlapped computation communication machines overlap computation inter machine communication 
system control mapping strategy control allocate resources environment dedicated external users consuming resources shared 
task compatibility machine environment able perform application applications special capabilities available certain machines required 
capabilities involve issues devices memory space security 

mapping strategy characterization third category purdue hc taxonomy defines characteristics describe mapping strategies 
general hc mapping problem np complete assumed mapping strategies classified near optimal techniques 
application model supported see subsection 
communication times inter subtask data communication times considered subtask mapping control location mapping strategy centralized distributed 
distributed strategies classified cooperative non cooperative independent approaches 
data forwarding data forwarding considered mapping 
subtask executing machine receive data intermediate machine sooner original source 
dependencies property closely related application type subsection 
meta task mapping deals independent set tasks 
subtask mapping handles case tasks subtasks dependencies 
duplication subtask duplicated executed multiple machines reduce communication overhead 
dynamic static dynamic mapping techniques operate possibly application execution time real time information 
dynamic techniques require inputs environment may definite 
example dynamic techniques may know entire set tasks mapped technique begins executing new tasks may arrive random intervals 
similarly new machines may added suite 
dynamic technique feedback applications may reassigned loss machine application execution times significantly longer expected 
contrast static mapping techniques take fixed set applications fixed set machines fixed set application machine attributes inputs generate single fixed mapping 
static mapping techniques defined resulting mapping modified due changes hc environment feedback 
execution location machine suite execute mapping strategy external machine required 
execution times execution times different mapping strategies vary greatly important property comparison selection mapping techniques 
execution time heuristic accurately predicted mapping heuristic perform fixed predetermined number steps greedy approaches arriving mapping heuristic iterative sense mapping continually refined stopping criteria met resulting number steps known priori genetic algorithms 
fault tolerance fault tolerance considered mapping strategy 
may take forms assigning applications machines perform checkpointing executing multiple redundant copies application 
feedback mapping strategy incorporate real time feedback platform machine availability times applications actual task execution times decisions 
strategies utilize feedback dynamic dynamic strategies feedback 
objective function quantity mapping strategy trying optimize 
varies widely strategies approaches inappropriate situations 
platform model supported see subsection 
preemptive preemptive mapping strategies interrupt applications begun execution free resources important applications 
applications interrupted may reassigned may resume execution completion important application 
preemptive techniques dynamic definition 
application importance specified priority assignment weighting scheme discussed subsection 
remapping mapping heuristic require initial mapping enhances 
example dynamic heuristic feedback remap previous static mapping 

mapping tasks meta tasks scheduling communications hc environments active growing areas research 
existing mapping approaches literature part taxonomy proposed 
purdue hc taxonomy classified characteristics application models target hardware platform models mapping strategies hc research 
defining categories heterogeneous mapping techniques accurately classified 
purdue hc taxonomy beneficial researchers ways 
currently difficult meaningfully compare different mapping approaches 
similarly difficult extend existing recognize important areas research understanding relationships exist previous efforts 
part classification system provided allows hc researchers easily describe mapping heuristics see design environment alternatives development new heuristics considered 
researcher taxonomy find mapping heuristics similar target platform application models 
mapping heuristics similar models possibly adapted developed better solve mapping problem considered 
taxonomy focus research development standard set benchmarks hc environments 
expected research progresses purdue hc taxonomy evolving standard refined extended incorporate new ideas findings 
acknowledgments authors ahmad ali richard freund janet siegel comments 
armstrong hensgen kidd relative performance various mapping algorithms independent sizable variances run time predictions th heterogeneous computing workshop hcw mar pp 

taxonomy scheduling general purpose distributed computing systems ieee transactions software engineering vol 
feb pp 

ni interconnection networks engineering approach ieee computer society press los alamitos ca 
taxonomy heterogeneous computing ieee computer vol 
dec pp 

survey heterogeneous computing concepts systems proceedings ieee vol 
aug pp 

ed heterogeneous computing artech house norwood ma 
fernandez allocating modules processors distributed system ieee transactions software engineering vol 
se nov pp 

freund campbell hensgen keith kidd lima moore rust siegel scheduling resources multiuser heterogeneous computing environments smartnet th heterogeneous computing workshop hcw mar pp 

yang distributed heterogeneous supercomputing management system ieee computer vol 
jun pp 

ahmad optimal task assignment heterogeneous computing systems th heterogeneous computing workshop hcw apr pp 

li antonio estimating execution time distribution task graph heterogeneous computing system th heterogeneous computing workshop hcw apr pp 

siegel dietz antonio software support heterogeneous computing computer science engineering handbook tucker jr ed crc press boca raton fl pp 

siegel maheswaran braun heterogeneous distributed computing encyclopedia electrical electronics engineering webster ed john wiley sons new york ny appear 
singh youssef mapping scheduling heterogeneous task graphs genetic algorithms th heterogeneous computing workshop hcw apr pp 

tan siegel antonio li minimizing application execution time scheduling subtasks communication traffic heterogeneous computing system ieee transactions parallel distributed systems vol 
aug pp 

tan siegel beck mathematical model heuristic simulation study basic data staging problem heterogeneous networking environment th heterogeneous computing workshop hcw mar pp 

