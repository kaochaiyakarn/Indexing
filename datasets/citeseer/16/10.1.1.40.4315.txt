fast marching methods sethian dept mathematics university california berkeley november fast marching methods numerical schemes computing solutions non linear eikonal equation related static equations :10.1.1.46.1266
entropy satisfying upwind schemes fast sorting techniques yield consistent accurate highly ecient algorithms 
optimal sense computational complexity algorithms log total number points domain 
schemes variety applications including problems shape setting computing distances complex curves surfaces shape shading development computing rst arrivals seismic travel times construction shortest geodesics surfaces optimal path planning obstacles visibility re ection calculations 
review development techniques including theoretical numerical underpinnings provide details computational schemes including higher order versions demonstrate techniques collection di erent areas 
supported part applied mathematical sciences subprogram oce energy research department energy contract number de ac sf oce naval research fdn :10.1.1.46.1266
fast marching methods fast marching methods computational techniques approximate solution non linear eikonal equations form domain right hand side typically supplied known input equation boundary condition equal known function prescribed curve surface equation part broader class hamilton jacobi equations form case eikonal equation function reduces :10.1.1.46.1266
discussed main diculties solving equations solution need di erentiable smooth boundary data 
non di erentiability intimately connected notion appropriate weak solutions 
goal devise numerical techniques naturally account non di erentiability constructing accurate ecient approximation schemes admit physically correct non smooth solutions 
main techniques fast marching methods introduced :10.1.1.46.1923
consistent highly ecient techniques key components 
exploiting upwind viscosity schemes automatically select solutions include non di erentiability natural ways 
second coupling causality schemes fast sorting methods borrowed discrete network problems extremely ecient computationally complexity algorithms log total number points domain large collection applications require solution non linear eikonal equation 
imagine problem accurately computing distance curve surface 
letting right hand side equal unity level curves eikonal equation give set points located distance boundary curve seen theory fast marching methods algorithms hold notational reasons focus noting gradient jruj orthogonal level curves gradient length :10.1.1.46.1266
way state problem imagine disturbance propagating unit speed away initial curve compute rst arrival time point domain points solution non di erentiable locations points boundary curve distance away 
performing calculation surfaces tracking backwards orthogonally curves allows compute shortest paths manifolds 
extending problem changing right hand side non constant corresponds computing distance function non uniform metric arrival times slowed sped variation examples include calculation rst arrivals seismic travel times slowness function corresponds reciprocal velocity varies depending type rock development process resistive strength material di altered optical processes material exposed etching beam removes weaker material 
drastic alterations right hand side setting certain subsets yield equations optimal path navigation nite value corresponds impenetrable obstacle :10.1.1.46.1266
extending dimension pure physical space include rotational ects allows include additional degrees freedom generated moving arms navigation process 
outline follows 
discussing ideas weak solutions viscosity solutions followed numerical approximations upwind schemes 
fast marching method rst orthogonal coordinate systems triangulated unstructured mesh setting 
discuss detail connection techniques network path algorithms level set methods 
extending fast marching method higher order collection applications 
start point slightly confusing issue heart eciency fast marching methods 
non linear eikonal equation eqn 
static hamilton jacobi equation eqn :10.1.1.46.1266
boundary value problems notion rst arrival times sounds initial value problem information propagates outwards boundary initial data 
fact equations true boundary value problems success fast marching methods comes building numerical schemes allow eciently construct solution outward boundary data 
majority review taken original fast marching methods books subject :10.1.1.46.1266:10.1.1.46.1923
refer interested reader resources computational schemes exploit fast marching methods applications examples 
eikonal static hamilton jacobi equations fundamental equations non di erentiability returning example simple eikonal equation jruj :10.1.1.46.1266
subtleties equation solution may non di erentiable smooth initial data 
simple illustration consider case jruj outside unit circle unit circle readily checked function :10.1.1.46.1266
corresponding distance function unit circle solves eikonal equation :10.1.1.46.1266
specifying right hand side providing zero boundary condition implies solution just distance initial curve solution shown family concentric circles :10.1.1.46.1266
course easy check solution di erentiable 
fig 
distance function solution eikonal equation jruj contrast consider boundary data non convex curve suppose try nd distance point domain curve :10.1.1.46.1266
ways proceed 
suppose put particle point boundary curve move particles away curve normal direction unit speed 
time position particles gives set points distance away boundary curve 
illustrates approach particular non convex curve 
points local distance boundary data globally closest points boundary data fig 
fig 
possible solutions eikonal equation jruj note construction creates curve crosses :10.1.1.46.1266
solution multi valued points reached normals emanating point boundary 
di erent approach comes drawing set points located distance away 
way build solution shown right principle construction 
solution developed imagining wavefronts emanating unit speed point boundary data 
envelope wave fronts corresponds rst arrivals automatically produces solution 
note vertical ridge points boundary curve distance away suggested 
ridge solution non di erentiable gradient ru de ned 
constructions thought solutions eikonal equation 
solution want corresponding shortest distance rst arrival obtained construction 
way obtain solution notion entropy condition 
de ned imagine boundary curve source propagating ame expanding ame satis es requirement point domain ignited expanding front stays burnt 
construction yields entropy satisfying construction fig 

way obtain entropy satisfying construction comes adding smoothing term equation 
consider associated viscous partial di erential equation shown viscous term acts smooth sharp corners solution guarantees solution stays smooth entire domain see 
goes zero solution converges rst arrival solution 
goal build numerical methods automatically extract viscous limit 
doing note formal way de ning viscous limit idea viscosity solutions time dependent hamilton jacobi equations 
de ne solution viscous limit analyzes behavior potential solutions measured possible test functions 
crandall lions developed theory viscosity solutions time dependent hamilton jacobi equation 
brie de nitions de ne viscosity solution follows 
de nition function said viscosity solution eqn 
smooth test functions :10.1.1.46.1266
local maximum point dv 
local minimum point dv note de nition viscosity solution di erentiated done terms test function done usual trick integration parts move derivatives test function exchange boundary conditions 
de nition show smooth solution hamilton jacobi equation viscosity solution ii viscosity solution di erentiable point satis es hamilton jacobi equation point iii viscosity solution unique appropriate initial conditions 
proves solution produced limit smooth solutions vanishes viscosity solution 
shall prove statements 
precise statements proofs may 
salient point timedependent static eikonal equation hamilton jacobi equations viscosity solution de ned way require di erentiation proven unique viscous limit smoothed hamilton jacobi equation 
goal develop numerical approximations correctly select viscous limit 
proposed entropy condition similar hyperbolic conservation laws suggests numerical methodologies associated hyperbolic equation 
upwind schemes numerical approximations upwind schemes numerical quadrature motivation upwind schemes approximating gradient operator consider dimensional eikonal equation right hand side goal construct away boundary condition :10.1.1.46.1266
note immediately solution problem unique solves problem 
restrict non negative solutions imagine building solution outwards positive negative axis origin solving problem separately 
consider ordinary di erential equations du dx du dx right hand side function essentially performing numerical quadrature 
standard nite di erence notion 

approximate solutions euler method :10.1.1.46.1266
:10.1.1.46.1266

upwind scheme computing derivatives points upwind boundary condition 
words ordinary di erential equation solved away boundary condition 
upwind schemes evolving interfaces motivation approximating gradient upwind di erences comes instructive example curve evolving time position described graph function 
consider initial front graph periodic suppose front propagates speed normal direction ii remains function time :10.1.1.46.1266:10.1.1.46.1716
height propagating function time 
show see equation motion changing height example speed consider initial value problem initial front formed rays meeting :10.1.1.46.1266
entropy condition principle construction solution time set points located distance initial 
goal show choice numerical approximations gradient term subtlety :10.1.1.46.1266
approach divide interval points form central di erence approximation spatial derivative eqn :10.1.1.46.1266:10.1.1.46.1716:10.1.1.46.1716
:10.1.1.46.1266
:10.1.1.46.1266
expression standard notation central di erence :10.1.1.46.1266
xm symmetry right hand side :10.1.1.46.1266
correctly calculated graph linear side corner central di erence approximation exact :10.1.1.46.1266
note size space step 
time step 
matter small take numerical parameters long odd number points approximation gets better :10.1.1.46.1266
simply due way derivative approximated 
show results scheme time derivative replaced forward di erence scheme 
exact solution central di erences 
central di erences 
central di erence approximation gradient easy see gone wrong 
exact solution :10.1.1.46.1266
hold slope de ned construction sets equal lim unfortunately central di erence approximation chooses di erent purpose wrong limiting solution :10.1.1.46.1266
sets unde ned slope equal average left right slopes 
calculation progresses slope propagates outwards spike wild oscillations 
eventually oscillations cause blowup code 
details see 
schemes viscosity solutions continuing example evolving interface focus gradient term :10.1.1.46.1266
consider nite di erence approximation introduced max min standard nite di erence notation value grid point ih grid spacing eqn :10.1.1.46.1266
upwind scheme see chooses grid points approximation terms direction ow information :10.1.1.46.1266
consider propagating curve example see non zero value chosen symmetric point 
show happens scheme eqn 
:10.1.1.46.1266
exact answer shown simulations 
rst uses entropy satisfying scheme points second points :10.1.1.46.1266
rst approximation entropy condition satis ed corner somewhat smoothed due small number points 
re ned calculation corner remains sharp exact solution closely approximated 
see scheme correct job exact solution scheme points scheme points upwind entropy satisfying approximations gradient satisfying entropy condition relatively straightforward prove numerical scheme converges correct viscosity solution :10.1.1.46.1266
crandall lions proved consistent monotone schemes converge correct viscosity solution result parallels similar results hyperbolic conservation laws see example :10.1.1.46.1266
need check scheme satis es necessary requirements convergence viscosity solutions 
operator easily seen consistent uses rst order nite di erence operators taylor series expansion error shown go zero time space step re ned 
proving monotonicity basic rst order scheme straightforward done simply checking happens monotone data :10.1.1.46.1266
go back check central di erence scheme earlier satisfy requirements 
refer interested comment convergence additional schemes :10.1.1.46.1266
vast array upwind entropy satisfying schemes available approximate gradient purposes approximation small variation sucient details schemes may 
approximations eikonal equation construct appropriate schemes eikonal equation extending ideas upwind approximations gradient multiple dimensions scheme jruj max ijk min ijk max ijk min ijk max ijk min ijk ijk forward backwards operators coordinate directions similar de ned earlier direction :10.1.1.46.1266
slightly di erent upwind scheme due godunov see turn convenient max ijk ijk max ijk ijk max ijk ijk ijk forward backward operators ijk slowness ijk :10.1.1.46.1266
solve eqn 
:10.1.1.46.1266
solution iteration 
consider stencil grid point neighbors shown fig 

observe eqn 
piecewise quadratic equation ijk assuming neighboring grid values :10.1.1.46.1266
solution comes updating value grid point quadratic solution reached updating grid point iter mesh solve quadratic iter ijk iter iter iter iter iter iter endfor endfor assume points direction takes roughly steps converge operation count method :10.1.1.46.1266
fast marching methods key fast marching methods lies observation previous iteration contains speci causality relationship :10.1.1.46.1266
section describe fast marching method details see 
causality central idea fast marching method systematically construct solution fashion produce solution observe upwind di erence structure equation means information propagates way smaller values larger values :10.1.1.46.1266
fast marching algorithm rests solving equation building solution outwards smallest value :10.1.1.46.1266
fact strategy quadrature view described earlier step solution outwards boundary condition direction 
algorithm fast con ning building zone narrow band front approach motivated narrow band technology introduced chopp recovering shapes images malladi sethian vemuri analyzed extensively adalsteinsson sethian :10.1.1.46.1266
idea sweep front ahead fashion considering set points narrow band existing front march narrow band forward freezing values existing points bringing new ones narrow band structure 
key selection grid point narrow band update 
consider dimensional version eikonal equation boundary value known origin shown schematically 
black sphere signi es grid point value known case initial value light grey spheres grid points solution value unknown 
fast marching method may start algorithm marching known value computing new values neighboring grid points shown :10.1.1.46.1266
provides possible values grid point shown dark grey spheres :10.1.1.46.1266
march values dark grey spheres don know choose 
answer lies observation smallest value dark grey spheres correct 
point ected grid points containing larger values may freeze value smallest dark grey sphere proceed ahead algorithm shown schematically 
turn black sphere consider value known 
update ii compute new possible values iii choose smallest dark gray sphere example iv freeze value update neighboring points choose smallest dark gray sphere example vi freeze value update neighboring points update procedure fast marching method algorithm works process recomputing values neighboring points yield value smaller accepted points :10.1.1.46.1266
march solution outwards selecting narrow band grid point minimum trial value neighbors see 
far away values side accepted values upwind side narrow band trial values upwind construction accepted values way look scheme minimum trial value begins application principle expanding wave front touches updates 
speed algorithm comes heapsort technique eciently locate smallest element set trial 
fast marching method follows tag points initial conditions alive 
tag close points grid point away 
tag far grid points 
loop :10.1.1.46.1266
loop trial point close smallest value 
tag close neighbors trial alive neighbor far remove list add set close 

recompute values close neighbors trial solving piecewise quadratic equation eqn 
:10.1.1.46.1266

add point trial alive remove close 
return top loop heap sorts computational eciency key ecient version technique lies fast way locating grid point narrow band smallest value ecient scheme doing discussed detail follow discussion :10.1.1.46.1266
ways store trial elements easily nd smallest element see example 
case imagine ordered structure elements trial 
point accepted neighbors updated values may change 
small subset structure re ordered order regain ordering 
leads quite naturally variation heap algorithm see sedgewick back pointers store values 
speci cally min heap data structure 
sense min heap complete binary tree property value node equal values children 
practice ecient represent heap sequentially array storing node location children locations :10.1.1.46.1266
de nition parent node located 
root contains smallest element stored location array :10.1.1.46.1266
finding parent children element simple array accesses take time :10.1.1.46.1266
values stored indices give location grid structure 
marching algorithm works rst looking smallest element narrowband operation involves deleting root sweep ensure remaining elements satisfy heap property 
algorithm proceeds tagging neighboring points alive 
faraway neighbors added heap insert operation values remaining points updated equation :10.1.1.46.1266
insert works increasing heap size new element upward correct location operation 
lastly ensure updated values violate heap property need perform operation starting location proceeding tree 
operations worst case carry element way root bottom vice versa 
takes log time assuming elements heap 
important contributions dr malladi invaluable design initial version fast marching method 
note heap complete binary tree guaranteed remain balanced :10.1.1.46.1266
remains operation searching narrowband neighbors smallest element heap 
done time maintaining back pointers grid heap array :10.1.1.46.1266
back pointers search takes time worst case 
example shows typical heap structure operation element location gets updated :10.1.1.46.1266
total changing value element heap value upwards log size heap produces total operation count log fast marching method grid total points 
imagine dimensional grid points direction fast marching method reduces total operation count log essentially grid point visited compute arrival time value 
details see :10.1.1.46.1266
step change value step new value heap property restored heap structure operation related algorithms network path algorithms fast marching method reminiscent dijkstra algorithm see method nding shortest path network prescribed weights link :10.1.1.46.1266
illustration imagine rectangular network equal unit cost entering link see :10.1.1.46.1266
start finish network path inconsistent vs consistent algorithms dijkstra method starts start point expands outwards visiting node keeping running cost :10.1.1.46.1266
front advanced looking node reached smallest current cost advancing neighbors 
sense method similar fast marching method suitably programmed means heap described method log method computing cost going point point network 
points positioned relative network optimal path straight line diagonal graph search algorithm distinguish various manhattan graphs equal cost connecting points actual problem wants approximate solution continuous problem network solution 
algorithms said inconsistent underlying continuous problem re nement network produce solution converges correct diagonal shortest path 
possible rectify problem adding diagonal links graph fast marching method provides approach directly approximates solution underlying partial di erential equation consistent numerical approximations selects correct diagonal relatively nodes 
start finish start finish fig :10.1.1.46.1266
dijkstra method fig :10.1.1.46.1266
fast marching method multiple shortest paths optimal diagonal path non consistent vs consistent algorithms optimal orderings di erent way look fast marching method returning iterative loop eqn :10.1.1.46.1266
:10.1.1.46.1266
fast marching method re ordering points inner loop outer loop iteration necessary 
price computing correct re ordering done loop progress log required re order heap values updated 
relation level set methods companion technique grew theory numerics curve surface evolution developed known level set method requires notions entropy conditions viscosity solutions order produce stable accurate numerical schemes 
level set methods described osher sethian track motion interfaces propagating complex speed laws share fast marching methods ability track fronts change topology break merge :10.1.1.46.1266
handle complex speed motions including speeds depend local curvature track fronts move forward backwards 
considerably computationally expensive fast marching methods 
delineate di erences techniques imagine closed curve plane propagating normal speed furthermore assume front moves outwards 
way characterize position expanding front compute arrival time front crosses point shown :10.1.1.46.1266
speed inversely proportional gradient initial curve transformation front motion boundary value problem front motion characterized solution boundary value problem speed depends position equation reduces familiar eikonal equation conversely suppose embed initial position front zero level set function higher dimension :10.1.1.46.1266
level set method identi es evolution level set function propagation front time dependent initial value problem fjr equation describes time evolution level set function way zero level set evolving function identi ed propagating interface see :10.1.1.46.1266
transformation front motion initial value problem obvious distinction views initial value level set formulation allows positive negative speed functions front may move forwards backwards evolves :10.1.1.46.1266
boundary value perspective restricted fronts move direction requires single crossing time grid point point revisited 
wish solve initial value formulation boundary value formulation fjr front front jt tg applies arbitrary requires recall fast marching method ecient adaptive technique drops computational labor involved solving boundary value formulation log assuming points direction dimensional problem :10.1.1.46.1266
similarly ecient implementation level set method introduced called narrow band level set method available :10.1.1.46.1266
original level set method requires assume roughly time steps front propagate :10.1.1.46.1266
comparison narrow band method focuses computational labor thin band zero level set reducing labor width narrow band providing ecient technique implementing level set methods 
schematically history methods adaptive versions shown rst glance computational savings fast marching method may evident basis operation counts :10.1.1.46.1266
additional advantages provide largest computational savings 
level set method solving time dependent problem time step restrictions terms cfl conditions speed determine number steps required evolve front contrast fast marching method restriction 
speed front irrelevant eciency method 
second number elements heap depends length front cases length small practical purposes heap lookup fast 
viscosity solutions hamilton jacobi equations hj corners shocks singularities entropy conditions curve surface evolution tracking interface motion schemes conservation laws hj level set perspective fjr initial value problem adaptivity narrow band level set methods stationary perspective boundary value problem adaptivity fast marching methods evolution theory algorithms interface propagations :10.1.1.46.1266:10.1.1.46.1923
extensions fast marching methods higher accuracy fast marching methods fast marching method rst order scheme owing rst order approximation gradient max ijk ijk max ijk ijk max ijk ijk ijk discuss higher order fast marching methods :10.1.1.46.1266
noting slightly di erent implementation fast marching method 
values trial tentative values heap recomputed known values computation 
consider second order backward approximation rst derivative see :10.1.1.46.1266
may compactly written 
similar expression holds forward di erence 
consider switch functions de ned expressions similar switch ijk known switch ijk known operators fast marching method variation suggested adalsteinsson :10.1.1.46.1266
max hh ijk switch ijk 
ijk ijk switch ijk 
ijk max hh ijk switch ijk 
ijk ijk switch ijk 
ijk max hh ijk switch ijk 
ijk ijk switch ijk 
ijk ijk scheme attempts second order sided upwind stencil points available reverts rst order scheme cases :10.1.1.46.1266
observations 
order start scheme higher order scheme produce accurate values band boundary values 
second chosen conservative higher order version fast marching method possible devise versions invoke rst order scheme 
accuracy order scheme question second order fast marching method really second order depends switches evaluate zero number points rst order method invoked changes mesh re ned :10.1.1.46.1266
simulations number points rst order stencil chosen relatively small fraction points total decreases mesh re ned 
cases error experimentally observed considerably reduced approach 
advantages second order operators possible seen clearly diagonals rst order approximation gradient signi cantly worse second order version 
third higher order sided di erences degree yield higher accuracy depend rst order scheme invoked 
tests scheme examine accuracy fast marching method :10.1.1.46.1266
second order scheme de ned uses second order sided operators possible 
shows sets points equidistant origin computed exact distance ii rst order scheme iii second order scheme extremely crude grid :10.1.1.46.1266
seen second order method considerably better 
gives error associated computing distance function single point located origin :10.1.1.46.1266
equidistant points origin crude grid solid exact short dashed dotted st order long dashed nd order :10.1.1.46.1266
grid error error error error st order nd order st order nd order second order computations distance origin :10.1.1.46.1266
repeat test fast marching method compute distance points located 
solution non di erentiable viscosity solution chosen 
second order method considerably accurate 
shows calculation rough grid table shows error mesh re nement :10.1.1.46.1266
equidistant points points crude grid solid exact short dashed dotted st order long dashed nd order :10.1.1.46.1266
grid error error error error st order nd order st order nd order second order computations distance points :10.1.1.46.1266
repeat test grid rotation compute distance points located 
error second order convergent second order scheme error rst order :10.1.1.46.1266
expected rst order error occurs shock lines due grid alignment occurs grid points 
shows calculation rough grid table shows error mesh re nement :10.1.1.46.1266
equidistant points points crude grid solid exact short dashed dotted st order long dashed nd order :10.1.1.46.1266
grid error error error error st order nd order st order nd order second order computations distance points :10.1.1.46.1266
non uniform orthogonal grids implementation fast marching methods non uniform orthogonal meshes straightforward 
non uniform cartesian meshes handled di erence operators 
cylindrical spherical coordinate meshes require standard altered expressions gradient upwind directions 
altered expressions ect ow fast marching method actual algorithm remains unchanged 
update formula changed 
triangulated unstructured mesh formulation variety reasons develop fast marching method triangulated domains 
triangulated grids may constructed material uid boundaries 
example problems development non rectangular regions require triangulated meshing non material boundaries accurately represented 
second surfaces described triangulated patches discretization natural 
fast marching method triangulated unstructured meshes introduced unstructured mesh methodology level set methods developed barth sethian applied problem constructing geodesic shortest paths manifolds :10.1.1.46.1266
various examples follow closely presentation 
details see :10.1.1.46.1266
update procedure recall update procedure fast marching method values neighbors known points :10.1.1.46.1266
goal solve eikonal equation procedure new trial values created heap nearby points 
imagine uniform square grid suppose goal update value center point 
label values surrounding grid points ta tb tc td see :10.1.1.46.1266
values may nite corresponding far values 
standing center point fast marching method attempts solve quadratic equation quadrant 
example refer possible contributors loss generality cases construction upwind solution orthogonal mesh :10.1.1.46.1266
:10.1.1.46.1266
ta known nd solution ta quadratic equation ta ij uniform grid spacing 

ta tc known take real solution quadratic equation ta tc ij possible left right pair construct possible real solutions accept updated point produces smallest value fast marching method described 
scheme particular triangulated domain extend method triangular domains 
order shall build monotone update procedure triangulated mesh 
motivation consider obvious triangulation square grid plane 
imagine triangulation :10.1.1.46.1266
simple triangulation building monotone update operator :10.1.1.46.1266
consider known values ta tc look triangle formed points hold ta tc easily write equation plane determined known values ta tc unknown value side length ta tc computing gradient want select value ta tc ij words lifting plane value center point order gradient magnitude equal note exact construction produced orthogonal construction :10.1.1.46.1266
note case gradient vector origin center point points triangle updated 
necessarily case arbitrary acute triangle 
order establish monotonicity need verify condition 
inability solve quadratic corresponds inability tilt appropriate angle requirement solution greater contributors means solution constructed upwind manner 
update rules heap structure maintain list trial points provides method executing fast marching method simple triangulation 
fast marching methods triangulated domains construction unstructured mesh upwind approximations gradient extend idea arbitrary triangulation 
acute triangulations acute triangulation center grid point 
start acute triangulation consider triangulation grid point 
large number triangles may share center vertex 
procedure motivated simple triangulation previous section compute possible value triangle includes center point vertex 
triangles produce admissible values select appropriate value 
possibilities 
chose produces smallest new value correspond algorithm similar triangular mesh 
elaborate upwind constructions triangulated meshes 
consider non obtuse triangle abc point update assume 
rst verify update triangle altitude inside non obtuse triangle cbd see :10.1.1.46.1266
means search ec triangle abc nd left perspective view triangle stencil supporting values form lifted plane gradient magnitude equal right plane de ned triangle stencil :10.1.1.46.1266
denote bc ac similarity df ad ad cd ad bu law cosines bd cd cd cos law sines sin cd bd sin right angle triangle sin cd bd sin cd sin cd cd cos yields quadratic equation ab cos bu cos sin solution satisfy updated triangle cos cos update procedure follows cos cos minft minft bf cf scheme extend fast marching method acute triangulated domains :10.1.1.46.1266
extension general triangulations far required acute triangulation 
front entering side triangle points provide values third computed 
words monotonicity restrict update come triangle gradient solution grid point point triangle updated 
straightforward way enforce requirement build nonobtuse triangulation making sure grid captures incoming fronts 
approach handle non acute triangulations describe build numerical support locally obtuse angles splitting angles special way 
obtuse angle vertex updated neighboring points consistent way limited section upcoming fronts 
connecting vertex point section splits obtuse angle acute ones 
diculty approach need reach back triangles simply containing point updated 
triangles coplanar unstructured mesh may lie convoluted surface 
idea extend section recursively unfolding adjacent triangle new vertex included extended section 
vertices connected virtual directional edge may updated 
length edge ab equal distance unfolded triangles plane 
obtuse angle splitting section triangulated surface patch unfolded triangulated patch top triangulated surface patch :10.1.1.46.1266
bottom initialization construction splitting section 
right unfolded patch splitting section expansion rst vertex virtual edge connecting vertices ab 
note complexity analysis unfolding procedure shows log operation count maintained :10.1.1.46.1266
refer interested reader details 
discussion triangulated fast marching methods higher order versions extensions basic techniques may 
applications section provide collection examples demonstrate applicability fast marching methods 
shape setting rst example borrowed straightforward problem shape setting :10.1.1.46.1266
closed shape dimensions wants compute set obtained propagating boundary normal direction constant unit speed 
required compute distance boundary plot level curves 
directly eikonal equation 
speed solve boundary condition inside shape :10.1.1.46.1266
boundary represented dark heavy line show larger shape sets obtained fast marching method 
shape setting spiral development aspect manufacturing process development 
process resist properties material altered exposure beam partially blocked pattern mask 
material developed means material away 
development process reduces interface propagating downwards dimensions speed normal direction supplied rate function point 
speed depends position may change extremely rapidly 
goal development track evolving front 
order develop realistic structures dimensional development pro les grid size unreasonable fast algorithm considerable value development step :10.1.1.46.1266
illustration see rate function calculated threedimensional exposure post exposure bake modules tma depict coupled fast marching method method 
shows top view mask placed board dark areas correspond areas exposed light 
presence factors standing waves etching pro le depends issues re ectivity surface 
view developed pro le shown underneath etching holes presence standing waves easily seen 
results see 
masking pattern development view development fast marching method seismic apply fast marching methods problems involving imaging geophysical data sets 
sethian fast marching method rapidly construct rst arrival times seismic analysis coupled migration 
summarize 
details see 
dimensional migration surface seismic data image earth subsurface complex geological structures velocity elds 
commonly imaging techniques applied surveys methods integral exibility imaging irregularly sampled data relative computational eciency 
perform migration approximately solves wave equation boundary integral method 
re ectivity point earth interior computed summing recorded data multidimensional surfaces shapes summation surfaces summation weights computed green functions single scattering wave propagation experiment see example :10.1.1.46.1266
background equations detail essence migration see example expressed integral equation image xs xr data dx dx image output location data source receiver coordinates angular frequency :10.1.1.46.1266
green functions parameterize propagation source image point image point receiver respectively 
implementations calculation done time domain expressed summation image xs xr input input ltered version input data green functions parameterized amplitudes depth migration green functions represented dimensional tables tables functions source receiver surface locations re ector position earth interior 
green function parameterization usually assumption acoustic propagation 
migration process consists stages 
tables computed stored 
second migrated image formed convolving data migration operators derived tables 
phases challenges perspective geophysical accuracy computer implementation 
key element depth migration calculation tables parameterize asymptotic green functions 
ecient calculation method required generate tables needed migration 
depth migration problems generally applied areas complex velocity structure calculation method robust 
computing green function tables kilometer area marine blocks sources positioned meters requires terabyte volumes :10.1.1.46.1266
speed important issue 
finite di erence approximations computations include van trier 
speed robustness fact unconditionally stable fast marching methods er attractive methods computing travel times 
migration fast marching method figures show slices dimensional velocity corresponding structural images obtained migration data obtained data set 
left shows depth slice velocity cube depth meters right corresponding migrated image slice shown :10.1.1.46.1266
salt sediment interface fault cutting salt body imaged high resolution 
compares velocity model left corresponding migrated line right di erent slice 
sediment images imaged correct locations salt body borders 
areas lesser quality salt probably result multiple re ected arrivals spot water bottom intra salt re ections close left side top salt probably rst arrivals fast marching method 
results discussion issues see 
green function reconstructed tables describe surface points subsurface locations tables dimensional 
velocity model migrated image :10.1.1.46.1266
velocity model migrated image 
optimal algorithm computing geodesic paths surfaces suppose try compute shortest path surface points 
minimal geodesic obtained problem front propagation follows 
discussed uses triangulated fast marching method solve straightforward eikonal equation triangulated approximation manifold :10.1.1.46.1266
backtrace surface solving ordinary di erential equation dx ds rt traces geodesic path 
second order integration method triangulated surface switch rst order scheme sonic points gradient 
show examples taken :10.1.1.46.1266
presents perspective view triangulation shortest paths surfaces 
shows shortest paths regular triangulation surface function sin sin grid size :10.1.1.46.1266:10.1.1.46.1716
minimal geodesics painted triangulated surface projected plane 
gives polyhedron example di erent speed function assigned side causing snell law ect edges 
speed close side start point second top side side destination point :10.1.1.46.1266
show computation illustrates performance manifolds underlying non acute obtuse triangulation 
shows computation minimal geodesics torus shortest paths fact cut middle 
equi distance curves shown shortest paths 
note computational complexity unchanged log algorithm constructing geodesic paths triangulated surfaces 
details see :10.1.1.46.1266
important clear claimed 
nding exact shortest path triangulation surface 
solution path algorithm shortest path error depends size triangulation 
approximate shortest path constructed log steps number triangles surface 
triangulation re ned path converges exact shortest path 
computing minimal weighted geodesics triangulated surfaces 
full view shortest paths cutaway view shortest paths bead genus manifold 
optimal path planning statement problem application fast marching methods problems path planning rst developed summarize results :10.1.1.46.1266
cost function starting point goal path planning construct path point minimizes integral arclength parameterization total length speci cally dimensions suppose cost function starting point minimal cost required travel point min :10.1.1.46.1266
level set set points reached minimal cost minimal cost paths orthogonal level curves obviously fast marching method solve eikonal equation produce point explicit construction shortest path comes back propagation solution ordinary di erential equation rt reach starting point results illustration techniques consider problem navigation constraints rotation 
robot single point imagine dimensional rectangle width length 
initial position robot con guration space speci ed position center rectangle plus angle 
nal con guration similarly speci ed goal construct optimal path absence obstacles completely straightforward application fast marching method possible discretizes con guration space dimensional grid consisting discretized mesh employing periodic boundary conditions 
solve eikonal equation presence obstacles take approach see :10.1.1.46.1266
maneuver oddly shaped robot consider robot point discretized angle alter shape obstacles corresponding angle 
obstacles angle requires morphological shape operations consisting dilations translations may done fast marching method see :10.1.1.46.1266
show examples dimensional robot rotational angle navigating dimensional space obstacles 
details applications fast marching methods path planning robotic navigation see :10.1.1.46.1266
dimensional navigation obstacles rotation visibility calculations re ected bounces application evaluation visibility 
visibility mean determination points domain unobstructed straight line view 
issues important areas semiconductor manufacturing factor uences etching deposition process point evolving pro le visible points surface 
example imagine etching beam particles strikes surface particles leave interface re deposited pro le 
total ux particles point front depends computing amount received points front 
various models describe particles ejected including specular re ection angle incidence equals angle refraction re ection angle particle leaves surface uniformly distributed possible angles 
cases visibility comes play amount material received point particles emanating point surface zero direct line sight points meaning part pro le blocks incoming ux 
ray tracing scene rendering computer graphics ray tracing accurately render complex scene 
scene obstacles corners occluded objects fundamental algorithm requires tracing beam source nal location determining points directly visible 
shadowing computer graphics optics problems source location wants quickly locate set points shadowed collection obstacles 
fast marching methods aid computing visibility situations 
speci cally give algorithms :10.1.1.46.1266
pro le visibility pro le curve dimensions surface dimension determine straight line path points blocked pro le 

scene visibility domain lled obstacles dimensions determine points domain directly see 

shadowing source domain lled obstacles provide fast algorithm determine points shadowed obstacles 
discuss algorithms detail 
pro le visibility suppose pro le points wish determine direct line sight see :10.1.1.46.1266
brute force approach easy program costly 
suppose points curve 
checking segments points costs determine see checking pair points mutually visible 
course clever programming faster including quadtree representations judicious choices proceed list segments 
visible visible visible visible see 
implicit representation test visibility test fast algorithm comes exploiting implicit representation interface 
pro le fast marching method determine signed distance pro le 
need check see points segment positive points visible front intersect segment 
perform test segment follows 
pick midpoint segment evaluate interpolation underlying grid value indicates distance closest point front 
move distance line segment directions query 
repeating process reaches case points mutually visible reaches point case points mutually visible terminates algorithm see 
scene visibility imagine domain lled obstacles :10.1.1.46.1266
goal determine points visible 
scene visibility may proceed manner similar fast marching method determine scene visibility :10.1.1.46.1266
compute distance function obstacles 
test visibility points scene algorithm querying point line connecting approach compare direct algorithm line points checks see intersects obstacles 
answer depends relative density obstacles domain 
large fraction domain lled obstacles fast marching method computes distance function empty spaces quickly 
hand direct testing approach checking obstacles segment connecting points time consuming 
case fast marching approach viable 
conversely small obstacles domain price domain construct solution eikonal equation may competitive direct testing approach 
shadowing give fast algorithm approximately computing shadow region obstacles created point source 
collection obstacles wish nd points domain directly visible source small number obstacles standard computer graphics techniques typically perform comparison obstacle 
number obstacles increases complexity algorithms 
di erent approach follows 
source imagine solution separate eikonal equations obstacles obstacles right hand side obstacles case set inside obstacles :10.1.1.46.1266
solve problems separately fast marching method compare solutions 
obstacle blocks source point rst arrival time larger obstacles case 
obstacles obstacles point visible source hand obstacles obstacles point visible 
practice due numerical error scheme need threshold di erence check obstacles threshold obstacles threshold chosen function mesh size note advantages approach 
computational speed independent number obstacles second technique unchanged dimensions higher 
show shadow zone created obstacles di erent placements sources 
technique may easily extended multiple sources running source separately comparing separate arrival times see 
discussion visibility related issues see :10.1.1.46.1266
shadow zone created obstacles 
shadow zone sources 
additional results range applications fast marching methods large currently eld active interest :10.1.1.46.1266
methods areas computer graphics medical imaging antenna wave problems crack dynamics ame propagation 
provide fast ways compute extension velocities critical ecient implementation level set methods way morphological operations boolean operations shapes implicit surface cad cam descriptors 
refer interested reader detailed discussion additional applications :10.1.1.46.1266
acknowledgments calculations performed university california berkeley lawrence berkeley national laboratory 
adalsteinsson kimmel malladi useful discussions 
author may reached address sethian math berkeley edu 
web page devoted fast marching methods may math berkeley edu sethian level set html adalsteinsson sethian fast level set method propagating interfaces comp :10.1.1.46.1266
phys pp :10.1.1.46.1266
:10.1.1.46.1266
barth sethian numerical schemes level set equations triangulated domains comp 
phys pp :10.1.1.46.1266
:10.1.1.46.1266
chopp computing minimal surfaces level set curvature flow jour 
comp 
phys pp :10.1.1.46.1266
:10.1.1.46.1266
colella modern numerical methods fluid flow lecture notes department mechanical engineering university california berkeley ca :10.1.1.46.1266
cormen leiserson rivest algorithms mcgraw hill new york :10.1.1.46.1266
crandall evans lions properties viscosity solutions hamilton jacobi equations tran 
ams pp 
:10.1.1.46.1266
crandall ishii lions user guide viscosity solutions second order partial di erential equations bull 
ams pp :10.1.1.46.1266
:10.1.1.46.1266
crandall lions viscosity solutions hamilton jacobi equations tran 
ams pp 
:10.1.1.46.1266
numerical methods prentice hall new jersey :10.1.1.46.1266
dijkstra note problems connection graphs numerische mathematic :10.1.1.46.1266
partial di erential equations wiley new york :10.1.1.46.1266
kimmel sethian fast marching methods robotic navigation constraints center pure applied mathematics report univ california berkeley may submitted publication int :10.1.1.46.1266
journal robotics research :10.1.1.46.1266
kimmel sethian fast marching methods triangulated domains proc :10.1.1.46.1266
nat 
acad 
sci pp 
:10.1.1.46.1266
latombe robot motion planning kluwer academic publishers boston ma :10.1.1.46.1266
leveque numerical methods conservation laws birkhauser basel :10.1.1.46.1266
malladi sethian vemuri evolutionary fronts topology independent shape modeling recovery proceedings third european conference computer vision stockholm sweden lecture notes computer science :10.1.1.46.1266
malladi sethian log algorithm shape modeling proc :10.1.1.46.1266
nat 
acad 
sci vol 
:10.1.1.46.1266
osher sethian fronts propagating curvature dependent speed algorithms hamilton jacobi formulation comp :10.1.1.46.1266
phys :10.1.1.46.1266
migration split step dsr geophysics pp :10.1.1.46.1266
:10.1.1.46.1266
viscosity solutions approach shading siam num 
anal pp 
:10.1.1.46.1266
schneider jr robust ecient upwind nite di erence calculations dimensions geophysics pp :10.1.1.46.1266
:10.1.1.46.1266
sedgewick algorithms addison wesley reading ma :10.1.1.46.1266
sethian analysis flame propagation ph dissertation dept mathematics university california berkeley ca :10.1.1.46.1266
sethian curvature evolution fronts comm 
math 
phys :10.1.1.46.1266
sethian numerical methods propagating fronts variational methods free surface interfaces eds 
finn springer verlag ny :10.1.1.46.1266
sethian numerical algorithms propagating interfaces hamilton jacobi equations conservation laws journal differential geometry pp :10.1.1.46.1266
:10.1.1.46.1266
sethian marching level set method monotonically advancing fronts proc :10.1.1.46.1923
nat 
acad 
sci :10.1.1.46.1266
sethian applications level set methods propagating interfaces acta numerica :10.1.1.46.1266
sethian fast marching level set methods dimensional development proceedings spie international symposium santa clara california march :10.1.1.46.1266
sethian level set methods evolving interfaces geometry fluid mechanics computer vision material science cambridge university press :10.1.1.46.1266
sethian level set methods fast marching methods evolving interfaces computational geometry fluid mechanics computer vision materials sciences cambridge university press :10.1.1.46.1266
sethian dimensional computation fast marching method press geophysics :10.1.1.46.1266
sethian 
extensions triangulated fast marching methods submitted publication :10.1.1.46.1266
sod numerical methods fluid dynamics cambridge university press :10.1.1.46.1266
computing imaging fast marching methods internal report june :10.1.1.46.1266
technology modeling associates dimensional simulation depict technology modeling associates internal documentation january :10.1.1.46.1266
van trier upwind finite di erence calculations geophysics pp 
:10.1.1.46.1266
finite di erence calculation travel times bull 

soc 
amer pp 
:10.1.1.46.1266
finite di erence calculation dimensions geophysics :10.1.1.46.1266

