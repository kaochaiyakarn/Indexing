escalations workflow management systems panagos rabinovich labs research research att com workflow management systems wfmss support modeling execution monitoring business processes 
business processes consist multiple activities enactment carried human agents software systems 
typically business processes activities constituting deadlines 
activity misses deadline special actions may triggered referred escalation 
escalations affect business processes may lead abortion 
consequently escalations may entail high cost organization 
going research addressing workflow escalations 
goal twofold minimize number escalations process execution reduce cost associated escalations avoided 
workflow management systems wfmss increasingly organizations streamline automate manage business processes 
systems provide tools support modeling business processes conceptual level coordinate execution component activities model monitor progress business processes report important statistics business processes systems involved execution 
wfmss concept workflow abstraction business process 
workflow consists activities correspond process steps agents execute activities 
workflow specification describes activities constituting workflow partial order activities executed 
activities may deadlines determine maximum allowable execution time 
activity misses deadline workflow model may specify special activity referred escalation triggered automatically 
effects escalation may depend semantics activity missed deadline human intervention required proceed 
general effects escalation may activity triggered escalation restarted new activity executed activity triggered escalation resumes execution new activity replaces triggered escalation business process affected aborted executed activities compensated 
cases invoking escalation results increased cost business process due additional activities executed completed rolled back intervention highly paid workers required 
desirable reduce number workflow executions result escalations 
address problem reducing number workflow executions result escalations cost associated escalations 
main observation techniques long guarantee activities time originally assigned business analyst delay invocation escalations giving time complete normally 
achieve note deadlines usually assigned activities estimated execution times activities need meet deadline business process 
hand actual time required particular activity complete varies instance due variations load conditions consequently activity workflow execution finishes faster estimated execution time rest activities extra time escalation invoked 
accomplished extending deadlines available slack time 
shares similar goals research efforts real time systems reducing number tasks deadlines focus completely different 
real time systems attempt minimize number missed deadlines optimizing scheduling tasks task better utilizes allowable execution time assumed fixed 
hand attempts minimize missed deadlines modifying deadlines changing scheduling policy 
key observation workflow application domain changing semantics business process 
words deadline adjustment transparent users 
remainder organized follows 
section introduces workflow model 
section presents algorithms adjust deadlines remaining activities line 
section compares related research 
section summarizes addresses going research 
workflow process model consider business process workflow consisting activities tn partial order defined successor function associates activity set activities named successors executed successor activity executed unconditionally condition associated evaluates true 
assume repeated execution activities allowed activity marks completion business process 
class workflows supported model proper subset class workflows supported workflow management coalition model particularly important frequently appears building block complex workflows 
workflows containing groups activities follow model benefit algorithms applying groups 
algorithms applicable workflows comply model workflows allowed system 
order simplify presentation restrict model 
particular assume business process consists sequential activities tm activity may consist sub activities executed parallel 
sub activity may executed conditionally unconditionally decomposed 
addition assumptions regarding workflow management system information available activities constituting business process 
ffl scheduling activities ready execution deadlines assigned best knowledge assumption true commercial workflow products existing research prototypes 
ffl activity deadline specifies allowable execution time activity 
assume deadlines assigned business analyst activities estimated predicted execution times need meet business process deadline 
addition algorithms assume information available 
ffl estimate expected execution time activity 
estimate corresponds time takes agent execute activity complete activity activity submitted execution 
existing wfmss maintain estimates accumulated history prior executions 
earliest deadline scheduling policy scheduling priority task decreases task deadline increases 
consequently algorithms may increase number escalations extend deadlines 
ffl escalation cost associated activity escalation costs assigned business analysts effects escalation activity deadline 
assume escalation cost integer number greater equal 
higher number costly escalation procedure dynamic deadline adjustment section subset algorithms currently developing dynamic deadline adjustment workflows conform model assumptions previous section 
associated activity attributes denoted functions similar notation 
dl deadline assigned ex estimated execution time sl slack execution ce cost escalation assigned slack computed finishes execution equal difference deadline actual execution time 
business process instance associate variable slack corresponds available slack time process instance point time execution 
activity process submitted execution value slack set 
activity submitted execution deadline adjusted adding portion slack determined algorithms new value slack equal previous value minus portion assigned deadline 
finishes execution value slack incremented sl 
total slack tsl knowledge estimated execution times escalation costs activities adjust deadline activity going executed adding available slack time 
dl dl slack assigning slack activity may suboptimal 
entire slack activity may avoid escalation expense increasing risk expensive escalation activity 
addition fact activity finished certain time period indication long lasting problem delaying escalation certain point may cost effective 
proportional execution pex knowing estimated execution times activities constituting business process distribute available slack proportion times 
parallel activities estimated execution time set maximum estimated execution times sub activities 
activity executed formula 
dl dl slack ex ex proportional escalation pes proportional escalation mechanism discriminates activities different escalation costs 
particular activities higher escalation costs assigned larger portion available slack time 
parallel activities escalation cost set maximum escalation costs sub activities 
activity executed formula 
dl dl slack ce ce typically wfmss allow user defined attributes associated activities attributes escalation costs 
related dynamic deadline adjustment principally different dynamic modification workflows supported existing workflow products research prototypes 
done reflect changes model business process particular instance process 
contrast goal minimize operation cost modifying business process model 
somewhat similar scheduling real time systems 
real time systems deadlines scheduling system components cpu view scheduling dynamic deadline adjustment complimentary mechanisms 
report separately sophisticated scheduling policies inter dependencies policies scheduling deadline adjustment 
related described 
authors priority driven cpu scheduling algorithms transactional workflows 
workflow process consists sequential tasks 
task acid transaction having average response time goal 
assignment priorities performance tasks relative original response time goals 
contrast algorithms concentrate cpu scheduling 
addition algorithms restricted transactional workflows allow sequential conditional parallel execution tasks 
authors study problem deadline real time activity automatically translated deadlines sequential parallel sub tasks constituting activity 
sub task deadline assigned just sub task submitted execution algorithms deadline assignment assume earliest deadline scheduling policy 
similar goal proposed algorithms minimizing number missed deadlines 
contrast algorithms assumes sub tasks assigned deadlines activity submitted execution focus adjusting sub task deadlines line assigning deadlines 
addition assume soft real time environment sub tasks may deadlines triggering subtasks 
environment escalations caused missed deadlines may result execution new activities algorithms take account cost associated escalations 
active real time databases transactions may trigger new transactions execution 
triggered transactions executed immediately original transaction finishes execution 
authors algorithms try minimize number triggering transactions deadlines priority driven scheduling policy 
proposed algorithms assign priorities triggered transactions dynamically reassign priorities triggering transactions 
contrast algorithms modify deadlines assigned activities altering priorities 
consequently complemented scheduling algorithms proposed 
summary workflow processes consist activities executed human software agents 
cases activities deadlines escalation takes place deadline missed 
minimizing number escalations enactment business processes highly desirable escalations usually result high cost organization 
techniques aim reducing number escalations execution business processes 
algorithms adjust deadlines activities remain executed distributing available slack time 
currently extending algorithms load agents responsible enactment activities taken account empirical knowledge regarding conditional execution activities distributing slack various branches 
furthermore planning evaluate algorithms implementing top commercial wfms 
techniques try reduce number escalations escalations eliminated resources required enactment activity available time period greater deadline business process 
cases may beneficial force escalation early stage process execution reduce escalation cost 
process developing algorithms decide force escalation exploiting knowledge costs escalation procedures may invoked process enactment information regarding status load availability agents participating execution process 
research avenue currently pursuing providing mechanisms automatically assigning deadlines activities deadline known workflow process 
having single deadline simple adequate monitoring progress individual activities detecting abnormal conditions potential problems early 
automatic assignment deadlines individual activities trivial 
main obstacle fact activities may executed repeatedly number iterations determined run time 
addition activities may executed conditionally information available run time 
activities may different resource requirements escalation costs taken account 
abbott garcia molina 
scheduling real time transactions performance evaluation 
proceedings th international conference large data bases pages los angeles ca 
casati ceri pernici pozzi 
workflow evolution 
proceeding er international conference berlin october 
georgakopoulos hornick sheth 
overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 
workflow management coalition group 
workflow management coalition specification 
technical report workflow management coalition november 
www aiai ed ac uk wfmc 
huang stankovic towsley ramamritham 
experimental evaluation real time transaction processing 
proceeding th real time systems symposium december 
kao garcia molina 
deadline assignment distributed soft real time system 
proceedings th international conference distributed computing systems pages 
kao garcia molina 
subtask deadline assignment complex distributed soft real time tasks 
technical report stanford university 
krishnakumar sheth 
managing heterogeneous multi system tasks support enterprise wide operations 
distributed parallel databases 
lin layland 
scheduling algorithms multiprogramming hard real time environments 
journal association computing machinery january 
nikolaou 
adaptive scheduling tasks transactional workflows 
winter simulation conference washington 
stankovic towsley ramamritham 
priority assignment real time active databases 
vldb journal 

