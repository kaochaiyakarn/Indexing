appear ieee conference evolutionary computation icec may nagoya japan solving symmetric asymmetric tsps ant colonies luca maria gambardella idsia istituto molle di studi corso lugano switzerland luca idsia ch www idsia ch luca marco dorigo iridia universit libre de bruxelles avenue franklin roosevelt cp bruxelles belgium eu ulb ac iridia ulb ac dorigo dorigo html acs distributed algorithm solution combinatorial optimization problems inspired observation real colonies ants 
apply acs symmetric asymmetric traveling salesman problems 
results show acs able find solutions problems 
ant colony system acs novel distributed approach combinatorial optimization observation real ant colonies behavior 
acs finds ground authors previous called ant system ant extension learning reinforcement learning technique :10.1.1.52.7194
particular acs revisited version ant different way update experience accumulated artificial ants introduced 
mentioned systems belong artificial ant colonies aac family algorithms applied various combinatorial optimization problems symmetric asymmetric traveling salesman problems tsp atsp respectively quadratic assignment problem job shop scheduling problem 
centered presentation acs algorithm application symmetric asymmetric versions tsp 
ii 
acs algorithm introduce acs algorithm application traveling salesman problem tsp general asymmetric traveling salesman problem atsp 
defined follows 
tsp 
set cities sv edge set rs sr cost measure associated edge tsp problem finding minimal length closed tour visits city 
case cities coordinates rs euclidean distance euclidean tsp 
atsp rs sr tsp atsp 
section talk generically atsp problems includes tsp special case 
agent task tour visit cities return starting 
associated list cities visited current city equivalent say agent remembers visited cities 
agent situated city moves city rule called pseudo action choice rule state transition rule exploration exploitation arg max positive real value associated edge acs algorithm counterpart pheromone left real ants 
changed run time intended indicate useful move go city state heuristic function evaluates utility move city example atsp inverse distance cities parameter weigh relative importance heuristic function 
value chosen randomly uniform probability parameter smaller higher probability random choice 
short determines relative importance exploitation versus exploration formula 
random variable selected distribution formula gives probability agent city chooses city move 
state transition rule favor transitions nodes connected short edges high amount trail 
formula shows transition exploit accumulated knowledge problem knowledge accumulates form different amount trail edges explore new edges exploration biased short high trail edges 
building solution tour tsp ants visit edges change trail applying local updating rule parameter 
effect application formula discussed section iii 
ants completed solutions edges belonging shortest tour ant trail changed applying global updating rule best iter global trail updating provides higher amount trail shorter tours 
sense similar reinforcement learning scheme better solutions get higher reinforcement happens example genetic algorithms 
defined different ways choose ant allowed perform global updating iteration best updating global best updating 
iteration best method selected agent agent shortest tour current iteration global best method selected agent agent shortest tour computation experiments apply global best updating strategy 
words acs algorithm described follows 
phase initialization phase initial value values agent placed city chosen policy experiments place maximum agent city 
set visited cities initialized 
phase cycle agents move updated formula repeated agent finished tour back starting city 
phase length best tour done agent shortest tour computed compute delayed reinforcements best iter updated formula 
phase checks termination condition met case algorithm returns phase 
usually termination condition verified fixed number cycles improvement obtained fixed number cycles 
experiments optimal value known priori algorithm stopped soon optimum 
point acs general application aac systems atsp knowledge related atsp problems heuristic function represents inverse distance node node acs local tour improvement heuristics opt lin see complete presentation tsp heuristics modify results computation maintain explicit notion tour 
tours globally see formula reinforce set edges atsp graph accumulated trail generate new tours 
possible extensions acs includes dedicated atsp heuristics discussed section behaviour ant predecessor acs different updating policies :10.1.1.52.7194
initialization phase pair starting city agent set visited cities agent city city agent located 
phase agents build tours 
tour agent stored tour choose city formula formula tour cycle agents go back initial city tour phase local updating computed values updated formula rt new city agent 
phase delayed reinforcement computed values updated compute length tour done agent compute best iter update edges belonging best iter formula edge best iter 
condition true print shortest goto phase acs algorithm iii 
algorithm analysis section results micro level investigation observe trail changes edges function acs performance 
experiments sections set parameter values differently indicated follows small constant value nl nn nn tour length produced nearest neighbor heuristic number cities 
order try understand mechanism acs uses direct search study trail closeness product changes run time 
consider show trail closeness product changes number steps ants building solution steps refer phase acs algorithm abscissa goes number cities 
consider family edges see 
belonging best tour best edges 
belong best tour te testable edges 
haven long time belonged best tour ue uninteresting edges 
average trail closeness product computed average trail closeness values edges family 
graph clearly shows acs favors exploitation edges edges chosen probability exploration edges te remind formula edges higher trail closeness product higher probability explored 
interesting aspect edges visited ants application local updating rule formula trail diminish making attractive favoring exploration visited edges 
experimental observation shown edges acs achieves performance approximately downgraded te iteration algorithm edges te soon downgraded ue happen belong new shortest tour 
figures report typical behaviors trail system respectively bad performance 
true rough approximation optimal tour length 
note graph abstraction graphs obtained experimentally 
examples 
steps average trail closeness product ue uninteresting edges edges best tour te edges belonged best tour 
families edges classified different behavior respect amount trail 
show average trail level changes family iteration algorithm steps 
steps average trail closeness product ue te 
trail behavior acs 
problem eil 
trail behavior system performance 
best solution iterations 
steps average trail closeness product ue te 
trail behavior acs 
problem eil 
trail behavior system performance bad 
best solution iterations 
iv 
experiments section presents acs results solution different instances tsp atsp proposed international contest evolutionary optimization experiments set acs parameters way nl nn problem performed total number evaluations generated tours formula evaluations problem size problems type problems type tsp problems type atsp problems 
tsp problems att rat fl performed evaluations 
table table report results obtained tsp atsp problems 
column report problem name number cities parentheses total number evaluations square brackets 
second column report best result obtained acs trials give integer length shortest tour number evaluations required find square brackets 
third column report acs average trials standard deviation square brackets 
fourth column report optimal result fl give square brackets known lower upper bounds optimal solution known 
column give error percentage measure quality best result acs acs best result optimal result optimal result 
table 
acs performance tsp problems 
problem cities evaluations acs best result acs average best known result error eil kroa att rat fl case agents acs executed evaluation iterations 
table 
acs performance atsp problems 
problem cities evaluations acs best result acs average best known result error ry ft kroa ftv runs implemented slightly modified version acs incorporates advanced data structure known candidate list data structure normally trying solve big tsp problems 
candidate list list preferred cities visited static data structure contains city cl closest cities cl parameter set cl experiments 
practice ant acs candidate list chooses city move belonging candidate list 
cities candidate list visited failure considers rest cities 
table report results related application different candidate list size eil problems 
column report size candidate list 
second column report average result acs trials iterations agents 
third column report best integer result trials 
fourth column report average time trial performed sun ultrasparc fifth column report average number failures agents tour construction 
interesting note performance system best term average time trial term quality generated tours cl 
table 
comparison candidate list size 
candidate list size acs average acs best average time sec number failures discussion acs novel approach combinatorial optimization cooperation set agents 
research inspired study ant colonies behavior gave rise ant system ant hybridization qlearning :10.1.1.52.7194
acs extension ant experimented different local trial updating policy order improve performance system term speed quality results see comparison acs 
results encouraging intend study specialized version acs solution tsp atsp problems 
report typical behavior acs experiments 
usually length best solution improved fast initial phase algorithm total number iterations 
total number iterations new solutions discovered phenomena local stagnation starts appear 
phases computation new improved solutions discovered rarely situations local minima appears frequently 
tour length best tour length 
typical behavior acs algorithm 
believed order escape local minima increase speed search possible extension acs local optimization heuristics agent computation 
idea add artificial ant colony new ant explicitly dedicated local optimization 
try improve best path applying local optimization heuristics 
case find solution decreases length tour apply formula changing trial new best tour 
possible improvement related organization colony agents 
population agents perform search parallel composed identical individuals parameters 
limitation requires parameter recalibration order avoid local stagnation improve speed search 
idea take inspiration observation natural phenomena way genetic algorithms define population agents different structural parameters 
new mechanisms introduced acs allow agents perform better survive reproduce 
analysis carried understand role parameters order identify new agents introduced system 
vi 
acknowledgments partially supported cec human capital mobility hcm contract years marco dorigo 
colorni dorigo maniezzo 
distributed optimization ant colonies 
proceedings ecal european conference artificial life paris france varela bourgine eds elsevier publishing 
colorni dorigo maniezzo 
investigation properties ant algorithm 
proceedings parallel problem solving nature conference ppsn brussels belgium manderick eds elsevier publishing 
colorni dorigo maniezzo trubian 
ant system job shop scheduling 
belgian journal operations research statistics computer science 
pasteels 
probabilistic behaviour ants strategy errors 
journal theoretical biology 
dorigo 
optimization learning natural algorithms 
ph thesis politecnico di milano italy eu 
italian 
dorigo gambardella 
ant colony system tech 
rep iridia universit libre de bruxelles belgium eu 
dorigo maniezzo colorni 
ant system optimization colony cooperating agents 
ieee transactions systems man cybernetics part gambardella dorigo :10.1.1.52.7194
ant reinforcement learning approach traveling salesman problem 
proceedings ml twelfth international conference machine learning tahoe city ca prieditis russell eds morgan kaufmann 
johnson mcgeoch press 
travelling salesman problem case study local optimization 
local search combinatorial optimization aarts lenstra eds wiley new york 
maniezzo colorni dorigo 
ant system applied quadratic assignment problem 
tech 
rep iridia universit libre de bruxelles belgium eu 
reinelt 
traveling salesman computational solutions tsp applications 
springer verlag 
watkins 
learning delayed rewards 
ph 
dissertation psychology department university cambridge england 
