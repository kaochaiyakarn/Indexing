discovering trends text databases brian lent rakesh agrawal ramakrishnan srikant ibm almaden research center san jose california lent cs stanford edu almaden ibm com describe system developed identifying trends text documents collected period time 
trends example discover shifting interests domain 
system uses data mining techniques novel ways demonstrates method visualize trends 
give experiences applying system ibm patent server database patents 
address problem discovering trends text databases 
database documents 
document consists text fields timestamp 
unit text word phrase list words 
defer discussion complex structures till methodology section 
associated phrase history frequency occurrence phrase obtained partitioning documents timestamps 
frequency occurrence particular time period number documents contain phrase 
measures frequency possible counting occurrence phrase document 
trend specific subsequence history phrase satisfies users query histories 
example user may specify spike query finds phrases frequency occurrence increased decreased 
approach approach problem discovering trends reuse current data mining technology possible 
doing major mining components system phrase identification current address department computer science stanford university 
continuing support provided graduate fellowship department defense office naval research 
copyright fl american association artificial intelligence www aaai org 
rights reserved 
sequential patterns mining agrawal srikant srikant agrawal trend identification shape queries agrawal :10.1.1.40.9892
cleansing parsing input data separating documents timestamps 
assign transaction id word document treating words items data mining algorithms details assignment discussed methodology section 
transformed data mined dominant words phrases results saved 
user query translated shape query query executed mined data yielding desired trends 
final step process visualize results 
related approach discovering interesting patterns trend analysis text documents feldman dagan 
text annotated set concepts organized hierarchy 
treating concept hierarchy distribution probabilities identify model distributions concept hierarchy compared 
interesting concepts differ model distribution 
analyzing trends involves comparison concept distributions old data distributions new data 
feldman hirsh authors find associations keywords concepts labeling documents background knowledge relationships keywords 
purpose knowledge base supply unary binary relations keywords labeling documents 
words phrases describe themes concepts text documents studied information retrieval community 
latent semantic indexing lsi deerwester describes mathematical model relating word associations weighted vectors represent concepts documents 
lsi query retrieve document share words share similar concept 
building model takes tk time number terms words number major concepts model typically defined number documents 
phrases build advanced queries discussed croft turtle lewis 
authors identify phrases concepts relationships concepts 
usefulness phrases shown lewis croft quality text categorization improved word clusters phrases 
reliability words phrases search terms basic units test relationships topic text studied evidenced gay croft identifies sequences nouns effective identification concepts document 
related area automatic determination text themes topics emphasized text represented selected text excerpts 
complex methodologies appear salton uses adjacent words describe simple themes non adjacent text possibly spanning multiple paragraphs define complex themes 
words word phrases identify topics trends text databases 
methodology methodology describe general approach applied text databases varying complexity 
results mining set phrases occur frequently underlying documents match query supplied user 
methodology major steps ffl identifying frequent phrases sequential patterns mining ffl generating histories phrases ffl finding phrases satisfy specified trend 
steps described 
identifying phrases denote word phrase 
wn 
capture notion phrases complex structure define phrase list elements element phrase phrase iterated list phrases levels nesting 
instance phrase ibm 
data mining 
userspecified parameters phrase correspond ibm data mining occuring single paragraph data mining contiguous words paragraph 
phrase ibm 
data mining 
anderson consulting 
decision support 
anderson consulting decision support occuring different paragraph ibm data mining 
cast phrase identification problem problem mining sequential patterns agrawal srikant :10.1.1.40.9892
input problem set sequences called data sequences 
list transactions transaction set items literals 
example sequence transactions 
typically timestamp associated transaction 
sequential pattern consists list sets items set items called element pattern 
support sequential pattern percentage data sequences contain pattern 
problem find sequential patterns support greater user specified minimum support 
extended generalized srikant agrawal 
generalizations included adding time constraints specify minimum maximum time period adjacent elements pattern allowing items element sequential pattern set transactions timestamps user specified time window single transaction 
map word text field item data sequence sequential pattern phrase sequential pattern just item element 
element data sequence sequential pattern problem associated timestamp relative elements sequence defining ordering elements sequence 
may utilize sequential patterns treat words elements redefine timestamp word transaction id specifies order occurrences words document locations words relative grammatical sections document sentences paragraphs 
able apply existing sequential pattern algorithms transaction id labeled words identify simple phrases document collection 
allow considerable latitude definition phrase 
instance user may interested phrases contained individual sentences 
alternatively words comprising phrase may come sequential sentences phrase spans paragraph 
generalization accommodated distance constraints specify minimum maximum gap adjacent words phrase 
example variation described constrained specifying minimum gap word maximum gap sentence 
second variation minimum gap sentence maximum gap paragraph 
example generalize notion single word sentence set words sentence sliding transaction time window sentences 
generalizations gsp algorithm max 
wn min minimum maximum distance adjacent words phrase mining sequential patterns srikant agrawal allows mapping minimum gap maximum gap transaction window parameters algorithm 
illustrates affect parameters 
implementation course supply gap distances measured discrete units simply words sentences paragraphs 
solution define sufficiently large incremental values particular word transaction id sentence boundary crossed larger value paragraph boundary crossed 
extend basic mapping phrases sequential patterns providing hierarchical mapping sentences paragraphs sections text document 
extended mapping allows take advantage structure document obtain richer set phrases 
document completely separate sections mine phrases span multiple sections discovering new set relationships 
consider example base case identifying phrases words sequential contained sentence 
may interested identifying phrases base case phrases 
termed phrases lists lists represent departure existing definitions sequences sequential patterns typically represent lists sets 
generalize notion having hierarchical mappings nested lists 
enhancement gsp algorithm implemented changing apriori candidate generation algorithm agrawal consider phrases words individual elements generating candidate phrases 
manner candidates counted similarly change 
mining structured data documents distinct attributes containing text provides additional problems simple free text similar approach handling sentence paragraph boundaries 
simply treating different text attributes different sections document able mine fields just easily field 
generating history phrases partition documents timestamp 
granularity partitioning specified user 
example partitioning documents year may appropriate patent data partitioning month may suitable internet related documents 
partition generate set frequent phrases mappings defined earlier 
results history support values phrase 
particular phrase supported partition history empty time period 
describe identify trends histories 
identifying trends maintaining support history supported phrase query set histories select phrases specific shape histories 
propose shape definition language called sdl agrawal define users queries retrieve associated objects 
benefits shape query language sdl identify trends language small powerful allowing rich combination operators 
second fairly straightforward task rewrite shape user may define graphically done system described section sdl set operators 
third sdl allows blurry match user may care shape care specific details interval shape 
sdl allows implemented efficiently operators designed greedy reduce non determinism turn reduces amount back tracking done histories 
trends simply phrases selected shape query additional information time periods trend supported 
experience shows high level view system compute visualize word phrase trends describe 
system prototype system developed discover trends patents granted different categories 
system connected ibm db database containing granted patents patent data retrieved dynamically generated sql query selection criteria specified user 
system allows selection patents specific classification keywords appearing title patents 
retrieved histogram displaying number patents year shown user may specify range years system focus 
user choose maximum minimum gap desired words phrases mined minimum support phrases meet time period start years 
shape matching desired trend upwards trend spike patent server db client data cleansing patterns shape query engine sequential visualization trend max min user parsing sql query system usage downwards trend resurgence usage selected mining process begins 
alternatively users define shape visual shape editor 
phrases matching shape query visual display 
describe internal processes system 
text patent data remove stopwords time assigning transaction ids words depending placement patent 
transaction ids encode position word document representing sentence paragraph section breaks currently represented long integers sentence boundaries th location paragraph boundaries th location section boundaries th location 
specifying minimum gap instance phrases consist words different sequential sentences 
data parsed partitioned year particular patent granted 
partition patent data perform mining pass generalized sequential patterns gsp algorithm srikant agrawal generate phrases partition meet threshold 
resulting phrases saved different shape queries run 
shape query engine takes set partitioned phrases years interest selects match shape query 
shape query defined internally graphical editor rewriting query sdl agrawal performed 
shape query rewriting query sdl shown 
rewriting happens follows 
partitioned time period documents corresponding interval shape query graph associated relative levels support 
case interval specific value rewriting sdl straightforward slope interval determines basic shape query interval 
example intervals positive relative support interval shape query shape query shape comp files list hist query window support quit query slope translate shape length intervals negative slope translate shape length 
concatenation base shapes defines sdl query 
case intervals shape query specified intervals concatenation occurs resulting sdl shape shape match unspecified intervals 
trends patent database trends system patents classified category induced nuclear reactions processes systems elements 
example phrases matched shape query represented increasing trend usage years 
knowing priori kind patents filed category able look trends determine popular topics granted patents 
time periods upwards trends potential problem system number phrases match query quite large 
types pruning reduce number phrases reasonable number 
form pruning drop non maximal phrases support near maximal phrase superset 
second form pruning involves syntactic hierarchical ordering phrases 
intuition phrase syntactic sub phrase phrase concept corresponding usually generalization concept corresponding users initially see general concepts explore lower level concepts selecting phrases 
investigated application existing data mining algorithms identify trends large text databases 
shown problem casted sequential patterns problem reuse existing data mining algorithms mine text 
shape query language identifying trends mined text data described 
built working text mining system called demonstrate usefulness approach 
scaleup experiments show scales approximately linearly number patents database 
acknowledgments grateful ibm almaden patent server team especially laura anderson steve boyer tom griffin ongoing contributions suggestions 
peter schwartz laura haas guy lohman help database inter operability 
agrawal srikant 
mining sequential patterns 
proceedings th international conference data engineering 
agrawal psaila wimmers zait 
querying shapes histories 
proceedings st international conference large databases 
agrawal mannila srikant toivonen verkamo 
fast discovery association rules 
fayyad piatetsky shapiro smyth uthurusamy eds advances knowledge discovery data mining 
aaai mit press 
chapter 
croft turtle lewis 
phrases structured queries information retrieval 
th international acm sigir conference research development information retrieval 
deerwester dumais furnas landauer harshman 
indexing latent semantic analysis 
journal american society information science 
feldman dagan 
knowledge discovery textual databases kdt 
proceedings st international conference knowledge discovery databases data mining 
feldman hirsh 
mining associations text presence background knowledge 
proceedings nd international conference knowledge discovery databases data mining 
gay croft 
interpreting nominal compounds information retrieval 
information processing management 
lewis croft 
term clustering syntactic phrases 
th international acm sigir conference research development information retrieval 

making sense text automated approaches meaning extraction 
th international online information meeting proceedings 

linguist say information scientist 
journal document text management 
salton allan buckley singhal 
automatic analysis theme generation summarization machine readable texts 
science 
salton singhal buckley mitra 
automatic text decomposition text segments text themes 
proceedings hypertext 
srikant agrawal 
mining sequential patterns generalizations performance improvements 
proceedings fifth international conference extending database technology edbt 
