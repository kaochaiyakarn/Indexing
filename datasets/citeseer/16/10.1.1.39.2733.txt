membership equational logic calculus inductive constructions rewrite logic extended jean pierre jouannaud lri cnrs universit de paris sud bat orsay cedex france email jean pierre jouannaud lri fr supported esprit research contract ccl 
part long term effort increase expressiveness specification languages time having curry howard semantic basis major tools efficient execution rewriting powerful interactive automated theorem proving environments extraction provably correct code specifications 
effort conducted research project demons team lri university paris sud orsay close collaboration coq project inria rocquencourt users 
aspects investigated collaboration project inria lorraine 
benefits long standing collaboration maude project sri csl 
starting point maturity approaches specification theorem proving investigated group 
constructive higher order logic practice version type theory calculus inductive constructions developped coq project inria 
approach enjoys called curry howard principle allows identify proofs logic computations associated typed calculus 
implementation level proofs user assisted powerful tactics allow user develop fairly large proofs amount effort measured man months 
enjoys major advantages firstly specifications purely declarative style freeing user think operational terms secondly correctness type checking algorithm relatively small piece code called kernel correctness proof developed system correctness complex tactics development thirdly possible extract correct functional code proof logical statement complex proof subset order logic practice version horn logic membership equational logic developped maude project sri 
approach enjoys principle term hurry reduces logical proofs algebraic computations 
implementation level proofs automatic allowing user hurry complex proof development interaction 
course major advantage approach 
second specifications perform experiments 
third follows second ability easily integrate decision procedures fragments logic writing corresponding executable specification 
approaches major disadvantages 
scale major revision underlying philosophy proof step checked kernel 
implies decision procedures integrated easily 
possible answer modify code written order return proof term checked kernel answer 
second develop tactic encodes decision procedure 
non trivial tasks usually requiring effort answer real needs rely correctness decision procedure 
second disadvantage writing specifications easy sense may borrow felicitous joke erard berry inria antipolis 
require non trivial encodings data structures functions operating 
true inductive types great help express complex data structures modular way 
powerful taste particular constructors free easy function definitions expressed higher order primitive recursive schema pattern matching definitions ml 
notion parameterized proof allow engineer proof development process 
second approach advantages disadvantages 
major specifications executable forcing user think terms possible execution know harder simply expressing logical properties 
second meta theoretic properties specification checked order ensure hurry principle proofs pretend 
current proof tools developped algebraic community automatic difficult develop proofs complex logical structure 
specifications structured modular way tools take full advantage facility 
sketch potential solutions investigating plan investigate order answer questions 
main idea combine advantages worlds designing new calculus take roots 
membership equational logic quite simple quite powerful 
atomic formulae equations sort membership assertions sentences horn clauses 
enjoys initial algebra semantics 
enjoy decidability properties tree automata techniques 
candidate target expressive notion inductive type 
main issue elaborate form recursor express inductive types induction axiom curry howard principle 
know done specifications constructors constrained order sorted specification rewrite membership rules sort memberships variables conditions confluent terminating sort decreasing 
believe deal commutativity associativity identity idempotency combinations 
second important issue membership equational logic define functions operating inductive type 
know definitions large extent 
code extraction open problem definitions involved 
difficult compilation pattern matching definitions ml 
far aiming calculus inductive constructions inductive types specified subset membership equational logic function definitions may pattern matching definitions subset membership equational logic 
issue scaling major issue far users concerned 
need combine partial answers 
member group designed new version calculus constructions powerful notion module powerful sml modules enjoying curry howard interpretation strong normalization theorem 
continued order encompass full calculus inductive constructions 
second part done additional collaboration investigating new version calculus constructions notion decision procedure built allowing delegate proof decidable logical fragments specialized tools rely answer 
relying answer fundamental reasons 
enforce belief proof correct 
second important point keep manageable proof terms coq implementation 
returning possibly gigantic proof term coq quite common practice practical approach current possibility 
technically decision procedures encoded function membership definitions 
step direction consist assuming decision procedures encoded pattern matching definitions confluence termination proved inside coq delegate proof normal form computation inductive proof 
rewrite engine maude cime elan 
terminates description logical language trying develop 
constructive higher order logic language major issue practice computations may concurrent 
main reason course concurrency operational flavour 
concurrency easily expressed rewrite rules 
expressing concurrent computations rules need properties required efficient execution membership equational logic 
rules simply rewrite rules describing possible states computation evolve possibly concurrently 
underlying logic rewrite logic 
ability expressing concurrent computations rewrite logic key property reflective allowing develop tactics theorem proving purposes logic 
proved major advantage want benefit terms modular development tactics possibility prove properties tactics logic 
maude rewrite logic built top membership equational logic 
intention build top possibly evolving version calculus constructions 
course intellectual construction face reality 
author thoughts come successful 
acknowledgments ideas arose discussing people afore groups coq demons maude especially gilles dowek christine paulin 
okada deserves special introducing curry howard world introducing hurry counterpart 
bibliography borovansk kirchner kirchner 
moreau vittek 
elan logical framework computational systems 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 
adel jean pierre jouannaud jos meseguer 
specification proof membership equational logic 
bidoit dauchet editors theory practice software development lille number lecture notes computer science 
springer verlag 
claude march 
cime completion modulo proc 
th rewriting techniques applications new jersey lncs pages 
system description available www lri fr demons cime html 
coquand paulin mohring 
inductively defined types 
mints editors proceedings volume lncs 
springerverlag june 
courant 
calculus modules pure type systems 
universit de paris sud 
gilles dowek amy felty hugo herbelin erard huet christine benjamin werner 
coq proof assistant user guide version 
inria rocquencourt ens lyon 
jean pierre jouannaud okada 
inductive data type systems 
technical report universit de paris sud 
jean pierre jouannaud okada 
data type systems 
theoretical computer science february 
lincoln clavel eker meseguer 
principles maude 
meseguer editor proceedings st international workshop rewriting logic applications electronic notes theoretical computer science 
narciso mart oliet jos meseguer 
rewriting logic logical semantic framework 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 

