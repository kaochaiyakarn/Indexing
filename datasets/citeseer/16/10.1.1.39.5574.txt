discrete comput geom discrete computational geometry springer verlag new york optimal output sensitive convex hull algorithms dimensions chan department computer science university british columbia vancouver british columbia canada 
simple output sensitive algorithms construct convex hull set points dimensions worst case optimal log time space denotes number vertices convex hull 

set points euclidean plane euclidean space consider problem computing convex hull conv defined smallest convex set containing convex hull problem received considerable attention computational geometry 
algorithm known graham scan achieves log running time algorithm preparata hong complexity 
algorithms optimal worst case number hull vertices small possible obtain better time bounds 
example simple algorithm called jarvis march construct convex hull nh time 
bound improved log algorithm due kirkpatrick seidel provided matching lower bound simplification algorithm reported chan 
nh time algorithm obtained gift wrapping method extension jarvis march originated kapur 
faster involved algorithm discovered edelsbrunner shi having running time log 
algorithm clarkson shor chazelle matou sek succeeded attaining optimal log time research supported fellowship nserc postgraduate scholarship :10.1.1.125.6778
chan algorithms complexity measured function output size said output sensitive 
note point simple output sensitive convex hull algorithm extension running optimal log time 
previous optimal deterministic methods including algorithm kirkpatrick seidel improvement chan rely existence linear time procedure finding medians 
chazelle matou sek dimensional algorithm complex tools derandomization approximations 
algorithms avoid derandomization altogether dobkin kirkpatrick hierarchies data structures dimensional case 
idea speed jarvis march gift wrapping method simple grouping trick 

output sensitive algorithm dimensions set points 
simplicity assume points general position points collinear see section deal degenerate point sets 
recall jarvis march computes vertices convex hull time counterclockwise ccw order sequence wrapping steps pk pk previous vertices computed vertex pk set point maximizes angle pk pk pk 
wrapping step obviously done time scanning points appropriate initialization method constructs entire convex hull nh time 
observe wrapping step done faster preprocess points 
choose parameter partition groups size compute convex hull group log time say graham scan 
gives possibly overlapping convex polygons vertices preprocessing time log log 
wrapping step done scanning polygons computing tangents supporting lines polygons current vertex pk shown fig 

tangent finding takes logarithmic time convex polygon binary fibonacci search dual problem intersect convex polygon ray time required wrapping step log steps needed compute hull total time algorithm log log log 
pseudocode algorithm just described 
procedure runs log time successfully returns list vertices conv ccw order algorithm hull 
partition subsets size 

compute conv pi graham scan store vertices array ccw order 

rightmost point optimal output sensitive convex hull algorithms dimensions fig 

wrapping set convex polygons size 


compute point qi pi maximizes pk qi pk performing binary search vertices conv pi 
pk point maximizes pk pkq 
pk return list pk 
return incomplete choosing complexity algorithm log log 
value known advance sequence guess value shown strategy chazelle matou sek algorithm algorithm hull 

hull min 
incomplete return procedure stops list hull vertices soon value loop reaches exceeds number iterations loop log log base logarithms tth iteration takes log time 
total running time algorithm log log log log log 
storage requirement clearly linear 
chan 
output sensitive algorithm dimensions set points 
assume general position points coplanar see section 
suffices construct facets triangular faces convex hull aid dictionary easily produce set vertices edges adjacency order information additional log time 
higher dimensional analogue jarvis march kapur gift wrapping method computes hull facets time follows facet generate adjacent facets fj performing wrapping step edges ej 
wrapping step ej compute point pj maximizes angle conv ej pj pj ej 
step done time find facets adjacent time 
assuming initial facet wrapping steps breadth depth search generate facets convex hull 
dictionary detect duplication ensure facet processed 
implies algorithm performs wrapping steps runs nh time 
grouping idea previous section improve time complexity optimal log maintaining linear space 
calls graham scan line hull replaced calls preparata hong threedimensional convex hull algorithm complexity 
line need calculate tangents supporting planes convex polyhedra line dual space intersect convex polyhedra ray 
hierarchical representation dobkin kirkpatrick store polyhedra requires linear time preprocessing tangents computed logarithmic time 
analysis identical dimensional algorithm 
pseudocode follows algorithm hull 
partition subsets size 

compute conv pi preparata hong algorithm store dobkin kirkpatrick hierarchy 
initial facet conv 

return 
pick set 
ej edges 


compute point qi pi maximizes angle conv ej qi searching hierarchy conv pi 
pj point maximizes angle conv ej ej optimal output sensitive convex hull algorithms dimensions 
fj conv ej pj 
fj 
fj fj 
return incomplete queue stack implement dictionary implement dictionary operations carried log time 
fact clever implementations gift wrapping method shelling order replace need dictionaries just priority queue 
choose group size guess value sequence 
refinements algorithm hull 

hull min 
incomplete return section suggest ideas possible improvements may speed algorithms practice discuss degenerate cases handled 
idea 
points interior conv pi line hull hull eliminated consideration 
may potentially save iterations algorithm affect worstcase complexity 
idea 
hull hull choose group size balance log preprocessing cost log cost wrapping steps 
alternatively choose min log set log 
choice affect cost terms reduces cost log results smaller constant factor 
idea 
idea dominant cost algorithm hull lies preprocessing computation convex hulls groups line 
reduce cost may consider reusing hulls computed previous iteration merging group size increased 
suppose previous group size 
convex hull convex polygons computed linear time dual problem intersect convex polygons compute convex hull convex log time standard divide conquer algorithm 
hulls line constructed log chan log time 
said dimensional case merging convex polyhedra possible linear time complicated 
idea 
hull sequence group sizes guess improvements ideas fact permit choose slower growing sequences retain optimal log complexity 
example possible sequence simply corresponds doubling group size iteration 
note coarser sequence approximates denser sequence requires iterations 
may try optimize worst case constant factor lower order terms sequences different growth rates 
suggest sequence 
idea 
welzl observed binary search line algorithm hull replaced simpler linear search changing time complexity algorithm 
monotonicity property provides justification course algorithm variable qi line advance ccw direction conv pi fixed result vertex convex hull convex polygons total vertices computed hp time gift wrapping polygon version algorithm fact dual intersection algorithm rourke see 
total cost hull reduced log time log factor saving second term 
constant factor unaffected saving idea employed term dominant linear search easier implement 
analogous simplification dimensions 
degeneracies 
algorithms hull hull wehave assumed points general position 
way cope degenerate point sets apply general perturbation methods methods may cause output size increase point hull vertex lies hull boundary may vertex perturbation 
better handle degenerate cases directly 
algorithm hull difficult point maximizes angle pk pkq line pick point farthest pk rule break ties line 
algorithm hull line ej aj bj oriented ccw order point maximizes angle conv ej line pick point maximizes angle achieves maximum pick farthest aj 
rule break ties line 
degenerate point set easier keep track edges facets facets convex polygons triangles 
sets edges line add oriented edges may complete description facet incident edges know equation plane containing facet equation sufficient perform wrapping edges 
optimal output sensitive convex hull algorithms dimensions 
extensions new optimal output sensitive convex hull algorithms algorithms simpler previous log algorithms particularly threedimensional case constant factors big oh smaller previous algorithms worst case 
simplicity approach advantage applicable variety problems 
illustration consider problem computing lower envelope set line segments plane define boundary denotes unbounded trapezoid conv segment 
convex hulls correspond lower envelopes lines dual 
output size number edges envelope known 
hershberger worst case optimal algorithm computes lower envelopes log time 
describe algorithm output sensitive technique 
observe trace edges left right performing ray shooting operations ray shooting operation ray emanating point beneath find trapezoid crosses 
operation done time gives na nh method jarvis march 
improve running time partition groups segments compute lower envelope group hershberger algorithm takes log time total 
known data structures perform ray shooting envelopes log time preprocessing ray shooting methods simplified case envelopes monotone 
implies ray shooting operations done log time 
choosing appropriate group size guessing output size give optimal output sensitive log algorithm computing lower envelope 
applications technique including output sensitive construction higher dimensional convex hulls levels 
cases grouping idea combined appropriate data structures obtain optimal log algorithms output size sufficiently small suitable constant 
acknowledgments wish jack snoeyink great support encouragement valuable suggestions 

chan 
output sensitive results convex hulls extreme points related problems 
discrete comput 
geom issue pp 


chan snoeyink 
yap 
output sensitive construction polytopes dimensions chan clipped voronoi diagrams 
proc th acm siam symp 
discrete algorithms pp 


kapur 
algorithm convex polytopes 
assoc 
comput 
mach 

chazelle 
optimal algorithm intersecting dimensional convex polyhedra 
siam comput 

chazelle dobkin 
intersection convex objects dimensions 
assoc 
comput 
mach 

chazelle edelsbrunner grigni guibas hershberger sharir snoeyink 
ray shooting polygons geodesic triangulations 
proc th internat 
colloq 
automata languages programming pp 
lecture notes computer science vol 

springer verlag berlin 

chazelle matou sek 
output sensitive convex hull algorithm dimensions 
comput 
geom 
theory appl 

clarkson shor 
applications random sampling computational geometry ii 
discrete comput 
geom 

dobkin kirkpatrick 
fast detection polyhedral intersection 
theoret 
comput 
sci 

dobkin kirkpatrick 
determining separation preprocessed polyhedra unified approach 
proc th internat 
colloq 
automata languages programming pp 
lecture notes computer science vol 

springer verlag berlin 

edelsbrunner 
algorithms combinatorial geometry 
springer verlag berlin 

edelsbrunner cke 
simulation simplicity technique cope degenerate cases geometric algorithms 
acm trans 
graphics 

edelsbrunner shi 
log time algorithm dimensional convex hull problem 
siam comput 

canny 
efficient approach removing geometric degeneracies 
proc 
th acm symp 
computational geometry pp 


graham 
efficient algorithm determining convex hull finite planar set 
inform 
process 
lett 

hart sharir 
nonlinearity davenport schinzel sequences generalized path compression schemes 
combinatorica 

hershberger 
finding upper envelope line segments log time 
inform 
process 
lett 

hershberger suri 
pedestrian approach ray shooting shoot ray take walk 
proc 
th acm siam symp 
discrete algorithms pp 


jarvis 
identification convex hull finite set points plane 
inform 
process 
lett 

kirkpatrick seidel 
ultimate planar convex hull algorithm 
siam comput 

mulmuley 
computational geometry randomized algorithms 
prentice hall englewood cliffs nj 

rourke 
chien olson 
new linear algorithm intersecting convex polygons 
comput 
graph 
image process 

rourke 
computational geometry cambridge university press cambridge 

preparata hong 
convex hulls finite sets points dimensions 
commun 
acm 

preparata shamos 
computational geometry 
springer verlag new york 

swart 
finding convex hull facet facet 
algorithms 
received april revised form september november 
