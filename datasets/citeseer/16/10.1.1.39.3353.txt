coherence theorem martin lof type theory michael programming methodology group department computer science university goteborg chalmers university technology goteborg sweden type theory proposition represented type type proofs 
consequence equality relation certain type represented binary family types 
equality type may conventional inductive 
conventional equality means particular equivalence relation singled equality inductive equality call identity inductively defined smallest reflexive relation 
convenient know type representing proposition collapsed sense inhabitants identical 
uniqueness identity proofs arbitrary type derivable inside type theory large class types may proved 
main result proof type decidable identity unique identity proofs 
result convenient proving class types decidable identities closed indexed sum 
proof main result completely formalized kernel fragment type theory mechanized alf 
proofs auxiliary lemmas explained terms category theoretical properties identity 
suggest coherence theorems result rephrasing main result context conventional equality inductive equality replaced initial category structure second smallest reflexive relation 
key words coherence unique identity proofs type theory categories type theory 
martin lof type theory may seen framework expressing constructive mathematical reasoning 
interactive proof assistant alf implement formalization type theory develop formal type theory proofs 
fundamental ingredients type theory set element set family sets dependently typed function 
type result function application may depend values arguments function place function xm family sets xm range variable may depend values assigned preceding variables 
gamma propositions types principle proposition represented set set constructive proofs logical constants quantifiers connectives represented corresponding set forming operations accordance curry howard analogy brouwer heyting kolmogorov interpretation 
familiar terms instance set relation category understood type theoretic sense cases evident propositions types principle 
concepts defined quantifying totality sets totality relations fixed set 
mistaken impredicative quantification understood light distinction set type 
fact basic machinery type theory may summarized principles collection types closed indexed product collection sets form type set type 
may naive symbolism depict relation set type follows set type set type different versions martin lof type theory available version corresponds best theory part iii 
striking features version type theory opposed versions ample amount type information explicitly terms second absence equality reflection rule allow infer terms corresponding propositional equality 
versions type theory problems addressing may disappear completely 
data irrelevance collapsed sets 
construction formalized supplied data construction legal affecting final result 
point different reasons function may constant arguments 
hand constancy may depend behaviour function notion equality compare output data 
hand constancy may behaviour function equality output data type irrelevant data 
instance function defined singleton set constant regardless measure equality target set 
obviously knowledge sets certain form collapsed sense having element may simplify irrelevance proofs knowledge rely analysis context irrelevant data appear 
inductive equality conventional equality 
statement irrelevance theorem notion equality order compare syntactically different outputs statement set collapsed notion equality respect elements set stated equal 
point methods dealing equality 
inductive equality equality set introduced means inductive definition reflexivity rule 
explicitly indicated term identity mean equality inductively defined reflexivity 
second conventional equality assume possibility say extracting notion equality arbitrary set demands equality defined 
bishop emphasizes equality way general quotient sets constructed postulated 
conventional equality categories connection type theory 
may developing theory setoids setoid set equivalence relation 

relationship notions set setoid type theory formal point view analogous notions preset set analysis bishop notion set 
light analogy view distinction sets carry equality predicate central 
novelty analysis paradoxes comes recognition arbitrary preset carries underlying identity predicate 
paradoxes russell cantor arises unwarranted belief existence identity predicate 

equality argument inductive equality arbitrary sets 
prefer see breakdown analogy set type theory preset 
logical problem inductive equality pragmatic remember inductive equality function type coincide ordinary pointwise equality 
categories connection type theory 
recall informal definition category system consisting class objects pair objects set arrows object designated arrow unit arrow triple objects binary operation composing arbitrary arrow arbitrary arrow produce arrow delta composition arrows associative unit arrows acting left right unit delta delta delta delta delta delta arbitrary arrows appropriate sorts 
generalized algebraic theories gat cartmell may axiom system category 
doing choice concerning treatment arrow equality 
alternative express arrow equations instance associativity arrow composition terms built equality goes sort language gat option introducing third sort proofs arrow equality 
alternative context type theory correspond expressing arrow equations terms definitional equality lead narrow concept 
follow path indicated second alternative 
nature sorts objects arrows arrow equality little vague concerning objects usually insist arrows fixed source target form set proofs arrows equal form set 
categories preordered sets 
goes saying constructive notion preordered set coincides part small category involve arrow equality 
define preorder set defining arrow sets unit arrows arrow composition operators category completed 
terms informal definition category section corresponds starting category construction set objects breaking construction reach part 
filling gap preordered set small category objects precisely elements set consists defining equivalence relations arrow sets proving category axioms addition associativity left right unit laws include compatibility arrow composition arrow equality 
gap filled true relation arrow equality refer resulting category category collapsing arrow equality 
small category preordered set nice equalities preorder proof sets preordered set small category arrow equality stripped 
category category structures set 
balance set category objects precisely elements set referred category structure set 
category structure homomorphism functor defined identity object action 
turn category structures set category category structure homomorphisms arrows 
defined identity object action natural transformations define category structure homomorphisms type equal send arrow equal arrows 
initial category structures 
initial category structure set initial object category category structures set 
trivial consequence definition set initial category structure category family objects category labeled elements set unique way extended functor defined initial category 
identity category 
central view put forward hofmann streicher identity proofs elements certain set identical sense inductive equality arrows category identity category associated set inductive equality arrow equality 
small means objects form set 
transitivity composition take arguments different order 
difference analogous sequential functional ffi composition functions defined equal 
identity type theory inductive equality 
identity type theory inductive equality 
inductive equality available set difficult define nontrivial equality arbitrary set 
specify identity relation capable mimicking certain aspects inductive equality 
introduce classes relations 
relation set logical identity smallest reflexive relation reflexive contained reflexive relation set 
relation set categorical identity preorder underlying initial category structure set cf section 
observation 
categorical identity logical identity 
preorder extended category structure follows definition categorical identity smallest preorder 
easy exercise smallest reflexive relation 
inductive equality set logical identity 
evident elimination rule inductive equality stated section 
inductive equality set inductive equalities corresponding identity proof sets inductive equality original set categorical identity 
constructing identity category remains verify initiality category category structures 
definition 
set decidable contains element assumption element yield element empty set 
may refer decidable set set 
set collapsed elements identical 
may refer collapsed set set 
set decidable identities elements set proofs identical decidable 
may refer set decidable identities di set 
set collapsed identity sets elements set proofs identical collapsed 
may refer set collapsed identity sets set unique identity proofs ci set 
unicity identity proofs 
possible exception indexed product elimination rule set type theory may constructed formation rules uniform pattern explicit dybjer 
may talk standard elimination rule associated set 
expect identity sets collapsed impossible prove general long type theory restricted standard elimination rules 
negative result proved hofmann streicher groupoid interpretation type theory 
uniqueness identity proofs general principle type theory established special cases explicitly added axiom 
hofmann main results relations certain set say contained elements related related note proving converse natural way depend having access smallest arrow equality compatible preorder 
concern unicity identity proofs axiom contributes concern 
hofmann shows empty set singleton set set natural numbers ci sets 
shows class ci sets closed formation identity set indexed sum 
monoidal coherence discrete category 
monoidal coherence dybjer notion set natural numbers seen category plays central part 
informal level category may thought discrete category defined exactly arrow depending natural number 
formalization arrows defined identity proofs 
means informal level justified discrete arrow sets collapsed formalization reflected explicit uniqueness lemma proofs fly relevant instances lemma 
interpretation hofmann negative result general identity category play part discrete category prove type theory arrow sets collapsed 
context di ci theorem stated section shows discrete category set sense set decidable identities identity category equivalent discrete category 
result 
result generalization hofmann proof decision procedure equality set natural numbers unique identity proofs 
ffl di ci theorem 
set decidable identities collapsed identity sets 
give formal proof fragment type theory generated indexed product binary sum empty set identity set corresponding standard elimination rules 
note passing di ci theorem combined negative result uniqueness identity proofs shows decision procedure expressed type theory identity arbitrary set 
application di ci theorem give informal proof class di sets closed indexed sum 
ffl theorem 
sum family di sets indexed elements di set di set 
proved informally fragment type theory generated indexed product indexed sum binary sum empty set identity set corresponding standard elimination rules 
order isolate certain aspects proof di ci theorem decidability category theoretical view identity give theorems type theory inductive equality different ways combined portions theory inductive equality reproduce di ci theorem 
says decidable categorical identity certain sense collapsed identity proof sets 
second implies presence decidability distinction logical categorical identity disappears 
organization 
ffl coherence theorem 
set initial category structure decidable arrow sets collapsed respect arrow equality 
give informal proof type theory identity sets indexed products indexed sums binary sums empty set 
ffl coherence theorem 
set decidable smallest reflexive relation relation preorder corresponding category collapsing arrow equality initial category structure 
give informal proof type theory identity sets indexed products indexed sums binary sums empty set 
organization 
peter dybjer valuable discussion suggesting improvements presentation jan smith suggesting translation di ci theorem context conventional equality thomas schreiber pointing relevance di ci theorem reasoning updating dependently typed store showing lego version di ci theorem 
rest organized follows 
section introduce alf notation informal type theory notation sets shall section develop theory inductive equality giving detailed proof di ci theorem parallel corresponding alf code informal proof theorem section give proof sketches coherence theorems show may employed alternative proofs di ci theorem 
notational issues types certain sets 
rules associated basic set forming operations functions elements sets input giving elements sets outputs 
need functions give sets outputs 
reason introduce level types level sets alf organized way 
sense big quantifications mentioned section instance definition logical identity section 
types alf 
formal kernel alf may described dependently typed fij calculus distinguished type type sets distinguished family types type sets set associates type elements 
give informal explanations notations associated types purpose render readability alf code shall 
product type 
ff type fi expression possibly containing variable fi result substituting free fi usual renaming bound variables avoid clashes type arbitrary object type ff ff fi type functions arbitrary object type ff assigns object type fi 
notational issues types certain sets 
application 
ff fi previous paragraph function type ff fi object type ff object type fi obtained applying argument abstraction 
ff fi expression possibly containing variable object type fi arbitrary object type ff function type ff fi arbitrary object type ff assigns object type fi 
iterated product abstraction application 
notation favour ff xn ff fi ff ff fi xn iterated product variable may omitted appear subsequent ff 
fi 
iterated product adjacent identical types need duplicated instance ff ff fi may abbreviated ff fi 
type sets type elements 
symbol set type sets set el type elements 
communications alf el symbol suppressed altogether colon pretty printed 
may emphasize distinction set type writing element set object type 
may prefer notation favour el ff fi ff fi fi ff ff fi particular sets 
indexed product pi 
set family sets pi set functions arbitrary element assigns element 
precisely elements pi codes representing functions type 
encoding function denoted ab decoding operation function type pi denoted app ab appropriate relationship decoding encoding operations expressed fi conversion rule app ab ab 
prod set set set lam set set prod app set set fn prod app lam 
general prefer product type product set representing universal quantification 
presence product types main shall product set translate family types family sets elimination rule may applied section 
particular sets 
identity set 
set elements set proofs identical 
proof identity reflexivity denoted family sets elimination function may defined stipulating values 
set set ref set elimi set set ref elimi ref 
abbreviation assertion identical elements set inhabited 
proof literally element 
indexed sum sigma 
set family sets sigma set ordered pairs component 
precisely elements sigma codes representing pairs 
write element sigma corresponds elements sigma family sets sigma elimination function sigma may defined stipulating values 
sum set set set pair set set sum split set set sum set pair sum split pair binary sum sets disjoint union 
element element element information alternatives 
canonical injections denoted ab ab respectively family sets elimination function may defined stipulating values 
plus set set set plus set plus set plus set plus reasons may pass set proposition expression inhabited defined denote proposition proved exhibiting element set di ci context inductive equality 
empty set set elements family sets may elimination introduce function 
set case set decidability set pix new set formal expression definition decidable set section 
dec set set dec plus prod 
family set abstraction may write pix sigmax alternatively pi sigma respectively 
di ci context inductive equality 
section give completely formalized mechanized proof di ci theorem context inductive equality 
show di ci theorem may employed proof theorem class di sets closed indexed sum 
intuition 
occasionally adhere notational conventions category theory 
instance gamma 
means arrow morphism object object category 
category label may omitted 
arrow drawn diagram label attached label usually name arrow name category 
connection functors may notation confuse object action arrow action say functor sends arrow gamma 
arrow denoted gamma 
gamma 
object arrow action respectively 
identity category 
central proof view equality proofs arrows category 
means arbitrary set elements may seen objects category identity category arrow object element object element proof element arrows type considered equal identical sense inductive equality 
show gives category category arrow inverse respect arrow composition 
prove relevant parts fact needed cf 
identity category associated set certain sense smallest categories objects precisely elements set represents initial category structure 
things identity explained terms universal property identity category list 
intuition 
ffl operations identity coercion identity mapping introduced 
ffl fact arrows identity category invertible 
ffl naturality lemma special case proved proof di ci theorem 
gamma 
family arrows functors identity category category natural transformation meaning diagram commutes naturality diagram 
singleton set unique identity proofs 
illustrate naturality treat case singleton set element elimination rule singleton set states arbitrary family sets function may defined stipulating value 
rule identity reflexive immediately gives family arrows ffi gamma 
identity category associated 
recall gamma 
context synonym 
family arrows ffi natural transformation constant functor identity functor diagram phi phi phi phi ffi hj ffi commutative 
diagram identity proofs 
commutative arbitrary elements 
assuming moment naturality ffi means delta ffi ffi groupoid laws proofs identical ffi delta ffi gamma naturality ffi follows immediately identity elimination 
note naturality verbatim way dybjer mentioned section 
di ci context inductive equality 
general case 
case arbitrary set decidable identities decidability define family constant functions xy naturality lemma seen apply fixed element may show family functions ax natural transformation yoneda functor 
naturality equation gives combined groupoid laws family left inverses functions xy leads situation set defined constant function left inverse 
clearly set collapsed 
proof di ci theorem 
give formal proof di ci theorem organized follows 
elementary identity theory second definition constant endo function decidable set constancy lemma third proof set defined constant function left inverse collapsed collapse lemma fourth definition family left inverses family functions xy left inverse lemma fifth combination lemmas proof di ci theorem 
identity theory 
define groupoid operations identity sets prove groupoid law shall need introduce operations identity coercion identity mapping corresponding logical rules express predicates stable identity function preserves identity respectively 
identity coercion identity mapping 
identity coercion 
set family sets elimination define family functions xy subject definitional equality xx place formal proof need product set order apply elimination rule identity 
constant codomain 
definitional equality equation follows defining equations appearing abbreviations instances elimination rules 
proof di ci theorem 
set set app elimi prod lam identity mapping 
sets function elimination define family functions xy subject definitional equality xx set elimi ref category theoretical interpretation 
language category theory identity coercion xy shown constitute arrow action functor identity category category sets functions object action family sets identity mapping xy shown constitute arrow action functor identity category identity category object action function groupoid structure identity sets 
groupoid operations 
arbitrary set define groupoid operations identity proofs 
unit arrow written proof reflexivity 
arrow composition written delta defined identity coercion family sets 
inverse arrow written gamma defined elimination family sets 
operations subject definitional equalities delta gamma 
set set elimi ref functions considered equal send input identical outputs 
di ci context inductive equality 
groupoid law 
define family functions axy delta gamma proving inverse arrow right inverse respect arrow composition elimination family sets delta gamma leaves simplification inhabiting set arbitrary element inhabitant course reflexivity identity 
set ref elimi ref ref ref constancy lemma 
decidable set constant function may defined values set 
proof give families functions arbitrary set 
recall stands set representation formula 
cona con cona assume set elimination applied constant family sets define function cona subject definitional equalities ae cona cona pix order define function prove cona constant function arbitrary element assume elements consider family propositions sets cona cona 
elimination proved arbitrary proved special cases pix 
recalling definition equations con leaves proving simplification case inhabited second inhabited pix case solved reflexivity identity second case solved absurdity elimination apply elements get element proof di ci theorem 
con set dec con prod set dec con con prod con con ref case app collapse lemma 
defined set constant function left inverse set collapsed 
suppose set constant function left inverse means functions li representing assumptions constant left inverse respectively 
elements construct proof composing proofs 
identities follow case left inverse second case identity mapping constant third case symmetry identity left inverse groupoid notation identity proofs proof obtained li delta bg delta li gamma set li li li li left inverse lemma 
family functions xy corresponding family left inverses xy di ci context inductive equality 
proof give definition xy family functions xy xy xy assume set family functions xy construct corresponding family left inverses xy groupoid operations define xy equation xy delta xx gamma order define xy prove xy left inverse xy elimination family sets xy xy 
leaves simplification proving arbitrary element xx delta xx gamma 
instance right inverse groupoid law section 
set nt nt nt ref set nt nt nt nt elimi nt nt nt ref di ci theorem 
set decidable identity sets unique identity proofs 
preceding lemmas combined way yield proof di 
assume set decidable identities function 
constancy lemma define family constant functions xy left inverse lemma left inverse 
identity set constant function left inverse may collapse lemma conclude set collapsed arbitrary elements theorem 
condi set di dec condi di con di set di dec di condi di di condi di condi di theorem 
class di sets closed indexed sum 
purpose show relevance di ci theorem brief parts proof 
assume set family sets fixed rest section 
notations second projections 
sigma sigma suppress proof characterization identity dependent pairs logical equivalence 
sigma lemma 
elements sigma identical proof 
assume arbitrary decidable identities prove sigma decidable identities prove decidable arbitrary elements sigma 
sigma eliminations may assume pairs respectively elements elements respectively task prove proposition decidable 
decidable identities follow proofs oe oe second implication trivial sigma lemma oe prove implication prove additional assumption element 
decidable identities follow proofs aa oe aa oe implication trivial sigma lemma antecedent implies 
prove second implication prove additional assumption aa turn prove deriving absurdity additional assumption 
sigma lemma sigma elimination absurdity follow proof absurdity additional assumption element aa write oe 
di ci context conventional equality 
summing interesting assumptions available quest absurdity proof close proof theorem aa aa relevance di ci theorem apparent applied assumption decidable identities show identity proofs identical identity coercion aa implies aa combination aa absurd 
di ci context conventional equality 
give coherence theorems type theory inductive equality 
theorem category theoretical view identity obtained adaptation di ci theorem categorical identity inductive equality 
second theorem reduces problem finding category structure finding decidable logical identity 
coherence theorem 
set initial category structure decidable arrow sets collapsed respect arrow equality 
proof observe going back context inductive equality constructing identity category proving initial property coherence theorem immediately applied decidable inductive equality give proof di ci theorem 
proof lemmas categorical identity 
developed assumption fixed set fixed initial category structure arrow sets usual notation arrow operations arrow equality xy 
add assumption decidability show proof section di ci theorem may modified give proof coherence theorem 
identity induction 
indexed sum existence uniqueness category structure homomorphisms defined initial category structure may establish proof principle 
xy family arrow predicates holds unit arrows stable arrow composition compatible arrow equality elements ab holds arrow 
assumptions define new category structure arrow sets sigmau ab 
arrows considered equal components equal sense ab 
rest new category done projection fst ab functor 
initiality gives right inverse precisely pxy set 
coherence theorem 
ffi ab projection fst ab meaning fst ab ffi ab ab arbitrary arrow 
second component ffi ab proof component fst ab ffi ab property ab may compatible arrow equality conclude property ab initial category groupoid 
dual initial category category initiality gives contravariant functor sending arrow arrow gamma 
prove left right inverse laws showing gamma inverse arrow may apply identity induction arrow predicates ab gamma delta ab ab delta gamma ab respectively 
left inverse lemma 
prove naturality lemma general form indicated section consider special case family arrow functions xy assumed respect arrow equality show ay delta ay delta ax may identity induction arrow predicate xy ay delta ay delta ax fixed element may chose infer ab ab ab delta ab delta aa see ab left inverse ab ab delta aa gamma note left inverse ab preserves arrow equality arrow composition 
adding decidability 
assuming arrow sets decidable proof case inductive equality modifications 
arrow equality inductive equality proofs inductive equality 
consequence second part constancy lemma section rephrased proving cona cona identical sense inductive equality prove related reflexive relation 
second collapse lemma rephrased left inverse assumed preserve equality 
assumption decidable arrow sets gives family ab constant functions ab constant function trivially respects equality left inverse lemma applied give family equality preserving left inverses collapse lemma put showing arrow sets collapsed respect arrow equality 
arbitrary elements di ci context conventional equality 
coherence theorem 
set decidable smallest reflexive relation proof sets written transitive gamma 
arrow sets categorical structure family arrow valued functions xy 
gamma 
diagram forms commutative 
gamma gamma gamma explicit statement 
elaborate equivalence formulations 

commutative diagrams show functorial definition unit composition operations identity proofs xy constant function 
fact commutative triangle shows delta equal arrows particular showing equal delta 
usual delta denotes arrow composition 
coherence theorem di ci 
proof indicate theorem prove di ci theorem 
clearly inductive equality smallest reflexive relation decidable act theorem 
construction identity category theorem gives family functions xy 
constant respect identity 
commutativity left diagram see reflexivity proof mapped 
may elimination conclude identity proof mapped identity function constant collapsed 
proof coherence theorem 
assume set decidable logical identity identity proof sets reflexivity proofs 
assume category structure usual arrow sets written gamma 
arrow operations delta arrow equality xy 
constant endo functions identity proof sets 
just proof coherence theorem decidability define family functions fl xy constant sense fl xy fl xy related reflexive relation 
epimorphisms ffl arrows 
unit arrow clearly epimorphism relation ffl epimorphism gamma 
reflexive 
gives function maps arbitrary identity proof reflexive contained reflexive relation 
refer property coherence theorem 
epimorphism ffl xy gamma 
composing fl define ffl xy ffl xy fl xy 
introduce term ffl arrow arrow form ffl xy 
properties ffl arrows immediate definition 

ffl arrow epimorphism 

ffl arrows gamma 
equal arrows 
second property follows constancy fl lifted relation ffl xy gamma xy clearly reflexive relation 
definition xy gamma 
consider relation defined existence arrow gamma 
diagram form commutative 
gamma gamma gamma psi ffl ffl relation reflexive desired property virtue second property ffl arrows left unit category law 
gives function maps arbitrary identity proof arrow xy gamma 
way diagram form commutative 
gamma gamma gamma psi ffl ffl refer diagram ffl triangle 
identity transitive 
transitivity follows identity contained obviously reflexive relation oe 
delta denote element obtained transitivity 
proof desired properties 
omega omega omega omega oe omega omega omega omega gamma jj jj ae ae ae ae considering diagram note small triangles commutative arrow gamma 
epimorphism large triangle commutative 
order prove large triangle commutative sufficient construct center point ffl arrows outwards small triangles form indicated ffl triangle commutative arrow gamma 
epimorphism ffl arrow chose center point outgoing ffl arrows correspond identity proofs delta delta delta respectively clockwise order 
prove arrow form xx identity arrow observe commutativity ffl triangle delta ffl xx ffl combination left unit law ffl arrows epimorphisms shows xx altenkirch nordstrom von 
user guide alf 
chalmers university technology sweden may 
available www file ftp cs chalmers se pub users alf ps augustsson coquand nordstrom 
short description logical framework 
huet plotkin editors proceedings workshop logical frameworks antibes may 
dybjer 
extracting proof coherence monoidal categories proof normalization monoids 
berardi coppo editors types lncs pages 
bishop 
foundations constructive analysis 
mcgraw hill 
cartmell 
generalised algebraic theories contextual categories 
annals pure applied logic 
dybjer 
inductive sets families martin lof type theory set theoretic semantics 
logical frameworks pages 
cambridge university press 
dybjer 
general formulation simultaneous inductive recursive definition type theory june 
appear journal symbolic logic 

formalizing constructive mathematics 
dold eckmann editors constructive mathematics pages 
springer 
hofmann 
conservativity equality reflection intensional type theory 
proceedings bra types workshop lncs torino 
springer verlag 
hofmann 
extensional concepts type theory 
phd thesis university edinburgh 
hofmann streicher 
groupoid model refutes uniqueness identity proofs 
proceedings th symposium logic computer science lics paris 
magnusson nordstrom 
alf proof editor proof engine 
types proofs programs lncs pages nijmegen 
springer verlag 
martin lof 
intuitionistic theory types 
technical report university stockholm 
nordstrom petersson smith 
programming martin lof type theory 

oxford university press 
