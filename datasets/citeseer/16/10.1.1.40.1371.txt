principles mixed initiative user interfaces eric horvitz microsoft research redmond wa usa horvitz microsoft com debate centered relative promise focusing user interface research developing new metaphors tools enhance users abilities directly manipulate objects versus directing effort developing interface agents provide automation 
review principles show promise allowing engineers enhance human computer interaction elegant coupling automated services direct manipulation 
key ideas highlighted terms lookout system scheduling meeting management 
keywords intelligent agents direct manipulation user modeling probability decision theory ui design debate researchers great opportunities lay realm human computer interaction 
group researchers expressed enthusiasm development application new kinds automated services referred interface agents 
efforts group center building machinery sensing user activity automated actions :10.1.1.39.8472
researchers suggested effort focused automation better expended exploring new kinds metaphors conventions enhance user ability directly manipulate interfaces access information invoke services 
innovations fronts fast paced 
tendency divergence interests methodologies versus focused attempts leverage innovations arenas 
pursued principles provide foundation integrating research direct manipulation interface agents 
goal avoid focusing solely tack seek valuable synergies areas investigation 
surely avoid building complex reasoning machinery patch fundamentally poor designs metaphors 
likewise wish avoid limiting designs human computer interaction direct manipulation significant power efficiencies gained automated reasoning 
great opportunity designing innovative user interfaces new human computer interaction modalities considering ground designs take advantage power direct manipulation potentially valuable automated reasoning 
principles mixed initiative ui key problems agents interfaces include poor guessing goals needs users inadequate consideration costs benefits automated action poor timing action inadequate attention opportunities allow user guide invocation automated services refine potentially suboptimal results automated analyses 
particular little effort expended designing approach solving user problems assume intelligent services users may collaborate efficiently achieve user goals 
critical factors effective integration automated services direct manipulation interfaces include developing significant value added automation 
important provide automated services provide genuine value solutions attainable direct manipulation 
considering uncertainty user goals 
computers uncertain goals current focus attention user 
cases systems benefit employing machinery inferring exploiting uncertainty user intentions focus 
considering status user attention timing services 
nature timing automated services alerts critical factor costs benefits actions 
agents employ models attention users consider costs benefits deferring action time action distracting 
inferring ideal action light costs benefits uncertainties 
automated actions taken uncertainty user goals attention associated context dependent costs benefits 
value automated services enhanced guiding invocation consideration expected value actions 
employing dialog resolve key uncertainties 
system uncertain user intentions able engage efficient dialog user considering costs potentially bothering user needlessly 
allowing efficient direct invocation termination 
system operating uncertainty poor decisions invoking invoking automated service 
value agents providing automated services enhanced providing efficient means users directly invoke terminate automated services 
minimizing cost poor guesses action timing 
designs services alerts undertaken eye minimizing cost poor guesses including appropriate timing natural gestures rejecting attempts service 
scoping precision service match uncertainty variation goals 
enhance value automation giving agents ability gracefully degrade precision service match current uncertainty 
preference doing doing correctly uncertainty provide user valuable advance solution minimize need costly undoing backtracking 
providing mechanisms efficient agent user collaboration refine results 
design agents assumption users may wish complete refine analysis provided agent 
employing socially appropriate behaviors agent user interaction 
agent endowed default behaviors match social expectations benevolent assistant 
maintaining working memory interactions 
systems maintain memory interactions users provide mechanisms allow users efficient natural objects services included shared short term experiences 
continuing learn observing 
automated services endowed ability continue better working users continuing learn user goals needs 
testbed mixed initiative ui lookout project focused investigating issues overlaying automated scheduling services microsoft outlook largely direct manipulation messaging scheduling system 
lookout automation identifies new messages opened brought focus attempts assist users reviewing calendar composing appointments 
value added service calendaring scheduling invoked lookout parses text body subject email message focus attempts identify date time associated event implied sender 
system invokes outlook calendaring subsystem brings user online appointment book attempts fill relevant fields appointment record 
system displays guesses user allows user edit guesses save final result 
lookout scheduling analysis centers goal specific parsing text contained email message focus 
system notes new message read message comes focus analyzed 
system establishes date message sent anchor date attempts normalize view composition date 
example message written yesterday contains text referring scheduling meeting tomorrow system understand message referring today 
lookout identify implied date time system degrades goal identifying span time relevant text message specific day week month displays scoped view calendar user 
user directly manipulate proposed view appropriate go schedule appointments manually 
lookout knowledge typical patterns expression email meetings times 
understanding variety ways people refer dates times system understands temporal implications suggestions information email messages holding meetings various times tomorrow week week couple weeks may prototypical times day morning afternoon evening typical recurrent events breakfast grab lunch meet dinner 
lookout analysis reduces number interactions complexity navigation required user 
lookout users navigate appropriate graphical button menu item open calendar search appropriate day input appropriate times fill subject meeting 
lookout performs operation automatically single interaction depending modality selected 
lookout guesses incorrectly user placed approximately correct position calendar refine approximate guess implied appointment 
decision making uncertainty users directly invoke lookout clicking icon system tray microsoft windows shell 
system works automatically identify user goals considering content messages reviewed 
lookout processes header subject body message information assigns probability user view calendar schedule appointment employing probabilistic classification system trained watching user working email 
system decisions appropriate actions function inferred probability user goal performing scheduling calendaring operations 
particular inferred probability service desired lookout decision apply second phase analysis provides user automated calendaring scheduling 
depending inferred probability assessment expected costs benefits action system decides simply wait continued direct manipulation outlook manual invocation lookout engage user dialog intentions regards providing service go ahead attempts provide service invoking second phase analysis 
multiple interaction modalities lookout configured operated solely manual modality placed automated assistance modalities 
manual operation system take action user clicks small lookout icon appearing system 
invoked lookout analyzes email message system focus 
users tell system display alerting symbol red check mark system tray icon lookout taken action automated assistance modality 
hovering cursor icon system tray summary intended action appears 
displays direct invocation lookout 
shown menu dynamically populated options pops letting user schedule organize meeting schedule text system clipboard 
placed basic automated assistance mode lookout works launching populating fields outlook windows 
mode system employs traditional dialog boxes request additional information users appropriate 
lookout operate social agent modality projecting explicit social presence form animated characters drawn ms agent social user interface package 
mode system issues queries users announces results analyses anthropomorphic presence 
lookout social agent modality operates manner establishing audio channel interacting lookout reducing mouse keyboard interaction outlook system 
mode system employs text speech tts 
manual invocation lookout 
hovering cursor lookout icon user examine lookout guess 
clicking lookout icon system tray user invokes appointment service 
system automated speech recognition system developed microsoft research engage users natural dialog intentions 
lookout confident assessment user goals character appears mentions calendar view show user created tentative appointment displaying results 
lower levels confidence lookout user interest seeing calendar scheduling appointment depending system analysis message viewed 
asking user system listens answer requiring additional keys buttons pressed 
displays sequence screens demonstrating lookout operation social agent modality 
message analyzed scenes system decides worthwhile engage user dialog creating appointment 
animated assistant appears engages user speech text balloon option turned case relay content speech text 
user indicate speech appointment desired natural acknowledgments including sure 
go ahead lookout creates appointment reviews user text speech leaving result refinement saving 
user expressed going ahead appointment simply closing message responding variety natural phrases including go away agent immediately confirm understanding disappear 
lookout dynamically scopes calendar view best guess uncertainty indications appropriate view message text 
case captured lookout confidently identify specific time day 
making poor guess lookout brings appropriate week view user calendar 
handling invocation failures lookout expressly continuing reason uncertainty value action engaging user dialog messages opened closed system guesses simply turn wrong 
lookout system fails automatically infer users wish see calendar schedule appointment system directly invoked clicking lookout icon system tray 
lookout guesses worthwhile engage user dialog scheduling user busy interacting service system pose question wait patiently response gesture evaporate 
amount time system waits timing function inferred probability user desires service 
system increases dwell desktop detects signs user thinking including uh design lookout behaviors handling delays responses reacting signs service declined guided goal giving lookout sensibility intuitive courteous butler potentially valuable suggestions time time careful note user simply busy respond get user way minimal disturbance 
inferring beliefs user goals wish assist users potentially complex services valuable consider automation provided effectively light uncertainties agents may users goals 
developing machinery endows system ability explicitly assign likelihoods different feasible user intentions critical mixed initiative systems 
machinery extend sets rules linked tables probabilistic information complex real time inference 
related user modeling probabilistic models user goals employed continue perform real time inference probability alternate feasible goals function observables including current program context user sequence actions choice words query 
leveraged successes building reasoning bayesian network models 
lookout leverages automated text classification making decisions actions 
alternate text classification methodologies explored including nave bayesian text classifier text classification support vector machine svm analysis 
current version lookout assigns probabilities user intention employing svm text classification efficient linear svm approximation method developed platt 
method coupled methodology 
lookout sequence showing operation explicit social agent modality 
new message top left analyzed decision engage user dialog left 
receiving confirmation speech input system creates appointment presents guess user refinement right 

automated scoping calendar 
lookout establish specific day time attempts select appropriate span time display user review refinement direct manipulation 
including custom tailored task specific sets text features 
employing text classification classical manner tasks labeling categorizing documents harness methods learning reasoning likelihood user goals tasks context 
assumed context user reviewing email wish assign likelihood email message just received focus attention goal category user wish schedule review calendar email versus goal category user wish schedule review calendar email content messages 
linear svm text classifier built training system set messages calendar relevant calendar irrelevant 
runtime email message reviewed linear svm approximation procedure outputs likelihood user wish bring calendar schedule appointment 
current version lookout trained initially approximately messages divided messages relevant irrelevant messages 
beliefs actions uncertainties user goals automated actions taken 
shall consider case decision invoke services performed intelligent agent 
perspective decision theory decisions action versus inaction directed expected utility 
autonomous actions taken agent believes greater expected value inaction user table 
outcomes considered decisions engage intelligent agent provide service 
consideration costs benefits uncertainties user goals 
actions intentions outcomes assume agent access inference likelihood user goals observed evidence written 
lookout probability user wishes schedule computed evidence patterns text contained message opened brought focus 
decisions action versus inaction consider deterministic outcomes user goal considered goal states user intention system take action take action 
map measure value associated outcome utility zero scale define utilities follows utility action goal true utility action goal true utility action goal true utility action goal true outcomes summarized table 
expected utility autonomous action assist user action observed evidence eu computed combining utilities outcomes case user desires service desire service weighted probability outcome follows eu rewrite equation terms noting 
expected utility providing autonomous service eu 
graphical analysis expected utility action versus inaction yielding threshold probability action 
action action desired goal desired action action expected utility autonomous action assist user eu visualize implications equations plotting expected utility function probability 
displays graph horizontal represents probability user goal ranging zero 
vertical axis indicates expected value system response 
outcomes displayed right vertical axis expected utility associated user having goal consideration 
outcomes listed left vertical axis indicate value outcomes 
expected value acting intermediary probabilities dictated equation line joining deterministic outcomes associated action 
expected value acting dictated equation similar line joining outcomes associated inaction 
expected utility thresholds agent action lines representing expected utility cross specific inferred probability user having goal 
threshold probability referred expected value action inaction equal 
best decision value action associated greatest expected utility likelihood user having goal 
inspecting graph easy see best system take action probability goal greater refrain acting probability 
threshold probability computed utilities setting equations equal solving 
utilities associated outcomes interest system needs check probability goal greater threshold probability decide best interest user invoke service 
threshold probability influenced contextdependent changes utilities associated outcomes 
example utility associated situation system takes action goal desired significantly influenced status user attention 
utility unwanted action diminish significantly increases depth user focus task 
reduction value action leads higher probability threshold 
contrast utility associated situation system takes action goal desired greater screen real estate available 
increased screen real estate diminish perceived cost needless operation scheduling service bring appointment obscures items user focus attention 
example 
result increasing value erroneous action 
context dependent shifts utilities change probability threshold action 
context dependent outcome utility representing situation system take action user goal may decrease user rushed 
diminishing value action reduces threshold probability action 
displays geometrically change context 
case increasing utility decreasing cost outcome acting service desired leads lowering threshold probability crossed action occurs 
dialog option action reasoning act assist user autonomous service consider action asking users goals 
integrate action dialog expected utility framework considering expected value asking user question 
consider utility additional outcomes case agent initiates dialog goal user desires goal consideration case user goal 
compute expected utility performing dialog uncertainty equation analogous equation 
displays graph addition line representing expected utility engaging dialog 
highlighted graph utility engaging dialog user user goal question typically greater utility performing action goal desired 
utility asking user performing desired action typically smaller utility simply performing desired action user goal 
circumstances follow rule selecting option greatest expected utility see action guided new threshold probabilities threshold inaction dialog threshold dialog action thresholds provide instant index act engage action action 
adding second action option consisting dialog users goals 
case graphical analysis origin threshold probabilities guiding action autonomous services 
user dialog action depending assessed likelihood user having goal 
systems guiding autonomous service necessarily need perform explicit computations expected value 
thresholds directly assessed designers users 
directly assessed thresholds action imply deeper implicitly assumed expected utility model 
lookout system employs default utilities guiding dialog action 
system allows users specify utilities outcomes 
set assessed utilities system computes uses modified threshold probabilities 
lookout allows users simply specify key threshold probabilities controlling dialog action 
run time lookout considers inferred probability users desires service threshold dialog action versus consistent inaction 
user attention timing service automated activity occurring user ready open service distracting 
hand delays provision service diminish value automation 
value services alerts enhanced building applying models attention consider temporal pattern user focus attention 
potential value approaching users dialog actions users ready service performed studies identify appropriate timing messaging services function nature message reviewed user 
added instrumentation lookout monitor length time review messages manual invocation messaging services collected data users goal building default temporal centric model attention 
identified nonlinear relationship size message reviewed amount time users prefer dwell content messages accepting automated calendaring scheduling operations 
relationship message size preferred time deferring offers service approximated sigmoid function represented sample data user displayed 
continuing studies timing lookout project aimed examining factors explain dwell time including ambiguity complexity dates times mentioned message 
general case construct model attention timing studies utility outcomes time dependent functions message length 
alternatively timing information separately defer service user ready receive 
current version lookout employs predetermined default automated service timing model user studies 
system instructed build custom tailored timing model watching user interacting email 
system records size message reviewed amount time spent message scheduling operations invoked stores cases user directed manner 
system enters learning mode system performs regression analysis data fits piecewise linear model data 
alternatively users tell system delay fixed amount time service invoked 
machinery life long learning lookout contains probabilistic user model timing model 
system designed continue learn users 
methods embedding capability life long learning key challenge artificial intelligence research 
lookout continues store messages calendar relevant irrelevant watching user working email 
calendar scheduling facility invoked predetermined time horizon system saves message schedule relevant 
system continues record time users dwell messages invoking calendaring operation 
user specify policy continual learning 
users dictate training schedule guides learning component system periodically incrementally refine probabilistic user model time attention model 
ongoing model continues hone models guessing relevance automated scheduling services better estimator best time invoke services 
summary reviewed key challenges opportunities building mixed initiative user interfaces interfaces enable users intelligent agents collaborate efficiently 
set principles designing user interfaces address systematic problems agents may guess user needs 
focused methods managing uncertainties agents may users goals action action dialog 
sigmoid fit sample data user displaying relationship dwell time messages quantity text message reviewed 
uncertainties agents may users goals focus attention 
discussed consideration uncertainty expected costs benefits autonomous action different situations 
highlighted methods design principles examples drawn lookout system 
research lookout elucidated difficult challenges promising opportunities improving human computer interaction elegant combination reasoning machinery direct manipulation 
believe continuing efforts address problems design mixed initiative user interfaces yield fundamental enhancements human computer interaction 
acknowledgments andy jacobs served primary software engineer lookout prototype 
john platt developed linear svm text classification methodology current version lookout 
mehran sahami assisted early studies bayesian text classification identifying schedule relevant messages 
jack breese mary czerwinski susan dumais bill gates ken hinckley dan ling rick rashid provided valuable feedback research 

ahlberg schneiderman visual information seeking tight coupling dynamic query filters starfield displays 
proceedings chi human factors computing systems april acm 

birnbaum horvitz lieberman marks roth compelling intelligent user interfaces ai 
proceedings acm international conference intelligent interfaces orlando fl january 
www merl com reports tr index html 
dumais platt heckerman sahami inductive learning algorithms representations text categorization 
proceedings cikm 
bethesda md november 
acm press 
heckerman horvitz inferring informational goals free text queries bayesian approach fourteenth conference uncertainty artificial intelligence madison wi july morgan kaufmann publishers 
research microsoft com horvitz aw htm 
horvitz barry display information time critical decision making 
proceedings eleventh conference uncertainty artificial intelligence montreal august 
morgan kaufmann publishers 
research microsoft com horvitz vista htm 
horvitz breese heckerman lumiere project bayesian user modeling inferring goals needs software users fourteenth conference uncertainty artificial intelligence madison wi july 
morgan kaufmann publishers 
research microsoft com horvitz lumiere htm 
horvitz breese henrion decision theory expert systems artificial intelligence 
international journal approximate reasoning special issue uncertainty artificial intelligence 
research microsoft com horvitz dt htm 
lieberman letizia agent assists web browsing international joint conference artificial intelligence montreal august 
ijcai 

maes agents reduce information overload 
commun 
acm 
maes schneiderman direct manipulation vs interface agents debate 
interactions vol 
iv number acm press 

pearl probabilistic reasoning intelligent systems networks plausible inference morgan kaufmann publishers san francisco 

platt fast training svms sequential minimal optimization 
appear scholkopf burges smola eds 
advances kernel methods support vector learning mit press 

schneiderman designing user interface strategies effective human computer interaction acm press 


selman brooks dean horvitz mitchell nilsson challenge problems artificial intelligence proceedings aaai thirteenth national conference artificial intelligence portland august 
aaai press 
length message bytes 
