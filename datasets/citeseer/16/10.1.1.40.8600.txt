mining quantitative association rules large relational tables ramakrishnan srikant ibm almaden research center san jose ca rakesh agrawal ibm almaden research center san jose ca introduce problem mining association rules large relational tables containing quantitative categorical attributes 
example association married people age cars 
deal quantitative attributes values attribute combining adjacent partitions necessary 
introduce measures partial completeness quantify information lost due partitioning 
direct application technique generate similar rules 
tackle problem greater expected value interest measure identify interesting rules output 
give algorithm mining quantitative association rules 
describe results approach real life dataset 
data mining known knowledge discovery databases recognized new area database research 
problem discovering association rules introduced ais 
set transactions transaction set items association rule expression sets items 
example association rule transactions contain beer contain transactions contain items 
called confidence rule support rule 
problem find association rules satisfy user specified minimum support minimum confidence constraints 
conceptually problem viewed finding associations values relational table attributes boolean 
department computer science university wisconsin madison 
table attribute corresponding item record corresponding transaction 
value attribute record item corresponding attribute transaction corresponding record 
rest refer problem boolean association rules problem 
relational tables business scientific domains richer attribute types 
attributes quantitative age income categorical zip code car 
boolean attributes considered special case categorical attributes 
define problem mining association rules quantitative categorical attributes large relational tables techniques discovering rules 
refer mining problem quantitative association rules problem 
give formal statement problem section 
illustration shows people table non key attributes 
age quantitative attributes married categorical attribute 
quantitative association rule table hage yesi 
mapping quantitative association rules problem boolean association rules problem examine quantitative association rules problem mapped boolean association rules problem 
attributes categorical quantitative attributes values mapping straightforward 
conceptually having just field table attribute fields number attribute values 
value boolean field corresponding value attribute value original record 
domain values quantitative approach large obvious approach partition values intervals map pair boolean attribute 
algorithm finding boolean association rules find people age married minimum support minimum confidence rules sample support confidence hage yesi noi example quantitative association rules quantitative association rules :10.1.1.40.6757
shows mapping non key attributes people table 
age partitioned intervals 
categorical attribute married boolean attributes married married 
number values small partitioned intervals value mapped boolean field 
record hage age equal age equal mapping 
problems simple approach applied quantitative attributes ffl minsup 
number intervals quantitative attribute values attribute partitioned large support single interval low 
larger intervals rules involving attribute may lack minimum support 
ffl minconf 
information lost partition values intervals 
rules may minimum confidence item antecedent consists single value small interval 
information loss increases interval sizes larger 
example rule noi confidence 
partitioned attribute intervals cars partition closest rule noi confidence 
catch situation created problems intervals large rules may minimum confidence small rules may minimum support 
breaking 
break catch situation consider possible continuous ranges values quantitative attribute partitioned intervals 
minsup problem disappears combine adjacent intervals values 
minconf problem information loss reduced increasing number intervals encountering minsup problem 
unfortunately increasing number intervals simultaneously combining adjacent intervals introduces new problems ffl 
quantitative attribute values intervals average ranges include specific value interval 
number items record blows blow execution time 
ffl 
value interval quantitative attribute minimum support range containing value interval 
number rules blows 
rules interesting see 
tradeoff faster execution time fewer intervals mitigating reducing information loss intervals mitigating minconf 
reduce information loss increasing number intervals cost increasing execution time potentially generating uninteresting rules problem 
meaningful combine categorical attribute values taxonomy hierarchy attribute 
case taxonomy implicitly combine values categorical attribute see sa hf :10.1.1.144.4956
taxonomy manner somewhat similar considering ranges quantitative attributes 
age age married married mapping boolean association rules problem approach consider ranges adjacent values intervals quantitative attributes avoid minsup problem 
mitigate problem restrict extent adjacent values intervals may combined introducing user specified maximum support parameter combining intervals combined support exceeds value 
single interval value support exceeds maximum support considered 
decide partition quantitative attribute 
partitions case decide partition 
introduce partial completeness measure section gives handle information lost partitioning helps decisions 
address problem give interest measure section 
interest measure deviation expectation helps prune uninteresting rules 
measure extension interest measure introduced sa :10.1.1.144.4956
give algorithm discovering quantitative association rules section 
algorithm shares basic structure algorithm finding boolean association rules :10.1.1.40.6757
yield fast implementation computational details candidates generated supports counted new 
experience solution real life dataset section 
related boolean association rules problem ais considerable designing algorithms mining rules hs mtv son :10.1.1.40.6757
subsequently extended finding association rules taxonomy items sa hf :10.1.1.144.4956
related includes ps quantitative rules discovered 
antecedent consequent constrained single pair 
suggestions extending rules antecedent done partitioning quantitative attributes intervals intervals combined 
algorithm ps fairly straightforward 
find rules comprising antecedent specific value attribute pass data record hashed values hash cell keeps running summary values attributes records value 
summary derive rules implied pass 
find rules different attributes algorithm run attribute 
interested finding rules find summaries combinations attributes exponentially large 
problem statement decomposition give formal statement problem mining quantitative association rules introduce terminology 
simple device treat categorical quantitative attributes uniformly 
categorical attributes values attribute mapped set consecutive integers 
quantitative attributes partitioned intervals values mapped consecutive integers order values preserved 
quantitative attribute partitioned intervals intervals mapped consecutive integers order intervals preserved 
mappings treat database record set integer pairs loss generality 
fi set literals called attributes 
denote set positive integers 
iv denote set theta pair hx vi iv denotes attribute associated value ir denote set fhx ui theta theta quantitative categorical triple hx ui ir denotes quantitative attribute value interval categorical attribute value refer triple item 
ir attributes denote set fx hx ui xg 
note definition values associated categorical attributes values ranges may associated quantitative attributes 
words values categorical attributes combined 
set records record set attribute values iv assume attribute occurs record 
say record supports ir hx ui hx qi 
quantitative association rule implication form ae ir ae ir attributes attributes 
rule holds record set confidence records support support rule support record set records support set records problem mining quantitative association rules find quantitative association rules support confidence greater user specified called minsup minimum confidence called minconf respectively 
note fact items rule categorical quantitative hidden definition association rule 
notation recall item triple represents categorical attribute value quantitative attribute range 
value quantitative attribute represented range upper lower limits 
term itemset represent set items 
support itemset ae ir simply percentage records support term frequent itemset represent itemset minimum support 
pr denote probability items ir supported record 
support pr confidence pr 
note pr probability items record 
call generalization specialization attributes attributes attributes hx ui hx 
example itemset hage yesi generalization hage yesi problem decomposition solve problem discovering quantitative association rules steps 
determine number partitions quantitative attribute 
see section 

categorical attributes map values attribute set consecutive integers 
quantitative attributes partitioned intervals values mapped consecutive integers order values preserved 
quantitative attribute partitioned intervals intervals mapped consecutive integers order intervals preserved 
point algorithm sees values ranges values quantitative attributes 
values may represent intervals transparent algorithm 

find support value quantitative categorical attributes 
additionally quantitative attributes adjacent values combined long support user specified max support 
know ranges values minimum support quantitative attribute values minimum support categorical attribute 
form set frequent items 
find sets items support greater user specified 
frequent itemsets 
see section 

frequent itemsets generate association rules 
general idea say abcd ab frequent itemsets determine rule ab cd holds computing ratio conf support abcd support ab 
conf minconf rule holds 
rule minimum support abcd frequent 
algorithm generate rules :10.1.1.40.6757

determine interesting rules output 
see section 
example consider people table shown 
quantitative attributes age 
assume step decided partition age intervals shown 
conceptually table looks shown 
mapping intervals consecutive integers mapping table looks shown 
assuming minimum support minimum confidence shows frequent itemsets rules 
replaced mapping numbers values original table figures 
notice item hage corresponds combination intervals shown step determining interesting rules example 
partitioning quantitative attributes section consider partition values quantitative attributes intervals partitions 
measure partial completeness gives handle amount information lost partitioning 
show equi depth partitioning minimizes number intervals required satisfy partial minimum support records minimum confidence people age married partitions age interval partitioning age age married mapping age interval integer mapping married value integer mapping attributes age married frequent itemsets sample itemset support hage hage yesi noi hage yesi rules sample rule support confidence hage yesi hage example problem decomposition completeness level 
equi depth partitioning sense optimal measure partial completeness 
intuition partial completeness measure follows 
set rules obtained considering ranges raw values quantitative attributes 
set rules obtained considering ranges partitions quantitative attributes 
way measure information loss go see rule far closest rule away closest rule greater loss 
defining close rules generalizations ratio support rules measure far apart rules derive measure partial completeness 
partial completeness define partial completeness itemsets rules guarantee close itemset guarantee close rule 
show guarantee close rule minimum confidence level certain computable amount 
denote set frequent itemsets call complete respect ffl ffl ffl generalization support theta support ii generalization support theta support 
conditions ensure contains frequent itemsets generate rules part third condition says itemset generalization itemset times support second part says property generalization times support holds corresponding subsets attributes itemset generalization 
notice identical example assume table frequent itemsets number itemset support hage hage hage hage hage itemsets complete set itemset generalization support times support instance itemset generalization itemset support itemset times support itemset 
itemsets form complete set itemset generalization itemset support times support 
lemma complete set set frequent itemsets 
set rules generated minimum confidence level minconf 
rp set rules generated minimum confidence set minconf rule rule rp ffl generalization generalization ffl support times support ffl confidence times times confidence proof parts follow directly definition completeness 
prove part 
rule itemset definition complete set itemset support theta support ii support theta support 
confidence rule generated support support 
confidence confidence support support support support support support support support support support support support lie inclusive confidence times confidence set frequent itemsets complete set frequent itemsets generating rules set times desired level guarantee close rule generated 
example earlier itemsets form complete set 
rule hage confidence corresponding generalized rule hage confidence 
determining number partitions prove properties partitioned attributes partial completeness properties decide number intervals partial completeness level 
lemma consider quantitative attribute real 
assume partition intervals called base intervals base interval support minsup theta gamma consists single value 
denote set combinations base intervals minimum support 
complete set ranges minimum support 
proof interval minimum support smallest combination base intervals generalization see 
base intervals partially spanned consider intervals 
partially spans interval interval just single value 
support interval support portion interval spanned minsup theta gamma 
support support theta minsup theta gamma support support theta gamma support minsup support theta base interval illustration lemma example lemma lemma consider set quantitative attributes real 
assume quantitative attribute partitioned base interval support minsup theta gamma theta consists single value 
denote set frequent itemsets partitioned attributes 
complete set frequent itemsets obtained partitioning 
proof proof similar lemma 
difference support itemset generalization may times support single base interval single attribute number quantitative attributes may upto attributes support base interval minsup theta gamma theta just minsup theta gamma complete 
similar argument applies subsets illustration proof quantitative attributes shown 
solid lines correspond partitions attributes dashed rectangle corresponds itemset shaded areas show extra area covered get generalization partitioned attributes 
shaded areas spans single partition single attribute 
partition attribute corresponds band rectangle 
partitioning lemma compute level partial completeness partitioning 
illustrate procedure single attribute 
case simply find partition highest support value 
support partition find partial completeness level formula minsup theta gamma lemma get theta minsup 
attributes formula theta theta minsup maximum support partition value quantitative attributes 
recall lower level partial completeness information lost 
formula reflects decreases implying intervals partial completeness level decreases 
lemma specified number intervals equidepth partitioning minimizes partial completeness level 
proof lemma support base interval minsup theta gamma theta partial completeness level maximum support base interval minimized equi depth partitioning equi depth partitioning results lowest partial completeness level 
corollary partial completeness level equi depth partitioning minimizes number intervals required satisfy partial completeness level 
level partial completeness desired user minimum support calculate number partitions required assuming equidepth partitioning 
lemma know get partial completeness level support partition value minsup gamma theta number quantitative attributes 
ignoring special case partitions contain just value assuming equi depth partitioning splits support identically partitions order get support partition get number intervals theta theta gamma number quantitative attributes minimum support fraction partial completeness level rules quantitative attributes replace formula see proof lemma 
interest potential problem combining intervals quantitative attributes number rules may large 
st looks subjective measures interestingness suggests pattern interesting may number partitions required increase partial completeness level 
unexpected surprising user actionable user 
st distinguishes subjective objective interest measures 
ps discusses class objective interest measures support rule deviates support antecedent consequent rule independent 
section greater interest measure identify interesting rules output 
interest measure looks generalizations specializations rule identify interesting rules 
motivate interest measure consider rules quarter people age group age group 
hage sup conf 
hage sup conf 
second rule considered redundant convey additional information general rule 
rule expect second rule confidence support equal quarter support 
confidence second rule little different say convey significantly information rule 
try capture notion interest saying want find rules support confidence greater expected 
user specify support confidence support confidence 
formalize idea briefly describing related 
expected values 
pr pr denote expected value pr support pr generalization itemset hz un ig set hz ig 
define pr pr pr hz pr hz theta delta delta delta theta pr hz un pr hz theta pr similarly pr pr denote expected confidence rule rule generalizations respectively 
itemset hy un ig set hy ig 
define pr pr pr hy pr hy theta delta delta delta theta pr hy un pr hy theta pr attribute support values interesting decoy boring example interest tentative interest measure 
introduce measure similar sa :10.1.1.144.4956
itemset interesting ancestor support greater equal times expected support rule interesting ancestor support rule times expected support confidence times expected confidence set rules call close ancestor rule ancestor ancestor similar definition holds itemsets 
set rules minimum interest rule interesting ancestors interesting respect close ancestors interesting ancestors 
looking generalizations insufficient 
definition interest problem 
consider single attribute range categorical attribute assume support values uniformly distributed 
support values shown 
instance support hx support hx 
shows average support itemsets hx hx hx hx 
clearly interesting set fhx yg 
interest measure may find itemsets interesting 
instance interest level interval decoy fhx yg considered interesting fhx yg fhx yg 
support value easy check specializations itemset interesting 
general information single value may minimum support 
information specializations minimum support 
instance may information support subinterval interesting interval decoy 
obvious way information check specializations minimum support interesting 
problem approach 
may specializations minimum support interesting 
case true example minimum support equal 
second specializations may specialization minimum support interesting 
want discard current itemset specialization minimum support interesting part current itemset interesting 
alternative approach check specializations interesting itemset subtract specialization current itemset see difference interesting 
notice difference need minimum support 
specializations want keep itemset 
approach clearly preferred 
change definitions interest earlier reflect ideas 
final interest measure 
itemset inter respect support greater equal times expected support specialization minimum support gamma ir gamma respect similarly rule interesting ancestor support rule times expected support confidence times expected confidence itemset interesting note specification interest level specification minimum confidence parameter optionally dropped 
semantics case interested rules interest specified interest level 
algorithm section describe algorithm finding frequent itemsets step problem decomposition section 
stage partitioned quantitative attributes created combinations intervals quantitative attributes 
combinations values categorical attributes minimum support form frequent items 
starting frequent items generate frequent itemsets algorithm apriori algorithm finding boolean association rules :10.1.1.40.6757
proposed algorithm extends candidate generation procedure add pruning interest measure uses different data structure counting candidates 
itemset denote itemset having items 
represent set frequent itemsets set candidate itemsets potentially frequent itemsets 
algorithm multiple passes database 
pass consists phases 
set frequent gamma itemsets gamma gamma th pass generate candidate itemsets candidate generation procedure ensures superset set frequent itemsets 
algorithm scans database 
record determines candidates contained record increments support count 
pass examined determine candidates frequent yielding algorithm terminates empty 
discuss generate candidates count support 
candidate generation gamma set frequent gamma itemsets candidate generation procedure return superset set frequent itemsets 
procedure parts 
join phase 
gamma joined join condition lexicographically ordered gamma items attributes items different 
example consist itemsets yesi hage yesi hage yesi hage join step consist itemsets yesi hage yesi hage 
subset prune phase itemsets join result gamma subset gamma deleted 
continuing earlier example prune step delete itemset yesi hage subset hage 
interest prune phase 
user specifies interest level wants itemsets support confidence greater expected interest measure prune candidates 
lemma says delete itemset contains quantitative item fractional support greater interest level 
delete items support greater pass candidate generation procedure ensure generate candidates contain item support lemma consider itemset quantitative item generalization replaced item corresponding full range attribute 
user specified interest level support greater actual support times expected support proof actual support greater actual support expected support pr theta pr pr bx equals 
ratio actual expected support pr pr theta pr pr pr theta pr 
ratio equal second ratio ratio actual expected support counting support candidates making pass read record time increment support count candidates supported record 
set candidate itemsets record need find itemsets supported partition candidates groups candidates group attributes values categorical attributes 
replace group single super candidate 
super candidate parts common categorical attribute values ii data structure representing set values quantitative attributes 
example consider candidates yesi hage yesi hage yesi hage candidates categorical attribute married value candidates 
quantitative attributes age 
candidates grouped super candidate 
categorical part super candidate contains item yesi 
quantitative part contains information 
age split problem parts 
find super candidates supported categorical attributes record 
re hash tree data structure described reduce number super candidates need checked record :10.1.1.40.6757

know categorical attributes super candidate supported record need find candidates super candidate supported 
recall candidates super candidate values categorical values different values quantitative attributes 
discuss issue rest section 
super candidate quantitative attributes 
quantitative attributes fixed super candidate 
set values quantitative attributes correspond set dimensional rectangles rectangle corresponding candidate super candidate 
values corresponding quantitative attributes database record correspond dimensional point 
problem reduces finding dimensional rectangles contain dimensional point set dimensional points 
classic solution problem put rectangles tree bkss 
number dimensions small range values dimension small faster solution 
dimensional array number array cells th dimension equals number partitions attribute corresponding th dimension 
array get support counts possible combinations values quantitative attributes super candidate 
amount done record number dimensions simply index dimension increment support count single cell 
pass database iterate cells covered rectangles sum support counts 
multi dimensional array cheaper tree terms cpu time 
number attributes dimensions super candidate increases multi dimensional array approach need huge amount memory 
tradeoff memory tree versus cpu time multi dimensional array 
heuristic ratio expected memory tree multi dimensional array decide data structure 
experience real life dataset assessed effectiveness approach experimenting real life dataset 
data attributes quantitative categorical 
quantitative attributes monthly income credit limit current balance year date balance year date interest 
categorical attributes marital status 
records data 
experiments performed ibm rs workstation mb main memory running aix 
data resided aix file system stored local gb scsi drive measured sequential throughput mb second 
partial completeness level 
shows number interesting rules percent rules interesting different interest levels partial completeness level increases 
minimum support set minimum confidence maximum support 
expected number interesting rules decreases partial completeness level increases 
percentage rules pruned decreases indicating fewer similar rules partial completeness level increases fewer intervals quantitative attributes 
interest measure 
shows fraction rules identified interesting interest level increased equivalent having interest measure 
expected percentage rules identified interesting decreases interest level increases 
scaleup 
running time algorithm split parts candidate generation 
time independent number records assuming distribution values record similar 
ii counting support 
time directly proportional number records assuming distribution values record similar 
number records large time dominate total time 
expect algorithm near linear scaleup 
confirmed shows relative execution time increase number input records fold different levels minimum support 
times normalized respect times records 
graph shows algorithm scales quite linearly dataset 
number interesting rules partial completeness level interest level interest level interest level rules interesting partial completeness level interest level interest level interest level changing partial completeness level introduced problem mining association rules large relational tables containing quantitative categorical attributes 
dealt quantitative attributes fine partitioning values attribute combining adjacent partitions necessary 
introduced measure partial completeness quantifies information lost due partitioning 
measure decide partition quantitative attribute number partitions 
direct application technique may generate similar rules 
tackled problem greater expected value interest measure identify interesting rules output 
interest measure looks generalizations specializations rule identify interesting rules 
gave algorithm mining quantitative association rules 
experiments real life dataset indicate algorithm scales linearly number records 
showed interest measure effective identifying interesting rules 
rules interesting interest level sup conf sup conf sup conf sup conf interest measure relative execution time number records support support support scale number records ffl measure partial completeness support rules 
alternate measures may useful applications 
instance may generate partial completeness measure range attributes rules 
rule generalization range attribute times range corresponding attribute original rule 
ffl equi depth partitioning may highly skewed data 
tends split adjacent values high support separate intervals behavior typically similar 
may worth exploring clustering algorithms jd partitioning relationship partial completeness 
acknowledgment wish jeff naughton comments suggestions early stages 
ais rakesh agrawal tomasz imielinski arun swami 
mining association rules sets items large databases 
proc 
acm sigmod conference management data pages washington may 
rakesh agrawal ramakrishnan srikant :10.1.1.40.6757
fast algorithms mining association rules 
proc 
th int conference large databases santiago chile september 
bkss beckmann 
kriegel schneider seeger 
tree efficient robust access method points rectangles 
proc 
acm sigmod pages atlantic city nj may 
hf han fu 
discovery association rules large databases 
proc 
st int conference large databases zurich switzerland september 
hs maurice arun swami 
set oriented mining association rules 
int conference data engineering taipei taiwan march 
jd jain dubes 
algorithms clustering data 
prentice hall 
mtv heikki mannila hannu toivonen verkamo 
efficient algorithms discovering association rules 
kdd aaai workshop knowledge discovery databases pages seattle washington july 
jong soo park ming chen philip yu 
effective hash algorithm mining association rules 
proc 
acm sigmod conference management data san jose california may 
ps piatetsky shapiro 
discovery analysis presentation strong rules 
frawley editors knowledge discovery databases pages 
aaai mit press menlo park ca 
sa ramakrishnan srikant rakesh agrawal :10.1.1.144.4956
mining generalized association rules 
proc 
st int conference large databases zurich switzerland september 
son savasere omiecinski navathe 
efficient algorithm mining association rules large databases 
proc 
vldb conference zurich switzerland september 
st avi silberschatz alexander tuzhilin 
subjective measures interestingness knowledge discovery 
proc 
int conference knowledge discovery data mining montreal canada august 

