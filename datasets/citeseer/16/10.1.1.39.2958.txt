ac complete unification application theorem proving alexandre claude march lri cnrs ura bat 
universit paris sud centre orsay orsay cedex france phone fax email lri fr 
inefficiency ac completion mainly due doubly exponential number ac unifiers critical pairs generated 
ac complete unification new technique goal reduce number ac critical pairs inferred performing unification extension ac acu abelian groups boolean rings 
process normalized completion 
idea represent complete sets ac unifiers smaller sets unifiers 
theories unification exponentially fewer general unifiers ac remove complete set unifiers solutions instance ac unifier 
define ac complete unification describe fundamental properties 
show ac complete unification done elementary case known combination techniques unification algorithms reused purposes 
give evidence kind speedup obtained presenting experiments cime theorem prover 
completion rewriting systems modulo equational theory introduced jouannaud kirchner 
allows cope theories popular associativity commutativity denoted ac avoiding non termination rules gamma 
case ac completion distinction terms price pay identifying terms equal modulo equational theory taken account deduction mechanism standard unification replaced unification 
main problem ac unification may compute doubly exponentially general unifiers 
solution problem consider rewrite rules constrained research supported part ccl hcm network console gdr de programmation du cnrs 
ac unification problems constrained rule representing set instances ac unifiers constraint 
basic strategy 
hand march introduced normalized completion equations normalized eagerly convergent term rewriting system equivalent theory may range ac boolean rings 
normalized completion originated solution problem ac completion unit denoted acu 
gave elegant solution problem raised buchberger designing uniform procedure specialize knuth bendix completion ac completion grobner basis computation 
unfortunately normalized completion essence incompatible basic strategy needs apply unifiers order perform normalization 
go details motivation process new equations computed ac unification order reduce called ac critical peaks oe gamma gamma gamma gamma pq gamma gamma 
ac oe pq gamma gamma gamma gamma 
peak oe ac oe complete set ac unifiers oe ac oe peak transformed equational proof gamma gamma 
ac oe gamma gamma gamma gamma 
gamma gamma 
ac ac steps come oe ac oe normalized completion shown correct unification ac unification ranging ac valid theory completed 
pick complete set unifiers oe oe transform peak gamma gamma 
oe gamma gamma gamma gamma gamma gamma 
gamma gamma 
choice ac important choose unification behaves better ac unification sub theory ensure soundness deductions rich avoid complexity ac unification instance acu preferable ac decidable finitary wrt unification 
practice interested acu unification simply exponential ac unification doubly exponential abelian group boolean ring unification unitary elementary case 
article idea pursue idea deeply complete sets unifiers fact compact representation complete sets ac unifiers completion complete compute unifiers ac unifier instance call ac complete unification 
second idea algorithm computing ac complete sets unifiers simpler unification algorithm interested unifiers instances ac unifiers rules clash solutions occur check solution variable nonempty context valid 
example computing ac complete set unifiers modulo acu equation find immediately solution fact acu unifier fx 
ac solution instance ac solution 
unfortunately idea true general shown example 
fact clash correct step algorithm algorithm steps 
important result proposition show size minimal complete sets unifiers greater size minimal complete sets ac unifiers minimal complete sets unifiers unification problem 
main result theorem show soundness completeness algorithm 
important result validation practice approach shown benchmarks section 
organized follows study general properties ac complete unification 
consider elementary case ac operator signature show known combination techniques unification algorithms solve general problem 
give benchmarks obtained implementation normalized completion called cime implemented ac complete unification modulo acu abelian groups 
basic concepts definitions mentioned intend represent ac unifiers set unifiers theory extends ac 
main theories interested definition 
ac fx zg acu ac fx xg ag gamma acu fx gammax br acu acu fx theory contains ac symbols short ac ac 
available www lri fr cime html 
definition 
equational theory containing ac 
unification problem 
solution ac compatible exist oe ae oe ae oe sol ac 
sol ac denotes set ac compatible unifiers set theta substitutions ac complete set solutions theta sol 
soundness ii oe sol ac ae theta ae oe 
completeness ac complete set solutions said minimal proper subset ac complete 
example 
consider equation associative commutative free function symbol free constants variables 
problem general ac unifiers corresponding conjunctions solutions fx 

bg fx 

ag equation solutions fz 



fz 



fz 



fz 



fz 



fz 



fz 



equation equation general acu unifiers corresponding conjunctions solutions fx 

fx 

bg fx 

ag fx 

bg equation unique general acu unifier fz 



equation acu solutions respectively map ac compatible 
case minimal ac complete set acu unifiers reduced substitutions fx 





fx 





reader check ac unifiers original equation obtained mapping variables introduced substitutions 

way ac compatible unification seen unification quotient algebra 
terms equal modulo unifies term second doesn 
instance equal boolean rings term general ac compatible br unifiers second 
general properties case standard unification minimal ac complete set unifiers unique certain way lemma 
sigma sigma minimal ac complete sets solutions problem equivalent modulo subsumption ordering 
particular cardinality 
proof standard unification case 
consequence ac complete set solutions larger cardinality 
property shows ac complete unification worse unification provided compute minimal ac complete set unifiers 
proposition 
arbitrary unification problem sigma minimal set unifiers sigma sigma proof 
simply ac complete set solutions inequality true minimality sigma lemma 
set sol ac ac complete set solutions second inequality 
removing minimal complete set unifiers solutions ac compatible yields ac complete set unifiers unfortunately guarantee minimality 
example 
boolean ring theory br term algebra ffg 
consider equation variables 
equation general oe fx 



wg oe fx 



zg minimal unifiers ac compatible oe oe oe fx 



wg oe useless instances ac solutions minimal foe oe ac complete set unifiers 
elementary case said sound complete just replace ac unification unification provided ac section show reduce number unifiers elementary ac case signature reduced ac operator free constants discarding unifiers ac compatible 
obtain minimal ac complete set unifiers particular cases acu unitary theories 
turns sufficient purpose acu theories mind abelian groups boolean rings happen unitary unification 
ac complete acu unification easy see acu unifier oe ac compatible 
oe maps variable unit instantiation turn oe 
hand variable mapped unit oe ac unifier 
example showed discarding useless unifiers minimal complete set unifiers yield minimal ac complete set unifiers general 
case acu remaining substitutions incomparable ac unifiers minimality obtained set 
unitary theories case unitary theories easier exists general unifier oe ac unifier necessarily foeg minimal set unifiers 
lemma 
assume unification problem general unifier oe ac unifiable 
foeg minimal ac complete set unifiers 
holds ac sub theory ac solutions solutions oe general unifier represents 
particular case relevant theories interest br ag unitary addition meet additional requirements describe 
useful assumptions describe useful properties theory order ac compatible unification general case presence free function symbols 
essentially assumptions equational theories combination unification algorithms 
definition 
theory defined signature combinable complete unification algorithm terms set free constants 
constant elimination algorithm 
known acu br ag combinable theories 
address general case give example kind speedup obtained technique example 
assume ac operator theory boolean rings 
equations form arbitrary terms occurrence general unifier oe fx 
tg 
soon equation ac unifiable foeg ac complete set unifiers 
general case major difficulties ac unification combination elementary ac unification algorithms ac operator 
took decade termination stickel combination algorithm proved fages 
ac theories simple theories theories equality term proper subterms easiest class combination problem 
intend re design combination procedure specific purpose reuse standard combination techniques 
difficulty combination methods simple theories complete ac compatible unification 
purification see need known combination techniques 
rules known complete 
naive attempt rules discard input problems ac unifiable 
complete exemplified example 
assume ac symbols want acu acu theory solving problem stickel algorithm goes back fages proof 
clash sn tm 
check delta delta delta xn sn 
variable 
fig 

rules clash check replacing equation acu solved form results problem clash applies theory conflicts solved applying substitution fz 


produces problem check applies cycle original problem surely ac unifiable unifies free theory 
want point combination rules ac unification correct solving subproblem unification subproblem yield ac equivalent 
conversely rules obviously correct unification just transform ac unification problem equivalent 
set rules purify applied step ac complete unification algorithm 
rules terminate strict subset rules ac unification 
example shows need power combination techniques arbitrary equational theories 
show techniques solving problem 
disjunction lemma applying rules purify long possible obtain problem dag solved form unification problem write form decompose sn tn delta delta delta sn tn ac operator 
clash sn tm 
coalesce pfx 
yg existentially quantified free 
variable abstraction 
alien subterm position respect disjoint signatures ng ng 
merge jsj jtj 
check delta delta delta xn sn 
variable 
fig 

set rules purify ac complete unification pv delta delta delta pv contains equations form occurrence delta delta delta xn non variable term occurrence ac operator 
conjunction pure equations ac 
clash merge check apply 
wish theory extending ac solving pure ac subproblems longer unification combination disjoint equational theories ac symbols theory boolean ring ac complete br unification ac complete br unification performed disjoint alphabets 
show simulate disjoint case technical trick reflects fact ac ac disjoint theories 
shall different copies ac operator 
definition 
equational theory defined containing ac ac 
copy respect mapping set free function symbol 
uniquely extended 
equational theory defined replacing symbols equations 
equational theory defined 
gamma retrieves original function symbols gamma gamma gamma 
lemma disjunction lemma 
theta ac complete set unifiers unification problem delta delta delta obtained original problem applying long possible rules purify 
gamma theta ac complete set unifiers proof 
obvious unifier gamma unifier proof modulo performed modulo original function symbols 
oe ac unifier assume loss generality oe minimal oe contains functions symbols occuring implies gamma oe oe 
theta ac complete exist ae theta oe ae 
oe gamma oe gamma gamma ae 
simple result allows reuse machinery unification combination disjoint equational theories 
elementary ac unification replaced unification associated copy 
recall able compute ac complete sets unifiers traditional additional restrictions theorem 
ac ac 
ac combinable equational theory 
algorithm 
apply long possible rules purify 
run combination algorithm arbitrary combinable equational theories replacing elementary ac unification ac complete unification 
apply gamma solutions computed step ac complete unification algorithm 
experiments section experiments prototype cime 
technique due combining elementary ac complete unification algorithms 
tables normalization theory rewriting unification theory 
case give number calls unification number solutions generated total computation time completion time spent unification computation times seconds sparc station running solaris 
abelian group theory calls unif 
sols total cpu time unif 
time ac ac acu ac acu case things get clearly better acu unification 
ring theory ring theory gammax ac 
calls unif 
sols total cpu time unif time ac ac acu ac acu acu acu au ag gamma ac acu ag gamma ag gamma ac au acu ag gamma case getting worse acu normalized completion acu unification fact problems cime completion strategy useless rules gamma gamma considered 
evidence strategy problem obtained try complete known convergent set rules commutative rings simply want prove confluence 
results follows calls unif 
sols total cpu time unif time acu ac acu fact obvious completion simply proving confluence acu unification better strategy choose case 
commutative ring theory commutative ring theory equations gammax ac 
calls unif 
sols total cpu time unif time ac ac ac ac acu ac acu ac acu acu ag gamma ac ac ac acu ac ag gamma ac ag gamma ac acu ac acu acu ag gamma acu problems completion strategy case acu normalized completion acu unification cases acu unification ag unification better 
finitely generated abelian group complete presentation abelian group generated relations gamma gamma gamma calls unif 
sols total cpu time unif 
time ac ac acu ac acu ag gamma ac acu ag gamma acu unification clearly enhancement acu normalized completion 
ag normalized completion efficient able see difference different unification theories 
grobner basis polynomial ideal remarked cr normalized completion cr commutative rings theory computing polynomial ideals example gamma xy gamma complete modulo cr gamma 
calls unif 
sols total cpu time unif 
time cr ac ac acu acu ag gamma acu case acu unification slightly better 
note problem completion strategy arises calls unification expect better results clever strategy 
obtained similar results polynomial ideals finite fields 
ac complete unification succeeded reduce significantly number critical pairs generated normalized completion 
ac complete unification computes critical pairs ac unification unification 
implementation lacks completion strategy prover cime 
algebraic point view clear minimal ac complete sets unifiers 
saw complete sets unifiers modulo equational theory 
practical point view know compute minimal sets experiments prototype implementation shows compute small sets unifiers practice 
note standard combination techniques ac unification compute minimal sets general 
important thing remains study combine new method known methods reducing number critical pairs critical pair criteria 
extend results horn clauses study ac complete unification paramodulation inference rules 

baader schulz 
unification union disjoint equational theories combining decision procedures 
kapur editor proc 
th int 
conf 
automated deduction saratoga springs ny lnai 

bachmair dershowitz 
critical pair criteria completion 
journal symbolic computation 

bachmair dershowitz 
completion rewriting modulo congruence 
theoretical comput 
sci oct 

bachmair ganzinger lynch snyder 
basic paramodulation superposition 
kapur editor proc 
th int 
conf 
automated deduction saratoga springs ny lnai 
springer verlag june 

baird peterson wilkerson 
complete sets reductions modulo associativity commutativity identity 
proc 
rd rewriting techniques applications chapel hill lncs pages 
springer verlag apr 


unification dans les de th 
th ese de doctorat universit paris sud orsay france feb 


combining unification algorithms 
journal symbolic computation 


new ac unification algorithm new algorithm solving diophantine equations 
proc 
th ieee symp 
logic computer science philadelphia pages 
ieee computer society press june 

buchberger 
algorithm finding basis residue class ring zero dimensional ideal 
phd thesis university innsbruck austria 
german 

buchberger 
algebraic simplification 
computer algebra symbolic algebraic computation 
computing 
springer verlag 

fages 
associative commutative unification 
journal symbolic computation june 


jouannaud kirchner 
solving equations algebras rulebased survey unification 

lassez plotkin editors computational logic essays honor alan robinson 
mit press 


jouannaud kirchner 
completion set rules modulo set equations 
siam comput 


jouannaud march 
termination completion modulo associativity commutativity identity 
theoretical comput 
sci 

kapur musser narendran 
prime superpositions need considered knuth bendix procedure 
journal symbolic computation 

kirchner 
ethodes de conception syst ematique algorithmes unification dans les th 
th ese etat univ nancy france 

kirchner editor 
unification 
academic press 

knuth bendix 
simple word problems universal algebras 
leech editor computational problems algebra pages 
pergamon press 

lankford 
decision procedures simple equational theories axioms complete sets reductions 
research report memo atp department mathematics computer science university texas austin texas usa aug 


term reduction systems algebraic algorithms 
proceedings fifth gi workshop artificial intelligence pages bad west germany 
available informatik vol 


march 
normalised rewriting normalised completion 
proceedings ninth annual ieee symposium logic computer science pages paris france july 
ieee comp 
soc 
press 

nieuwenhuis rubio 
basic superposition complete 
editor proc 
european symp 
programming lncs pages rennes 
springer verlag 

peterson stickel 
complete sets reductions equational theories 
acm apr 

schmidt schau 
unification combination arbitrary disjoint equational theories 
journal symbolic computation 
special issue unification 

stickel 
unification algorithm associative commutative functions 
acm 
article processed macro package llncs style 
