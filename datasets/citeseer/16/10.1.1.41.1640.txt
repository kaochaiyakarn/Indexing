nd line world conference soft computing engineering design manufacturing wsc june fitness causes bloat langdon poli school computer science university birmingham birmingham tt uk fw langdon cs bham ac uk www cs bham ac uk wbl rmp tel fax keywords genetic programming structural complexity introns occam razor mdl price theorem problem evolving artificial ant follow santa fe trail study known genetic programming feature growth solution length 
known variously bloat increasing structural complexity described terms increasing redundancy code caused introns 
comparison runs fitness selection pressure backed price theorem shows tendency solutions grow size caused fitness selection 
argue growth inherent fixed evaluation function discrete variable length representation 
simple static evaluation search converges mainly finding trial solutions fitness existing trial solutions 
general variable length allows long representations solution short ones 
search length bias expect longer representations occur representation length tend increase 
fitness selection leads bloat 
tendency programs genetic programming gp populations grow length widely reported 
tendency gone various names bloat increasing structural complexity 
principal explanation advanced bloat growth introns redundancy code effect operation program contains 
contains survey research biology introns 
introns said protect program containing crossover 
presents analysis simple gp problems designed investigate bloat 
shows function sets longer programs replicate accurately crossover 
offspring produced crossover longer programs behave parents children shorter programs 
provides detailed analysis bloat tree schemata specifically gp 
advance general explanation apply generally discrete variable length representation generally progressive search technique 
bloat specific genetic programming applied trees tree crossover genetic operators non population stochastic search techniques simulated annealing stochastic iterated hill climbing 
section expand argument bloat inherent variable length representations gp 
sections analyse typical gp demonstration problem showing suffers bloat showing bloat absence fitness selection 
section describes results achieved followed section discussion potential advantages disadvantages bloat potential responses 
section summarises 
bloat variable length representations general variable length discrete representations multiple ways representing behaviour 
evaluation function static concerned quality partial solution representation representations equal worth 
search strategy unbiased equally 
general long ways represent specific behaviour short representations behaviour 
expect predominance long representations 
table ant problem objective find ant follows santa fe trail terminal set left right move functions set prog prog fitness cases santa fe trail fitness food eaten selection tournament group size non elitist generational wrapper program repeatedly executed time steps 
population size max program initial population created ramped half half maximum depth parameters child crossover mutation 
crossover points selected functions remaining selected uniformly nodes 
termination maximum number generations practical search techniques biased 
common forms bias variable length representations 
firstly search techniques commence simple short representations built bias favour short representations 
secondly bias favour continuing search previously discovered high fitness representations retaining points search 
bias favour representations initiating point 
problems interest finding improved solutions relatively easy initially increasingly difficult 
circumstances especially discrete fitness function little chance finding representation better representation created cf 
death crossover page 
selection bias favours representations fitness created 
general easiest way create representation retain fitness new representation represent identical behaviour 
absence improved solutions search may random search new representations best solution far 
said long representations short ones solution random search things equal find long representations short ones 
gp known bloat 
artificial ant problem artificial ant problem described pages 
studied problem chosen simple fitness function 
briefly problem devise program successfully navigate artificial ant twisting trail square theta toroidal grid 
program operations move right left move ant forward square turn right turn left 
operations take time unit 
sensing function looks square ant currently facing executes arguments depending square contains food empty 
functions prog prog provided 
take arguments respectively executed sequence 
artificial ant follow santa fe trail consists squares turns 
food units distributed non uniformly 
time ant enters square containing food eats 
amount food eaten fitness measure controlling program 
gp parameters gp system set pages populations allowed continue evolve ant succeeded traversing trail crossover produces child tournament selection ants allowed operations move left right complete trail 
details table parameters shown page 
version problem independent runs conducted 
widespread gp common impose limit size programs 
commonly food eaten number programs created max mean evolution maximum population mean food eaten 
error bars indicate standard deviation 
means runs 
number programs created max best mean covariance forced reduction gen evolution maximum population mean program length 
error bars indicate standard deviation 
solid line length best program population 
means runs 
region koza imposed maximum depth restriction evolved programs 
studying program size relatively large limit 
shall see allows separate stages evolution studied initial population bloat bloat constrained upper bound 
note limit allows evolved programs far bigger required solve problem 
example correct solution page takes time steps traverse santa fe trail length nodes compact solution possible 
results standard runs independent runs ants eat food santa fe trail time steps 
evolution maximum mean fitness averaged runs 
cases average minimum fitness near zero 
curves show gp fitness behaving expected maximum average fitness rising rapidly initially rising slowly runs 
gp population converges sense average fitness approaches maximum fitness 
spread fitness values children produced generation remains large children eat food food unit produced generation 
shows evolution maximum mean program size averaged runs 
see generations average program length grows rapidly initial size 
program size remains fairly static generation generation begins grow progressively maximum allowed program size 
surprisingly mean program length grows faster size best program population generations exceeds cf 
section 
generations mean program length length best program average lie close 
size best program refers single individual 
generations individual program having top score program chosen random labelled best 
random choice leads random fluctuations apparent program size seen generation despite averaging runs 
fitness necessary bloat price theorem applied representation length price covariance selection theorem population genetics relates expected change frequency gene deltaq population generation covariance gene frequency original population number offspring produced individuals population see equation 
help explain evolution number copies functions terminals gp populations 
change mean length gen gen gen gen gen gen gen gen gen covariance size limit covariance program length normalised rank fitness change mean length generation 
means runs 
deltaq cov gp size population change expected number children parent rank large populations expected change approximately cov gamma long crossover random 
tournament size program rank population size 
representation length inherited gp search techniques equation hold representation length 
formally price theorem applies provided length genetic operators uncorrelated representation length measurement function genotype page 
held exactly plot covariance vs change mean length straight line assuming constant 
solid line plot shows agreement theory measurement generation 
generation rise program length smaller predicted equation 
bulk discrepancy due restriction program length seen dotted line 
essentially equation gives quantitative measurement way genetic algorithms gas search 
aspect genetic material positively correlated fitness things equal generation population average contain 
negative ga tend reduce generation 
distribution representation lengths equation says change mean representation length linearly related selection pressure 
provides theoretical justification claim page average growth size proportional selection pressure 
experimental measurements small number radically different selection crossover operators tackett royal road problem 
solutions royal road problem required prespecified syntactic properties mean optimal solution fixed size admit extraneous code selections 
solutions executable programs 
referring back considering length best solution covariance generations 
see covariance correctly predicts mean length programs increase 
contrast assumed ga converge individual best fitness population fact mean length higher mean length best individual lead predict fall mean program length 
price theorem better predictor 
considers population just albeit best population 
generations mean program size reasonably described parabola growth quadratic 
corresponds covariance rising linearly slope number generations 
fitness selection sections individual population fitness covariance zero 
price theorem predicts average change length 
food eaten number programs created max mean max mean evolution maximum population mean food eaten 
error bars indicate standard deviation 
means runs comparing tournament sizes 
number programs created max best mean max best mean evolution maximum population mean program length 
error bars indicate standard deviation 
solid line length best program population 
means runs 
selection runs conducted initial populations fitness selection 
unsurprisingly run solution maximum mean fitness statistics fluctuate little essentially unchanged cf 

similarly program size statistics fluctuate essentially initial population cf 

keeping results selection reported page 
crossover produces random changes length expected spread lengths gradually increase 
observed 
slow fall maximum program size seen 
small fall mean standard deviation initial population runs 
removing selection final runs conducted fitness selection removed generation runs identical section generation 
runs ants eat food santa fe trail movements generation retained programs generation case maximum fitness dropped 
run solution generation generations run contained solutions 
evolution maximum mean fitness averaged runs 
expected shows absence fitness selection fitness population quickly falls 
fitness selection removed crossover operator unbiased expect length programs fluctuate random lengths parents 
mean length change little spread lengths increase 
length restriction means crossover operator biased ensure child produces exceed length limit 
unbiased choice crossover points cause offspring large roles parents reversed shorter legal program produced 
bias important programs start approach length limit explains slow fall program size seen 
spread programs lengths seen 
average standard deviation rises generation run 
correlation fitness program size plots correlation coefficient program size amount food eaten ant controls 
correlation coefficients equal covariance normalised lie range gamma 
considering food eaten avoid intermediate stage converting program score expected number children required applying price theorem 
shows cases positive correlation typically program performance length programs 
selection longer programs may fit simply contain useful primitives move short food eaten number programs created max mean max mean evolution maximum population mean food eaten 
error bars indicate standard deviation 
means runs showing effect removing fitness selection 
number programs created max best mean max best mean evolution maximum population mean program length 
error bars indicate standard deviation 
solid line length best program population 
means runs 
correlation length food eaten number programs created normal run tournament size fitness selection tournament size fitness selection removed gen correlation program length fitness normal runs runs selection runs selection removed halfway 
means runs 
programs 
selection correlation may crossover reduces length program disrupt operation program reduce fitness 
effect crossover fitness expected initial generations crossover highly disruptive cf 
crossovers producing child score parent parent inherits root tree 
generation proportion grows steady generation half fitness 
run risen 
range change fitness highly asymmetric children produced worse parent better 
run children produced fitness greater parent 
similar behaviour reported problems page chapter 
non disruptive crossover program length section argued long programs performance short ones random search programs level performance find long programs 
expect generally reported number problems crossover produces progressively fewer improved solutions evolution proceeds problems selection drives concentrate finding solutions fitness 
apart minimum maximum size restrictions crossover programs created relative score children mean population fitness fitness relative parent normal runs means runs 
programs created relative length children identical parent change length offspring relative parent score 
normal runs 
change length relative parent number programs created score identical st parent mean runs mean change length offspring relative parent score 
normal runs 
number programs created mean mean energy call best program 
normal runs 
random expect see finding long solutions short ones 
change program length programs produced crossover fitness parent plotted 
sight symmetric large central spike programs length rapidly falling tails side zero 
initially crossovers produce child length fitness parent 
proportion falls minimum generation rises progressively run 
dashed line plots number children generation produced crossovers identical parents 
ant problem crossovers produce clones 
closer examination data reveals average cf 
bias longer programs 
average programs fitness parent longer 
generation average program nodes longer 
presumably due average program length approaching upper limit bias falls generation remains positive 
part reason central peak result aspect gp crossover genetic material inherited parent 
crossover points typically drawn close leafs parents simply large bushy trees parts tree close leafs 
expected size crossover fragments depends detail trees selected parents relative weighting applied functions terminals cf 
table typically inserted subtree subtree replaces consist function leafs 
subtrees short produce small change total size 
small changes effect fitness big ones spike 
inheriting principally parent sharp contrast traditional gas sexual reproduction higher organisms nature offspring receive amount genetic material parent 
program terminal uses energy unit time executed 
amount energy executing program gives actual number terminals 
see typically terminals execution move turns allows ant move forward whilst searching side different parts program executed time called cases analysed detail code re executed 
large programs evolve contain small functional parts 
discussion want prevent bloat 
practical point view machine resources consumed system suffers bloat prevent extended operation system 
practice may wish operate system continually 
example may quickly find satisfactory solution better performance may achieved cutting short operation running repeatedly different starting configurations page 
data fitting problems growth solution size may indicative fitting better matching test data expense general performance 
example page suggests parsimony may important factor aesthetic reasons ease analysis direct relationship fitness bound appropriate size solution tree problem 
providing defence crossover page bloat causes production programs identical performance 
consume bulk available machine resources population may prevent gp effectively searching better programs 
hand page quotes results fixed length gas favour representations include introns argue impede emergent property introns may crucial successful development genetic programs 
introns may important hiding places genetic material protected current effects selection retained population 
may especially important fitness criteria dynamic 
change circumstance may advantageous execute genetic material previously hidden intron 
complex problems may possible test solution aspect problem form dynamic selection test cases may required 
example cases evolution claimed beneficial gp 
fitness function sufficiently dynamic advantage child performing identically parents 
see explosive bloat 
ways control bloat methods controlling bloat suggested 
firstly widely experiments place universal upper bound tree depth program length 
discuss unexpected problems approach 
second commonly incorporate program size directly fitness measure called parsimony pressure 
gives analysis effect parsimony pressure varies linearly program length 
multi objective fitness measures objective compact fast programs 
third method tailor genetic operations 
page uses mutation operators adjusts frequencies decrease complexity slightly probable increase 
suggests targeting genetic operations redundant code 
seldom due complexity identifying redundant code 
showed bloat continuing despite targeted genetic operations 
possibly difficulty reliably detecting introns 
route gp evolve junk code useful protected removal 
propose method likelihood potentially disruptive genetic operations increases parent size 
generalised existing explanations widely observed growth gp program size successive generations bloat give simple statistical argument generally applicable gp systems discrete variable length representations static evaluation functions 
briefly general simple static evaluation functions quickly drive search converge sense concentrating search trial solutions fitness previously trial solutions 
general variable length allows long representations solution short ones solution 
absence parsimony bias expect longer representations occur representation length tend increase 
fitness selection leads bloat 
sections taken typical gp problem demonstrated fitness selection suffers bloat selection 
demonstrated fitness selection removed slight bias common gp crossover caused practical requirement limit bloat causes slow reduction program size 
nb fitness causes bloat spite small crossover bias favour parsimony 
detailed measurement crossover confirms extended period evolution crossovers disruptive children fitness parents 
shows children fitness parents average consistently longer 
section apply price theorem time program lengths gp populations 
confirm experimentally fits gp populations restrictions program size significant impact 
price theorem prove fitness selection required change average representation length 
section discussed circumstances need control bloat current mechanisms control suggest way forward may consider complex dynamic fitness functions 
research funded defence research agency british council 
wolfgang banzhaf terence soule tom haynes helpful suggestions 
walter tackett genetic programming feature discovery image discrimination proceedings th international conference genetic algorithms icga university illinois urbana champaign july pp 

walter tackett recombination selection genetic construction computer programs phd thesis university southern california usa 
peter john angeline genetic programming emergent intelligence advances genetic programming chapter pp 
mit press cambridge ma usa 
walter tackett greedy recombination genetic search space computer programs foundations genetic algorithms estes park colorado usa july august pp 

langdon evolving data structures genetic programming genetic algorithms proceedings sixth international conference icga pittsburgh pa usa july pp 

peter nordin wolfgang banzhaf complexity compression evolution genetic algorithms proceedings sixth international conference icga pittsburgh pa usa july pp 

terence soule james foster john dickinson code growth genetic programming genetic programming proceedings annual conference stanford university ca usa july pp 

annie wu robert lindsay survey intron research genetics parallel problem solving nature iv 
proceedings international conference evolutionary computation berlin germany september pp 

tobias blickle lothar thiele genetic programming redundancy genetic algorithms framework evolutionary computation workshop ki saarbr im stadtwald building saarbrucken germany pp 
max planck institut fur informatik mpi 
tobias blickle theory evolutionary algorithms application system synthesis phd thesis swiss federal institute technology zurich 
peter nordin frank wolfgang banzhaf explicitly defined introns destructive crossover genetic programming advances genetic programming chapter pp 
mit press cambridge ma usa 
nicholas freitag mcphee justin darwin miller accurate replication genetic programming genetic algorithms proceedings sixth international conference icga pittsburgh pa usa july pp 

rosca dana ballard complexity drift evolutionary computation tree representations technical report nrl university rochester computer science department rochester ny usa 
langdon data structures genetic programming phd thesis university college london 
john koza genetic programming programming computers natural selection mit press cambridge ma usa 
john koza genetic programming ii automatic discovery reusable programs mit press cambridge ma usa 
george price selection covariance nature 
langdon poli analysis max problem genetic programming genetic programming proceedings second annual conference stanford university ca usa july 
lee altenberg schema theorem price theorem foundations genetic algorithms estes park colorado usa july august pp 

rosca dana ballard discovery subroutines genetic programming advances genetic programming chapter pp 
mit press cambridge ma usa 
chris peter ross dynamic training subset selection supervised learning genetic programming parallel problem solving nature iii jerusalem october pp 

chris peter ross adverse interaction crossover restricted tree depth genetic programming genetic programming proceedings annual conference stanford university ca usa july pp 

tak zhang heinz muhlenbein evolving optimal neural networks genetic algorithms occam razor complex systems 
hitoshi iba hugo de garis sato genetic programming minimum description length principle advances genetic programming chapter pp 
mit press cambridge ma usa 
william langdon data structures genetic programming advances genetic programming chapter pp 
mit press cambridge ma usa 
sims interactive evolution equations procedural models visual computer 

