mesh generation marshall bern paul mesh discretization geometric domain small simple shapes triangles quadrilaterals dimensions tetrahedra 
meshes find application areas 
geography cartography meshes give compact representations terrain data 
computer graphics objects ultimately reduced meshes rendering 
meshes essential numerical solution partial differential equations arising physical simulation 
chapter concentrate algorithms application assuming audience including practitioners engineers theoreticians computational numerical analysts 
types geometric domains divide possible inputs dimension 
distinguish types planar domains shown 
simple polygon includes boundary interior 
polygon holes simple polygon minus interiors simple polygons boundary connected component 
multiple domain general allowing internal boundaries fact domain may planar straight line graph infinite face bounded simple cycle 
multiple domains model objects material 
curved domains allow sides algebraic curves splines 
cases collectively known polygonal domains curved domains may may include holes internal boundaries 
dimensional inputs analogous types 
simple polyhedron topologically equivalent ball 
general polyhedron may multiply connected meaning topologically equivalent solid torus higher genus solid may cavities meaning boundary may connected component 
assume point boundary general polyhedron sufficiently small sphere encloses connected piece polyhedron interior connected piece exterior 
multiple polyhedral domains general polyhedra internal boundaries dimensional curved domains typically boundaries defined spline patches 
construction modeling domain geometry lie outside scope chapter shall simply assume domains sort boundary representation xerox palo alto research center coyote hill rd palo alto ca bern parc xerox com department computer science engineering pennsylvania state university university park pa cse psu edu supported mathematical information computational sciences division subprogram office computational technology research department energy contract eng 

types dimensional inputs simple polygon polygon holes multiple domain curved domain 
specifying exact form representation 
computational typically assume exact combinatorial data structures linked lists simple polygons polygons holes doubly connected edge lists quad edge structures planar multiple domains winged edge structures polyhedral domains 
practice complicated domains designed computer aided design cad systems 
systems surface representations designed visual rendering translate final design format input mesh generator 
tessellation language stl file format originally developed rapid prototyping solid models specifies boundary list surface polygons usually triangles surface normals 
advantages stl input format watertight model ensured model tolerance deviation cad model specified user 
initial graphics exchange specification format enables variety surface representations including higher order representations splines nurbs 
due greater complexity sloppy cad systems users files contain incorrect geometry gaps extra material surface intersections 
alternative approach format translation directly query cad system say point enclosure queries construct new representation answers queries 
approach advantageous translation problem difficult may case implicit surfaces level sets complicated functions constructive solid geometry formulas 
approach translation reconstruction queries cad model topologically correct sufficiently accurate enable meshing 
expect see greater integration solid modeling meshing 
types meshes structured mesh interior vertices topologically alike 
graphtheoretic terms structured mesh induced subgraph infinite periodic graph grid 
unstructured mesh vertices may arbitrarily varying local neighborhoods 
block structured hybrid mesh formed number small structured meshes combined unstructured pattern 
general structured meshes offer simplicity easy data access unstructured meshes offer convenient mesh adaptivity refinement initial solution better fit complicated domains 
high quality hybrid meshes enjoy advantages approaches hybrid meshing fully automatic 
shall discuss unstructured mesh generation greater length structured hybrid mesh 
types meshes structured unstructured block structured 

triangulating quadrilaterals 
subdividing triangles form quadrilaterals 
generation unstructured approach gaining ground closely connected computational geometry 
division structured unstructured meshes usually extends shape elements dimensional structured meshes typically quadrilaterals unstructured meshes triangles 
dimensions analogous element shapes meaning topological cubes tetrahedra 
essential reason structured unstructured meshes different element shapes 
fact possible subdivide elements order convert triangles quadrilaterals tetrahedra 
organization section gives brief survey numerical methods implications mesh generation 
section discusses influence element shape accuracy convergence time 
sections cover structured unstructured dimensional meshes 
section discusses dimensional hexahedral mesh generation including structured hybrid unstructured approaches 
section describes dimensional unstructured tetrahedral mesh generation 
shall explain basic computational geometry results arise larger context section concludes separate theoretical discussion unstructured planar mesh generation especially rich interesting geometric questions 
article emphasize practical issues earlier survey bern eppstein emphasized theoretical results 
inevitably overlap surveys intend complementary 
mesh generation huge literature hope cover 
excellent numerical methods structured mesh generation unstructured mesh generation 
nice web sites date information mesh generation 
numerical methods scientific computing seeks accurate discrete models continuous physical phenomena 
divide process interdependent steps problem formulation mesh generation equation solution 
section discuss discretization solution methods impact mesh generation 
discrete formulation number approaches discrete approximation partial differential equations pdes modeling physical system 
briefly review standard discretization methods finite difference finite element finite volume 
methods result linear systems similar structure desired characteristics meshes methods differ 
finite difference method replaces continuous differential operator difference approximation 
consider partial differential equation lu differential operator function position possibly time 
seek approximate solution geometric domain omega gamma standard finite difference approach replaces discrete stencil writing value mesh vertex position action stencil approximated lu ik set points adjacent mesh ik set weights depending geometry mesh 
right hand side discretized yielding system linear equations ik solved unknowns finite difference stencil gives nonzero weight neighboring vertices system quite sparse 
convenient stencil mesh restriction simplifies software mathematics convergence properties particular stencil analyzed taylor series expansion 
finite difference stencil gives accurate approximation continuous operator edges meeting vertices nearly orthogonal 
reasons finite difference method usually relies structured meshes 
finite element method approximates solution equation 
essential idea replace continuous function finite dimensional approximation oe oe basis functions local support 
basis functions typically low order polynomials action differential operator loe easy compute 
approximation defined domain analysis convergence continuous norm pointwise finite difference method 
finite element method obtains discrete approximation demanding differential equations satisfied set test functions omega lu omega implementation finite element method involves computation coefficients ik omega loe ik loe ik denotes set elements basis function oe test function nonzero 
unknowns expressed terms ik sparse linear system equations form 
finite element methods typically complicated unstructured meshes structured meshes 
furthermore real advantage mesh edges meeting orthogonally 
reasons unstructured meshes find broad increasing finite element methods 
finite volume method motivated physical conservation laws 
infinitesimal version conservation law form dae dt delta phi ae density phi flux conserved quantity 
order maintain physical conservation law discrete level finite volume method defines control volumes requires control volume omega dt omega ae omega phi delta normal surface volume 
finite volume method models fluid dynamics problems especially pressure velocity represented centers vertices volumes respectively 
cell centered control volumes usually identical mesh elements control volumes form dual mesh volume vertex original mesh 
ways define vertex centered control volumes 
regular grids may overlaid staggered half element case unstructured meshes delaunay triangulation may mesh dual voronoi diagram control volumes 
solution methods solution sparse linear system usually computationally demanding steps 
solution methods include direct factorization preconditioned iterative methods methods vary dramatically required storage computational cost different problems 
discrete formulation mesh generation steps greatly influence efficacy solution method 
example chooses higher order basis functions finite element method coarser mesh smaller denser linear system 
direct factorization methods sparse cholesky lu factorization tend slower robust iterative methods 
luckily extra computational cost amortized factorization reused solve right hand side 
important issue direct methods ordering vertices minimize fill number intermediate nonzeros 
nested dissection uses graph separators save asymptotic factor fill 
planar graph admits separators size reasonable dimensional meshes admit separators size 
iterative methods proved effective solving linear systems arising physical modeling 
large problems effectively solved preconditioning 
popular preconditioner involves incomplete factorization 
computing exact factors matrix lu approximate factors computed preconditioned system gamma gamma uu gamma solved iteratively 
ideally incomplete factors easy compute require modest amount storage condition number preconditioned system better original system 
multigrid methods achieve ultimate goal iterative methods convergence iterations certain classes problems 
methods sequence meshes graded fine coarse 
iterative solution fine linear system accelerated solving coarser systems 
cycle repeatedly projects current residual finer mesh coarser mesh interpolates solution coarser mesh finer 
drawback multigrid computing sequence meshes may difficult complicated geometries 
domain decomposition represents hybrid iterative direct approaches 
approach divides domain possibly overlapping small domains typically solves subproblems small domains directly iterates global solution neighboring subproblem solutions agree 
approach enjoys superior convergence properties multigrid methods imposing burden mesh generator 
fact domain partitioned subproblems admit structured meshes 
element shape shapes elements mesh pronounced effect numerical methods 
purposes discussion define aspect ratio element ratio maximum minimum width width refers distance parallel supporting hyperplanes 
roughly equivalent definitions aspect ratio 
general elements large aspect ratio bad 
large aspect ratios lead poorly conditioned matrices worsening speed accuracy linear solver 
speed degrades accuracy triangular mesh mild sharpest angle say ffi noticeably slower triangular mesh minimum angle ffi assuming solver gives exact answer large aspect ratios may give unacceptable interpolation error 
useful distinguish different types poor aspect ratio 
early results showed convergence triangular elements shrink assuming angles bounded away ffi analysis showed convergence assuming angles bounded away ffi weaker condition 
generalization result dimensions assumes dihedrals bounded away ffi bank smith proposed triangle quality measure analysis interpolation error area triangle divided sum squared edge lengths 
measure slightly favors sharp triangles flat triangles 
elements large aspect ratio 
solution differential equation anisotropic meaning second derivative varies greatly direction properly aligned high aspect ratio elements give efficient mesh 
ideal aspect ratio triangle square root ratio largest smallest eigenvalues hessian 
triangular meshes difference long skinny elements large angles small angles aspect ratio exceeds ideal large angles worse small 
fluid flow problems especially full navier stokes simulation viscosity included strongly anisotropic 
example aerodynamic simulations ideal aspect ratios may reach surface aircraft 
quadrilateral hexahedral meshes advantage accuracy triangular tetrahedral meshes control volume formulations problems allow faces elements boundary layer parallel orthogonal surface 
simulations shock fronts example supersonic air flow wing strongly anisotropic 
case locations directions high aspect ratio elements predicted advance 
need adaptivity remeshing initial solution tilts balance favor triangles tetrahedra 
simpson discusses surveys literature anisotropy 
element shape affects property linear system condition number 
triangular mesh shaped elements gives symmetric matrix positive definite negative diagonal entries finite element formulation equation laplacian operator 
matrices exactly matrices satisfy discrete maximum principle desirable property rules oscillation numerical method 
case shaped precise meaning angles opposite interior edge mesh sum ffi 
requirement implies quadrilaterals reversed section triangulation delaunay constrained delaunay triangulation 
depending boundary conditions associated differential equation matrix may require single angle opposite boundary edge measure ffi requirement goes delaunay hard satisfy requirement domains internal boundaries simply split outwards facing obtuse angles dropping boundary flip back new delaunay triangulation repeat reversed quadrilaterals outwards facing obtuse angles 
dimensions unstructured tetrahedral mesh gives matrix edge mesh sum jej cot nonnegative sum edges opposite tetrahedra mesh jej denotes length dihedral angle 
sums nonnegative dihedrals mesh nonobtuse condition restrictive necessary 
finite volume formulation poisson equation delaunay mesh voronoi control volumes gives matrix dimensions 
finite volume formulation finite element formulation tolerate delaunay tetrahedra large aspect ratio long control volumes aspect ratios 
disparity formulations surprising give matrix dimensions 
structured dimensional meshes structured meshes offer simplicity efficiency 
structured mesh requires significantly memory say factor unstructured mesh number elements array storage define neighbor connectivity implicitly 
structured mesh save time access neighboring cells computing finite difference stencil software simply increments decrements array indices 
compilers produce quite efficient code operations particular optimize code vector machines 
hand difficult impossible compute structured mesh complicated geometric domain 
furthermore structured mesh may require elements unstructured mesh problem elements structured mesh grade size rapidly 
difficulties solved hybrid structured unstructured approach decomposes complicated domain blocks supporting structured grids 
hybrid approaches fully automatic requiring user guidance decomposition step 
complicated dimensional hybrid mesh see section take weeks months hybrid approaches typically late design cycle 
structured mesh generation roughly classified hand generated elementary approaches algebraic interpolation methods pde variational methods 
pde approach solves partial differential equations order map domain omega domain convenient coordinate system 
section discuss elliptic pde approach connection classical topic conformal mapping 
mapping region omega complex plane conformal preserves angles words angle curves intersecting point omega preserved mapping 
riemann mapping theorem states topological disk omega gamma exists conformal mapping takes interior omega interior topological disk unit disk square 
obvious connection mesh generation conformal mapping omega square grid induces structured mesh omega property element angles tend ffi limit increasingly fine discretization 
unfortunately riemann mapping theorem proves existence conformal mapping give algorithm 
write iy consider complex 
conformal mapping domain omega gamma defined boundary discretization rectangle inverse mapping maps grid structured mesh omega gamma 
grid left obtained solving unit aspect ratio resulting folded mesh 
right appropriate aspect ratio chosen 
function ij 
analytic conformal assuming satisfies cauchy riemann equations gammaj functions harmonic satisfy laplace equation 
conformal inverse functions harmonic satisfy 
consider regions omega assume discretization boundary omega gamma finding suitable boundary discretization may nontrivial task 
obvious algorithm solve assuming boundary approach may 
may obtain poorly shaped inverted elements shown 
problem solutions may harmonic harmonic conjugate satisfy equations 
algorithm partially obtaining better estimate rectangle height implied discretization boundary omega gamma scale original coordinates rectangle square coordinates mapping obtain system order cauchy riemann equations barfield obtained reasonable nonoverlapping meshes estimating average value right hand side equation value think average aspect ratio original domain ideal aspect ratio varies significantly domain number function position 
approach successful physical problems improved significantly generated grid smoothed postprocessing step 
approach extended dimensions riemann mapping theorem longer holds addition average aspect ratio term 
approach just sketched works quite domains guarantee generation valid mesh 
interesting inverse problem solving harmonic equations xx yy xx yy guarantee solution inverted elements nonvanishing jacobian 
solving problem form difficult requires discretization domain want find grid 
system inverted form nonlinear elliptic system ffx gamma fix flx gamma fiy fly ff fi fl software designed solve systems includes additional source term right hand sides harmonic systems control local point spacing domain 
elliptic method just discussed motivated conformal mapping compute true conformal mappings 
true conformal mapping induces structured mesh certain advantages example laplacian limit second order difference grid 
true conformal mapping widely mesh generation algorithms compute mappings relatively slow allow local control point spacing 
case omega simple polygon schwarz formula offers explicit form conformal mappings unit disk omega gamma mapping turn find conformal mappings omega square rectangle 
points complex plane defining polygon counterclockwise order interior angles points ff ff define normalized angles fi ff gamma 
preimages edge disk schwarz formula gives form conformal mapping 
gamma 
fi programs available solve unknown values trefethen sc toolbox driscoll driscoll vavasis 
difficulty numerical solution crowding enormous variation spacing points 
latest apparently best schwarz algorithm overcomes difficulty repeatedly remapping crowding occur near points evaluated 
unstructured dimensional meshes mentioned advantages unstructured meshes flexibility fitting complicated domains rapid grading small large elements relatively easy refinement 
structured mesh generation unstructured mesh generation part mainstream computational geometry years large literature subject 
consider principled approaches unstructured mesh generation detail approaches delaunay triangulation constrained delaunay triangulation quadtrees 
discuss mesh refinement improvement 
final section describe geometric problems abstracted unstructured mesh generation 
delaunay triangulation approach unstructured mesh generation partitions task phases placement mesh vertices followed triangulation 
added points called steiner points distinguish domain original vertices 
placement phase smart triangulation phase especially simple considering input vertices steiner points ignoring input edges 
placement phase typically places vertices domain boundary adding interior 
boundary lined steiner points delaunay triangulation vertices conform domain 
requirement inspires crisp geometric problem called conforming delaunay triangulation polygonal domain omega gamma add steiner points edge omega union edges delaunay triangulation 
algorithm due lines edges omega large number steiner points uniformly spaced near endpoints 
efficient solution covers edges omega disks overlap edges 
edelsbrunner tan gave best theoretical result algorithm uses steiner points vertex multiple domain 
gave omega gamma lower bound example 
approaches placing interior steiner points 
approach combines vertices number structured meshes 
second approach adds steiner points successive layers working domain boundary advancing front mesh generation section 
shows example 
third approach chooses interior points random distribution may interpolated coarse quadtree background triangulation 
independent random sample produce badly shaped triangles generator filter points close previously chosen points 
deterministic methods achieve essentially effect random sampling filtering methods define birth death rules depend density neighboring points 
methods give anisotropy 
second approaches structured submeshes advancing front offer local control element shapes orientations 

delaunay triangulation points placed advancing front 
barth 
delaunay triangulation 
reversed quadrilateral 
approaches may space points improperly structured meshes advancing fronts collide flaw usually corrected filtering points smoothing mesh 
third fourth approaches trade direct control element shapes ease fitting complicated geometries 
achieve anisotropy approaches computing delaunay triangulation stretched space 
example uses background triangulation define local affine transformations delaunay flips described respect transformed circles 
stretched delaunay triangulations large angles ordinary delaunay triangulations pose problem stretching exceeds desired amount section 
triangulation phase uses known delaunay triangulation 
delaunay triangulation point set fs defined empty circle condition triangle appears delaunay triangulation dt circumcircle encloses points see 
exception points special position empty circle passes points may triangulate points complete triangulation arbitrarily 
defined dt triangulation convex hull purposes discard triangles fall outside original domain omega gamma number practical delaunay triangulation algorithms 
describe called edge flipping algorithm relevant subsequent discussion 
worst case running time suboptimal performs quite practice 
edge flipping algorithm starts triangulation locally optimizes edge 
internal non convex hull edge triangulated quadrilateral formed triangles sharing quadrilateral reversed angles 
sweep line algorithm computing initial triangulation diagonal sum ffi equivalently triangle circumcircle contains opposite vertex 
reversed flip exchanging diagonal 
compute initial triangulation place internal edges queue queue empty remove edge quadrilateral reversed flip add outside edges queue endif endwhile initial triangulation computed sweep line algorithm 
algorithm adds points coordinate order 
addition algorithm walks convex hull added points starting rightmost previous point adding edges slope reverses shown 
theorem guarantees success edge flipping triangulation quadrilateral reversed completion delaunay triangulation 
constrained delaunay triangulation way conforming delaunay triangulation extend delaunay triangulation polygonal domains 
constrained delaunay triangulation possibly multiple domain omega steiner points redefines delaunay triangulation order force edges omega triangulation 
point visible point omega open line segment pq lies omega intersect edges vertices omega gamma constrained delaunay triangulation cdt contains triangle cut edge omega gamma empty circumcircle empty means circle contain vertices omega visible points inside triangle 
visibility requirement means external proximities omega wraps nearly touch effect 
provides example vertex visible point interior triangle abc 
edge flipping algorithm generalized compute constrained delaunay triangulation time allow edges omega queue 
obtaining initial triangulation somewhat difficult polygonal domains point sets 
textbook preparata shamos describes log time algorithm 
constrained delaunay triangulation polygon holes 

mesh computed ruppert algorithm 
ruppert computing initial triangulation 
algorithm adds edges omega subdivide easy triangulate monotone faces 
ruppert building chew gave mesh generation algorithm constrained delaunay triangulation 
subsequently mitchell sharpened ruppert analysis shewchuk refined algorithm implementation available web 
ruppert algorithm computes constrained delaunay triangulation outset adds steiner points improve mesh uniting phases approach described section 
choosing approach user gives control point placement obtains efficient mesh fewer triangles 
step ruppert mesh generator cuts vertices domain omega interior angle measures ffi cutting line vertex introduce new small feature omega gamma best cut isosceles triangle base halfway closest visible neighbor 
degree greater case multiple domain bases isosceles triangles match isosceles triangle receives steiner point legs 
algorithm computes constrained delaunay triangulation modified domain 
algorithm goes loop 
line loop repairs constrained delaunay triangulation addition new steiner point accomplish step need recompute entire triangulation 
removed old triangles exactly containing searching outwards triangle contains new triangles replace removed triangles incident new vertex exists triangle angle smaller ffi center circumcircle lies diameter boundary edge add midpoint add endif recompute constrained delaunay triangulation endwhile loop guaranteed halt angles larger ffi point cutoff isosceles triangles returned domain mesh complete 
ruppert algorithm comes strong theoretical guarantee new angles angles input greater ffi total number triangles mesh constant times minimum number triangles small angle mesh 
prove efficiency result ruppert shows triangle final mesh constant factor local feature size vertices 
local feature size point omega defined radius smallest circle centered touches nonadjacent edges boundary spacing function intrinsic domain 
quadtrees quadtree mesh generator starts enclosing entire domain omega inside axis aligned square 
splits root square congruent squares continues splitting squares recursively minimal leaf square intersects omega simple way 
splits may dictated user defined spacing function balance condition 
quadtree squares warped cut conform boundary 
final triangulation step gives unstructured triangular mesh 
describe particular quadtree mesh generator due bern eppstein gilbert 
algorithm assumes omega polygon holes algorithm extended multiple curved domains 
fact quadtree approach handles curved domains gracefully delaunay constrained delaunay approaches splitting phase automatically adapt curvature enclosed boundary pieces 
algorithm bern splits squares leaf square contains connected component omega gamma boundary vertex 
mitchell vavasis improved splitting phase cloning squares intersect omega connected component copy contains single connected component omega gamma algorithm splits squares near vertices omega times vertex lies buffer zone equal size squares 
mesh generator imposes balance condition square adjacent half size 
causes splits propagate quadtree increasing total number leaf squares constant factor 
squares 
mesh computed quadtree algorithm 
mitchell warped conform domain omega gamma various warping rules give just possibility 
pseudocode jbj denotes side length square vertex omega closest quadtree vertex move endfor leaf square crossed edge move vertices closer jbj closest points endfor discard faces warped quadtree lie outside omega cells warped quadtree triangulated angles bounded away ffi gives mesh computed variant quadtree algorithm 
shows cloning ensures appropriate element sizes holes holes 
notice quadtree mesh exhibits preferred directions horizontal vertical 
artifact poses problem mesh improvement steps redistribute element orientations 
quadtree algorithm enjoys efficiency guarantee ruppert algorithm 
fact quadtree algorithm analyzed way 
mesh refinement adaptive mesh refinement places grid points areas pde solution error large 
local error estimates initial solution known posteriori error estimates determine elements refined 
elliptic problems estimators asymptotically bound true error computed locally information element 
approach mesh refinement iteratively inserts extra vertices triangulation typically edge triangle section 
new vertices boundaries curved domains computed curved boundary 
triangle divided bisection regular refinement 
current straight edge giving approximation domain mesh refines 
iterative vertex insertion may viewed mesh improvement step section generators combined insertion deletion flipping smoothing single loop 
iterative vertex insertion gives finer mesh nesting edge conforming refinement original mesh meaning mesh includes boundaries original triangles 
nesting refinements simplify interpolation step multigrid method section 
compute refinement turn approach 
approach splits triangles need refinement adding midpoints sides 
pseudocode gives approach 
solve differential equation initial mesh estimate error triangle maximum error triangle larger tolerance error estimates mark set triangles refine divide triangles adjacent invalid triangles get solve differential equation estimate error triangle endwhile number popular alternatives step current mesh adaptively refined 
regular refinement midpoints sides marked triangle connected form similar triangles 
unmarked triangles received midpoints split way 
unmarked triangles received midpoint bisected connecting midpoint opposite vertex 
iteration bisected triangles glued back marked refinement precaution guarantees triangle similar triangle bisection triangle similar triangle regular refinement regardless number times refinement loop produces mesh minimum angle half minimum angle angles bounded away proposed alternatives step triangle bisection 
method refines marked triangle cutting opposite vertex midpoint longest edge 
neighboring triangles invalid meaning side contains extra vertex triangles bisected way 
bisections 
bisection algorithm pseudocode splits invalid children refined triangles subdivision points longest edges continue remaining invalid triangles 
refinement propagate quite far marked triangles propagation fall infinite loop propagation path bisected edge longer predecessor 
approach previous produces finite number different triangle shapes similarity classes minimum angle half smallest angle quite longest edge refinement improves angles 
second refinement method pseudocode illustrated 
method bisect longest edge bisections tend propagate method retains final angle bound method 
denotes marked triangles refined denotes children refined triangles bisect triangle longest edge bisect triangle subdivided edge add invalid children triangles add invalid triangles endwhile discuss reverse process coarsening mesh 
process helps reduce total number elements tracking solutions time varying differential equations 
coarsening turn single highly refined mesh sequence meshes multigrid method 
shows sequence meshes computed coarsening algorithm due gooch 
algorithm marks set vertices delete fine mesh eliminates marked vertices mesh 
resulting mesh node conforming meaning vertex coarse mesh appears fine mesh edge conforming 
difficulty shapes triangles degrade mesh coarsened due increasing disparity interior boundary point densities 
meshes produced refinement methods typically easier coarsen hierarchical meshes delaunay triangulations 
teng miller devised algorithm delaunay triangulations spaced point sets produces sequence bounded aspect ratio node conforming meshes approximately minimum depth 

sequence meshes multigrid method solving linear systems arising modeling airfoil 
gooch mesh improvement common mesh improvement techniques flipping smoothing 
techniques proved powerful dimensions transform poor meshes ones long mesh starts vertices 
flipping exchanges diagonals triangulated quadrilateral edge flipping algorithm computing delaunay triangulation section criterion making exchange need delaunay empty circle test 
flipping regularize vertex degrees minimize maximum angle improve quality measure triangles 
quality measures optimized delaunay triangulation section flipping computes true global optimum criteria computes local optimum 
mesh smoothing adjusts locations mesh vertices order improve element shapes mesh quality 
mesh smoothing topology mesh remains invariant preserving important features nonzero pattern linear system 
laplacian smoothing commonly smoothing technique 
method sweeps entire mesh times repeatedly moving adjustable vertex arithmetic average vertices adjacent 
variations weight adjacent vertex total area elements centroid incident elements centroid neighboring vertices 
laplacian smoothing computationally inexpensive fairly effective guarantee improvement element quality 
fact laplacian smoothing invert element algorithm performs explicit check moving vertex 
class smoothing algorithms uses optimization techniques determine new vertex locations 
global local optimization smoothing offer guaranteed mesh improvement validity 
global techniques simultaneously adjust unconstrained vertices approach involves optimization problem large number unconstrained vertices consequently computationally expensive 
local techniques adjust vertices independent set vertices parallel resulting cost comparable laplacian smoothing 
quality measures including area divided sum squared edge lengths optimized techniques related linear programming 
shows results local optimization smoothing algorithm developed 
mesh resulting bisection refinement smoothing 
mesh local optimization smoothing 
freitag 
algorithm applied mesh generated adaptively finite element solution linear elasticity equations dimensional rectangular domain hole 
mesh left generated bisection algorithm refinement edges coarse mesh evident levels refinement 
mesh right generated similar algorithm vertex locations optimized refinement step 
global minimum angle improved ffi ffi average minimum element angle ffi ffi theoretical questions mentioned theoretical results conforming delaunay triangulation triangulation context 
section describe theoretical related mesh generation 
optimal triangulation computational studied number problems form planar point set polygonal domain find best triangulation best judged specific quality measure maximum angle minimum angle maximum edge length total edge length 
input simple polygon optimal triangulation problems solvable dynamic programming time input point set polygon holes multiple domain problems harder 
delaunay triangulation constrained delaunay triangulation case polygonal domains optimizes quality measure improved flipping reversed quadrilateral statement follows theorem triangulation reversed quadrilaterals delaunay 
delaunay triangulation maximizes minimum angle optimizing number esoteric quality measures maximum circumcircle radius maximum enclosing circle radius roughness piecewise linear interpolating surface 
ear 
edge insertion holes removing sufficiently ears 
dotted lines indicate old triangulation 
mentioned section edge flipping general optimization heuristic 
example edge flipping works reasonably minimizing maximum angle general find global optimum 
powerful local improvement method called edge insertion exactly solves minmax angle problem minmax optimization problems 
edge insertion starts arbitrary triangulation repeatedly inserts candidate edges 
minimizing maximum angle goal candidate edge subdivides maximum angle general candidate edge incident worst vertex worst triangle 
algorithm removes edges crossed forming polygonal holes alongside holes repeatedly removing ears triangles sides boundary shown maximum angle smaller old worst angle cab 
runs completion triangulation improves edge bc eliminated candidate 
gets stuck triangulation returned state insertion eliminated candidate 
candidate insertion takes time giving total running time 
compute initial triangulation gamma delta edge slots unmarked unmarked edge cutting worst vertex worst triangle abc add remove edges crossed try removing ears better abc succeeds mark bc mark undo insertion endif endwhile edge insertion compute minmax eccentricity triangulation minmax slope interpolating surface time 
inserting candidate edges certain order saving old partial triangulations running time improved log minmax angle maxmin triangle height 
close results optimization criteria maximum edge length total length 
edelsbrunner tan showed triangulation point set minimizes maximum edge length contain edges minimum spanning tree 
tree divides input simple polygons filled dynamic programming giving time algorithm improvable 
triangulation minimizing total edge length minimum weight triangulation solved polynomial time open 
promising approach incrementally computes set edges appear triangulation 
required edges form connected spanning graph triangulation completed dynamic programming minmax problem 
steiner triangulation optimal triangulation problems just discussed limited applicability mesh generation address triangulation steiner point placement 
exact steiner triangulation problems appear intractable typical theoretical results steiner triangulation prove approximation bound guarantees provided mesh generators sections order complexity bound edelsbrunner tan algorithm conforming delaunay triangulation 
mesh generators sections give constant factor approximation algorithms may call small angle problem triangulate domain omega minimum number triangles new angles bounded away ffi provable constants tend quite large hundreds actual performance better 
number triangles small angle triangulation depends geometry domain just number vertices upper bound sum aspect ratios triangles constrained delaunay triangulation 
consider large angle problem triangulate omega minimum number triangles new angles bounded away ffi strictest bound large angles imply bound small angles nonobtuse triangulation triangulate domain omega maximum angle measures ffi nonobtuse mesh desirable numerical geometric properties 
bern mitchell ruppert developed circle algorithm nonobtuse triangulation polygons holes algorithm gives triangulation triangles regardless domain geometry 
shows steps algorithm domain packed nonoverlapping disks uncovered region sides radii added order split domain small polygons small polygons triangulated right triangles adding new subdivision points 
currently unknown multiple domains admit polynomial size nonobtuse triangulations 
mitchell gave algorithm triangulating multiple domains log triangles maximum angle ffi tan improved maximum angle bound ffi complexity optimal 
hexahedral meshes mesh generation dimensions developed number reasons lack standard data representations dimensional domains greater software complexity relevant article theoretical difficulties 
section survey approaches dimensional mesh generation 
divided material element shape hexahedral tetrahedral 
classification completely strict hexahedral mesh generators triangular prisms tetrahedra pinch 
careful implementations numerical methods handle 
steps circle nonobtuse triangulation 

hexahedral mesh submarine showing block structure vertical slice mesh 
cfd degenerate prisms 
section describe approaches hexahedral mesh generation vary degree structure strictness 
meshes start approach produces meshes structure quite highest quality elements 
mesh contains number small structured meshes form large unstructured mesh 
typically user supply topology unstructured mesh rest process automated 
shows mesh created system developed cfd engineering 
system user controls placement block corners mesh generator projects implied block edges domain curves surfaces automatically 
due need human interaction meshes suited adaptive meshing rapidly iterated design simulation 

dimensional cartesian mesh wing 
cartesian meshes move developed quick dirty approach hexahedral mesh generation 
cartesian approach offers simple data structures explicit orthogonality mesh edges robust straightforward mesh generation 
disadvantage approach uses non hexahedral elements domain boundary require special handling 
cartesian mesh formed cutting rectangular box congruent boxes split recursively minimal box intersects domain omega simple way reached small target size 
construction essentially octree described section requiring neighboring boxes differ size factor ensures appropriate mesh grading 
boxes cut boundary classified number patterns determining vertices lie interior exterior omega gamma pattern corresponds different type non hexahedral element 
boxes adjacent ones half size similarly classified non hexahedral elements alternatively solution value subdivision vertices treated implicit variables lagrange multipliers 
fluid dynamics simulations cartesian meshes quite successfully finite element finite volume formulations 
approach adapted difficult meshing problems 
example berger berger colella developed adaptive cartesian methods rotational flows flows strong shocks 
unstructured hexahedral meshes hexahedral elements retain advantages tetrahedral elements unstructured meshes 
fit man objects especially objects produced cad systems 
edge directions box shaped physical significance example show clear advantage tetrahedra stress analysis beam 
face normals box meet center element property define control volumes finite volume methods 
advantages inherent properties box shaped elements degrade element grows rectangular 
suffice generate unstructured hexahedral mesh transforming tetrahedral mesh 
armstrong currently developing unstructured hexahedral mesh generator medial axis transform 
medial axis domain locus centers spheres touch boundary faces 
construction closely related voronoi diagram faces domain srinivasan previously applied construction dimensional unstructured mesh generation 
medial axis natural tool mesh generation advancing fronts meet medial axis limit small equal sized elements 
precomputing locus mesh generator gracefully handle sections mesh 
mitchell developing hexahedral mesh generation algorithm called whisker weaving whisker weaving advancing front approach fixes topology mesh geometry 
starts quadrilateral surface mesh generated advancing front generator face 
algorithm forms planar dual surface mesh finds closed loops planar dual surface polyhedron 
loop represent boundary layer eventual mesh 
layer represented dual called sheet vertex edges adjacent 
algorithm runs fills sheets boundary inwards 
approach hexahedral meshing raises interesting theoretical question quadrilateral surface meshes extended hexahedral volume meshes 
mitchell thurston see eppstein answered question topological sense showing surface mesh simple polyhedron number quadrilaterals extended volume mesh formed possibly curved topological cubes 
geometric question remains open 
tetrahedral meshes tetrahedra important advantages unique linear interpolation vertices interior greater flexibility fitting complicated domains ease refinement 
order realize advantages tetrahedral meshes unstructured 
approaches unstructured triangular mesh generation surveyed section generalized tetrahedral mesh generation new difficulties 
describing delaunay advancing front octree mesh generators discuss theoretical obstacles unstructured tetrahedral meshing ways ir differs ir polyhedral domains triangulated steiner points 
gives example non polyhedron twisted triangular prism rectangular face triangulated bends interior 
top vertices visible interior bottom vertices tetrahedron formed vertices polyhedron include bottom face 
chazelle gave quantitative bad example shown 
polyhedron includes omega gamma grooves nearly meet doubly ruled curved surface triangulation polyhedron include omega gamma steiner points omega gamma tetrahedra 
bad examples appear rule possibility generalizing constrained delaunay triangulation dimensions 

twisted prism steiner points 
chazelle polyhedron requires omega gamma steiner points 
cap spindle needle wedge 
types bad tetrahedra 
second domain may different numbers tetrahedra 
example cube triangulated tetrahedra 
shall see generalization edge flip dimensions exchanges tetrahedra vice versa 
variability usually pose problem extreme cases 
example points ir delaunay triangulation omega gamma tetrahedra triangulation 
tetrahedra poorly shaped ways triangles 
dimensions types failure angles close ffi angles close ffi failures kind implies failures second 
dimensions classify poorly shaped tetrahedra dihedral solid angles 
types bad tetrahedra shown 
needle permits arbitrarily small solid angles large solid angles large small dihedral angles 
wedge permits small solid dihedral angles large solid large dihedral angles forth 
notice cap face angles bounded away ffi ffi tetrahedron may arbitrarily small solid angles interior volume 
example vertex coordinates ffl ffl ffl 
measures tetrahedron quality proposed maximum value equilateral tetrahedron minimum value degenerate tetrahedron 
suitable measure forbids types bad tetrahedra minimum solid angle 
weaker measure forbids types ratio minimum edge length radius 

dimensions edge flip exchanges tetrahedra sharing edge tetrahedra sharing triangle vice versa 
delaunay triangulation dimensions point placement followed delaunay triangulation popular approach mesh generation especially aerodynamics 
point placement methods fairly combining structured meshes advancing front random scattering filtering 
dimensions placement phase put sufficiently points domain boundary ensure delaunay triangulation conforming 
dimensional conforming delaunay triangulation problem hard domains practical interest know published solutions 
point placement methods suffer liability dimensions points may improperly spaced fronts patches 
methods suffer new sort problem spaced point set may include tetrahedra delaunay triangulation unusually large compared lengths edges 
reason delaunay mesh generators include special postprocessing step finds removes 
chew personal communication devised algorithm removes adding steiner points random location near 
triangulation phase mesh generation somewhat difficult dimensions 
generalization edge flipping exchanges possible triangulations points convex position shown 
call flip delaunay flip flip triangulation points satisfies empty sphere condition encloses point 
dimensions longer true tetrahedralization transformed delaunay triangulation sequence delaunay flips currently unknown tetrahedralization delaunay triangulation arbitrary flips 
provably correct incremental delaunay triangulation algorithms edge flipping 
practical dimensional delaunay triangulation algorithms 
bowyer watson gave incremental algorithms reasonable expected case performance 
barber implemented randomized algorithm arbitrary dimension 
algorithm compute delaunay triangulations known reduction lifts delaunay triangulation points ir convex hull points ir advancing front mentioned advancing front approach placing steiner points delaunay triangulation 
pure advancing front mesh generator places elements just steiner points 
approach gives direct control element shapes especially near boundary region special interest 
advancing front generators especially popular aerodynamics simulations 
describe advancing front algorithm parikh contains essential ideas 
desired element size stretching directions defined vertices coarse background tetrahedralization interpolated rest domain 
background mesh defined octree dimensional generalization quadtree 
get started boundaries domain triangulated initial front consists boundary faces 
algorithm iteratively chooses face front builds tetrahedron face 
algorithm attempts fill clefts left layer tetrahedra starting layer layer algorithm chooses small faces order minimize collisions 
fourth vertex tetrahedron existing vertex vertex specially created tetrahedron 
case algorithm tries choose smart location new vertex example new vertex may placed normal base face distance determined aspect ratios length functions ultimately derived background triangulation 
case cleft new vertex tetrahedron tested collisions final acceptance 
shows surface fairly isotropic tetrahedral mesh computed advancing front mesh generator developed generator just described places elements directly 
devised algorithm pure advancing front advancing front point placement followed delaunay triangulation 
algorithm starts coarse mesh uses advancing front place additional steiner points simply subdividing coarse tetrahedra maintain triangulation 
mesh improved delaunay minmax solid angle flips 
researchers agree applying flips order effective type flip 
octrees octree natural generalization quadtree 
initial bounding cube split congruent cubes split recursively minimal cube intersects domain omega simple way 
dimensions balance condition ensures cube smaller balancing unbalanced quadtree octree expands number boxes constant multiplicative factor 
balance condition need explicit may consequence intrinsic local spacing function 
shephard collaborators developed octree mesh generators polyhedral domains 
original generator leaf cubes collection predefined patterns 
keep number patterns manageable generator simplifying assumption cube cut facets 
surface tetrahedral mesh computed advancing front generator 

surface tetrahedral mesh derived octree 
shephard input polyhedron 
give sophisticated way conform boundaries 
uses rectangular octrees hierarchical set warping rules 
octree refined domain edge intersects boxes size 
boxes warped domain vertices edges faces 
mitchell vavasis generalized quadtree mesh generator bern dimensions 
generalization straightforward primarily vertices polyhedra may complicated local neighborhoods 
algorithm guaranteed avoid types bad tetrahedra producing mesh constant times minimum number tetrahedra bounded aspect ratio tetrahedralization 
far dimensional mesh generation algorithm strong theoretical guaranty 
vavasis released modified version algorithm called qmg quality mesh generator including simple geometric modeler equation solver boot 
modified algorithm includes systematic set warping rules particular new warping method octree cube cut single facet generalizes fixed dimension 
refinement improvement discuss improvement refinement known subject 
mentioned edge flipping generalizes dimensions flipping delaunay empty sphere criterion minmax solid angle criterion fairly effective 
laplacian smoothing generalizes experimental results indicate longer effective dimensions 
optimization smoothing appears powerful simple laplacian smoothing 
freitag gooch recommend combining delaunay flipping smoothing maxmin dihedral angle maxmin dihedral angle sine 
move refinement discuss different refinement algorithms natural generalization bisection dimensions 
bisect tetrahedron edge add triangle midpoint shown 
operation creates child tetrahedra bisects faces lie domain boundary shared adjacent tetrahedron 
tetrahedra share face agree bisected invalid mesh constructed 

tetrahedron left bisected form new tetrahedra single bisection tetrahedron approximately square minimum solid angle dimensions minimum angle triangle decreased factor 
consider wedge tetrahedron vertex coordinates ffl gammaffl ffl gammaffl 
bisection longest edge tetrahedron creates new tetrahedron minimum solid angle ffl levin suggested extension longest edge refinement section dimensions 
notice splitting longest edge tetrahedron splits longest edge subdivided faces bisection shared faces uniquely defined 
ties broken vertex labels 
neighboring invalid tetrahedra meaning sharing subdivided longest edge refined recursively 
levin provide experimental evidence suggesting repeated rounds longest edge refinement reduce minimum solid angle fixed threshold guarantee proved 
guarantee follow shown algorithm generates finite number tetrahedron similarity classes 

levels longest edge bisection canonical tetrahedron 
note tetrahedra generated level similar 
final level refinement show tetrahedra obtained similar tetrahedra obtained bisection algorithm introduced generate finite number similarity classes 
describing algorithm sketch argument liu joe motivates algorithm 
key observation exists affine transformation maps tetrahedron canonical tetrahedron longest edge bisection generates finite number similarity classes 
consider canonical tetrahedron coordinates gamma 
illustrate levels longest edge bisection shown tetrahedra generated level refinement similar tetrahedra generated levels refinement similar refinement canonical space induces refinement original space finite number different similarity classes 
subtlety similarity classes original space correspond identical scaling translation similarity classes canonical space 
number similarity classes turns 
liu joe arnold give essentially equivalent algorithms generating bisection order follow presentation 
face tetrahedron elects edges refinement edge conditions hold choice face consistent tetrahedra share exactly edge global refinement edge chosen pairs faces tetrahedron 
conditions hold initially face picks longest edge ties broken consistent manner example vertex edge label order 
pseudocode child face triangle new face mark refinement edge face current mesh set marked tetrahedra bisect tetrahedron global refinement edge pick old edge child face refinement edge pick longest edge new face refinement edge set invalid tetrahedra enddo described current state art mesh generation finite element methods 
practical issues mesh generation roughly order importance algorithm robustness fit underlying physics element quality mesh efficiency 
unstructured triangular tetrahedral mesh generation frequent data structures algorithms familiar computational geometry 
expect trend continue 
expect recommend computational focus attention structured meshes hexahedral meshes 
close short list open problems practical theoretical interest 
coincidence problems focus dimensional mesh generation 

flip graph point set ir connected 
words possible convert triangulation point set point set convex position flips 

smoothing algorithm guaranteed remove 
type bad tetrahedron spaced vertices small 

algorithm conforming delaunay triangulation ir words place vertices boundary polyhedron delaunay triangulation vertices original new contains polyhedron 

algorithm unstructured tetrahedral mesh generation guarantees matrix finite element formulation poisson equation 

give algorithm computing blocks mesh 
algorithm give small number nicely shaped blocks quadrilaterals ir ir 
quadrilateral surface mesh number quadrilaterals extended hexahedral volume mesh 
lori freitag paul heckbert scott mitchell carl gooch jonathan shewchuk steve vavasis help preparing survey 
melton berger 
adaptation surface modeling cartesian mesh methods 
aiaa th aiaa cfd 
conf san diego ca 
june 
amenta bern eppstein 
optimal point placement mesh smoothing 
proc 
th acm siam symp 
disc 
algorithms pages 
hernandez 
method improvement solid finite element meshes 
advances engineering software 
armstrong robinson li 
meshing 
proc 
th international meshing roundtable 
sandia national laboratories 
arnold mukherjee 
locally adapted tetrahedral meshes bisection 
manuscript 
aziz 
angle condition finite element method 
siam numer 
analysis 

error estimates adaptive finite element computations 
siam numer 
analysis 
shephard grice 
robust geometrically automatic dimensional mesh generation 
int 
numer 
meth 
eng 
baker grosse 
nonobtuse triangulation polygons 
disc 
comp 
geometry 
baker 
automatic mesh generation complex dimensional regions constrained delaunay triangulation 
eng 
computers 
bank 
software package solving elliptic partial differential equations 
users guide 
siam publications philadelphia penn 
bank sherman weiser 
refinement algorithms data structures regular local mesh refinement 
editor scientific computing pages 
imacs north holland publishing amsterdam 
bank smith 
mesh smoothing posteriori error estimates 
siam num 
anal appear 
ftp math ucsd edu pub reb ps 
local mesh refinement dimensions 
impact computing science engineering 
barber dobkin 
quickhull algorithm convex hulls 
submitted acm trans 
math 
software 
see www geom umn edu software qhull 
barfield 
optimal mesh generator lagrangian hydrodynamic calculations space dimensions 
journal computational physics 
barrett berry chan demmel donato dongarra van der vorst 
templates solution linear systems building blocks iterative methods 
siam philadelphia 
barth 
aspects unstructured grids finite volume solvers euler equations 
technical report von institute fluid dynamics lecture series 
perry clark 
comparison tetrahedral finite element meshes elastic analysis 
proc 
th international meshing roundtable pages 
sandia national laboratories 
berger colella 
local adaptive mesh refinement shock hydrodynamics 
journal computational physics 
berger 
adaptive mesh refinement hyperbolic partial differential equations 
journal computational physics 
bern chew eppstein ruppert 
dihedral bounds mesh generation high dimensions 
proc 
th acm siam symp 
disc 
algorithms pages 
bern edelsbrunner eppstein mitchell 
tan 
edge insertion optimal triangulations 
disc 
comp 
geometry 
bern eppstein 
mesh generation optimal triangulation 

du hwang editors computing euclidean geometry nd edition pages 
world scientific singapore 
bern eppstein gilbert 
provably mesh generation 
comp 
system sciences 
bern eppstein yao 
expected extremes delaunay triangulation 
int 
comp 
geometry applications 
bern mitchell ruppert 
linear size nonobtuse triangulation polygons 
disc 
comp 
geometry 

paving new approach automated quadrilateral mesh generation 
int 
numer 
meth 
eng 

anisotropic mesh generation particles 
technical report carnegie mellon university school computer science 
epfl ch 
bowyer 
computing dirichlet tessellations 
computer 
brown 
voronoi diagrams convex hulls 
inform 
process 
lett 

fully automatic dimensional mesh generator complex geometries 
int 
numer 
meth 
eng 
stephenson 
optimization driven approach mesh smoothing 
finite elements analysis design 
carey oden 
finite elements computational aspects 
prentice hall 
castillo 
mathematical aspects grid generation 
society industrial applied mathematics philadelphia 
castro diaz hecht 
new progress anisotropic grid adaptation inviscid flows simulations 
proc 
th international meshing roundtable 
sandia national laboratories 
chazelle 
convex partitions polyhedra lower bound worst case optimal algorithm 
siam comput 
chew 
guaranteed quality triangular meshes 
technical report tr comp 
science dept cornell university 
ciarlet 
finite element method elliptic problems 
north holland 
ciarlet 
maximum principle uniform convergence finite element method 
computer methods appl 
mechanics engineering 

adaptively refined cartesian cell scheme euler equations 
nasa technical memorandum nasa october 
powell 
accuracy assessment cartesian mesh approaches euler equations 
journal computational physics 
azevedo simpson 
optimal interpolation triangle incidences 
siam sci 
stat 
comput 
de 
hierarchical boundary model solid object representation 
acm transactions graphics 
delaunay 
sur la sph ere vide 
nauk sssr vii nauk 
dickerson montague 
usually 
connected triangulation 
proc 
th acm symp 
comp 
geometry pages 
driscoll 
matlab toolbox schwarz mapping 
acm transactions mathematical software appear 
driscoll vavasis 
numerical conformal mapping cross ratios delaunay triangulation 
available www cs cornell edu info people vavasis vavasis html 

adaptive grid generation harmonic maps 
sengupta hauser thompson editors numerical grid generation computational fluid dynamics 
press limited swansea 
edelsbrunner shah 
incremental topological flipping works regular triangulations 
proc 
th acm symp 
comp 
geometry pages 
edelsbrunner 
tan 
quadratic time algorithm minmax length triangulation 
proc 
nd ieee symp 
foundations comp 
science pages 
edelsbrunner 
tan 
upper bound conforming delaunay triangulations 
disc 
comp 
geometry 
edelsbrunner tan 
polynomial time algorithm minmax angle triangulation 
siam sci 
stat 
comp 
eppstein 
linear complexity hexahedral mesh generation 
proc 
th acm symp 
comp 
geom pages 
field 
laplacian smoothing delaunay triangulations 
communications applied numerical methods 
fortune 
voronoi diagrams delaunay triangulations 
hwang 
du editors computing euclidean geometry nd edition pages 
world scientific singapore 
freitag gooch 
comparison tetrahedral mesh improvement techniques 
proc 
th international meshing roundtable pages 
sandia national laboratories 
sass endo sandia gov personnel roundtable 
freitag jones 
efficient parallel algorithm mesh smoothing 
proc 
th international meshing roundtable pages 
sandia national laboratories 
frey 
george 
delaunay tetrahedralization advancing front approach 
proc 
th international meshing roundtable pages 
sandia national laboratories 
www cs cmu edu ph 
george 
automatic mesh generation 
wiley new york 
george hecht 
fully automatic mesh generator domains shape 
impact com 
sci 
eng 
glassner 
maintaining winged edge models 
arvo editor graphics gems ii pages 
academic press professional boston ma 
guibas stolfi 
primitives manipulation general subdivisions computation voronoi diagrams 
acm trans 
graphics 
hassan morgan 
mesh generation adaptivity solution compressible viscous high speed flows 
int 
numer 
meth 
eng 
hassan morgan 
unstructured tetrahedral mesh generation dimensional viscous flows 
int 
numer 
meth 
eng 
hughes 
finite element method linear static dynamic finite element analysis 
prentice hall englewood cliffs new jersey 
hughes akin 
techniques developing special finite element shape functions particular singularities 
int 
numer 
meth 
eng 
jameson baker 
calculation inviscid transonic flow complete aircraft 
proc 
aiaa th aerospace sciences meeting reno 
joe 
dimensional triangulations local transformations 
siam sci 
stat 
comput 
joe 
construction dimensional delaunay triangulations local transformations 
computer aided geometric design 
jones 
adaptive refinement unstructured finite element meshes 
finite elements analysis design march 
miller 
nested dissection survey comparison various nested dissection algorithms 
technical report cmu cs school computer science carnegie mellon university pittsburgh pennsylvania 
stanley steinberg 
fundamentals grid generation 
crc press 
liu joe 
shape tetrahedra bisection 
mathematics computation july 
liu joe 
relationship tetrahedron shape measures 
bit 
liu joe 
quality local refinement tetrahedral meshes bisection 
siam scientific computing november 
lo 
new mesh generation scheme arbitrary planar domains 
int 
numer 
meth 
eng 
lo 
volume discretization tetrahedra 
computers structures 
parikh 
dimensional grid generation advancing front method 
int 
numer 
meth 
fluids 

progress grid generation advancing front technique 
engineering computers 

unstructured grid generation iterative point insertion local reconnection 
aiaa journal 

elliptic grid generation conformal mapping 
jos castillo editor mathematical aspects grid generation pages 
society industrial applied mathematics philadelphia 

number similarity classes created local simplicial bisection refinement 
manuscript 

unstructured adaptive mesh generation high reynolds number viscous flows 
technical report icase nasa langley research center 

unstructured mesh generation adaptivity 
technical report icase nasa langley hampton va 
techreports larc nasa gov 

mesh generation adaptivity complex geometries flows 
roger editor handbook computational fluid mechanics 
academic london 
miller 
teng 
optimal coarsening unstructured meshes 
proc 
th acm siam symp 
disc 
algorithms 
miller 
teng 
delaunay numerical method dimensions generation formulation partition 
proc 
th ieee symp 
foundations comp 
science pages 
miller 
teng vavasis 
unified geometric approach graph separators 
proc 
nd ieee symp 
foundations comp 
science pages 
mitchell 
cardinality bounds triangulations bounded minimum angle 
sixth canadian conference computational geometry 
mitchell vavasis 
quality mesh generation dimensions 
proc 
th acm symp 
comp 
geom pages 
mitchell vavasis 
aspect ratio bound triangulating grid cut hyperplane 
proc 
th acm symp 
comp 
geom pages 
mitchell 
refining triangulation planar straight line graph eliminate large angles 
proc 
th ieee symp 
foundations comp 
science pages 
mitchell 
characterization quadrilateral meshes surface admit compatible hexahedral mesh enclosed volume 
proc 
th symposium theoretical aspects computer science stacs 
springer verlag lncs 

muller 
proven angular bounds stretched triangulations frontal delaunay method 
proc 
th aiaa comp 
fluid orlando 
srinivasan 
point placement delaunay triangulation polygonal domains 
proc 
rd canadian conf 
comp 
geometry pages 
nguyen van 
automatic mesh generation tetrahedral element 
int 
numer 
meth 
eng 
gooch 
multigrid acceleration upwind euler solver unstructured meshes 
aiaa journal 
owen 
meshing research corner 
www ce cmu edu www mesh html 
parthasarathy srinivas 
constrained optimization approach finite element mesh smoothing 
finite elements analysis design 
morgan 
finite element euler computations dimensions 
int 
numer 
meth 
eng 
saxena 
automatic mesh generation solid models recursive spatial decomposition 
int 
numer 
meth 
eng 
preparata shamos 
computational geometry 
springerverlag 
rajan 
optimality delaunay triangulation proc 
th acm symp 
comp 
geometry pages 

minimal roughness property delaunay triangulation 
computer aided geometric design 

long thin triangles linear interpolation 
siam numer 
analysis 


algorithms refining triangular grids suitable adaptive multigrid techniques 
int 
numer 
meth 
eng 


design data structure fully adaptive multigrid finite element software 
acm transactions mathematical software september 


mesh refinement processes generalized bisection simplices 
siam numer 
analysis june 

levin 
refinement algorithm suitable adaptive multi grid techniques 
communications applied numerical methods 
ruppert 
delaunay refinement algorithm quality dimensional mesh generation 
algorithms may 

delaunay edge refinements 
proc 
rd canadian conf 
comp 
geometry pages 

finite element mesh generation 
www users informatik 
de roberts html 
schroeder shephard 
combined octree delaunay method fully automatic mesh generation 
int 
numer 
meth 
eng 
shephard georges 
automatic dimensional mesh generation finite octree technique 
int 
numer 
meth 
eng 
shephard flaherty ludwig 
finite octree mesh generation automated adaptive dimensional flow analysis 
proc 
nd int 
conf 
numer 
grid generation computational fluid mechanics pages 
shewchuk 
triangle dimensional quality mesh generator delaunay 
see www cs cmu edu equake triangle html 
shewchuk 
adaptive precision floating point arithmetic fast robust geometric predicates proc 
th acm symp 
comp 
geometry 
shimada 
physically mesh generation automated triangulation surfaces volumes bubble packing 
phd thesis dept mit 
shimada gossard 
computational methods physically fe mesh generation 
proc 
ifip tc wg th int 
conference tokyo 
simpson 
anisotropic mesh transformations optimal error control 
applied numer 
math 
smith gropp 
domain decomposition parallel multilevel algorithms elliptic partial differential equations 
cambridge university press new york 
smith 
theory harmonic grid generation 
complex variables 
srinivasan 
tang 
automatic mesh generation symmetric axis polygonal domains 
technical report rc comp 
science ibm research division yorktown heights ny 
strang fix 
analysis finite element method 
prentice hall 

tan 
optimal bound conforming quality triangulations 
proc 
th acm symp 
comp 
geometry pages 
mitchell 
whisker weaving algorithm constructing finite element meshes 
proc 
th international meshing roundtable 
sandia national laboratories 
thomas 
numerical partial differential equations finite difference methods 
springer new york 
thompson 
numerical grid generation 
elsevier amsterdam 
thompson 
numerical grid generation foundations applications 
north holland 
thompson 
aspects numerical grid generation current science art 
proc 
th aiaa applied aerodynamics conference pages 
thurston 
re hexahedral polyhedra posting sci math newsgroup 
www ics uci edu eppstein thurston 
trefethen 
numerical computation schwarz transformation 
siam scientific statistical computing 
vavasis 
qmg mesh generation related software 
www cs cornell edu info people vavasis qmg home html 
vavasis 
stable finite elements problems wild coefficients 
technical report tr dept comp 
science cornell university 
watson 
computing dimensional delaunay tessellation application voronoi polytopes 
computer 
hassan 
efficient dimensional delaunay triangulation automatic point creation imposed boundary constraints 
int 
numer 
meth 
eng 
weiser 
local mesh local order adaptive finite element methods posteriori error estimates elliptic partial differential equations 
technical report yale university new haven connecticut 
welch 
serious topological design variational curves surfaces 
phd thesis cs dept carnegie mellon university dec 
cmu cs ftp reports adm cs cmu edu usr anon cmu cs ps ps ps 
xu 
iterative methods space decomposition subspace correction 
siam review 
xu 
monotone finite element scheme convection equations 
math 
computation appear 
shephard 
automatic dimensional mesh generation modified octree technique 
int 
numer 
meth 
eng 
shephard 
modified quadtree approach finite element mesh generation 
ieee computer graphics applications january february 
young melvin 
locally refined rectangular grid finite element method application computational fluid dynamics computational physics 
journal computational physics 
young 
internet finite element resources 
www engr ca finite fe resources fe resources html 

