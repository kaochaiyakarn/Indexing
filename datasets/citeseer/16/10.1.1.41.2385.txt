partial morphisms categories ective objects eugenio moggi laboratory foundations computer science university edinburgh november divided parts 
rst analyse great generality data types relation partial morphisms 
introduce partial function spaces partial cartesian closed categories complete objects motivate show properties 
second part de ne partial cartesian closed category gen generalized numbered sets prove extension category numbered sets show related recursive topos 
data type usually means set objects kind suitable manipulation computer program 
course computers manipulate formal representations objects 
purpose mathematical semantics programming languages characterize data types functions way independent speci representation mechanism 
objects deals elements structures borrowed di erent areas mathematics meaning understood depend practice programming 
categorical de nition data types universal properties suitable goal allows speci computer representation details mathematical structures 
unfortunately possible give categorical de nition data type relevant concept related counterpart categorical level 
concept ignored categorical level partiality 
section discuss notion partial map general terms 
usual categorical de nition modi ed slightly allow consider maps domains suitable sense admissible subobjects 
notion partial cartesian closed category introduced provides axiomatic framework discuss higher types containing partial maps 
original notion cartesian closed category strictly categorical de nition relevant consideration partial maps cpos mathematical structures sets 
quite mathematical semantics programming languages lose notion ective computability intrinsic operational character 
notion may recovered suitable de nition computable element 
worth pursuing general notion ectiveness data types computable elements maps provide regular interpretation programming constructs 
ectiveness functions natural numbers understood simple way extending data types establish correspondence natural numbers elements data type recursive functions induce natural de nition ective morphism de nition numbered sets ective morphisms numbered set 
surjective numbered sets total function ective morphism technically convenient counterpart empty set denote en category numbered sets ective morphisms extended strict initial object see ers 
de nition numbered set haven assumed structure en may considered universe ective objects independently meaning ectively data type 
numbered sets natural notion partial morphism suggested partial recursive functions pr de nition partial ective morphisms numbered sets partial function partial ective morphism pr categories needs interpreting high level programming languages possess closure properties existence objects formally general de nitional tools priori assured 
instance require closure cartesian products function spaces data type constructions constructions commonly design programming languages 
unfortunately en doesn function spaces 
instance ective uniform way numbering en 
numbered set id 
matter fact en far cartesian closed 
reason section extend straightforward way de nition numbered set partial ective morphism obtain ccc gen generalized numbered sets show extension en section properties partial recursive functions relativize notion numbered sets acceptable set partial functions see def 
mul extension en recursive topos en embedded embedding preserves limits nite colimits function spaces 
section introduce topos similar give topos theoretic characterization gen quite closely chapter ros 
characterization general facts topos theory see hyl section ros chapter easily derive properties gen section proved elementary means 
section compare type structure gen ones introduced connection recursion theory higher types 
comparison turns morphisms gen similar banach mazur functionals see rog lose uniformity property ective morphisms extend en gen di erent proposal universe ective objects ective topos realizability interpretation logical connectives extensively investigated hyl mcc 
uniformity holds give numberings 
en identi ed full sub category embedding en doesn preserve function spaces 
comparison recursive ective topos ros 
category theory fairly elementary way see bw chapter exception section relies knowledge grothendieck toposes see joh 
partial morphisms dealing computable functions semantics programs partiality arises naturally 
section develop framework partial functions categories domains see def 
de ning partial morphisms simply mimic set theoretic de nition partial map see ros mog 
literature exist approaches formalizing concept category partial morphisms see bibliography overview rr 
basic de nitions examples categories partial morphisms consider relations data types partial morphisms 
precisely investigate operations associated data types extended naturally partial morphisms introduce new data types lifting partial function spaces connection partial morphisms 
data types introduced denotational semantics de nitions set theoretic constructions particular categories stress properties 
de ne partial cartesian closed categories natural counterpart cartesian closed categories partial function spaces considered 
variant lambdacalculus partial lambda calculus corresponding equational theory partial cartesian closed categories see mog ros mog 
notion related partial morphisms complete object see def introduced ers 
informally complete object set element represent unde ned 
elementary approach partial morphisms complete objects partial function spaces concrete categories partial morphisms lm 
categories domains analogy set theoretic de nition partial map map subset category identify partial morphism object object morphism subobject notation 
notation basic categorical notions see bw chapter 
means mono 
subobject corresponding class monos isomorphic class subobjects 
subobject inverse image subobject pullback de nition partial morphisms categories witness partial morphism pair 
object witnesses isomorphic exists isomorphism partial morphism equivalence class isomorphic witnesses partial morphism easy show witnesses isomorphic isomorphism unique 
notation 
notation partial morphisms means partial morphism partial morphism corresponding witness exists exists mono unique 
partial order domain subobject composition partial morphism pullback composition de ned pullback exists general partial morphisms form category composition may unde ned 
usually admissible ones instance partial morphisms en ective 
criteria describe admissible partial morphisms impose constraints class admissible subobjects 
reasons categories partial morphisms de ned giving category domain structure collection subobjects certain properties de nition domain structure category partial morphisms hm ja ci domain structure 

id 




exists called category domains dc 
category partial morphisms domain clear context write 
retract 
properties domain structure necessary sucient sure category 
precisely properties imply composition partial morphisms de ned property implies identities id id canonical embedding maps id partial order partial morphisms enjoys properties proposition category partial morphisms 
total morphisms form id maximal 
composition partial morphisms monotonic rosolini starting simple minded de nition category partial morphisms develop equational axiomatizations categories partial morphisms 
general categories satisfying axioms form 
embedded fully faithfully category form see ros rr details 
category trivial domain structure id isomorphic example 
simplest example non trivial category partial morphisms category sets partial functions corresponds domain structure ja set set fact nite limits ja ci domain structure biggest 
categories consider concrete behaviour morphism uniquely determined behaviour global elements morphism identi ed function 
categories domains strengthen de nition concreteness requiring partial morphisms domain particular total morphisms uniquely determined behaviour global elements de nition concrete category domains concrete dc terminal object concrete treated category sets partial functions 
example 
category numbered sets en natural counterpart recursively enumerable sets de nition subset set nonempty subset numbered enumeration numbered set incl 
subobject hand empty take subobject 
unique morphism strict initial object subset subobject call subobject corresponding easy show collection subobjects domain structure en isomorphic category numbered sets partial ective morphisms 
example 
category natural domain structure category topological spaces top de nition topological space open subobject subobject corresponding open subset induced topology easy show collection open open subobjects domain structure 
simple way represent partial morphism top open partial map inverse image open subset open subset full sub category top category cpo partial orders complete lubs chains monotonic maps preserving lubs chains see plo 
don assume existence element cpo want open subset cpo induced partial order cpo open restricted cpo domain structure cpo 
data types partial morphisms having introduced partial morphisms check categorical constructions corresponding usual data types modi cations required 
investigate relevant data types products function spaces partial function spaces lifting 
data type speci ed universal property 
categorical de nitions product function space familiar operations associated need extended partial morphisms order give interpretation terms programs partial morphisms denotational style 
extension possible abstraction operation associated function spaces context categories partial morphisms function spaces replaced partial function spaces 
section denotes category domains 
usual data types de ned partial morphisms recall de nition order notation de nition standard data types terminal object exists unique product exists unique hf hf hf eval function space exists unique 
eval id order extend operations data types partial morphisms examine happens category sets partial functions 
take hg de ned partial function hg hg de ned undefined general de nition hf 
pullback 
subobject called intersection existence subobjects follows properties domain structure see def 
products quite di erent natural data type 
products equalizers problem fact equalizers equalizers 
set extend partial morphisms take de ned partial function eval id de ned undefined general possible extend partial morphisms de ned eval id time natural natural transformation 
instance cpo rst condition implies domain interior fx xj unde natural inverse image interior subset continuous map necessarily interior inverse image problem arise case partial function spaces de ned partial morphisms 
de nition partial function space lifting partial function space exists unique 
id open lifting exists unique open previous considerations concerning function spaces suggest replace partial function spaces leads de nition de nition partial cartesian closed category terminal object products partial function spaces familiar notion ccc just degenerate instance corresponding trivial domain structure 
category sets partial functions partial function spaces expects lifting corresponds adding extra element representing unde ned set 
lifting partial function spaces de ned terms proposition open id 
lifting eval open partial function space haven considered coproducts generally colimits relation partial morphisms problem fact proposition colimits partial morphisms object lifting canonical embedding right adjoint preserves colimits proof right adjoint canonical embedding lifting functor 

open proposition coproducts natural isomorphisms hold 
proposition replaces partial function spaces function spaces gets usual isomorphisms hold cartesian closed categories see ls 
doesn counterpart domain structure plays key role de ning partial morphisms important data type represents de nition dominance subobject true dominance true exists unique true category sets partial functions dominance subobject classi er 
characteristic feature dominance natural isomorphism functor op set 

dominance de nable familiar data types proposition id 
dominance dominance 
sco category sh presheaves proposed conservative cartesian closed extension sh small limits function spaces yoneda embedding sh preserves limits function spaces exist construction involving limits function spaces gives result sh 
intermediate steps construction require limits function spaces exist imagine carried sh 
similar conservative extension possible categories domains see ros proposition domain structure presheaves category domains exists domain structure sh category sh presheaves 
sh sh dominance yoneda embedding embeds fully faithfully sh sh ya yi particular yoneda embedding sh extended partial morphisms 
yi yf full faithful embedding sh sh 
topos dominance de ne lifting partial function spaces shown ros sh sh proposition yoneda embedding preserves lifting partial function spaces complete objects notion related partial morphisms complete object see ers 
characteristic feature complete object partial morphism codomain extended total morphism 
set theoretic terms means element representing unde ned 
de nition complete object object dc complete exists extends restrict attention complete objects partial morphisms redundant extend total morphisms 
sub category complete objects closed data type constructions proposition complete objects data types 

complete 
complete complete 
complete complete 
complete proof suppose 

extension extends extension extension hg hi extends extension eval id extends id extends simpler way checking object complete provided lifting exists proposition complete 

proof complete exists 
extending open 
id open id id composition monotonic id maximal equality id id hold 
words 

complete prop prop prop 

complete categories en cpo complete objects particularly interesting properties 
instance complete objects cpo exactly cpos element xpoint operator 
en complete objects satisfy property similar ii recursion theorem partial functions en exists property characteristic called objects see ers de nition object en exists 
extends example 
numbered set pr partial recursive functions standard odel numbering maps index partial recursive function corresponding partial recursive function complete object en example 
vis take elementary bijective coding set terms 
theory considered equivalence relation term model numbered function maps coding dme equivalence class resulting numbered set general complete 
generalized numbered sets category numbered sets en lack partial function spaces equalizers due fact numbering en 
instance case total recursive functions don ective numbering partial ones 
ective functions hx yi effective coding pairs natural numbers functions 
observation leads de nition generalized numbered sets see lm def 
section prove category gen generalized numbered sets limits colimits function spaces 
show en embedded fully faithfully gen embedding preserves limits nite colimits partial function spaces existing en gen conservative extension en closure properties 
de nitions en gen rely simple properties partial recursive functions relativize acceptable set partial endofunctions set leaves degree freedom choosing set computable functions 
instance set partial functions representable uniform re exive structure acceptable replace partial recursive functions 
notation 
sequel notational conventions denotes non empty set partial combinatory algebra combinator testing equality 
urs proposed capture properties partial recursive functions theorem ii recursion theorem denotes acceptable set see def stated op ary operation sets op denotes set fop jx write singleton fxg constant function set apparent context de nition acceptable set acceptable 
monoid id 
constants functions 
ective coding pairs 

hl li coding pairs write hx yi hx yi apparent context hx yi denotes real pair coding 
ective coding sum 
inj functions domain included write 
closed de nition cases switch id 
canonical isomorphism maps inj bi inj ha bi easy show ective codings ectively equivalent exist don care speci ective coding 
name de nition cases property acceptable set requires justi cation proposition partial function img inj img inj undefined proof switch hg id property essential proving gen function spaces 
de nition numbered set see def simply take set surjective total function resulting category de ne appropriate domain structure relax totality requirement de nition class set theoretic functions domain coincides domain function ffj dom dom reducibility preorder exists property crucial establishing results gen proposition lub reducibility preorder proof clearly 
reducibility preorder lubs unique 
introducing generalized numbered sets describe numbered sets relativized de nition category en numbered sets ective morphisms de ned follows objects pairs image morphism function exists assume domain instance category numbered set de ned def strict initial object just en category numbered sets strict initial object equivalent en pr fact en pr initial total recursive function enumerates dom isomorphic en pr 

en concrete category nite products nite colimits ccc see def de nition ective partial morphisms 
kind problem avoided notion category see ros de nition category gen generalized numbered sets ective morphisms de ned follows objects pairs ex 
ex subset 
img je ex 
ex ex ex directed partial morphism partial function ex intuition generalized numbered sets ectively enumerate piecewise 
immediate de nition objects gen correspondence directed subsets en full subcategory gen identifying numbered set generalized numbered set 
ective partial morphisms induced domain structure subobjects de nition subset gen domain function subobjects equivalence classes monos incl 
subset ex fe lj img xg domain structure subobjects set canonical numbered set structure id set ective partial endomorphisms proposition properties family subobjects domain structure gen gen concrete category domains ective partial morphism dom subset ective morphism 
subobject numbered set isomorphic numbered set property means restricted en functors analysing structure gen forgetful functor full faithful embeddings set gen de nition 
gen set forgetful functor 
set gen functor maps min min smallest ideal 
min generalized numbered set explicitly min ff fin set gen functor maps max max biggest ideal 
max generalized numbered set explicitly max ff img xg 
de ned lubs exist behaved see prop 
lemma 
respectively left right adjoints immediate consequence lemma preserves limits colimits 
show gen closed limits colimits partial function spaces 
theorem gen limits colimits proof gen small diagram gen limit cone limit cone set preserves limits identity ective morphisms 
left nd ex limit cone gen ex ff img lg check generalized numbered set see def 
rst condition obvious 
second true constant functions ex third follows ex ex fact tg ft ideal ective morphism follows immediately de nition ex cone gen mediating morphism set ective morphism see def ex uniqueness mediating morphism gen follows faithfulness similarly colimits shows inj colimit cone gen inj colimit cone set ex smallest ideal containing inj fact generalized numbered set see def rst third conditions obvious 
second condition follows img inj ji ig second condition inj ective morphism follows immediately de nition ex cone gen mediating morphism set inj ective morphism see def fact ex smallest ideal containing inj contained ideal ex turn attention function spaces 
small full subcategory en plays important role study gen de nition dom full sub category en objects id subset functor gen category presheaves dom currying functor 
gen gen dom op set main properties functor lemma functor full faithful preserves limits function spaces proof faithfulness obvious 
fix element dom ective morphism equalities hold fa fa complete proof fullness show ective morphism ex take ex domain gen preservation limits function spaces trivial lemma generalized numbered sets isomorphic presheaves isomorphic 
theorem gen function spaces partial function spaces proof lemma possible candidate function space generalized numbered set gen gen dom isomorphisms dom gen immediate de nition second condition def satis ed provided gen 
third condition follow show gen domain domain id id dom want show gen hg ei ed id ex id id ei assumptions partial function img inj img inj undefined prop hg ei fact hg ei ga ea ea inj ea inj ea inj ea inj completes proof similarly shows isomorphisms partial function space gen dom gen conditions required acceptable see def counterpart gen proposition 
coding pairs 
coding sum de nition cases proof immediate consequence coding pairs immediate consequence coding sum left adjoint 
preserves coproducts colimits means exactly distributivity binary products coproducts generalized numbered sets don uniform coding elements case numbered sets want remain en far possible 
aim incompatible working gen provided en embedded fully faithfully gen established categorical construction performed en performed gen yields result 
theorem embedding en gen preserves limits partial function spaces proof proof essential lemma 
consider case binary products cases similar 
product en dom gen en en en gen gen gen embedding en gen yoneda embedding category corresponding category presheaves preserves colimits theorem en binary coproducts coequalizers preserved embedding en gen proof know compute colimits gen en full sub category gen claim amounts showing colimit object consideration en coequaliser set initial object en exists preserved 
generalized banach mazur functionals category gen generalized numbered sets provides alternative characterization type structure jn hereditary partial ective functionals acceptable set de ned lon de nition longo hereditary partial ective functionals monoid partial functions de ned follows fg hx yi ective coding pairs see def ff jf key idea de nition functions coding pairs de ne level way ective coding pairs de ne banach mazur functionals see rog 
general may exist 
assumption acceptable codings pairs required de nition jn exist see lemma 
section show hereditary partial ective functionals live gen de nition partial functionals object type structure fe tg partial functionals de ned induction functional types jt follows case function space proof induction consider partial functionals gen show integer types correspond hereditary partial ective functionals see def 
fact de nition terms similar de nition gen terms ex general result relates jn fe jn gen see lm theorem main theorem gen forgetful functor gen set see def en cartesian closed ers ershov shows partial functionals de ned en calls partial computable functionals 
ers ers functionals related hereditary ective operations heo countable functionals see kle 
theor partial computable functionals partial functionals gen theor implies main result lm equivalence hereditary partial ective functionals pr partial computable functionals ershov 
order prove theor de ne generalized numbered set numbered generalized numbered set 
de nition factorizes gen ex proposition factorizes gen gen gen gen set theoretic function proof implication left right obvious morphisms closed composition 
implication show factorizes gen ex hypothesis gen ex de nition gen sucient condition implies factorization show factorizes proposition 
complete factorizes proof 

complete partial ective morphism exists extension partial ective morphism 
easy check shows id dom ex prop shown coding pairs corresponds existence retraction gen general concrete category domains retraction 

corresponds ective coding pairing suitable state correspondence case gen proposition 

ective coding pairs gen gen lemma 
complete 



proof def complete prop 

show 
induction 



inductive hypothesis case proof induction general fact 

general fact 

general fact 


inductive hypothesis general fact 

third part lemma theor means ective coding pairs corollary factorizes proof follows lemma prop prove theor proof proof induction base steps inductive steps uses uses trivial trivial retraction 
see prop ective coding pairs gen lemma ffj hx yi ffj gen hx yi ffj gen gen gen gen gen corr gen similar case lemma prop numbered sets sheaves introducing gen canonical cartesian closed extension en topos presheaves en see sco 
yoneda embedding preserves limits partial function spaces theor free 
elaborate construction possible preserve structure colimits topos sheaves grothendieck topology details see joh section section 
approach mul de ne recursive topos en embedded fully faithfully embedding preserves limits nite colimits function spaces 
relation gen recursive topos investigated ros shown gen separated objects double negation topology 
characterization gen gen precisely de ne topos show gen separated objects suitable topology 
acceptable set total functions topology logical nature double negation topology see mul 
characterization gen gives lot information 
instance gen limits colimits function spaces 
relate internal logics gen set described hyl ros 
de ne topology gen prove canonical topology gen important note canonical topologies gen en dom see def may induce di erent toposes set total endofunctions toposes equivalent set total recursive functions 
de nition sieve ex included ideal generated ff jf rg proposition grothendieck topology gen proof 
topologically generating set see de nition objects dom 
maximum sieve 
morphism gen rg 
explicitly nd fin fg jg wg 
proof essential prop 
ex exist fin fg jg simplicity assume elements exist de ne functions undefined unde ned undefined unde ned undefined easy check ideal generated 
sieve 
proof straightforward left reader theorem canonical topology gen proof easy verify 
complete proof show sieve exists functor gen sheaf topology containing ideal generated ff jf rg 
assumption ex id ective morphism hand indexed family ff jf rg compatible dom topologically generating set general result topos theory see theorem ros theorem topos sh gen sheaves gen equivalent topos sh dom restriction dom ff dom sg general canonical topology dom write sh dom 
embedding see def gen dom op set factors 
full faithful embedding gen preserves limits function spaces 
far haven proved special gen get really useful information give topos theoretic characterization gen sub category introduce topology dom gen equivalent full sub category objects separated de nition sieve set equal img jf rg proposition grothendieck topology dom proof sieve dg included observation follows easily grothendieck topology 
theorem gen equivalent separated objects proof easy show separated generalized numbered set prove separated presheaf exist set functor isomorphic set functions dom 
morphism dom fa ag dom set theoretic function take functor fg ja 

clearly natural transformation show isomorphism prove 
consider cover dg dom separated equal show generalized numbered set ex fg jd dom ideal left reader proposition acceptable set total functions topology dom proof dom monoid sieve object dom just negation operation maps sieve sieve ff lj rg 
de nition double negation topology sieve assume constant function partial function unde ned function double negation topology dom fact 
ideas taken lm discussions hyland longo rosolini 
referees useful advice pointing various errors longo plotkin comments previous drafts 
bw barr wells 
toposes triples theories 
springer verlag 
car carboni 
bicategories partial maps 
universita di milano preprint 

curien 
partiality cartesian closedness toposes 
preprint 
dph di paola heller 
dominical categories 
journal symbolic logic 
ers ershov 
theorie der zeitschrift ur mathematische logik 
ers ershov 
maximal de ned functionals 
algebra logic 
ers ershov 
theorie der ii 
zeitschrift ur mathematische logik 
ers ershov 
model partial continuous functionals 
gandy hyland editors logic colloquium 
north holland 


partial algebras 
mathematica janos bolyai 
hyl hyland 
ective topos 
troelstra van dalen editors brouwer symposium 
north holland 
joh johnstone 
topos theory 
academic press 
kle kleene 
countable functionals 
heyting editor constructivity mathematics 
north holland 
lm longo moggi 
cartesian closed categories enumerations ective type structures 
kahn macqueen plotkin editors symposium semantics data types volume lecture notes computer science 
springer verlag 
lm longo moggi 
hereditary partial functionals recursion theory higher types 
journal symbolic logic 
lon longo 
hereditary partial functionals nite type preliminary note 
technical report urich 
ls lambek scott 
higher order categorical logic volume cambridge studies advanced mathematics 

mac maclane 
categories working mathematician 
springer verlag 
mcc mccarty 
realizability recursive mathematics 
phd thesis oxford 
mog moggi 
categories partial morphisms partial lambdacalculus 
proceedings workshop category theory computer programming guildford volume lecture notes computer science 
springer verlag 
mog moggi 
partial lambda calculus 
phd thesis edinburgh 
makkai reyes 
order categorical logic 
springer verlag 
mul 
generalized banach mazur functionals topos recursive sets 
pure appl 
alg 
normann 
recursion countable functionals volume lnm 
springer verlag 

logic categories partial functions applications 
mathematicae 
thesis 
plo plotkin 
denotational semantics partial functions 
lecture summer school 
rog rogers 
theory recursive functions ective computability 
mc hill 
ros rosolini 
continuity ectiveness topoi 
phd thesis oxford 
rr robinson rosolini 
categories partial maps 
dip 
di matematica universita di parma 
sco scott 
relating theories calculus 
hindley seldin editors curry essays logic lambda calculus formalisms 
academic press 
vis visser 
lambda calculus arithmetic 
curry essays logic lambda calculus formalisms 
academic press 
