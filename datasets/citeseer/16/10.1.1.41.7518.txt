highly scalable metasearch engine weiyi meng clement yu wu department computer science state university new binghamton binghamton ny phone fax email meng cs binghamton edu department eecs university illinois chicago chicago il world wide web expanding fast rate 
coverage web major search engines steadily decreasing despite effort index web pages 
worse search engines get larger higher percentages indexed information obsolete 
people having doubt scalability centralized search engine technology 
scalable alternative search web metasearch engine approach 
metasearch engine considered interface top multiple local search engines provide uniform access local search engines 
database selection main challenges building large scale metasearch engine 
problem efficiently accurately determine small number potentially useful local search engines invoke user query 
order enable accurate selection metadata reflect content search engine need collected 
propose highly scalable accurate search engine selection method 
method novel features 
metadata representing contents search engines organized single integrated representation search engine existing approaches 
size metadata scale virtually unlimited number local search engines 
second selection method theory ranking search engines optimally 
experimental results indicate new method effective 
keywords distributed collections scalability ir systems 
highly scalable metasearch engine world wide web expanding fast rate 
coverage web major search engines steadily decreasing despite effort index web pages 
worse search engines get larger higher percentages indexed information obsolete 
people having doubt scalability centralized search engine technology 
scalable alternative search web metasearch engine approach 
metasearch engine considered interface top multiple local search engines provide uniform access local search engines 
database selection main challenges building large scale metasearch engine 
problem efficiently accurately determine small number potentially useful local search engines invoke user query 
order enable accurate selection metadata reflect content search engine need collected 
propose highly scalable accurate search engine selection method 
method novel features 
metadata representing contents search engines organized single integrated representation search engine existing approaches 
size metadata scale virtually unlimited number local search engines 
second selection method theory ranking search engines optimally 
experimental results indicate new method effective 
keywords distributed collections scalability ir systems 
world wide web vast information resource years 
study indicates approximately pages web 
finding desired data popular ways web utilized 
search engines created facilitate retrieval web pages web 
search engine text database defined set documents searched search engine 
search engine database interchangeably 
usually index documents database created advance 
term represents content word combination usually adjacent content words index identify documents contain term quickly 
consider search engines support vector queries queries represented set terms boolean operators 
major search engines web example altavista hotbot northernlight attempting index entire web provide search engine web pages 
unfortunately losing battle 
coverages web decreasing years web growing faster speed indexing capabilities search engines 
addition web pages indexed programs robots spiders searched local search engine 
worse major search engines get larger higher percentages indexed information obsolete 
people having doubt scalability centralized search engine technology search entire web 
hand tens thousands special purpose local search engines focus documents confined domains documents organization specific subject area 
organizations installing search engines everyday 
reason believe special purpose search engines provide better coverage web major search engines combined 
local search engine covers small portion web easier keep indexing data date 
situation provides alternative approach providing search capability entire web 
metasearch engine approach 
metasearch engine just interface top local search engines 
maintain index web pages provide uniform access local search engines 
metasearch engine receives user query passes query necessary reformatting appropriate local search engines collects reorganizes results local search engines 
metasearch engine top local search engines possible way search entire web 
metasearch engine approach searching web advantages single search engine approach serious challenges implement 
main challenges database selection problem identify user query local search engines contain useful documents query 
objective performing database selection improve efficiency sending query potentially useful search engines network traffic cost searching useless databases reduced 
collection fusion problem retrieve documents selected databases merge documents objective listing useful documents ahead useless documents 
various heterogeneities multiple search engines difficult achieve fusion 
metasearch engine retrieval effectiveness close documents single database minimizing access cost 
substantial body research addressing different aspects building effective efficient metasearch engine accumulated years :10.1.1.31.1173
existing systems consider small scale metasearch engines local search engines 
approaches scale tens thousands local search engines time achieve effectiveness 
reason follows 
existing methods order perform database selection detailed representative database needs stored metasearch engine indicate contents database 
detailed information means pieces statistical information term appearing database 
contrast rough information approaches database representatives manually generated independent specific documents database 
detailed representative database may roughly size database 
tens thousands local databases representatives may total size times typical database 
whitepaper prepared working group resource discovery database selection asserted potentially repositories web today called development highly scalable methods resource discovery 
propose new approach perform database selection collection fusion 
method uses framework developed ranking databases optimally similarity similar document local database see section information 
main contribution development experiment new technique rank databases 
technique novel database representative features 
highly scalable 
fact scale virtually unlimited number local databases 
second integrated representative local databases contrast representative local database traditional approaches 
third single term queries occur frequently internet environment technique guarantees correct selection databases 
experimental results indicate new method scalable quite accurate 
believe method represents major step extremely large scale metasearch engines 
rest organized follows 
section review framework performing database selection collection fusion similarity similar document database 
section new technique framework 
experimental results section 
section discuss ideas incorporate method techniques improve retrieval relevant documents 
conclude section 
framework database selection collection fusion query simply set words submitted user 
transformed vector terms weights term essentially content word dimension vector number distinct terms 
term appears query component query vector corresponding term term weight positive absent corresponding term weight zero 
weight term usually depends number occurrences term query relative total number occurrences terms query 
term frequency weight 
weight term may depend number documents having term relative total number documents database 
weight term information called inverse document frequency weight 
document similarly transformed vector weights 
similarity query document measured dot product respective vectors 
dot product divided product norms vectors norm vector xn pp normalize similarity 
similarity function normalization known cosine function 
sake concreteness shall version cosine function query uses product inverse document frequency weight term frequency weight document uses term frequency weight 
inverse document frequency weight term computed global document frequency term number documents containing term databases computed similarities global similarities 
section review framework database selection collection fusion 
framework introduced 
suppose user interested retrieving similar documents query databases dn framework summarized definition optimal database ranking theorem necessary sufficient condition ranking databases optimally algorithm integrated database selection collection fusion ranked databases 
definition set databases said optimally ranked order dn respect query positive integer exists contain similar documents contains similar documents 
intuitively ordering optimal similar documents query desired sufficient examine databases 
note ordering databases depends query ease presentation shall assume similarities documents query distinct set similar documents query unique 
proposition databases dn optimally ranked order dn respect query dn global similarity similar document database query note proposition holds similarity function function assigns degrees relevance documents respect query 
example function assigns degree relevance document similarity query importance due link structure web environment see section optimal arrangement databases descending order relevant document database remains true 
example consider databases suppose global similarities similar documents databases query respectively 
databases ranked order query 
optimal order databases algorithm known developed perform database selection collection fusion 
algorithm sketched follows 
suppose databases selected initially 
selected search engines returns actual global similarity similar document metasearch engine computes minimum values 
search engines returns metasearch engine documents global similarities greater equal minimum value 
note documents search engine need returned metasearch engine 
documents returned search engines sorted descending order similarity documents returned user 
database optimal order selected process repeated total documents returned user 
note algorithm collection fusion actual global similarities documents 
shown databases ranked optimally algorithm guarantee retrieval desired documents 
order apply framework practice problems solved 
obtain documents local database global similarities query greater equal threshold 
note local search engines retrieve documents local similarity functions term statistics may result local similarity document different global similarity document 
problem addressed discussed 
second problem estimate global similarity similar document respect query local database proposition applied 
estimation method problem proposed 
method needs separate database representative local database representative contains pieces statistical information term local database 
addition estimation method exponential time complexity terms number terms query 
result method poor scalability terms storage computation 
new method proposed estimate global similarity similar document 
method uses types database representatives 
global representative databases stores global document frequency term databases 
separate representative database stores pieces statistical information term database 
furthermore new estimation method time complexity linear terms number terms query 
method scale terms computation terms storage space 
section propose new estimation method extremely scalable computationally storage wise 
new method ranking databases section propose new method database selection framework described section 
key step framework rank databases global similarity similar document database shown ranking optimal 
previous methods tried estimate similarity similar document database directly 
substantial amount information database needed perform estimation accurately 
new method takes different approach 
similarity similar document rank databases rank databases different measure 
new method appealing features 
measure obtained information estimating similarity similar document 
novel integrated representative obtaining measures highly scalable 
second ranking obtained new measure matches similarity similar document indicated experimental results reported section 
new ranking measure consider term local database maximum normalized weight average normalized weight respectively 
defined follows 
dn document weight term jdj normalized weight jdj norm length maximum normalized weights documents database max jdj similarly simply average normalized weights documents including documents having term global inverse document frequency weight consider user query number times term appears query modified multiplying corresponding global inverse document weight 
global similarity similar document database respect estimated max jq intuition having estimate similar document database maximum normalized weight ith query term yields half expression braces 
query terms document takes average normalized value 
yields second half 
maximum taken similar document may maximum normalized weight query terms 
normalization query norm jq yields value equal 
shall drop jq ease presentation 
impact relative similarity values similar documents different databases changed 
large number experiments observed maximum normalized weight term typically larger average normalized weight term computed documents including contain term 
feature implies formula query terms term frequency weight reasonable assumption typical query term appears number times dominate especially number terms query small typically true internet 
words database going ranked high going large similarity similar document respect query largely determined value max discussion summarized 
term database am adjusted maximum normalized weight term terms query define ranking score rs short database respect follows rs max ik fq am ranking score defined new measure rank databases 
note formula linear time complexity terms number terms query 
rest attempt establish theory experimental results ranking databases ranking scores short queries typical internet queries ranking close optimal ranking similarity similar document database 
integrated representative databases order compute ranking score database respect query adjusted maximum normalized weight term database needs stored 
follow example existing approaches create separate database representative database stores metasearch engine 
case representative database contain terms adjusted maximum normalized weight term query received metasearch engine query information representative database compute ranking score database 
databases ranked algorithm reviewed section select databases retrieve documents 
database representative stores piece information term scalable existing database selection approaches terms storage space required :10.1.1.31.1173
metasearch engines hundreds local databases probably afford separate representative database store metasearch engine 
goal create metasearch engine may hundreds thousands local search engines entire web potentially searched metasearch engine feasible separate representative search engine 
solution problem create integrated representative databases 
positive integer term lam contain largest am 
words lam contains largest adjusted maximum normalized weights local databases 
note lam may contain elements possible fewer databases integrated representative propose local databases follows 
term global database global database logical database contains documents local databases exist physically set pairs format am kept integrated representative am lam identifier database having am term largest adjusted maximum normalized weights site ids stored 
way determine value follows 
metasearch engine designed retrieve best documents query envision small users interested seeing documents set experiments reported section 
integrated representative scale virtually unlimited number local databases 
reason follows 
rough bound number distinct terms say millions 
suppose regardless number local databases participating metasearch engine total number distinct terms exceed term small constant number quantities largest adjusted maximum normalized weights database identifiers stored representative 
total size representative bounded bytes assuming term occupies bytes average quantity occupies bytes 
gb capacity current computer 
intuitively integrated representative number pieces information stored term constant factor independent number databases 
contrast non integrated representatives number pieces information stored term constant factor number databases 
integrated representative scalable 
intuitively database selection method effective desired documents contained relatively small number databases selected method 
section conduct experiments evaluate effectiveness method rigorous measures 
proposition shows single term query constitutes internet queries local databases selected integrated representative guaranteed contain similar documents databases respect query proposition single term query number documents desired user equal number adjusted maximum normalized weights stored integrated representative query term similar documents query contained local databases adjusted maximum normalized weights query term stored integrated representative 
proof note maximum normalized weight single query term database similarity similar document database respect query 
means single term query rank databases descending order maximum normalized weights term databases ranked optimally query 
note order maximum normalized weights identical adjusted maximum normalized weights types weights differ weight term 
single term weight constant documents 
adjusted maximum normalized weights stored integrated representative query term largest corresponding databases ranked ahead databases 
similar documents respect query contained databases 
databases contain similar documents query 
please note weights useful multiple terms query 
experimental results section report experimental results 
databases experiments 
databases obtained trec collections created nist national institute standards technology 
collections cr congressional record rd congress fr federal register ft articles financial times fbis articles foreign broadcast information service lat randomly selected articles los angeles times 
collections partitioned databases various sizes ranging documents mb documents mb 
total documents gb size databases 
slightly distinct terms databases 
internet queries real users experiments 
queries collected stanford university evaluating performance ggloss database selection method 
queries experiments queries having terms queries available 
queries queries terms stopwords removed queries single term queries queries terms queries terms queries terms queries terms queries terms 
query length distribution test queries matches queries submitted excite analyzed 
observation internet queries terms 
trec collections come queries 
reason trec queries average length longer typical internet queries 
performance measures method search similar documents set databases follows 
measures indicate effectiveness quality retrieval measures reflect efficiency retrieval 

percentage correctly identified databases ratio number databases contain similar documents searched method number databases contain similar documents 
percentage denoted cor iden db 

percentage correctly identified documents ratio number documents retrieved similar documents percentage denoted cor iden doc 

database search effort ratio number databases searched algorithm number databases contain similar documents 
ratio denoted db effort 
ratio usually 

document search effort ratio number documents received metasearch engine measure transmission cost 
ratio denoted doc effort 
set queries measures reported averaged queries set contain real term 
experimented parameter fi 
original algorithm terminates documents returned metasearch engine local search engines see section 
fi control terminate algorithm 
specifically fi chosen greater number desired documents 
example fi algorithm documents returned metasearch engine local search engines 
documents similar documents user 
experimenting different fi see desired documents retrieved larger fi values trade offs 
experimental results summarized figures 
cor iden db fi fi fi result cor iden db cor iden doc fi fi fi result cor iden doc experimental results summarized follows 

fi varies average correct databases identified correct documents identified number databases searched number databases containing desired documents number documents retrieved desired number documents 
performance tends improve measures increases 
appreciate performance method consider case 
user db effort fi fi fi result db effort doc effort fi fi fi result doc effort wants find similar documents documents stored databases query 
method searches approximately databases transmits approximately documents metasearch engine query average 
desired documents method 

fi increases correct databases documents identified expense searching databases retrieving documents 
specifically comparing performance fi fi approximately percentage correct databases documents identified average searching approximately databases retrieving approximately documents 
fi approximately percentage correct databases documents identified average searching approximately databases retrieving approximately documents 
applications finding high percentage correct documents essential searching small number additional databases retrieving small number documents may worthwhile 

observe db effort 
means average number databases searched number databases containing similar documents 
reason phenomenon explained follows 
note databases ranked ranking scores see formula 
ranking may imperfect databases may ranked optimally 
result non desired database contain similar documents say may ranked ahead desired database 
similar document actual global similarity algorithm encountered documents previously examined databases including similarities returned engine 
desired document similarity low result possible find documents previously examined databases similarities causes retrieval algorithm terminate prematurely searching databases including desired databases ranked 
desired databases ranked ahead databases db effort 
observe fi doc effort 
due fact number queries documents entire collection positive similarities queries 
general query fi documents positive similarities searched databases doc effort 
experimental results indicate database selection document retrieval method achieve close ideal performance documents site database 
experimental results distributed query processing reported 
methods clustering documents globally locally 
internet environment number documents large changes 
clear feasible cluster huge data sets re cluster adjust numerous changes 
documents clustered retrieval effectiveness database selection algorithms shown 
database selection algorithm document selection algorithm require clustering documents 
improving retrieval relevant documents database selection collection fusion method performed retrieving similar documents 
highly similar document query may useful relevant user 
especially true queries short english words multiple meanings short queries provide context words determine meanings terms 
reasons gap similarity document actual usefulness document 
example similarity function may deficiencies 
section discuss ideas incorporate techniques basic method improve retrieval relevant documents 
section discuss method utilizes importance documents linkages documents improve retrieval effectiveness 
section sketch method incorporates database categorization metasearch engine 
note goal discuss methods detail 
objective illustrate basic database selection collection fusion method incorporated techniques improve retrieval effectiveness 
incorporate document importance documents world wide web linked linkages provide information degrees significance :10.1.1.31.1768
method proposed measure rank importance document linkages documents 
basic idea important document linked documents important documents 
example user query ibm user seeks home page ibm documents containing ibm pointed documents considered important 
please see method computing document importance 
assume importance document linkage information computed available 
method utilize document importance information help solve database selection problem proposed 
basic idea sketched 
dr sim denote degree relevance document query similarity respectively 
function simply traditional similarity function cosine function incorporates similarity function document importance information 
imp represent importance document normalized denoting important denoting important 
constant 
dr defined weighted average sim imp follows 
dr sim gamma imp sim order avoid retrieval important documents documents high importance values unrelated query degree relevance document greater zero similarity query greater zero 
indicated user query ibm documents containing ibm having similarity query home page ibm largest degree relevance importance high due linkages documents 
section mentioned proposition applicable similarity relevance function 
goal find documents largest degrees relevance re define optimal ranking databases follows set databases dn said optimally ranked order dn respect query positive integer exists contain relevant documents contains relevant similar documents 
proposition modified proposition 
proposition databases dn optimally ranked order dn respect query mdr mdr mdr dn mdr degree relevance relevant document database query proof proposition description method estimating degree relevance relevant document database repeated 
reported method yields retrieval effectiveness close documents placed site cor iden doc ranges 
incorporate database categorization mentioned earlier reason internet queries low retrieval effectiveness internet queries usually short short queries provide context words determine meanings terms 
technique address problem assign queries databases appropriate topics concepts limit search databases respect query databases share concepts assigned query 
idea utilize concepts context help disambiguate meanings terms databases queries result leading improvement retrieving relevant documents 
researchers studied idea assigning databases concepts clustering documents new databases improve retrieval effectiveness metasearch engine distributed document retrieval environment 
positive experimental results reported 
methods proposed assigning databases concepts concept hierarchy built category hierarchy yahoo 
methods assign databases automatically 
concept hierarchy associated databases follows 
user submits query metasearch engine desired documents user browses concept hierarchy starting root browsing yahoo category hierarchy 
user browsing hierarchy identifies set concepts best matches needs 
process accomplishes assignment user query appropriate concepts hierarchy 
user submits query metasearch engine 
metasearch engine performs database selection steps 
step databases assigned concepts identified user selected 
second step selection performed method described sections 
concluding remarks proposed new highly scalable method solve database selection problem number local databases metasearch engine large 
single term queries method guarantees desired documents retrieved 
experiments conducted show method effective typical short internet queries 
illustrated database selection collection fusion method incorporated techniques improve retrieval effectiveness 
plan continue research directions 
improve accuracy method 
study indicates incorporating certain dependencies adjacent query terms accuracy improved 
research issue incorporate dependencies integrated database representative 
extend method works short internet queries longer queries 
supported part nsf iis iis ccr ccr 
gravano garcia molina providing set internet queries experiments 
abdulla liu saad fox 
characterizing world wide web queries 
tr virginia polytechnic institute state university 

probabilistic model distributed information retrieval 
acm sigir conference pp 

brin page 
anatomy large scale hypertextual web search engine 
www conference 
callan lu 
croft 
searching distributed collections inference networks 
acm sigir pp 

callan connell du 
automatic discovery language models text databases 
acm sigmod conference 
cutler shih meng 
structures html documents improve retrieval 
usenix symposium internet technologies systems monterey california 
dreilinger howe 
experiences selecting search engines metasearch 
acm tois july pp 

dumais 
latent semantic indexing lsi trec 
trec conference pp 

fan gauch 
adaptive agents information gathering multiple distributed information sources 
aaai symposium intelligent agents cyberspace stanford university march 
furnas deerwester dumais landauer harshman streeter lochbaum 
information retrieval singular value decomposition model latent semantic structure 
acm sigir conference 
gravano chang garcia molina paepcke 
starts stanford proposal internet meta searching 
acm sigmod tucson may pp 

gravano garcia molina 
generalizing gloss vector space databases broker hierarchies 
vldb 
gravano garcia molina 
merging ranks heterogeneous internet sources 
large data bases conference 
jansen spink bateman saracevic 
real life information retrieval study user queries web 
acm sigir forum 
kahle 
information system corporate users wide area information servers 
technical report tmc thinking machine april 
kirsch 
internet search infoseek experiences searching internet 
acm sigir forum pp 

kleinberg 
authoritative sources hyperlinked environment 
th acm siam symposium discrete algorithms 
koster aliweb archie indexing web 
computer networks isdn systems pp 
www com public aliweb search doc form html 
kowalski 
information retrieval systems theory implementation 
kluwer academic publishers 
kwok lewis trec ad hoc routing retrieval thresholding experiments 
trec gaithersburg 
lawrence lee giles 
searching world wide web 
science april pp 

lawrence lee giles 
accessibility information web 
nature july pp 

liu yu meng wu 
statistical method estimating usefulness text databases 
ieee transactions knowledge data engineering appear 
manber 
search broker 
usenix symposium internet technologies systems monterey california pp 

meng liu yu wang chang 
determine text databases search internet 
international conference large data bases new york city august pp 

meng liu yu wu 
estimating usefulness search engines 
ieee international conference data engineering icde sydney australia march 
meng yu liu 
detection heterogeneities multiple text database environment 
fourth ifcis conference cooperative information systems coopis edinburgh scotland september 
page brin motwani terry winograd 
pagerank citation ranking bring order web 
technical report stanford university 
resource discovery globally distributed digital library 
working group report www iei pi cnr delos nsf htm salton mcgill modern information retrieval 
new york hill 
salton automatic text processing transformation analysis retrieval information computer 
addison wesley 
selberg etzioni 
metacrawler architecture resource aggregation web 
ieee expert 
singhal buckley 
mitra 
pivoted document length normalization 
acm sigir conference zurich 
voorhees gupta johnson laird 
collection fusion problem 
trec conference gaithersburg 
wang meng yu 
concept hierarchy text database categorization metasearch engine 
manuscript preparation 

xu croft 
cluster language models distributed retrieval acm sigir conference 
yu liu wu meng 
finding similar documents multiple text databases 
ieee conf 
adv 
dig 
lib 
adl baltimore maryland may 
yu liu meng wu 
methodology retrieving text documents multiple databases 
technical report 
yu meng 
principles database query processing advanced applications 
morgan kaufmann publishers san francisco 
yu meng liu wu 
efficient effective metasearch large number text databases 
eighth acm international conference information knowledge management cikm kansas city november 
yu meng liu wu 
efficient effective metasearch text databases incorporating linkages documents 
technical report 
lee 
server ranking distributed text resource systems internet 
th int conf 
db systems adv 
appli 
dasfaa melbourne australia april pp 


