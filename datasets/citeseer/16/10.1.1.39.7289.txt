conductor framework distributed adaptation tm tm mark peter reiher gerald popek computer science department university california los angeles reiher popek fmg cs ucla edu tm tm network applications provide poor service network capabilities minimum level assumed developer 
wider array network technologies available users increasingly frustrated lack flexibility applications 
services provided application tunable level appropriate capabilities associated costs underlying network 
researchers shown proxy agents tailor communication pattern application characteristics network 
dynamic deployment multiple adapting agents various points network extend benefits 
conductor demonstrates approach selecting appropriate set adaptive agents plan deployment 
conductor allows arbitrary adaptations performed data path reducing reliability system 

increasingly large percentage applications network providing service user communicating network servers 
application designers typically assumptions minimum level service required network failing consider mobile users encounter varying degrees connectivity 
link network may different level bandwidth latency jitter reliability security 
services provided level monetary cost power consumption 
application network curtailed network characteristics unfavorable may provide little useful service user provide service cost greater worth user 
trying achieve level service regardless properties network application network controlled resulting degraded level service 
tm partially supported defense advanced research projects agency contract dabt 
gerald popek associated platinum technology degraded service may require compromise timeliness quality completeness reliability user data 
appropriate type level service degradation may vary 
instance consider distillation color map quick download 
full resolution black white map allow user read street names 
hand golf courses marked green color may important resolution 
selection appropriate compromise dynamic controllable depending user application task hand 
variety adaptations possible achieve balance cost benefit user 
common techniques include compression encryption distillation filtering prioritization pre fetching caching buffering 
addition specific properties protocols altered 
instance data transfer normally uses small individually acknowledged messages augmented include sliding window frequent 
advances network technologies increase need adaptation 
faster networks bring new bandwidth hungry applications fast wires won reach 
mobile users particular disadvantage wireless networks continue slower secure power wired networks 
gap widens best worst available connectivity increasing need applications adapt services accordingly 
time networks increasingly heterogeneous complex 
techniques adaptation typically focused mile assuming single host connects connected network single poor link 
successes systems shown gracefully degraded services desirable 
connectivity complex increasing instances home computer networks inter building wireless links wireless workgroups 
success requires general solution deploying adaptation 
conductor piece middleware allows operating system provide adaptation service applications 
includes framework set protocols deploying adaptor modules network 
conductor fully transparent applications allowing easy addition new applications new network technologies 
includes distributed planning algorithm determine combination adaptors appropriate deployed 
conductor employs unique reliability mechanism allows data stream arbitrarily adapted multiple points compromising reliability 

design principles design principles allow conductor apply adaptation wide variety circumstances 
adaptation systems adopt principles conductor unique adheres principles 
arbitrary adaptations adaptors may arbitrarily change data stream 
particular adaptor may add delete modify portions data stream may maintain state 
property difficult detect recover adaptor failure 
proposed approach provides resilience failures additive adaptations 
example forward error correction codes added link particularly unreliable 
adaptation additive nature adaptor failure removes possible benefit 
conductor reliability mechanism removes restriction allowing type adaptor deployed 
transparent applications required aware control adaptation 
adaptability built directly applications allowing applications alter behavior interface network available connectivity 
applications provide adaptation related control directly user 
building adaptability directly applications limits list tolerable network characteristics anticipated programmer 
conductor provides application transparent adaptation operating application level protocols external applications 
final delivery client server data stream conform expected protocol 
say adaptations user transparent 
example frame rate video stream cut half prior transmission recovered frame duplication violating protocol expected application 
adaptation poses new application requirements 
quality user experience affected user control adaptation 
control provided external application 
application transparency allows adaptation applied shelf applications frees developers custom applications complexities adaptation 
addition new network technologies user requirements develop application changes required 
effect transparency separates adaptation technology application technology 
conductor provides transparency transparent adding optional api applications influence selection operation adaptations 
api allows applications tightly integrate adaptation allowing direct control adaptation greater ability represent different service levels user 
composable adaptors specialized containing single algorithm function allowing adaptor composition 
types adaptations suggested section essentially orthogonal 
maintaining separation encryption compression algorithms example allow easy deployment new algorithms combination existing adaptations support different combinations security compression levels required 
addition important separate protocol specific adaptations mpeg frame dropping adaptations lempel ziv compression 
number adaptors required multiplicative number protocols number possible network conditions 
adaptors may require partial ordering modularized adaptors require careful deployment 
instance compression normally occur encryption 
distributed adaptation effective deployed network 
consider network 
clients wish perform database queries server assume isdn link connects nodes clients employ pre fetching minimize latency responses pre fetching seeks spare bandwidth channel nodes fulfill predicted need effectively provided node node determine pre fetch detect isdn link free busy actual request result pre fetch may cached node sample network requiring distributed adaptation 
example node cellular phone providing demand connectivity nodes personal area network 
clients wish fetch web pages periodically request stock quotes cellular link 
cellular link expensive link established web requests user may wish provide stock quotes cache queue requests pending 
node perform desired adaptation 
examples demonstrate cases adaptations performed client occur node network 
server may optimal choice 
server may clients expected resources support large number adaptations 
addition server may wish accept arbitrary code despite encapsulation arbitrary host 
clients servers may wish offload adaptation appropriate nodes network 
multi node cases multiple nodes may required adaptation 
consider network 
node prioritize client requests transmission cellular link 
web pages returned may contain large images requiring compression adaptation node decompression occur node requesting client 
case multiple nodes required adaptation 
time locations adaptation required fixed 
consider network shown link poor bandwidth 
case compression best applied node node avoiding multiple compression decompression operations 
set multiple dynamically selected nodes may required provide desired effect 

conductor design conductor allows connection oriented channel client server transparently adapted 
adaptation takes place operating data protocol stream 
application transparency achieved ensuring data stream visible endpoint conforms protocol expected application 
say stream received endpoint identical stream transmitted endpoint 
adaptors permitted create delete modify delay stream content long appropriate protocol application 
necessarily preserved depends adaptations involved 
addition fundamental characteristic protocol inappropriate network characteristics entirely new protocol created 
pairs adaptors employed convert original protocol new protocol back providing transparent protocol conversion 
conversions nested combined sequentially constrained ways 
adaptors freely deployed endpoint nodes nodes network 
conductor primarily runtime environment network nodes allows adaptive agents deployed data path 
goal conductor provides facilities interception connections node network monitoring adaptation planning reliability support deploying distributed adaptive agents 
conductor allows adaptations performed conductor enabled node path client server 
conductor framework client server nodes nodes network 
conductor assumes nodes supporting adaptation sprinkled network 
ideally conductor deployed special hardware routers frequently hold complete information network status 
necessary routers conductor enabled router traffic affected conductor 
nodes routers conductor enabled 
node willing participate planning algorithms volunteer adapt particular data streams 
minimum processing storage requirements assumed conductor nodes 
available resources taken account determining adaptors deployed 
advantageous administrators place additional computing storage resources key conductor nodes 
conductor enabled nodes include observation component existing technologies monitor availability local node resources spare cpu cycles conditions capabilities adjacent network links 
connection data path divided sub connections pair nodes actively adapting data stream 
adaptors deployed nodes 

adaptors allow adaptor modules deployed dynamically written java 
conductor enabled node sample network requiring dynamic multi node adaptation 
store adaptor modules deployed data stream passes node 
adaptor input protocol output protocol performs function unidirectional data stream 
adaptors deployed pairs adaptor converting protocol protocol converting back protocol adaptor pairs loss delivering unchanged data output lossy delivering different data protocol 
adaptors input output protocol deployed unpaired 
adaptor module includes self describing metainformation includes components insure proper deployment 
components indicate protocol adaptor operate node resources required adaptor measured observation component 
third component specifies applicability adaptor network 
link characteristic monitored observation component bandwidth security level jitter input level output function specified describe pre conditions post conditions deploying adaptor 
instance encryptor specify expects low security level input provides higher security level output 
paired adaptors final output function initial input value 
case return security level level measured input paired encryptor 
final meta descriptor component specifies set interoperability parameters restrict adaptor combination 
parameters specify expected input level output function indicating pre post conditions 
types interoperability parameters allowed standard extended 
standard parameters describe protocol independent characteristics data stream specified adaptors 
instance compression adaptor require certain amount compressibility deployed result compressible output 
encryption adaptor compressibility requirement create nearly incompressible output 
specification restricts compression occur encryption 
extended parameters analogous optional express protocol dependent data characteristics frame rate 
adaptors composition requires adaptor specifies acceptable input levels extended parameters produced neighbor 
adaptors exception rule 
planning new client server connection forms conductor provide cost benefit compromise user selecting deploying appropriate set adaptors 
conductor enabled nodes network path client server form planning path 
nodes involved planning activities 
planning accomplished allowing conductor enabled node locally optimal plan deploying adaptors alleviate deficiencies local links 
approach results low planning latency produce adaptation plan globally optimal 
reconsider network 
dashed lines represent low bandwidth links local planning result pairs compression decompression adaptors single pair spanning links 
gossiping nodes identify redundancy deployed adaptors replaced 
adaptor deployment removal heavyweight operation preferable pay higher front cost globally optimized plan 
adaptors cache data optimistically generate data buffer data level service may provided despite partition client server 
require global planning 
conductor employs partition planning 
network partition partition wide plan generated 
partition wide planning relevant information gathered single node plan generated distributed nodes adaptors deployed data begins flow adapting nodes 
network conditions deviate input specification deployed adaptor replanning occurs possibly resulting replacement addition adaptor modules 
information gathered planning potentially large primarily connection independent somewhat static 
addition network routing tends follow regular patterns planning paths tend overlap 
caching planning information received node path need transmission planning overhead reduced 
information gathered planning includes fixed set parameters link node user requirements specified terms link parameters data characteristics described adaptor interoperability parameters meta descriptor location available adaptor modules 
notice node resource requirements contained adaptor meta descriptor constrains nodes placed 
adaptor interoperability parameters constrain combinations adaptors permitted 
user requirements determine adaptors desirable needed 
planning information gathered single node variety plan formulation algorithms plugged system 
consider greedy algorithm iteration considers largest mismatch link characteristics user requirements 
algorithm select adaptor pair alters link characteristic closely match user requirements 
algorithm pro constrained new selections interoperability parameters previously selected adaptors 
clearly algorithm produce nonoptimal plans 
alternative algorithm build tree possible selections evaluate leaf nodes plans adaptor deployment costs adaptation overhead degree plan matches user requirements 
algorithm expensive 
currently conductor employs simple cheap planning algorithm exploring algorithms 
reliability reliable data stream provides exactly delivery semantics 
adaptors arbitrarily change data transit data delivered may arbitrarily different data transmitted points connection path 
difficult define exactly semantics presence adaptation 
adaptor proxy node link fail comparison data received downstream data sent upstream necessarily indicate appropriate point retransmission adaptors may paired maintain state loss adaptor module may require addition deletion adaptor modules restore symmetry correct composition 
support adaptor loss lead data loss 
conductor employs mechanisms allow proper failure recovery semantic segmentation protocol hierarchies 
systems conductor uses segments unit retransmission 
typically segments necessarily immutable transit 
conductor extends model allowing transit adaptation 
segment conductor contains semantically meaningful portion data 
example video stream segment contain single frame 
adaptor may choose turn color frame black white frame modifying data segment preserving semantic meaning 
segment unit retransmission frame received exactly format 
segmentation occurs dynamically properties data adaptations 
initially data stream logically composed single byte segments 
preserve semantic retransmission property adaptor required contain data stream modification segment 
desired modification cross segment boundaries adaptor combines adjacent segments single segment 
new segment represent semantic meaning contained original segments 
new segment labeled way indicates composition occurred 
failure recovery accomplished point failure canceling partially transmitted segment requesting retransmission segment 
version segment composed segments retransmission 
data loss prevented segmentation conductor preserve adaptor pairing 
consider adaptor pairs 
adaptors bc cb paired converting protocol new protocol bc fails replaced cb removed 
internal state may lost failed adaptor bc general replaced 
cb removed 
addition bc fails data approaching cb converted back protocol retransmission occurs 
failure occurs conductor able determine adaptors remove 
planning activities localized network partitions node may global knowledge deployed adaptors 
conductor associates protocol hierarchy link see indicating hierarchy adaptations performed achieve current protocol 
link node adaptor failure occurs data path spliced back 
new protocol hierarchy link determined greatest common ancestry hierarchies upstream downstream failure 
adaptors side failure conform new protocol hierarchy removed 
notice adaptors composed failure outer adaptor require inner adaptors removed preserve proper composition 

development status conductor primary mechanisms algorithms fully designed 
development conductor runtime environment linux underway 
currently conductor able intercept tcp connections form planning path conductor enabled nodes perform simplified plan formulation deploy simple adaptors data path adapt data stream 
expecting complete prototype including support sophisticated plan formulation reliability 

related variety adaptive techniques explored various systems 
systems loosely divided categories 
application oriented 
systems provide set programming tools aid applications adapting ab ba bc cb protocol protocol protocol protocol protocol hierarchies 
changing network conditions 
odyssey provides feedback application network conditions allows application request different levels data fidelity 
rover toolkit allows applications subdivided placing functionality side low quality link 
allowing applications smarter network concerns systems allow application specific tradeoffs network 
systems require programmers consider variety environments application encounter types service compromises users accept 
proxy oriented 
project great success transformation aggregation caching customization tacc architecture construct adaptive proxies 
transcend proxy top gun system demonstrated real adaptation provide users cost quality compromise 
tacc allows proxy services composed worker modules execute compute cluster 
columbia university researchers constructed generalpurpose proxy framework allows dynamic loading adaptor modules proxy node giving greater control users 
systems focus mile issues adapting data connected proxy node transmission low quality link 
result systems currently limited single proxy service connection provisions distribution adaptations resistance proxy failure 
protocol oriented 
researchers focused adapting protocols adaptation transparent network function 
protocol allow multiple booster objects composed dynamically distributed data path augmenting transmission protocol 
resilience adaptor failure system provided case additive operations leave initial data stream intact 
type limited types adaptations provide 
different approach transformer tunnels project provide link adaptation allowing pairs nodes create adaptive tunnels 
data flowing tunnel similarly adapted 
tunnels administratively deployed low quality network elements exist 
approach extremely efficient provides little flexibility responsiveness requirements individual users 
conductor benefited lessons systems combines best properties 
emerging research active networking may provide direction conductor 
active networks allow programs attached individual packets deployed network switches 
active network code frequently lighter weight typical adaptation envisioned conductor techniques developed conductor may prove useful active networks 

networks require flexible adaptation technology allowing applications gracefully degrade services 
conductor allows operating system provide protocol adaptation transparent service 
conductor provides general mechanism select dynamically deploy combinations adaptive agents multiple points network 
addition conductor maintains resilience failure allowing arbitrary adaptations 
properties crucial providing exact cost benefit balance desired user complex network 

jaap naghshineh joh inouye warren allen bluetooth vision goals architecture mobile computing communications review oct 
pradeep badrinath providing support protocol adaptation mobile wireless networks rutgers university department computer science technical report dcs tr july 
noble satyanarayanan agile adaptation mobility proceedings th acm symposium operating systems principles st malo france oct 
anthony joseph joshua tauber frans building reliable mobile aware applications rover toolkit proceedings second acm international conference mobile computing networking mobicom nov 
armando fox steven gribble chawathe eric brewer adapting network client variations proxies lessons perspectives ieee personal communications sept 
bruce dan duchamp general purpose proxy filtering mechanism applied mobile environment proceedings annual acm ieee international conference mobile computing networking mobicom oct pp 

mcauley smith marcus raleigh protocol ieee jsac special issue protocol architectures st apr 
pradeep badrinath transformer tunnels framework providing route specific adaptations proceedings usenix annual technical conference new orleans louisiana june 
david tennenhouse jonathan smith david david wetherall gary survey active network research ieee communications magazine jan 
