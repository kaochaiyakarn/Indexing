structured numbers 
properties hierarchy operations binary trees 
vincent blondel february introduce hierarchy operations finite infinite binary trees 
operations obtained successive repetition initial operation 
operations generalizations operations addition multiplication exponentiation positive integers 
product positive integers defined sum factors equal bth exponent denoted similarly defined product factors equal process getting new operations repeating old ones ends exponentiation operation associative 
definition factors ambiguous example 
right hand side defined number factors order operations performed specified 
way doing ask second operand carry quantitative information number times repeated structured information order operations performed 
binary trees naturally designated object convey structured information 
number external nodes leaves binary tree specify number factors structure tree specify order operations performed 
define countably internal operations binary trees 
operation denote obtained forming binary tree left right subtrees equal operands 
operation associative 
second operation defined follows binary trees construct binary tree repeating operation tree structure dictated way define operation repeating operation repeating eventually obtain countably internal operations definition 
factors institute mathematics university liege liege belgium 
email ac 
parts completed author oxford kth stockholm inria paris 
number external nodes binary tree resulting operation equal sum product exponentiation number external nodes operands 
operations thought binary trees counterparts usual operations addition multiplication exponentiation 
operations natural number counterparts cases structure trees taken account compute number external nodes product 
object study properties operations described formalized second section 
section operations shown satisfy range algebraic properties generalize elementary properties integers 
section show binary trees decomposed unique way products prime binary trees 
fifth section analyse operations 
section describe various integer valued functions associated trees show functions behave respect products binary trees 
final section argue notions introduced finite binary trees generalized infinite trees 
achieved formalizing binary trees means factorial languages 
di erent authors proposed continue hierarchy natural numbers introducing operations super exponentiation 
knuth recursive definition 





definition coincide modulo elementary notational modifications definition originally ackermann recursive function primitive recursive see 
definition disadvantage making arbitrary choice non associative operations performed result operations exhibit poor algebraic properties see 
operations graphs trees binary trees constitute classical object study theoretical computer science see vol 
section uses particular structure binary trees mean defining repeated operations 
contribution probably closest arithmetic shapes developped etherington half century ago context genetics 
transmission probability distribution genes mating operation commutative associative 
order describe operation etherington introduced operations trees similar rise widely studied genetic algebras see 
operations defined context genetic algebras trees considered ordered natural definition unordered trees 
motivated remarks binary trees introduced possible representation concept structured numbers 
motivation terminology justified observation free groups simple generator isomorphic free monoids single generator isomorphic free groupoids single generator isomorphic bt bt denotes set binary trees operation hierarchy 
analogy motivates notation sn set binary trees seen possible representation notion structured number 
binary trees corresponding expressions 
operations bt set binary trees vol 
section defined symbolic equation bt bt bt tree bt di erent node tree ordered way distinction left subtree bt right subtree ar bt notational convenience represent binary tree bt horizontal expression bt recursively defined 
ar ar sequel identify bt 
binary tree bt represented node tree lar left right subtree ar respectively 
binary trees expressions drawn 
number external nodes leaves binary tree bt called weight definition weight function weight bt defined inductively weight weight weight ar binary trees distinct identical weight said di er shape 
define countably operations binary trees 
definition operation bt bt bt defined ab 
operations bt bt bt defined 
integer called index operation operation simple expression terms suppose binary trees weight binary tree equal tree resulting product trees order prescribed shape example 
elementary examples binary trees resulting operations 
tree obtained constructing tree left right subtrees respectively 
tree obtained grafting copy tree leaves tree simple geometrical description available definition function weight operation deduce weight weight weight 
operations higher index defined successive repetition result obtained 
proposition binary trees 

weight weight weight 
weight weight weight 
weight weight weight sequel operations binary trees called addition multiplication exponentiation 
exist natural number counterpart case weight depends weight respective shape 
algebraic properties properties operations binary trees similar natural numbers 
theorem 
binary tree 


binary trees 

binary trees resulting operations addition multiplication exponentiation 

binary trees 

left cancellation 
right cancellation proof 

equalities follow definition prove induction result clearly true lar assume ar ar ar 

ar ar theorem proved 
equalities proved induction 
property definition prove second property induction assume successive applications property obtain 
prove right cancellation rule proof left cancellation rule similar 
proceed induction result clearly true assume result holds induction hypothesis lead 
evaluated properties give 

evaluation gives 

usual identities counterparts binary trees 
central sequel fact multiplication associative 
counterexamples 
commutativity 
operations non commutative 
seen examples 



operations higher index su ces notice binary tree di erent 
associativity 
operation associative easily seen example 




operations associative 
example 


theorem associative operation cancellation rule 
left cancellation rule hold operations 
binary tree 
binary trees clearly shows left cancellation rule hold 
section give necessary su cient conditions equality right cancellation rule harder analyse 
known hold general case unsettled 
conjecture holds 
prime trees prime decomposition definition binary tree prime di erent node tree implies 
trees prime composite 
weight product binary trees equal product weights 
clear binary tree weight prime number automatically prime 
converse statement true 
binary tree weight prime binary tree 
easy see binary trees weight prime general natural number prime binary trees weight prime 
table give values number binary trees weight number composite trees weight number prime trees weight known number binary trees equal nth catalan number 
see 
simple expression available 
sequence appear encyclopedic list integer sequences 
ph 
flajolet shown equal prime equal square prime asymptotic smallest prime factor binary trees di erent node tree decomposed products prime binary trees 
decomposition unique including sequence factors appear 
need lemma proving 
lemma binary trees prime proof 
left cancellation rule multiplication shows thata proceed induction prove prime di erent assume 
theorem proved assume 

cancellation rule addition induction hypothesis conclude requested 
easy show theorem existence uniqueness prime decomposition binary tree di erent 
prime binary trees decomposition 
proof 
binary tree di erent 
prime decomposition sought 
composite exists di erent factors decomposed prime factors reached 
weight factors positive strictly decreasing procedure finite number steps 
prime binary trees 
assume decomposition 
lemma successive repetition argument lead 
decomposition theorem prime decomposition 
ith factor decomposition uniquely determined ith factor characterise binary trees sum prime 
theorem binary trees di erent node tree 
prime factors distinct 
weight table number binary trees composite trees prime binary trees weight 
proof 
necessity factors distinct assume contradiction prime 
di erent 
di erent may write 
cancellation rule leads di erent show factors identical contradiction attained 
su ciency distinct assume contradiction di erent 
di erent 
contradiction achieved theorem proved 
operations multiplication binary trees associative 
result depends weight shape proposition binary trees assume weight weight 
result introducing new notation 
bt mean binary tree binary tree weight similar construction possible operations higher index 
definition 
operations bt bt defined inductively 
weight 

purpose built definition theorem binary trees 

proof 
proceed induction result contained proposition 
assume result holds show induction holds assume 
theorem proved 
cancellation rules analysed section 
shown left cancellation rule hold example binary trees help theorem argument precise 
theorem binary trees di erent 
proof 
necessity theorem know 

prime decomposition theorem leads requested 
su ciency part trivial 
corollary binary trees di erent 
weight weight 
algebraic properties operations summarized table commutativity associativity neutral cancellation rules weight weight conjecture table algebraic properties operations valuations valuation function defined binary trees values operations integers natural way define valuations 
definition associated valuation bt defined inductively 
ar ar valuations obtained way called inductive 
recognise weight function inductive valuation obtained setting 
inductive valuations 
maximal height 
set max valuation obtained gives maximal height external nodes 
quantity refered height tree corresponding valuation denoted height 
minimal height 
valuation obtained min gives minimal height external nodes denoted 
number 
valuation obtained max appear various contexts expression outputs outputs 
called register function calculate minimal number registers needed evaluate arithmetic expression see 
function known hydrology horton function describe characteristics river flows see cited 
number tree equal height maximal complete tree embedded tree 
denote valuation 
bud 
valuation obtained min note similarity definition number knowledge analysed 
denote function bud 
bud binary tree shown equal largest nth factors equal 
bud binary tree equal largest 
tree grafting interpretation operation corresponds height largest complete binary tree 
appear boundary boolean valuation 
valuation obtained outputs weight tree outputs odd 
table list possible choices operation resulting valuations 
inductive valuations remarkable properties respect theorem assume zz inductive valuation associated 


proof 
prove identity induction 
assume 
resulting valuation weight max height min max min bud weight weight odd table inductive valuations 
br identities similarly proved 
corollary valuations height bud 



proof 
corresponding pairs satisfy conditions theorem 
infinite trees operations introduced finite binary trees extended infinite binary trees 
convenience shall look infinite trees languages letter alphabets 
finite alphabet languages definitions see 
product language 
language residual defined respectively 
truncation size language length language define denotes empty word language factorial implies factorial languages contain empty 
proposition factorial languages 
languages factorial 
binary tree entirely specified set internal nodes 
internal node reached starting root specifying finite sequence left right movements needed reach 
denote movements respectively 
node seen word alphabet 
finite infinite tree representation finite infinite language 
node binary tree corresponds empty language tree 
represented binary trees weight corresponding languages 
easy see languages generated binary trees factorial 
converse true factorial language letter alphabet seen representation particular binary tree corresponding binary tree infinite language denote fl set factorial languages ffl set finite factorial languages letter alphabet 
obvious bijection ffl bt definition operation ffl ffl ffl defined operations ffl ffl ffl defined inductively remove finiteness condition languages define finite infinite languages operations proposition operations operations fl fl fl 
proof 
statement clearly true finite languages product finite languages expressed terms finitely operations form proposition 
complete proof observing result product infinite languages defined countable union finite factorial languages 
properties operations finite binary trees proved induction 
principle anymore hold infinite binary trees properties shown finite binary trees hold infinite binary trees 
possible show properties theorem remain satisfied infinite binary trees 
hand properties theorem may violated infinite binary trees 
assume example 
result operations index greater equal expressed products identical factors 
infinitely factors multiplied second operand infinite 
operation correspond usual multiplication languages computer science operation degenerates kleene star operation second operand infinite 
theorem factorial languages 


finite infinite proof 
prove result finite induction result clearly true assume 
requested 
assume infinite 
show languages coincide 
finite case exist assume requested 

condition definition languages factorial essential 
operations equally defined arbitrary language defined letter alphabets 

wish express sincere anonymous reviewers helpful remarks 
thankful professor welsh oxford university professor ph 
university louvain professor ph 
flajolet inria dr inria professor nivat university paris professor knuth stanford university commenting version 
blakley knuth iterated powers adv 
math 

blondel structured numbers technical report mat department mathematics royal institute technology stockholm 
blondel operations structured numbers research report inria bp le chesnay cedex 
blondel une operations sur les acad 
sci 
paris serie 
costa shape identities genetic algebras lin 
algebra appl 

etherington non associative combinations proc 
royal soc 
edinburgh 
etherington genetic algebras proc 
royal soc 
edinburgh 
ph 
flajolet vuillemin number registers required evaluating arithmetic expressions theoret 
comp 
sc 

ph 
flajolet analyse algorithmes de manipulation de cahiers buro 
ph 
flajolet communication 
gardner mathematical games catalan numbers sci 
amer 

gould research bibliography special number sequences mathematica 
grossman inherently iterative computation ackermann function theoret 
comp 
science 
hilton pedersen catalan numbers various uses ed handbook applicable mathematics john wiley chichester 
population algebras royal statist 
soc 
ser 

kemp average number register needed evaluate binary tree optimally acta informatica 
knuth art computer programming vol 
ii addison wesley 
knuth mathematics computer science coping finiteness science 
van leeuwen handbook theoretical computer sciences vol 
north holland 
pair definition etude des information control 
sedgewick ph 
flajolet analysis algorithms addison wesley 
sloane encyclopedia integer sequences academic press 
analysis topography bulletin geological society america 
viennot trees ed mots 

schutzenberger hermes paris 

