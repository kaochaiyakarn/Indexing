computer intrusion detection bayes factors comparing command transition probabilities william dumouchel labs research summary statistical method compare real time sequence commands user profile user past behavior 
bayes factor statistic test null hypothesis observed command transition probabilities come profiled transition matrix 
alternative hypothesis formed dirichlet mixture multinomial command probabilities 
population research users single computer data users inserted histories users simulate intrusions 
bayes factor observation block commands false alarm rate detecting blocks simulated intrusions 
integrate test detection scheme control charts 
description statistical methodology 
computer intrusion detection attempts identify unauthorized accesses computer accounts 
main approaches intrusion detection pattern recognition anomaly detection 
pattern recognition attempt recognize general patterns command usage stem known attacks exploiting software bug 
approach disadvantage defend previously unknown software bugs unauthorized user knowledge account password 
anomaly detection hand attempts identify unauthorized user identifying unusual account holder usage computer 
usually user historical profile compiled large deviations profile indicate possible intruder 
referred profile approach 
intrusion detection systems ides lunt nides emerald porras neumann approaches presumably uniformly superior 
consider anomaly detection approach 
approach lends statistical treatment 
ryan 
suggested user computer system leaves print captured training neural network historical data 
new data user neural network predicts data stem user historical data alarm possible intrusion raised 
forrest 
consider anomalies unix processes ftp root users 
propose test anomaly detection bayesian hypothesis testing 
able test anomalies unix processes users methodology 
command transition probabilities 
method comparing sequence user commands stored profile describing probability distribution user command sequences 
command possible commands application may 
sparse matrix techniques minimize computer storage requirements 
represent user historical data terms transition matrix command probabilities command previous command user commands arbitrarily numbered assume historical data available users arbitrarily numbered assume user transition matrix may evolve time methodology adjusts random evolution means exponentially weighted discount mechanism 
discussed data number duration timings logins rate command generation file cpu usage form part user profile checked part anomaly detection effort 
continues begun dumouchel schonlau building models detecting changes command frequencies conjunction data form complete user profile 
control chart framework 
probabilities reliably estimated updated time 
measure time clock units observed commands user monitored 
examples group size computing bayes factor test statistic regularly manner statistical process control chart see montgomery 
important allow gradual changes legitimate user behavior update user profile regular basis 
propose monitoring process consisting steps decide block size computing measure discrepancy current profiled behavior user commands 
decide run size number consecutive blocks values bt commands declared intrusion free possible updates user profile 
pilot data training data specify initial center line offset determining control points 
initial upper control limit chart ucl alarm raised ucl 
implementation values vary user account protected value user 
pilot data assumed intrusion free form estimates denoted user transition probabilities 
set run counter run process independently user observe block commands evaluate form test statistic ucl raise alarm possible intruder set run counter 
ucl augment run counter 
previous bt commands block commands update reset 
run alarm free blocks integrated profile extra alarm free block side run 
return step repeat indefinitely 
focuses bayesian scheme estimation computation test statistic lay steps put methods context show potential utility 
tried optimally adapt control chart methodology application merely strive simple procedure 
course computer intrusion detection methods avoid control charts altogether devised 
introduce control charts standard method industrial statistical practice controlling false alarm rates way encourage control chart computer intrusion detection 
bayesian dirichlet multinomial model general commonly model categorical data multinomial distribution bayesian inference involving multinomial probabilities uses dirichlet prior distribution hagan ch 
johnson kotz ch 
form conjugate family distributions 
separate applications dirichlet multinomial family estimate distribution marginal command probability vectors different users allow estimates transition probabilities borrow strength marginal probabilities 
applications combined computation bayes factor test statistic 
random probability vector constrained simplex 
vector dirichlet distribution probability density fixed sample size suppose commands drawn independently random times respective probabilities number times command drawn multinomial probability count vector prob 
nk nk 
draws uses result draw marginal distribution dirichlet compound multinomial distribution prob 



observation posterior distribution dirichlet parameter replaced nk large sample observed values nk large dirichlet posterior distribution highly concentrated posterior mean values pk nk 
called shrinkage estimates move observed proportions nk different users common prior means 
empirical bayes model marginal probabilities discussing estimation command transition probabilities discuss estimation marginal probabilities intermediate step 
assume data available command frequencies users desired estimate uk proportion times user uses command data consist count matrix uk number times user observed command estimation ignore dependencies command sequences methods independence model 
user sample sizes fairly large natural estimates uk uk contain values large commands infrequent 
avoid empirical bayes shrinkage estimates form uk uk uk 
dirichlet parameters uk estimated matrix uk standard dirichlet model assumes user vector probabilities drawn common dirichlet distribution require uk depend extension model estimate common parameter modify estimate differently user 
estimation common dirichlet parameter 
method moments estimate 
preliminary estimate 
assuming variance mu 
approximately proportional mu natural estimate weight inversely proportional variance 
uk 

estimate updated computing chi squared statistic uk excess degrees freedom expected proportional leading estimate max max estimate artificially restricted interval 
empirical bayes estimates produced iterating convergence defining final estimate 
extended model estimation user specific commands 
schonlau report implications fact commands unix users user specific 
commands commonly small subset users seemingly users 
may happen user created private command definition just users aware command find useful frequently 
case dirichlet model marginal command frequencies fit 
extend model letting commands associated separate hyperparameters set unobserved variables uk dirichlet parameter command applicable users prob randomly chosen user command uk user uses command user uses command definitions modify assumption user prior distribution marginal command probabilities uk dirichlet uk extended procedure define uk estimates uk 
estimate defined iteratively equations described 
set proportion users command historical data order need estimates uk uk set uk 
suppose observing commands user uk 
bayes rule estimate uk 


quantity 
likelihood observing successive commands row command commands generated compound multinomial distribution 
right expression approximation taylor series 
approximate exp approximate resulting summation exponent log 
extended model users having uk share uk users command different dirichlet parameters command approach large uk uk uk 
shrinkage estimates transition probabilities desired estimates transition probabilities command command user uk estimated marginal probability user uses command frequency counts command transitions historical data 
follows shall drop subscript danger confusion just refer jk jk respectively 
pairs little dependency expect jk close shrinkage estimate represents jk average observed transition proportions marginal estimate jk jk jk max max nj jk equations number values jk renormalization corresponding values sum 
recall jk corresponding uk uk close 
want leave values chi squared calculation general formula 
large raw transition frequencies significantly different marginal frequencies small raw transition frequencies reliably different marginal ones 
note jk value cancels jk second dirichlet estimation effect assuming transition probability vector drawn dirichlet population parameters jk case need estimate corresponds 
earlier dirichlet problem 
empirical bayes hierarchical models corresponding shrinkage estimates enable compute reliable estimates large transition matrices total uk parameters limited amount historical data 
ready define test intrusion detection 
bayesian hypothesis testing framework suppose user online monitored generated sequence commands consider hypotheses dirichlet null hypothesis assumes legitimate user generated data profiled transition probabilities 
alternative hypothesis assumes commands drawn independently arbitrary probability vector drawn dirichlet distribution specified hyperparameters 
hyperparameters estimated database intrusion records available examples estimated hyperparameters users estimate uk alternative general specified completely specified general involves marginal probabilities transition probabilities 
nested number commands available compute intrusion detection statistic necessarily small compared larger amount historical data available estimation feasible general comparison sets transition matrices 
formulation carry command frequency information block commands updating profile parameters 
examples take 
bayes factor weight evidence 
bayes factor bf ratio probabilities data hypotheses bf prob prob larger bf evidence favor fact log bf called weight evidence 
log scale nice property evidence independent data sets sum individual evidence 
subjective bayesian interpretation bf prior odds favor multiplied bf order produce posterior odds favor focus subjective probability interpretation depends model exactly correct just treat log bf test statistic solid bayesian credentials quite informative hypotheses question 
jk transition count matrix bf jk bf product terms form 
amounting just arithmetic operations monitored command 
addition computation requires operations fewer avoid possibility underflow overflow advisable take log terms sum adding log calculation monitored command 
floating point operations plus log computation monitored command plus integer operations needed match command names order access sparse array jk variables needed evaluate 
reduce chance wild outliers bound terms sum log bf log 
replaced 
control chart returning control chart framework discussed earlier section set thresholds ui log bf ith block commands user control false alarm rate sensitive changes distribution especially increases mean simple procedure set ucl ui ui empirically determined blocks user 
define alarm condition time ui ucl 
order get initial estimates estimates data estimate assumed intrusion free 
estimate pu just subset commands user training data calculate values user remaining commands known intrusion free 
resulting values log bf 
choose global value ucl take ucl average threshold raising alarm 
want adjust fact different users may different average values absence intruders 
define initial values average value ucl ucl rationale user specific means xu variable trust completely just blocks shrunk grand mean 
choices ucl value percentiles sample variance 
estimated initial values pu updated commands compute completes initialization control chart described step subsection control chart framework decision update 
run consecutive values ucl data middle blocks approved updating process parameters 
choice depends computational burden going updating process expected frequency intrusions expected changes legitimate user behavior 
choice results including non alarm ui immediately alarm 
larger values result procedure contaminate training data intrusions demanding computationally 
updating implementation step control chart framework listed updating process parameters involves choice constant denoted called command determines quickly old command counts age computations 
suppose wish modify current estimate values include information new values having mean replace pair pair new bt new bt new updating transition matrix recommend updating estimated transition matrix follows 
update estimated marginal probability vector recall uk matrices uk uk denote command counts new data bt 
matrices updated uk new mk uk bt new uk new uk new updated values uk new updated values uk update transition probabilities denote transition counts blocks newly included jk jk bt 
note defining jk count set blocks times data discussion bayes factor computation 
jk defined previously incorporated transition counts user order able compute new define new values jk jk new jk bt new jk new new updated values uk formulas defining just discounting observed counts decreases influence data far past allowing probabilities control chart specifications keep gradual changes user behavior 
larger values produce gradual changes parameters smaller values produce current updates may possibly unstable excess sampling variation 

algorithms store nonzero values jk jk user compute required values fly 
updating propose regular updating scheme common prior hyperparameters updated replaced ad hoc basis desired redefine update entirely new commands observed just take increase re estimate 
bayes factor computations involve previously unobserved command values computations 
data results evaluate method previous section compare test data training data profiles pairs users 
ideally alarm raised user tested profile 
establish user profiles historical data usage local unix machine 
data user names commands extracted output unix acct auditing mechanism consist user names commands arguments 
commands recorded system consist commands typed include implicitly generated commands 
example execution profile file file commands contained files recorded data stream 
experimental design 
data collected local population month time period 
example uses strings consecutive commands taken records users 
commands blocks taken originally recorded 
block design builds possibility strings commands blocks users original inserted sequences 
block original commands probability subsequence intruder commands inserted stream 
set intruder blocks block original commands provided choice original vs intruder continues probabilities 
constructed sequences stops commands having mixture original inserted intruder commands 
task detect intruder blocks 
design leads approximately half test data arising simulated intrusion course orders magnitude greater expected real life 
having roughly equal numbers simulated intrusions controls allows estimate misclassification errors better 
estimation results estimated parameters initial commands users known intrusion free 
distinct commands data 
commands including simulated intrusions contained distinct commands 
commands sum 
largest values sh netscape ls generic cat popper sendmail date rm expr sed grep hostname ln ksh uname true values somewhat arbitrarily raised estimates fell value 
addition discussed previously unseen commands show past initial period value 
initially commands 
rare commands users tend contribute information allowing discrimination users 
see schonlau 
potential uk different transition probabilities estimate 
transitions occurred initial data updating pu seemingly intrusion free runs test data distinct transitions stored counted 
shows utility bayesian shrinkage estimation allowed produce nonzero estimates despite empty cells users hundreds thousands identical transitions populated cells 
control chart results figures show typical control charts generated simulated scenario 
values log bf plotted points connected lines values ucl plotted parallel nearly horizontal curves 
values example 
estimate commands test 
top panel shows control chart bottom 
plotted symbols show source commands block filled circles simulated intrusions open circles commands original user 
open circles line labeled ucl filled circles line represent misclassification errors 
describing user relatively misclassification errors 
top panel just false alarm legitimate commands 
inserted intrusions alarm sounded block intrusions remaining intrusion block missed completely 
method scoring detection rate count average number simulated intruder commands detection 
case top 
bottom panel shows happened input data blocksize 
twice points chart just false alarm false alarm rate legitimate commands 
open circle seemingly exactly ucl line slightly 
intrusions alarm block times block twice average number commands detection panel 

control chart user 
top commands point bottom 
simulated intrusions control blocks points line marked ucl alarms 
log bf user log bf user ucl ucl oo oo ooo oooooooooo oo oo oo oo oo oooo oooo oo oo oo oo ooo oo oo oooo oo ooooo oooo ooo ooooo oo oooo commands ooo oo 
control chart user 
top commands point bottom 
simulated intrusions control blocks points line marked ucl alarms 
log bf user log bf user ucl ucl oo oo oo oo oo ooo ooo ooo oo oo oo oo ooo oooo oo ooo oo commands ooo oo oo ooo oo oooo oo oo ooo ooo ooo oo displays data user sample 
user suffered just simulated intrusions 
false alarm rate 
top panel intrusions raise alarm block commands intrusion detection 
bottom panel average 
figures show variability inherent simulation studied uniformly better 
types error rate fairly low figures 
false alarm detection rates 
users number false alarms control commands rate 
procedure false alarms rate 
simulated command intrusions raised alarm raised alarm 
intrusions distribution number commands detection commands count cum 
detection count cum 
detection average number commands intrusion detection 

trade false alarms detection ability functions offset 
solid curve blocksize broken curve blocksize 
commands detection false alarms legitimate commands detection false alarm tradeoff 
interesting compare false alarm detection rates change offset ucl change 
noted smaller blocksize higher false alarm rate lower average commands intrusion detection 
natural curious better detection rate adjusted false alarm rate 
similar spirit roc curve acceptance sampling montgomery displays detection false alarm tradeoff 
possible value number false alarms average commands detection computed plotted 
computation merely adds constant observed values ucl simulation take account inclusion new data updated profiles change ucl changed 
shows adjusted false alarm rates commands intrusion respectively 
preference reversed false alarm rate raising commands intrusion respectively 
blocksize uniformly better lose quite bit detection ability false alarm rate low 
discussion order intrusion detection tool useful false alarm rate needs low alarms tend ignored 
presumably achieved setting control chart parameters desired increasing blocksize 
assume operational anomaly detection scheme employ criteria command proportions time day commands hour file access information combined criteria hopefully better statistical properties command proportions 
sample users number commands generated day varied quite bit 
consecutive commands spanned period days months 
users give commands typical working day 
provides context command blocks 
major strength approach speed 
relatively operations needed computing test statistic updating control chart parameters preliminary estimates indicate easily possible implement procedure real time 
planning perform pilot study real time monitoring gather information issue 
currently software written plus interpreted language programming environment 
pilot project assess ability plus implementation keep accounting flow generated users 
ryan 
neural network approach test classification errors users 
successive days data chosen random training neural net tried distinguish users days 
report false alarm rate missing alarms variable equal full day commands user 
test challenging test users smaller test data collected time period training data 
hand excluded users low account usage 
see dumouchel schonlau descriptions comparative study different test statistics different approach involving principal components regression fisher score statistic 
current method performs better requires computer storage 
schonlau describe simple quite effective test statistic measure users previously command inspired extended dirichlet model 
control charts intrusion detection 
provided explicit details typical charting procedure hopes researchers field intrusion detection unfamiliar control charting encouraged integrate anomaly detection method similar control chart scheme 
example output neural network algorithm readily take place control chart figures constructed virtually intrusion detection indicator 
authors anomaly detection research papers control charts roc plots common testing reporting framework comparisons methodology greatly facilitated 

matt schonlau assembling data analysis members joint labs rutgers university niss working group computer intrusion detection valuable advice discussion 
dumouchel schonlau comparison test statistics computer intrusion detection principal components regression transition probabilities 
proceedings interface university minnesota minneapolis mn 
dumouchel schonlau fast computer intrusion detection algorithm hypothesis testing command transition probabilities 
proceedings fourth international conference knowledge discovery data mining agrawal stolorz piatetsky shapiro eds menlo park ca aaai press pp 

forrest hofmeyr somayaji longstaff 
proceedings ieee symposium security privacy ieee computer society press los alamitos ca pp 
johnson kotz distributions statistics continuous multivariate distributions new york john wiley 
lunt jagannathan neumann javitz valdes garvey real time intrusion detection expert system ides final technical report computer science library sri international menlo park ca 
plus user manual division seattle wa 
montgomery statistical quality control nd ed new york john wiley 
hagan kendall advanced theory statistics vol 
bayesian inference new york john wiley 
porras neumann emerald event monitoring enabling response anomalous live disturbances proceedings national information systems security conference appear 
ryan lin miikkulainen intrusion detection neural networks jordan mi kearns mj solla sa eds 
advances neural information processing systems nips denver cambridge ma mit press 
schonlau computer intrusion detection structural zeros submitted publication 
