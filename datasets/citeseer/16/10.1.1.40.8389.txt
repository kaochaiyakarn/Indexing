knowledge probability adversaries joseph halpern ibm almaden research center san jose ca halpern ibm com mark tuttle digital equipment cambridge research lab cambridge ma tuttle crl dec com december mean agent know believe assertion true probability 
different papers fh fz hmt give different answers choosing quite different probability spaces computing probability agent assigns event 
show choice understood terms betting game 
betting game understood terms types adversaries influencing different aspects game 
selects outcome nondeterministic choices system second represents knowledge agent opponent betting game key place papers mentioned differ third needed asynchronous systems choose time bet placed 
illustrate need considering types adversaries number examples 
class adversaries show assign probability spaces agents way appropriate class appropriate precise terms betting game 
conclude showing different assignments probability spaces corresponding different opponents yield different levels guarantees probabilistic coordinated attack 
nearly field research concerned systems interacting agents distributed computing artificial intelligence economics people useful think systems terms knowledge 
game theory example player strategy change comes know player strategy 
fields important subclass interactions involve probability 
example player game toss coin order determine move 
contexts natural find oneself reasoning informally knowledge probability interaction 
sort reasoning quite common computer science reasoning probabilistic primality testing algorithms 
algorithm guarantee input composite number high probability algorithm find witness verify composite 
loosely speaking reason agent runs algorithm input algorithm fails find witness agent knows certainly prime agent guaranteed algorithm certainly witness composite 
number papers tried formalize sort reasoning knowledge probability 
fagin halpern fh model knowledge probability assign agent state pair probability space computing probability agent state formula true 
framework problem modeling knowledge probability reduces choosing assignment probability spaces 
show choice may reasonable tell choice 
particular quite natural choice fz arguments appropriateness hmt analyze interactive proof systems 
initially clear choice appropriate 
clarify issues involved choosing right assignment probability spaces 
argue single assignment appropriate contexts right way think assignments terms strategies betting game different assignments viewed appropriate contexts betting different opponents game 
thinking terms probability truth statement event occur probability ff depends assignment probability spaces 
thinking terms games opponent influence occurrence event way truth statement event occur probability ff depends extent opponent influence success strategy depending occurrence depends power opponent 
establish correspondence assignments probability spaces powers opponents establish correspondence assignments winning strategies betting game opponents 
find betting game just opponent betting 
roughly speaking setting game played great importance 
identify aspects game environment capture relevant related results model appear fh fhm 
fz fz definitions knowledge involving probability proposed order analyze interactive proof quadratic residuosity definitions primarily concerned accounting limited computational power agents system 
model terms types adversaries playing fundamentally different role 
briefly describe adversaries roles explore greater depth rest 
analyze probabilistic protocols terms probability distributions runs executions protocol 
say protocol correct probability trying say protocol right thing percent runs 
fact statement percent runs usually sense usually probability distributions subsets runs entire set runs 
example consider probabilistic primality testing algorithm rab ss 
fixed input number tested coins tossed algorithm induce probability space set runs algorithm input distribution set runs willing assume distribution inputs 
say algorithm works probability really mean choice input algorithm correct runs input 
choice input nonprobabilistic choice coin tosses probabilistic choices 
role type adversary framework distinguish types choices adversary factors nonprobabilistic choices system adversary remaining probabilistic choices induce natural probability distribution set runs adversary 
probability runs viewed giving priori probability event protocol run 
probability agent places runs general change time function information received agent course execution protocol 
new subtleties arise analyzing probability 
consider situation agents agent tosses fair coin time observes outcome time agents learn outcome 
probability coin lands heads 
clearly time coin tossed 
time 
argument says answer 
agent learn coin result having tossed probability change 
argument says coin tossed sense say probability heads 
coin landed heads hasn probability coin landing heads agent know 
point view appears number papers philosophical literature example van lew 
interestingly issue arises quantum mechanics schrodinger famous cat box thought experiment see pag discussion 
claim choices probability best explained terms betting games assuming honest players 
time agent certainly willing accept offer bet payoff coin lands heads assuming risk neutral 
half time coin land heads ahead half time coin land tails lose average come 
hand clearly willing accept offer time tell time going win bet presumably willing offer bet informally agent said risk neutral willing accept bets expected winnings nonnegative 
win willing accept bet point want lose money betting game knowledge important knowledge opponent offering bet 
betting games played isolation 
role played second type adversary framework model knowledge opponent offering bet agent point run 
identify opponent adversary type 
obvious choice opponent assume playing knowledge identical 
decision theorists implicitly talking agent posterior probabilities bg understand choice probability space fz 
way contrast choice hmt corresponds playing complete knowledge past knows outcome coin toss corresponds viewpoint says coin landed probability heads may know 
complication arises analyzing asynchronous systems 
case precise sense agent know exactly event assign probability tested example bet placed 
need consider third type adversary asynchronous systems role choose time 
illustrate need third type adversary give example asynchronous system number plausible answers question probability coin toss landed heads 
turns different answers correspond different adversaries choosing times perform test different ways 
case asynchronous systems considered fz 
understand assignment confidence corresponding playing certain class adversaries third type 
preceding examples suggest earlier definitions probabilistic knowledge appear literature understood best definition particular choice adversaries 
hand show choice adversaries gives rise definition probabilistic knowledge best choice 
precise formalize intuition probability agent assigns event related payoff agent willing accept betting game opponent 
define particular betting game show fix choice adversaries definition probabilistic knowledge best terms doing possible opponent knowledge modeled second adversary 
show definition corresponds strategy enables agent break game definition property corresponds overly conservative strategy assumes opponent powerful really results form technical core 
rest organized follows 
section section provide formal model system agents distributed system 
section consider problem putting probability runs system need type adversary factor nondeterministic choices 
section start consider issue probability change time 
section consider choices general definition probabilistic knowledge 
section consider particular choices probability assignments reasonable synchronous systems 
consider second type adversary representing knowledge opponent betting game 
section consider asynchronous systems consider third type adversary 
section apply ideas analyzing coordinated attack problem showing different notions probability correspond different levels guarantees coordinated attack 
ends appendices 
appendix give proofs results claimed appendix discuss interesting secondary observations related rest 
modeling systems examples show analysis probabilistic system typically depends choice probability distribution runs executions system 
section fix model computation defines runs sections vary probability distributions associated runs 
model model hf simplification model hm 
models heavily influenced models distributed computation 
consider arbitrary system interacting agents intuitively run system complete description possible interactions agents 
interaction uniquely determined sequence global states system passes result interaction 
global state modeled tuple consisting process local state state environment loosely speaking environment intended capture relevant state system deduced agents local states 
formally global state tuple local states local state agent state environment 
run system mapping times global states 
assume sake convenience times natural numbers 
system set runs intuitively set possible interactions system agents 
denote global state time run local state state environment 
refer ordered pair consisting run time point 
assume entire history run time encoded environment state 
allows think runs system terms computation tree nodes tree global states correspond set points paths tree runs system 
say run extends point pass global states time fact considered true false point 
identify fact set points true write iff true 
system fact said fact run points run true points false points 
similarly fact said fact global state points global state true points false points 
define means agent know fact point system intuitively captures agent information 
say considers point possible write local state points section define logical language describing facts 
formally fact interpretation formula language 
see hm complete formal treatment syntax semantics language 

denote set points agent considers possible 
hm papers say knows true points considers possible 
means knows guaranteed hold information recorded local state 
formally denote fact knows define iff 
definition knowledge depends heavily system restricts set points agent considers possible point system clear context omit explicit notation 
probability runs order discuss probability events distributed system specify probability space 
section show order place reasonable probability distribution runs system necessary postulate existence type adversary sketched 
consider simple system consisting single agent tosses fair coin halts 
system consists runs coin comes heads coin comes tails 
coin toss induces natural distribution runs assigned probability 
consider system suggested moshe vardi variant appears fz consisting agents input bit coins fair coin landing heads probability biased coin landing heads probability 
input bit tosses fair coin halts 
input bit tosses biased coin halts 
system consists runs form hb ci value input bit outcome coin toss 
appropriate probability distribution runs system 
example probability heads 
clearly conditional probability heads input bit conditional probability heads input bit 
unconditional probability heads 
distribution inputs easy answer question 
assume example equally input values compute probability heads delta delta distribution inputs question obvious answer 
tempting assume distribution exists 
assuming particular fixed distribution inputs leads results system simply weak 
knowing algorithm produces correct answer runs inputs equally algorithm context different distribution inputs 
overcome problem willing assume existence fixed unknown distribution inputs 
proving algorithm produces correct answer runs context unknown distribution easier proving fixed input algorithm correct runs possible unknown distribution place probability input algorithm performs particularly poorly 
advantage viewing system single probability space lost precisely proof technique distribution assumed place 
assuming existence unknown distribution inputs simply moves problems arising nondeterminism level 
distribution space input values distribution space probability distributions 
discussion leads conclude choices distributed system viewed inherently nondeterministic better nonprobabilistic inappropriate philosophically pragmatically model probabilistically inherently nondeterministic 
reason probabilistically system involving nondeterministic probabilistic choices 
solution essentially formalization standard approach taken literature factor initial nondeterministic events view system collection subsystems natural probability distribution 
coin tossing example consider probability spaces corresponding input bit corresponding input bit 
probability heads space second 
want stress example may artificial analogous examples frequently arise literature 
probabilistic primality testing algorithm rab ss example want assume probability distribution inputs 
want know choice input algorithm gives right answer high probability 
rabin primality testing algorithm rab existence polynomial time computable predicate properties composite gamma cause true prime causes true 
rabin algorithm generates polynomial number random 
true generated algorithm outputs composite outputs prime 
property guarantees algorithm outputs composite definitely composite 
algorithm outputs prime chance prime property guarantees rarely case composite high probability algorithm outputs composite 
algorithm outputs prime natural say prime high probability course presence nondeterminism impose meaningful distribution runs system factoring system subsystems resulting distribution may capture intuition 
problem preceding example probabilistic events coin toss depend nonprobabilistic events input bit 
suppose agent tosses fair coin regardless input bit value 
natural assign probability events coin lands head tails respectively 
consider situation discussed fh hmt agent performs action iff input bit coin landed heads input bit coin landed tails 
natural argue probability agent performs action input bit probability coin land heads performed input bit probability coin land tails performed 
unfortunately natural distribution runs system support line reasoning distribution assign probability set corresponding performance fact assign probability set consider measurable set 
information prove sets measurable sets 
means assign probability having input bit set setting input bit assumed nondeterministic 
factor initial nondeterminism view system subsystems obvious associated probability distributions subsystem action performed probability 
precisely reasoning underlying intuition implicitly doing 
qs gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma psi labeled computation tree 
quite right 
input prime sense say prime high probability 
hand sense say algorithm gives correct answer high probability 
natural way statement precise partition runs algorithm collection subsystems possible input prove algorithm gives right answer high probability subsystems probability runs subsystem generated random choices fixed composite input may runs algorithm incorrectly outputs prime runs give correct output 
contexts interest choice input source nondeterminism system 
nondeterministic choices may run 
asynchronous distributed systems example common view choice processor take step message delivered nondeterministic choice 
similar arguments show need factor nondeterministic choices order probabilistic choices coin tosses place defined probability set runs 
common technique factoring nondeterministic choices assume existence scheduler deterministically choosing function history system point processor take step cf 
rab var 
standard practice fix class schedulers class fair schedulers polynomial time schedulers argue scheduler class system satisfies condition 
show view nondeterministic choices control adversary taken class adversaries straightforward way view set runs system collection probability spaces adversary 
fixing adversary factor nondeterministic choices left purely probabilistic system obvious distribution runs determined probabilistic choices runs 
essentially approach taken fz 
fix adversary view runs system adversary labeled computation tree ta see 
section nodes tree global states paths tree runs 
edges tree labeled positive real numbers node values labeling node outgoing edges sum 
intuitively value labeling outgoing edge node represents probability system corresponding transition node finite path tree probability set runs extending finite path simply product probabilities labeling edges finite path 
natural view computation tree ta probability space tuple ra xa ra set runs ta xa consists subsets ra measurable ones probability assigned generated starting sets runs common finite prefix closing countable union complementation probability function defined sets xa probability set runs common prefix product probabilities labeling edges prefix 
restrict attention finite runs done fz easy see individual run measurable xa consists possible subsets ra case finite runs probability run just product transition probabilities edges run 
occasionally useful view computation tree ta consisting components tree structure unlabeled graph assignment transition probabilities edges tree 
unlabeled tree ta define transition probability assignment ta mapping assigning transition probabilities edges ta notation ta times refer unlabeled tree labeled tree induced probability space meant clear context 
define probabilistic system consist collection labeled computation trees view separate probability spaces adversary set assume environment component global state ta encodes adversary entire past history run 
technical assumption ensures different nodes computation tree different global states global state different computation trees 
point denote computation tree containing 
technical assumption guarantees defined 
choice appropriate set adversaries system runs typically system designer specifying correctness conditions system 
adversary limited choosing initial input agents case set possible adversaries correspond set possible inputs case context primality testing algorithms agent receives single number number tested input 
hand adversary may determine order agents allowed take steps order messages arrive order processors fail 
wish restrict computational power adversary polynomial time 
appropriate set powers assign adversary 
depends application 
probability point preceding section showed notion adversary impose meaningful probability distribution runs system 
order define agent probabilistic knowledge point require probability distribution points system runs 
agent probability distribution points certainly related distribution runs meaningful 
distributions may quite different 
example just agent knowledge varies time expect probability agent assigns event vary time 
contrast distribution runs viewed static distribution 
furthermore depending distributions led quite different analyses protocol 
purpose section clear distinction distributions runs distributions points 
consider coordinated attack problem gra 
generals decide attack common enemy require attack coordinated attack attacks iff attacks 
unfortunately communicate messengers may captured enemy 
known impossible generals coordinate attack conditions gra hm 
suppose relax condition require generals coordinate attack high probability fh fz 
eliminate nondeterminism assume general tosses fair coin determine attack assume probability messenger lost enemy 
assume system completely synchronous 
new correctness condition condition attacks iff attacks holds probability 
consider step solution ca problem 
round tosses coin sends messengers iff coin landed heads 
round sends messenger tell learned outcome coin toss 
round attacks iff coin landed heads regardless hears attacks iff round learned coin landed heads 
hard see put natural probability space set runs probability taken runs attacks iff attacks coin lands tails attacks coin lands heads probability messengers sent round avoids capture generals attack 
different saying times generals know probability attack coordinated 
see consider state just attacking decided attack received message saying learned outcome coin toss 
point certain attack coordinated 
formal definition compute agent probability point unreasonable agent believe high probability event occur information available agent guarantees occur 
hand consider solution ca differing preceding try send messenger round informing learned outcome coin toss 
easy argument shows protocol times generals confidence sense word attack coordinated 
consider example having failed receive message reasons coin landed tails general attack happen probability coin landed heads messengers lost happen probability conditional probability attack coordinated received messages 
preceding discussion shows protocol certain property high probability taken runs agent may find state knows perfectly hold 
correctness conditions problems arising computer science typically stated terms probability distribution runs interest consider protocols agent knows high probability points 
shall show probability distribution runs typically corresponds agent probability distribution time 
view probability runs priori probability distribution 
require fact condition hold high probability agent point view times typically stronger requirement requiring hold high probability set runs 
arguably cases natural requirement 
quite natural example require coordinated attack protocol high confidence points attack coordinated allowing attack certain attack uncoordinated 
definitions probabilistic knowledge want sense statements point agent knows holds probability ff 
problem typically defined probability distribution set runs computation tree order sense statements need probability distribution points considers possible reason need distribution points just runs interesting facts facts points runs 
consider example fact coin tossed landed heads 
coin tossed times single run say clock tick fact may true points run false fact points runs 
reasoning probabilistic protocols quite natural want formal statements form agent knows probability coin tossed agent landed heads fact runs 
restrict attention facts runs simply distribution runs precludes complicates discussion interesting events system 
reviewing general framework fh particular assignment probability spaces points agents sense statements agent probabilistic knowledge 
remainder focus construction appropriate probability assignments 
define probability assignment mapping agent point probability space 
set points set measurable subsets probability function assigning probability sets cases interest think subset points agent considers possible think indicating relative likelihood particular point current point assignment set points satisfying fd 
natural interpret probability true agent point problem interpretation course follow standard practice hal identifying probability space sample space intention clear context 
returning question distributions runs versus points notice long set contain point run natural bijection probability points probability runs going general allow point run appear shall see section generality useful dealing asynchronous systems 
set guaranteed measurable guaranteed defined 
order deal problem follow approach fh inner outer measures 
probability space inner measure outer measure defined sup inf subsets roughly speaking inner resp 
outer measure best lower resp 
upper bound probability true easy see gamma set complement probability assignment write pr ff mean ff 
note need probability assignment sense pr take ff abbreviation pr ff ff means agent knows probability ff pr ff holds points considers possible 
definitions needed give semantics logical language knowledge probability 
particular language interest remainder language phi obtained fixing set phi primitive propositions closing standard boolean connectives conjunction negation knowledge operators probability formulas form pr ff standard linear time temporal logic operators fl note phi sufficiently powerful express operators ff temporal operators henceforth eventually 
context system say phi state generated primitive propositions phi fact global state say phi sufficiently rich global state primitive proposition phi true precisely points global state condition ensures language phi rich allow talk individual global states 
assumption phi state generated quite reasonable practice typically take primitive propositions represent facts coin landed heads message received value variable 
facts fact global state history recorded global state 
sufficient richness technical condition required results 
language sufficiently rich adding primitive propositions 
natural way making sense knowledge probability probability assignment unfortunately know choose choices somewhat constrained may appear 
computation trees associated distributions runs clearly want distribution sample space points associate agent point related distributions runs 
show choose sample spaces straightforward way distribution runs induce distribution easily extend definitions complicated formulas pr pr see fh 
define fl iff fl true time run iff true time step 
define mean exists 
true true point true 
recall says true point taken abbreviation true says true forever abbreviation 
appropriate choice sample spaces distributions runs computation trees construct probability assignment 
problem choosing probability assignment essentially reduces choosing sample spaces 
reduction clarify important issues determining appropriate choice probability assignments 
idea construction quite straightforward sample space subset probability relative just probability runs going normalized probability set runs going words probability conditional probability run passes run passes order simple idea set satisfy requirements 
natural choice set points agent considers possible general set contains points different computation trees attempting impose distribution set points leads difficulties led factor nondeterminism view system collection computation trees place 
recall example section tosses fair biased coin depending input 
coin tossed considers worlds possible possible run 
place probability points place probability runs 
hand point run input bit corresponding biased coin restrict consist points computation tree input put probability points obvious way compute probability heads 
intuition leads require set contained entirely single computation tree req points 
req allow take natural choose 
say probability assignment consistent satisfies condition 
pointed fh consequence knows holds probability pr 
consistent assignment case agent knows time assigns positive probability 
order construction described impose distribution set require single condition req idea involves conditioning set runs passing definition conditional probability forces require set runs measurable set positive measure 
suppose ra xa adversary set points contained denote set runs passing fr ra kg 
require req xa 
note req implies req req relatively weak requirement 
example result shows req satisfied practice 
set points fact pointed fh axiom characterizes property probability space subset points considers possible 
said state generated imply words contains points global state 
proposition state generated satisfies req satisfies req proof proposition technical results appendix statement independent transition probability assignment assigning probabilities edges ta req depend proposition tells choose regard confident req satisfied eventually choose long state generated 
set points satisfying req req precise idea imposing distribution intuitively construct collection measurable subsets project measurable subsets runs formally set runs set points define proj define xa define probability function measurable subsets conditional probability 
proposition satisfies req req probability space 
formalize intuition construction probability assignments reduces choice sample spaces 
system collection labeled computation trees define sample space assignment function assigns agent point sample space satisfying req req sample space assignment construction shows obtain probability space agents points naturally determines probability assignment call probability assignment induced note definition depends sample space assignment transition probability assignment implicitly determined fact labeled computation trees 
times convenient start unlabeled computation tree labeled transition probability assignment case refer probability assignment induced define fact measurable respect agents points preceding discussion precise idea choosing probability assignment reduces choosing sample space assignment help choose sample space assignment 
different choices result probability assignments quite different properties 
return example tosses fair coin observe outcome 
clearly time coin tossed considers points possible say coin landed heads coin landed tails 
consider sample space assignment fh tg 
points sample space points respect induced probability assignment probability heads 
knows probability heads 
choice sample spaces learned outcome coin flip time probability heads time time 
hand consider assignment fhg ftg 
respect induced probability assignment probability heads probability heads 
choice sample spaces coin landed heads landed tails say knows probability heads doesn know 
right probability assignment 
hinted answer depends type adversary views playing 
focal point section 
conclude section example 
consider system fair die tossed know outcome 
suppose time die tossed 
points corresponding possible outcomes die 
sample space assignment obvious choice take assignment assigns sample space points space consisting points 
respect sample space point probability 
statement die landed number 
clearly probability space induced sample space holds probability 
uses sample space points agent knows probability 
second possibility consider sample spaces fc fc assignment assign sample space agent points sample space points points probability points probability 
say knows probability know 
clearly subdivide points smaller subspaces 
hard show subdivide precise knowledge probability 
prove formal version statement section 
bother subdividing 
stick sample space assignment gives precise seemingly natural answer 
reply may appropriate answer playing certain adversaries 
probability assignments synchronous systems consider problem selecting appropriate probability assignments completely synchronous systems 
intuitively system synchronous agents effectively access global clock 
formally system synchronous hv points agents means example points agent considers indistinguishable lie run 
considering probability turns things easier context synchronous systems 
example turns practice sample space assignments satisfy natural properties state generated inclusive means agents points uniform means implies agents points say induced probability assignment standard satisfies properties 
remainder section consider standard assignments 
convenient feature synchronous systems facts interest measurable 
recall phi state generated respect system primitive propositions phi facts global state 
proposition synchronous system consistent standard assignment phi state generated measurable respect facts phi 
result says practical purposes concern sets inner measures synchronous systems 
proof induction structure appendix examination probability assignments synchronous systems defining sample space assignments induced probability assignments 
assignments understood terms betting game appropriate opponent 
second type adversary mentioned 
intuition precise defined probability assignments 
assignments corresponds decision theorists call agent posterior probability 
essentially probability agent assign event agent knows 
intuitively corresponds bet agent willing accept copy precisely knowledge 
relationship probability betting precise shortly 
probability space corresponds agent conditioning knowledge way 
identified agent knowledge set points considers possible set points natural choice space 
seen set points general contained computation tree 
consider set points computation tree considers possible just set tree fd dg 
clear tree satisfies req satisfies req follows proposition state generated 
proposition induced probability space tree probability space 
post sample space assignment assigns space tree agent point post probability assignment induced post probability space post natural interpretation 
generated conditioning knows point fact playing adversary generated tree ta lies 
course agent considers adversaries possible 
statement post ff means adversaries considers possible information probability knows ff 
post precisely assignment advocated fz synchronous case 
suppose considering accepting bet necessarily agent system complete knowledge past history system 
case condition essentially definition uniform probability assignment fh 
probability assignment induced uniform sample space assignment defined uniform probability assignment sense fh 
claim appropriate choice probability space point points prefix time words points global state 
call set points pref note pref independent depends point pref clearly state generated propositions induce natural probability distribution set points conditioning runs passing pref fut denote sample space assignment assigns pref fut denote probability assignment induced fut probability assignment hmt ls 
probability space fut event outcome determined reaching point probability 
events get decided computation tree nontrivial probabilities termed probability assignment 
reconsider coin tossing example agent tosses fair coin time agents learn outcome 
coin landed time easy check fut pr heads pr heads hand post pr heads post fut correspond natural answers considered probability heads 
capture intuition answer depends knowledge opponent betting fut corresponds betting post corresponds betting notice cases post fut probability space associated agent point corresponds set points agent opponent consider possible 
assume loss generality opponent agent system 
suppose general considering appropriate bet accept 
claim show case probability assignment generated joint knowledge agents represented intersection points consider possible set tree tree tree easy see tree state generated propositions induce natural distribution set points conditioning runs passing tree sample space assignment assigns tree probability assignment induced examples seen post fut property means consistent 
mentioned section assignments characterized intuitively desirable condition pr return coordinated attack problem section see example inconsistent assignment causes agent know attack coordinated high probability note tree tree sense construction viewed generalization previous sample space assignment defined post knowing attack coordinated 
consistency natural restriction probability assignments requirement framework 
may technical reasons considering inconsistent assignments 
obvious inconsistent probability assignment associates point set time points computation tree 
call set 
fact independent probability space induced construction proposition case simulates probability runs 
denote associated sample space probability assignments prior prior notice uses probability space prior essentially ignoring learned point time termed prior probability 
sample space assignments constructed standard assignments 
fact difficult see assignment constructed basis opponent knowledge standard 
lends justification restriction standard assignments 
view assignments points lattice possible standard sample space assignments 
define ordering lattice iff agent point usual write distinct important property ordering proposition standard assignments satisfying agent point set partitioned sets form intuitively means sets refinements sets sets obtained partitioning sets consider post fut example 
set tree post partitioned sets tree fut tree fact clear fut post prior furthermore notice post greatest respect consistent sample space assignments 
case consistent assignments interpret intersection knowledge opponent knowledge think roughly meaning opponent corresponding considers fewer points possible knows opponent corresponding means example post maximal consistent assignment corresponds playing powerful opponent 
ordering sample spaces assignments induces obvious ordering probability assignments sample space assignments induced probability assignments respectively define iff similarly define iff important point note consistent assignments satisfying obtained conditioning respect proposition synchronous system consistent standard assignments satisfying agents points measurable subsets particular measurable subset js follows consistent probability assignment obtained post conditioning 
able precise sense post fut right probability assignments agent playing opponent knows exactly playing playing opponent complete information past 
focus arguments cases 
consider betting game agents point agent offers payoff fi bet 
agent accepts rejects bet 
accepts bet pays dollar order play game pays fi dollars true accepts bet point net gain fi gamma gamma depending true false rejects bet say gain 
criterion definition probabilistic knowledge help play game 
intuitively assuming risk neutral rational relationship probability ff knows payoff fi induce accept bet 
ff close require high payoff bet risk acceptable ff close willing accept lower payoff chance losing remote 
claim right probability assignment fact determines agent lowest acceptable payoff bet fact 
words determines precisely agent bet betting fact sense unique probability assignment 
intuition precise 
consider acceptable payoff bet assuming want lose money bet 
presumably strategy offering bets acceptable payoff take strategy account 
consider example system secretly tosses fair coin time offers time bet coin landed heads 
strategy offering payoff independent outcome coin toss safely accept bet average lose money expected profit zero 
offers payoff coin lands tails certain lose money 
hand offers payoff coin lands heads certain lose money 
expect follow strategy cause lose money assume strategy offering bets depends local state 
words points unable distinguish offer payoff bet points 
formally strategy function local state point payoff offer bet similarly assume strategy accepting rejecting bets computing acceptable payoffs function local state 
consider acceptable payoff bet 
suppose decides accept bet payoff ff local state remember strategy accepting bets function local state 
denoting bet ff rule accept bet payoff ff bet ff local state clearly win bets lose interested computing expected profit 
turn depends strategy 
leads compute strategies agent expected profit follows bet ff follows intuitively strategies agent expected profit nonnegative lose money average bet ff regardless strategy 
bet ff safe bet precise fix sample space assignment induced probability assignment agents fact measurable respect value random variable ff point denote profit winnings assuming bet ff denote expected value respect probability space say breaks bet ff respect strategy say bet ff safe knows breaks bet ff respect breaks bet ff points considers possible important question left answer probability space compute expectation point 
reasonable choice take tree correspond computing expectation respect knows 
reasonable choice take tree correspond intuition wants possible choice strategy function local state strategy potentially offering different payoffs points different sets tree turns choice doesn difference synchronous setting 
result shows definitions safety equivalent synchronous systems 
proposition synchronous system facts agents points rule bet ff tree safe iff bet ff tree safe sake concrete choose probability space tree slightly easier compute 
claim right probability assignment playing concrete result states determines agent precisely bets safe betting theorem facts measurable respect agents points rule bet ff safe iff ff 
view main result 
says determines precisely bets safe accept 
probability assignment agent knows probability ff knows break betting payoff ff 
hand agent considers possible probability ff strategy causes lose money betting payoff ff 
words right probability assignment betting theorem stated measurable facts remember proposition assures facts interest typically measurable synchronous systems 
fact theorem holds facts define appropriate notion expectation facts consider notion appendix proof theorem depends fact induced independent particular transition probability assignment determining distribution runs 
sense really determining bets safe accept 
formalize intuition follows 
say standard sample space assignment determines safe bets system consisting unlabeled computation trees transition probability assignments assigning transition probabilities edges computation trees condition holds probability assignment induced ff implies bet ff safe facts phi agents points notice definition quantifies transition probability assignments requiring probability assignment induced determines safe bets regardless actual choice intuition says right way go constructing probability assignment depend details transition probabilities 
uniform way choosing probability space change small perturbations probability theorem shows possible construct assignment way 
proof theorem shows determines safe bets turns assignments determine safe bets language phi sufficiently rich lot possible events bet enjoys distinction maximum assignment 
theorem synchronous system consistent standard assignment determines safe bets determines safe bets phi sufficiently rich interpret theorems providing strong evidence right sample space assignment right probability assignment playing opponent knowledge 
says way guaranteed safe betting strategy assuming opponent powerful intuitively powerful opponent confident agent able win bet opponent higher payoff agent require accepting bet 
consequently unduly conservative takes probability assignment corresponds agent powerful may pass bets accept 
strictly speaking justify fact rule form bet ff order determine accept bet 
simple threshold function appropriate 
conceivable better money making strategy tell say accept bet offered payoff interval reject bet 
hard show assumption strategy followed requiring function local state second strategy safe iff safe accept bet offered payoff interval bet safe consequently optimal strategy taken threshold function bet ff 
process making intuition precise prove theorem gives insight relationships sample space assignments lattice 
recall defined ff mean agent knows ff lower bound probability 
extend definition deal intervals straightforward way 
define ff fi mean ff pr fi mean agent knows probability ff fi 
may correspond measurable set really mean inner measure ff outer measure fi 
interpret pr inner measure correspond measurable set gamma set capture intuition terms language interpreting ff fi abbreviation ff pr gamma fi 
relate definition earlier definition ff notice ff equivalent ff 
prove 
theorem synchronous system consistent standard assignments satisfying fact agent point ff fi ff fi ff fi implies ff fi exist fact agent point ff fi ff fi ff ff fi fi phi sufficiently rich phi 
part shows agent confidence interval increase presence powerful opponent part shows decrease 
fact part gives example case agent unduly conservative inappropriate probability assignment agent reject bets payoff ff accepting bets 
light results probability assignment practice 
results show post special status probability assignments 
maximum assignment consistent assignments lattice ordering theorem gives sharpest bounds probability interval consistent probability assignments 
addition consistent probability assignment obtained post process conditioning 
post probability assignment corresponds decision theorists referring agent subjective posterior probability 
seen post may right probability assignment 
right choice depends knowledge opponent offering bet system wish analyze 
post may give smaller interval intuitively recall section fact identified set points formula sentence logic denotes set points formula expresses fact 
write phi mean fact expressible language phi 
giving sharper bounds agent belief fact true uses better lower bound post guide deciding bet accept may wind losing money 
fact follows theorems probability assignment gives agent best interval guarantees betting strategy 
cases post right choice necessarily probability want computations 
may necessary obtain sharpest interval confidence possible 
rough bound may sufficient 
theorem shows proving lower bound agent confidence certain choice probability space implies bound holds definition higher lattice 
advantage probability assignment lies lower lattice individual probability spaces smaller computations may simpler 
consider definition fut example 
probability space associate point consists points having global state 
runs runs extending global state 
means reason probability event fixed global state 
contrast definition post allows possibility runs may extend collection global states may mean longer luxury arguing probability event fixed global state 
reasoning terms fut post obviates need reasoning terms conditional probability 
arguing level confidence agent best choose definition low lattice possible proof simple possible high enable prove sufficiently high level confidence 
probability assignments asynchronous systems turn attention choosing appropriate probability assignments asynchronous systems 
drop synchronous assumption implies assume existence global clock agents systems may access clock may know approximate values clock 
context asynchronous systems sample space assignments discussed previous section post fut prior perfect sense 
intuition motivating definitions remains particular theorem says determines safe bets holds 
number things change 
thing proposition longer holds facts interest 
equally important proposition says consistent probability assignments lattice obtained conditioning consistent probability assignments higher lattice fails general 
reason may fail longer guaranteed measurable subset example post tree need measurable subset tree distinguish time points time points time point tree consists time points tree consists time points 
case tree measurable subset tree tree contain points tree contained runs passing tree conditioning arguments measurability assumption 
consequently longer true consistent assignments obtained conditioning post similar reasons general asynchronous systems tree tree definition safe bet necessarily give results 
conditional probability argument proof proposition depends fact sets tree measurable subsets tree fact theorem holds asynchronous systems saying determines safe bets depends fact tree definition safe bet 
prove analogues propositions theorem provided assume measurable subset agents points unfortunately shall see measurability requirement hold cases interest 
situation best illustrated example 
consider simple asynchronous system similar example agent tosses fair coin times clock tick halts agents learn outcome coin tosses 
system consists single computation tree complete binary tree depth transition labeled 
suppose agent access clock unable distinguish global states tree 
hand access clock tell time apart 
clearly possible runs system corresponding possible sequences coin tosses 
distinguish point runs point set post consists point system 
subsets post measurable 
computation tree finite individual run measurable set sets runs measurable 
measurable subsets post obtained projecting measurable subsets runs post sets post consisting points set runs computation tree 
fact coin toss landed heads initially false time 
fact global state set points true measurable subset post consist points subset runs 
shows proposition fails case 
talk probability knows point tree 
talk inner outer measure post 
nonempty measurable set contained post set points single run coin lands heads time inner measure set similarly outer measure gamma 
values gamma may somewhat strange glance totally 
consider situation agent point trying probability heads probability true probability runs 
agent idea run 
run case coin toss landed heads run coin lands heads toss run occurs probability hand runs coin lands tails toss possible coin toss landed heads 
set runs probability gamma possible coin toss landed heads 
means gamma inner outer measure post provide lower upper bounds probability run coin toss landed heads 
part analogue theorem strengthen definition sufficiently rich mean global state primitive proposition phi true points runs passing global state 
due fact consistent assignments asynchronous systems allow set contain point run 
suppose agent betting knows time set consists time points 
respect sample space assignment fact measurable 
fact easy see points sum post gamma post 
may somewhat counterintuitive suggest play conservatively copy knows 
especially line reasoning situation lead conclude knows probability coin toss landed heads considering agent reasons follows current time know regardless particular value probability th coin toss lands heads know coin toss landed heads probability sample space assignment captures intuition associate point agent set time points computation tree agent considers possible opposed considering points computation tree considers possible done post 
precisely assignment order understand situation little better reconsider assignment post claim reason interval gamma arises different reason intervals arise context synchronous systems studied preceding section 
context synchronous systems strategy depends local state know local state currently partition view element partition independent probability space computing probability separately 
formula ff fi holds probability range ff fi different probability spaces 
current example probability space interval arises 
depending lucky choice run tests heads probability getting heads range gamma 
view arises due asynchrony new element uncertainty adversary exploit 
intuitively coin tossing example plays copy know run adversary gets choose 
hand playing knows worlds sample space time points fixed view analysis obtain answer invoking implicitly assuming adversary chooses time test performed 
adversary adversary third type mentioned 
time chosen adversary probability 
formalize analysis follows 
time associate separate computation tree corresponding adversary chooses time test truth fact case truth 
probability space point tree corresponding consists time points tree assigned equal probability 
probability spaces probability heads knows coin toss landed heads probability 
reason restrict third type adversary simply making note contradict theorem theorem hold measurable subset noted case 
initial choice stopping time 
suppose fixed collection adversaries type computation trees adversary second type say 
define cut tree subset tree containing precisely point run passing tree run passing tree cut precisely set points 
define type adversary function mapping agent point cut tree intuitively betting fact knows precisely run bet place third type adversary determines run bet 
cut tree chosen adversary set points adversary cause bet take place local states example plays copy adversary chooses cut computation tree considers points computation tree possible 
case playing knows time adversary chooses cut time cut fact consist time points tree 
general considering set time points allowable cut consisting points 
issue adversary choosing cuts arise considering synchronous systems 
formal sense suppose set type adversaries determining possible initial nondeterministic choices 
determines set computation trees discussed 
fix type adversary say set type adversaries collection computation trees adversaries choose stopping times 
notice definition depends construct computation tree fixed computation trees look identical essentially just ta choices put environment state point sample space assignment maps agent point tree sample space tree run tree exactly point tree intuitively point test performed 
note consider adversaries corresponding points sample spaces points general different determines point run tree considers possible test performed determination 
notice presence third type adversary longer case sample space assignments defined asynchronous systems standard assignments 
example longer need case intuitively playing copy places constraints third type adversary 
precise fix set adversaries type copy type adversary consider resulting system take pts set possible adversaries third type system 
pts sample space assignment defined pts pts induced probability assignment 
proposition post ff fi iff pts ff fi fact agent point proof result shows post understood asynchronous systems terms adversary chooses time test performed worst possible time point view 
course reason assume type adversary restricted choosing horizontal cuts time points allowed choose completely arbitrary cuts points 
intermediate definitions plausible 
imagine partially synchronous model processors tell time guaranteed processors take th step time interval width ffi 
reasonable require adversary third type selecting horizontal time cuts totally arbitrary cuts select cuts property point cut time point falling interval width ffi generalize notion type adversary slightly require choose cut choose point run 
intuition adversary simply give chance bet certain runs 
coin tossing example adversary allow bet heads coin landed tails 
issue defining reasonable adversaries third type deserves study 
close section comparison definition probability asynchronous systems fz 
probability assignment fz asynchronous setting flavor pts assuming adversary chooses point cut points tree fischer zuck assume adversary chooses cut global states tree set global states appearing tree property global states lie run 
intuitively means adversary performs test point performs test points global state 
reasonable restriction leads unexpected consequences 
call class adversaries considered fz state state sample space assignment defined state state induced probability assignment 
giving formal definitions give example show state differs pts consider system tosses biased coin lands heads probability tails probability 
system consists runs denote points corresponding times runs computation tree nodes root encoding points node corresponding point node corresponding 
suppose able distinguish point remaining points suppose fact coin lands heads true false 
time point say consider probability knows respect pts state adversary pts choose set points perform experiment true probability respect sets 
follows pts fact pts 
similarly adversary state choose node node state perform experiment cuts global states contained fr tg 
choice corresponds adversary pts chooses choice correspond fact adversary state corresponding adversary pts interpretation result language obtained closing set formulas standard boolean connectives modal operators ff distinguish assignments post pts note richer language fh distinguish assignments 
amount choosing nodes lie run 
respect choice holds probability respect choice holds probability 
get state 
sense pts giving reasonable answer 
knows priori coin land heads high probability information eliminated run consider heads extremely probable 
application coordinated attack application framework developed specify probabilistic coordinated attack problem terms knowledge probability show nature problem changes probability assignment changes 
recall section deterministic coordinated attack requires generals coordinate synchronized attack common enemy spite fact communicate sending messages messengers captured enemy 
define ca fact attacks iff attacks take problem correctness condition ca holds points 
analogous correctness condition probabilistic coordinated attack ca holds high probability 
meaning slippery phrase high probability topic section 
halpern moses hm demonstrated strong relationship deterministic coordinated attack state knowledge called common knowledge 
intuitively formula common knowledge agents know agents know agents know ad infinitum 
formally set fp agents customary define knows denoted define common knowledge denoted cg cg delta delta delta delta delta delta hard prove common knowledge satisfies statements hm 
fixed point axiom cg cg 
induction rule oe infer oe cg statement says cg fixed point equation 
shown follow induction rule cg greatest fixed point implied fixed points equation hm 
fact common define common knowledge greatest fixed point equation stronger definition general definition extends easily settings hm fh pt 
note example shows adversaries state examples general adversaries discussed necessarily choose point run 
example adversary choosing global state choose point run induction rule simple case says public fact sense knows true common knowledge true 
halpern moses show common knowledge certain fact necessary condition coordinated attack 
show common knowledge nontrivial facts attained systems systems messages may fail delivered coordinated attack possible systems cf 
gra 
relationship deterministic attack common knowledge natural ask relationship probabilistic attack probabilistic common knowledge 
direct analogy fixed point definition common knowledge fagin halpern fh define probabilistic common knowledge greatest fixed point ff ff ff 
definition equal infinite conjunction formulas ff easy show definition satisfies obvious analogues fixed point axiom induction rule 
returning deterministic attack notice ca true points induction rule implies cg ca holds points 
fact cg ca implies ca alternative specification coordinated attack cg ca holds points ca holds points 
suppose fix ff take specification probabilistic attack ff ca holds points 
implementations version probabilistic attack answer depends choice probability assignment 
stronger assignments yield stronger notions probabilistic common knowledge stronger requirements implementation 
consider assignment fut opponent offering agent bet knows entire global state point 
point attack uncoordinated point run extending point satisfy ca point ca holds probability fut easily follows ff ca hold points 
says algorithm achieves probabilistic coordinated attack respect fut iff achieves coordinated attack 
coordinated attack known unattainable asynchronous systems get probabilistic coordinated attack respect strong opponent 
consider assignment post opponent offering bet precisely knowledge agent 
consequently possible reach point agent determine local state run extending point satisfy ca agent knows ca hold ff ca consequently implementation ca probabilistic attack problem property ff ca holds points respect post second implementation ca 
proved observing ff ca holds points respect post induction rule formula rule true ff ca notice respect consistent probability assignment point agent knows ca hold ff ca hold point ff ca implies ff ca fixed point axiom implies ff ca 
consequently case ff ca holds points ca respect consistent assignment 
possible ff ca hold points ca respect probability assignment 
algorithm guarantees ca holds probability ff taken runs obvious solution assignment mimic probability distribution runs 
particular consider prior easy see assignment agent knows ca probability ff points system 
ff ca holds points follows induction rule ff ca holds points 
summarize discussion proposition 
proposition 
ca achieves probabilistic coordinated attack respect prior post 
ca achieves probabilistic coordinated attack respect post prior fut 
protocol achieves probabilistic coordinated attack respect fut iff achieves coordinated attack 
protocol exists generals attack attack absence messages 
proposition shows increasing power opponent moving lattice strengthens kind guarantees probabilistic attack 
seen prior corresponds probability runs 
ca give coordination runs 
observed section protocol ca general attack certain attack coordinated 
ca achieves coordinated attack respect post situation arise ca part proposition shows achieving coordinated attack high probability respect knowledge agent knows happened past expect setting 
note probability assignments agree time probability assign set points identical probability set runs going points time point ta ra set runs ta satisfying fact run post tree tree fut pref prior times prior agrees initial probability runs 
probability assignments saying holds probability greater ff points ta generally stronger statement saying holds probability ff taken runs ta course perfectly conceivable want consider probability assignments discussed guarantees 
considering intermediate assignments particularly appropriate protocols security major consideration cryptographic protocols 
quite important consider knowledge agent betting 
slightly stronger definition probabilistic coordinated attack considered fz required conditional probability parties attack parties attacks ff 
shown fz form clear definition probabilistic attack fz probability taken results clearly assume probability taken runs 
probabilistic coordinated attack corresponds agents having average belief ff attack coordinated 
reinterpret results language showing notion coordinated attack equivalent probabilistic common knowledge respect probability assignment spirit prior interesting probability space fz analysis post inconsistent probability assignment 
point significant example results consistent intuition 
general unreasonable inconsistent probability assignments led counterintuitive results assignments 
consider prior context ca point information agent local state guarantees attack coordinated prior ff ca ka ca hold point 
words choice prior effect saying point agent high confidence fact knows false 
preceding discussion raises interesting point 
typically case computer science applications consider probabilities runs applications typically require condition hold large fraction runs corresponds prior clear appropriate 
agent running probabilistic coordinated attack algorithm guaranteed high probability runs finds state knows attack coordinated clear proceed attack 
may worth reconsidering number algorithms see redesigned give stronger guarantees 
may particularly appropriate context zero knowledge protocols gmr current definitions allow prover continue playing verifier prover knows perfectly leaked information verifier may continue 
extremely prover find situation may worth trying redesign protocol deal possibility 
adaptive protocols processors modify actions light learned common control theory literature probabilistic algorithms distributed systems typically adaptive 
number algorithms converted adaptive algorithms relatively little overhead 
hope study issue carefully 
provided framework reasoning knowledge probability distributed systems 
illustrated fact single definition probabilistic knowledge appropriate contexts shown definition probabilistic knowledge best understood terms particular choice types adversaries 
primary technical contribution show construct appropriate definition context particular choice adversaries 
introducing notion adversary helped clear number subtle issues study probability probability coin lands heads coin tossed 
addition approach allows unify different approaches probability distributed systems appeared earlier works 
challenge remains apply new understanding real problems 
order apply results extension useful 
shown construct appropriate probability space opponent betting game assumptions strategy adversary 
potentially fruitful line research understand results effected assumptions strategies adversary allowed follow assuming trying maximize payoff simply trying break 
willing take risks increase payoff decrease minimum payoff willing accept bet 
extensions useful applying framework applications game theory economics contract negotiation 
area application appears potential analysis probabilistic distributed protocols especially cryptographic protocols 
promising direction specification cryptographic protocols terms knowledge probability 
correctness conditions cryptography typically described low level abstraction involving turing machines complicated statements conditional probability 
possible specify protocols higher level abstraction terms knowledge probability possible reason protocols higher level abstraction axioms inference rules probabilistic knowledge fagin halpern fh 
progress direction 
fischer zuck fz notions knowledge probability complexity theory analyze particular interactive proof quadratic residuosity halpern moses tuttle hmt related notions completely characterize interactive zero knowledge proof systems terms knowledge 
current difficulty continuing path helpful axioms inference rules reasoning complexity theory difficult characterizations reason protocols mechanical way 
hand reasoning purely probabilistic aspects protocols certainly possible axioms inference rules fh 
proofs results appendix contains proofs results claimed 
proposition state generated satisfies req satisfies req proof global state set points set runs technical assumption global state encodes adversary past history run global state contained precisely computation tree appears precisely tree 
contained single computation tree 
state generated union collection sets form satisfies req contained single computation tree ta ra xa single computation tree contains countable number global states countable union sets form countable union sets form global state ta definition ta set measurable set runs positive measure countable union measurable set positive measure 
follows satisfies req proposition satisfies req req probability space 
proof show see hal set subsets including closed formation complements countable unions nonnegative countably additive function satisfying 
ra xa 
proj ra ra xa proj xa xa closed complementation xa proj closed complementation 
countable collection sets proj xa xa closed countable union xa follows proj proj proj closed countable union 
contained single computation tree req xa req conditional probability respect defined defined 
clearly nonnegative furthermore 
suppose countable collection pairwise disjoint sets proj xa assume run passes replace measurable set assume pairwise disjoint contained point contained proj proj contradicting pairwise disjointness follows pairwise disjointness countably additive 
proposition synchronous system consistent standard assignment phi state generated measurable respect facts phi 
proof recall phi state generated primitive propositions phi facts global state 
recall measurable respect agents points fix agent point denote set time points computation tree containing claim show measurable set runs times formulas phi 
see notice consistent assignment synchronous system contains time points fact satisfies req points contained 
consequently 
measurable req condition imply measurable 
follow measurable subset proof proceeds induction structure 
primitive proposition phi phi state generated know fact global state 
arguments similar proposition suffice show measurable set runs 
cases negation conjunction follow immediately fact measurable sets closed complementation intersection 
fact global state arguments formula identical argument primitive propositions 
pr ff consider time point inclusive know consistent assignment synchronous system know contains time points 
follows union sets time points form uniform partition state generated countable number time global states tree see partitioned countable collection sets form consider uniform sample space assignments easy check true points follows partitioned countable collection sets form partitioned countable collection sets form 
sets measurable req countable union 
fl notice true iff fl true 
follows fl inductive hypothesis fl measurable set runs 
fact simple extension argument induction shows measurable fl 
define formula define formula fl gamma fl 
easy see true point iff true 

induction hypothesis holds subformulas preceding paragraph shows set measurable countable union 
proposition standard assignments satisfying agent point set partitioned sets form proof suppose standard assignments satisfying inclusive uniform union furthermore uniform sets equal disjoint partitioned sets form proposition synchronous system consistent standard assignments satisfying agents points measurable subsets particular measurable subset js proof fix agent time point ta ra xa set 
exist subset xa proj 
loss generality assume replace measurable req guarantees measurable 
consist time points consistent assignments synchronous system proj proj proj shows measurable subset 
part follows measurable subset restricted standard assignments know state generated arguments similar proof proposition show 
tracing definitions see js proposition synchronous system facts agents points rule bet ff tree safe iff bet ff tree safe proof post standard probability assignments satisfying post sample space tree partitioned sample spaces tree tree tree measurable subset tree proposition 
law conditional expectation states jtree tree summation taken sets form tree partitioning tree post part proposition prove jtree tree tree tree suppose bet ff tree safe tree points agent considers possible implies points agent considers possible bet ff tree safe conversely suppose bet ff tree safe tree point agent considers possible strategy identical points points tree offering payoff 
notice strategy function local state 
uses strategy best points break tree 
identical tree tree choice tree disjoint union tree sets tree follows bet ff tree safe theorem facts measurable respect agents points rule bet ff safe iff ff 
proof consider evaluation tree ff arbitrary points strategies local state points tree function local state offers payoff fi bet points tree bet ff points tree agent accepts bet points tree rejects bet points depending fi ff 
rejects obviously 
accepts profit fi gamma points satisfying gamma points fi tree gamma 
notice measurable respect guaranteed tree measurable subset tree tree defined 
suppose ff 
means tree ff points agent considers possible point agent considers possible strategy fi tree gamma ff ff gamma fi ff 
follows bet ff safe suppose ff 
means tree ff point agent considers possible strategy offering payoff ff bet points considers possible points tree 
follows 
ff ff gamma strategy point agent considers possible bet ff safe theorem synchronous system consistent standard assignment determines safe bets determines safe bets phi sufficiently rich proof theorem tells determines safe bets theorem proved follows determines safe bets 
proves part 
prove part suppose means tree agent point easy construct transition probability assignment inducing distribution runs satisfying 
tree 
see notice tree implies tree time point set points global state tree state generated standard 
causing assign high probabilities edges path root global state guarantee 
guarantees tree disjoint tree gamma 
tree desired 
probability assignment induced probability assignment induced furthermore set points global state fact true precisely points 
phi sufficiently rich follows phi phi closed negation follows phi 
standard inclusive state generated follows tree false points contained tree easy see ff gamma ff tree tree gamma tree furthermore uniform standard set equal disjoint sets follows ff 
hand 
tree easy see ff ff strategy offers payoff ff points suppose uses rule bet ff 
clearly ff ff gamma tree gamma set 
tree ff gamma ff gamma gamma ff ff gamma ff gamma gamma ff means bet ff safe note universal quantification transition probability assignments crucial proof 
fact false points intersection tree proof shows necessary condition ff imply bet ff safe measure runs equal measure runs tree fact sufficient condition 
may possible construct set tree satisfying condition way satisfy condition take tree theorem synchronous system consistent standard assignments satisfying fact agent point ff fi ff fi ff fi implies ff fi exist fact agent point ff fi ff fi ff ff fi fi phi sufficiently rich phi 
proof prove part 
suppose ff fi 
means ff fi points 
choose point 
consistent uniform satisfy set disjoint union collection probability spaces measurable subset follows disjoint union 
easy computation shows 
proposition shows obtained conditioning follows sup sup sup combining preceding statements ff ff similar argument shows fi 
arguments hold follows ff fi 
prove part 
follows contains disjoint sets agent points fact true precisely points set points global state 
notice standard state generated contained disjoint phi sufficiently rich phi phi 
ae fact holds probability respect probability spaces determined proposition tells obtained conditioning easy see holds probability ff gamma respect probability ff gamma respect easy see ff ff 
follows ff ff 
hand holds probability respect probability spaces determined fact holds probability gamma ff respect probability gamma ff respect ff ff gamma ff gamma ff setting fi gamma ff follows fi fi 
proposition post ff fi iff pts ff fi fact agent point proof recall fixed class adversaries type adversary second type agent bets 
consider adversary pts third type mapping agent point set points defined follows run passing tree choose point tree satisfying point exists choose arbitrary point tree points tree satisfy 
easy see set runs pass tree run passes iff true points contained tree follows tree inner measure respect tree respectively 
hand consider arbitrary adversary pts mapping set contained tree 
suppose run passes 
follows definition hold point tree contain precisely point pass 
follows inner measure inner measure infimum pts taken adversaries pts precisely pts observed pts post tree equal 
similar construction shows supremum pts taken adversaries pts precisely post tree 
statements true points agent considers possible pts ff fi iff post ff fi 
discussion appendix discuss issues related observations 
need protocols computer scientist point view quite natural assume agents system follow kind protocol protocols quite standard probability theory literature 
interestingly shafer observes sha necessary think terms protocols sense conditioning agent knows done post argument reproduce freund puzzle see fre sha 
consider deck cards ace hearts 
fair shuffle deck cards dealt probability holds 
notice denote events holds ace ace ace hearts respectively pr pr pr pr pr pr suppose says holds ace 
conditioning information computes probability holds pr ajb result learning holds ace probability holds increases 
suppose says holds ace 
conditioning additional information computes probability holds pr ajc result learning holds ace holds ace probability holds increases 
similarly pr ajd 
second computation reasonable 
learns knows ace ace hearts 
learns knows definitely ace 
reasonable probability places event holds increase simply result learning 
just reasonable argue information ace useless probability shouldn change hearing holds 
shafer points right way update probability depends protocol agents 
agents agreed reveal held ace held ace increase reasonable says holds ace learning hold ace causes probability holds go learning hold ace probability go 
hand agents protocol reveals ace reveals suit holds choosing hearts random probability change result hearing holds ace 
leave reader construct computation trees corresponding protocols described check post get right probabilities case 
key point need protocol completely specified order appropriately compute conditional probabilities 
safe bets facts recall statement theorem says measurable facts determines safe bets condition measurability required order expectation definition safe bet sense 
remember bet ff safe shafer mention point need assume chooses hearts random holds crucial 
example suppose tells holds ace hearts holds 
case probability holds decrease says holds ace 
tree ff nonnegative points agent considers possible strategies computed proof theorem fi gamma fi payoff offered tree 
order defined measurable subset means measurable 
fact theorem holds facts give meaningful definition expectation events 
intuition inner outer measures measure space give upper lower bounds probability measurable set course bounds equal actual probability 
precise classical result hal says extends agree sets 
bounds described inner outer measure attainable subsets probability space extending similar result holds case outer measure 
want extend ideas expected value 
precisely define notions inner expected value outer expected value random variable give respectively lower upper bounds expected value extend measure space measurable 
requires general special case takes values done straightforward way 
values taken define inner outer expectations random variable 
hard show definitions agree expected value sets measurable values attainable extend probability space right way sets measurable 
notice random variable interested fact takes values depending true false 
applying definitions get fi gamma gamma fi gamma gamma gamma fi gamma looks similar formula computed measurable facts 
paragraphs proof theorem formula easy see rest proof holds theorem true inner expectation place expectation definition safe bet 
acknowledgments moshe vardi attiya adam grove daphne koller number attendees summer workshop bounded rationality including robert aumann ben dov samet stimulating discussions 
anonymous referees detailed reading comments 
second author supported ibm graduate fellowship part national science foundation ccr office naval research contract defense advanced research projects agency darpa contract 
author attendance workshop bounded rationality supported nsf iri stanford university 
bg blackwell 
theory games statistical decisions 
john wiley sons new york 
fh fagin halpern 
uncertainty belief probability 
computational intelligence 
fh fagin halpern 
reasoning knowledge probability 
journal acm 
fhm fagin halpern megiddo 
logic reasoning probabilities 
information computation 
fre freund 
puzzle paradox 
american statistician 
fz fischer zuck 
relative knowledge belief extended 
technical report yaleu dcs tr yale university 
fz fischer zuck 
reasoning uncertainty fault tolerant distributed systems 
technical report yaleu dcs tr yale university 
fz fischer zuck 
uncertain knowledge distributed systems 
technical report yaleu dcs tr yale university 
gmr goldwasser micali rackoff 
knowledge complexity interactive proof systems 
siam journal computing 
gra gray 
notes database operating systems 
bayer graham editors operating systems advanced course lecture notes computer science vol 

springer verlag berlin new york 
appears ibm research report rj 
hal 
measure theory 
van nostrand 
hf halpern fagin 
modelling knowledge action distributed systems 
distributed computing 
preliminary version appeared proc 
th acm symposium principles distributed computing title formal model knowledge action communication distributed systems preliminary report 
hm halpern moses 
knowledge common knowledge distributed environment 
journal acm 
preliminary version appeared proc 
rd acm symposium principles distributed computing 
hm halpern moses 
guide completeness complexity modal logics knowledge belief 
artificial intelligence 
hmt halpern moses tuttle 
knowledge analysis zero knowledge 
proc 
th acm symp 
theory computing pages 
hv halpern vardi 
complexity reasoning knowledge time lower bounds 
journal computer system sciences 
lew lewis 
guide objective chance 
harper stalnaker pearce editors ifs pages 
reidel dordrecht netherlands 
ls lehmann shelah 
reasoning time chance 
information control 
pag 
cosmic code quantum mechanics language nature 
simon schuster 
pt panangaden taylor 
concurrent common knowledge defining agreement asynchronous systems 
distributed computing 
rab rabin 
probabilistic algorithm testing primality 
journal number theory 
rab rabin 
process mutual exclusion bounded waiting delta log valued shared variable 
journal computer system sciences 
sha shafer 
conditional probability 
international statistical review 
ss solovay strassen 
fast monte carlo test primality 
siam journal computing 
van van fraassen 
temporal framework conditionals chance 
harper stalnaker pearce editors ifs pages 
reidel dordrecht netherlands 
var vardi 
automatic verification probabilistic concurrent finite state programs 
proc 
th ieee symp 
foundations computer science pages 

