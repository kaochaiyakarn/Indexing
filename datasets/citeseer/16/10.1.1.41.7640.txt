traffic phase effects packet switched gateways sally floyd van jacobson lawrence berkeley laboratory road berkeley ca floyd ee lbl gov van ee lbl gov summary traffic existing packet networks highly periodic periodic sources real time speech video rate control window flow control protocols periodic cycle equal connection roundtrip time network bandwidth limited tcp bulk data transfer 
control theory suggests periodicity resonate strong non linear interaction deterministic control algorithms network gateways 
define notion traffic phase packet switched network describe phase differences competing traffic streams dominant factor relative throughput 
drop tail gateways tcp ip network strongly periodic traffic result systematic discrimination connections 
demonstrate earlier version appeared computer communication review april 
supported director office energy research scientific computing staff department energy contract 
de ac sf 
gateway congestion control algorithms non existent particularly poorly behaved algorithm universal gateway output queue full deterministically drops newly arriving packet 
refer algorithm drop tail examine mis behavior detail 
behavior simulations theoretical analysis 
discrimination eliminated addition appropriate randomization network 
particular analysis suggests simply coding gateway drop random packet queue overflow dropping tail sufficient 
claim random drop gateways solve problems drop tail gateways 
biases bursty traffic long roundtrip time connections shared droptail random drop gateways 
correcting bursty traffic bias led investigate different kind randomized gateway algorithm operates traffic stream queue 
preliminary results show random early detection gateway newly developed gateway congestion avoidance algorithm corrects bias bursty traffic 
roundtrip time bias tcp ip networks results tcp window increase algorithm gateway dropping policy briefly discuss changes window increase algorithm eliminate bias 
key words congestion control phase effects random drop gateways part presents fundamental problems resulting interaction deterministic gateway algorithms highly periodic network traffic 
define notion traffic phase periodic traffic show phase effects result performance biases networks network simulations 
show gateways appropriate randomization random drop gateways eliminate bias due traffic phase effects 
second part discusses biases bursty traffic biases connections longer roundtrip times reported networks drop tail random drop gateways 
show bias results gateway congestion recovery algorithms second bias results tcp window modification algorithm 
show biases avoided modifications gateway tcp window modification algorithm respectively 
gateway algorithms congestion control avoidance frequently developed assuming incoming traffic random probability distribution 
real network traffic bulk data transfer shown strongly periodic structure 
particular connection number outstanding packets controlled current window 
sink receives data packet immediately sends acknowledgment ack packet response 
source receives ack immediately transmits data packet 
sink gateway ftp source periodic traffic 
roundtrip time including queueing delays connection traffic period 
current network traffic bulk data transfer total amount data large compared bandwidth delay product throughput limited network bandwidth interactive transfers small compared product infrequent relative roundtrip time 
refer ftp traffic concerned periodic structure 
refer interactive traffic telnet traffic poisson sources model 
random traffic mean traffic sent random time telnet source 
consider ftp traffic single bottleneck gateway backlog bottleneck 
packets direction size output packet completions occur fixed frequency determined time transmit packet output line 
example schematic packet flow departure arrival packet flow phase simple packet stream 
packets leaving bottleneck gateway size transmission time seconds 
source sink source pipe completely full roundtrip time including queueing delay packets transit 
packet departs gateway time results new packet arrival time time take trip loop 
queue length decremented topologies consist high speed lan lower speed wan reasonable approximation reality bottleneck lan wan transition current gateways rarely congestion avoidance sizable queue 
packet departures incremented packet arrivals 
gap mod departure packet gateway queue arrival packet queue 
call gap phase conversation relative gateway 
phase defined formally section 
connection window just large fill queue phase simply average time particular connection leaves queue 
connection filled gateway queue probability random telnet packet successfully grab created departure forcing gateway drop packet arrives bulk data connection simply function physical propagation time small topology conversation endpoint changes gateway completely shut give preference 
section describes detail 
phase effects common example suggests 
deterministic gateway congestion management mechanism driven backlog phase effects cause significant bias 
concentrate traffic phase effects networks drop tail gateways tcp congestion management source executes bsd tcp congestion control algorithm jacobson 
section demonstrates phase effects iso ip tp network decbit congestion management ramakrishnan jain 
type periodic traffic rate controlled real time sources exhibits phase effects similar described 
effects described digital teletraffic literature general context 
example concerns periodicity packetized voice traffic voice source alternates talk silences ramaswami willinger 
small random number packets mean transmitted talk spurt packets arrive multiplexer separated fixed time interval 
packet stream conversations multiplexed slotted channel finite buffer 
authors show packet voice spurt encounters full buffer high probability packet voice spurt encounters full buffer 
packets arriving full buffer dropped results successive packet losses single voice spurt 
fact model position strategy dropping packets results successive packet losses voice spurt 
endings talk break periodic pattern packet drops periodic pattern quickly reestablished 
random drop strategy works distributing packet losses active conversations ramaswami willinger 
half contains simulations showing bias due traffic phase networks drop tail gateways analyzes bias 
behavior small deterministic simulation network necessarily characteristic behavior actual network internet 
bias traffic phase effects broken adding sufficient randomization network form random telnet traffic form random processing time nodes 
half shows success random drop gateways eliminating bias due traffic phase effects 
believe pattern bias discussed noteworthy appear actual networks shows frequently network simulations 
simulations measurement studies networks drop tail gateways sensitive small changes network parameters 
phase interaction sufficiently large compared effects throughput simulations designed care interpreted carefully avoid bias 
second half addresses criticisms random drop gateways literature 
tcp ip networks drop tail random drop gateways share bias bursty traffic bias connections longer roundtrip times 
second half suggests bias bursty traffic corrected gateway detects incipient congestion probability dropping packet particular connection proportional connection share throughput 
shows bias tcp ip networks drop tail random drop gateways connections longer roundtrip times results tcp window modification algorithm 
second half investigates modification tcp window increase algorithm eliminates bias 
modified window increase algorithm increases connection throughput rate pkts sec constant amount second 
contrast current tcp window increase algorithm increases connection window constant amount roundtrip time 
traffic phase effects simulations phase effects section gives results simulations showing discriminatory behavior network drop tail gateways tcp congestion control 
simulations network ftp connections drop tail gateway shared sink 
roundtrip time node packets changed slightly new simulation roundtrip time node packets kept constant 
simulations connections roundtrip time connections receive equal throughput 
roundtrip times differ network preferentially drops packets connections throughput suffers 
behavior function relative phase connections changes small changes propagation time link 
section shows preferential behavior absent simulations appropriate random component queueing delay added roundtrip time packet 
preferential behavior absent simulations random drop drop tail gateways 
sink bandwidth kbps bandwidth kbps gateway ftp source ftp source ms ms simulation network 
simulator version real simulator keshav built columbia nest simulation package bacon extensive modifications bug fixes steven mccanne lbl 
gateways fifo queueing section simulations drop tail queue overflow 
ftp sources packet send send maximal sized packet soon window allows 
sink immediately sends ack packet receives data packet 
source sink nodes implement congestion control algorithm similar tahoe bsd tcp jacobson 
briefly phases window adjustment algorithm 
threshold set initially half receiver advertised window 
connection begins slow start phase current window doubled roundtrip time window reaches threshold 
congestion avoidance phase entered current window increased roughly packet roundtrip time 
window allowed increase receiver advertised window referred maximum window 
tahoe packet loss dropped packet treated congestion experienced signal 
source uses fast retransmit procedure discover packet loss ack packets received acknowledging data packet source decides packet dropped 
source reacts packet loss setting threshold half current window decreasing current window simulator tahoe tcp code directly believe functionally identical 
entering slow start phase 
source uses retransmission timers detect lost packets 
bulk data connection packet loss usually detected fast retransmit procedure retransmission timer expires 
window increase algorithm slow start phase source node transmits data packets ack packet received 
congestion avoidance phase source generally sends data packet ack packet received 
arriving ack packet causes source increase current window source responds sending data packets 
essential characteristic network fast lines feeding slower line 
simulations byte ftp packets byte ack packets 
gateway buffer capacity packets 
parameters propagation delay ms packets node roundtrip time ms absence queues 
gateway takes ms transmit ftp packet slow line window packets sufficient fill pipe 
means connection window greater packets packet gateway queue 
small network intended model realistic network traffic intended simple model exhibiting traffic phase effects 
round trip time ratio node throughput node throughput function node roundtrip time 
results simulations source maximum window packets shown 
source prepared available bandwidth 
dot graph result sec 
simulation run different value propagation delay edge node gateway 
axis gives ratio node node roundtrip time simulation 
axis gives node average throughput second second interval simulation measured percentage maximum possible throughput gateway 
simulations steady state 
round trip time ratio node packet drops node share packet drops 
reached early seconds 
results second interval simulation differ slightly connections started slightly different times 
results evident connection packets send 
shows node share total packet drops second second interval simulation 
simulations node packets dropped simulations node packets dropped 
second interval gateway usually dropped packets 
figures show configuration highly biased values node link delay node gets packet drops available bandwidth 
node delay values cause node receive packet drops cause node bandwidth share drop 
node delay values appear regularly spaced 
section explains detail behavior results precise timing packet arrivals gateway 
gateway takes ms transmit ftp packet congestion packets leave gateway ms structure graph space large throughput dips corresponds ms change node roundtrip time 
shows result making small change delay shared link huge bias character changed completely node gets bandwidth value link delay bandwidth reversal peaks narrower spaced ms 
intervals simulations changed ms ms changes node roundtrip time ms ms simulations sink sends ack packet soon receives data packet 
simulations delayed ack sink current tcp implementations 
respects scenario 
delayed ack sink sets ms timer packet 
round trip time ratio node throughput node throughput phase shift ms 
round trip time ratio node throughput node throughput delayed ack sink 
received 
new packet connection arrives sink timer expires ack packet sent immediately acknowledging packet higher sequence number 
ack packet sent ms timer expires 
shows discriminatory behavior persists simulations delayed ack sink 
remaining simulations sinks send ack packet soon receive data packet analysis case straightforward 
necessary large maximum windows connections get bias 
pattern phase effects remains essentially simulation ftp connections packets 
simulations section small change roundtrip times result large change network performance 
section shows traffic phase effects slightly complex tcp ip networks multiple connections gateways 
simulations section show pattern bias depend particular choice window sizes roundtrip times sink protocols 
simulations show pattern bias depend details tcp transport algorithm bias due phase effects tcp implementation window decreased half decreased packet drop example 
pattern segregation requires network congested gateway occasionally drops packets uses deterministic strategy choosing packet drop packet position gateway queue 
section shows pattern segregation absent network strong mix packet sizes appropriate random component queueing delay added roundtrip time packet 
analysis phase effects section model timing packet arrivals bottleneck gateway define notion traffic phase describe pattern packet arrivals gateway network 
description explain simulation results previous section 
packets node roundtrip time absence queueing delay 
means absence queues node transmits ftp packet ack packet received back node seconds 
network nonempty queue output queue line gateway node 
assume gateway begins transmission ftp packet node time ftp packet arrives sink sink immediately sends ack packet ack packet arrives node node immediately sends ftp packet 
new ftp packet arrives gateway queue exactly seconds old ftp packet left gateway 
discussion assume packet arrives gateway queue bit packet arrives gateway packet leaves gateway gateway begins transmission packet 
absence window decreases exactly seconds node ftp packet leaves gateway node ftp packet arrives gateway 
definitions roundtrip times bottleneck service time queue size transmission time packets node roundtrip time packets node roundtrip time absence queues 
gateway takes seconds transmit ftp packet maximum queue size node node take seconds transmit packet line gateway 
defining model give model gateway behavior network 
model starts time gateway queue occasionally full overflowing 
assume initially window connection fixed period fixed windows thought lasting roundtrip time connection allowed increase window 
assume gateway queue empty ftp packets size 
model concerned windows reach initial sizes 
model specifies source increase window immediately arrival ack packet 
source receives ack packet immediately transmits ftp data packet increases current window 
mild abuse terminology say ftp packet increased source window 
output line free seconds source sends second data packet 
additional packet gateway queue occasionally reached size additional packet queue point fills packet arrives full queue dropped 
pattern packet arrivals gateway determines packet dropped 
definitions service intervals phases describe timing packet arrivals gateway 
seconds gateway processes packet decrements output queue 
number equals size ftp data packet divided speed output line 
queueing theory terminology new service interval begins time gateway processes new packet 
time gateway begins transmitting packet node ftp packet node arrives gateway exactly seconds 
new packet arrives exactly mod seconds service interval 
similarly gateway transmits node packet node packet arrives gateway seconds mod seconds service interval 
time intervals give phases connections 
notice node node packet arrive gateway service interval node packet arrives gateway node packet 
section gives intuition explaining behavior model appendix contains formal proofs 
cases discussed correspond node roundtrip time equal slightly slightly greater node roundtrip time node roundtrip time cases value mod node roundtrip time different cases result value changes 
case case roundtrip times phases 
new packet arrives gateway seconds 
order packet arrivals depends order packet departures roundtrip time earlier 
new arrival increases gateway queue queue decremented seconds service interval 
line shows service intervals gateway 
line shows node packets arriving gateway line shows node packet arrivals line shows queue 
axis shows time line axis shows queue size 
mod positive remainder dividing service intervals node packet arrivals node packet arrivals queue size phase packet arrivals gateway informal argument assume simplicity time nodes transmit packets output line zero 
node increases window packets node arrive gateway back back 
second packet arrives full queue dropped 
equal roundtrip times node increases window packet node dropped gateway 
case consider network node roundtrip time slightly smaller assume roundtrip time smaller bottleneck service time 
periodic processes slightly different periods 
packet arrivals shown 
labels line explained proofs appendix 
longer true exactly packet arrives gateway service interval 
packets node arrive slightly earlier arrival time 
node packet arrives gateway node packet packets arrive service interval 
service intervals node packet arrivals node packet arrivals queue size blank node node double blank phase packet arrivals gateway service interval node node packet arrival node packet arrives time followed time node packet 
period windows fixed queue occasionally reaches size node packets increase queue size result regardless connection increases window gateway responds dropping packet node 
node increases window additional node packet arrives full queue dropped 
node increases window additional node packet increases queue size node packet arrives gateway dropped 
claim describes behavior detail appendix 
case similar case occurs roundtrip time slightly greater assume roundtrip time larger bottleneck service time 
packet arrivals shown 
node packet arrives gateway node packet packets arrive service interval 
period windows fixed queue occasionally reaches size node packets cause gateway queue increase connection window increased gateway drops node packet 
service intervals node packet arrivals node packet arrivals queue size phase packet arrivals gateway slight change node roundtrip time pattern packet arrivals gateway change completely 
network change unbiased behavior dropping packets particular connection 
pattern packet arrivals slightly complex differ performance results similar 
claims appendix describe behavior model roundtrip times differ bottleneck service time discussed cases 
range gateway drops node packets followed range gateway drops node node packets followed range gateway drops node packets 
claims appendix describe pattern packet drops roundtrip times differ gateway drops node packet node increases window gateway drops node packet node increases window 
definitions drop period 
model described concerns drop period simulation period begins queue reaches size max ends connections reduces window decreasing rate packets arriving gateway 
drop period similar congestion epoch defined shenker 
maximum windows reached queue reaches size max takes roundtrip time node increases window packet dropped 
takes roundtrip time rate packets arriving gateway decreased 
drop period lasts roundtrip times 
simulations node packets arrive gateway early current service interval current service interval 
simulations node packets arrive gateway quite late current service interval 
case wide range roundtrip times packets node arrive gateway earlier service interval node packets forcing disproportionate number drops node packets 
simulations delayed ack sink proofs section longer hold 
case ack packets delayed sink ms simulations delay happens integer multiple bottleneck time simulations delayed ack sink changes exact pattern packet arrivals gateway node packets arrive gateway fixed time start service interval node packets arrive gateway fixed time start service interval 
pattern segregation changed slightly delayed ack sink segregation varies sharply function roundtrip times 
traffic phase effects observed simulations delayed ack sink delay integer multiple phase effects decbit congestion avoidance section demonstrate phase effects iso tp network decbit congestion avoidance ramakrishnan jain 
decbit congestion avoidance scheme gateway uses congestion indication bit packet headers provide feedback congestion network 
packet arrives gateway gateway calculates average queue length busy idle period plus current busy period 
gateway busy transmitting packets idle 
average queue length greater gateway sets congestion indication bit packet header arriving packets 
source uses window flow control updates window roundtrip times 
half packets window congestion indication bit set window decreased exponentially 
window increased linearly 
shows results simulations network 
node 
round trip time ratio node throughput node throughput decbit scheme 
roundtrip time varied varying 
roundtrip time node packets ms simulations implementation decbit scheme real simulator keshav 
simulation run seconds 
represents second interval excluding second interval dot showing node throughput interval 
line shows node average throughput 
simulations roundtrip times differ bottleneck service time total throughput nodes close link bandwidth 
simulations roundtrip times differ bottleneck service time throughput node similar throughput node total throughput roughly link bandwidth 
case gateway drops packets generally drops packets node node 
traffic phase effects simulations node node roundtrip times differ ms bottleneck service time 
roundtrip times scenario decbit congestion avoidance scheme avoids phase effects simulations tcp drop tail gateways 
roundtrip times differ bottleneck service time network bias favor connection slightly longer roundtrip time 
node node roundtrip times differ bottleneck service time current windows pipe size node node packets interleaved gateway 
gateway transmits window node packets followed window node packets 
paragraphs give insight phase effects exhibited decbit congestion avoidance scheme conditions 
case shows packet arrivals gateway roundtrip times equal 
assume roundtrip time earlier gateway transmitted window node packets immediately followed window node packet arrivals node packet arrivals queue size service intervals packet arrivals gateway node packets 
small window sizes chosen illustration purposes 
packets leave gateway regular intervals seconds roundtrip time assuming window changed packets arrive gateway regular intervals seconds 
line shows node packet arrivals line shows node packet arrivals 
packet numbers shown packet 
gateway idle packet arrives gateway 
packet immediately serviced queue goes size current busy period begins 
decbit algorithm queue considered size packet transmitted output line 
gateway takes seconds transmit packet output line line shows second service intervals packets 
packets arrive gateway seconds 
line shows queue size 
packet average queue size current busy period 
node packet arrivals node packet arrivals queue size service intervals packet arrivals gateway case shows packet arrivals gateway roundtrip time bottleneck service time 
packets node arrive gateway followed seconds packets node 
packet packet average queue size current busy period 
packet average queue size average queue size current busy period increases packet number increases 
gateway decision set congestion indication bit packet average queue size busy idle cycle average queue size current busy cycle 
gateway sets congestion indication bit packet busy cycle gateway set congestion indication bit succeeding packets busy cycle 
node packets congestion indication bit set node packets 
result node node decrease current window 
intention consider traffic phase effects occur actual networks 
intention show traffic phase effects occur unexpected ways packet switched networks network simulations periodic traffic deterministic gateway driven gateway backlog 
phase effects section similar unfairness observed testbed running decbit congestion scheme competing connections wilder 
behavior decbit congestion scheme differs behavior tcp drop tail gateways part schemes different methods detect congestion network 
tcp ip network drop tail gateways detects congestion packet dropped gateway shows sensitive exact timing packet arrivals gateway 
network decbit congestion avoidance scheme detects congestion computing average queue size period time 
sensitive exact timing packet arrivals gateway 
section shows phase effects avoided simulations tcp random drop gateways drop tail gateways 
section briefly discuss performance tcp ip networks random early detection gateways similar gateways decbit scheme detect congestion computing average queue size 
phase effects larger tcp ip networks section show traffic phase effects tcp ip networks connections multiple gateways 
phase effects networks connections somewhat complicated phase effects networks connections attempt analysis 
section discuss network multiple connections multiple gateways change propagation delay edge network significantly changes throughput connection different part network 
sink bandwidth kbps bandwidth kbps ftp source ftp source ms sink ftp source ms ms ms ms ms source sources gateways simulation network multiple gateways 
node node round trip time ratio node throughput node throughput function node roundtrip time 
shows network connections multiple gateways 
shows throughput node propagation delay varied varying node roundtrip time 
node throughput plotted percentage maximum possible throughput gateway 
changing node roundtrip time changes phase node packet arrivals gateway 
changes throughput node nodes 
network exhibits significant traffic phase effects connections 
adding telnet traffic section explore extent patterns bias persist tcp ip networks presence randomly timed telnet traffic 
simulation network telnet nodes send fixed size packets random intervals drawn exponential distribution 
section show bias due traffic phase effects strongest packets congested gateway queue size 
simulations section show significant bias remains roughly packets byte telnet packets roughly packets byte telnet packets 
packets byte telnet packets bias due traffic phase effects largely eliminated 
means traffic phase effects observed networks simulations strong mix packets sizes congested gateway 
second half shows traffic phase effects observed network random component roundtrip time queueing delay large bottleneck service time 
telnet ftp ftp telnet telnet sink bandwidth kbps bandwidth kbps bandwidth kbps simulation network telnet ftp nodes 
shows simulation network ftp telnet nodes 
delays edge set absence queues packets node roundtrip time network 
shows results simulations telnet node sends average byte packets second 
meant reflect realistic sizes telnet packets simply add small number randomly arriving byte packets network 
simulations roughly packets telnet nodes 
results deterministic set parameters show results second periods longer simulation 
dot gives node average throughput second period simulation 
round trip time ratio node throughput node throughput byte telnet packets packets 
round trip time ratio node throughput node throughput byte telnet packets packets 
solid line gives average throughput node averaged simulations 
shows results simulations roughly packets telnet nodes 
shows discrimination roundtrip ratios simulations roughly packets gateway byte telnet packets 
results different telnet node sends byte packets byte packets 
roughly packets gateway byte telnet packets pattern discrimination holds 
simulations roughly packets gateway byte telnet packets pattern bias largely broken 
packets gateway queue size gateway queue requires time transmit packet 
case congestion ftp packet node arrives gateway fixed time mod start service interval fixed phase relationships 
round trip time ratio node throughput node throughput byte telnet packets packets 
longer hold gateway queue contains packets different sizes 
section suggests phase effects nondeterministic network strong mix packet sizes 
node processing times simulations described far deterministic 
node charged zero seconds simulation time cpu time process packet 
node spends random time processing packet 
case roundtrip time packet random component apart time waiting queues 
helps break fixed pattern packet arrivals gateway 
simulations source node uses time uniformly chosen zero half bottleneck service time prepare ftp packet ack packet received pattern phase effects changed somewhat 
simulations source node uses time uniformly chosen zero bottleneck service time prepare ftp packet ack packet received pattern phase effects largely eliminated 
general goal network simulations explore properties network behavior unmasked specific details traffic phase effects useful technique add random packet processing time source nodes ranges zero bottleneck service time 
shows pattern discrimination node node time uniformly chosen ms half bottleneck service time prepare ftp packet ack packet received 
shows results simulations source node requires time uniformly chosen ms bottleneck service time prepare ftp packet 
packet arrives gateway random time respect start current service interval 
shows pattern segregation muted 
simulations roundtrip times differ bottleneck service time segregation completely eliminated 

round trip time ratio node throughput node throughput random processing time ms 
round trip time ratio node throughput node throughput random processing time ms parameters little interleaving node node packets gateway 
phase effects random drop gateways section shows random drop gateways eliminate network bias due traffic phase effects 
random drop gateways packet arrives gateway queue full gateway randomly chooses packet gateway queue drop 
goal randomized gateway probability gateway drops packet particular connection proportional connection share total throughput 
show sections random drop gateways achieve goal circumstances 
random drop gateways easily implemented low overhead stateless mechanism samples range packets deciding packet drop 
probability gateway drops packet particular connection proportional connection share packets gateway queue queue overflows 
consider gateway maximum queue packet arrives full queue gateway uses pseudo random number generator choose pseudo random number 
pseudo random numbers chosen advance 
gateway drops th packet gateway queue 
consider queue overflows node packet arrives gateway immediately node packet 
random drop gateways node packet node packet equally dropped packets queue time 
variant investigated random drop gateway measures queue bytes packets 
variant packet probability dropped proportional packet size bytes 
round trip time ratio node throughput node throughput random drop gateways 
shows results simulations random drop gateway network shown 
simulations differ simulations network uses random drop droptail gateway 
dot represents throughput node second interval simulation 
node roundtrip time second simulation intervals shown 
solid line shows average throughput node roundtrip time ratio 
shows random drop eliminates bias due traffic phase effects 
simulations roughly packet drops second interval simulation 
queue contains equal numbers packets node node time overflows probability node receives packet drops roughly 
case statistical nature random drop algorithm protection systematic discrimination particular connection 
random drop gateways possible gateway mechanism correcting bias caused traffic phase effects 
pattern discrimination controlled fair queueing gateways demers example gateway maintains separate queues connection 
randomization allows random drop gateways break bias caused traffic phase effects stateless low overhead algorithm easily implemented scales networks connections 
simulations simulations contents gateway queue overflow fairly representative average contents gateway queue 
possible construct simulations random drop gateways case 
simulations connections roundtrip time maximum windows pipe size gateway transmits window node packets followed window node packets shenker 
case mechanism break clumps packets contents gateway queue overflow seldom representative average contents 
randomization random drop gateways sufficiently powerful break patterns packet drops 
bias telnet nodes section examine possible discrimination telnet nodes network connections roundtrip times 
show discrimination telnet nodes possible networks drop tail gateways 
discrimination affected small changes phase ftp connections maximum queue size bottleneck 
show random drop gateways eliminates discrimination telnet traffic 
sink bandwidth kbps bandwidth kbps gateway ftp nodes telnet node window window window delay ms ms simulation network ftp telnet nodes 
simulation network telnet connection ftp connections maximum windows ranging packets 
telnet connection sends average packet second average packets seconds simulation 
connections roundtrip time 
solid random drop dashed drop tail max queue size telnet throughput telnet throughput set 
solid random drop dashed drop tail max queue size telnet throughput telnet throughput set compare simulations random drop drop tail gateways 
simulations set ms roundtrip time absence queues ms simulations set ms set simulations run maximum queue size ranging packets 
choice parameters second simulations run 
shows telnet node average throughput second period simulation 
solid line shows telnet node average throughput random drop gateways dashed line shows results drop tail gateways 
simulations set maximum queue packets ftp connections fill don overflow gateway queue 
ftp packets arrive gateway ms start current service interval current service interval completed 
drop tail gateways telnet packet arriving gateway random time chance arriving full queue dropped 
parameters telnet node easily shut 
maximum queue greater packets packets dropped telnet node throughput limited rate telnet packets generated 
maximum queue packets fixed set parameters throughput telnet node vary widely simulation 
simulations drop tail gateways ftp connections get shut allowing queue fill shutting telnet node 
simulations ftp connections continually adjust windows result packet drops queue full 
simulations telnet node throughput relatively high 
simulations set roundtrip time absence queues ms ftp packets arrive gateway current service interval completed 
drop tail gateways maximum queue size packets randomly arriving telnet packets chance arriving gateway ftp packet dropped 
simulations ms telnet nodes shut regardless maximum queue size 
simulations show drop tail gateways possible telnet nodes shut ftp connections 
behavior affected small changes network parameters behavior change drastically simulation fixed set parameters 
simulation showing telnet connections shut ftp connections demers example interpreted sensitivity exact network parameters mind 
throughput telnet node consistently high simulations random drop gateways 
randomization random drop gateways sufficient overcome pattern discrimination telnet nodes 
shared biases random drop drop tail gateways half showed networks drop tail gateways sensitive traffic phase effects traffic phase effects largely eliminated random drop gateways 
second half discusses bias bursty traffic bias connections longer roundtrip times shared networks drop tail random drop gateways 
bias bursty traffic eliminated random early detection gateways probability packet dropped connection proportional connection share throughput 
bias connections longer roundtrip times eliminated modified tcp window increase algorithm connection increases throughput rate pkts sec constant amount second 
previous research random drop gateways reported benefits random drop gateways drop tail gateways hashem include fairness late starting connections slightly improved throughput connections longer roundtrip times 
simulations network connections local long distance large maximum windows shared gateway long distance connection receives higher throughput random drop gateways drop tail gateways 
cases local connection receives higher throughput long distance connection 
reported shortcomings random drop algorithm hashem include preferential treatment reported connections shorter roundtrip times higher throughput connections larger packet sizes failure limit throughput connections aggressive tcp implementations 
shortcomings shared networks drop tail gateways 
early random drop gateways investigated mechanism congestion avoidance congestion control hashem 
implementation early random drop gateways gateway drops packet fixed probability queue length exceeds certain level 
early random drop gateways broader view traffic distribution random drop gateways hashem suggests better chance random drop gateways targeting aggressive users 
hashem suggests early random drop gateways correct tendency drop tail random drop gateways synchronously dropping connections congestion 
hashem recommends additional early random drop gateways 
random drop gateways general 
random drop performed better earlier gateway policy drop tail approach 
vulnerable performance biases tcp ip networks hashem 
examine performance biases detail sections 
zhang uses simulations evaluate random drop gateways zhang 
zhang concludes random drop correct drop tail problem uneven throughput uneven path lengths random drop version early random drop successful controlling misbehaving users 
zhang remarks simulations bias traffic longer roundtrip times results period congestion connections shorter path reopen control window quickly longer path zhang 
examine problem section 
random drop drop tail gateway algorithms compared measurement study network local long distance traffic congested gateways 
topologies explored congested gateways respectively 
topology longer connection shorter connections maximum window packets 
topologies throughput longer connection better random drop gateways topologies throughput better drop tail gateways 
cases connections longer roundtrip times small windows received disproportionate number dropped packets 
section explains results interpreted keeping traffic phase effects mind 
reports random drop congestion recovery improves fairness homogeneous connections bottleneck limited value 
gateway congestion control survey ietf performance congestion control working group ramakrishnan discusses research results random drop gateways 
suggestion random drop congestion recovery avoided scheme groups traffic roundtrip time ramakrishnan 
suggest comparison drop tail gateways random drop gateways offer significant advantages significant disadvantages 
demers briefly compare fair queueing gateways random drop gateways demers 
report random drop gateways greatly alleviate problem segregation drop tail gateways random drop gateways provide fair bandwidth allocation control ill behaved sources provide reduced delay low bandwidth conversations 
comparison random drop gateways rate gateway algorithms fair queueing examination traffic phase effects fair queueing gateways scope 
bursty traffic objection random drop gateways literature random drop gateways biased connections longer roundtrip times 
papers mention bias shared drop tail gateways 
section examines bias random drop drop tail gateways bursty traffic 
section examines bias tcp window increase algorithm bursty traffic mean traffic connections current window small compared bandwidth delay product connections amount data generated roundtrip time small compared bandwidth delay product 
connections long roundtrip times large maximum windows 
reason examine bias drop tail gateways bursty traffic due part traffic phase effects bias drop tail gateways change significantly small changes network parameters 
emphasize danger interpreting results simulations measurement studies drop tail gateways considering effect small changes network parameters network performance 
main reason compare bias drop tail random drop gateways bursty traffic poor performance random drop gateways connections long roundtrip times cited reason avoid random drop gateways mixed traffic 
section shows bias bursty traffic severe drop tail gateways parameters severe random drop gateways parameters 
general bias random drop gateways bursty traffic worse bias drop tail gateways 
case bias occurs contents gateway queue queue overflows necessarily representative average traffic queue 
sink bandwidth kbps bandwidth kbps gateway ftp sources ms delay ms delay ms simulation network ftp connections 
consider simulations network maximum window packets connection 
node maximum window roundtrip time throughput limited packets second 
node long roundtrip time small window receives small fraction total throughput 
configuration node small window packets node arrive gateway loose cluster 
mean considering node packets long interarrival time smaller interarrival times 
gateway queue overflow cluster node packets arrives gateway random drop gateways node packets disproportionate probability dropped 
figures show results simulations network short ftp connections long ftp connection 
simulations solid random drop dashed drop tail max queue size node throughput node throughput set 
solid random drop dashed drop tail max queue size node throughput solid random drop dashed drop tail max queue size node throughput node throughput set run drop tail random drop gateways range queue sizes slightly different choices node roundtrip time 
simulations set ms node packets arrive gateway start service interval 
simulations set ms node packets arrive gateway service interval 
drop tail gateways throughput node affected small changes phase node packets case random drop gateways 
node roundtrip time differs bottleneck service time sets simulations 
cases node roundtrip time times larger roundtrip times 
set parameters simulation run seconds 
mark represents second period excluding second period 
axis shows queue size axis shows node average throughput 
solid line shows average throughput random drop gateways dashed line shows average throughput drop tail gateways 
random drop drop tail node throughput node drops random drop drop tail node throughput node drops packet drops vs throughput node sets node packets transmitted loose cluster queue overflow contains packets node 
random drop gateways node packets disproportionate probability dropped queue contents queue overflows representative average queue contents 
drop tail gateways maximum queue greater probability node packet arrives full queue depends precise timing packet arrivals gateway 
simulations set node packets arrive gateway start service interval packets arrive full queue 
simulations set node packets arrive service interval dropped 
drop tail gateways node receives better throughput simulations set note random drop gateways node completely shut 
simulations drop tail gateways maximum queue node completely shut 
queue size gateway queue full overflowing packets node arrive 
drop tail simulations set node packets dropped arrive gateway 
drop tail simulations set explanation slightly complicated results similar 
case node packets dropped arrive gateway somewhat random time timeout 
general running simulations measurement studies drop tail gateways small deterministic networks wise remember small change traffic phase level congestion result large change performance results 
results section inconsistent earlier results show particular network congested gateway throughput longer connection higher drop tail gateways random drop gateways 
summary set parameters drop tail gateways give better throughput node sets parameters random drop gateways give better throughput node 
performance problems nodes long roundtrip times small windows cured significantly worsened random drop gateways 
shows drop tail random drop gateways node receives disproportionate share packet drops 
chart left shows results simulations set chart right shows simulations set mark represents result second simulation 
axis shows node average throughput percentage total throughput gateway axis shows node average number packet drops percentage total number packet drops 
dashed line shows position points node share drops equals node share throughput 
figures show simulations packet drops second simulation 
tor simulations set drop tail gateways node gets throughput packet drops 
unfair behavior definition unfairness 
throughput bursty traffic improved gateways random early detection gateways detect incipient congestion early bias connections bursty traffic 
implementation random early detection gateways gateway computes average size output queue exponential weighted moving average 
average queue size minimum threshold packets dropped 
average queue size greater maximum threshold arriving packet dropped ensuring average queue size exceed maximum threshold 
average queue size minimum threshold maximum threshold arriving packet packet dropped probability linear function average queue size 
average queue size equals minimum threshold set zero average queue size equals maximum threshold set order avoid dropping packets quick succession gateway drops packet gateway waits maximum packets allowing packet dropped 
random early detection gateway node transmits packets cluster disproportionate probability having dropped packet 
result simulations random early detection gateways shown ms axis shows minimum threshold packets random early detection gateway axis shows average throughput node 
maximum threshold greater minimum threshold 
throughput node close maximum possible throughput node roundtrip time maximum window 
simulations maximum queue packets simulations drop tail random drop gateways 
shows node percentage total packet drops minimum threshold node throughput node throughput random early detection gateways node throughput node drops packet drops vs throughput node random early detection gateways 
plotted node percentage total throughput 
node gets throughput zero packet drops 
simulations suggest problems reduced throughput connections long roundtrip times small windows cured gateway probability packet drop connection roughly proportional connection fraction throughput 
interactions window adjustment algorithms bias connections longer roundtrip times large maximum windows networks tcp congestion control similar drop tail ran dom drop gateways 
bias results tcp window increase algorithm gateway packet dropping algorithm 
window modification algorithm bsd tcp absence congestion connection increases window packet roundtrip time 
algorithm attractive simple time invariant result throughput increases faster rate connections shorter roundtrip time 
results bias connections longer roundtrip times 
section examines bias discusses possible alternatives current window increase algorithm 
section shows simulations configuration ftp connections shared gateway 
simulations source maximum window equal bandwidth delay product 
simulations node roundtrip time fixed node roundtrip time ranges times node roundtrip time 
node maximum window ranges packets packets 
simulations drop tail gateways shown simulations random drop gateways shown 
axis shows node roundtrip time multiple node roundtrip time 
solid line shows node average throughput dashed line shows node average throughput 
solid node dashed node round trip time ratio throughput node node throughput drop tail gateways 
cluster simulations drop tail gateways varied node roundtrip time ms range consider phase effects 
simulations phase changes significantly affect performance node roundtrip time twice node 
simulations drop tail random drop gateways node roundtrip time increases node throughput decreases significantly 
suggest behavior result tcp window modification algorithms 
shows performance significantly improved random early detection gateways 
simulations random early detection gateways source sink nodes fast recovery algorithm solid node dashed node round trip time ratio throughput node node throughput random drop gateways 
solid node dashed node round trip time ratio throughput node node throughput random early detection gateways 
reno jacobson designed improved performance long high speed links 
fast recovery algorithm packet dropped current window effectively cut half reduced 
simulations selective sinks 
specifies sequential packet received connection highest sequence number received list sequence numbers missing packets 
simulations maximum queue packets minimum threshold average queue size packets maximum threshold packets 
shows random early detection gateways improvements tcp strong network bias favor connections shorter roundtrip times 
moment denote node average roundtrip time including queueing delays 
congestion avoidance phase tcp node window increased roughly packet seconds 
node throughput increased solid node dashed node round trip time ratio throughput node node throughput random early detection gateways modified window increase algorithm 
pkts sec seconds pkts sec second 
packet node dropped node window decreased takes node significantly longer node recover throughput rate 
accounts reduced throughput node 
note node increases window packets roundtrip time constant node increase throughput pkts sec second regardless roundtrip time 
source estimate roundtrip time connection algorithm easily implemented 
shows results simulations connection increases window packets roundtrip time 
simulations differ simulations window increase algorithm respect sets simulations 
simulations fast recovery tcp selective sinks random early detection gateways discriminate bursty traffic 
node node receive roughly half total throughput regardless roundtrip time 
result analyzed detail floyd 
simulation results accord previous analytical results chiu jain 
chiu jain consider linear algorithms increasing decreasing load load considered rate window 
show purely additive increase load gives quickest convergence fairness 
model investigated chiu jain increase occurs fixed time intervals 
network connections different roundtrip times comparable rates comparable windows quite different things 
fairness goal provide comparable rates connections different roundtrip times quickest convergence fairness occur additive increase rate fixed time interval 
accomplished source increases rate pkts sec second constant equivalent connection increasing window packets roundtrip time 
fairness goal allocate equal network resources different connections connection traversing congested gateways uses times resources traversing gateway 
fair long connection get th bandwidth short 
different fairness goals imply different window increase algorithms 
window increase packets roundtrip time example connection increases window packets second increases throughput pkts sec second 
fairness goals connections multiple congested gateways discussed floyd 
open questions concerning alternatives tcp window modification algorithms 
goal connection increase rate pkts sec second choose impact connections large maximum windows increasing window rapidly 
average roundtrip time calculate window increases better average window size averaged long period time measure 
ultimate difficult question meaning fair 
moment section intended suggest current network bias favor connections shorter roundtrip times result tcp window increase algorithm performance random drop drop tail gateways 
examines traffic phase effects networks highly periodic traffic deterministic gateways 
traffic phase effects drop tail gateways result systematic discrimination particular connection 
performance depends phase relationship connections sensitive small changes roundtrip times connections 
discusses extent pattern discrimination persist presence random traffic network presence random cpu processing time 
feel pattern discrimination significant problem current networks nsfnet backbone lightly loaded suffer greatly problem 
believe pattern discrimination significant problem interpretation simulation results measurement studies networks drop tail gateways 
show phase related biases eliminated appropriate randomization gateways 
section recommends goal network simulations explore properties networks drop tail gateways unmasked specific details traffic phase effects useful technique add random packet processing time source nodes ranges zero bottleneck service time 
random drop gateways stateless easily implemented gateway algorithm depend exact pattern packet arrivals gateway 
random drop gateways eliminates pattern bias due traffic phase 
areas networks random drop drop tail gateways give disappointing performance 
includes bias connections longer roundtrip times bias bursty traffic bias traffic multiple gateways inability control misbehaving users 
discussed biases floyd 
aware significant disadvantages random drop gateways comparison drop tail gateways 
contrast earlier reports literature ramakrishnan 
show section bias connections bursty traffic slightly different random drop drop tail gateways 
drop tail gateways performance sensitive small changes traffic phase level congestion 
cases drop tail gateways give better performance bursty traffic cases random drop gateways give better performance 
argument random drop gateways 
research suggests bias connections bursty traffic corrected gateways random early detection gateways provide congestion avoidance congestion control 
suggest section bias connections longer roundtrip times large windows results tcp window increase algorithm 
investigated implications bias traffic multiple congested gateways floyd 
additional research necessary explore possible modifications random early detection gateway identify misbehaving users 
believe random early detection gateways general promising area research 
open questions 
additional research needed evaluate implications competing goals network performance 
maximizing fairness maximizing total throughput examples possibly competing goals 
congestion want existing networks provide throughput connections multiple congested gateways connections congested gateway 
consequences changing window increase algorithm connections longer roundtrip times increased throughput rate connections shorter roundtrip times 
develop mechanism controlling misbehaving users easy implement requires low overhead 
questions require additional research 
focused understanding behavior existing networks network simulations designing high speed networks 
issues discussed concern high speed networks 
issues include randomization gateways cope patterns network traffic design gateways bursty traffic adaptation window modification algorithms networks containing connections broad range roundtrip times 
scott shenker lixia zhang sugih jamin srinivasan keshav steven mccanne chris anonymous referees helpful comments 
impossible steven mccanne extensive modifications simulator 
proofs analysis phase effects appendix give proofs analysis phase effects section 
proofs model packet arrivals bottleneck gateway described section 
assumptions proofs assume transmission time sources bottleneck transmission time true fast lines feed slow line 
simplicity assume phase node packets 
node increases window node packets arrive gateway service interval 
proofs assume gateway queue reaches size gateway queue overflows node node packet arrive gateway queue dropped 
assumption necessarily true connection slow start phase window increment algorithm gateway queue reaches size definitions blank node node double service intervals 
node interval service interval node packet arrival gateway 
node interval service interval node packet arrival 
blank interval service interval packet arrivals double interval service interval node node packet arrivals 
shown 
claim corollary prove slightly node increases window gateway drops packet node 
claim applies simulations roundtrip time ratio 
corollary applies simulations roundtrip time ratio 
shows data line showing roundtrip time ratios covered claim 
round trip time ratio node throughput claims claim claim claim claim node throughput function node roundtrip time 
claim node node increases window gateway drops packet node 
proof phase packet arrivals illustrated 
case consider packet arrivals gateway gateway queue overflows 
service interval blank interval node interval node interval double interval 
double interval node packet arrives time followed time node packet 
service interval gateway transmits node packet node packet arrives gateway service intervals 
service interval gateway transmits node packet node packet arrives gateway service intervals 
double node interval followed node blank interval 
prove assume contradiction interval containing node packet arrival followed interval containing node packet arrival 
roundtrip earlier gateway transmitted node packet node packet time 
possible 
blank node interval followed node double interval 
prove assume contradiction interval node packet arrival followed interval node packet arrival 
roundtrip earlier service interval node node packets transmitted 
violates assumptions model 
blank interval possibly empty sequence node intervals followed double interval followed possibly empty sequence node intervals followed blank interval 
node node interval queue size change 
blank interval queue size decreases double interval queue size increases 
double node interval queue size node packet arrival queue size node packet arrival queue size 
node increases window additional packet increases queue size node packet arrives double service interval queue full gateway drops node packet 
node increases window queue full additional node packet arrives gateway drops additional node packet 
corollary node increases window gateway drops packet node 
proof pattern packet arrivals gateway described claim 
node increases window node packet arrives gateway service interval additional node packet arrives gateway start service interval queue size 
additional node packet increases queue size packet node possibly arriving service intervals dropped gateway 
claim proves roughly node increases window packet node dropped 
claim applies simulations roundtrip time ratio 
claim node increases window gateway drops packet node 
proof phase packet arrivals shown 
case service interval node interval node interval 
arrival packet queue size service interval queue returns size 
node increases window additional packet arrives time original packet dropped 
corollary applies simulations roundtrip time ratio 
parameters corollary shows node increases window gateway drops node packet 
node increases window gateway drops packet pair node packets 
node packets arrive gateway cluster case gateway drop node packet 
corollary node increases window gateway drops node packet 
node increases window gateway drops packet arrives additional node packet 
packet node node 
proof case node increases window packets arrive gateway different service intervals 
claim shows slightly greater node increases window gateway drops node packet 
claim applies simulations roundtrip time ratio 
claim node increases window gateway drops node packet 
proof proof claim similar claim corollary omitted 
corollary applies simulations roundtrip time ratio 
corollary states node increases window gateway drops node packet 
node increases window gateway drops node packet node window increased node packet arrives gateway double interval 
corollary node window increased node packet arrives gateway double interval gateway drops additional node packet arriving gateway 
node window increased gateway drops node packet 
proof case behavior differs claim node window increased node packet arrives gateway double interval 
case additional node packet arrives gateway node packet queue size additional node packet dropped 
claim applies simulations nonnegative integer 
corresponds roundtrip time ratio simulations range node generally receives packet drops 
claim states node increases window gateway drops node packet 
node increases window gateway drop node node packet 
corollary gives condition satisfied ensures gateway drops node packets 
claim node increases window gateway drops node packet 
node window increased node packet arrives gateway node interval maximum size queue gateway drops node packet 
gateway drops node packet 
proof definition node packet arrives gateway service intervals previous node packet transmitted gateway 
node packet arrives gateway service intervals previous node packet transmitted gateway 
service interval containing node packet arrival followed intervals service interval contain node packet arrival 
similarly service interval doesn contain node packet arrival followed intervals interval contains node packet arrival 
start service intervals queue reaches size consider subsequence includes service interval succeeding th service interval 
call mod subsequence 
mod subsequence blank interval possibly empty sequence node intervals followed double interval followed possibly empty sequence node intervals 
double interval contains node packet arrival followed node packet arrival 
service interval mod subsequence say service interval low part high part subsequence 
say service interval low part subsequence occurs blank interval subsequence double interval subsequence 
service interval high part subsequence 
subsequence contains blank double intervals say service intervals lie high part subsequence 
note service interval lie high part subsequences low part 
service interval lies high part subsequences 
service interval lies high part subsequences service interval lies high part subsequences second service interval double interval queue second service interval larger queue service interval 
hand service interval lies high part subsequences service interval lies high part subsequences second service interval blank interval queue second service interval smaller queue service interval 
consecutive service intervals lie high part subsequences queue size 
assume service interval lies high part mod subsequences service interval lies high part mod subsequences 
maximum queue size reached service intervals lie high part mod subsequences 
call maximum service intervals 
consecutive run maximum service intervals interval double interval succeeding interval node node interval 
node window increased node packet arrives gateway maximum service interval queue size additional node packet arrives gateway gateway drops additional node packet 
node node window increased packet arrives gateway non maximum service interval queue size increases gateway drops node packet arrives succeeding maximum service interval 
node window increased packet arrives gateway maximum service interval double interval gateway drops node packet arriving service interval 
node increased packet arrives maximum service interval node interval gateway drops additional node packet arriving service interval 
corollary claim 
exists service interval lies high part subsequences defined proof claim node increases window gateway drops node packet 
proof node interval lies low part subsequence containing service interval 
node interval lies high part mod subsequences 
claim node increases window gateway drops node packet 
claim applies simulations nonnegative integer 
corresponds roundtrip time ratio simulations range percentage packet drops node ranges 
claim states node increases window gateway drops node packet 
node increases window gateway drops node node packet 
claim node increases window gateway drops node packet 
node increases window gateway drop node node packet 
proof omit proof similar claim 
results explain simulations section 
roundtrip times equal node node reached maximum window nodes increase windows drop period 
claim node increases window gateway drops packet node 
case gateway drops node node packet drop period 
result node node get roughly half total throughput 
shown roundtrip time ratio 
case claim corollary gateway drops node packets 
node node increase windows drop period increase node packet dropped 
shown ranges ms ms corresponding roundtrip ratios 
case claim gateway drops node packets 
shown ranges roughly ms ms 
corresponding roundtrip ratios 
note node packets dropped node throughput nonzero 
node window allowed increase time queue overflows node packets dropped 
simulations repeating pattern shown 
nonnegative integer range node packets dropped drop period node packets dropped 
followed range node packets dropped drop period node packets dropped 
behavior depends phase relationship node node packet arrivals 
explained claim claim 
bacon 
schwartz nest network simulation prototyping tool proceedings winter usenix conference pp 

chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems pp 

demers keshav shenker analysis simulation fair queueing algorithm internetworking research experience vol 
pp 

floyd jacobson traffic phase effects packet switched gateways computer communications review april pp 

floyd connections multiple congested gateways packet switched networks part way traffic computer communication review october pp 

hashem analysis random drop gateway congestion control report lcs tr laboratory computer science mit cambridge ma 
jacobson congestion avoidance control proceedings sigcomm august pp 

jacobson berkeley tcp evolution tahoe reno proceedings british columbia internet engineering task force july 
keshav real network simulator report computer science department university california berkeley berkeley california 
guy study deterministic cycles packet queues subject periodic traffic bellcore technical memorandum 
guy sample path analysis packet queues subject periodic traffic computer networks isdn systems pp 

random drop congestion control proceedings sigcomm sept pp 
ramakrishnan editors ietf performance congestion control working group gateway congestion control survey rfc august 
ramakrishnan jain binary feedback scheme congestion avoidance computer networks computer systems may pp 

ramaswami willinger efficient traffic performance strategies packet multiplexors computer networks isdn systems pp 

shenker zhang clark observations dynamics congestion control algorithm computer communication review october pp 

wilder ramakrishnan dynamics congestion control avoidance way traffic osi testbed computer communication review april 
pp 
zhang new architecture packet switching network protocols mit lcs tr laboratory computer science massachusetts institute technology august 
