journal graph algorithms applications www cs brown edu publications jgaa vol 
pp 
algorithms cluster busting anchored graph drawing kelly lyons centre advanced studies ibm toronto laboratory www cas ibm ca ca ibm com henk meijer david rappaport department computing information science queen university www ca henk ca ca graph drawing layout desirable alter adjust layout 
challenging aspect designing layout adjustment algorithms maintain user mental picture original layout 
new approach layout adjustment called cluster busting anchored graph drawing 
give algorithms examples approach 
goals cluster busting anchored graph drawing evenly distribute nodes graph drawing window maintaining user mental picture original drawing 
simple ecient iterative heuristics accomplish goals 
formally de ne measures distribution similarity give empirical results measures quantify methods 
theoretical analysis heuristics presents formidable challenge justifying empirical analysis 
communicated di battista submitted april revised march :10.1.1.20.5663
research supported part ibm toronto laboratory centre advanced studies phd fellowship nserc canada 
lyons algorithms cluster busting jgaa graph set nodes fv set edges fe ij fv edge edges directed case ij ji undirected case ij ji problem drawing graph combinatorial description termed layout creation :10.1.1.20.5663
layout creation algorithms try position nodes edges certain optimization criteria satis ed 
case graphs existing layout redrawn layouts clusters nodes close making labels nodes interactions nodes hard read understand 
layout creation algorithm useful layout adjustment new layout drastically di erent existing destroys user mental picture layout 
combinatorial description graph existing drawing goal layout adjustment algorithms produce new drawing layout easily read user mental picture destroyed 
results applied cords project centre advanced studies cas ibm software solutions toronto laboratory 
cords research project ended studied design development management distributed applications 
underlying services provided cords architecture support visualization 
layout adjustment problems identi ed part visualization component cords project 
programming distributed systems vast number processors communications links requires method visualizing network systems running network 
particular requirement draw graphs networks nodes represent geographic locations cities country buildings campus 
geographic locations nodes provide meaning user looking layout important retain location information drawing graph 
types graphs displayed visualization system created user graph editor 
case user put nodes positions meaning initially gain importance graph viewed 
user edited layout layout hard read understand 
members cords team built prototype validate architecture early versions layout adjustment algorithms draw graphs networks graphs initially drawn manually 
approach layout adjustment called preserving mental map measure similarity node positions node positions preserved trying separate lyons algorithms cluster busting jgaa overlapping nodes 
mathematical models user mental map 
model called cluster model uses notion shape set points 
idea proximity graphs de ne shape set points pattern recognition suggested measure user mental map 
proximity graphs set points include convex hull minimum spanning tree sphere uence graph 
mental map preserved layouts proximity graphs de ned node positions layouts 
concepts explored algorithms experiences visualization systems 
weaken requirement measure similarity preserved 
try improve distribution nodes new layout measures distribution process call cluster busting simultaneously trying minimize di erence layouts measures di erence process call anchored graph drawing 
heuristic algorithms layout adjustment approach 
cluster busting anchored graph drawing introduced :10.1.1.40.4608
drawing graph denoted graph fp pn set points window contains window isothetic rectangle plane bl bl bl bottom left corner tr tr tr top right corner 
drawing transformation fp contains goal cluster busting anchored graph drawing produce new drawing existing drawing criteria satis ed cb cb nodes evenly distributed inside nodes cb general shape criteria 
note criteria cb cb take edges graph consideration 
unclear description criterion cb shape drawing includes edges graph 
algorithms ignore edges graph determining new node positions 
de nition shape excludes edges graph 
section related 
section measures distribution similarity 
cluster busting anchored graph drawing algorithms section 
section results conclude areas research section :10.1.1.20.5663
lyons algorithms cluster busting jgaa related comprehensive survey graph drawing algorithms 
compared number layout creation algorithms available little done designing dynamic graph drawing algorithms layout adjustment algorithms 
early result dynamic graph drawing algorithm drawing trees change 
polylogarithmic algorithms update drawings trees special types digraphs general planar graphs 
user de ned constraints form linear equations variables added existing layout algorithm keep drawings stable 
examples constraints user want specify include absolute positioning example nodes placed horizontal levels node may constrained speci level speci position level relative positioning node left node clusters grouping nodes cluster constrained size position 
constraints de ned coordinate system fact node vertically node translates equations constraint manager maintains list constraints keeps set constraints consistent provides functions add delete query status constraints 
shown user de ned constraints added existing layout algorithms 
incremental graph layout allows graphs updated disturbing existing nodes edges layout 
nodes edges added time node overlap edge cross node 
layouts node rectangle edge sequence horizontal vertical segments 
algorithms preserve mental map drawing orthogonal ordering model user mental map pair node positions corresponding positions respectively 
preserving orthogonal ordering nodes keeping nodes inside original sized display window may allow movement distribute nodes determined edges 
successful methods drawing general undirected graphs algorithms heuristic quantitative measures layouts provide evidence algorithms satisfy criteria practise 
quantitative measures evaluate layouts produced heuristic algorithms :10.1.1.20.5663
example heuristic algorithm lyons algorithms cluster busting jgaa tries produce drawings uniform edge lengths evenly distributed nodes minimal edge crossings 
algorithm nds initial placement node minimizing cost function components representing criteria 
quantitative measure de ned criteria layouts produced algorithm compared layouts produced algorithms measures :10.1.1.13.8444:10.1.1.13.8444:10.1.1.20.5663:10.1.1.20.5663
section de ne quantitative measurements layouts evaluating cluster busting anchored graph drawing algorithms section 
measuring similarity distribution straight forward measure drawing inside drawing window quantifying distribution similarity dicult 
section model distribution models similarity de ne measurements layouts models 
additional models distribution similarity 
measuring distribution criterion cb states nodes evenly distributed inside nodes order judge nodes drawing evenly distributed nodes drawing need method methods measuring distribution points bounded region 
consider distribution nodes relative distance node boundary determined observation ideal distance nodes ideal distance node boundary call method measuring distribution points model distribution 
model distribution distribution measure nodes drawing model increases evenly distributed model intuitive way quantifying distribution set points say set points evenly distributed bounded region minimum distance points set maximized distance closest pair points maximized 
call model cp model distribution de ne measure distribution cp model cp min blg jx xw jy yw lyons algorithms cluster busting jgaa tr bl top right bottom left corners respectively :10.1.1.20.5663
follows nodes drawing evenly distributed cp model cp cp 
cost computing cp drawing nodes time voronoi diagram nodes computed log time 
measuring similarity criterion cb states general shape mathematical models user mental map drawing de ned said shape models 
condition relaxed cluster busting anchored graph drawing way measuring di erence similarity model 
section measures di erence sets points models user mental map 
models described section quanti es similarity sets node positions consider edges input graph 
mental map model de ne number changes model ubm upper bound number changes drawing nodes model upper bound set maximum value maximum known lowest known upper bound 
measure di erence model dm ubm way ensure dm 
dm di erence drawings model transformation preserves mental map say drawings di erent similar model dm small drawings di erent measure dm 
important note values dm normalized order compare values dm di erent sized drawings produced di erent layout programs model inappropriate compare dm dm drawing di erent models similarity models section chosen ideas results borrowed elds psychology pattern recognition geometric nature eciency computation ease implementation 
normative de nition similarity declaration certain operation lyons algorithms cluster busting jgaa measure similarity objects presupposition accurate operation actual judge similarity 
matrix model goodman pollack introduce process called geometric sorting de nes ordering points dimensions 
idea sorting generalizes dimensional case set numbers 
consider numbers points horizontal line sets points line order order type pair points goodman pollack sets points plane order type order triple points oriented counterclockwise oriented counterclockwise 
method determining sets points order type having compare triple de ning matrix set points follows set points number points left directed line de ne equal matrix containing called matrix set set points left directed line shown sets determined sets algorithm computing matrix set points log time 
algorithm computes matrix set points plane time 
sets points order type 
possible applications technique including pattern recognition new images compared image comparing matrices 
matrices compare drawings nodes computing sum di erences entries matrices shown upper bound nodes ub ub upper bound achieved set points convex hull ordering convex hull reversed 
lyons algorithms cluster busting jgaa distances moved dm model natural measure di erence sets points distance point moved 
value dm computed summing distance dm dist time required compute dm distances 
distance sets unit square de ne upper bound dm nodes ddm dm upper bound achieved points move corner diagonal corner 
layout algorithms algorithms iterative iteration heuristics determine move nodes 
restrict movement nodes inside drawing window guarantees criterion cb satis ed 
section evaluate compare algorithms criteria cb cb 
input positions nodes fp positions nodes iteration output positions nodes set iteration tests performed measure distribution points di erences algorithms iterate speci ed distribution similarity measure exceeds threshold 
thresholds reached algorithms iterate max times 
algorithm returns user resulting layout option changing thresholds continuing accepting layout way similarity distribution models value max threshold values part input experienced users defaults 
voronoi diagram cluster vdcb algorithm vdcb algorithm studied voronoi diagram 
set fp pn points voronoi diagram vd lyons algorithms cluster busting jgaa partition plane convex necessarily bounded regions region polygon vor associated point set points closer point 
implementation kenny wong fortune sweep line algorithm implementations algorithms :10.1.1.20.5663
clipped voronoi diagram set points vd clipped computed log time 
idea voronoi diagram set constrain movement nodes came trying determine satisfy criterion cb 
restricting nodes move voronoi regions guarantees closer small voronoi regions close allowable movement restricted evenly distribute nodes :10.1.1.20.5663
allow nodes small regions evenly distributed process iterated 
iteration nodes move point inside voronoi region voronoi diagram new layout computed 
longer guarantee closer evenly distribute nodes nodes move away voronoi edges close move closer voronoi edges decided move node centroid voronoi region :10.1.1.20.5663
node centroid vor de ned cd vor vor area vor centroids computed time 
vdcb algorithm 
vdcb algorithm runs log time max number iterations time taken perform measurements 
geoforce algorithm geographic force geoforce algorithm idea forces springs model interactions nodes drawing graph :10.1.1.13.8444:10.1.1.13.8444:10.1.1.20.5663
basic idea spring algorithms nodes edge force depends distance nodes connected edge attracted force depends distance 
initial layout usually created arbitrarily 
iteration algorithm forces computed nodes nodes moved position acting forces 
distance points euclidean distance 
lyons algorithms cluster busting jgaa algorithm vdcb initialize iterating false max iterating compute nd cd cd distribution measure de ned threshold iterating true similarity measure dm de ned threshold iterating true output vdcb algorithm 
lyons algorithms cluster busting jgaa geoforce algorithm came adapting idea force algorithms hopes achieving success practise 
criterion cb states general shape drawing similar shape original drawing attractive forces applied node position original layout 
second goal cluster busting anchored graph drawing evenly distribute nodes drawing window repelling forces applied pair nodes node sides drawing window 
forces applied constants techniques dealing boundary chosen implementing di erent methods trying values combination values observing ect sample layouts 
forces repelling node force attracting node 
take average repelling force subtract attractive force 
total force applied iteration fs fr fa dist fs repelling force sides fr repelling force attractive force original position fr computed fbl trg jx xw jy yw fr fr dist force functions fr fa computed follows :10.1.1.20.5663
repelling force move nodes ideal distance away 
fruchterman reingold de ne ideal distance nodes area area area drawing window :10.1.1.13.8444:10.1.1.13.8444
bounding amount force applied applying force results smooth behaviour 
linear function passing constant representing maximum force applied 
function easy compute practise gives results area attractive force applied pull node original position 
function gives results constant 
side exerts repelling force nodes 
linear function passing mf mf maximum force exerted 
results obtained mf lyons algorithms cluster busting jgaa eades fruchterman reingold acting forces computed nodes layout nodes moved forces dealing nodes time :10.1.1.13.8444:10.1.1.13.8444
geoforce algorithm di ers force directed algorithms limit movement node region takes consideration proximity nodes 
nodes allowed move speci ed percentage distance voronoi edges 
total force acting iteration point move force extend ray necessary intersects edge vor 
intersection point 
set step size node dist constant 
set jf whichever closer experimentation works 
geoforce algorithm operates smart vdcb algorithm nodes moved location inside voronoi regions heuristic choose location forces acting nodes just blindly choosing centroid regions 
geoforce algorithm 
runs time max number iterations time taken perform measurements 
results section evaluate compare vdcb geoforce algorithms 
execute algorithm variety random input layouts measure layouts di ering number iterations 
generate layouts clusters points inside kk 
region evenly divided square regions area want evaluate layout algorithms layouts clusters nodes interactions nodes hard read want region contains cluster nodes small 
cluster occupy square region area 
rst compute cluster centres generating random points inside fc 
square centre area constant 
squares clipped random points generated uniformly inside clipped result set clusters unit square 

executing algorithms variety random layouts gives measure goodness algorithms respect random layouts 
type initial layout generated random layouts type took average value measurements 
average value distribution model average value dm dm similarity model measurements performed lyons algorithms cluster busting jgaa algorithm geoforce initialize iterating false max iterating compute force acting compute dist dist jf jf distribution measure de ned threshold iterating true similarity measure dm de ned threshold iterating true output geoforce algorithm 
lyons algorithms cluster busting jgaa iterations algorithms 
table shows values cp di erent types layouts layout algorithms 
cp cp cp cp cp cp cp geoforce vdcb geoforce vdcb geoforce vdcb table cp cp cp initial layouts layout algorithms :10.1.1.13.8444:10.1.1.20.5663
tables give values ddm di erent layout algorithms 
similarity model average di erence random layouts dm 
experiments show average geoforce vdcb algorithms evenly distribute nodes drawing cp model distribution 
cases cp cp cp cp types input layout algorithms 
lyons algorithms cluster busting jgaa worst worst geoforce vdcb table iteration vdcb geoforce algorithms :10.1.1.20.5663
worst worst ddm ddm ddm geoforce vdcb table ddm ddm iteration vdcb geoforce algorithms :10.1.1.20.5663
lyons algorithms cluster busting jgaa layouts roughly number clusters nodes cluster di erent iterations model :10.1.1.20.5663
layouts start evenly distributed cp model change measure iterations layout algorithms 
dm model similarity layouts clusters di erent iterations nodes spread move started layouts clusters 
model layouts start evenly distributed cp model change dm model iterations layout algorithms 
vdcb algorithm evenly distributes nodes fewer iterations geoforce algorithm compare di erence layouts distribution level 
layout adjustment algorithm 
say algorithm performs better algorithm speci types layouts di erence levels smaller distribution levels roughly 
type initial layout signi cant ect layout algorithm performs better 
average geoforce algorithm performs better layouts small number clusters vdcb algorithm performs better layouts large number clusters 
geoforce algorithm nodes move far iteration vdcb algorithm types layouts forces acting nodes 
layouts small number big clusters small voronoi regions constrain movement nodes vdcb algorithm number iterations necessary vdcb algorithm reach level distribution greater types layouts 
layouts large number small clusters vdcb algorithm distributes nodes evenly iterations geoforce algorithm requires greater number iterations achieve level distribution 
extra iterations needed repelling forces act nodes causing layouts di erent original layout produced vdcb algorithm 
layouts cluster uniformly distributed initially iterations algorithm sucient distribute nodes interactions readable 
iterations vdcb algorithm distributes nodes evenly geoforce algorithm vdcb algorithm moves nodes necessary 
layouts similar original layout measures geoforce algorithm 
shows layout nodes layout iteration geoforce algorithm 
shows layout iteration vdcb algorithm 
shows layout clusters size layout iterations geoforce algorithm 
shows layout lyons algorithms cluster busting jgaa layout clusters size layout iteration geoforce algorithm :10.1.1.13.8444:10.1.1.20.5663
layout clusters size layout iteration vdcb algorithm 
lyons algorithms cluster busting jgaa layout clusters size layout iterations geoforce algorithm 
iterations vdcb algorithm 
layout produced vdcb algorithm evenly distributed cp model similar original layout similarity measures 
human observers may judge geoforce layout similar original layout vdcb layout 
partly notion clustered nodes completely removed vdcb layout 
notion clustering important model user mental map similarity measures adequately capture notion clustering 
number changes delaunay triangulation node positions measure similarity better represents clusters 
layout produced vdcb algorithm similar produced geoforce algorithm number changes delaunay triangulation :10.1.1.20.5663
geoforce algorithm designed perform cluster busting anchored graph drawing smarter way vdcb algorithm seen 
fact recommend vdcb algorithm geoforce algorithm cases 
possibility remains di erent choice force functions constants geoforce algorithm result algorithm consistently performs better vdcb algorithm 
possibility discussed section 
lyons algorithms cluster busting jgaa layout clusters size layout iterations vdcb algorithm :10.1.1.20.5663
identi ed new approach drawing graphs existing layout call cluster busting anchored graph drawing :10.1.1.20.5663
heuristic algorithms solving problem 
provided measurements evaluating layouts produced algorithms stated goals 
measurements evaluate compare algorithms 
heuristics approach drawing graphs general cluster busting anchored graph drawing particular 
quantitative measurements useful understanding behaviour heuristic algorithms 
measurements allow algorithms tested larger number layouts evaluations solely visually judging example layouts 
areas research 
remains dicult problem quantitative measurements determine stopping conditions large number factors involved 
possible enhancements allow user input layout process animation 
user watches layout change iteration stops algorithm manually resulting layout satisfactory 
support research needed subjective issues users nd important drawings graphs 
particularly true case aesthetic factor lyons algorithms cluster busting jgaa subjective similarity 
di erent force functions constants result geoforce algorithm consistently performs better vdcb algorithm 
forces constants current geoforce algorithm determined trying values viewing sample layouts produced algorithm values 
subjective judgements choices gave better layouts people observing layouts 
interesting quantitative measures judge layouts choice forces constants 
way layouts judged di erent combinations forces constants 
important area layout adjustment algorithms take edges graphs consideration 
dicult problem addressed algorithms preserving mental map 
couple ways edges incorporated layout adjustment algorithms 
similarity measures include changes edges drawing 
second layout adjustment algorithms optimize edge criteria keeping number edge crossings small new layout retaining similarity node positions 
model mental map takes positions edges layout consideration 
taken shows drawing graph nodes edges :10.1.1.20.5663
edges nodes drawing divide plane regions called faces 
outside face bounded edges nodes listed clockwise order 
faces 
dual graph de ned node dual graph face de ned edge nodes dual graph faces share boundary 
shows dual graph layout 
layouts topology dual graph 
adjustment algorithm preserves topology drawing new drawing topology original drawing 
di erence topologies number edge changes dual graph measure di erence drawings includes edges graph 
measure evaluate algorithms cluster busting anchored graph drawing algorithms topology model user mental map 
algorithms iterative interesting prove algorithms converge 
shown vdcb algorithm st nodes vertices isothetic grid size converge 
discussion convergence vdcb algorithm case points general 
open problem prove vdcb algorithm converges general input 
lyons algorithms cluster busting jgaa layout dual graph representing topology 
authors patrick jacob slonim members cords project input ideas referees suggestions simpli ed presentation 
lyons algorithms cluster busting jgaa bradshaw lyons marshall tran 
operation jump start cords integration prototype dce 
proceedings cas conference volume ii pages october :10.1.1.20.5663
segal srinivasan 
design tool large scale heterogeneous campus networks 
technical report department electrical engineering computer science center information technology integration university michigan ann arbor michigan june 
bauer erickson hong larson slonim taylor 
distributed system architecture distributed application environment 
ibm systems journal 


constraints achieve stability automatic graph layout algorithms 
proceedings acm conference computer human interaction chi pages april 
cohen di battista tamassia tollis 
framework dynamic graph drawing extended 
proceedings eighth annual acm symposium computational geometry pages :10.1.1.20.5663
davidson harel :10.1.1.20.5663:10.1.1.20.5663
drawing graphs nicely simulated annealing 
technical report department applied mathematics computer science weizmann institute science april 
davidson harel 
drawing graphs nicely simulated annealing 
acm journal graphics october 
di battista eades tamassia tollis 
algorithms drawing graphs annotated bibliography 
comput 
geom 
theory appl 
eades 
heuristic graph drawing 
congressus numerantium :10.1.1.20.5663
eades lai 
algorithms disjoint node images 
fifteenth australian computer science conference pages january :10.1.1.20.5663
lyons algorithms cluster busting jgaa eades lai misue sugiyama 
preserving mental map diagram 
technical report rr international institute advanced study social information science fujitsu laboratories aug :10.1.1.20.5663
edelsbrunner rourke seidel 
constructing arrangements lines hyperplanes applications 
siam journal computing :10.1.1.20.5663
erickson bauer bradshaw consens hasan hong lyons martin neufeld rappaport taylor yemini 
cords update prototypes 
technical report tr august 
lyons 
narratives space time visualization distributed systems 
proceedings cas conference pages october :10.1.1.20.5663
fisk west 
accel automated circuit card etching layout 
proceedings ieee november :10.1.1.20.5663
fortune :10.1.1.20.5663
sweepline algorithm voronoi 
algorithmica :10.1.1.13.8444
fruchterman reingold :10.1.1.13.8444:10.1.1.13.8444
graph drawing force directed placement 
softw 
pract 
exp :10.1.1.20.5663
goodman pollack 
multidimensional sorting 
siam journal computing august 

similarity 
academic press 
kamada kawai 
algorithm drawing general undirected graphs 
information processing letters 
lyons :10.1.1.40.4608
cluster busting anchored graph drawing 
proceedings cas conference volume pages november :10.1.1.13.8444
lyons 
cluster busting anchored graph drawing 
phd thesis queen university 
rowe henry 
divide conquer algorithm automatic layout large directed graphs 
ieee transactions systems man cybernetics smc january february 
lyons algorithms cluster busting jgaa hornick tamassia 
incremental approach aesthetic graph layout 
proc 
internat 
workshop computer aided software engineering case 
misue eades lai sugiyama 
layout adjustment mental map 
journal visual languages computing :10.1.1.20.5663
:10.1.1.20.5663
tool display hierarchical acyclic data ow graphs 
editor proceedings international conference parallel computing technologies pages 
world scienti 

drawing dynamic trees 
ieee software july 
preparata shamos 
computational geometry 
springer verlag 
quinn jr breuer 
forced directed component placement procedure printed circuit boards 
ieee transactions circuits systems cas :10.1.1.20.5663
steinberg 
wiring problem placement algorithm 
siam review january :10.1.1.20.5663
toussaint 
pattern recognition geometrical complexity 
proceedings fifth international ieee conference pattern recognition pages december 
toussaint 
computational geometric problems pattern recognition 
kittler fu pau editors pattern recognition theory applications pages 
reidel publishing 
toussaint 
computational geometry results relevant pattern recognition 
devijver kittler editors proceedings nato advanced study institute pattern recognition theory applications pages june :10.1.1.20.5663

aesthetic layout algorithm undirected graphs 
master thesis massachusetts institute technology 
voronoi 
applications des la theorie des formes 
eme recherches sur les parall elo 
journal fur die reine und angewandte mathematik 
wong uller :10.1.1.20.5663
ecient implementation fortune algorithm voronoi diagrams 
technical report department computer science university victoria victoria october 
