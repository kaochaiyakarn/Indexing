database mining performance perspective rakesh agrawal tomasz imielinski arun swami ibm almaden research center harry road san jose ca perspective database mining confluence machine learning techniques performance emphasis database technology 
describe classes database mining problems involving classification associations sequences argue problems uniformly viewed requiring discovery rules embedded massive data 
describe model basic operations process rule discovery 
show database mining problems consider map model solved basic operations propose 
give example algorithm classification obtained combining basic rule discovery operations 
algorithm efficient discovering classification rules accuracy comparable id current best classifiers 
index terms 
database mining knowledge discovery classification associations sequences decision trees current address computer science department rutgers university new brunswick nj database technology great success traditional business data processing 
increasing desire technology new application domains 
application domain acquire considerable significance near database mining 
increasing number organizations creating ultra large data bases measured gigabytes terabytes business data consumer data transaction histories sales records data forms potential gold mine valuable business information 
unfortunately database systems today offer little functionality support mining applications 
time statistical machine learning techniques usually perform poorly applied large data sets 
situation probably main reason massive amounts data largely unexplored stored primarily offline store verge thrown away 
perspective database mining confluence machine learning techniques performance emphasis database technology 
argue number database mining problems uniformly viewed requiring discovery rules embedded massive data 
describe model basic operations process rule discovery 
show database mining problems map model solved basic operations propose 
view database mining complements perspective 
papers argue iterative process mining human loop 
user begins hypothesis uses data refute confirm hypothesis 
hypothesis refined depending response process continues satisfactory theory obtained 
emphasis having declarative language easier formulate revise hypotheses 
emphasis providing large bandwidth machine human user interest maintained successive iterations 
discuss aspect detail admit possibility human intervention mining process 
intervention form domain knowledge guide mining process additional knowledge rules mined 
quantifying usefulness interestingness rule 
ideas may built filters top kernel rule discovery techniques 
rest organized follows 
section classes database mining problems involving classification associations sequences 
section unifying framework show classes problems uniformly viewed requiring discovery rules 
section introduce operations may form computational kernel process rule discovery 
show database mining problems consideration solved combining operations 
discussion concrete consider classification problem detail section concrete algorithm classification problems obtained combining operations 
show classifier obtained efficient classification accuracy comparable known classifier id 
directions section 
database mining problems classes database mining problems identified examining cited applications database mining 
classes certainly exhaust database mining applications capture interesting subset 
section unifying framework studying solving problems 
classification classification problem involves finding rules partition data disjoint groups 
example classification problem consider store location problem 
assumed success store determined neighborhood characteristics interested identifying neighborhoods primary candidates investigation location proposed new store 
access neighborhood database 
categorizes current stores successful average unsuccessful stores 
neighborhood data stores develops profile category stores uses profile successful stores retrieve candidate neighborhoods 
applications involving classification include credit approval determination variation classification problem problem 
may interested finding best candidates ski package mailed 
small number ski packages mailed selected sample population profile positive respondents obtained 
profile usually built disjunction conjunctions attribute value ranges characterizing individuals population 
instance profile respondents ski package may union individuals age income year individuals drive sports car 
notice conditions generate rules condition antecedent rule positive response consequent 
confidence factor associated term disjunction develop order terms disjunction applied data obtaining best candidates 
associations consider supermarket setting database records items purchased customer single time transaction 
planning department may interested finding associations sets items minimum specified confidence 
example association statement transactions purchase bread butter purchase milk 
antecedent rule consists bread butter consequent consists milk 
number confidence factor rule 
usually planner interested single rule sets rules satisfying initial specifications 
examples problem finding associations omitted confidence factor specification ffl find rules diet coke consequent 
rules may help plan store boost sale diet coke 
ffl find rules antecedent 
rules may help determine products may impacted store selling 
ffl find rules sausage antecedent consequent 
query phrased alternatively request additional items sold sausage order highly sold 
ffl find rules relating items located shelves store 
rules may help shelf planning determining sale items shelf related sale items shelf ffl find best rules consequent 
best formulated terms confidence factors rules terms support fraction transactions satisfying rule 
note transaction need necessarily consist items bought point time 
may consist items bought customer period time 
examples include monthly purchases members book music club 
sequences major source database mining problems ordered data temporal data related stock market point sales data 
example rule stock market data stock goes consecutive days dec stock fall period ibm stock goes day time 
example query situation items sold sequence response dress followed matching shoes 
unifying framework show classes problems studied framework rule discovery 
unifying framework set objects 
denote domain range respectively method set methods domain denote result application method object formula form composition methods predicate defined example predicate senior senior age true age object 
age method example consider method year birth method decade maps year corresponding decade 
predicate true decade sixties denoting method composition ffi decade ffi year birth formula 
rule mean statement form conjunction formulas formula 
rule satisfied set objects confidence factor iff objects satisfy satisfy note formulas rules unary single variable ranging set objects reason restriction business applications considered far lead unary rules 
set objects interested generating rules satisfy certain additional constraints different forms ffl syntactic constraints constraints involve restrictions predicates methods appear rule 
example may interested rules method appearing consequent rules method appearing antecedent 
combinations constraints possible may request rules methods predefined set appear consequent methods set appear antecedent 
ffl support constraints constraints concern number objects support rule 
support rule defined fraction objects satisfy conjunction consequent antecedent rule 
support confused confidence 
confidence measure rule strength support corresponds statistical significance 
statistical significance motivation support constraints comes fact usually interested rules support minimum threshold business reasons 
support large means rule worth consideration simply preferred may considered 
mapping database mining problems illustrate database mining problems consideration mapped framework just described 
ffl classification set objects consists labeled data tuples comprising training set classifier 
label identifies group object belongs 
tuple attributes specify properties object 
corresponding attribute tuple accessor method returns value attribute object 
method returns tuple label 
goal classification problem discover rules characterizing groups training set discover rules consequent form label method ranges different label values 
example classification problem target marketing involves rules method positive response consequent consequent form positive response 
instance rules previously described context ski package example form age salary positive response restriction form consequent example syntactic constraint classifier rules 
syntactic constraint label method appear antecedent rule 
support constraints form requirement minimum number tuples satisfy antecedent rule acceptable 
ffl associations set objects consists customer transactions 
corresponding item transaction set binary valued method returns true false depending item transaction 
association rules subject syntactic support constraints 
syntactic constraints cover cases user specifying additional restrictions rules satisfy associations milk consequent associations milk consequent bread antecedent 
support constraints primary importance antecedents rules minimal support 
critical statistical business point view larger number transactions supporting antecedent rule widely applicable rule 
ffl sequences set objects consists timestamps possibly different granularity days minutes hours 
example rule ibm stock goes day stock goes consecutive days dec stock fall time described follows stock method applied timestamp returns stock gone time 
rule formulated stock stock stock dec stock dec stock ibm sequence rules viewed special case association rules 
rules antecedents consequents contain literals related temporal component 
cases antecedents consequents come sequence time 
viewed special case syntactic constraint 
support constraints play major role 
number timestamps antecedent rule satisfied small statistical value rule insignificant 
basic operations objective provide efficient computational support rule discovery problems 
thesis problems cast framework require small set basic operations 
implementing operations efficiently solve large number database mining problems 
operations concept string ordered sequence method value pairs 
value atomic interval case methods returning values ordered 
method value pair object notational simplification predicate atomic interval 
string conjunction predicates 
computational process discovering rules described basic operations ffl generate seed database takes set strings represented parameter seed builds set strings measured pass database 
sets strings formed strings seed set extending method value pairs database schema 
actual number new strings constructed pass database depends number parameters including size available memory ffl measure measuring may involve simple counting number objects supporting new strings generated generate procedure 
cases measure may combined generate efficiency reasons 
measuring may involve elaborate aggregation operations 
example customer id stored transaction number may want discover associations items bought transaction certain period time 
case support set defined number transactions particular item may define support set number customers bought particular item 
interested calculating total quantity total price particular item bought customer 
cases aggregation necessary measurement phase 
ffl combine combines new strings 
combination done creating intervals partitions domain contiguous attributes taxonomic information 
way multiple strings may replaced single combined string 
example number strings describing individuals ages may replaced string describes individuals ages 
ffl seed filter filters strings set combined strings form new seed set 
new seed set consists strings prospects produce new strings target set 
ffl target select seed selects strings stored target set measured values 
selected strings may may retained seed set 
initial seed set contains empty string 
operations evaluated repetitively successive passes database seed set empty 
construct output final target set strings measured values 
shows sequence basic operations applied 
combining operations briefly illustrate operations combined solve database mining problems 
consider classification problem detail describe realization efficient algorithm discovering classification rules operations 
term attribute accessor method associated attribute 
ffl classification consider classifiers decision trees see overview 
refer reader discussion classifiers opposed example neural nets appropriate database mining applications 
seed nil target seed combine new seed empty 
new generate seed db measure new target select seed seed filter seed return target basic operations target set strings includes strings corresponding paths root leaves classification tree 
string seed generate extensions string adding possible attribute value pairs 
combination performed new strings generated extension continuous valued attribute 
id cart binary splitting purpose ic partitions domain continuous attribute intervals 
filter operation entropy computed attribute added strings containing attribute highest value information gain retained included seed set 
ic computes expanded string expansion merit string filtered expansion merit acceptable level 
select operation id picks strings attained information gain ic picks strings information gain exceeds dynamic threshold function 
selected strings retained extension 
ffl associations determine rule satisfied confidence need count total number objects support total number objects support divide ratio greater rule satisfied confidence factor 
target set strings contains strings support certain threshold minimum support criterion select operation 
strings form basis potential rules words form potential antecedents rules 
generate operation new strings generated extending seed string items seed 
measure operation usually involves simply counting total number occurrences string database 
combination null operation 
filter operation string meeting minimum support requirement discarded 
note strings picked select operation retained seed set extension 
ffl sequences sequence rules handled similar way association rules 
temporal nature relationships antecedents consequents explored implementation number ways includes compressed storage special purpose indexes 
global nature process analogous discovery associations 
example give simple example classification application illustrate algorithm shown works 
section gives elaborate example 
table describes xor function 
algorithm trying determine characterizes group group 
attributes categorical attributes 
string put target set information gain computed string 
filter operation single attribute selected extension strings obtained extending attributes eliminated 
start empty string 
pass data strings generated extending possible attribute value pairs continuous valued attributes combination done 
attributes information gain 
algorithm breaks tie retaining strings attribute 
strings removed filter operation strings put target select operation string information gain 
seed set second pass contains strings second pass strings generated string extended attribute attribute selection needed string eliminated filter operation 
strings information gain selected target set 
removed seed empty 
terminates algorithm 
strings target set processed generate rules performance considerations data sets expected massive paramount importance rule discovery algorithm efficient 
factors kept mind combining basic operations ffl waste ratio consider ratio number strings target set total number strings measured algorithm 
denote ff 
waste ratio defined gamma ff 
large value waste ratio indicates generally poor performance due possibly unnecessary additional 
instance may build classification tree building complete tree pruning case instance id take dynamic approach expand tree estimated errors reduced certain amount 
method better waste ratio generate measure strings pruned 
classification accuracy similar second method winner computational perspective 
ffl balancing costs cpu costs way minimize waste ratio conservative generate part algorithm generate measure promising strings pass data 
large databases approach unacceptable 
depending cost ratio cpu costs different solutions may appropriate amount memory 
choice making small number passes significant processing pass minimizing computation pass passes 
similarly may precompute set rules query directly query may passes original data 
algorithm determine approach applied case 
cdp classifier obtained basic operations consider classification problem detail describe realization specific classifier basic operations introduced section 
describe implementation basic operations 
refer classifier cdp classifier dynamic pruning 
cdp uses binary partitioning continuous attributes proposed id cart combine operation 
uses dynamic pruning scheme ic filter operation 
cdp belongs class tree classifiers generate rules easily translated sql queries efficient interfacing relational databases 
basic operations cdp implementation basic rule discovery operations cdp starting empty string seed set operations performed sequence seed set empty 
target set contains desired classification rules 
generate measure string new strings generated extending possible attribute value pairs different groups 
efficiency reasons generate measure combined operation 
initial seed generate operation empty string 
generation new strings string proceeds follows 
read tuple training database 
new strings generated attribute value pair generated new strings set count incremented added new strings set count 
operation repeated tuples 
combine set new strings generated extending seed value pairs continuous attribute binary partitioning proposed id cart determine value partitions range atomic values intervals information gain maximized 
interval interval strings combined replaced strings 
combine strings generated extending seed categorical attribute 
taxonomical information available categorical attributes information combination strings 
combine operation corresponding seed string set new strings sg extensions continuous attribute strings sg 
categorical attribute strings number distinct values attribute 
number strings depends number distinct values database 
filter retain strings corresponding attribute maximizes information gain ratio eliminate strings 
database objects contain objects group entropy gamma log attribute values fa 
extension attribute partition fd 
containing objects value expected entropy substring expected entropy string seed weighted average information gain extending gain gamma information content value attribute expressed gamma log information gain ratio attribute defined ratio gain select eliminated new strings obtained due extension selected attribute 
compare frequencies different groups remaining strings 
string winner group largest frequency 
strength winner group determined follows 
winning group string said strong ratio frequency winner group total frequency string groups database certain precision threshold group said weak 
precision threshold adaptive function length string 
adaptive precision threshold gamma string length max length max length algorithm parameter 
function conservative declaring winner strong criteria string length increases 
parameter max length enables user bound computational expense classification process filtering takes place sooner smaller value max length 
experiments various smooth decay functions led quadratic function having best effect classification accuracy 
string strong winner moved target set 
string antecedent winner group consequent rule 
string removed seed extended 
string max length moved target set 
winner group irrespective strength consequent rule corresponding string 
final case string total frequency zero 
string moved target set 
winner seed string consequent case 
seed string empty consequent labeled unknown 
example illustrate basic operations cdp simple example 
consider people database tuple attributes ffl age age non categorical attribute uniformly distributed ffl zip code town person lives zipcode categorical attribute uniformly distributed available ffl level education elevel categorical attribute uniformly distributed group membership depends age elevel independent zipcode 
groups population group age elevel age elevel age elevel group elevel equivalent elevel elevel 
elevel 
database tuples satisfy predicates 
parameter max length set 
cdp starts seed empty string 
generate measure step new strings generated extending strings seed set tuples database 
measurement involves counting number occurrences string different groups 
tuple 
age zipcode elevel group new strings generated age zipcode elevel 
count group set count group set strings 
tuple 
age zipcode elevel group new string generated elevel 
count group set count group set string 
counts group strings age zipcode incremented 
process continues till tuples database exhausted 
cdp combines new strings continuous attributes binary partitioning proposed id cart 
example age continuous attribute 
omit details partitioning results 
find partitioning replaces age strings strings age age 
combine operation strings corresponding age corresponding zipcode corresponding elevel 
cdp performs filter operation eliminates strings corresponding attributes maximizes information gain ratio 
table shows values obtained information gain ratio attributes attribute information gain ratio age zipcode elevel strings age age eliminated new seed set consists strings 
cdp examines strings seed set moved target set basis strength winning group string 
table shows winner strings seed set relative frequency winning group string winner relative frequency strength age group weak age group weak precision threshold strings strength strings weak 
strings moved target set 
cdp pass database 
brevity discuss extensions string age 
new strings generated extending seed string attribute value pairs tuples seed string 
note age extended age string 
counts developed new strings 
new strings corresponding age attribute combined results strings age age age age 
extensions seed string strings corresponding zipcode values extensions corresponding elevel values 
table shows information gain ratios attributes count available new strings developed extending age seed string age attribute information gain ratio age zipcode elevel filter operation eliminates strings generated extending seed string elevel value 
max length adaptive precision algorithm reduces precision threshold winner strength finds winning group strong strings string winner relative frequency strength age elevel group strong age elevel group strong age elevel group weak age elevel group weak age elevel group strong strong strings removed seed set moved target set 
weak strings remain seed set extended pass data 
omit rest processing show final rules generated cdp decision tree 
coincidence attribute selected initial age age age age elevel elevel example decision tree generated cdp strings turned elevel 
general siblings may attribute different attributes may selected 
cdp infers set classification rules group age elevel age elevel age elevel group age elevel age elevel age elevel equivalent original set rules 
note actual age range data set 
performance considerations generate measure operation pass database extend strings seed set measure minimize strings seed set extensions may fit main memory 
cdp takes dynamic approach starts loading seed strings memory 
strings expanded memory may fill 
case victim seed string selected maximum number extensions seed string extensions discarded 
discarded seed string reconsidered pass data 
cdp seeks improve performance generation process expanding string winner strength string certain precision threshold 
alternative expand strings fully prune case instance id 
approach exhibit bad waste ratio 
classification accuracy similar dynamic pruning winner computational perspective 
classification accuracy generation efficiency classification error fraction instances test data incorrectly classified classical measure classification accuracy 
assess accuracy rules discovered cdp compared id 
ind tree package nasa ames research center empirical evaluation 
ind implements improved version id 
experimental methodology data sets classification functions experiments described appendix 
shows average error rates cdp id 
maximum depth cdp algorithm 
confidence intervals results indicate differences classification errors significant 
means algorithms comparable accuracy functions 
id better cdp functions cdp obtains better accuracy id functions 
compare rule generation efficiencies cdp id 
note algorithms identical attribute selection partitioning procedures 
difference generation efficiency directly proportional difference number strings generated 
shows number strings generated algorithms functions 
numbers obtained averaging number strings generated runs 
see cdp generates third tenth strings id 
see cdp times faster id discovering rules comparable accuracy 
summary perspective database mining confluence machine learning techniques performance emphasis database technology 
described classes database mining problems involving classification associations sequences argued problems viewed common framework rule discovery 
describe model basic operations process rule discovery 
showed database mining problems map model solved basic operations propose 
gave concrete example algorithm suitable discovering classification rules described efficient implementation basic operations algorithm 
algorithm efficient discovering classification rules accuracy comparable known classification algorithm id 
function number classification error cdp id classifier accuracy cdp id function number number generated strings cdp id strings generated cdp id reported done context quest project ibm almaden research center 
quest exploring various aspects database mining problem 
plans include developing efficient implementations basic rule discovery operations described database mining problems involving associations sequences 
eventual goal build experimental system mining rules embedded massive databases 
believe database mining important new application area databases combining commercial interest intriguing research questions 
appendix experimental methodology evaluation methodology synthetic database proposed assess accuracy characteristics cdp tuple database attributes table 
attributes elevel car zipcode categorical attributes attributes 
attribute values randomly generated 
attribute description value salary salary uniformly distributed commission commission salary commission uniformly distributed age age uniformly distributed elevel education level uniformly chosen car car uniformly chosen zipcode zip code town uniformly chosen available value house uniformly distributed delta delta delta depends zipcode years house owned uniformly distributed loan total loan amount uniformly distributed table description attributes attributes developed classification functions different complexities 
functions labeled involve groups 
function involves predicate ranges single attribute value 
functions involve predicates ranges attribute values 
function uses non categorical attributes function uses categorical non categorical attribute 
similarly functions predicates ranges attribute values 
function involves categorical attribute 
function involves non categorical attributes 
function involves ranges linear function non categorical attributes 
functions linear functions function nonlinear function attribute values 
functions listed section 
note functions superset functions 
experiment generated training set test data set 
tuples training set assigned group label generating tuple applying classification function tuple determine group tuple belongs 
labels generated tuples test data set classification function determine classifier correctly identified group tuple 
model fuzzy boundaries groups data generation program takes perturbation factor additional argument 
determining values different attributes tuple assigning group label values non categorical attributes perturbed 
value attribute tuple range values value perturbation theta theta uniform random variable 
experiments perturbation factor 
experimental run errors groups summed obtain classification error 
classification function replications done new training sets generated 
replications calculate mean error confidence intervals 
errors reported percentages total test data set 
intrinsic error test data due perturbation subtracted total error arrive error due misclassification 
training sets tuples test data sets tuples 
settling sizes studied sensitivity cdp sizes 
training set reduced tuples tuples steps 
expected classification error increased decreasing training set size increase mean error small 
database mining applications involving databases gigabytes training sets fairly large training sets tuples unreasonable 
increased test data sizes tuples 
results indicated tuples provided identical error estimates larger test data sets 
decided stay test data sets tuples save computing time 
classification functions equivalent 

equivalent sequential conditional function expression equivalent 
groups group group specify predicate function group tuples selected predicate function belong group function grp age age function grp age salary age salary age salary function grp age elevel age elevel age elevel function grp age elevel 
salary salary age elevel 
salary salary age elevel 
salary salary function grp age salary 
loan loan age salary 
loan loan age salary 
loan loan function grp age salary commission age salary commission age salary commission function disposable theta salary commission gamma theta loan gamma grp disposable function disposable theta salary commission gamma theta elevel gamma grp disposable function disposable theta salary commission gamma theta elevel gamma theta loan gamma grp disposable function equity equity theta theta gamma disposable theta salary commission gamma theta elevel theta equity gamma grp disposable acknowledgments wish help implementing cdp running performance experiments 
thankful wray buntine ind tree package allowed compare cdp id 
due guy lohman comments earlier version 
rakesh agrawal ghosh tomasz imielinski bala iyer arun swami interval classifier database mining applications vldb vancouver british columbia canada 
breiman friedman olshen stone classification regression trees wadsworth belmont 
brice alexander finding interesting things lots data rd hawaii international conference system sciences hawaii january 
wray buntine ind tree package nasa ames research center moffett field california september 
wray buntine del alto editors collected notes workshop pattern discovery large databases technical report fia nasa ames research center moffett field california april 
philip andrew chou application information theory pattern recognition design decision trees ph thesis stanford university california june 
kanal decision trees pattern recognition progress pattern recognition kanal rosenfeld editors elsevier science publishers 
north holland 
han cai cercone knowledge discovery databases approach vldb vancouver british columbia canada 
ravi krishnamurthy tomasz imielinski practitioner problems need database research research directions knowledge discovery sigmod record vol 
sept 
richard lippmann computing neural nets ieee assp magazine april 
david discovery databases review ai statistical techniques ijcai workshop knowledge discovery databases detroit august 
howard beck navathe knowledge mining imprecise querying classification approach ieee th int conf 
data engineering phoenix arizona feb 
ross quinlan induction decision trees machine learning 
ross quinlan simplifying decision trees int 
man machine studies 
piatetsky shapiro frawley editors proceedings ijcai workshop knowledge discovery databases detroit michigan august 
piatetsky shapiro editor proceedings aaai workshop knowledge discovery databases anaheim california july 
piatetsky shapiro discovery analysis presentation strong rules 
piatetsky shapiro editor knowledge discovery databases aaai mit press 
shalom tsur data dredging ieee data engineering bulletin december 
jeffrey ullman principles database knowledge base systems volume computer science press 

