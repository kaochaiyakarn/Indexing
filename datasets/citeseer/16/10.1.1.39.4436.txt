genetic programming building artificial nervous systems genetically programmed neural network modules hugo de garis artificial intelligence artificial life research unit universite libre de bruxelles ave roosevelt brussels belgium europe 
tel fax email center artificial intelligence george mason university university drive fairfax virginia va usa 
tel fax email aic gmu edu contents 

neural networks 
genetic algorithm 
gennets 
genetic programming gp 
example pointer 
example walker 
example lizzy 
discussion ideas 

author interests studying computing technologies considering conceptual problems pose 
major concern regard called complexity problem computer scientists years cope technologies provide ability build machines containing roughly number artificial neurons human brain 
case bit far fetched consider technologies wafer scale integration wsi molecular electronics nanotechnology quantum computing 
wsi 
process full surface silicon crystal contain huge vlsi circuit 
estimated mid possible place artificial neurons wsi circuit 
molecular electronics attempt molecules computational devices increasing computing speeds allowing machines built number components 
nanotechnology ambitious aiming mechanical chemistry building assemblers capable picking atom putting 
know nanotechnology possible existence proof biochemistry 
assemblers build substance including copies 
quantum computing promises scale quantum phenomena order compute allowing construction machines order power components 
assumption technologies developed human generation computer scientists cope truly complexity systems containing mentioned power components 
problem new 
biological world confronted massive design problem day 
solution taken nature course darwinian evolution techniques strategies genetics sex death reproduction mutation traditional approach computer architecture explicit pre planned design machines probably increasingly impossible 
machine designers probably forced take evolutionary approach 
components treated black boxes internal workings considered complex understood analyzed 
matter performances black boxes 
coding structures components linear chromosome way successful structures perform behavioural test may see corresponding chromosomes survive generation higher probability 
linear structure codes dna biological world mutated making random changes 
chance improvement performance results mutated chromosome gradually squeeze rivals population 
generations average performance level population increase 
chapter evolutionary philosophy 
concerned evolution neural network modules control process stick legs taught walk artificial creature repertoire behaviours 
launching description done readers unfamiliar genetic algorithm ga neural networks brief overview topics 
followed description ga evolve neural network modules called gennets desired behaviour 
putting gennets complex structures build hierarchical control systems artificial nervous systems examples ideas relative detail authors papers 
final sections provide ideas genetic programming play important part new field artificial life showing artificial nervous systems constructed ideas put directly silicon robots 

neural networks years dominant paradigm artificial intelligence symbolism symbols represent concepts 
approach moderately successful probably explains ai researchers abandoned camp camp alias parallel distributed processing connectionism neural networks revival 
certainly true author feeling interpreting symbols cheating 
machine giving symbols interpretation 
back mind impression doing real ai 
real ai trying model neural systems secretly reading neurophysiology hoping get brain simulation form 
international neural networks conference held got hold proceedings turning back 
similar experiences probably occured people suddenly thousands monthly neural network world conferences 
light complexity problem introduced section soon realizes put artificial neurons create complicated dynamics analysis quickly transcend scope day techniques 
probable intelligence shown biological creatures mammals due enormous complexity brains literally billions neurons 
unreasonable produce machines comparable intelligence levels may give equivalent number artificial neurons connect ways similar nature 
know talking neurons human brain astronomical number possible connections 
considering questions led author idea marriage artificial neural networks artificial evolution thing basic idea able design functional neural networks fully understanding dynamics connections 
way nature designed brains 
author view artificially evolved neural net came called gennet considered black box 
important functioned nice analytical understanding dynamics functioned 
art designing gennets putting undertaking called genetic programming highly empirical lets try see method 
insist theoretical justification ones approach proceeding unnecessarily restrictive hinder rate progress designing artificial neural nets artificial nervous systems 
pragmatic arguments justify empirical approach 
author belief technological progress conventional computer design terms speed memory capacities allow neural net simulations complexity mathematicians capable analysing 
expect simulations hit new qualitative phenomena analysts subsequently attempt understand 
chapter essentially investigation 
qualitative phenomena discovered explained sections 
paragraphs justification explanation genetic programming 
gp new approach simply explaining gp attempting justify provide incomplete picture gp 
justification approach results obtained discussed 
section neural networks complete 
plenty text books basic principles neural nets needs explained order reader understand genetic algorithm applied evolution neural nets 
minimum follows 
artificial neural networks constructed connecting artificial neurons function consists essentially accepting incoming signals weighting appropriately emitting output signal neurons depending weighted sum incoming signals 
fig shows basic idea 
sn wn oj signals weights neuron output fig artificial neuron incoming signals strengths si 
incoming signal si weighted factor wi total incoming signal strength dot product signal vector 
weight vector 
dot product usually fed non linear sigmoid function shown fig 
activity output output exp activity fig 
neural output function binary versions ideas input signals binary weights reals output binary depending sign dot product 
details see textbooks gp incoming signals assumed reals weights output signals 
sigmoid function shown fig functioning single neuron discussed need consider group neurons usually connected form networks 
title section neural networks 
broadly speaking major categories networks known layered feed forward fully connected 
types author gp experiments 
fig 
shows layered feed forward network 
word layered obvious 
usual number layers input layer hidden layer output layer shown 
word feedforward output signals fed back previous layers 
weights input vector applied input layer result definite output vector 
learning algorithms exist modify weights allowing desired output vector input vector 
best known algorithm called backpropagation backprop algorithm common network type called fully connected shown fig 

dynamics fully connected networks lot complicated explains theorists prefered feedforward networks 
shall see level complexity dynamics network usually irrelevant genetic algorithm responds quality results dynamics dynamics produced 
fully connected network obviously includes feedback outputs depend initial inputs history internal signal strengths 
greater complexity may disadvantage terms greater number degrees freedom may useful functioning gennets greater robustness giving ga larger search space play 
input layer hidden output layer layer feedforward network fully connected network fig 
neural network architectures imagine little dozen artificial neurons connected outputs neurons parameter values certain calculations 
results calculations fed back external inputs neurons process repeated hundreds cycles extremely complicated dynamical system 
computer simulation system quite state art relatively modest stations 
order able evolve behaviour system described paragraph needs understand little genetic algorithm technique control artificial evolution behaviour 
brief description genetic algorithm follows 

genetic algorithm genetic algorithm ga mentioned form artificial evolution 
evolution 
key concepts need introduced able understand ga employed evolve neural network behaviours 
probably important idea linear mapping structure system dealing string symbols usually binary string 
example imagine trying find numerical values parameters specify complicated nonlinear control process 
convert values binary form concatenate results long binary string 
alternatively reverse take arbitrary binary string extract map numerical values 
imagine forming population binary strings simply random number generator decide binary value bit position 
bit strings appropriate length agree numerical representation chosen specify values parameters 
imagine means measuring quality performance level fitness darwinian terms control process 
step discussion measure performance levels process specified corresponding bit string 
bit strings called chromosomes ga specialists reasons soon apparent 
reproduce chromosomes proportion fitnesses chromosomes high scores relative members population reproduce 
assume initial population chromosomes replaced offspring population size fixed inevitably competition survival chromosomes generation 
poor fitness chromosomes may survive 
darwinian survival fittest situation 
increase closeness analogy biological chromosomes binary chromosomes introduce ga specialists call genetic operators mutation crossover apply appropriate probabilities offspring 
mutation case simply flipping bit usually small probability 
crossover usually chromosomes cutting positions length bit string exchanging portions cut shown fig 
fig crossover chromosomal pairs chance application genetic operators causes fitness resulting chromosome slightly superior members population offspring generation 
generations average fitness population increases 
increase fitness due favourable mutations possible combination favourable mutation single offspring due effect crossover 
crossover synonymous sex 
biological evolution hit efficacy sex early history 
crossover separate favourable mutations parents combined chromosome offspring accelerating significantly adaptation rate vital species survival environments rapidly changing 
order understand details mentioned sections ga concepts need introduced 
concerns techniques select number offspring member current generation 
simplest techniques called roulette wheel slices pie roulette wheel sectors members population assumed fixed evolution 
angle subtended sector slice pie proportional fitness value 
high fitness chromosomes slices pie large sector angles 
select generation genetic operators applied simply spins roulette wheel number times equal number chromosomes population 
roulette ball lands sector simulated random number generator corresponding chromosome selected 
probability landing sector proportional angle fitness fitter chromosomes survive generation darwinian survival fittest title algorithm genetic algorithm 
concept called scaling linearly transform fitness scores selection generation 
done reasons 
avoid premature convergence 
imagine chromosome fitness value early generations 
quickly squeeze members population fitness scores transformed 
choose scaling largest scaled fitness small factor times average scaled fitness 
similarly scaling evolution average unscaled fitness value approaches largest unscaled fitness ga hitting natural local optimum behaviour system evolved 
fitness scores differ little real selection pressure remains search superior chromosomes increasingly random 
continue selective pressure increasingly small differences unscaled average fitness largest fitness magnified linear scaling employed prevent premature convergence 
technique evolving gennets 
forms crossover ga literature fairly simple form follows 
randomly pair chromosomes selected generation apply crossover pair user specified probability value usually 
called point crossover applied chromosome cut random positions fig 
inner portions chromosomes swapped 
initialisation loop scaling selection crossover mutation elite fig 
typical cycle genetic algorithm fairly typical cycle ga algorithm shown fig 
initialisation usually means creation random binary strings 
translates binary strings structures performances measured measures fitnesses performances 
chromosome highest fitness saved point inserted directly generation genetic operators applied 
scaling linearly scales fitness values selection occurs 
selection technique roulette wheel select generation generation chromosomes 
crossover swaps portions chromosome pairs 
mutation flips bits chromosome low probability typically bit 
elite simply inserts best chromosome met far stored phase directly generation 
useful stochastic nature ga eliminate high fitness chromosomes 
elitist strategy prevents 
sketch ga far complete 
contains essence subject 
detailed analysis particularly mathematical justification crossover works see texts available especially ga research domain right mix empirical exploration mathematical analysis neural networks 
essential principles neural networks ga description ga evolve behaviours neural nets follow 

gennets gennet genetically programmed neural net neural net evolved ga perform function behaviour fitness quality measure behaviour 
example imagine trying evolve gennet controls angles pair stick legs time stick legs move right computer screen 
fitness simply distance covered number cycles 
author done far involved fully connected gennets 
remember ga indifferent complexity dynamics gennet complexity prove useful evolution interesting behaviour 
section devoted essentially representing structure gennet corresponding bit string chromosome 
representation chosen author quite simple 
label neurons gennet 
number neurons gennet user specified parameter typically dozen neurons gennet 
gennet contains neurons interconnections including connection looping directly back neuron shown fig 

connection specified sign positive value represents synapse negative value represents inhibitory synapse weight value 
user decides number binary places specify magnitude weights 
typically number 
weights chosen modulus assuming bit sign indicating positive weight negative weight number bits needed specify signed weight connection 
connections number bits 
signed weight connecting ith jth neuron th group bits chromosome reading left right 
representation construct gennet corresponding chromosome 
phase gennet built run appropriate initial user chosen signal values input input neurons input layer layered feedforward network simply subset fully connected neurons said input neurons 
gennets assumed clocked synchronous ticks imaginary clock period called cycle neurons calculate outputs inputs 
outputs inputs cycle 
may cycles typical gennet behavioural fitness measurement 
outputs output layer feedforward net subset fully connected neurons designated output neurons control specify process behaviour 
concrete examples follow 
function behaviour specified output time dependent independent measured fitness quality fitness select generation gennet chromosomes 

genetic programming gp techniques building gennet understood thinking build networks networks gennets control gennets allowing hierarchical modular construction gennet circuits 
genetic programming consists major phases 
evolve family separate gennets behaviour 
second put components functions desired 
genetic programming gennets kinds behavioural functional control 
control gennets send outputs inputs behavioural gennets control direct 
type control kinds direct indirect 
examples types control shown sections 
direct control signal output values fed directly inputs receiving neurons usually intervening weights value 
receiving gennets need necessarily behavioural 
may control gennets 
logic gennets appropriate term 
indirect control may occur incoming signal value greater specified threshold 
transcending threshold act trigger switch behavioural gennet switch 
just occurs output signal values gennet switches influence input values gennet switches depend application 
concrete example see section describes artificial creature called lizzy 
direct control evolution behavioural control gennets take place phases 
firstly behavioural gennets evolved 
perform desired signs weights frozen 
control gennets evolved outputs control gennets connected inputs behavioural gennets weights frozen 
weights control gennets evolved control optimum control behavioural gennet complex supposed 
see section concrete example direct control 
control gennets evolved weights frozen control behavioural gennets considered unit 
units combined controlled control gennets 
process extended indefinitely allowing construction hierarchical modular gennet control systems author prefers look artificial nervous systems 
note plenty unexplored potential idea 
examples follow really scratch surface possible genetic programming 

example pointer pointer example time independent evolution meaning outputs gennets fed back inputs 
inputs conventionally clamped fixed outputs stabilize 
fig 
shows setup example 
eye joint robot arm positioning pointing problem 
aim task move robot arm vertical start position goal position joints eye positions ja ja ea ea joint eye angles point ja ja ea ea fig 
setup pointer experiment pointer example modular hierarchical approach genetic programming 
different gennet modules evolved 
called joint module controls angle ja joint opens input control signal strength second called control module receives inputs ea ea eyes sends control signals joints open angles ja ja 
fig 
shows basic circuit design ga uses find joint control modules 
joint modules identical copies evolved placed control control module 
module containing user specified number neurons fully connected including connections neuron 
neurons connections opposite direction corresponding signed weight 
input output neurons links fixed weights unit 
outputs control module inputs joint modules shown fig 

eye eye joint joint control module joint modules angle angle angle angle fig 
gennet modules pointer experiment aim exercise ga choose values signs weights various modules circuit performs desired 
done modular fashion weights joint module 
weights frozen weights control circuit arm moves close possible specified goal point weights transfer functions restricted range output values stabilized usually cycles accuracy 
cycle outputs calculated inputs calculated previous cycle 
outputs input values neurons outputs connect 
ga choose values weights actual output close possible desired output 
function joint module effectively act circuit output half value input 
may somewhat artificial point pointer merely illustrate principles modular hierarchical gennet design genetic programming 
evolve joint module training input values ranging steps 
desired output values ranged interpreted half turn joint joint angle degrees positive angle clockwise 
ga parameters experiment crossover probability mutation rate scaling factor population number generations 
fitness quality measure evolution joint module inverse sum squares differences desired actual output values 
fig 
shows set training points evolve control module 
points lie radius units length arm unit 
points pair eye angles ea ea calculated converted fraction half turn 
values inputs control circuit 
resulting joint angle output values ja ja calculate actual position arm simple 
quality chromosome codes signs weights control module inverse sum squares distances pairs actual positions corresponding desired positions fig 
training points pointer experiment fig 
shows example solution weight values joint module 
weights obtained roughly generations ga actual output values differed desired values 
similar solutions exist weights control module gave distance errors length arm unit 
interesting time set weights module different answer obtained fully functional 
impression may large number possible adequate solutions gives genetic programming certain flexibility power 
neuron neuron weights fig 
weight values joint module interesting result generalisation vector mapping occured 
training set consisted fixed points 
arbitrary eye angles input corresponding actual output joint angles close desired joint angles 
experiment obviously static nature 
fig 
dynamics terms output values output neurons fed back inputs input neurons 
see clearly idea hierarchical control control gennets command functional gennets 
idea explored extensively lizzy experiment section 
contents section author 
example walker having considered time independent process section fascinating question gennets control time dependent systems fitness result cycles essentially dynamic process feedback feature 
great advantage gennet approach dynamics complicated ga may able handle guarantee 
see final section evolvability 
ga usually indifferent complexity cares fitness value 
value obtained irrelevant ga chromosomes survive specify high fitness performance reproduce offspring generation 
vehicle test idea author chose try get gennet send time dependent control signals pair stick legs teach walk 
set shown fig 

right leg left leg hip joint fig 
setup walker experiment output values gennet interpreted angular accelerations components legs 
knowing values angular accelerations assumed constant cycle cycle time period neurons calculate synchronously outputs inputs knowing values angles angular velocities cycle calculate values angles angular velocities cycle 
input gennet control module chosen angles angular velocities 
fig 
shows feedback works 
fully self connected network ang accel ang accel ang accel ang accel ang ang ang ang ang vel ang vel ang vel ang vel fig 
walker gennet knowing angles readily calculate positions feet stick legs 
feet lower foot said ground distance positive negative positions newly grounded foot previously grounded foot calculated 
aim exercise evolve gennet stick legs move far possible right user specified number cycles cycle time 
gennet consists neurons input neurons output neurons hidden neurons 
input neurons inputs values angles angular velocities 
input angles range means half turn degrees 
initial start angles chosen appropriately initial angular velocities usually zero range means half turn second 
activity neuron calculated usual way sum products inputs weights weight values range 
output neuron calculated sum antisymmetric sigmoid function fig 
outputs neurons restricted absolute values avoid risk explosive positive feedback 
chromosomes representation described previous section 
selection technique roulette wheel quality measure fitness selecting generation total distance covered stick legs total time user specified number cycles 
fitness velocity stick legs moving right 
right distances non negative 
stick legs move left scored zero eliminated generation 
parameter values series experiments undertaken 
experiment constraints imposed motion stick legs selection move right screen 
resulting motion 
consisted curious mixture legs strange hip knee joints 
certainly moved right starting angles angular velocities 
distance covered increased speed motion increased efficient squashed stroke 
see fig 
snapshots 
fig 
snapshots walker constraints second experiment stick legs move hip joint remained floor line drawn screen 
evolution hip joint hit floor evolution ceased total distance covered frozen cycles executed chromosome 
cycle coordinates feet calculated check see hip joint lie feet 
time evolution slower presumably harder find new weights led motion satisfying constraints 
resulting motion experiment hip joint remained floor 
third experiment full set constraints imposed ensure lifelike walking motion hip knees toes floor knees toes hip knee angles degrees 
result stick legs moved take long single step possible splits legs extended possible hip joint just floor 
position impossible move 
evolution ceased 
looked ga local maximum 
valuable lesson focussed attention important concept evolvability capacity evolution 
change approach needed 
led serendipitous discovery concept behavioural memory tendency behaviour evolved earlier phase persist phase 
example phase evolve gennet behaviour take weights signs resulting evolution initial values second phase evolves behaviour notices behaviour contains behaviour form sequential evolution useful genetic programming teach stick legs walk move right step manner evolutionary phases 
phase gennet evolved short time period cycles took stick legs initial configuration left leg front right leg reverse configuration 
angular velocities zero start finish 
allowing resulting gennet run longer time period cycles resulting motion foot moved front foot floor touch floor 
quality measure fitness gennet inverse sum squares differences desired actual output vector components treating final values component state vector angles angular velocities 
gennet taken input second sequential evolutionary phase get stick legs take short steps 
fitness time product number net positive steps taken right distance 
result definite stepping motion right distance covered small 
resulting gennet third phase fitness simply distance covered 
time motion definite stepping motion strides taken long 
stick legs walking 
see fig 
snapshots 
fig 
snapshots walker full constraints experiments performed tens generations ga typical ga parameter values population size crossover probability mutation probability scaling factor number cycles 
video results experiments 
obtain real feel evolution motion stick legs really needs see 
effect quite emotional proven reaction audiences world conferences 
really quite amazing angular coordination lines evolved point causing stick legs walk 
success walker powerful effect author convinced possible basic idea evolve behaviours essential idea genetic programming build artificial nervous systems evolving gennet behaviours behaviour gennet switching control gennets 
concrete discussion exciting prospect follows section 

example lizzy section reports way partial results mentioned 
lizzy project quite ambitious hopes considerable contribution emerging new field artificial life project aims show genetic programming build simulated artificial nervous system gennets 
process called brain building accurately building 
term appropriate considering human brain contains nearly neurons contain order hundreds neurons 
simulating neurons roughly limit day technology change 
section concerned principally description simulation just 
point exercise show kind thing done done successfully mere dozen gennets building blocks possible design artificial nervous systems gennets numbering hundreds thousands 
imagine near teams human genetic programmers devoted task building quite sophisticated nano micro 
brains capable elaborate behavioural range 
show pipe dream concrete proposal showing gennets combined form functioning simulated artificial nervous system 
implementation proposal completed time writing progress far inspires confidence project completed successfully 
vehicle chosen illustrate endeavour shown fig 

fig 
lizzy artificial lizard lizard creature called lizzy consists rectangular wire frame body part legs fixed antenna form lizzy capable reacting kinds creature environment mates predators prey 
categories represented appropriate symbols simulator screen 
category emits sinusoidal signal characteristic frequency 
amplitudes signals decrease inversely function distance 
prey emit high frequency mates middle frequency predators low frequency 
antenna picks signal detect frequency average strength 
signal strength large value called attention threshold lizzy executes appropriate sequence actions depending frequency detection decision 
object prey lizzy rotates moves direction object signal strength maximum stops prey hen pushing front body front legs wanders 
object predator lizzy rotates away signal strength attention threshold 
object mate lizzy rotates moves direction object signal strength maximum stops mates pushing back body back legs wanders 
merely sketch lizzy behavioural repertoire 
order allow lizzy execute behaviours detailed circuit gennets connections needs designed 
fig 
shows initial attempt designing gennet circuit 
different motion gennets random move default option 
motions switched random move switched 
provisionally motion gennet consists output neurons output values walker gennet interpreted angular accelerations 
position upper lower part leg defined angle leg line takes cone axis symmetry equidistant xyz axes defined body frame 
leg line confined rotate surface cone shown fig 

fig 
conical rotation lizzy legs approach chosen limit number degrees freedom leg angles 
leg part degree freedom wanted keep gennet fully connected outputs inputs angles angular velocities neurons gennet squared connections resulting chromosome huge 
attention signal strength detector left antenna frequency detector mate prey predator input input right antenna mate prey predator left greater right detector right greater left detector left right approx detector rotate clockwise move forward rotate random move maximum signal strength detector legs legs timer input prey mate peck prey peck prey timer mate mate timer left right antenna anti clockwise average signal strength detector average signal strength detector frequency detector attention signal strength detector fig 
lizzy gennet circuit power fun gennets evolve motion specifying detail motion performed 
example fitness move forward gennet simple function total distance covered number cycles modified measure total rotation drift away desired straight ahead direction 
similar simple fitness functions defined rotation gennets 
fact needs evolved 
simply swap body side connections symmetry reasons 
understanding gennet circuit fig 
fairly straightforward mechanism rotating away object 
antenna fixed body frame lizzy 
signal strength left antenna larger right object prey mate lizzy turn rotating away rotating clockwise object predator 
eventually signal strengths equidistant object 
happens lizzy moves forward 
paragraphs describe gennets fig 
give quality fitness functions 
section reports progress gennets completed time writing 
remaining indicated tbe 
detector gennets frequency detector tbe average signal strength detector tbe maximum signal strength detector tbe detector gennets evolved 
initial attempts frequency detection gennets shown trivial business indicating genetic programming art 
left greater right detector gennet evolved supervised learning 
input neurons output neuron hidden neurons 
desired output value greater left input value greater right input value negative 
input value ranged steps giving combinations 
fitness defined inverse sum squares errors inputs left right output error squared 
clamped input values output values usually stabilize dozen cycles 
output values measured fixed number cycles 
gennet worked fine high quality fitness values 
note rotate clockwise motion gennet switched depends category detected creature 
detector creature category try evolve gennet extra input indicate prey mate predator 
predator input value high rotate clockwise gennet switch 
experience shows gennets different behaviours different input switching values harder evolve 

example author able get walker move constraints right left screen depending input value extra input switching neuron fixed 
gp remains art moment 
mathematical criteria evolvability exist unfortunately 
right greater left detector trivial modification gennet 
merely switches input connections 
left right detector gennet similar 
input training values combinations 
input values differed output value greater negative 
fitness inverse sum squares errors 
gennet evolved easily 
attention signal strength detector gennet takes output average signal strength detector checks average value lies threshold 
gives output value greater negative 
training input values ranged steps range possibilities 
input greater arbitrary threshold value output supposed negative 
fitness definition 
problems 
logic gennets gate gennet input output hidden neurons 
input value interpreted high greater high output value supposed greater negative 
input training values input neuron ranged steps combinations 
fitness 
effector behavioural motion gennets straight ahead walk gennet contained neurons input output hidden 
choose numbers 
formulas 
gp art 
input values calculated output values described section 
motion definition lizzy chosen follows 
motion occurs cycle 
step find position orientation body frame resulting completion previous cycle 
input conical angle values position legs relative body frame computational convenience body frame momentarily assumed lie xy plane 
lizzy body orientation position previous motion cycle 
step position legs relative floor 
lizzy lowered raised vertically lowest leg touches floor xy plane point 
lizzy rotated vertical plane includes second lowest foot foot touches floor 
lizzy rotated axis third lowest foot touches floor 
get lizzy walk component motion definition introduced 
front feet assumed sticky back feet merely slid floor 
left right front leg defined front leg floor pushing lizzy 
current lifted floor front leg position floor fixed 
motion definition contains components positioning legs relative wire frame body positioning body legs relative floor displacing legs floor 
motion definition artificial hindsight initial attempt illustrate principle gp nervous system design 
fitness function getting lizzy move straight ahead simply component distance covered straight ahead direction 
lizzy walk reasonably 
see video 
rotate clockwise gennet architecture 
motion definition differed slightly get rotation moment front legs orientation vector body corner position fixed foot floor position fixed 
lizzy rotate keep vector fixed orientation leg relative body changed 
fitness defined cosine angle rotated 
lizzy degree turn cycles 
rotate 
order measure sign angle rotated sine cosine initially cosine calculated 
rotations wrong direction zero fitness eliminated generation 
legs tbe debatable gennet needed 
idea just take lizzy leg configuration standard position leg angles symmetric values order allow lizzy peck mate 
discussion point see section 
timers gennets specify long mating go 
output goes high value low value number cycles cycles 
fitness usual inverse sum squares errors desired actual output values 
peck gennet trivial construct 
back legs frozen elevated symmetrical position 
value angle inputs fed front leg components 
inevitably led motion lizzy head 
mate gennet similar peck gennet 
time front legs fixed symmetric position back legs fed values angle input neurons 
led inevitably led mating motion 
random move reasonable motion gennet get lizzy move randomly half evolved gennet rotation straight ahead motion 

discussion ideas obvious previous section lot remains done lizzy fully functional 
gennets evolved lizzy gennets integrated lizzy gennet circuit 
initially switching gennets simple reset lizzy leg positions reset taken evolution particular motion gennet switched 
stage form limit cycle behaviour may possible 
evolving behaviour set starting parameters evolves behaviour ensemble sets fitness average performance ensemble 
gennet performance evolves form limit cycle behaviour may occur independently starting conditions 
interesting idea pursue depending motion definition may require considerable computing power lots time evolution 
behavioural limit cycling possible transitions behaviours smooth 
resets necessary matter final state legs gennet switches new behaviour generated starting state gennet switching 
related question concerns gennets evolved form behavioural inertia continue behave desired way number executed cycles goes number evolve behaviour 
behavioural limit cycling occuring behavioural inertia taken granted 
ideas discussed section prove successful steps need taken order genetic programming generally applicable methodology computer science general artificial life particular 
major directions development research 
concerns speed artificial evolution implemented 
nice techniques accelerated putting directly hardware vlsi accelerator chips gennet development 
hardware versions gennet generators called darwin machines essential component large scale gp projects 
imagine teams human genetic programmers devoted task evolving large numbers gennets incorporated increasingly complex artificial nervous systems 
gennets need developed example evolution speed essential 
traditional serial computers hopelessly slow kind 
second major direction gp research development put gennets real world insect robots genetically program 
alternative second direction exclusively simulate increasingly sophisticated nervous systems 
option author intends take spends lot time effort creating elaborate simulations day valuable functioning real world robot comparable effort 
simulation remain important 
build insect robot reasonably sure 
assurance usually comes successful simulation 
definition motion lizzy section real world compatible 
changed moving leg time adjusting orientation body frame change 
ga decide order moving legs 
motion definition closer get real insect robot move 
allow robot real world evolution 
robots cheaply evolve simultaneously reporting fitnesses central computer selects chromosomes generation passes back robots 
vision author genetically programmed insect robots near 
building insect robots presumably mean storing gennet weights roms connecting control real world detectors effectors robot artificial nervous system 
problem evolving gennet robots concerns time needed measure fitnesses real world 
great advantage computer simulation computer speed 
sends control rom gennet control signals real insect robot effectors perform real world mechanical speeds milliseconds best seconds 
measuring fitnesses population inevitably take time 
approaches take problem 
approach simulate dynamics robots accurately possible get ball park estimate fitness resulting gennet weights starting values real world evolution 
robot sequentially times results chromosome dynamical expression stored generation order able select generation robots evolve parallel mentioned 
gradually replaced nanotechnology size cost robots may decrease dramatically 
huge numbers evolved parallel 
ideas need considered genetic programming 
artificial nervous system discussed section entirely incapable learning 
lizzy gennet circuit fig 

adaptation lizzy experience 
nervous systems efficient useful bodies serve capable improving performance basis previous experience 
gennets capable learning essential 
important short term research goal gp 
idea needs explored possibility getting ga human genetic programmer combine gennets build artificial nervous systems 
raises question gennets combined 
difficult evolve individual gennets evolving artificial nervous systems orders magnitude difficult computationally expensive 
done incrementally progress direction possible 
modification successful artificial nervous systems may lead successful variants amenable ga treatment 
aspect gp needs serious consideration concerns concept evolvability capacity system evolve rapidly interesting 
experience author knows choice representation dynamics system choice fitness function inappropriate evolution slow infinitesimal 
example tiny change starting conditions causes major changes fitness result fitness landscape parameter space solutions may spiky just hilly making ga search virtually random slow 
may problem parameter space isolated solution spikes may hard find 
criteria evolvability research topic worthy ga community 
gennet chromosomes long thousands bits especially artificial nervous systems built may code large numbers parameter values 
see section example 
dynamic behaviour resulting time dependent parameters may sensitive changes initial values parameters gennet weights 
final idea concerns possibility elaboration middle logic layer detectors effectors artificial nervous systems may sophisticated capable handling symbolic reasoning 
looks development biological life earth sees behaviour came symbol manipulation evolve 
nervous systems capable manipulating symbols essentially built behavioural base 
difficult imagine elaborate gennet circuits capable handling sequences production rules form may form elementary basis symbolic representation manipulation 
logic gennets way may see beginnings grand synthesis traditional symbolic artificial intelligence genetic algorithms neural networks artificial life 
artificial life researchers hope bottom behavioural approach top disembodied symbolic approach ai researchers day meet middle 


rudnick interconnect structure wafer scale neurocomputers proceedings connectionist models summer school eds touretzky hinton sejnowski morgan kaufmann 

reed quantum semiconductor devices molecular electronic devices carter eds 
north holland 

drexler engines creation coming era nanotechnology doubleday 

nano technology feynman machines scanning tunneling engineering artificial life 
feynman quantum mechanical computers optics news pp february 

goldberg genetic algorithms search optimization machine learning addison wesley 

rumelhart mcclelland parallel distributed processing vols mit press 

langton ed artificial life addison wesley 

proceedings st international conference neural networks san diego 

holland adaptation natural artificial systems ann arbor univ michigan press 

de garis genetic programming modular neural evolution darwin machines proceedings ijcnn wash dc international joint conference neural networks january washington dc 

de garis genetic programming building genetically programmed neural network modules proceedings ijcnn international joint conference neural networks june 

de garis genetic programming building artificial nervous systems genetically programmed neural network modules proceedings th 
int 
conf 
machine learning austin texas june morgan kaufmann 
