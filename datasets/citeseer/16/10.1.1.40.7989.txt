learning context free languages survey literature lillian lee tr center research computing technology harvard university cambridge massachusetts learning context free languages survey literature lillian lee harvard university center research computing technology cambridge ma survey methods learning context free languages cfl theoretical computer science literature 
important negative results 
consider types methods take text input take structural information input rely cfl formalisms context free grammars learn subclasses cfl stochastic methods 
description subclasses cfl considered provided extensive bibliography 
may arrive grammar intuition guess sorts partial methodological hints reliance past experience doubt possible give organized account useful procedures analysis questionable formulated rigorously exhaustively simply qualify practical mechanical discovery algorithm grammars 
cho problem grammatical inference broadest sense problem learning description language data drawn supported nsf graduate fellowship bell labs graduate research program women 
ron rivest mona singh helpful comments 
necessarily language 
problem inferring context free languages cfl worth considering practical theoretical reasons 
practical applications include pattern recognition speech recognition approach pattern recognition infer context free grammar cfg produces set patterns fu ability infer approximate cfgs natural languages enable speech recognizer modify internal grammar fly allowing adjust individual speakers hor 
theoretical standpoint problem poses interesting challenge cfl understood serious limitations learning 
argued successful language learning algorithms model humans acquire language 
point questionable principal motivations early grammar inference 
course description problem far informal need define learning language means 
grammatical inference literature attention focused identification limit line performance measure gol 
framework time learner receives information unit language outputs hypothesis 
learning algorithm successful finite amount time guesses correct description language question 
popular learning criterion exact identification queries polynomial time ang 
framework learner access oracles answer questions language halt polynomial time correct description language 
note specified type information units kind oracles learner access 
omission intentional information provided powerful type grammar inference possible 
hope give organized account useful procedures analysis problem inferring cfl 
interest readability results informally possible 
discuss section negative results alluded 
sections review methods inferring cfg powerful sources information 
section briefly discuss learning results alternative formulations cfl formulations cfg 
section surveys papers learning subclasses cfl 
learning algorithms bayesian flavor described section 
give formal evidence natural languages context free cul 
definitions grammars described section provide bibliography believe complete respect theoretical computer science literature 
hope papers reviewed demonstrate chomsky partially right certain scenarios practical mechanical discovery algorithms hand studying learning situations yielded interesting results 
feasibility grammar inference faith put powers induction aided intelligent heuristics discover right grammar 
stupid people learn talk brightest apes 
cho sadly strong negative results learnability contextfree grammars 
main theorems impossible identify classes languages chomsky hierarchy limit data consists strings language inferred gol ability ask equivalence queries guarantee exact identification polynomial time ang 
literature inferring context free grammars strange flavor researchers resorted say desperate measures get restrictions imposed negative results 
consider gold theorem 
recursively enumerable language positive presentation infinite sequence containing strings repetitions allowed 
super finite class languages contains finite languages infinite language 
definition class languages 
algorithm identifies limit positive presentations iff positive presentation time receives outputs hypothesis effectively computable time hm hm hm correct description identifies limit effectively computable 
theorem exists super finite class languages learnable effectively learnable limit positive presentations 
proof sketch 
ae ae sequence finite languages set suppose learning algorithm effectively identifies fl finiteg fl limit 
identify finite language finite amount time 
give positive presentation forces infinite number mistakes examples repeats guess give examples repeats force guess 
clearly examples proof reliance allowing arbitrary repetition bit unsatisfactory pleasing diagonalization argument possible 
note angluin necessary sufficient condition class languages identifiable limit positive data involving language containing telltale finite subset prevents overgeneralization occurs proof theorem ang 
gold theorem tells class regular languages identifiable limit positive data allowed 
disappointing result especially computational linguists obvious approach finding grammar natural language feed large texts learning algorithm 
speculate implications human language learning 
surprising positive data insufficient hypothesizes language superset target example causes alter guess 
expect powerful source information remedy situation angluin shows equivalence queries insure exact identification polynomial time ang 
representation class languages representation language equivalence oracle takes input returns returns string symmetric difference 
definition deterministic algorithm exactly identifies equivalence queries polynomial time iff polynomial delta delta run access equivalence oracle point computation amount time bounded maximum length counterexample returned far length shortest representation suppose exhibit target set string wl small fraction languages classify wl way 
giving wl counterexample eliminates languages consideration 
definition approximate fingerprint property iff polynomials polynomials sequence language classes sufficiently large languages ii 
representation length iii 
length string wl length jfl wl wl gj jt 
polynomials mentioned positive nondecreasing 
characteristic function clearly representation approximate fingerprint property algorithm exact identification equivalence queries polynomial time 
angluin goes give involved proof natural representations cfg approximate fingerprint property 
mention passing pitt warmuth shown modulo polynomial time transformation cfg hard predict certain cryptographic predicates compute see pit details 
negative results formidable quick glance bibliography shows people give problem 
approaches taken provide learning algorithms helpful information negative examples structural information formulate alternative representations cfg notice dependence angluin result type representation restrict attention subclasses cfl don contain finite languages bayesian methods search grammars 
review approaches 
learning text section examine cfl inference algorithms take texts input text sequence strings alphabet cfl learned text may contain strings target language specified 
general branch investigation productive gold theorem points texts helpful source information 
earliest methods learning cfg sol 
solomonoff proposed algorithm uses positive data know method complete fact fu observes discover languages sequential embedding fu discuss influenced approaches 
learning scenario learner positive sample language access membership oracle string tells learner string solomonoff strategy find repeating patterns strings string delete substrings create new string ask oracle language 
insert repetitions deleted substrings string ask new string language 
infer recursive rule 
lots strings form language aab probably grammar 
clearly method extremely inefficient depends heavily strings included mentioned learn cfl 
idea having patterns strings correspond nonterminals grammar shows papers cfl inference 
papers studying grammar learnability texts kno tan 
knobe knobe consider situation learner positive data input access membership oracle 
algorithm give really collection obvious heuristics enormous time complexity heavily dependent order samples 
gives algorithm learns cfg positive negative examples strings 
technique remove self embedding structures finite sample infer linear grammar sample compose inferred linear grammars create cfg 
method shown complete cfl time analysis 
learning structural data alternative learning texts learn structural data 
interested just strings grammar derives derivation tree grammar assigns strings generally want cfg structural sense 
way structural data represented strings generated parenthesis grammar 
context free grammar corresponding parenthesis grammar formed replacing production ff 
ff assume parentheses symbols sigma 
presents incremental algorithm identifying operator precedence grammars limit positive parenthesized data strings target language cre gives method learning distinct homogeneous grammars positive parenthesized negative possible parenthesized data cre 
structural data represented skeletons derivation trees nonterminal labels removed lj 
key property skeletons exactly set trees accepted skeletal tree automata sa variation finite automata take skeletons input 
informally sa tree input assigns states leaves moves tree assigning state node solely basis states node children 
accepts iff assigns final state root automata characterization skeletons derivation trees means problem learning cfg reduced problem learning sa 
particular sakakibara extends angluin method learning finite automata fa algorithm identifying sa polynomial time requires able ask structural membership structural equivalence queries sak 
shows infer reversible cfg limit positive structural data adapting angluin technique reversible automata ang 
fass gives similar method algorithm depends samples suitably selected fas 
alternative conceptions cfl researchers attacked problem representations cfl grammars 
yokomori gives algorithm learns context free expressions arikawa method inferring regular elementary formal systems 
papers bring solutions domains bear problem cfl inference techniques yielded polynomial time algorithms 
cfl 
define substitution set strings gen erated string replacing occurrences strings string replaces string replaces don 
define iteration set strings delta delta delta don contain occurrence sigma alphabet set sigma foe oe sigmag sigma copy sigma symbol oe sigma replaced new symbol oe 
definition context free expressions cfe alphabet sigma strings alphabet sigma sigma phi defined follows 
phi sigma cfe 

cfe sigma cfe 
mapping lang cfe languages follows 
lang phi oe 
lang fag 
lang lang lang lang lang lang lang ea lang example cfe acb ab represents set fa 
yokomori simply extends algorithm identifies regular expressions limit positive negative data applies cfe 
states time complexity npcomplete due essential difficulty learning example strings arikawa reduce problem cfl inference solvable 
come formulation cfl sets symbols predicate symbols definite clauses employ shapiro model inference system 
algorithm efficient 
learning subclasses cfl common tactic researchers get gold theorem consider classes cfl bounded fashion contain finite languages 
look results restricted classes relied powerful oracles candidates improvement polynomial time reduction learning linear languages learning regular languages 
angluin shows bounded cfg identifiable polynomial time equivalence queries nonterminal membership queries ang 
nonterminal membership queries propose string nonterminal answer derivable 
effect learner allowed ask structure target grammar 
applies angluin algorithm simple deterministic languages sdl way nonterminal membership queries longer needed ish 
algorithm allowed extended equivalence queries propose grammar grammar sdl answer target grammar equivalent extended equivalence queries strong nonterminal membership queries sense don directly convey structural information 
equivalence cfg undecidable oracle answering query quite powerful 
yokomori gives polynomial algorithm learning sdl conjectures sdl algorithm requires prefix membership oracles derivative membership oracles 
prefix membership queries ask string prefix string target language derivative queries propose pairs strings answer fw fw wv problem learning linear languages ell reduced problem learning regular languages shown tak 
basic idea consider productions linear grammar labelled symbols finite alphabet gamma 
fl fl fl delta delta delta fl gamma write fl starting start symbol applying productions labelled fl fl fl order derive string define language generated control set set lc fw sigma fl fl cg control set describes possible derivations strings 
proves alphabet universal linear grammar generates ell alphabet control set regular 
order learn ell suffices learn corresponding regular control set 
furthermore translate control strings strings language control sets linear grammars polynomial time means equivalence membership queries posed regular language learner rephrased terms corresponding linear language 
result extended linear languages tak similar result mak 
subclasses cfl shown learnable structurally reversible languages bur counter languages languages accepted deterministic counter automata br pivot languages simple languages 
bayesian approaches discuss bayesian methods 
attempt search space stochastic cfg exhaustively enumeration sort heuristic search cases search guided goodness function account intrinsic complexity probability grammar match mismatch grammar sample data feldman gives formal definition grammatical complexity analogous blum formulation complexity fel 
solomonoff method uses incomprehensible encoding scheme convert grammars strings advantage assign priori probabilities strings grammars uniform manner 
gives precise algorithm suggest altering candidate grammars try find nearby grammars higher goodness value 
phd thesis horning gives enumerative algorithm identifies scfg limit probability stochastic data data generated scfg 
notice means algorithm works positive presentations probability saves day 
presents interesting idea assigning priori probabilities grammars means stochastic grammar grammars 
wharton wha van der walker vw enumerative methods search grammars complexity certain threshold 
needless say algorithms quite inefficient 
look cook discusses hillclimbing algorithm cra 
give complexity measure strings property strings length contain number distinct symbols string greatest complexity symbols frequency 
random string appears higher complexity 
context free grammars sigma set nonterminals sigma alphabet set productions start symbol 
capital letters denote nonterminals lowercase letters alphabet denote terminals lowercase letters alphabet denote strings sigma greek letters represent strings sigma ffl operator grammar iff production adjacent nonterminals right hand side productions form 
operator precedence grammar additionally binary relations sigma relation equal precedence holds terminals adjacent separated nonterminal derivation string 
ii 
relation yield precedence holds terminal preceding handle leftmost terminal handle 
iii 
relation take precedence holds rightmost terminal handle terminal immediately handle 
iv 
pairwise disjoint 
handle sentential form substring ff sentential form property exists production ff replacing ff produce previous sentential form rightmost derivation asu 
ffl distinct homogeneous iff start symbol oe ff fu ff sigma jyj uv sigma left terminal set order ff defined similarly reverse order profile ff ff ff 
distinct condition 
ii 
ff fi ff fi 
homogeneous condition 
iii 
right hand side production 
ffl reversible iff ff ff ii 
ffl bounded iff right hand side production contains nonterminals 
ffl simple deterministic grammar iff productions form aff ff jffj aff afi ff fi 
simple deterministic languages languages accepted state deterministic pushdown automata empty stack 
ffl linear iff productions form linear productions form juj jvj 
ffl pivot grammar pg iff sigma partitioned sigma sigma productions form bac bb bb sigma sigma lg ae pg ae cfg 
ffl simple iff greibach normal form terminal exactly rule form aff simple languages proper subset sdl 
ffl stochastic iff assignment weights weight zero inclusive right hand sides productions nonterminal weights right hand sides productions left hand sides sum 
asu alfred aho ravi sethi jeffrey ullman compilers principles techniques tools 
reading addison wesley 
ang dana angluin inductive inference formal languages positive data info 
contr 

ang dana angluin inference reversible languages jacm ang dana angluin learning bounded context free grammars yale tech 
rpt rr 
ang dana angluin queries concept learning machine learning 
ang dana angluin negative results equivalence queries mach 
learning dana angluin carl smith inductive inference theory methods acm comput 
surveys arikawa shinohara yamamoto learning elementary formal systems theoret 
comput 
sci bie biermann grammatical inference program linear languages proc 
rth hawaii int 
conf 
system sciences 
north hollywood western periodicals 
bf biermann feldman survey results grammatical inference int 
conf 
frontiers pattern recognition honolulu 
bur learning structurally reversible context free grammars queries counterexamples polynomial time th colt 
br piotr berman robert roos learning counter languages polynomial time th focs 
cl john case christopher machine inductive inference language identification th icalp lecture notes computer science 
berlin springer verlag 
cho noam chomsky syntactic structures 
hague 

cho noam chomsky formal properties grammars handbook mathematical psychology vol 
ii 
new york john wiley sons 

cre stefano effective model grammar inference information processing 
cre stefano reduction enumeration grammar proc 
nd int 
conf 
art 
intell 
cre stefano non counting languages learning proc 
nato advanced study inst 
computer learning processes 
cra craig cook rosenfeld alan aronson grammatical inference hill climbing inf 
sciences cul christopher complexity vocabulary linguistics philosophy 
fas fass skeletal automata approach inference problem context free languages phd univ penn 

fas fass learning context free languages structured sentences sigact news fel feldman grammatical inference complexity inf 
contr feldman horning grammatical inference complexity tech 
rpt 
cs comput 
sci 
dept stanford 
fu king sun fu syntactic methods pattern recognition 
new york academic press 
fu king sun fu taylor booth grammatical inference survey parts ii ieee trans 
systems man cybernetics smc 
gol mark gold language identification limit inf 
contr 

hor james jay horning study grammatical inference tech 
rpt 
cs computer science department stanford 
hor james jay horning procedure grammatical inference information processing 
ish polynomial time learnability sample deterministic languages mach 
learning kno bruce knobe kathleen knobe algorithm inferring context free grammars cs dept tr hebrew university 
kno bruce knobe kathleen knobe method inferring context free grammars inf 
contr 
lam sydney lamb mechanization syntactic analysis conferenceon machine translation languages applied language analysis national physical lab 
symp 
vol 
ii 
lj leon levy aravind joshi skeletal structural descriptions inf 
contr 
robert mcnaughton parenthesis grammars jacm mak erkki grammatical inference problem languages linear grammars ipl pao wen lee pao solution syntactical problem non trivial subset context free languages moore school elec 
eng univ penn interim tech rpt 
pit leonard pitt manfred warmuth reductions prediction problems difficulty predicting automata rd structure complexity theory 
rn radhakrishnan inference linear grammars application picture description languages pattern recognition sak sakakibara learning context free grammars structural data polynomial time theoret 
comp 
sci 
sak sakakibara efficient learning context free grammars positive structural examples inf 
comput sha shapiro algorithmic program debugging 
cambridge mit press 
stuart shieber evidence context freeness natural language linguistics philosophy 
shi shinohara inductive inference positive data powerful rd colt 
smi smith inductive inference bibliography purdue computer sci 
dept tr 
sol solomonoff new method discovering grammars phrase structure languages information processing 
new york unesco 
sol solomonoff formal theory inductive inference inf 
contr 
tak yuji constructive method grammatical inference linear languages control sets research report int 
inst 
advanced study soc 
info sci 

tak yuji grammatical inference linear languages ipl tan grammatical inference linear languages int 
journal computer information sciences tan grammatical inference context free languages self embedding bull 
informatics cybernetics vw van der adrian walker inference stochastic regular grammars inf 
contr wha wharton grammar enumeration inference inf 
contr takashi yokomori inductive inference context free context free expressions int 
computer math 

takashi yokomori learning simple languages polynomial time tech 
rep sig fai japanese society ai 
takashi yokomori learning context free languages efficiently report results japan jantke ed analogical inductive inference lecture notes artificial intelligence 
berlin springer verlag 
takashi yokomori polynomial time learning simple grammars positive data rth colt 

