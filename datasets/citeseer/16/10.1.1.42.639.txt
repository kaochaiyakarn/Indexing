combining collaborative filtering personal agents better recommendations nathaniel ben schafer joseph konstan borchers sarwar jon herlocker john riedl information filtering agents collaborative filtering attempt alleviate information overload identifying items user find worthwhile 
information filtering focuses analysis item content development personal user interest profile 
collaborative filtering cf focuses identification users similar tastes opinions recommend items 
technique advantages limitations suggest beneficially combined 
shows cf framework combine personal agents opinions community users produce better recommendations agents users produce 
shows cf create personal combination set agents produces better results individual agents combination mechanisms 
key implication results users avoid having select agents cf framework select best ones 
recommender systems help individuals communities address challenges information overload 
information filtering recommenders look syntactic semantic content items determine interest value user 
collaborative filtering recommenders opinions users predict value items user community 
example domain movie selection content filtering allow recommendation movie genre horror comedy romance cast credits woody allen steven 
collaborative filtering contrast copyright american association artificial intelligence www aaai org 
rights reserved 
grouplens research project department computer science engineering university minnesota minneapolis mn www grouplens org completely unaware genre cast know group minded people recommends hoop dreams suggests avoiding dumb 
examine collaborative filtering personal information filtering agents mechanisms combining produce better recommender system 
section reviews existing approaches alleviating information overload including variety content collaborative approaches presents model approaches effective combined 
sections experimental design results 
conclude observations implications results 
information overload problem approaches day books journal articles web pages movies created 
new piece information competes attention quickly overwhelmed seek assistance identifying interesting worthwhile valuable entertaining items expend scarce money time 
historically humans adapted information 
senses tuned notice change unusual 
ability communicate allows collaboratively address large problems 
developed ability quick judgements judge book cover article title movie trailer advertisement 
today finding easier easier produce publish content 
computers communication internet easier speak large audience find developed filtering skills may inadequate 
response challenge information overload sought develop useful recommender systems systems people quickly identify content interest 
project draws creating recommender systems movies film fans tell movielens system movielens umn edu dislike movies seen movielens recommends movies enjoy 
different technologies commonly address information overload challenges 
technology focuses primarily particular set tasks questions 
information retrieval focuses tasks involving fulfilling ephemeral interest queries finding movies directed woody allen 
information filtering focuses tasks involving classifying streams new content categories finding newly released movies directed steven consider watching newly released movies english language soundtrack subtitles reject 
collaborative filtering focuses answering questions items set view 
particular items 
technologies role producing effective recommender system 
information retrieval ir systems focus allowing users express queries select items match topic interest fulfill particular information need 
may index collection documents full text document document abstracts 
items movies ir systems index genres keywords actors directors ir systems generally optimized ephemeral interest queries looking topic library 
belkin croft internet search engines popular ir systems internet movie database www imdb com provides extensive support ir queries movies 
ir front useful recommender system mechanism users identify specific movies express opinion narrowing scope recommendation 
example movielens allows users specifically request recommendations newer movies movies released particular time periods particular movie genres comedy documentary various combinations movie 
information retrieval techniques valuable actual recommendation process capture information user preferences specific query 
reason consider ir 
information filtering systems require profile user needs preferences 
simplest systems require user create profile manually limited assistance 
examples systems include kill files filter advertising mail filtering software sorts mail categories sender new product notification services request notification new book album favorite author artist released 
advanced systems may build profile learning user preferences 
wide range agents including maes agents mail usenet news filtering maes lieberman letizia lieberman employ learning techniques classify dispose recommend documents user prior actions 
similarly cohen ripper system classify mail cohen alternative approaches learning techniques term frequency information filtering techniques central role recommender systems 
techniques build profile user preferences particularly valuable user encounters new content rated 
woody allen fan doesn need wait reviews decide see new woody allen film person hates horror films quickly dismiss new horror film regret 
techniques important property depend having users system users similar tastes 
techniques effective shall see suffer certain drawbacks including requiring source content information providing way serendipitous discovery woody allen seeking agent discover non woody allen drama just happens appeal greatly woody allen fans 
collaborative filtering cf systems build database user opinions available items 
database find users opinions similar highly correlated predictions user opinion item combining opinions individuals 
example sue jerry liked movies sue liked titanic jerry hasn seen system may recommend titanic jerry 
tapestry goldberg earliest cf system required explicit user action retrieve evaluate ratings automatic cf systems grouplens resnick konstan provide predictions little user effort 
systems ringo shardanand maes bellcore video recommender hill widely sources advice music movies respectively :10.1.1.30.6583
number systems begun observational ratings system infers user preferences actions requiring user explicitly rate item terveen 
past year wide range web sites begun cf recommendations diverse set domains including books grocery products art entertainment information 
collaborative filtering techniques important part recommender system 
key advantage cf consider content items recommended 
map users items content attributes demographics cf treats item user individually 
accordingly possible discover new items interest simply people liked easier provide recommendations attributes greatest interest users unknown hidden 
example movie viewers may want see particular actor genre movie feel smart funny movie 
time cf dependence human ratings significant drawback 
cf system users evaluate item new items recommended users taken time evaluate 
limitations referred sparsity rater problems cause trouble users seeking obscure movies may rated advice movies released chance evaluate 
hybrid recommender systems systems tried combine information filtering collaborative filtering techniques effort overcome limitations 
fab balabanovic shoham maintains user profiles interest web pages information filtering techniques uses collaborative filtering techniques identify profiles similar tastes 
recommend documents user profiles 
basu hirsh cohen trained ripper machine learning system combination content data training data effort produce better recommendations 
researchers working collaborative filtering proposed techniques profiles fall back requesting predictions director actor information specific movie having dual systems profile cf system produce high quality recommendation 
earlier sarwar 
showed simple consistent rating agent assesses quality spelling usenet news article valuable participant collaborative filtering community 
showed ratings robots participate members collaborative filtering system helped users agreed providing ratings recommendations 
users agree cf framework notice low preference correlation individual agents ratings 
extends concept key ways 
intelligent set including learning agents personalized individual user 
second apply small communities including cf serve single human user 
third evaluate simultaneous multiple 
addition explore combination mechanisms alternatives cf 
demonstrate cf useful framework integrating agents combining agents humans 
hypotheses experimental design systematically explore value collaborative filtering information filtering different combinations techniques creating effective personal recommendation system 
specifically look key models shown pure collaborative filtering opinions community members single personalized agent machine learning syntactic filter combination agents combination multiple agents community member opinions experimental design uses tiers 
implementations particular model evaluate find model provides best filtering 
second compare best implementation user opinions collection users collection agents agents users combined multiple agents 
models recommender system 
models top user opinions models bottom agents 
models right multiple agents ones left agent 
case user receives personal recommendations 
model implementations 
operationalized primary hypotheses 

opinions community users provide better recommendations single personalized agent 

personalized combination agents provides better recommendations single personalized agent 

opinions community users provides better recommendations personalized combination agents 

personalized combination agents community opinions provides better recommendations agents user opinions 
context hypotheses tested small anonymous community movie fans 
combination small size non textual content cause disadvantages collaborative filtering information filtering provides middle ground common contexts collaborative filtering users little content information information filtering user content information 
data set user ratings experiment drawn movielens system movielens umn edu ratings users 
users selected random set users movie ratings 
user sets movies ratings selected random replacement 
set ratings termed training set set aside training personalized information filtering agents 
second set ratings termed correlation set combining users agents 
final set ratings served test set 
experiment test ratings target user withheld compared recommendation value produced system 
metrics recommender systems researchers different measures quality recommendations produced 
coverage metrics evaluate number items system provide recommendations 
systems coverage decreases function accuracy system produce fewer accurate recommendations inaccurate ones 
information filtering systems provide total coverage report coverage part analysis standard cf system 
statistical accuracy metrics evaluate accuracy filtering system comparing numerical prediction values user ratings items predictions ratings 
shardanand maes sarwar mean absolute error mae measure performance prediction engine 
metrics include root mean squared error sarwar correlation ratings predictions hill konstan sarwar 
experience shown metrics typically track closely 
chosen report mean absolute error commonly easiest interpret directly 
decision support accuracy metrics evaluate effective prediction engine helping user select high quality items item set 
metrics observation majority users filtering binary operation view item 
true item rating point scale irrelevant user views items rating higher 
common decision support accuracy measures reversal rate weighted errors roc sensitivity 
reversal rate frequency system recommendations extremely wrong 
point scale commonly defined percentage recommendations recommendation points 
weighted error metrics give extra weight large errors occur user strong opinion item 
example errors count double user considers item favorite 
roc sensitivity signal processing measure decision making power filtering system 
operationally area receiver operating characteristic curve roc curve plots sensitivity vs specificity test swets 
sensitivity refers probability randomly selected item accepted filter 
specificity probability randomly selected bad item rejected filter 
points roc curve represent trade offs supported filter 
filter allow user choose receiving items accepting bad ones receiving ones bad ones 
random filter accepts percentage bad items 
roc sensitivity ranges perfect random 
roc sensitivity decision support accuracy measure 
operationalize roc determine items bad 
user rating mapping bad 
experience shown reflects user behavior movielens 
user movies rated eliminated user statistics compiled experiment 
evaluating hypotheses face multiple metrics challenge 
considered important consider statistical decision support accuracy evaluating different recommender systems 
agents example provide different incomparable trade offs metrics consider possible best agent compare alternative recommender 
consider alternative dominate significant improvement metric significant difference 
statistical significance assessed mean absolute errors test paired errors 
differences reported significant significance level 
statistical significance assessment roc sensitivity clear experience assert changes meaningful smaller differences meaningful 
experimental components hypotheses models recommender system user opinions individual agents combinations agents combinations agents user opinions 
section describe variety implementations models overview constructed implementation 
effectiveness implementation reported results section 
user opinions 
extensive research performed problem generating recommendations set user opinions 
nearestneighbor collaborative filtering generally accepted effective mechanism performing task breese 
particular research collaborative filtering engine developed grouplens research project exploration collaborative filtering algorithms 
allows experimenters control parameters trade performance coverage accuracy 
experiments set prefer maximum coverage data regardless performance 
cf result set computed user loading correlation data set ratings user engine loading test set ratings user user requesting prediction test set statistical measures compare roc curves measures comparing areas curve appear statistical significance 
movie user 
control allows ignore user rating making prediction user 
resulting predictions user compared user ratings produce error roc statistics 
individual agents 
types agents created studied project set 
bots personalized bots create profiles user preferences generate predictions ir techniques specifically modified tfidf salton buckley content features movie 
created cast data descriptive keywords 
data internet movie database www imdb com 
implemented similarly describe keyword 
produce personal recommendations movies keyword followed steps 
create idf vector represents relative scarcity keyword movie set 

create term frequency vector movie indicating keywords occur 

build user profile weights associated term 
produce score movie user weights 

rank order movies divide recommendation bands 
idf vector created formula value associated keyword idf log total number movies number movies keyword 
modified traditional tfidf counting keyword occurring occurring movie 
accordingly tf vector movie produced inserting keyword 
building user profile requires balanced set user ratings subtract rating transform scale 
movie rating training set produce keyword preference vector product transformed rating movie tf vector idf vector 
normalize keyword preference vector length 
mean user keyword preference vectors user profile 
produces ratings movies 
movie computes dot product user profile vector tf vector 
scores ranked broken rating levels distribution matching movielens rating distribution 
top movies received rating rating bottom 
user separate user profile vector set recommendations tf idf vectors re user user 
created ripper inductive logic program created william cohen cohen 
ripper performed best trained set data limited genre identifiers frequent keywords 
ripper works best asked binary decisions user trained ripper instances tuned distinguish respectively 
instance trained rating training set identifiers keywords movies 
training asked instance classify entire set movies summed number ripper instances indicated higher value added create recommendation value 
ripper requires substantial tuning experimented parameters relied advice basu hirsh cohen 
particular adjusted default settings allow negative tests set value attributes experimented varying loss ratio 
loss ration give best results 
consisted simple bots rated movie movie matched bot genre 
example toy story children animated comedy receive remaining bots 
genre data obtained imdb 
mega created user 
done linear regression training bot user training set 
user known rating treated dependent variable individual 
regression coefficients formed equation generate predictions movie genre identifiers 
combinations agents 
identified different strategies combining agents selecting agent person averaging agents regression create personal combination cf create personal combination 
valuable create combinations mega 
adding refer agent agent versions respectively 

best agent user selected testing bot correlation data set ratings selecting bot lowest mae 
ratings generated bot test data set produce statistics evaluation 
agent average 
average combination produced arithmetic mean agent recommendations respectively 
regression 
linear regression produce best fit combination user 
predictions correlation sets agents respectively independent variables known user rating dependent variable 
resultant weights generate predictions movies test sets creating linear combinations agents recommendations 
cf combination 
cf engine create cf combination agents 
purpose loaded ratings agents engine user ratings correlation set 
generated predictions user test movies 
ratings database cleared user 
parameters simple cf case 
combination users agents 
user ratings incomplete cf agents proved effective combination agents cf combine agents users 
method identical cf combination agents loaded ratings users 
database cleared user 
results collaborative filtering better single agents hypothesized collaborative filtering opinions user community provide better results individual agent 
compare identified best individual agent 
evaluated individual personalized mega see table 
mega cast keywords dominated agents 
highest accuracy lowest mae far low roc sensitivity poor decision support 
combined bot method mae roc film bot method mae roc sci cast kwd comb 
cf users table 
individual bots vs cf users highest roc sensitivity relatively low accuracy 
mega second best accuracy decision support 
compare results collaborative filtering user opinions 
collaborative filtering significantly accurate meaningfully higher roc sensitivity value 
effect avoids making large errors performs little better random helping people find movies avoid bad ones 
accuracy paramount rejected 
collaborative filtering significantly accurate combined comparable roc sensitivity 
approaches provide comparable support decision making average accurate 
decision support paramount accepted 
mega slightly worse collaborative filtering user opinions mae roc differences statistically significant 
consider mega pragmatic substitute user collaborative filtering small community 
furthermore collaborative filtering result able provide coverage desired recommendations due lack ratings movies 
accordingly reject 
accurate alternative exists comparably accurate valuable alternatives exist problem reduced coverage 
agents better just hypothesized combining agents yield better results single personalized agent 
testing single agents best accuracy value mae combo best decision support value roc mega competitive values 
table compare values obtained methods combining agents regression agent average collaborative filtering single user bots manually selecting best bot bot method mae roc agent regress agent regress agent avg 
agent avg 
best bot bot method mae roc dg combo bot cf usr bots cf usr bts table 
individual bots vs combined bots collaborative filtering cf agents clearly best combination method significant accuracy advantage combinations similar better roc values 
cf provides mae roc advantages mega combo 
remaining interesting comparison cf 
conclude cf better significant difference mae roc value cf dramatically better 
accordingly accept 
observe depended collaborative filtering technology combination method close dominating accuracy 
cf users better combination agents stage clear reject 
table summarizes results recognize collaborative filtering group users accurate valuable hypothesized 
bot method mae roc cf users table 
cf users vs combined bots agents users best hypothesized combination opinions community users personalized agents user provide user better results users agents 
collaborative filtering single user user agents provides best accuracy decision support agent user methods tested 
table shows small statistically significant improvement accuracy resulting including users collaborative filtering mix 
roc improves meaningful amount 
bot method mae roc cf usr bt accordingly accept find mixed collaborative filtering solution uses users agents provide best results 
discussion bot method mae roc cf usr bts bot method mae roc cf usr bts table 
cf users bots vs combined bots important results value combining agents cf combining agents users cf 
essence results suggest effective mechanism producing high quality recommendations throw available data allow cf engine sort information useful user 
effect important invent brilliant agent simply invent collection useful ones 
point experiments tested quality resulting recommender system performance economics system 
current cf recommendation engines efficiently handle users rate items re rate frequently learn 
take advantage learning agents engines redesigned accommodate users dynamic rating habits 
examining different cf engine designs efficiently 
pleased somewhat surprised find cf outperformed linear regression combining mechanism agents 
linear regression provide optimal linear fit appears cf nonoptimal mechanism better job avoiding overfitting data number columns approaches number rows 
cf advantage functioning incomplete sparse data sets suggesting retains value useful combination tool human agents rate item 
surprised results sought explain 
foremost clearly overestimated value collaborative filtering small community users 
retrospect expectations may built positive experiences starting cf systems small group researchers friends 
successes may due part close ties users seen movies similar tastes 
real users resulted real diversity may explain lower realistic value 
incorporate larger user sets experiments consistently shown mae values range roc sensitivity values near movielens communities thousands users look explicitly closer knit communities see smaller homogeneous community greater benefits collaborative filtering 
surprised results achieved ripper 
impressed accuracy extensive tuning close random distinguishing bad movies 
uncertain performs believe needed understand behaves possible train perform differently 
plan examine combinations users agents recommender systems 
particular interested developing combined community large numbers users agents exist 
question hope answer users agree benefit opinions trained agents 
funding research provided national science foundation iis iis 
support provided net perceptions members grouplens research team especially hannu developing initial testbed 
balabanovic shoham 
fab content collaborative recommendation 
communications acm 
basu hirsh cohen 
social content information recommendation 
proceedings aaai aaai press 
belkin croft 
information filtering information retrieval sides coin 
communications acm 

concept features re agent intelligent email agent 
second international conference autonomous agents minneapolis st paul mn acm 
breese heckerman kadie 
empirical analysis predictive algorithms collaborative filtering 
proceedings fourteenth conference uncertainty artificial intelligence madison wi 
cohen 
learning rules classify mail 
proceeding aaai spring symposium machine learning information access aaai press 
cohen 
fast effective rule induction 
proceedings twelfth international conference machine learning lake tahoe ca aaai press 
goldberg nichols oki terry 
collaborative filtering weave information tapestry 
communications acm 
hill stead rosenstein furnas 
recommending evaluating choices virtual community 
proceedings acm chi 
denver acm 
konstan miller maltz herlocker gordon riedl applying collaborative filtering usenet news 
communications acm 
lieberman 
autonomous interface agents 
proceedings acm chi acm maes 
agents reduce information overload 
readings human computer interaction year morgan kauffman 
resnick iacovou suchak bergstrom riedl 
grouplens open architecture collaborative filtering netnews 
proceedings conference computer supported collaborative acm 
salton buckley 
term weighting approaches automatic text retrieval technical report dept computer science cornell univ sarwar konstan borchers herlocker miller riedl 
filtering agents improve prediction quality grouplens research collaborative filtering system 
proceedings cscw seattle wa acm 
shardanand maes 
social information filtering algorithms automating word mouth 
proceedings acm chi 
denver acm 
swets 
measuring accuracy diagnostic systems 
science 
terveen hill amento mcdonald 
phoaks system sharing recommendations 
communications acm 
