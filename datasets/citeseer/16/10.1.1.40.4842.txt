stochastic model computer human interaction learning dialogue strategies esther levin roberto pieraccini labs research park avenue park nj usa research att com progress field spoken natural language understanding expanded scope spoken language systems include mixed initiative dialogue 
currently agreed theoretical foundations design systems 
propose stochastic model computer human interactions 
model learning adaptation dialogue strategy objective evaluation 

man machine interactions simple touch tone menus complex speech systems ubiquitous today world 
natural language ai research communities complex examples dialogue systems natural ways communication speech language 
show dialogue systems formally described terms state space action set strategy 
state dialogue system represents knowledge system certain time internal external resources interacts remote databases machinery user input 
action set dialogue system includes possible actions perform including different interactions user asking user input providing user output confirmations interactions external resources querying database internal processing 
dialogue strategy specifies state reached action invoked 
strategy usually devised designer tries predict possible situations dialogue system get terms conditions dialogue state appropriate actions take situations 
exist scientifically motivated guiding principles design strategy process design considered art engineering science 
result today known methods objective evaluation comparison dialogue systems designed application 
methods design strategy automatic adaptation dialogue strategy presence interactions users feedback 
propose state problem dialogue strategy design optimization problem 
assume implicit objective function expected dialogue cost drives design dialogue system 
objective function written sum different terms representing cost particular dialogue dimension 
dimensions measured directly system dialogue duration cost internal processing cost accessing external databases resources cost ineffectiveness number errors system due poor speech recognition quantify dimensions user satisfaction simple happy happy system feedback user dialogue number users hanging completion dialogue goal 
actions taken system may affect terms objective function optimal strategy result correct trade 
illustrate formalization examples 
simple form filling application optimal strategy derived analytically quantifies reasonable strategy adopted real systems 
example refers research database retrieval dialogue system 
due complexity system optimal strategy derived analytically case 
propose represent dialogue system stochastic model known markov decision process mdp reinforcement learning algorithms find optimal strategy automatically 

formalization introduce formal model describes loss generality man machine dialogue system terms state space action set strategy 
ffl state dialogue system time includes current available information internal external processes controlled dialogue system 
ffl space system states finite infinite 
includes special states si initial state sf final state 
ffl action performed system time state dialogue depends current state current action dependence general deterministic 
ffl set system actions usually finite 
ffl strategy system described terms mapping state space action set strategy dialogue system specifies conditions current state certain action invoked 
illustrate concepts consider simple form filling application goal system consists filling slots form asking user appropriate questions 
assume user answer system questions 
state space state system represented kn number slots filled slot filled consists case states 
action set fa represents question th slot 
generally action corresponding system question requires speech recognizer understanding system devices different input modalities order collect answer user 
corresponds action dialogue submitting form 
state transitions system state transitions deterministic system starts initial state action deterministically changes current state brings system final state 
strategy common sense suggest reasonable strategy system state ask question slots filled submit form slots filled 

quantitative model explained previous section system design new application consists determining state space action set finding strategy usually time consuming part design 
state space applications big infinite strategy design involves iterative process consists testing system finding states current strategy results unreasonable action correcting reasonably stable strategy 
follows propose model quantifying concept strategy 
advantages quantitative model include possibility objective evaluation automatic way designing optimal strategy learning real simulated data 

markov decision process quantitative dialogue model relies description dialogue system terms markov decision process mdp 
formally markov decision process stochastic model consists ffl state space including initial final states si sf discrete time step state active active state initial state si ffl set actions ffl transition probabilities pt js gamma gamma describing probability active state previous previous action 
markovian property model assumes js gamma gamma pt js gamma gamma ffl action state associated reinforcement cost reward 
mdp characterized cost probabilities pc cjs describing probability getting reinforcement executing action state generative mode system starts state si chooses action possible set actions receives reinforcement signal drawn randomly appropriate cost probability pc reaches state pt process continue system reaches final state sf assuming system reached final state cost session path state space sum cost involved cd st sf expected cost cd expectation session cost respect probabilities pt pc depends particular sequence actions chosen session 
strategy mdp mapping states actions indicating action system take state 
optimal strategy strategy minimizes expected cost cd 
dialogue system mdp mdp modeling man machine dialogue requires assumptions ffl transitions states dialogue characterized stochastic markov process pt js gamma gamma 
ffl costs associated dialogue actions state dialogue distributed pc cjs 
ffl optimal strategy dialogue system results minimization expected dialogue session cost 
assumptions pose problem finding strategy dialogue session optimization problem minimizing expected cost dialogue session 
general expected cost written sum multiple terms cd terms represent expected value important dimensions quality dialogue session duration dialogue number errors recognition understanding user cost accessing external databases distance user goal positive weights 
measure actual cost unit respective dimensions control relative importance 

example simple form filling example assume user input noisy due errors introduced speech recognizer goal system consists filling form correctly 
assume error rate user answers depends type question system asked 
state space example section 
action set fa gamma corresponds action dialogue submitting form represents question th slot compound question th th slot example compound question asking user date asking separately month day number 
assume error rate user answer single slot questions compound questions 
state transitions question modifies current state similarly example section deterministically changing values entries user asked 
reasonable strategy strategy example depends actual values reasonable strategy prefer compound questions reduce duration dialogue 
larger compound questions result unreasonable error rate single slot questions preferred 
expected dialogue cost goal system fill correctly form slots shortest dialogue dialogue cost cd unu ene ffl nq expected number questions session ffl nu expected number unfilled slots submitted form ffl ne expected number erroneously filled slots form determined error rate kind question fill slots 
cost distributions costs application deterministic ep ep ij unu optimal strategy optimal strategy minimizing expected cost quantifies reasonable strategy specifying exact conditions error rates choosing right actions ffl don ask questions submit empty form ep ffl error rate composite question larger single question gamma ask single slot questions repetitions submit form filled 
ffl ask composite questions unfilled slots form submit form filled 

example dialogue system research mixed initiative spontaneously spoken input dialogue system initially developed task 
application intelligent interface user relational database 
state space current state system represented nd meaning template representing current user request obtained speech understanding module database query nd number data tuples obtained retrieving data database nd gamma retrieval attempted template additional constraints template constraints relax 
action set aq ao ffl aq action forms query appending additional constraints removing relaxed constraints specified retrieving data database ffl set actions correspond asking user additional constraint 
set parameterized attribute system suggests constrain 
ffl set actions correspond asking user relax constrain 
set parametrized attribute system suggests relax 
ffl ao action showing verbalizing retrieved data user 
state transitions state transitions case deterministic actions actions asking user constraining relaxing query state determined user answer question appropriate probability system starts initial state set initial user request empty nd gamma actions modify template current state appending appropriate constraints user answer actions modify template current state appending appropriate constraints user answer aq sets nd ao brings system final state 
reasonable strategy strategy useful reasonable system follows system starts initial state initial user query specified 
query constrained specified set conditions query believe result large data set retrieved database system generate question asking additional constraints 
query formed user answer data retrieved 
possible situations data match request nd system ask user relax constraint form new query retrieve data number tuples retrieved large nd system ask user additional constraints nd system output data 
expected dialogue cost cd rnd nd nq expected number questions measuring length dialogue nd expected number tuples retrieved database session measuring cost data retrieval nd expected channel cost associated number tuples system showed user session 
reflects preference users short concise non empty outputs 
case nd nd nd nd referring system description map specific modules cost terms equation minimal information module tries minimize database access cost nd constraining relaxation modules try minimize cost output channel nd contribute duration cost nq cost distributions costs random variables follows rnd aq nd ao optimal strategy optimal strategy minimizing expected cost trades cost components equation 
derive optimal strategy analytically 
currently experimenting reinforcement learning algorithm learning optimal strategy interactions 

summary propose formal quantitative model man machine dialogue systems 
introduce general formalization systems terms state space action set strategy 
formalization describe dialogue system loss generality provide quantitative analysis dialogue system qualities 
proceed main assumption strategy dialogue system minimizing objective function reflects costs important dialogue dimensions 
assumption model man machine dialogue system markov decision process stochastic model commonly today control games applications reinforcement learning algorithms designing optimal strategy automatically 
paradigm allows objectively evaluate compare different strategies different systems application 
glass mit atis system december progress report proc 
arpa spoken language systems technology workshop austin texas jan 
dupont cooperative spoken dialogue system rational agent model implementation ags application proceedings esca etr workshop spoken dialogue systems denmark 
stallard bbn atis dialogue system proc 
arpa spoken language systems technology workshop austin texas jan 
kaelbling littman moore reinforcement learning survey journal artificial intelligence research pp 
may 
marcus brown goldberg wetzel prompt constrained natural language evolving generation telephony services proc 
icslp philadephia pa october 
pieraccini levin mixed initiative conversational architecture eurospeech rhodes greece sept 
