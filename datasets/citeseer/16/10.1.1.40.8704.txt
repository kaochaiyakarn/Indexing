analyzing software specifications mode confusion potential nancy leveson denise sean david koga jon damon reese computer science engineering university washington seattle wa sds cs washington edu increased automation complex systems led changes human controller role new types technology induced human error 
attempts mitigate errors primarily involved giving authority automation enhancing operator training changing interface 
responses may reasonable circumstances alternative redesign automation ways reduce necessary desirable functionality change functionality tradeoffs judged acceptable 
describes approach detecting error prone automation features early development process significant changes conceptual design system 
information error prone features useful design operator interface operational procedures operator training 
today large complex systems incorporate human automated control monitoring 
jointly controlled systems starting experience accidents related lack coordinated activity various controllers 
particularly problematic feature new designs proliferation modes modes define mutually exclusive research described partly funded nsf ccr ccr nasa nag 
sets system behavior 
new mode rich systems provide flexibility enhanced capabilities increase need difficulty maintaining mode awareness lead new types mode related problems 
describes approach dealing mode confusion problems analyzing external blackbox behavior automation potentially error inducing features 
results tradeoff decisions early development stages system 
automation eliminated types mode awareness errors created potential new types errors 
woods extend classic definition mode error distinguish errors commission operator takes inappropriate action errors omission operator fails take required action sw 
automated systems tended small number independent modes functions associated mode setting 
addition consequences operator mode awareness problems tended minor partly feedback operator errors fast complete operators able recover errors caused serious problems rasmussen concept error tolerance ras 
studies complex aircraft automation show pilots lose track automation behavior experience difficulties directing automation primarily context highly dynamic non normal situations sw 
woods conclude cases problems associated errors commission errors require pilot action order problem occur 
type error classic mode error identified defined norman intention executed way appropriate mode device different mode 
operator taken explicit action check intended effect action occurred 
short feedback loops allow operator repair errors serious consequences result 
type error prevalent relatively simple devices word processors 
contrast studies advanced automation aircraft find mode errors omission dominant form error sw 
type mode error operator fails take action required automation done undesirable involving mode change operator notice 
words operator fails detect react undesired system behavior explicitly invoke 
mode behavioral changes expected operator pay attention relevant indications mode right time detect mode change undesired behavior 
errors omission closely related role change operator direct control monitor exception handler supervisor automation 
roles change operator tasks cognitive demands necessarily reduced tend change basic nature 
added changed cognitive demands tend high tempo high criticality periods sw 
types errors failures declined new error forms paths system breakdown introduced 
new error forms result mode proliferation appropriate support 
providing support complicated unexpected changes operator behavior working complex automation 
example long periods flight pilots monitor mode continuously 
need predict occurrence mode transitions order attend right indications right time 
pilots identified new type monitoring behavior surveys conducted woods 
automation interfaces designed assuming conventional monitoring 
simply calling systems fewer complex modes unrealistic simplifying modes automation behavior requires tradeoffs increased precision efficiency marketing demands diverse set customers sw 
systems may exhibit accidental complexity automation redesigned reduce potential human error sacrificing system capabilities 
tradeoffs desired goals required eliminate potential mode confusion errors hazard analysis may able assist providing information necessary appropriate decision making 
identify evaluate potential tradeoffs need understand problems occur 
accidents high tech systems related complexity coupling lev 
distinguishes accidents caused component failures calls system accidents caused interactive complexity presence tight coupling 
high technology systems networks closely related subsystems may involve humans 
conditions leading accidents emerge interfaces subsystems interactions coupling causes disturbances progress component 
computers exacerbated problems allowing new levels complexity coupling integrated multi loop control systems containing large numbers dynamically interacting components 
increased complexity coupling difficult designer consider system hazards important ones operators handle normal abnormal situations disturbances safely 
increased complexity result woods billings called technology centered automation sw 
designers automation focus technical aspects devote attention cognitive demands operator 
software engineers building embedded controllers rarely taught understand set cognitive processing activities associated maintaining situation mode awareness designs affect human activities 
tend focus mapping software inputs outputs mathematical models required functionality technical details problems internal computer 
little attention evaluating software terms provides transparent consistent behavior supports operators monitoring control tasks 
fact primary focus software engineering artificial intelligence producing automation function autonomously supporting cooperation communication humans computers 
result technology centered automation wiener calls clumsy automation 
true mode related problems caused clumsy poorly designed automation changing human interface training operational procedures obvious solution training fix bad design sw 
identify automation design characteristics lead mode awareness errors increase cognitive demands may able redesign automation reducing system capabilities 
addition knowing causes increased cognitive load changes training interface design effective 
approach chosen depend factors relative costs perceived effectiveness required tradeoffs 
accomplish goal designers need able identify problematic design features 
research goal identify design constraints automation known cognitive constraints human operator engineered natural environmental constraints 
step accomplishing goal identify types errors humans highly automated systems 
information analyze blackbox behavior specified automation requirements predict errors occur information design automation operator procedures tasks interface 
simply going analyze current designs long term goal identify software design criteria techniques help create better designs 
proposed analysis approach human errors non random 
studying accidents incidents new highly automated aircraft woods concluded certain errors predictable sw regular predictable consequences variety identifiable factors 
accentuated poor interface design gaps misconceptions user mental model system mismatches expected actual automation behavior necessarily related inadequate operator mental model result inconsistent automation behavior 
woods identify error forms 
identified features lead mode confusion deg jaffe jl lev identified general requirements completeness criteria eliminate types human computer interaction errors 
want build woods jaffe find factors predictable error forms relate automation design devise ways identify factors software requirements specifications 
approach model software blackbox behavior provide analysis methods tools search models predictable error forms 
addition providing design guidance approach provide way measuring evaluating cognitive demands involved working specific automated devices 
suggested automation complexity defined terms predictability automation behavior hans 
predictability potentially evaluated approach 
analyzing designs requires appropriate modeling specification language 
language formally analyzable readable advanced mathematical training 
automated tools may necessary analyze aspects large complex models believe empirical evidence supports view important errors human experts 
goals design modeling language tools provide support human navigation understanding complex models specifications 
addition potential design flaws detected automated tools need evaluated humans 
readability models requirement human processing analysis results 
economics system development allow special formal models built 
analysis tools directly system software requirements specifications 
sections define concept mode carefully describe modeling language describe criteria detecting types mode ambiguity demonstrate criteria analyzing blackbox behavior automation 
language analysis illustrated model nasa robot built service tiles space shuttle 
definition mode mode defines mutually exclusive set system behaviors 
convenient way describe behavior state machine models 
machine system thought having set states 
behavior system described possible transitions state 
state transitions triggered events conditions simply passage time thought event 
example table shows possible transitions states system modes startup mode normal operation mode startup normal table simple state machine modes startup normal processing modes machine determine machine behave 
example conditions occur trigger transition state machine transfer state startup mode state normal processing mode 
basic tenet linear control theory controller contains model general behavior current state controlled system 
model may embedded control logic automated controller mental model human controller 
model updated kept consistent actual system state various forms feedback system controller 
controller model system diverges actual system state erroneous control commands incorrect model lead accident lev 
situation complicated multiple controllers models various controllers kept consistent 
pilot example valid model aircraft behavior model automated systems behavior order monitor control automation aircraft 
mode confusion errors result divergent controller models 
see 
note sources inconsistency due improper feedback 
attempting categorize factors predict mode errors useful distinguish different types modes 
classifies modes types deg 
interface modes specify behavior interface 
increase size input output space 

functional modes specify behavior various functions machine 

supervisory modes specify level interaction supervision manual semi automatic automatic define types modes classify differently 
modes defined respect control component specified 
supervisory modes determine controlling component time 
control loops may organized hierarchically multiple controllers components controlled layer controlling layer see 
addition component may multiple controllers supervisors 
example flight guidance system may issued direct commands pilot computer supervised pilot 
robot motor controller maps described section manual supervisory mode controlled human operator accept control instructions computer called planner 
errors related confusion coordination multiple supervisors control component defined terms supervisory modes 

component operating modes control behavior control component 
may control interpretation interface interface modes describe required process control behavior 
example maps operation may enabled disabled time depending safe maps move robot 

controlled system operating modes specify sets related behaviors controlled system indicate operational state 
example maps model robot indicates moving mode areas mode area servicing tiles time robot controlled maps planner unknown mode means maps know robot moving mode mode 
modeling language software errors leading accidents traced incorrect incomplete specifications incorrect implementations 
developing hazard analysis techniques trying understand design specification languages facilitate analysis humans automated tools system software requirements controls controls displays process controlled operator computer controller operator process interface supervisory interface model model model process sensors actuators analog displays displays automation automation model process model model model process model interface operation model interface operation example simple multiple controller process control system 
simplify diagram shown digital computer controller 
complex systems may human digital analog controllers level hierarchical control hierarchical levels shown 
note controller mental logical models machine process controlling interfaces 
models kept consistent correct safe monitoring control 
specifications 
effective error detection requires specifications readable human designers application experts analyzable automated tools 
language rsml requirements state machine language designed specifying system requirements tcas ii airborne aircraft collision avoidance system faa 
lessons learned experience designing toolkit called specification tools requirements methodology includes requirements specification language rl 
underneath rl formal state machine model called rsm defined set correctness completeness design criteria safety critical system specifications 
goals rl incorporate features assist designing error prone humancomputer interactions interfaces detecting potential communication problems mode confusion 
notation changed rsml system behavior represented hierarchical orthogonal state machines 
majority errors difficulty reviewing tcas ii model stemmed internal broadcast events eliminated feature 
included features assist finding common dangerous omissions errors process control requirements specifications 
language design quite complete shows part example specification nasa robot built service tiles space shuttle 
software requirements taken master level project cmu software engineering institute part robot designed constructed robotics department mmr 
system component example called maps mobility positioning software 
specifications blackbox describe required behavior component case maps terms inputs outputs relationship model controlled system 
specifications include information implementation internal design component simply input output function computes specified terms operating modes internal model controlled system internal model interfaces supervisor controlled process es 
complex control systems robot multiple controllers multiple levels control 
maps mid level controller responsible issuing movement commands motor controller controls mobile base robot see 
maps turn controlled human operator onboard computer called planner 
operator controls robot movement positioning hand held joystick 
planner control robot movement providing maps specification desired destination route 
supervisory modes joystick planner see 
human controller planner may assume control time human controller responsible supervising behavior robot times prevent accidents planner control 
distributed control structure multiple possibilities mode confusion exist 
supervisory interface consists controls supervisor directs control component case maps displays component relays information back supervisor 
note displays limited visual displays include aural types communication 
operator control maps joystick buttons keyboard shown 
maps provides information operator graphical user interface 
maps behavioral requirements information content interface specific layouts design controls displays specified 
communication interface planner specified similarly 
addition supervisory interface interface controlled system robot components includes inputs outputs maps various sensors actuators 
interface models simply view maps interfaces real interface may contain different information due various types incorrect design failures 
separating assumed interface real interface able model analyze effects various types errors failures 
maps operational modes ffl enabled disabled maps operation enabled safety circuit signalled robot safe state operator depressed switch robot manipulator arm 
ffl operational maps may turned may operational 
maps controls button button keyboard joystick supervisory modes joystick planner displays gui area areas moving stopped unknown unknown robot operating modes destination position planner robot route movement values interface interface disabled enabled modes maps operating operational velocity motor model motor controller motor operating modes unk safety circuit stabilizer legs unk position robot model manipulator arm safe unsafe partial specification maps planner high level controller operator gui joystick robot safety circuit stiff legs motor control scanner maps log manipulator high level view maps maps operational modes relatively simple typical flight management component large number modes leading potential mode confusion 
controlled system case robot described maps model terms operating modes model relevant states 
robot controlled maps moving stopped performing inspection maintenance operating mode unknown 
maps controls motion servicing tiles controlled planner 
robot area areas location unknown 
commands maps issues depend operating modes 
section maps high level specification internal model state robot 
note interface robot models simply internal models maps assumed state interface controls displays assumed state robot actual physical state 
internal model may consistent real interface robot states due various types errors failures 
maps physical components robot need modeled order specify control algorithm stabilizer legs safety circuit manipulator arm motor controller 
hierarchical control common complex systems case maps provides commands motor controller operating modes state model 
language enforces certain constraints prevent design features known lead accidents 
example rl components controlled system model robot model unknown state default startup transitions type temporary partial shutdown normal processing 
controlled system usually continue change state computer shut software model process updated startup restart reflect actual process state 
accidents occurred systems software assumed status process changed computer operational issued commands erroneous information 
state machine models transitions governed external events current state modeled system 
rl conditions transitions taken specified separately graphical depiction state machine 
behavior real systems complex write line boxes 
form logic table call tables 
shows example specification transition 
blackbox model required system behavior built model evaluated satisfies design criteria known minimize errors accidents 
design criteria analysis jaffe originally identified completeness criteria requirements specifications extended close criteria lev 
planner gamma 
joystick condition entered enabled delta operator selects joystick mode delta safety circuit state safe delta joystick state neutral delta example transition definition rl 
supervisory mode transitions planner joystick enabled state entered conditions true operator selects joystick mode safety circuit state safe joystick neutral position 
criteria include mixture absolute criteria heuristics finding flaws frequently lead accidents 
related humancomputer interaction providing appropriate feedback graceful degradation completely specifying preemption logic multi step operator inputs interrupted complete 
jaffe criteria derived mathematical completeness aspects underlying formal rsm model resulted experience jaffe building systems large number years 
lessons learned define design criteria formal rsm model 
attempting extend criteria design constraints cover mode confusion errors taken approach 
results woods studies accidents incidents reports mode related error building types mode confusion design features identified identified approximately fifteen design features blackbox automation behavior original jaffe criteria lead operator mode confusion mode awareness errors 
preliminary stages list undoubtedly change investigate 
section illustrate approach describing items preliminary list demonstrate application maps applicable 
applying criteria complex control system surely identify large number behaviors lead mode confusion 
getting rid behaviors result overly simple control system satisfy goals 
information eliminate accidental complexity functionality achieved manner provide information safety tradeoff analyses applying hazard analysis identified behaviors design interfaces operational procedures operator training programs 
example accidents occur transitions normal non normal operating modes operating non normal modes 
non normal mode transitions identified stringent design constraints applied 
rest describes categories potential design flaws interface interpretation errors inconsistent behavior indirect mode changes operator authority limits unintended side effects lack appropriate feedback 
additional criteria lev described papers 
interface interpretation errors interface mode errors classic form mode confusion error computer interprets user entered values differently intended maps multiple conditions output depending active controller operational mode operator interprets interface erroneously 
plant state display flaw 
common example input interface interpretation error occurs word processors user may think insert mode command mode input interpreted differently intended 
example output interface mode problem identified cook medical operating room device operating modes warmup normal 
device starts warmup mode turned changes normal mode warmup mode particular settings adjusted operator 
meaning alarm messages effect controls different modes current device operating mode change mode indicated operator 
addition distinct alarm triggering conditions mapped alarm messages message different meanings depending operating mode 
order understand internal condition triggered message operator infer malfunction indicated alarm 
complex example occurs proposed accident scenario crew directed automated system fly track flight path angle mode combined mode related lateral track vertical flight path angle navigation radar vectors air traffic controller may switched track hdg sel mode able enter heading requested controller 
pushing button change lateral mode automatically changes vertical mode flight path angle vertical speed mode switch button affects lateral vertical navigation 
pilots subsequently entered select desired flight path angle degrees automation interpreted input desired vertical speed ft intended pilots aware active interface mode failed detect problem 
consequence steep descent airplane crashed mountain sw 
design constraints assist reducing interface interpretation errors 
mode control interpretation supervisory interface operator part displays interface modeling language 
generally current operating mode automation displays interface part operating modes 
addition change operating mode trigger change current operating mode reflected interface displayed operator mode consistent internal mode 
consistency displayed current mode course obvious design constraint violation signals error requirements specification 
constraint hold systems 
notes third type interface confusion error results mapping single input control action multiple internal mode changes depending order control actions 
calls circular mode transitions 
example pushing button device small input interface watch buttons cycle possible modes going mode button push 
possible design constraint control input trigger mode transition associated mode change mapping control inputs mode changes mathematical function 
note want require function bijective eliminate possibility indirect mode changes 
simple devices constraint function injective may impossible enforce feedback current mode possible solution problem 
design constraint related types interface interpretation errors interpretation supervisory interface conditioned modes example accident related interpretation described earlier 
constraint stronger may feasible desirable enforce 
analysis tools highlight transitions designer analyst appropriate scrutiny applied part design 
circular mode transition subcase design constraint 
maps design maps movement supervised automated planner operator removed process control acts simply safety monitor 
conditions maps movement robot robot reaches area maps disabled maps enters planner mode maps enters joystick mode safety circuit detects unsafe condition released 
actions involves operator directly selection joystick mode selection planner mode release switch operator know robot stopped 
fourth case safety circuit signals unsafe state error message generated sent operator interface indicate robot stopped 
operator differentiate reasons maps enter disabled mode indicating reason operator 
straightforward solution simply provide additional status messages display 
inconsistent behavior complex type mode confusion error related errors omission interface errors mentioned triggered inconsistent behavior automation 
carroll olson define consistent design similar task goal associated similar identical actions 
consistent behavior easier operator learn system works build appropriate mental model automation anticipate system behavior 
example inconsistency detected simulator study involving go feet ground level 
woods pilots failed anticipate realize system arm selected toga take go power conditions circumstances toga power applied sw 
example inconsistent automation behavior implicated accident involves protection function provided automation configurations altitude acquisition mode autopilot operating 
consistency particularly important highly dynamic phases flight pilots may rely automatic systems expected constant monitoring 
low pressure situations consistency predictability important light evidence pilot surveys normal monitoring behavior may change advanced flight decks sw 
pilots conventional aircraft highly trained instrument scanning pattern recurrently sampling set basic flight parameters 
contrast pilots explained longer scan anymore allocate attention cockpit displays basis expected behavior 
monitoring objective verify expected automation states behaviors 
automation behavior consistent mode errors omission may occur pilot fails intervene necessary note fundamental difference monitoring strategies 
case standard pattern pilot attention allocation externally guided monitoring advanced aircraft requires mental effort part pilot determine look varying task circumstances 
expectations pilot monitors part available data 
parameters expected change may neglected long time 
standard instrument scan hand serves ensure relevant parameters concerning airplane behavior monitored certain time intervals sure unexpected undesirable changes occur sw 
previous design criteria analysis tools include check nondeterminism software behavior check determine transition taken state conditions hl 
consistency case requires simple deterministic behavior part automation 
operator provides inputs different outputs behaviors result reason operator done may know behavior inconsistent operator viewpoint mathematically inconsistent 
formally inconsistent behavior results state transition functions form theta theta fs theta og theta theta fs theta og sigma state operator input output states values supervisory interface values identified different design constraints related various types inconsistency 
may reasons having inconsistencies necessary reasonable 
tools point potential problems designer analyst final decision automation changed 
consistency may important critical situations behavior related safety design constraint hazard analysis tools may able assist decisions new intent specifications lev form rasmussen hierarchy adapted software disabled enabled modes maps operating enabled gamma 
disabled condition supervisory mode entered planner delta delta delta delta delta supervisory mode entered joystick delta delta delta delta delta dead man switch open delta delta delta delta delta safety circuit state unsafe delta delta delta delta delta robot location robot area delta delta delta delta delta maps operating modes mode delta delta delta delta delta example conditions robot movement stopped trace behavior back original system goals safety constraints identify reasons specified inconsistent behavior 
indirect mode changes indirect mode changes occur automation changes mode explicit instruction operator 
transitions may triggered conditions controller preprogrammed envelope protection sensor input state controlled system achievement preprogrammed target armed state preselected mode transition 
mode confusion problems noted indirect mode transitions create potential mode errors omission inadvertent activation modes operator 
problems related changes scanning methods difficulty forming expectations externally triggered behavior 
behavioral expectations formed operators knowledge input automation mental model automation designed behavior 
gaps misconceptions operator mental model may interfere predicting tracking indirect mode transitions understanding interactions different modes 
example accident attributed indirect mode change occurred landing bangalore 
case pilot selection lower altitude automation altitude acquisition mode resulted activation open descent mode 
speculated pilots notice mode indirect mode change occurred approach pilots busy expecting change sw 
example indirect mode change automation involves automatic mode transition triggered airspeed exceeds predefined limit 
example pilot selects high vertical speed results airspeed decreasing particular limit automation change open climb mode allows airplane regain speed 
final example palmer described example common indirect mode transition problem called kill capture bust noted hundreds reports pal 
leveson palmer modeled example problem rl shown detected fixed lp 
example indirect mode change maps specification 
scenario maps joystick supervisory mode receives message planner robot reached area 
message cause maps transition enabled disabled mode see explicit instruction human oper ator informing operator mode change 
analyst decides potentially dangerous scenario problem solved augmenting transition area seen 
general ways trigger mode change 
operator explicitly selects new mode 

operator enters data target altitude command leads mode change conditions 
automation particular state 
controlled system model environment particular state 

operator transition triggered conditions controlled system 

operator selects mode change automation state automation state controlled system 
formal definitions obvious omitted 
notes types indirect mode changes gives different names classifies differently 
operator errors associated indirect mode changes phenomenon primarily advanced automation 
early automation tended involve small number independent modes 
functions associated mode setting 
probably want go back automation change mode response direct operator input design constraints desirable limit indirect transitions eliminate possible 
analysis methods highlight mode changes independent direct immediate instructions human supervisors tools may able assist analyst identifying hazardous indirect mode changes 
operator authority limits interlocks ensure safety 
interlocks commonly prevent hazardous system states enforcing correct sequencing events actions isolate events time 
lockout impossible difficult enter hazardous state 
authority limiting type lockout interlock prevents actions cause system enter hazardous state 
authority limitations carefully analyzed sure prohibit maneuvers may needed extreme situations 
events involved pilots fighting automation control aircraft observing unexpected undesirable aircraft automation behavior 
various types authority limits prevent operator error provide protection operator take proper action 
example automation advanced aircraft ability detect prevent recover predefined unsafe aircraft configurations stall 
hazardous state detected automation power override limit pilot input 
accidents incidents highly automated aircraft involved pilots able overcome protection limits pilots aware protection functions force 
example pilots approach disconnected autopilot leaving flight directors system engaged 
conditions automation provides automatic speed protection preventing aircraft exceeding upper lower airspeed limits point approach flaps selected aircraft exceeded upper airspeed limit configuration 
consequence automation airplane reduce airspeed back 
pilots aware automatic speed protection active observed automation behavior 
concerned unexpected reduction airspeed critical phase flight rapidly increased thrust counterbalance automation 
consequence sudden burst power airplane pitched degrees entered sharp left bank went dive 
pilots eventually disengaged system associated protection function regained control aircraft sw 
various design criteria related authority limits 
example information modes states operator input ignored limited provided supervisory interface 
addition analysis tools examine specified software behavior detect exceptions gamma 
area condition receive planner area message supervisory mode mode planner modified transition area mode 
operator requests 
information intent specification useful determining design features intentional related identified hazards 
unintended side effects mode ambiguity arise action intended particular effect additional effect unintended side effect 
example occurred woods simulator study discovered pilots aware entering runway change entering data assigned approach results deletion previously entered altitude speed constraints may apply 
type design flaw differs indirect mode changes unintended change mode type information values 
describes type problem terms mode value interaction generally problem occurs operator entry example input value mode change unintended side effects 
unintended side effects contribute mode confusion need evaluated design team 
decision keep behavior proper feedback constraints may required prevent type confusion result 
lack appropriate feedback original jaffe criteria newly defined criteria mentioned related providing appropriate feedback providing feedback status interlocks providing graceful degradation 
general operators need information necessary understand mode transitions taken conditions trigger transitions 
operators need track current active modes understand implications need keep track automation system status information may result indirect activation modes 
difference design constraints requiring mode transition described section interface interpretation errors case automated system simply notify operator mode change occurred mode provide information necessary operator predict anticipate mode changes 
incomplete feedback implicated accident scenarios 
example bangalore accident pilot flying pf disengaged flight director approach assuming pilot flying pnf thing sw 
result mode configuration airspeed automatically controlled speed mode recommended procedure approach phase 
pnf turned flight director open descent mode active lower altitude selected 
indirect mode change explained led hazardous state eventually accident 
complicating factor pilot received indication status flight director information necessary determine desired mode engaged 
lack feedback knowledge complete system state contributed pilots detecting unsafe state time reverse 
automation ability take autonomous actions directly commanded operator information interchange crucial coordinating activities detecting mismatches expected actual system behavior 
behavioral description software provided rl useful determining exactly information operator needs monitor control automated system 
problems providing salient feedback course complicated simply identifying information needs conveyed identification important step process 
original jaffe criteria identified design constraints basic feedback computer state controlled process types operator feedback requirements need augmented complete set requirements feedback operator automation supervisor 
example constraint operators access information critical mode transitions order predict monitor transitions 
important aspect feedback error detection need independent information 
errors discrepancies redundant information 
way detect automated equipment operating correctly operators detect discrepancy automation behavior mental model think automation 
operators limited understanding complex automation behavior afraid step 
addition error detectable information state environment controlled process 
erroneous behavior occurring automation confused environment system state obviously provide information operator 
automation may show consistent information know error system model 
surprising woods pilots errors information displays instruments observations desired actual aircraft behavior indications nominal status automated systems 
phenomenon true types systems 
problem complicated fact operators see automation doing tell directly observing reaction system getting feedback independent display 
providing independent feedback providing feedback automation doing alleviate problems 
outlined approach reducing potential mode confusion errors 
software requirements modeled hierarchical state machine language analyzed manually automated assistance identify violations set design constraints associated mode confusion errors 
approach illustrated model software controlling nasa robot description currently identified software design constraints 
preliminary stages 
need complete partially validate set constraints examining accidents incidents determine current set identify factors involved 
fairly confident list plan validate feasibility applying constraints real specifications building prototype analysis tool applying model advanced aircraft fms probably constraints originally derived 
possible step incident reports reporting systems chirp aircraft see predictions accurate 
carroll olson mental models human computer interaction 
helander ed 
handbook human computer interaction elsevier science publishers pp 

cook potter woods mcdonald evaluating human engineering microprocessor controlled operating room devices 
journal clinical monitoring pp 

deg modeling human machine systems modes error patterns interaction 
ph 
thesis georgia institute technology 
hans john 
personal communication 
hl heimdahl leveson 
completeness consistency analysis statebased requirements 
transactions software engineering june 
jaffe leveson heimdahl 
software requirements analysis real time systems 
ieee soft ware engineering se march 
jl jaffe leveson implications man machine interface software requirements completeness realtime safety critical software systems 
proceedings ifac ifip dec 
lev leveson system safety computers 
addison wesley publishing 
lev leveson intent specifications 
preparation 
leveson heimdahl hildreth reese 
requirements specification process control systems 
ieee transactions software engineering september 
lp leveson palmer identifying indirect mode transitions oops didn arm case study 
preparation 
mmr madsen murphy maps software requirements specification 
school computer science mellon university june 
leveson reese partridge 
integrated safety analysis requirements specifications 
third ieee symposium requirements engineering 
pal palmer oops didn arm case study automation surprises 
nasa technical report 
normal accidents living high risk technology 
basic books new york 
ras rasmussen human error problem causality analysis accidents 
broadbent reason baddeley editors human factors hazardous situations pages clarendon press oxford 
sw woods world get mode mode error awareness supervisory control 
human factors 
sw woods strong silent loop 
report tr ohio state university february 
sw woods billings automation surprises 
salvendy ed 
handbook human factors ergonomics nd edition wiley new york press 
