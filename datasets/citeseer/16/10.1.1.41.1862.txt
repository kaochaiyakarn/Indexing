machine learning fl kluwer academic publishers boston 
manufactured netherlands 
general efficient multisplitting numerical attributes elomaa elomaa cs helsinki fi department computer science box fin university helsinki finland rousu rousu vtt fi vtt biotechnology food research box fin vtt finland received january revised may editor robert holte 
supervised learning numerical attributes require special treatment fit learning scheme hope 
common practical tasks need taken account 
characterize behavedness evaluation function property guarantees optimal multi partition arbitrary numerical domain defined boundary points 
behavedness reduces number candidate cut points need examined multisplitting numerical attributes 
commonly attribute evaluation functions possess property demonstrate cumulative functions information gain training set error non cumulative functions gain ratio normalized distance measure behaved 
devise method finding optimal efficiently examining minimum number boundary point combinations required produce partitions optimal respect cumulative behaved evaluation function 
empirical experiments validate utility optimal multisplitting produces constantly better partitions alternative approaches requires comparable time 
top induction decision trees choice evaluation function decisive effect result choice partitioning strategy optimizing value common attribute evaluation functions raise accuracy produced decision trees 
tests construction time optimal multisplitting average twice required greedy multisplitting part required average twice time binary splitting 
keywords supervised learning numerical attributes optimal partitions evaluation functions 
classification learning methods strategies sample partitioned smaller subsets attempt discover final partition class distribution subsets reflects classification instances 
attribute induction correlation instance class attribute values heuristically approximated evaluation function goodness criterion 
basic induction scheme univariate induction single attribute value basis sample partitioning data divided subsets value attribute induces partition evaluates best 
elomaa rousu top induction decision trees tdidt representative learning scheme 
node querying value chosen attribute inserted evolving tree 
attribute question small nominal domain simple continue tree construction growing subtree corresponding separate value domain 
handling large discrete domain turn problematic evaluation functions tend biases multivalued attributes quinlan white liu kononenko 
attempts rectify unwanted biases lead irrelevant attributes low information content gaining unfair advantage preferable attributes quinlan 
evaluation functions developed address deficiency quinlan opez de fayyad irani 
real challenge decision tree learning issued numerical attributes large infinite domain discrete integer continuous real 
numerical attributes frequent real world induction tasks proper treatment important catlett fayyad irani quinlan van de maass dougherty kohavi sahami fulton kasif salzberg 
example quinlan compelled reconsider problem known decision tree learner quinlan 
problem choosing interval borders right arity discretization numerical value range remains open problem numerical attribute handling 
practical decision tree learners problem solved binarization breiman friedman olshen stone cestnik kononenko bratko quinlan value range split intervals node 
partitioning domain generated continuing binarization previously induced intervals tree 
way halving approach decides location interval borders global properties tree decide number resulting intervals 
alternative approach uses greedy multisplitting catlett fayyad irani value range similarly partitioned recursive binarization resulting assigned single node evolving tree 
catlett discretization numerical value ranges carried globally preprocessing stage fayyad irani partitioned value ranges dynamically growing tree 
depth search scheme methods directly assess global quality requires method stopping criterion control growth arity final partition 
greedy breadth search evaluation function balanced respect favoring high arity partitions relieves requirement see section 
method guarantees optimality resulting 
efficiency attractive choices practical applications 
addresses problem finding optimal multiway partitions numerical attribute value ranges 
known general algorithm finding exponential brute force method course feasible solution multisplitting numerical attributes practice 
fulton 
devised algorithm finding efficiently optimal class evaluation functions 
article enhance extend method give exact characterization kind attribute evaluation functions enhanced approach valid 
henceforth optimal refers partitioning data evaluates best goodness criterion 
main contributions ffl characterization useful behaved evaluation functions suffices inspect candidate cut points boundary points searching binary partition respectively 
boundary points originally defined fayyad irani studying binary splitting evaluation functions convex downwards 
brodley rigorously studied convexity properties widely attribute evaluation functions 
convex evaluation functions proper subclass behaved evaluation functions 
results strictly generalize fayyad irani ways approach focusing boundary points applicable larger repertoire attribute evaluation functions importantly extends multisplitting 
ffl general efficient method finding optimal multiway partitions naturally arises adapt dynamic programming evaluation scheme proposed fulton 
take advantage boundary points operate example intervals individual examples 
enhancements enable elegant efficient implementation search procedure 
generality method means accommodate different evaluation functions cumulative 
evaluation function balanced bias quinlan white liu kononenko need employ function control growth partition arity 
ffl demonstrate behaved evaluation functions common proving goodness criteria stemming different traditions backgrounds mdl mml cost function wallace patrick training set error maass auer holte maass behaved 
fayyad irani previously shown convexity average class entropy quinlan information gain functions binarization tasks 
results theorem behaved 
addition study default evaluation function gain ratio decision tree learner quinlan alternatives normalized distance measure opez de 
turn non convex behave multisplitting 
cumulative mentioned dynamic programming approach applicable 
ffl report empirical comparison multisplitting strategies 
contrast greedy approach optimal algorithm 
include comparison baseline method selects cut points randomly 
experiments show better quality partitions obtained optimal multisplitting multisplitting strategies 
elomaa rousu advantage optimal partitioning greedy multisplitting marginal 
explore utility multisplitting decision tree learning compare greedy optimal strategies binarization framework 
comparison shows choice evaluation function decisive impact result choice splitting strategy 
review section basic problem setting handling numerical attributes discuss important preceding research topic 
particular reformulate definition boundary point 
section define useful behaved evaluation functions 
show desirable properties useful functions carry multisplitting long function cumulative function behaved 
addition evolve efficient method finding optimal numerical attributes cumulative behaved evaluation functions 
explore extent class functions section 
analyze non cumulative evaluation functions related decision tree learner 
show gain ratio function normalized distance measure able take advantage boundary points multisplitting 
take cumulative goodness criteria different nature prove behavedness 
section reports extensive experiments comparing methods developed common approach numerical attribute handling 
section reflects outcome experiments discusses related research 
section presents concluding remarks directions research 
appendix contains detailed description search algorithm optimal multiway partitions analyzes time space complexity 
appendix study large collection real world data relationship number different values number boundary points numerical attributes domains 

problem setting section presents preliminaries subsequent reviews earlier related research 
examine partitions boundary points evaluation functions rank partition candidates 

partitioning numerical attribute domains basic setting consider 
preclassified data acquired application domain disposal 
example vector containing values attributes hand associated classification 
aim find predictor classifying basis attributes instances application domain 
greedy tdidt construction algorithm needs estimate attribute values correlate classification examples 
respective correlations attributes compared attribute appears best added evolving tree 
correlation comparison fixed evaluation function applied multisplitting numerical attributes attribute 
prior comparing numerical attribute nominal ones necessary find best partition attribute values 
evaluation function rank partitions attributes 
partitioning numerical attribute begins sorting ascending order values attribute examples 
val denote value attribute example val denote class classes assumed integers mg 
majority class example set maj arg max jm jfs val jgj frequently occurring class 
maximally frequent classes maj smallest 
tie breaking simply guarantee maj unique plays role algorithms 
partition sample intervals properties 
consists non empty subsets kg 
covers domain 
subsets disjoint furthermore partition induced basis attribute val val 
splitting set examples basis value attribute set thresholds ft gamma dom defines partition sample obvious manner fs val fs gamma val fs gamma val article partitions usually arity danger confusion write place clarify notation 
partition numerical value range set interval thresholds points value ordered sequence changes 
points potential cut points data 
sequence consecutive examples value attribute consideration called bin 

boundary points fayyad irani analysis binarization technique proved optimal splits fall boundary points information gain function quinlan 
substantial reductions time consumption obtained boundary points need considered potential cut points 
definition 
sequence examples sorted value numerical attribute set boundary points defined follows elomaa rousu 
maximum value boundary point 

value dom boundary point exists pair examples having different classes val val exist example val val val 
definition differs fayyad irani notably including maximum value boundary point 
included ensure example set boundary point numerical attribute 
difference definition actual boundary points case 
original definition boundary point taken value strictly values val val 
follow common convention thresholds defining partition values attribute appearing data quinlan 
example sequence consecutive boundary points called block examples 
block class uniform class distribution mixed 
uniform block may consist single example mixed elements 
observe blocks obtained bins merging adjacent class uniform bins class label block 
mixed bins merged block bin constitute block 
example consider set examples shown fig 

example class value set fa cg value numerical attribute case shown 
examples sorted ascending order value numerical attribute 
cut points bins data depicted fig 

illustrate boundary points located help bins categorized version data set fig 

boundary points borders consecutive bins 
examples bin belong class examples 
mixed class distribution bins 
reduce original set examples blocks depicted fig 

class distribution block needs known order able compute impurities partitions defined boundary points 
gathering examples blocks applied certain class evaluation functions 
study extent generality class section 
block construction depend duplicate values processing effective truly continuous ranges 
attribute isolation predictive power directly correlates examples classification number multisplitting numerical attributes 
set examples sorted ascending order value numerical attribute 
class labels examples shown 

example set partitioned threshold values bin borders 

original set examples reduced blocks 
block borders coincide boundary points 
class frequencies blocks need known 
blocks range satisfies fayyad irani 
subsequently study detail relationship values large collection real world data sets see appendix 

evaluation functions average class entropy goodness criteria evaluate candidate partitions see mingers buntine niblett kononenko 
commonly attribute evaluation functions build impurity measures breiman functions try estimate class coherence set examples 
example measures entropy function gamma log denotes number classes stands proportion examples belong class attribute evaluation functions impurity measures include gini index breiman quinlan information gain gain ratio 
fayyad irani focused elomaa rousu particular evaluation function average class entropy 
partition ace denote average class entropy partition ace js jsj jsj js jh definition 
partition arbitrary example set evaluation function cumulative exists function delta arbitrary coefficient value may depend data partitions 
example ace defined cumulative 
cumulativity facilitates incremental evaluation impurity values fulton relieve need examine candidate cut points searching optimal partition data 
assume aim find partition minimizes evaluation function 
definitions results section natural counterparts apply maximization 
fayyad irani proved average class entropy property favor obviously bad cut needlessly separates examples class 
proved searching best binary split choosing single cut point restrict attention boundary points 
theorem fayyad irani value defines binary partition minimizes ace boundary point 
exception result viz degenerate case sample contains members class ace independent value defining partition boundary point 
recall case additional boundary point far value range 
complication considering boundary points focusing minimum impurity partitions contain superfluous thresholds 
subsequently give examples evaluation functions inherently penalize needless splitting data avoiding complication measures 

multisplitting numerical attributes optimally fayyad irani base proof theorem fact average class entropy convex downwards boundary points 
minimum values binary partitions occur boundary points 
convexity multisplitting numerical attributes delta delta delta delta delta delta gamma gamma 
illustration situation proof theorem 
sufficient necessary requirement useful behavior 
subsequently give examples non convex functions minimize boundary points 
shorthand notation denote value evaluation function binary partition defined threshold similarly gamma denotes value evaluation function partition defined cut points gamma definition 
example set ft tb boundary points numerical attribute evaluation function useful binary partitioning exists value dom 
example ace useful 
stronger property requires optimal partitions defined boundary points studied brodley 
call minima free property 
define behaved evaluation functions just binary case optimal boundary points 
definition 
example set ft tb boundary points numerical attribute evaluation function behaved exists set values dom jw behaved function may concentrate boundary points independent partition arity limited priori 
sure partitions chosen matter splitting strategy applied 
definition constrains search optimal binary partition boundary points 
draw connection useful behaved functions follows 
useful evaluation function cumulative wellbehaved respect multiway partitions 
theorem shows order minimize goodness score partition respect useful cumulative evaluation function suffices examine boundary points 
elomaa rousu theorem cumulative useful evaluation function exists partition arbitrary example set minimizes value corresponding cut points boundary points 
proof cumulative useful evaluation function arbitrary example set 
partition minimum value thresholds ft gamma ones define see fig 

suffices show arbitrary threshold boundary point removed replaced boundary point 
assume value set ft gamma boundary point 
subsets partition depend choice threshold see fig 

terms cumulative formula delta giving total impurity partition depend value minimizes total impurity partition cumulative impurity possible 
useful boundary points example set exist value 
substituting boundary point creates new possibly trivial partition impurity partition defined chosen arbitrarily claim follows 
stronger version theorem states minimum impurity defined boundary points holds true behaved evaluation functions suffer degenerate case example see section 
weaker version allows focus boundary points searching best possible multiway partition 
theorem holds upper bound arity 
theorem offers way show function behaved usefulness course necessary condition behavedness cumulativity 
subsequently show non cumulative functions behave multisplitting 
technique theorem convenient directly implies existence efficient optimization algorithm shown 
gives way utilize multisplitting convexity results known extensively studied binarization scheme 
case optimal multiway partitions data cut points boundary points behaved evaluation function 
focus boundary points searching optimal partition 
order find optimal ary partition data suffices find gamma boundary points determine partition lowest impurity 
cumulative evaluation function best partition subsample ae depend splitting complement set ns search strategy implemented incrementally dynamic programming 
fulton 
examined potential cut points example sequence order obtain optimal cumulative evaluation function 
gave recurrence impurities cut point candidates calculated multisplitting numerical attributes impurities shorter intervals smaller arity partitions 
computation entails obtaining impurities lower arity partitions process 
value method choose time kn partition lowest impurity intervals fulton 
general scheme utilized bins blocks examples place individual examples 
preparing cut pair examples need inspect positions cut points defining partition may eventually located 
accomplished preprocessing data bins blocks represented class frequency distribution described previous section 
rationale assigning examples blocks shows linear order examples retained parts matter 
blocks basic processing unit facilitates speeds implementation reduces complexity required data structures see appendix 
base case impurity calculation split part data trivially subset impurity partition directly determined impurity measure 
data preprocessed blocks recurrence impurity calculation ae min gamma gamma denotes minimum impurity results blocks sorted sequence examples partitioned intervals 
best split minimizes 
dynamic programming time requirement finding optimal partitioning intervals kb number blocks range 
theoretical worst case typically practice see appendix 
search method algorithmic form appendix detailed space efficiency analysis 
example efficient impurity calculation requires making incremental computation implemented dynamic programming 
consider partitioning example set fig 
intervals 
illustrate dynamic programming search efficient 
consider situation processing fifth block data 
assume best partitions arities evaluated stored prefixes data consisting blocks 
fact best partitions stored depicted fig 
drawing binary partition prefix alternatives 
order obtain impurities best partitions arity extended data set need evaluate suffixes data corresponding rightmost interval extended partition combine results appropriately best ones obtained earlier prefixes data see fig 

optimal partition best partition data arity 
elomaa rousu 
searching best way split need evaluate suffixes data order recover optimal splits 
black suffixes need evaluated processing fifth block examples 
gray partitions evaluated previously best impurities stored 
value binary partition evaluated best stored 
combining new impurities appropriately stored ones gives impurity values best partitions arities part data 

behavedness important evaluation functions usefulness average class entropy follows information gain function quinlan useful fayyad irani 
earlier notation information gain expressed ig gamma ace class entropy sample prior partitioning ace average class entropy partitioned value attribute 
attribute gains increase information selected 
invariant respect attributes partitions induced 
objective essence maximize negation average class entropy 
behavedness ig follows ace 
behavedness important attribute evaluation functions clear earlier results 
example gini index diversity quadratic entropy breiman breiman defined gi js jsj gini gini impurity measure gini gamma gamma denotes proportion instances class data evaluation function gi known convex useful 
furthermore evaluation function addition cumulative behavedness follows theorem 
evaluation functions multisplitting numerical attributes entropy function see mingers kononenko 
necessarily behaved 
subsections probe extent class behaved evaluation functions 
analyze non cumulative evaluation functions gain ratio quinlan normalized distance measure opez de 
utilize theorem proving behavedness cumulative functions 
proofs treat evaluation functions component functions continuous twice differentiable defined discrete 
observe causes harm consider proving absence certain local 
recall possible cut points data points bins partition occur bin 
bins combined blocks mixed bins remain separate blocks consecutive uniform bins class get combined common block 
possible cut points addition boundary points uniform blocks 
examining usefulness behavedness evaluation function show function optimum uniform blocks fayyad irani 

evaluation functions information gain function penalize partition having large arity 
favors excessively multi valued nominal attributes multisplitting numerical attribute value ranges 
correct deficiency quinlan suggested dividing ig score partition term gamma js jsj log js jsj resulting evaluation function known gain ratio gr ig ig intent maximize function 
notice gr cumulative evaluation function value coefficient depends chosen partition referring sizes partition subsets 
incorporates gain ratio default choice attribute evaluation 
observed difficulties particular connection numerical attributes 
order overcome problems opez de proposed closely related evaluation function quinlan compelled change evaluation numerical attributes 
analysis functions surprisingly scarce opez de dietterich kearns mansour 
study convexity behavedness functions 
elomaa rousu cp bp bp bp 
example set ordered value integer valued attribute 
examples members classes boundary points possible cut point data chosen dimension 
theorem evaluation function gain ratio convex 
proof consider data fig 

example class label value numerical integer case attribute shown 
boundary points data bp bp possible cut point cp 
denote gain ratio binary partition fraction examples belongs left subset rest data right 
order see gain ratio convex behavior second derivative inspected leftmost block bins consisting instances class seen gain ratio curve inflection point example shows gain ratio function convex block 
convexity desirable property lack thereof imply function useful 
elomaa rousu gave explicit usefulness proof earlier utilizes proof techniques proof 
independently research brodley obtained essentially result 
examined usefulness evaluation functions generally formalized properties evaluation functions similar rational formula gain ratio exhibit useful behavior turns properties just ones utilized proof 
keep mind intent maximize gain ratio minimize 
theorem gain ratio optimal partitions defined boundary points 
proof partition arbitrary example set dimension numerical attribute assume gain ratio optimal partition partitions arity 
multisplitting numerical attributes gamma 
illustration situation proof theorem 
cut points gamma induce partition data 
instances class proof examines consequences positioning interval th threshold multiway partition data 
prove assume 
ft gamma set cut points defines show threshold boundary point slide threshold boundary point decreasing gain ratio 
assume threshold gamma boundary point see fig 

define points sorted example sequence cut point lower border boundary point uniform block contains border positioned thresholds gamma cut point gamma block define gamma similarly define boundary point upper border uniform block contains threshold case instances class cut points cut points gamma induce partition data fs val gamma fs gamma val dg fs val ug fs val fs val follows applies case sets empty set 
mg unique class examples jp jqj jrj 
denote number instances class mg set respective number see fig 

particular numbers instances class sets respectively 
consider happens value gain ratio threshold shifted interval review case threshold positioned th instance leaves gamma elements right side gr ig ace denote related function values corresponding situation 
furthermore number instances class set define jsj js log js js log js gamma elomaa rousu gamma log log delta jsj log gamma log gamma gamma delta log gamma gamma log gamma gamma log log part numerator gr formula value depends exact location threshold moving uniform interval affects values 
similarly denominator gr formula terms affected positioning define jsj gamma js js log jsj gamma js log js gamma js log js delta jsj gamma log jsj gamma log gamma gamma log gamma delta write information gain partition placed th example ig gamma ace gamma gamma js jsj js jsj similarly denominator rewritten gamma gamma js jsj log js jsj gamma js jsj log js jsj derivative ig respect constant terms depend value differentiate zero 
ig ig gammae second derivative ig gammae 
happens derivative 
derivatives affected data subsets summing elements total number examples 
derivative gr gr gr ig gamma ig define ig gamma ig note ig ig gamma ig gamma ig gammae gamma ig multisplitting numerical attributes holds definition ig check gammae order see second derivative jsj gamma gamma gamma gamma gammae 
furthermore jsj gamma gamma gamma shorthand notation second derivative gr expressed gr gr gamma potential location local maximum point gr 
expression gr simplified gr larger zero 
words gr local maximum 
chosen arbitrarily shown gr obtain maximum value threshold placed cut points respectively 
gain ratio function convex cumulative behaves 
non cumulativity gain ratio means efficient evaluation scheme known function 
analysis applies normalized distance measure nd proposed opez de alternative information gain gain ratio functions 
measure expressed help information gain nd gamma ig gamma jsj log jsj number intervals number classes preceding notation stands number instances class set intent minimize value distance nd equally maximize value gamma nd 
similar form definition gain ratio function similar proof shows nd behaves counterexample serves prove non convexity 
elomaa rousu theorem evaluation function normalized distance measure convex 
proof normalized distance measure inflection point data fig 
second derivative turns negative positive point claim follows 
theorem optimal normalized distance measure partitions defined boundary points 
proof theorem identical theorem 
omit 
outline proof 
prove claim holds nd gamma nd ig directly follows nd behaves 
order prove optimal nd partitions defined boundary points consider situation proof theorem see fig 
examine happens nd value optimal partition threshold boundary point shifted uniform interval 
decomposing numerator denominator nd formula situation differentiating twice show uniform interval contain local maximum renders threshold boundary point superfluous 
example functions gr nd demonstrate property behavedness 
guarantee optimal partition exists boundary points regardless arity 
behaving functions optimal way partition defined boundary points example set shown fig 

rank partition defined cut point cp boundary point bp best arity 
gr nd behaved give better score binary partition data best partition arity 
gain ratio best way partition best binary partition defined boundary point bp 
respective figures nd 

mdl mml cost function machine learning research minimum description length principle mdl rissanen minimum message length principle mml wallace freeman central theme coding examples 
rissanen quinlan rivest wallace patrick explored mdl mml decision tree learning 
intent minimize coding length examples natural cost function evaluating attributes attribute gives rise total coding length examples chosen evolving tree 
multisplitting numerical attributes 
illustration situation proofs theorems 
boundary points induce data instances class proofs examine consequences partitioning data threshold members left side 
incremental exception coding scheme wallace patrick instance class encoded fly going sample 
instance consideration member class observations total examples seen far gamma log ff mff bits encode 
parameter ff ensures classes positive probability biases depending value impurity resulting intervals 
subsequently refer method name wp 
coding scheme wp falls category adaptive arithmetic data compression methods witten neal cleary 
class frequency distribution sample examples compute exact code length howard vitter wp ff log mff ff shorthand notation increasing power delta delta delta gamma 
natural way defining mdl mml cost split wp cost log gamma log gamma gamma wp ff terms define cost transmitting positions gamma cut points 
number unique values numerical attribute 
theorem cost function wp cost useful 
proof terms formula wp cost depend positions cut points order prove usefulness function show coding scheme wp ff third term behaves elomaa rousu usefully 
order suffices show useful behavior coding cost wp ff wp ff binary partition data set sufficient show wp cost useful consecutive boundary points sample ordered value numerical attribute instances class 
thresholds induce sample see fig 
fs val fs val fs val observe degenerate case may empty set 
follows applies cases 
classes mg denote number instances class respectively define numbers instances assumption instances belong class 
mg 
proof trivial subsequently assume 
consider partition induced point instances val leaves gamma examples range val move cut point example right cost coding increases gamma log ff mff cost decreases gamma log gamma gamma ff gamma gamma mff net change total cost encoding wp ff wp ff delta log mff ff gamma log gamma gamma mff gamma gamma ff harm happens delta differentiable function 
derivative delta respect delta ff gamma mff gamma mff ff ff gamma mff gamma ff gamma gamma mff gamma gamma gamma ff gamma mff ff gamma ff gamma ff gamma gamma mff gamma gamma numerators terms delta negative denominators positive value delta decreases grows 
cost function wp cost useful multisplitting numerical attributes boundary points arbitrarily selected claim follows 
cost function wp cost cumulative value partition obtained summation encodings subsets 
behavedness follows previous result theorem 
corollary cost function wp cost behaved 
mdl mml cost functions interesting candidates evaluation functions multisplitting inherently penalize growth arity partition fayyad irani quinlan 
wp cost needless binarization subsample contains members class incurs increase cost 
earlier experience rousu lets conjecture drastic improvements prediction accuracy expected techniques 
similar empirical evidence reported quinlan rivest wallace patrick 

minimum training set error learning decision trees limited depth level decision trees timmers gelsema bins iba langley holte elomaa maass auer repetitive binary splitting viable way partitioning numerical value ranges 
instance algorithm auer exhaustively searches optimal decision tree depth 
process entails optimal multisplitting numerical domains 
evaluation function optimized training set error tse number training instances falsely classified decision tree 
set examples class attribute 
number disagreeing instances set belonging majority class ffi jfs val maj gj training set error partition defined cumulative sum tse ffi theorem evaluation function tse useful 
proof basic setting previous usefulness proof see fig 

boundary points instances class define sample threshold examples left gamma right 
binary partition induced class attribute maj maj maj mg 
define gamma intuitively elomaa rousu minimum number examples set left threshold unique frequent class set respectively define gamma gamma set gamma resp 
elements right resp 
left threshold unique majority class set consider numbers disagreeing examples sets number examples left threshold value majority class continues majority class members set belonging counted disagreeing instances belong majority class 
number disagreeing examples ffi 
strictly examples left unique majority class number disagreements ceases increase members belong majority class 
see number disagreements observe exactly instances classes set numbers disagreements classes equal 
point number disagreements class obviously ffi situation new disagreements new majority class arise number disagreements holds ffi ae ffi ffi ffi reduces ffi 
corresponding equation ffi ae ffi gamma ffi gamma notice empty ffi ffi reduces value 
respectively empty ffi 
equations hold natural boundary points value range 
depending relation total number errors derived differently resulting equations see alike 
constant ffi ffi cases combination equations ffi ffi leads tse ffi ffi gamma ffi ffi gamma ffi ffi gamma gamma gamma gamma variable equations training set error monotonically increasing stays constant monotonically multisplitting numerical attributes decreasing 
tse receives minimum value value case value tse minimizes boundary point 
obtain tse ffi ffi gamma ffi ffi gamma ffi ffi gamma gamma gamma function increasing stays constant decreases monotonically 
minimum value tse obtained boundary points case tse useful boundary points boundary points arbitrarily selected claim follows 
cumulativity tse previous result follows theorem behaved 
corollary evaluation function tse behaved 
quadratic time optimization algorithm fastest simple evaluation function authors devised linear time optimization algorithms tse 
addition proposing general quadratic time evaluation scheme cumulative functions fulton 
put forward special solution computing optimal tse partitions class problems time kn attribute 
algorithm attains efficiency 
algorithm additional advantage dynamic sense require data preprocessed ascending order prior partitioning 
multiclass problems time requirement kmn space requirement kept low auer 
practical improvement linear time algorithms obtained focusing boundary points 
reason easy tse lies fact processing new block examples suffices count number disagreements respect class add number disagreement figures obtained earlier 
part previously processed data needs training set error monotonically increase addition new block 
single pass data manages reveal optimal tse partition 
brodley suggested mixed strategy entropy evaluation function attribute selection high decision tree evaluation dynamically switched elomaa rousu tse fringe decision tree approached 
strategy reported cases produce better results evaluation functions tree growing process 
mixed strategy addition tse behaved cumulative evaluation function strategy easy implement dynamic programming approach 
learning algorithm parametrized evaluation function changes actual algorithm required due separate evaluation functions 

empirical evaluation report series empirical tests explore properties commonly data sets 
tests contrast versions optimal partitioning strategy variant greedy multisplitting approach catlett fayyad irani random partitioning strategy 
experiment standalone versions strategies 
second series tests examines impact numerical attribute handling decision tree learning 
incorporate optimal greedy multisplitting strategies release decision tree learner compare results obtained produced built binarization approach 
contrasted splitting strategies implementations optimal dynamic programming implementation optimal multisplitting strategy rationale section 
basic processing units bins blocks examples 
versions optimal produce optimal partitions differ processing efficiency 
want test practice advantage gained processing speed inspecting boundary points lieu examining possible thresholds 
greedy implementation greedy top multisplitting strategy breadth search 
algorithm constructs split data selecting interval gamma split previous iteration partitioned subintervals 
global quality resulting split selection criteria 
procedure repeated arities partition evaluates best chosen 
strategy test versions utilizes boundary points 
random strategy randomly thresholds define partitions arities evaluates submits best comparison partitions induced attributes 
versions strategy tested thresholds drawn boundary points draws possible values 
binary binarization numerical domain implemented 
strategy inherently intertwined decision tree construction 
taken account test series 
test strategies evaluation functions multisplitting numerical attributes ig information gain function implemented algorithm 
gr gain ratio function implemented algorithm 
gr cumulative optimized dynamic programming approach 
scheme arity search ig optimizing calculate gain ratio 
split gain ratio evaluates best selected 
bg log straightforward attempt balance bias ig favors excessively 
balanced gain bg log kononenko bratko assigns cost increase arity partition ary bg log ig log behavedness function clear 
method numerical attribute evaluation default evaluation function gr nominal attributes tests involving decision tree generation 
see bg log closely related gain ratio observe denominator formula gr entropy function applied sizes intervals class distribution 
log information theoretical sense log entropy intervals assigned equal probability regardless size 
bg log penalizes equal arity partitions uniformly maximally regards gr 
note bg log coincides ig binary splitting case denominator log value 
experiments known data sets uci repository merz murphy 
table summarizes briefly main characteristics data sets 
records numbers different attribute types nominal integer real average number different values numerical attribute domain column average number boundary points numerical attribute column total number examples number distinct classes 
experiments run mp computer 
distinction nominal integer domain clear 
integer valued domain enumerates values nominal domain 
tried screen enumerations numerical attributes clear picture numerical domains exist commonly data sets 
table gives average numbers different values numerical attribute range average number boundary points real world data sets holds exceptions appendix studies decisive relationships comprehensively 

comparison splitting strategies multisplitting strategy endeavors find split minimizes maximizes value evaluation function 
function advantageous optimizing value benefit prediction abilities classifier 
case objective criterion strategies judged goodness split values produce 
order assess different multisplitting strategies elomaa rousu table 
characteristic figures test domains 
attributes data set 
int 
real examples classes abalone adult annealing australian auto 
breast colic diabetes euthyroid german glass heart heart hepatitis hypothyroid iris letter recogn 
liver mole page blocks robot satellite segmentation shuttle sonar vehicle vowel wine yeast meet goal tested methods separate learning scheme 
examined numerical attribute data set turn produced attribute 
evaluation function ig upper bound arity 
unknown attribute values handled manner distributed partition subsets weight proportional subset size 
results average values measured quantities numerical attribute data set 
test series monitors quality splits produced different multisplitting strategies 
fig 
depicts ig scores obtained strategies greedy random relative optimal scores 
mark represents relative average information gain score split arity numerical attributes 
strategies greedy optimal choose split boundary points independent bins blocks basic processing unit function ig behaved 
relative score denoted square multisplitting numerical attributes ig abalone adult anneal 
austral 
auto ins 
breast colic diabetes euthyroid 
german glass heart heart hepatitis 
iris letter rec 
liver mole page bl 
robot satellite segment 
shuttle sonar vehicle vowel wine yeast 
average relative information gain scores obtained splitting strategies greedy denoted squares random white circles denote version operating blocks black circles handles bins 
depicted greedy 
strategy random difference processing unit relative average bins denoted black circle blocks white circle 
choosing partition thresholds random compete strategies aim maximizing value evaluation function 
strategy relative performance attributes best domain adult 
domain contains attributes informed partitioning difficult random splitting strategy 
greedy strategy regularly fails obtain optimal information gain scores 
domains average number boundary points breast robot greedy able find optimal split numerical attribute 
greedy comes partitions marginally smaller average gain optimal partitions 
domains cause trouble greedy experiment high number truly continuous attributes 
distinctive characteristic domains high number bins blocks respect number examples data see appendix 
domains greedy leaves unevaluated large number partitions may explain described behavior 
interesting property multisplitting algorithms running time 
table lists average running time split required algorithms produce 
includes preprocessing time bin block con elomaa rousu table 
average running times multisplitting strategies second split 
random greedy optimal data set sorting bins blocks bins blocks bins blocks abalone adult annealing australian auto insurance breast colic diabetes euthyroid german glass heart heart hepatitis hypothyroid iris letter recogn 
liver mole page blocks robot satellite segmentation shuttle sonar vehicle vowel wine yeast geom 
mean struction constitutes marginal part total time required choose partition 
time required sorting separately column 
practice optimal splitting fast provided cumulative behaved evaluation function 
thirds test sets average time required find partition strategy optimal version utilizes blocks tenths second 
arithmetic mean average value totally dominated heaviest domains geometric mean case thirtieth root product domain average values summarize results 
differences geometric mean measure relative value differences opposed absolute differences arithmetic mean measures 
parts results clear sorting takes expected log time linear dependency number examples clearly reflected multisplitting numerical attributes time consumption sorting 
case largest domains letter recognition shuttle sorting dominates search times 
relative order running speed tested strategies clear expected random naturally fastest greedy comes second searching optimal split requires time 
strategies restricting partitions boundary points faster considering possible values potential cut points 
strategies random greedy speed average little optimal gains excess speed examining boundary points possible cut points 
running times versions optimal strategy depend quadratically number bins blocks respectively 
large number bins blocks results slower running times 
average numbers bins blocks table usually serve indicate dependency 
domains highest average number blocks optimal second time split domain adult requires minutes split abalone near minutes vowel seconds page blocks seconds 
domains optimal split chosen tenths second 
random strategy takes second choose split greedy domain abalone requires second split 
peculiarity results viz slow running time versions optimal strategy data set german high average number bins boundary points contains examples 
reason attribute bins blocks accounts slow processing case see appendix 
average figures kept low domain small numbers bins blocks numerical dimensions 
fact applies domains auto insurance colic adult effects striking 
optimal strategy vulnerability high number boundary points just numerical dimension helped 
number boundary points domain attribute stay constant tree growing process delay evaluation partitions dimensions high number boundary points hope number reduces decision tree evolves 
rationale heuristic univariate learning attribute useful class prediction due part multivariate interdependency subsequently turn important 
domains relatively low number boundary points optimal strategy blocks order magnitude running speed greedy 
average number boundary points grows large optimal multisplitting slower greedy partitioning case hardest domains slower 
average greedy strategy times faster optimal 
relative speed versions optimal strategy course determined relationship numbers boundary points different values numerical domains striking reductions running time elomaa rousu obtained domains fraction lowest vice versa see table appendix 

impact decision tree learning second test set explores practical impact different splitting strategies result induction 
strategies greedy optimal implemented algorithm 
test method fold cross validation 
addition test repeated times 
reported figures average values repetitions 
standard deviations calculated results repetitions 
default pruning method applied 
combined multisplitting strategies ig function systematically fails match results obtained bg log function 
refrain recording tables results strategies optimal greedy combined ig 
recall binary partitioning ig bg log coincide 
table records average prediction accuracies standard deviations obtained trees required reduced numerical attribute value range split remains candidate attributes 
individual domains differences average accuracy relatively consistently favor gr strategies 
outstanding value difference table difference domain sonar 
example set duplicate values appears impairing factor gr function 
altogether results experiment lead hypothesize bg log significantly accurate decision trees built gr independent splitting strategy 
tested hypothesis gets statistical support results 
contrasted evaluation functions paired splitting strategy 
statistically significant confidence level significant confidence level differences prediction accuracy calculated tailed student test 
table summarizes result comparison 
double plus row gives number domains bg log ig significantly better average prediction accuracy gr 
row entitled single plus sums number significant advantages function 
single double minus rows count respectively numbers domains significantly favorable gr 
number domains statistically significant difference prediction accuracy observed row title 
independent splitting strategy bg log ig clearly statistically significantly accurate gr 
difference clearest binary partitioning strategy gr typically combined 
results indicate choice numerical attribute evaluation function effect prediction accuracy resulting decision tree matter splitting strategy 
results table indicate choice partitioning strategy marginal effect outcome multisplitting numerical attributes table 
average prediction accuracies standard deviations decision trees obtained different splitting strategies evaluation functions 
binary greedy optimal data set gr ig gr bg log gr bg log abalone sigma sigma sigma sigma sigma sigma adult sigma sigma sigma sigma sigma sigma annealing sigma sigma sigma sigma sigma sigma australian sigma sigma sigma sigma sigma sigma auto ins 
sigma sigma sigma sigma sigma sigma breast sigma sigma sigma sigma sigma sigma colic sigma sigma sigma sigma sigma sigma diabetes sigma sigma sigma sigma sigma sigma euthyroid sigma sigma sigma sigma sigma sigma sigma sigma sigma sigma sigma sigma german sigma sigma sigma sigma sigma sigma glass sigma sigma sigma sigma sigma sigma heart sigma sigma sigma sigma sigma sigma heart sigma sigma sigma sigma sigma sigma hepatitis sigma sigma sigma sigma sigma sigma hypothyroid sigma sigma sigma sigma sigma sigma iris sigma sigma sigma sigma sigma sigma letter recogn 
sigma sigma sigma sigma sigma sigma liver sigma sigma sigma sigma sigma sigma mole sigma sigma sigma sigma sigma sigma page blocks sigma sigma sigma sigma sigma sigma robot sigma sigma sigma sigma sigma sigma satellite sigma sigma sigma sigma sigma sigma segmentation sigma sigma sigma sigma sigma sigma shuttle sigma sigma sigma sigma sigma sigma sonar sigma sigma sigma sigma sigma sigma vehicle sigma sigma sigma sigma sigma sigma vowel sigma sigma sigma sigma sigma sigma wine sigma sigma sigma sigma sigma sigma yeast sigma sigma sigma sigma sigma sigma table 
statistically significant differences prediction accuracies table comparing evaluation functions splitting strategies 
binary greedy optimal diff 
ig vs gr bg log vs gr bg log vs gr gamma gamma gamma induction 
order test hypothesis statistically paired results obtained strategies evaluation function 
statistical test previous comparison applied average value pairs 
elomaa rousu table 
statistically significant differences prediction accuracies table comparing splitting strategies changing evaluation function 
gr bg log diff 
opt grd opt bin grd bin opt grd opt bin grd bin gamma gamma gamma table 
average running times combined different splitting strategies test domains seconds 
binary greedy optimal gr ig gr bg log gr bg log geom 
mean table summarizes results comparison 
columns opt grd denote comparisons optimal greedy strategies opt bin optimal binary grd bin greedy binary 
double plus row number statistically significant differences favor mentioned strategy counted 
row single plus stands statistically significant differences favor strategy 
similarly rows named double minus minus sum numbers comparison strategy 
row contains number domains statistically significant difference exists comparison 
significant differences pair strategies nearly balanced 
domains significant difference multisplitting strategies 
significant differences multisplitting strategy compared binary strategy especially gr evaluation function number differences favor binary equal number differences favor multisplitting 
sum result confirms earlier observation choice evaluation function greater impact accuracy splitting strategy selection 
prediction accuracy undoubtedly important variable monitor 
secondary parameters worth attention 
multisplitting strategies produce decision trees average somewhat nodes total binary decision trees 
average tree sizes test sets binary gain ratio information gain function respective figures greedy optimal 
factors explain binary decision trees slightly smaller average pruning method deletes binary partition decision tree eagerly decision node binary tree large number leaf nodes 
multisplitting numerical attributes geometric mean table summarize average running times multisplitting strategies test domains 
binary strategy average twice fast greedy multisplitting 
optimizing doubles average time 
results stand test multisplitting lead expect greedy strategy greater advantage running speed optimal strategy 
auxiliary tasks reading data preprocessing pruning balance differences strategies 
addition producing accurate decision trees bg log gr beneficial execution efficiency 
general rule large domains take time handle binary strategy sorting takes longer time domains 
binary strategy small efficiency advantage large test sets 
applies small domains minimal number bins blocks 
number numerical attributes plays role decision tree learning numerical attributes needs process data 
binary strategy examines bin borders 
running time affected high number bins domain 
evident adult domain 
time consumption binary exceeds minutes 
running times multisplitting strategies hit worse adult domain high number boundary points greedy gain ratio requires excess minutes produce tree optimal hours 
domains abalone adult mole vowel time consumption combined optimal strategy different order magnitude uses built binary strategy 

discussion preceding empirical evidence multisplitting numerical attribute value ranges functions bg log ig gr carry advantage prediction accuracy binary splitting 
similar empirical evidence put forward quinlan 
addition greedy selection thresholds numerical dimensions results decision trees accuracy optimal selected 
hand price paid optimizing remains cases low 
relatively easy understand multisplitting benefit prediction accuracy expected 
greedy tdidt construction algorithm give chance revoking decision taken 
true utility local multisplitting decision determined subtrees grown subsequently evaluation time 
hand basing multiway partitioning binarization numerical attribute hand affect subtrees way 
final splitting decision delayed knowledge gathered 
corresponding effect multisplitting obtained look ahead unfortunately time consuming 
elomaa rousu embedded tdidt framework difference efficiency exists strategies greedy optimal reduces decision tree construction tasks reading data preprocessing pruning take part total running time 
multisplitting slower binarization greedy multisplitting takes average twice time binarization decision tree learning optimal multisplitting doubles average time greedy multisplitting 
size data set decisive factor splitting strategies 
mainly affects sorting performed methods alike 
hand large number boundary points affects running time multisplitting algorithms usually indicates attribute hand predictive situation extremely noisy 
way attribute applicable univariate decision tree construction 
filtering mechanism help overcome problem apparently irrelevant attributes situations 
example recall section single attribute high number blocks domains german adult causing optimal strategy substantially slow 
experiment simply removed attributes grew decision trees anew 
deleting malignant attributes change prediction accuracies produced trees significantly attribute case 
running times strategies hand decreased 
particularly large time savings obtained optimal strategy domain adult hours processing time originally required come decision tree removing useless attribute minutes suffices 
careful modifying data attributes simply deleted high number boundary points risking lose complex multivariate attribute interrelations prevailing data 
optimal strategy exists practical heuristic speed opportunities 
restricting split constant arity counteract bias ig 
global upper bound arity partition common attributes 
assign individual upper bound attribute separately 
heuristics intend take account poor bias evaluation function 
obviously balanced evaluation functions quinlan white liu kononenko heuristics needed 
experiments intentionally overlooked problems caused noisy data remains topic research 
initial experiment observed increasing amount classification noise caused increase number blocks 
domains low ratio increase may dramatic 
course increases execution time splitting strategies examining boundary points 
attribute noise increases number bins blocks affects running times partitioning strategies 
resulting partition optimized approximated useful noisy induction task determined robustness evaluation function multisplitting numerical attributes splitting strategy 
noisy setting optimizing evaluation function ought profitable 

analyzed prerequisites multisplitting numerical attributes 
starting point efficient multisplitting concept boundary point defined fayyad irani 
characterization evaluation functions suffices focus boundary points searching optimal multiway partition 
efficient method going required boundary point combinations naturally suggests 
previously known class entropy functions convex downwards 
class behaved evaluation functions contains types functions 
empirical evaluation shows alternative approaches multisplitting constantly fail obtain optimal partitions 
optimizing value common evaluation functions choosing bring apparent advantage decision tree learning 
current shown commonly attribute evaluation functions behaved multisplitting 
number blocks grows sublinearly size domain behavedness reduces dependency computation evaluation function size data set leaves vulnerable noisy irrelevant attributes 
experiments show accuracy considerably influenced choice evaluation function 
behavedness necessary sufficient condition evaluation function 
addition needs balanced bias 
interesting candidate analysis efficient attribute evaluation explore generality class attribute evaluation functions optimized linear time training set error practical instance functions 
interesting research direction see definition behaved function tightened order ascertain quality decision trees produced reduce time complexity optimization functions 
demonstrated section behavedness guarantee existence optimal partition fixed arity defined boundary points 
conjecture evaluation functions wp cost tse bg log property 
functions gr nd excluded class functions 
unclear tighter definition rule evaluation function bias 
interesting research topic development lazy attribute evaluation methods postpone evaluation attributes high number boundary points stage decision tree learning 
methods free optimal partitioning expensive large number boundary points single numerical dimension 
effect noise multisplitting briefly touched ought analyzed empirically explored 
elomaa rousu multisplitting possible prohibit numerical attributes branch decision tree 
empirical experiments numerical attributes reappear 
topic research practical effect growing reduced trees multisplitting numerical attributes 
affect prediction accuracy 
reduced trees significantly smaller reduced 
understandability 
developing new attribute evaluation functions art science 
particular advances field ad hoc rectification attempts known evaluation functions 
reported clearly guidelines evaluation function design emerge cumulative evaluation functions 
long evaluation function cumulative multisplitting strategy find optimal evaluation function 
concentrate developing evaluation functions appropriate bias 
focus developing transparent evaluation functions bias better analyzed understood 
evaluation function applied partition just parts time greedy approaches 
ensure function behaved 
general purpose evaluation function behaved beneficial manner connection splitting strategy 
behaved functions clearly reasonable ones fayyad irani breiman 
handling numerical attributes preprocessing phase prior induction classifier construction approach suggested dougherty 
approach quite time critical line discretization numerical value ranges 
furthermore preprocessing strives partitions possible 
obviously optimal multisplitting strategy suits approach perfectly 
noteworthy application area growing optimized reduced decision trees data mining decision tree learning algorithms important tools 
acknowledgments insightful comments editor rob holte helped substantially improve content presentation final version article 
elomaa part supported marie curie fellowship done joint research centre european commission italy 
rousu partly supported academy finland carried department computer science university helsinki 
multisplitting numerical attributes appendix search algorithm optimal optimal search algorithm described uses dynamic programming scheme similar suggested fulton 

main conceptual practical difference works example intervals individual examples 
leads compact data structures better run time efficiency 
preprocessing data blocks bins relieves checking data split examples boundary point 
bins blocks automatically takes care checks search algorithm works faster practice 
simple phase preprocessing algorithm essence described section 
phase bins extracted example sequence requires scan sorted example sequence recording frequencies different classes bins associated numerical attribute value 
second phase neighboring class uniform bins contain examples class compressed blocks highest numerical value block stored 
recall bins mixed class distributions blocks 
implementation algorithms straightforward elaborated 
possible implement preprocessing single pass straightforward pass strategy fast comparison search phase 
search algorithm interval represented class frequency distribution denoted question intervals blocks bins immaterial perspective search algorithm preprocessing decides semantics intervals 
discussion assumed blocks handled 
corresponding bounds case bins obtained replacing 
search algorithm fig 
uses left right scan intervals uses arrays cost storing intermediate results 
array stores costs best minimum cost obtained intervals split optimally subsets 
array storing corresponding cut points index block contains rightmost cut point having cost third array cost eliminate repeated calculation interval impurities 
class distribution interval needed scan passed interval algorithm reuses space point represents class distribution union intervals performed merging distributions recalculating costs lines 
iteration array updated lines formula min gamma fp gamma intuitive interpretation 
optimal partitioning subsets minimum cost combinations fixing interval elomaa rousu procedure search contains class frequency distributions blocks impurity function maximum number intervals allowed split 


gamma augment final intervals block 
cost od 
cost 
limit 
limit gamma 
compute best split 
minimum 
gamma gamma 
current gamma cost 
current minimum 
minimum current od 
minimum od od 
search algorithm 
fills arrays running algorithm cost optimal split blocks index block situated immediately left rightmost cut point 
adding cost best gamma split update needs performed arity note prefix split intervals 
fact lets algorithm restrict computation upper triangular subarray fact impurities splits proper prefixes data needed computing split data utilized lines 
note extracting best split array easy lb gives index block contains rightmost cut point 
cut point left contained block gamma lb continuing iteration find block indices 
constructed help boundary points stored block 

time space requirements algorithm time complexity preprocessing easily determined 
pass comprises reading class labels examples summing class distributions bins 
clearly takes time mv number examples number classes number bins 
multisplitting numerical attributes cost second phase block construction determined number required bin merges 
worst case gamma leads time complexity mv 
total worst case time complexity preprocessing mv 
analyze search algorithm 
consider loop lines 
merging class frequency distributions takes time number classes 
commonly evaluation functions evaluation impurity takes time complexity iteration clearly 
number iterations loop item updated total number iterations gives total complexity mb loop 
rest analysis divided unbounded bounded cases prior restriction arity set 
analyzing unbounded case 
keep mind algorithm fills consults triangular area array items visited algorithm 
amortize cost running innermost loop lines items triangle excluding row updated loop 
note number iterations loop array item equal diagonal diagonal pb length gamma diagonal pb gamma length gamma 
total number iterations innermost loop sum gamma gamma gamma gamma gamma gamma gamma gamma gamma time complexity innermost loop worst case 
observe lines take constant time item array affect worst case complexity 
total running time algorithm mb prior upper bound arity 
turn case prior upper bound arity 
case diagonals cut length gamma excluding row exception gamma diagonals upper right hand corner triangle affected bound number iterations innermost loop gammak gamma gamma gammak gamma sum represent cut diagonals rest 
formula simplifies gamma gamma gamma gamma elomaa rousu kb definition 
including needed update class distributions total running time algorithm bounded case 
space complexity preprocessing algorithm mv space taken class frequency distributions bins 
space needed search algorithm determined arrays array size mb 
arrays size unbounded case kb bounded case 
total amount space search algorithm bounded case mb unbounded case 
appendix relationships numbers examples different values boundary points numerical dimensions test domains appendix analyzes test domains relationship number different values number boundary points respect total number examples addition contrast values 
fig 
plots test domains ratios ratios depicted separately numerical dimension 
small circle represents value attribute small horizontal lines indicate median values 
terms decision tree learning ratios conform situation numerical attribute considered label root evolving tree data split attribute 
domains glass segmentation sonar vowel wine median ratio value 
domains truly continuous attributes account attributes average examples value 
attributes domains ratio higher 
domains australian hepatitis median ratio 
number domains median ratio half test domains 
changes consider ratio domain vowel keeps median ratio value 
domains median ratio median ratio 
rest domains median ratio 
number domains ratio median thirds test domains 
domains attributes high ratio adult colic german attributes ratio attributes 
comparison find support claim typically real world data sets 
domains truly continuous attributes hold 
contrary cases claim concerns ratio boundary points number examples certainly true typically domains truly continuous attributes 
multisplitting numerical attributes abalone adult anneal 
austral 
auto ins 
breast colic diabetes euthyroid 
german glass heart heart hepatitis 
iris letter rec 
liver mole page bl 
robot satellite segment 
shuttle sonar vehicle vowel wine yeast 
ratio number different values numerical value range number examples ratio numbers boundary points examples depicted 
circle represents numerical attribute horizontal lines indicate median values domain 
fig 
directly compares plotting ratio test domains 
small circle represents numerical attribute 
horizontal line denotes median ratios numerical attributes domain 
domains great majority attributes meaning half values boundary values 
means examining elomaa rousu abalone adult anneal 
austral 
auto ins 
breast colic diabetes euthyroid 
german glass heart heart hepatitis 
iris letter rec 
liver mole page bl 
robot satellite segment 
shuttle sonar vehicle vowel wine yeast 
ratio number boundary points different values numerical value ranges 
small circle represents ratio numerical dimension 
horizontal lines depict medians ratios 
boundary points lets leave fourth potential cut points attention seldom half cut points overlooked 
notes 
strictly speaking gain ratio normalized distance measure conform definition behavedness undefined trivial partitions 

quinlan motivated gain ratio experimental results reported kononenko 

experiments bg log evaluating multi valued nominal attributes results satisfactory 
auer 

optimal splits single attributes 
unpublished manuscript institute theoretical computer science graz university technology 
auer holte maass 

theory application agnostic pac learning small decision trees 
prieditis russell eds machine learning proceedings twelfth international conference pp 

san francisco ca morgan kaufmann 


fast simple algorithms finding maximal subarrays applications learning theory 
ben david ed proceedings third european conference computational learning theory pp 

lecture notes artificial intelligence vol 

heidelberg springer verlag 
multisplitting numerical attributes breiman 

properties splitting criteria 
machine learning 
breiman friedman olshen stone 

classification regression trees 
pacific grove ca wadsworth 
brodley 

automatic selection split criterion tree growing node location 
prieditis russell eds machine learning proceedings twelfth international conference pp 

san francisco ca morgan kaufmann 
buntine niblett 

comparison splitting rules decision tree induction 
machine learning 
catlett 

changing continuous attributes ordered discrete attributes 
kodratoff ed proceedings fifth european working session learning pp 

lecture notes computer science vol 

heidelberg springer verlag 
cestnik kononenko bratko 

assistant knowledge elicitation tool sophisticated users 
bratko lavrac eds progress machine learning proceedings second european working session learning pp 

sigma press 
brodley 

qualitative behavior impurity splitting rules minima free property 
machine learning appear 
dietterich kearns mansour 

applying weak learning framework understand improve 
saitta ed machine learning proceedings thirteenth international conference pp 

san francisco ca morgan kaufmann 
dougherty kohavi sahami 

supervised unsupervised discretization continuous features 
prieditis russell eds machine learning proceedings twelfth international conference pp 

san francisco ca morgan kaufmann 
elomaa 

defense notes learning level decision trees 
cohen hirsh eds machine learning proceedings eleventh international conference pp 

san francisco ca morgan kaufmann 
elomaa rousu 

behavedness important attribute evaluation functions 
grahne ed proceedings sixth scandinavian conference artificial intelligence pp 

frontiers artificial intelligence applications vol 

amsterdam ios press tokyo ohmsha fayyad irani 

attribute selection problem decision tree generation 
proceedings tenth national conference artificial intelligence pp 

menlo park ca aaai press 
fayyad irani 

handling continuous valued attributes decision tree generation 
machine learning 
fayyad irani 

multi interval discretization continuous valued attributes classification learning 
proceedings thirteenth international joint conference artificial intelligence pp 

san francisco ca morgan kaufmann 
fulton kasif salzberg 

efficient algorithms finding multi way splits decision trees 
prieditis russell eds machine learning proceedings twelfth international conference pp 

san francisco ca morgan kaufmann 
holte 

simple classification rules perform commonly data sets 
machine learning 
howard vitter 

analysis arithmetic coding data compression 
information processing management 
iba langley 

induction level decision trees 
sleeman edwards eds machine learning proceedings ninth international workshop pp 

san francisco ca morgan kaufmann 
kononenko 

biases estimating multi valued attributes 
proceedings fourteenth international joint conference artificial intelligence pp 

san francisco ca morgan kaufmann 
kononenko bratko 

experiments automatic learning medical diagnostic rules technical report 
ljubljana josef stefan institute faculty electrical engineering computer science 
timmers gelsema bins 

binary tree versus single level tree classification white blood cells 
pattern recognition 
opez de 

distance attribute selection measure decision tree induction 
machine learning 
elomaa rousu 

increasing performance consistency classification trees accuracy criterion leaves 
prieditis russell eds machine learning proceedings twelfth international conference pp 

san francisco ca morgan kaufmann 
maass 

efficient agnostic pac learning simple hypotheses 
proceedings seventh annual acm conference computational learning theory pp 

new york acm press 
merz murphy 

uci repository machine learning databases www 
ics uci edu mlearn mlrepository html 
irvine ca university california department information computer science 
mingers 

empirical comparison selection measures decision tree induction 
machine learning 
quinlan 

learning efficient classification procedures application chess games 
michalski carbonell mitchell eds machine learning artificial intelligence approach pp 

palo alto ca tioga 
quinlan 

induction decision trees 
machine learning 
quinlan 

decision trees multi valued attributes 
hayes michie richards eds machine intelligence vol 
logic acquisition knowledge pp 

oxford oxford university press 
quinlan 

programs machine learning 
san francisco ca morgan kaufmann 
quinlan 

improved continuous attributes 
journal artificial intelligence research 
quinlan rivest 

inferring decision trees minimum description length principle 
information computation 
rissanen 

stochastic complexity statistical inquiry 
river edge nj world scientific 
rissanen 

stochastic complexity learning 
vit anyi ed proceedings second european conference computational learning theory pp 

lecture notes computer science vol 

heidelberg springer verlag 
rousu 

constructing decision trees lists mdl principle finnish 
master thesis department computer science university helsinki finland 
van de 

decision trees numerical attribute spaces 
proceedings thirteenth international joint conference artificial intelligence pp 

san francisco ca morgan kaufmann 
wallace freeman 

estimation inference compact coding 
journal royal statistical society 
wallace patrick 

coding decision trees 
machine learning 
white liu 

bias information measures decision tree induction 
machine learning 
witten neal cleary 

arithmetic coding data compression 
communications acm 
