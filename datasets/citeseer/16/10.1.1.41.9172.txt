machine learning architecture optimizing web search engines justin boyan dayne freitag thorsten joachims dayne cs cmu edu school computer science carnegie mellon university may indexing systems world wide web lycos alta vista play essential role making web useful usable 
systems information retrieval methods indexing plain text documents include heuristics adjusting document rankings special html structure web documents 
describe wide range heuristics including novel inspired reinforcement learning techniques propagating rewards graph affect search engine rankings 
demonstrate system learns combine heuristics automatically feedback collected users resulting improved rankings 
lycos mauldin alta vista similar web search engines essential tools locating information growing world wide web 
underlying systems statistical methods indexing plain text documents 
bulk web consists hypertext markup language html documents exhibit kinds structure general text documents 
internal structure consisting typed text segments marked meta linguistic tags markup 
html defines set roles text document assigned 
roles relate formatting defining bold italic text 
richer semantic import headlines anchors text segments serve hyperlinks documents 
appear aaai workshop internet information systems portland oregon 

external structure 
node hypertext html page related potentially huge numbers pages hyperlinks contains hyperlinks point pages 
html pages structured general text web search engines enhance traditional indexing methods heuristics take advantage structure 
means clear integrate heuristics effectively 
overview section describe prototype web indexing system called laser outline heuristics exploiting internal external structure web 
section entitled automatic optimization describe parameters combining heuristics automatically tuned system usage 
discuss empirical results system 
laser laser learning architecture search engine retrieval system designed investigate applicability machine learning methods indexing web pages 
user perspective laser functionality identical popular web search engines see 
user enters unstructured keyword queries laser matches index pages returning abstracts links pages matching query closely 
page search results user proceed abstracted pages enter new query 
laser retrieval function tfidf vector space retrieval model salton 
model documents queries represented vectors real numbers word documents queries similar contents transformed similar vectors 
laser uses inner product similarity laser interface 
prototype system indexes approximately hypertext documents available cmu computer science department web server 
metric compare documents query 
typically value word depends frequency document consideration frequency entire collection documents 
word occurs frequently particular document collection considered salient document high score 
simplest form tfidf assigns word score proportional frequency document term frequency tf decreasing function number documents occurs inverse document frequency idf 
laser retrieval function model offers number parameters influence rankings produces 
parameters affect retrieval function responds words certain html fields headlines hyperlinks incorporated adjust partial word matches query term adjacency altogether realvalued parameters 
particular parameter setting possible pick certain retrieval function family functions laser offers 
way retrieval function adjusted different characteristics various document collections user groups 
html formatting retrieval web pages written html 
html markup language allows designer page assign certain semantics parts document control layout 
designer specify example title document hierarchies headlines hyperlinks character formats listing parameters laser uses form function calculating document scores appendix 
ing 
laser structure html imposes documents 
example parameter governs extent words title document receive stronger indexing weight words near document 
laser parameters weighting words html fields ffl title ffl headlines ffl bold italics blink ffl underlined anchor text parameters html tags simply multiplicative factors term frequency words scope 
incorporating hypertext links document collections web pages part hypertext graph 
retrieval useful look document isolation take neighboring documents account 
approach took motivated analogy reinforcement learning studied artificial intelligence barto bradtke singh 
imagine agent searching information web move page page hyperlinks 
agent finds information relevant search goal gets certain amount reward 
reinforcement learning agent learn maximize reward receives learn navigate relevant information 
idea laser rank highly pages serve starting points search agent 
starting points pages easy reach pages relevant information 
conjecture pages relevant query contain relevant information just link number relevant documents 
hyperlinks incorporated follows 
query retrieval status values rsv calculated page collection independently html specific tfidf parameters described 
reinforcement learning terms values represent immediate reward associated page 
laser propagates rewards back hypertext graph discounting step value iteration bellman rsv rsv fl links rsv fl discount factor controls influence neighboring pages links set pages referenced hyperlinks page update formula applied repeatedly document subset collection 
subset consists documents rsv includes documents link 
convergence practice iterations pages hyperlinks away document contribution proportional fl times retrieval status value retrieval status value parameters laser influence behavior mechanism fl controls normalization denominator formula range 
altogether retrieval status function parameters score assigned document context query computed rsv detailed appendix 
automatic optimization numerical parameters laser retrieval function allow wide variety search engine behavior plain tfidf complex ranking schemes 
qualitatively different retrieval functions produce markedly different rankings see table 
goal analyze system usage patterns quantify differences automatically optimize parameter settings 
measuring search engine performance order keep system interface easy design decision require users give explicit feedback search hits bad 
simply record hits people follow user searched vegetarian restaurant clicked restaurant reviews eating indian pittsburgh 
user gets see detailed hit see believe hits clicked user highly relevant 
retrieval function obey probability ranking principle van rijsbergen 
means places documents relevant user query near top hit list 
evaluate retrieval function performance single query simply take mean ranking documents user followed 
example scores shown table 
define performance retrieval function average performance queries database 
standard tfidf html structure hand tuned parameters 
vegetarian recipes 
restaurant reviews 
vegetarian recipes 
eating indian pittsburgh 
eating indian pittsburgh 
list food cooking sites 
restaurant reviews 
duane home page gay lists 
greek dishes 
eating shopping green pittsburgh 
focus vegetarian 
living indian pittsburgh 
professional cook 
professional cook score score simple count query terms html structure automatically learned params 
collection thai recipes 
eating indian pittsburgh 
food stores online 
restaurant reviews 
list food cooking sites 
list food cooking sites 
cookbook year 
vegetarian recipes 
collection 
professional cook 
eating indian pittsburgh 
eating shopping green pittsburgh 

restaurant reviews 
vegetarian recipes score score table rankings produced different retrieval functions response query vegetarian restaurant 
supposing user clicked eating indian pittsburgh restaurant reviews pages retrieval functions scored shown 
symbols perf jqj jqj jd jd rank ij jqj queries database set documents user followed posing query input performance method clearly noisier biased methods precision recall van rijsbergen employ exhaustive relevance feedback information assigned manually experts 
practice user choice hits follow strongly biased documents appearing early hit list regardless quality retrieval function 
users rarely patience scroll pages pages hits 
evaluating performances new retrieval functions collected database attempt equalize presentation biases 
evaluating perf subsample query database constructed contain equal number queries different presentation bias alternatively weight query give equal total weight presentation bias 
optimization method parametrization space retrieval functions metric evaluating retrieval function performance pose problem finding best retrieval function problem function optimization find parameter vector minimizing perf 
calculation perf averages discrete rankings expect quite discontinuous probably local minima 
chose apply global optimization algorithm simulated annealing 
particular applied modified downhill simplex variant simulated annealing described press 
calculate perf fixed subsample queries aggressive minimization introduces danger overfitting converged parameter vector may exploit particular subsample expense generalization space 
guard overfitting early stopping holdout set frequently done neural network optimization morgan bourlard follows 
consider sequence parameter vectors best far simulated annealing run 
produce monotonically decreasing learning curve see example 

evaluate performance vectors separate holdout set queries 
smooth holdout set performance curve pick presentation count tfidf hand tuned count sigma sigma sigma tfidf sigma sigma sigma hand tuned sigma sigma sigma performance sigma sigma sigma table performance comparison retrieval functions march 
lower numbers indicate better performance 
rows correspond indexing method laser query time columns hold values subsequent evaluation methods 
figures reported means sigma standard errors confidence intervals 
minimum parameter setting chosen final answer optimization run 
evaluation perf new set parameters quite expensive involves call search engine query evaluations sped subsampled randomly call perf adds noise evaluation 
investigating stochastic optimization techniques designed optimization just type noisy expensive objective function moore schneider 
empirical results laser operation february 
system currently indexes document database consisting pages served cmu computer science department web server www cs cmu edu 
system available cmu community department local home page www cs cmu edu web scs home html 
considering plans larger indexes wider release 
validity performance measure ran experiment determine performance function really measure significant differences search engines user feedback 
manually constructed retrieval functions simple count scores document counting number query terms appear standard tfidf captures word relevance better take advantage html structure hand tuned includes manually chosen values parameters html specific retrieval function 
february march operated laser mode randomly select retrieval functions query 
time laser answered total user queries including queries designers 
half queries user followed suggested documents 
evaluated perf engine equation 
results shown bottom row table indicate performance metric distinguish ranking functions significantly better tfidf turn significantly better simple count 
rows table break performance measurement retrieval function generated original ranking seen user 
presentation bias clear diagonal entries far smallest 
note diagonal entries significantly different quantity data collected point 
see significant differences average columns produce full performance measurements row 
ranking methods scores produces expected order 
take evidence performance measure captures extent goodness retrieval function serve reasonable objective function optimization 
optimization results date time run optimization experiment results section considered preliminary 
goal minimize perf producing new better ranking function 
efficiency evaluating perf fixed subsample queries full query database presentation bias 
search space tractable optimized dimensional projection full dimensional parameter space 
parameters allowed evaluations simulated annealing best far points holdout set optimization search engine performance simulated annealing 
perf plotted different parameter settings explored 
evaluations separate holdout set prevent overfitting 
tuning heuristics title heading query word adjacency bonus partial match penalty document length penalty near top page bonus fl hypertext discount factor 
described ran simulated annealing find new optimal set retrieval function parameters 
simulated annealing parameters set follows temperature evaluation delta initial stepsize legal range dimension 
run converged evaluations perf see 
technique chose parameter setting evaluation final answer 
compared hand tuned parameter setting learned parameter setting gave weight title words underlined anchor text words near document 
surprisingly set fl graph propagation discount factor 
installing new retrieval function search engine interface produced qualitatively rankings refer back table 
march may laser generated rankings new retrieval function half time hand tuned retrieval function half time 
cumulative results shown table 
performance metric hand tuned learned retrieval functions significantly outperform count tfidf differ significantly 
diagonal entries reflect actual system provide indication learned function improvement confidence learned retrieval function value sigma better hand tuned function value sigma 
trend continues satisfied successfully learned new better ranking scheme 
related retrieval engines developed index world wide web pages 
descriptions mauldin pinkerton 
retrieval engines internal structure documents incorporate hyperlinks 
researchers focused retrieval hypertext structure making internal structure documents savoy croft turtle 
automatic parameter optimization previously proposed fuhr bartell cottrell belew 
approaches differ laser real relevance feedback data 
laser require relevance feedback assignment user uses noisy data presentation count tfidf hand tuned learned count sigma sigma sigma sigma tfidf sigma sigma sigma sigma hand tuned sigma sigma sigma sigma learned sigma sigma sigma sigma performance sigma sigma sigma sigma table cumulative performance comparison retrieval functions may 
data reported format table 
collected observing users actions 
initial results laser promising 
shown feedback provide sufficient information evaluate optimize performance retrieval function 
performance metric index takes advantage html structure outperforms traditional flat index 
furthermore begun collect results demonstrating possible automatically improve retrieval function learning user actions recourse intrusive methods relevance feedback 
directions research see falling general areas retrieval function parametrization laser currently offers tunable parameters combining heuristics retrieval function certainly heuristics possible 
example refine method incorporating hyperlinks 
planning include document popularity statistics gathered regular laser usage relevance function 
document skipped laser users system learn punish document rankings 
evaluation metrics performance function appealing simplicity agrees qualitative judgments search engines table defend theoretical grounds 
metric derived directly probabilistic ranking principle van rijsbergen example allow stronger claims optimization procedure 
alternative implement cost function rankings cost increases number irrelevant links user explicitly skipped high ranking 
clear useful metric decide alternatives 
related issue documented pronounced tendency users select links high rankings matter poor index resulting presentation bias 
complicates problem evaluating new retrieval functions offline optimization query database strongly bias retrieval parameters original presentation 
ad hoc method compensating effect interested principled approaches 
optimization mentioned section plan investigate stochastic optimization techniques place simulated annealing optimizing parameter settings 
interesting possibility lifetime learning 
see system improves time iteratively replacing index new improved learned user data 
speculate trajectory system take 
possibility interesting kind feedback system users system changes indexing behavior users system change model differently 
globally optimal parameter setting laser 
may presentation bias possibility drifting patterns parameters settle stable state 
acknowledgments tom mitchell andrew moore computational cognitive resources shared experiments 
darrell counseling indexing local web 
michael mauldin author scout retrieval engine basis 
appendix parametric form retrieval function rsv gamma links rsv nu rsv delta jqj jdj delta jqj delta jdj exp delta adjacency gamma gamma query pos exp delta idf delta delta factor delta factor idf delta headline delta factor headline delta factor headline delta factor title delta title factor bold delta bold factor italics delta italics factor blink delta blink factor anchor delta anchor factor factor log add adjacency gamma gamma gamma gamma gamma gamma delta adjacency factor number words occur exp bartell cottrell belew 
optimizing parameters ranked retrieval system multi query relevance feedback 
proceedings symposium document analysis information retrieval sdair 
barto bradtke singh 
learning act real time dynamic programming 
artificial intelligence 
bellman 
dynamic programming 
princeton university press 
croft turtle 
retrieval strategies hypertext 
information processing management 
fuhr pfeifer buckley 
probabilistic learning approaches indexing retrieval trec collection 
second text retrieval conference trec 
national institute standards technology 
mauldin 
web agent related research center machine translation 
proceedings acm special interest group networked information discovery retrieval 
moore schneider 
memory stochastic optimization 
touretzky mozer hasselmo eds neural information processing systems 
mit press 
morgan bourlard 
generalization parameter estimation feedforward nets experiments 
ed neural information processing systems 
morgan kaufmann 
pinkerton 
finding people want experiences webcrawler 
second international www conference 
press teukolsky vetterling flannery 
numerical recipes art scientific computing 
cambridge university press second edition 
salton 
developments automatic text retrieval 
science 
savoy 
spreading activation hypertext systems 
technical report universit de montr eal 
van rijsbergen 
information retrieval 
london butterworths second edition 

