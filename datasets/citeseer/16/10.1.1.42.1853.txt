general semantics evaluation logic eugenio moggi moggi disi unige disi univ genova le benedetto xv genova italy semantics evaluation logic proposed relies additional properties monads :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
proposes alternative semantics drops additional requirement monads expense stronger assumptions underlying category 
assumptions satis ed topos category cpos 
setting synthetic domain theory see possible reconcile needs denotational semantics logic 
evaluation logic el typed predicate logic originally proposed metalanguage ml computational monads see permits statements evaluation programs values evaluation modalities necessity possibility :10.1.1.42.1853:10.1.1.41.840
particular el axiomatizing computation related properties monad devising computationally adequate theories see appears useful addressing question logical principles reasoning behavior programs :10.1.1.42.1853
el provides framework presenting programming languages program logics analogy lcf see additional abstraction mechanism computational types 
adopts general notion model el indexed posets interpretation evaluation modalities canonical determined underlying monad :10.1.1.42.1853
way supported esprit bra categorical logic computer science ii ec science ct progr 
lang 
semantics program logics 
modalities interpreted case case basis 
overcome problem proposes canonical semantics necessity assumption monad satis es additional properties :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
unfortunately properties satis ed monads denotational semantics 
proposes canonical semantics necessity assumptions monad bered requires underlying category nite limits stable proper factorization system 
requirement issue toposes regular categories satis ed category cpos 
possible reconcile needs denotational semantics interpreting el fact synthetic domain theory sdt provides models consisting logical universe usually topos full re ective sub category category cpos purposes denotational semantics 
monad interpreting programming language el may extended re ection interpreting el typed predicate logic suciently expressive allows formation subtypes equality existential quanti cation necessity de nable axioms may proved sound formally referring categorical semantics 
rest organized follows section gives syntax el exempli es new semantics section discusses limitations semantics proposed section presents new semantics full generality gives examples section explains setting sdt possible de ne interpretation el starting interpretation programming language section relates new semantics previous section shows necessity de nable terms subset types existential quanti cation equality gives sound axioms necessity :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
syntax informal semantics el conservative extension typed predicate logic equality 
ml term language el ml conservative extension typed equational logic 
typed predicate logic may take logics order logic fol higher order logic hol lcf 
may consider predicate logic dependent types 
fact need consider logic able express modalities el key features ml el syntactic categories el types terms formulas rst order logic dependent types 
write type formed type context 
types closed formation rule type type called computational type terms type thought programs return values type context sequence xn distinct variables formed types 
write formed term type context 
terms closed formation rules lift intuitively program simply returns value rst evaluates binds result evaluates write prop formed formula context 
formulas closed formation rules necessity prop prop possibility prop hx ei prop evaluation prop intuitively formula means possible result program satis es hx ei means possible result program satis es means possible result program write entails 
formation rule unclear type assigned side condition free variables 
set theoretic semantics el section specialize categorical semantics el category set sets 
set topos take typed predicate calculus hol dependent types context interpreted set set type type interpreted indexed family hx ji ii sets term interpreted indexed family hx ji ii elements formula prop interpreted subset extend interpretation hol dependent types ml need bered monad set bered 
set bered monads correspond ordinary monads monad induces bered monad hx ji ii ht ji ii bered monad obtained way 
monad set interpretation extended ml follows compare type hx ji ii type ji ii hx ji ii tx ji ii hc tx ji ii hf ty ji hf ty ji ii tf tx ty ty hol de ne evaluation predicate possibility terms necessity see hx ei type truth values :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853:10.1.1.41.840
classical logic possibility simply 
fol ml subset types necessity de nable follow see theorem fx ic fx inclusion fx ic stands term 
example examples monad set give ta meaning hx cip predicate exceptions ta set exceptions hx cip non determinism ta fin modalities de ned exceptions side ects ta fin set states ha cs modalities de ned exceptions resumptions ta fin set nite trees leaves labeled elements leaf labeled modalities de ned exceptions continuations ta set results kx ck ck ck ck agree fx jp hx cip exist may di er fx jp ck ck hx ci exist di ering ck ck counter examples semantics necessity el dependent types relies additional properties strong monads :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
category nite products interpreting types terms class monos stable pullback interpreting formulas strong endofunctor interpreting computational types preserves monos implies tm interpretation necessity prop prop subobject corresponding mono inverse image assumption needed show interpretation commutes substitution variables see :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
category nite limits obvious choices class monos class regular monos equalizers parallel pairs closed composition 
rst choice maximal second minimal interpreting equality predicates topos choices coincide 
category cpo cpos posets lubs chains regular monos correspond inductive subsets subsets cpo closed lubs chains 
example set monad endofunctor preserves monos monads considered example interpretations necessity agree see theorem 
strong monads cpo denotational semantics satisfy additional properties requested class inductive subsets :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
important counterexamples continuations tx cpo classi es scott open subsets plotkin powerdomain tx free binary semi lattice tx poset elements counter example category posets 
denotational semantics tx element 
counter examples monads dynamic allocation category parametric functors see complex described :10.1.1.42.1853
proposition cpo regular mono tm monic monad continuations plotkin powerdomain 
proof 
cpo lazy natural numbers elements 
order generated mono corresponds inductive subset maximal elements fs jn ng 
described equalizer identity 
consider case tx rst 
isomorphic lattice open subsets elements tx may thought open subsets open subsets cpo subset open 
fu mj ug ff gg distinct elements tm tm maps element tx fv fact open subset prove tm monic tx explicit description plotkin powerdomain available 
skip details 
new semantics el section consider semantics necessity modality el di erent assumptions brie recall necessary background brations factorization systems refer details :10.1.1.42.1853
de nition fibrations say cartesian pz py pg pf exists unique ph bration px exists cartesian pf fibrations form category ib bered functors cells vertical natural transformations cells brations bered functor takes cartesian maps cartesian maps bered functors vertical natural transformation id pc notation brations bered functors vertical natural transformation write ber sub category pf id functor ff natural transformation ib category bered monads bered adjunctions de ned categorical way 
category nite limits cod bration called bered ber denoted class monos stable pullback induces bration ber poset subobjects represented monos interpreting predicate calculus dependent types context interpreted object type type interpreted object interpreted term interpreted section id equivalently element formula prop interpreted subobject 
subtle problems de ning interpretation due lack canonical choices 
simple way replace bration cod category attributes discrete split bration cartesian natural transformation see interpreted object type interpreted object interpreted interpreted section px canonical choices needed interpreting subset types fx sake presentation ignore canonical choices far possible :10.1.1.42.1853
examples consider admit simple canonical choices 
de nition factorization systems category pullbacks say class morphisms stable implies factorization system classes morphisms containing isos closed composition morphism exist factorization unique isomorphism 
called stable stable proper epi mono 
notation morphism proper factorization write subobject 
factorization system class stable 
recovered conversely 
class monos identi es stable proper factorization system 
new semantics el dependent types relies assumptions category nite limits stable proper factorization system bered endofunctor cod interpretation computational types necessity type type prop prop show interpretation commutes substitution variables assumptions stronger :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
bered endofunctor cod induces strong endofunctor may preserve monos example set stable proper factorization system class epis class monos 
fact true topos 
ber set equivalent category set indexed families sets 
endofunctors cod set set correspond endofunctors set 
fact endofunctor set induces bered endofunctor hx ji ii ji ii 
example set pair set see :10.1.1.42.1853
morphism function mk 
mk called realizer ek short 
category set sets canonical stable proper factorization systems class epis class regular monos class regular epis class monos 
fact true quasi topos see 
ber set equivalent sub category set morphisms realizable families hf ji ii realizable mk 
mk endofunctors cod set set correspond realizable endofunctors set realizable exists 
nk tf nk see 
bered endofunctor corresponding realizable endofunctor set de ned analogy set 
cpo proper factorization system class epis class regular monos 
stable 
synthetic domain theory setting proposed semantics el drastically odds classical domain theory 
anyway looking expressive logic including fol forced leave category cpos fragment fol may interpreted cpo 
fortunately may reconcile needs denotational semantics expressive logic moving sdt setting see 
de nition brations say full re ective sub bration full faithful bered functor bered left adjoint purposes main result sdt quasi toposes generally categories stable proper factorization system full re ective sub bration cod desiderata denotational semantics particular objects look indexed families cpos 
left show semantics programming language pl ber construct bered monad cod interpret el 
usually semantics pl translation typed metalanguage ml denotational semantics intended interpretation reasonable category denotational semantics particular monadic approach see translation pl ml factor metalanguage ml computational monads :10.1.1.42.1853:10.1.1.41.840
monad expressible ml 
reasonable assumptions ml syntactic description monad ml induces bered monad bered monad extends bered adjunction bered monad bration cod 
argued possible satisfy assumptions new semantics el starts semantics pl translation metalanguage denotational semantics 
literature ways constructing category complete extensional pers category complete spaces category replete objects see :10.1.1.42.1853
example show category exp complete extensional pers turned full re ective sub bration set bered 
consider small category partial equivalence relations pers full re ective subcategory exp complete extensional pers de ned 
exp turned internal categories set full internal subcategories set 
re ection de ned internal relevant functors natural transformations realizable provides necessary information prove 
exp full re ective sub category category cat set internal categories set 
externalization functor cat set category brations set turns split bration set exp full re ective sub bration 
full re ective sub bration set bered see exp result improved replacing set ective topos eff full re ective sub bration eff bered 
relation previous semantics section give sucient conditions ensure new semantics necessity agrees proposed :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
rst need auxiliary results 
proposition category nite limits nite limits stable class monos induces stable class monos proposition category nite limits bered endofunctor cod tensorial strength proof objects tensorial strength id product isomorphic ber bered endofunctor cod induced strong endofunctor corresponding theorem assumptions required new semantics necessity satis ed functor preserves pullbacks monos semantics necessity de ned agrees new semantics :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
de nability sound axioms section give axioms necessity sound new semantics 
axioms subset considered :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
simplest way validate express necessity terms standard logical constants familiar rules satis ed logical constants 
proposition nite limits stable class monos interpret subset types fjg prop fx type fx prop fx proof type prop interpreted 
respectively interpretation fx type interpretation fx interpreted id interpretation fx unique interpreted id id 
term constructors play role explicit coercions convenient leave implicit 
correct interpretation subset types relies canonical choices representative subobject 
precisely need category attributes see units sums see bered embedding jmj :10.1.1.42.1853
intuitively maps interpretation interpretation subset unit type 
examples sets sets easy de ne 
proposition nite limits stable proper factorization system interpret equality existential quanti cation type prop prop prop proof type type interpretation interpretation equality categorical logic diagonal 

need show 

regular mono equalizer projections id hj id au regular mono precisely equalizer 
factorization factors factors equalizes epi 
interpretation existential quanti cation left adjoint satisfy beck chevalley 
easy show beck chevalley condition holds factorization system stable 
theorem assumptions required interpreting necessity new semantics satis ed prop fx ic ic stands term 
proof type prop 
fx type prop fx id hj au 
fx ic prop id hj au 

fx ic prop prove de nition see proposition de nition characterization necessity quite easy derive rules necessity existential quanti cation equality predicate subset computational types 
corollary rules sound new semantics el type prop stand term prop proof example derive rule 
restrict case applying bi rule fx unit type 
derive stand fx simplicity assume rules assumption stand rules equational rules computational types commutativity necessity conjunction fails new semantics 
don know model satisfy 
program logics tide speci programming languages look ad hoc standard logical axioms may unsound 
state affairs satisfactory time consuming logicians get acquainted new logics develop proof strategies 
nice standard predicate logic reasoning programs including non functional ones proofs kept simple clever choice language axioms 
synthetic domain theory important contribution ideal situation showing slogan domains sets sense 
show reasonable semantics programming language pl model sdt induces interpretation computational types interpretation el de nable standard predicate logic 
companion see give evidence expressiveness el showing program logic dynamic predicate logic untyped call value functional language introduced simple translation el axioms formally derivable el category theoretic level close relations new semantics el topos theoretic semantics modal logics proposed reyes see :10.1.1.42.1853
kock suggesting indexed monads hyland rosolini streicher taylor discussions sdt related issues jacobs power advice brations comments 
:10.1.1.42.1853
fibred categories foundation naive category theory 
journal symbolic logic 
freyd kelly 
categories continuous functors journal pure applied algebra 
freyd rosolini scott 
extensional pers 
th lics conf 
ieee 
gordon milner wadsworth 
edinburgh lcf mechanized logic computation volume lncs 
springer verlag 
herrlich strecker 
category theory 
verlag 
honsell mason smith talcott 
variable typed logic ects 
information computation appear 
hyland 
steps synthetic domain theory 
carboni rosolini editors conference category theory volume lnm :10.1.1.42.1853
springer verlag 
hyland robinson rosolini 
discrete objects ective topos 
proc 
london math 
soc 
jacobs 
categorical type theory 
phd thesis university nijmegen 
longo moggi :10.1.1.42.1853
constructive natural deduction modest interpretation 
mathematical structures computer science 
moggi :10.1.1.42.1853
category theoretic account program modules 
mathematical structures computer science 
moggi :10.1.1.42.1853:10.1.1.41.840
notions computation monads 
information computation 
moggi :10.1.1.42.1853
representing evaluation logic 
available ftp theory doc ic ac uk theory papers moggi elt dvi 
moggi :10.1.1.42.1853:10.1.1.42.1853:10.1.1.42.1853
semantics evaluation logic 
fundamenta informaticae 
hearn tennent :10.1.1.42.1853
relational parametricity local variables 
th popl 
acm 
phoa :10.1.1.42.1853
ective domains intrinsic structure 
th lics conf 
ieee 
phoa :10.1.1.42.1853
brations topos theory ective topos modest sets 
technical report ecs lfcs edinburgh univ dept comp 
sci 
pitts :10.1.1.42.1853
evaluation logic 
birtwistle editor higher order workshop ban volume workshops computing 
springer verlag 
pitts stark :10.1.1.42.1853
observable properties higher order functions dynamically create local names new 
math 

comp 
sci 
volume lncs 
springer verlag 
reyes 
topos theoretic approaches modalities 
carboni rosolini editors conference category theory volume lnm :10.1.1.42.1853
springer verlag 
rosolini 
exper model quest 
brookes editor mathematical foundations programming semantics lncs 
springer verlag 
scott 
type theoretic alternative cuch iswim 
oxford notes 
taylor 
xed point property synthetic domain theory 
th lics conf 
ieee 

topoi topology 
categorical topology volume lnm 
springer verlag 
