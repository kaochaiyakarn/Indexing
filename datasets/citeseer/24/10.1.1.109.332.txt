technological spaces initial appraisal ivan jean zivin mehmet aksit software engineering group university twente netherlands aksit cs utwente nl faculty sciences university nantes france sciences univ nantes fr 
propose high level view technological spaces ts relations spaces 
technological space working context set associated concepts body knowledge tools required skills possibilities 
associated user community shared know educational support common literature workshop conference regular meetings 
difficult give precise definition tss easily identified xml ts dbms ts syntax ts meta model omg mda ts purpose define theory technological spaces efficiently best possibilities technology 
need basic understanding similarities differences various tss possible operational bridges allow transferring results obtained ts ts 
hope industrial vision may help putting forward idea cooperation competition alternative technologies 
furthermore spectrum available technologies rapidly broadening necessity offer clear guidelines choosing practical solutions engineering problems teachers project leaders 
nowadays software engineers generally cope large variety possible solutions asked solve specific problem 
problem may solved help different technologies different prices different qualities 
give advice particular technology solve problem 
different trade offs technology 
choose set solutions far captive choice ll need evolve maintain solution 
practical questions may ask developing software solution 
order provide guidelines thinking need start talking explicitly characteristics properties technological context show may provide guidance specific context solving particular problem 
employ concept technological space ts central concept analysis comparison 
technological space working context set associated concepts body knowledge tools required skills possibilities 
associated user community shared know educational support common literature workshop conference meetings 
time zone established expertise ongoing research repository concrete resources 
asking priori question possible existence unifying theory technological spaces ask know advantages drawbacks suggest practical utilization strategies 
possible investigation aware conceptual similarity technological spaces 
give flavor undertaken initially consider technological spaces programming languages concrete syntax ontology engineering xml languages data base management systems dbms model driven architecture mda defined omg 
provides global view tss 
shows space defined couple basic concepts program grammar syntax ts document schema xml ts model meta model mda ts ontology top level ontology ontology engineering ts data schema dbms ts 
idea illustrated ts island 
bridges various spaces bridges particular properties 
may bi directional may way bridges 
operations may performed easier space result may imported space 
operation software engineers need compare facility due space limitations examples suggestions included 
expanded version may cs utwente nl doc achieving space compared evaluate export import facilities spaces 
represent bridges tss suggest superiority 
concrete syntaxes dbms program data grammar schema mda model meta model xml document ontology engineering ontology schema dtd top level ontology tss bridges organized follows 
section provides brief insight tss global understanding 
space limitation permit complete coverage technology pointers provided reading 
section presents comparison features various tss 
section deals interoperability bridges different spaces 
section describes related 
section concludes providing suggestions interpret integrate preliminary findings concrete engineering practice 
description tss starting discussion provide short presentation tss referred rest 
mda xml technological spaces mda ts model driven architecture mda approach proposed omg mda software development process populated number different models representing particular view system built 
models written language meta model 
standard meta models available context mda popular uml meta alternative approach manipulation models proposed 
model 
organization accommodated framework called mda level modeling stack 
lowest part called corresponds real world 
models level definition languages meta models create models level 
special language define meta models 
called mof meta object facility qualified meta meta model 
mof self defined constitutes level 
particular objective mda separate models neutral descriptions system pim platform independent models models bound particular technology psm platform specific models 
objective define standard processes obtain psms hopefully kind automatic generation 
xml ts extensible markup language xml framework definition markup languages standardized 
widely accepted standard representation exchange structured semistructured data 
xml document central concept xml ts 
documents written syntax constrained formedness validity constraints 
formedness constraints defined xml grammar rules validity constraints defined separate document called document schema written schema language document type definition dtd xml schema language 
illustrates relations xml document xml grammar document schema defined dtd 
syntax ts ts space longest history rooted days computer engineers started building abstractions native machine language expressing abstractions languages closer problem domain 
solid theoretical foundations context free grammars specification language syntax number formalisms specification language semantics attribute grammars denotational action semantics 
number programming paradigms observed imperative declarative functional logic procedural object oriented programming 
ts organized concepts program written programming language syntax formally specified grammar 
characterizes space goal deal executable programs 
concepts relationships shown programming language pascal example 
ontology ts gruber ontology explicit specification abstraction 
dimension consensual agreement usually normative added definition 
field ontology engineering may considered subfield knowledge engineering 
main dimensions representation reasoning 
importance may find approaches terminological logics conceptual graphs 
languages express ontologies kif knowledge interchange format 
short field may 
illustrated examples tss correspond main area activity expertise computer engineers 
generalist engineer exposure majority fields specialists knowledgeable 
obviously aim give complete list tss 
think example spaces provide sufficient insight purpose 
comparing spaces table summarizes technologies better problems 
table illustration proposed approach 
space limitations discuss part issues table 
table comparison tss xml mda ontologies executability poor poor excellent poor aspects excellent poor fair formalization poor poor excellent fair specialization fair poor fair modularity poor traceability fair poor excellent excellent fair fair fair executability spaces described ts precise executable semantics 
contrast xml ts framework definition standardized syntax 
need form executability identified spaces 
dbms ts uses stored procedures mechanism action semantics uml intended add executable actions procedures models xml dom trees scripted add behaviour response user events 
modularity story computer science shows energy put idea modularity programming languages 
parnas wirth progressively elaborated def ref import export semantics early assembly languages module feature modula oberon birth turn package notion ada java borrowed turn modeling languages uml 
notion called namespace concept namespace central xml technology 
content presentation separation xml community encounter problem separation content presentation 
html language parts mixed 
design xml focused description content languages css xsl fo specialized presentation 
mda problem encountered 
exchanging uml models tools logic diagrams essential information completed presentation information box lines drawn 
uml possible separate logic model presentation 
intentional programming ip goals separation syntax concrete notation allowing multiple representations intention textual visual 
traceability idea traceability important concept 
particular case specification correspondence various contexts 
basic relation conceptual graphs provides general expressions 
notion traceability important mda moving model usually associated design decision transformation 
source element precisely identified process reversed 
maintaining traceability links elements models important engineering challenge 
seen section consider problem inside particular technology corresponds similar problems technologies 
way solve problem 
previous discussion suggests technologies learn may improved inspecting technologies proceeding solve certain problems 
bridging spaces thing discuss various possibilities tss handle real interoperability problems 
section ll deal second part import export results obtained technology different technology 
full coverage bridging spaces include descriptions available techniques tools encountered problems examples 
lack space limit giving examples moving space solve problem essential part solution 
examples bridging spaces business business ecommerce integration problems caused difference xml syntaxes exchanged documents typically solved xslt transformations 
transformations tend complex tasks mixed xslt rules terminology translation syntactical translation xml syntaxes proposed solution reduces complexity splitting tasks different layers 
document schemas dtds abstracted conceptual representation rdf schema 
transformation conceptual representations ontologies note modularity features allowed level programs little effort providing level grammars handling specialization aggregation example 
specified 
xslt transformation automatically obtained 
translation specified new ts ontology engineering 
illustration potential bridging migration programming languages 
approach migrate java applications applications proposed set tools microsoft 
corresponding jump framework java user migration path entirely situated programming language syntax ts 
alternatively possible perform reverse engineering operation java uml model operation followed forward engineering operation generate program operation 
direct operation different combined operation 
worth mention application bridging design various software artifacts design starts space desired result obtained transformation eventually automated space 
typical example design relational schemas er models 
discussion technological spaces classified level abstraction 
semantics expressed ts said higher level abstraction 
mda ontology engineering tss regarded high level spaces xml rdbms tss regarded low level concrete spaces 
distinction manifested characteristics bridging 
operations concrete space involve semantic aspects explicitly represented 
moving suitable space deal semantic issues reduce complexity 
software engineers aware possible loss semantics importing concrete space 
opposite direction observe difficulties induce semantics base source artifact 
important aspect bridging presence multiple alternative transformations space 
compared base certain quality factors adaptability extensibility compactness current transformation techniques notion quality result implicit explicit 
designers selection intuitively methodology 
exploration evaluation set alternatives complex task obstacle finding suitable transformation 
problem identified concrete areas design xml schemas models deriving object oriented designs specifications 
related focus providing higher level comparative view number technologies potential interoperability 
provide details concrete technologies bridging 
subject separate research activities refer reader ongoing research integrating different technologies 
semantic web initiative aims enhancing www semantic information integrating achievements xml ontology engineering fields 
integration uml ontologies studied 
problem storing xml documents raised interest database community 
possible mutual improvements databases ontologies discussed 
interesting report interest ontology ts help integration xml web resources may 
initial investigation field technological spaces 
process performing study discovered facts 
comparing technological spaces see similar problems solved different ways 
abstracting problems interesting productive approach 
consider various tss idea arises notion typing meta level 
entity level definition entity type may immediately upper level 
levels called meta modeling layers mda similar organization fields completely explicit see 
pattern research discovery changed decade 
inventions strict boundary engineering field operating systems compilers data bases 
look happening innovation starts boundary different engineering fields 
example xml known took birth network application hypermedia document processing recognized specific zone research expertise 
synergy different fields main innovation factor 
unfortunately research mainly located historical fields transversal results frequent 
amann beeri scholl ontology integration xml web resources proceedings intl 
semantic web conference iswc 
berners lee hendler lassila 
semantic web scientific american may 
bernstein levy pottinger vision management complex models technical report msr tr available ftp ftp research microsoft com pub tr tr pdf bird goodchild halpin 

object role modeling xml schema 
int 
conf 
conceptual modeling er salt lake city ut uml semantic web proc 
international semantic web working symposium palo alto 
available www semanticweb org swws program full pdf uml ontology modeling language proc 
workshop intelligent information integration th int 
joint conference ai ijcai 
germany 
uml knowledge representation omg second workshop uml enterprise applications december embley mok developing xml documents guaranteed properties 
th int 
conf 
conceptual modeling er yokohama japan fensel ontologies silver bullet knowledge management electronic commerce springer august 
florescu kossmann storing querying xml data rdbms 
ieee data eng 
bulletin guarino welty methodology ontology model engineering 
zivin ernst eds international workshop model engineering nice france june 
meersman ontologies learn database semantics 
dagstuhl semantics web workshop march meersman ontologies databases resemblance 
rome oes seo workshop september melnik decker layered approach information modeling interoperability web proceedings workshop semantic web th european conference research advanced technology digital libraries lisbon portugal september melnik representing uml rdf 
available www db stanford edu melnik rdf uml fensel layered integration approach product information ecommerce 
eds electronic commerce web technologies proceedings nd int 
conference electronic commerce web technologies germany omg mof meta object facility mof specification 
omg document ad september 
omg uml unified modeling language specification 
omg document ad september 
zivin levels model transformation xml europe conference paris france june shanmugasundaram tufte zhang dewitt naughton relational databases querying xml documents limitations opportunities 
vldb edinburgh scotland programming innovation legacy age 
position ifip wg meeting june omg staff model driven architecture 
omg document 
november 
sowa knowledge representation logical philosophical computational foundations 
cole thomson learning 
synthesis software architecture design phd thesis dept computer science university twente 

extensible markup language xml february 
available www org 
