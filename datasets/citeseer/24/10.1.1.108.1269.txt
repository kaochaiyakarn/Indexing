realistic animation liquids nick foster dimitri metaxas center human modeling simulation university pennsylvania philadelphia pa june comprehensive methodology realistically animating liquid phenomena 
approach unifies existing computer graphics techniques simulating fluids extends incorporating complex behavior 
navier stokes equations couple momentum mass conservation completely describe fluid motion 
starting point environment containing arbitrary distribution fluid submerged semi submerged obstacles 
velocity pressure defined environment updated set finite difference expressions 
resulting vector scalar fields drive height field equation representing liquid surface 
nature coupling obstacles environment free variables allows simulation wide range effects possible previous computer graphics fluid models 
wave effects reflection refraction diffraction rotational effects eddies vorticity natural consequence solving system 
addition lagrange equations motion place dynamic objects scene track position spray foam animation process 
typical disadvantages dynamic simulations poor scalability lack control addressed assuming stationary obstacles align grid cells finite difference discretization appending terms navier stokes equations include forcing functions 
free surfaces system represented collection massless particles height field suitable water rendering algorithms researchers years 
additional keywords phrases dynamic fluid simulations free surface flow navier stokes equations physics modeling 
animations years generated modeling interaction light water 
effects shading reflection refraction internal scattering addressed detail realistic results 
characteristic motion water surface approximated non physics function 
suggested methods included parametric functions sinusoidal phase functions 
exceptions papers kass miller chen lobo 
kass miller fast approximation dimensional shallow water equations simulate surface waves water varying depth 
model allows reflection refraction waves takes account mass transport address full range dimensional motion liquid 
motion includes rotational pressure effects responsible fluid characteristic behavior 
easily incorporate dynamic objects effects model velocity fluid known surface internal pressure calculated 
chen lobo go physics fluid methodology solving simplified form navier stokes equations dimensions 
assume fluid zero depth calculate elevation surface solely instantaneous pressure 
allows perform interaction moving objects flow field restricts class problems solved method 
notably obstacle geometry dimensional surface height varied animation treat fluid completely flat calculation 
wave effects mass transport submerged obstacles covered technique 
comprehensive models fluid motion exist variety tools solving field computational fluid dynamics cfd 
methods generally involve direct simulation techniques get accurate fluid motion 
unfortunately direct simulation technique temporal resolution strongly coupled spatial resolution 
spatial resolution doubles temporal resolution doubled solution move spatial sample time step 
gives running times proportional fourth power resolution techniques scale poorly 
furthermore animator needs fairly clear understanding system equations solved set initial boundary conditions get desired results 
ideal fluid simulator graphics applications apply correct conditions automatically underlying geometry 
cfd methods resist external control making difficult force particular motion fluid natural consequence system 
restrictions inherent part fluid modeling problem 
question arises possible accurately model realistic fluid motion keeping acceptable efficiency bounds computer graphics 
solution navier stokes equations modeling liquid motion satisfies animator needs 
realism provided finite difference approximation incompressible navier stokes equations 
gives rise complete pressure velocity profile simulated environment 
profile determine behavior free surfaces loosely coupled lagrange equations motion include rigid objects scene 
range behaviors accounted include wave effects refraction reflection diffraction rotational motion eddies vorticity 
furthermore velocity pressure strongly coupled model 
means simplest animation exhibits subtle realistic behavior available previous computer graphics fluid models 
usability strong motivation 
navier stokes equations solved coarse rectangular mesh containing arbitrary distribution submerged semi submerged obstacles 
boundary conditions mesh generated automatically constraining free variables obstacle fluid air fluid boundary 
low resolution calculation homogeneous boundary conditions leads relatively efficient determination fluid velocity internal pressure 
detail achieved velocity field concentrate attention regions interest fluid surface 
surface represented chain massless marker particles height field 
markers carried mesh convection arbitrary connectivity accounting multiple colliding surfaces scene 
consideration controlling behavior fluid 
liquid sources sinks known inflow outflow boundaries included environment 
allow liquid flow forced scene flow natural rate 
time dependent pressure field may applied fluid surface 
effects strong wind simulated initial waves driven realistically 
output system polygonal surface height field rendered techniques researchers years 
organised follows describing navier stokes equations accurately determine motion viscous liquid dimensions 
show equations solved give complete pressure velocity profile flow care taken discretization scene done efficiently automatically arbitrary environment 
section focuses attention liquid free surface 
dynamic position multiple surfaces delineated restriction convection massless particles 
special common case flow derive height field equation couples velocity surface elevation navier stokes equations generate mesh suitable spline rendering 
method loosely coupling lagrange equations motion flow pressure profile described section 
method include rigid objects scene 
complete algorithm technique section 
section methods controlling fluid motion constraining velocity pressure boundary conditions 
examples simulate different speeds flow wind driven waves 
concluded description example animations system discussion procedure followed case 
navier stokes equations motion fluid point flow completely described set non linear equations known momentum navier stokes equations 
dimensions incompressible fluid water equations written vu wu uv wv uw vw gx gy gz velocities directions respectively local pressure gravity kinematic viscosity fluid 
may daunting sight equations humble origins 
derived newton second law states momentum conserved 
navier stokes equations simply account momentum exchange possibilities fluid 
specifically terms left hand side equations account changes velocity due local fluid acceleration convection 
right hand terms take account acceleration due force gravity body force acceleration due local pressure gradient rp drag due kinematic viscosity thickness fluid 
appropriate boundary conditions constraint momentum mass conserved see section navier stokes equations accurately simulate fluid phenomena 
solving navier stokes equations despite complexity system differential equations possible solve intuitive way standard analysis tools 
step discretize equations environment want model 
number ways important keep things mind typical graphics application involving liquids numerous boundaries liquid objects liquid surrounding medium 
computation cost minimized interfaces homogeneously incorporated model treated special cases 
generality 
users system need able specify environment geometry quickly referring underlying equations correct boundary conditions 
possible apply external control system animator accurately specify liquid behave 
range motion animated technique include set effects available existing computer graphics methods extend adding new interesting useful behavior 
thought discretization provides solution constraints provides solutions 
sections numerical solution navier stokes equations 
technique combines low resolution calculation determine velocity pressure fields liquid height field equation precisely track position free surface 
times computation boundary conditions due solid obstacles fluid surface homogeneous application transparent user 
discretization solve entire environment 
solid obstacles atmosphere treated fluid special properties remain constrained calculation 
computation domain divided fixed rectangular grid aligned cartesian coordinate system 
andw velocities defined centers face cell referenced locally see pressure defined center cell 
note vi vi start calculation contents cell determined 
cell may contain solid dy dz dx location staggered velocity components typical cell obstacle full fluid surface cell boundary liquid surrounding medium empty 
cases velocity pressure fields defined 
discretization leads explicit finite difference approximation form tf uv uv uw uw velocity component cell system equations complex solution process straightforward 
choosing explicit formulation tradeoff ease implementation maximum stable timestep numerical integration 
approximating environment relatively coarse grid see section condition max satisfied solution stable met timestep sufficiently large animate motion efficiently see section 
move solution forward velocities pressures previous iteration taken directly individual cells plugged give new velocities current iteration 
cases velocities required lie cell faces case averaged nearest available values square quantity square average new velocities labeled tilde direct application ensure physical correctness 
due rectangular discretization environment individual cell may explicitly satisfy criteria mass conserved fluid incompressible 
new pressure field needs determined 
constraints satisfied simultaneously solving mass conservation continuity equation essentially says net fluid flow cell zero 
consider cell divergence fluid cell missing mass notice finite difference approximation continuity equation 
positive represents influx fluid real world correspond increase cell pressure subsequent increase fluid outflow cell 
similarly negative lowers internal pressure increases inflow neighboring cells 
change cell pressure scaled divergence cell face cell velocities adjusted change pressure cell satisfy 
change pressure cell relaxation coefficient range 
cell face velocities updated cell pressure updated equations satisfies single cell neighboring cells may non zero divergence 
order mesh simultaneously satisfy pressure velocities adjusted cell grid 
procedure repeated cells flow field divergence prescribed small examples shown converged sweeps average 
convergence achieved fluid considered locally incompressible velocity pressure fields complete object inclusion start cycle 
boundary conditions boundary conditions model set automatically contents cell mesh determined 
homogeneous 
means set navier stokes equations applied blindly determining exactly surfaces obstacles lie 
cheap computation boundary conditions need checked iteration velocity component calculation cell 
boundary interface fluid solid obstacle fluid atmosphere point fluid flows system 
cases generalizing assumptions shape static obstacles position free surfaces greatly reduce amount compromising accuracy realism 
setting boundary conditions free surface obstacle boundaries 
stationary obstacles consider shows obstacle free surface 
assume walls obstacle incident face computational cell 
trivial process set correct solid obstacle boundary conditions velocity pressure finite difference expressions 
example component fluid velocity normal face non obstacle zero 
obstacle cell faces coincident normal velocities set directly 
case non slip obstacle exerts drag fluid tangential velocity boundary zero 
set indirectly making tangential cell face velocity inside boundary cell equal opposite outside fluid 
pressure boundary cell needed finite difference calculation set equal pressure adjacent fluid cell preventing acceleration boundary 
useful type obstacle free slip boundary 
treatment pressure velocity non slip boundary inner tangential velocity set equal outside fluid 
free slip boundary thought plane symmetry motion tangential provides convenient way bound flow field 
inflow outflow fluid easily flow system virtue inflow outflow boundary cells 
inflow required input velocity set cell faces held fixed calculation 
case outflow boundary velocities initially set equal tentative velocity field adjacent fluid examples shown bounded layer free slip boundary cells sides scene open effect flow 
cells allowed relax constraint pressure iteration step 
ensures fluid flow freely system causing upstream artifacts 
free surface boundary conditions need set free surface 
applied surface cell velocities pressures needed adjacent empty cells 
assume applications wavelength disturbance longer inches forces due surface tension negligible 
relax constraint need know exactly cell surface lies 
part free surface passes cell cell labeled surface cell equation continuity set boundary velocities 
consider dimensional surface cell surrounded sides cells containing fluid 
velocity remaining surface side set divergence fluid cell zero 
referring cell sides face empty cell require vanish separately open side velocity equals velocity side cell opposite 
satisfies 
case sides open side opposite fluid carries velocity side remaining sides follow freely effects body force change 
dimensional surface cell velocity components set analogous fashion leading distinct empty fluid configurations 
pressure surface cell set applied atmospheric pressure forcing pressure function see section 
tracking fluid position described method solving full navier stokes equations finite difference mesh 
mesh want generate smooth accurate representation actual fluid surface position 
want track motion surface time adjust contents mesh accordingly full surface 
avoid aliasing resolution surface restricted coarse resolution mesh 
goals mind methods surface identification developed useful particular class liquid phenomena 
area weighting interpolation scheme determining local fluid velocity marker marker particles simplest functional way track fluid position massless marker particles local fluid velocity 
way particles continuously introduced inflow boundaries removed cross outflow boundary splash flow freely 
particle new position area weighting interpolation nearest cell velocities see multiplying resultant velocity current timestep 
finite difference mesh labeled follows cell containing particles empty 
cell containing particle adjacent empty cell surface cell 
cell containing particle surface cell full cell 
marker particles highlight full range internal fluid motion rotation greater resolution finite difference mesh 
important note particles represent mass fluid 
define position surface effect calculation 
frames dimensional animations marker particles shown 
shows initial pulse water struck sides concrete tank projected air 
jet eventually crashes back growing pool 
marker particles ideal animating violent phenomena waves define position fluid exactly regardless complex surface 
discussed detail section 
frames dimensional animations making marker particles 
jet water concrete tank 
drop water shallow pool 
region growing identify cell contents free surface particles 
initial state showing surface cells 
growing empty cells 
final state growing full cells 
free surface particles marker particles precisely delineate free surfaces scene 
appearing cell containing fluid grid markers placed boundaries fluid obstacles air 
grid local velocity 
number distribution connectivity particles allowed change dynamically position surface changes 
rules removing adding particles simple 
particles close delete connect neighbors 
particles far apart insert new particle link 
ensures surface remains continuous colliding surfaces smoothly connected 
dimensions method particularly useful fast easily account multiple surfaces 
cell configuration cycle determined region growing algorithm 
firstly cells contain surface marker set full cells flagged unknown see 
empty region grown cell mesh usually corner origin known empty particles times computation 
growing advances starting cell connected search 
way unknown cells adjacent existing empty cell set empty 
adjacent empty unknown pairs second region grown setting unknown cells adjacent full cell full 
process repeated alternating empty full regions growing boundary full cell hit 
cells contain original surface markers set surface 
height field liquid real world surface single valued 
examples rivers ocean long waves 
cases position surface calculated marker particles longer need track complex geometry caused 
define surface height axis center vertical column cells dimensional mesh 
change local surface elevation timestep determined local fluid velocity vertical component fluid motion plus horizontal convection surface elevation adjacent cell columns surface height 
equation approximated finite difference expression tf wt ht ht ut vt expression update position height field velocity pressure fields calculated 
important note despite superficial similarities method kass height field equation different 
surface elevation driven underlying fluid velocity 
velocity pressure disturbances fluid volume affect surface see examples 
cell configuration height field approach trivial 
cells crossed height field surface cells empty full 
dramatic effects crashing waves height field combined marker particles 
vertical velocity surface greater positive threshold set particles introduced just surface local fluid velocity set initial velocity 
particles removed navier stokes calculation affected gravity wind air resistance 
realism small probability airborne particles separate time giving appearance spray 
foam introduced spray collides height field 
foam random life span proportional size parent spray particle 
interesting discussion topics related particle systems fluid animation 
rigid dynamic objects included scene velocities pressures calculated navier stokes equations 
specifically assume rigid object discretized consists set nodes ni 
model surface node ni fluid force acting node calculated formula ni rp ig dvi volume associated submerged node object rpi gradient vector pressure 
component rpi computed discrete form rpi xj pni pni xj xj ni pressure cell containing andp ni xj pressure previous cell direction 
gravitational acceleration mi nodal mass assuming lumped masses 
total force object due fluid motion gravity discrete form ff fni total force acting node compute generalized external forces fq total force torque acting object demonstrated compute motion lagrange equations motion object generalized mass damping matrices model translational rotational degrees freedom gq generalized forces 
mass matrix derived directly object question unaffected fluid model 
damping matrix form damping coefficients adjusted proportional relative velocity node ni local fluid 
order handle collisions floating objects static obstacles apply techniques developed collision detection collision force computation 
floating objects examples small compared mesh size possible simplifying assumption effect water flow 
act large marker particles moving rotating local forces 
objects influence motion fluid sophisticated techniques need employed 
summary navier stokes algorithm complete algorithm solving navier stokes equations tracking fluid surface summarized steps 
define obstacles starting fluid configuration place dynamic objects 

set initial pressure velocity conditions 

determine cell contents depending method track surface 

set boundary conditions free surface obstacle cells 

compute full cells 

perform pressure iteration full cells 

recalculate boundary velocities surface cells 

update position surface objects 

go step 
control important part animation process specifying objects scene move 
doing fluid surface difficult governing equations strongly coupled non linear 
large scale behavior system controlled altering various constants gravity viscosity difficult specify motion solve backwards find correct boundary conditions cause 
places algorithm coercion applied fluid 
easily exploited yield effective methods controlling fluid surface 
inflow outflow velocities time dependent function determine rate fluid pumped scene rate allowed exit producing variety effects 
example broken dam initially generates high input rate tails exponentially water level drops 
animating river scene varying inflow outflow rate simulate different classes speed turbulence water flow requiring changes environment model 
surface pressure history natural way specify surface behavior model nature 
wind blows liquid surface small low pressure vortices induce local change surface elevation 
turn surface changing pressure 
gravity provides restoration force initial perturbation results oscillation 
time process amplified wind driven wave born 
similar effect achieved shorter time applying forcing pressure history free surface navier stokes computation 
may constant time dependent depend height surface 
example dimensions interesting waves developed forcing function cz pressure surface cell mean pressure constants derived desired wave motion 
wavelength oscillation mean depth fluid gd wave amplitude gravity 
function set applied pressure boundary condition free surface see section 
examples deriving constants applied pressure function 
starting configuration marble soup animation 
number examples show different aspects system described 
running times silicon graphics 
vary linearly size problem factors total number full cells speed flow larger contribution amount cpu time required 
example dimensional animation water jet concrete tank 
water motion calculated grid cells marker particles delineate fluid position 
input rates specified water inflow particle inflow 
jet velocity ms new particles introduced inflow boundary rate particles second 
important note overhead associated marker particles cost moving displaying 
relatively sparse distribution particles case clearly show model account colliding surfaces waves arbitrary 
frame animation shows jet turned vortices tank slow surface starts settle 
animation ran iterations just sixteen minutes 
grid size animate drop 
figures show starting configuration drop initial impact surface 
waves caused collision travel sides pool reflected back give characteristic fluid rebound splash 
particle density set cell 
animation ran iterations twelve minutes slightly slower water calculation environment 
jet example average number full cells iteration higher 
scene geometry rotationally symmetric computationally cheap dimensional calculations linked chains markers 
resulting profiles define surface revolution 
method physically accurate way generating dimensional motion give simple effects graphics applications 
shows frames animation rigid marble dropping bowl thick soup 
actual calculation performed dimensions setting axis resolution 
curved side bowl approximated series steps drop liquid aligned axis see represent marble 
drop initial velocity ms viscosity soup set relatively high 
chains particles represent free surfaces scene drop soup 
calculation run iterations resolution twelve minutes 
scene rendered directly positions markers 
chain define profile surface revolution smoothed series bicubic splines 
marble objects added scene rendered photorealistic renderman 
liquid surface colored straightforward environment map account law calculate fraction light reflected camera transmitted bottom bowl 
soup example clearly shows advantages model 
liquid drop calculation size marble object impact mean surface level risen correctly 
coupling pressure velocity develops non linear oscillation continues long wave due collision 
previous computer graphics fluid models accounted surface wave accompanying pressure wave responsible final motion 
full example animation titled 
mesh finely resolve effect large ocean waves crashing shallow 
submerged rocks irregular sea bottom focus waves center causing number interesting features water surface 
wave steeper water depth decreases eddies pressure waves appear left initial obstacle 
setting scene straightforward proceeded stages 
voxel editor define initial distribution rocks water 
plane cells opposite designated inflow cells inflow velocity defined 
cos desired wave amplitude desired wave frequency 
calculation run 
seconds inflow cells changed outflow water allowed leave system natural rate 
approach resulted full waves allowing added water volume flow back scene waves reflected 
animation took half hours complete ran iterations 
renderman render example 
spline meshes generated surface height field distribution boundary cells 
water surface rendered glass object small disturbances generated long wave model suggested 
detail rocks provided displacement map suitable noise function spline surface 
second example shown 
pressure wave caused opening gate forced channel 
wave travels submerged pyramid reflected degrees crashes semi submerged rock 
importance calculating pressure velocity volume clear pictures 
shows trailing wave builds submerged obstacle water flows 
trailing wave survives original wave crashes semi submerged obstacle flows system 
mean water level risen inflow gate 
example calculated grid took hour compute ran iterations 
speed standard silicon graphics hardware routines rendering case 
frames show screen shots animation involving objects 
water flows closed container carrying soda cans 
flow turned cans gather far corner container walls example set non slip tangential fluid velocity zero 
simulates effect objects tend gather parts flow 
water motion precomputed minutes grid 
soda cans added interactive editor takes precomputed velocity pressure field calculates forces object mesh 
way different shapes sizes object experimented having re fluid calculation 
comprehensive method animating liquid phenomena 
direct simulation technique solve navier stokes equations dimensions yielding range behavior unavailable previous computer graphics fluids models 
method come computational cost volumetric techniques scales proportional fourth power spatial resolution 
careful discretization environment expensive part computation low resolution 
detail generation achieved directly calculating position height field representing fluid surface tracking changing connectivity surface marker particles local fluid velocity 
model allows novel control techniques generate variety interesting effects suitable front inspiring water rendering algorithms available 
chen lobo interactive rate simulation fluids moving obstacles navier stokes equations graphical models image processing march pp 

cook torrance reflectance model computer graphics acm transactions graphics pp 

fletcher computational techniques fluid dynamics springer verlag sydney 
fournier reeves simple model ocean waves proceedings sig graph computer graphics pp 

goss real time particle system display ship wakes ieee computer graphics applications pp 

harlow welch numerical calculation time dependent viscous incompressible flow phys 
fluids pp 

kass miller rapid stable fluid dynamics computer graphics proceedings siggraph computer graphics pp 

max vectorized procedural models natural terrain waves islands sunset proceedings siggraph computer graphics pp 

metaxas terzopoulos dynamic deformation solid primitives constraints proceedings siggraph computer graphics pp 

miller pearce globular dynamics connected particle system animating viscous fluids computers graphics pp 

nichols calculating dimensional free surface flows vicinity submerged exposed structures comp 
phys pp 

method displaying optical effects water accumulation buffer proceedings siggraph july pp 

modeling waves surf proceedings siggraph computer graphics pp 

long wave models computer graphics image processing february pp 

ts barsky modeling rendering waves wave tracing beta splines reflective refractive texture mapping acm transactions graphics pp 

renderman companion addison wesley new york 
watt light water interaction backward beam tracing proceedings sig graph computer graphics pp 

marble dropping bowl thick soup 
initial collision 
oscillation due coupling pressure velocity 

ocean waves crash shallow 
pressure velocity effects water volume manifest surface 
pressure wave travels submerged obstacle reflected degrees crashes semi submerged rock 
dynamic objects 
soda cans carried incoming water colliding obstacles getting caught local eddies 

