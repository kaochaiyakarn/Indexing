finding counting length cycles noga alon raphael yuster uri zwick july assortment methods finding counting simple cycles length directed undirected graphs 
bounds obtained depend solely number edges graph question number vertices 
bounds obtained improve various previously known results 
problem deciding graph contains simple cycle length natural easily stated algorithmic graph problems 
cycle length part input problem clearly np complete includes particular hamiltonian cycle problem 
fixed problem solved time monien log exponent matrix multiplication 
main contribution collection new bounds complexity finding simple cycles length exactly fixed integer directed undirected graph 
bounds form form degeneracy graph see 
bounds improve previously known bounds graph question relatively sparse relatively degenerate 
ck stand simple cycle length considering directed graphs ck assumed directed 
show ck directed undirected graph exists time time odd 
finding triangles get slightly better bound exponent matrix multiplication 
cycles undirected graphs faster 
undirected graph exists time 
exists time 
particular find undirected time undirected time 
supported part basic research foundation israel academy sciences humanities 
school mathematical sciences raymond beverly faculty exact sciences tel aviv university tel aviv israel 
mail addresses noga zwick math tau ac il cycle complexity cycle complexity table finding small cycles directed graphs new results cycle complexity cycle complexity table finding small cycles undirected graphs new results degeneracy undirected graph smallest number exists acyclic orientation degrees degeneracy graph linearly related graph minimal number forests needed cover edges degeneracy directed graph defined degeneracy undirected version degeneracy graph important parameter graph appears combinatorial results 
easy see graph graphs relatively low degeneracy improve previously stated results 
directed undirected graph contains time 
exists time 
similar results obtained finding particular time time 
results mentioned summarized tables 
planar graph vertex degree degeneracy planar graph 
consequence bounds get particular planar graphs time 
fact holds planar graphs non trivial minor closed family graphs 
contribution algorithm counting number ck graph 
preliminary version appeared 
comparison previous works monien obtained fixed algorithm finding ck directed undirected graph 
previous showed color coding method ck fixed exists expected time log worst case time exponent matrix multiplication 
new algorithm better algorithms input graph sufficiently sparse 
interesting note monien bound superseded algorithm graph dense algorithm graph sparse 
bounds including bound involves degeneracy beats appropriate family graphs 
previous shown cycles length undirected graphs faster 
undirected graph contains ck ck time 
bound bound better graph sparse 
itai rodeh showed triangle graph contains time 
improve second result show done directed undirected graphs time 
chiba showed triangles quadrilaterals graphs contain time 
graph extends result itai rodeh 
extend result chiba show time 
show time 
gives particular algorithm finding 
results apply directed undirected graphs 
itai rodeh papadimitriou yannakakis showed planar graphs time 
chiba showed planar graphs time 
richards showed planar graphs log time 
improve result richards show planar graphs time 
previous showed color coding ck planar graph exists expected time log worst case time 
fact number triangles graph counted time trivial 
showed color coding ck exists expected time log worst case time 
show number ck graph counted time 
counting method yields particular way finding ck worst case time 
sundaram skiena fixed subgraph isomorphism algorithms 
results improve results 
eppstein shown fixed subgraph isomorphism problem planar graphs fixed graph planar graph find subgraph isomorphic solved fixed time 
finding cycles sparse graphs monien obtained algorithm representative collections 
collections algorithms 
sequel set set size definition collection sets 
sub collection representative set exists set exists set property 
follows combinatorial lemma bollob collection sets matter large representative sub collection size monien describes pq pi time algorithm finding representative sub collection size pi relying monien result obtain lemma lemma collection sets collection sets 
consider fixed 
time find sets decide sets exist 
proof monien algorithm find representative sub collection size pi representative sub collection size qi takes time constants 
easy see exist exist 
see note definition representatives exist set exist set required 
finding representative collections check contain disjoint sets 
easily done constant time constants 
need lemma follows immediately monien 
lemma directed undirected graph 
ck passes exists time 
able improved algorithm 
theorem deciding directed undirected graph contains simple cycles length exactly length exactly finding cycles done time 
proof describe time algorithm finding directed graph 
details cases similar 
vertex degree said high degree 
graph contains high degree vertices 
check monien algorithm lemma high degree vertices lies simple cycle length 
vertex costs operations total cost 
vertices lie cycle length done 
remove high degree vertices edges adjacent obtain subgraph contains 
maximum degree simple directed paths length find simple paths time 
divide paths groups endpoints 
done radix sort time space 
get list pairs vertices connected simple directed paths length exactly pair get collection fu sets 
set fu corresponds intermediate vertices appear simple directed paths length pair appears list check exist directed paths length meet endpoints 
paths exist exist fu fv 
checked shown lemma fu fv time 
sum sizes collections total complexity 
completes proof 
case triangles get better result fast matrix multiplication 
theorem deciding directed undirected graph contains triangle finding done time 
proof vertex said high degree degree low degree 
consider directed paths length intermediate vertex low degree 
paths time 
path check endpoints connected edge appropriate direction 
triangle way triangle composed high degree vertices 
high degree vertices check exists triangle matrix multiplication time 
total complexity algorithm 
completes proof 
able utilize matrix multiplication improve result theorem 
constitutes interesting open problem 
finding cycles graphs low degeneracy undirected graph degenerate see bollob exists acyclic orientation dout smallest degenerate called degeneracy max min degree denoted 
easily seen see maximum minimum degrees taken subgraphs degeneracy graph linearly related graph minimal number forests needed cover edges degeneracy directed graph defined degeneracy undirected version easy see degeneracy planar graph 
clearly degenerate 
simple lemma proof omitted part folklore see 
lemma connected undirected graph 
acyclic orientation dout time 
main result section theorem theorem directed undirected graph 
deciding contains simple cycle length exactly finding cycle done time 
ii deciding contains simple cycles length exactly length exactly finding cycles done time 
iii deciding contains simple cycle length exactly finding cycle done time 
proof show find directed graph exists time 
proofs claims easier 
algorithm theorem complexity 
assume 
vertex said high degree degree low degree 
proof theorem check time high degree vertices lies 
lies remove high degree vertices edges adjacent obtain graph maximal degree 
degeneracy graph decrease vertices edges deleted upper bound degeneracy graph obtained 
suppose graph maximal degree degeneracy 
find find directed simple paths length check algorithm described proof lemma exist path length path length meet endpoints 
time get oriented version degree vertex 
orientations edges may completely different 
number paths necessarily directed length 
see consider orientations edges path direction edges counter directed 
number paths length exactly edges counter directed id binomial coefficient stands possible choices position counter directed edges path 
similarly number paths length kd 
lower number paths length consider utilizing fact broken paths length different ways 
particular directed consider orientations edges odd acyclic contain consecutive edges orientation third opposite orientation 
consider paths start backward oriented edges paths start backward oriented edge 
orientations referred number paths length edges backward oriented 
see note path composed directed path length attached arbitrarily oriented path 
length 
number paths length shown earlier number directed path length specified starting point similarly paths start backward oriented edge 
clear discussion required paths total number time 
paths properly directed thrown away 
properly directed paths sorted radix sort endpoints 
lemma check exist directed path directed path close directed simple cycle 
operations performed time 
recalling get complexity algorithm completes proof theorem 
immediate corollary get corollary directed undirected planar graph contains pentagon pentagon worst case time 
combining ideas section algorithm theorem color coding method obtain result 
theorem directed undirected graph 
exists expected time log log worst case time 
proof show find undirected graph exists expected time log worst case time 
proof directed case similar 
time get oriented version degree vertex 
suppose contains 
possible non isomorphic orientations shown 
refer orientations 

algorithm checks contains ai finds 
show find exists 
cases similar fact easier 
color vertices randomly colors vertex receives number numbers equally 
denote color vertex specific copy say colored vertices consecutively colored possible orientations color assigned vertices having outgoing edges 
consecutively colored mean neighbor 
probability colored show detect colored copy deterministically exists 
create new undirected graph defined follows clearly create examine edge odd 
suppose 
create edges vertices 
vertices 
constructed time clearly exists undirected triangle iff exists colored detect triangle ed time algorithm theorem 
triangle repeat process new random coloring 
contains expected number attempts 
shown detect exists expected time 
shown coloring scheme derandomized price log factor 
finding cycles sparse undirected graphs obtain results section rely combinatorial lemma bondy simonovits 
lemma undirected graph 
contains integer 
combining algorithm described proof theorem algorithm obtain theorem 
theorem undirected graph 
exists time 
ii exists time 
proof prove second claim 
proof claim similar 
definition degeneracy subgraph minimal degree subgraph easily time see 
clearly dv lemma get contains time algorithm 
hand exists time algorithm theorem 
easy check complexity corollary undirected graph 
equality holding 
cases required 
quadrilateral exists time 
ii hexagon exists time 
counting small cycles simple undirected graph ag adjacency matrix assume simplicity 

denote ij ak ij elements th power trace tr ak ak sum entries diagonal ak gives number closed walks length compute number non simple closed walks length easily obtain number simple closed paths length number just times number ck describing way counting number non simple closed walks length graph time need definitions definition simple graphs 
mapping homomorphism 
say homomorphic image 
definition graph vh eh said cyclic homomorphic image cycle ck 
number different homomorphisms ck denoted ck 
clearly cyclic ck 
easy check example cyclic 
difficult check generally ck ck 
cyclic graph 
cyclic graphs figures 
cyclic graphs 
cyclic graphs 
cyclic graphs 
cyclic graphs 
ng denote number subgraphs isomorphic clearly total number closed walks length tr ck ng 
ck connected edges 
tree vertices edge leading leaf image edges ck 
vh fact vh ck 
obtain undirected graph ng ck tr ak vh ck ng 
similar formula obtained directed graphs 
show compute ng cyclic graphs time 
obtain theorem 
theorem number ck undirected directed graph time 
proof consider undirected case 
directed case similar fact slightly simpler cyclic graphs 
clearly traces tr computed time fast matrix multiplication 
remains show find ng cyclic graphs cycles 
time 
cyclic graphs shown figures simple cycles denoted 
ordered number edges contain 
list shows obtain ng hi ng ck 
cases formulae values ij computed time 
di ii denote degree vertex 


ng tr 
ng ng di ij ng tr ng ng 
ng di dj ng 







ng di ng ii di 
note ii twice number triangles pass vertex ng tr ng ng 
ng ij note ij number common neighbors number paths length ng ii ng di 
ij di dj ng 
note subtract ng avoid case degree vertices vertex 
note ng di ij ij exactly number quadrilaterals participates 
ng ii ij ng ng ng 
note ii ij simply number triangles times number paths length count triangle path disjoint subtract appropriate occurrences 
ng ii ng 

shown compute ng cyclic graphs equation compute ng 




ng ij ij ng ng ng 
count number triangles multiply triangle number walks length walks need simple may intersect triangle may counting subtract appropriate values 
ng ij ng di bi ng bi number passing expression bi bi ii ii ii di ij dj jj ij 
ng ii ij ng ng ng 
slightly effort shown time count number ck pass vertex fact done preceding proof 
graph contains ck find time vertex ck passes 
locate ck graph additional time monien method lemma 
similar formulae obtained course number larger cycles 
compute number compute number graph cyclic 
know time 
easy count number graph time vertex count number triangles neighbors sum numbers divide 
counting number graph fact deciding graph contains time interesting open problem 
counting number larger cycles method count number larger cliques graph 
ne se poljak give graph contains kl 
easy check method time algorithm deciding count number cliques contained graph 
combining method ne se poljak ideas section get result 
theorem number kl undirected graph counted time 
idea similar theorem get algorithm deciding graph contains 
alon yuster zwick 
color coding new method finding simple paths cycles small subgraphs large graphs 
proceedings th annual acm symposium theory computing montr canada pages 
journal version appear journal acm alon yuster zwick 
finding counting length cycles 
proceedings nd european symposium algorithms utrecht netherlands pages 
bollob generalized graphs 
acta math 
acad 
sci 

bollob extremal graph theory 
academic press 
bondy simonovits 
cycles length graphs 
journal combinatorial theory series 
chiba 
subgraph listing algorithms 
siam journal computing 
eppstein 
subgraph isomorphism planar graphs related problems 
proceedings th annual acm siam symposium discrete algorithms san francisco california pages 
itai rodeh 
finding minimum circuit graph 
siam journal computing 
beck 
smallest ordering clustering graph coloring algorithms 
journal acm 
monien 
find long paths efficiently 
annals discrete mathematics 
ne set ril poljak 
complexity subgraph problem 
mathematicae 
papadimitriou yannakakis 
clique problem planar graphs 
information processing letters 
richards 
finding short cycles planar graph separators 
journal algorithms 
sundaram skiena 
recognizing small subgraphs 
networks 
appear 
yuster zwick 
finding cycles faster 
proceedings st international colloquium automata languages programming jerusalem israel lecture notes computer science vol 
pages 
springer 

