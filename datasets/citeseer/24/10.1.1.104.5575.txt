sharing decryption context voting lotteries pierre alain guillaume jacques stern cole normale sup rieure laboratoire informatique rue ulm paris cedex pierre alain guillaume jacques stern ens fr 
public key cryptosystems additional homomorphic properties proposed far 
allow perform computation encrypted data knowledge secret information 
applications ability perform decryption knowledge secret key gives huge power 
classical way reduce trust secret owner consequently increase security share secret entities way cooperation necessary decrypt 
propose distributed version paillier cryptosystem eurocrypt 
shared scheme example electronic voting scheme lottery random number related winning ticket jointly chosen participants 
public key encryption central primitive cryptology 
enables encrypt messages public keys way owner corresponding secret key perform decryption 
famous scheme rsa widely cryptosystems developed provide additional properties 
interest family schemes simple encryption mechanism essentially performs exponentiation message encrypt 
security relies intractability computing discrete logarithms knowledge trapdoor secret key allows efficiently decrypt ciphertexts 
call schemes trapdoor discrete logarithm schemes 
protocols interesting homomorphic property encryption sum messages equal product encryption 
applications require computing encrypted numbers voting schemes lottery protocols applications ability perform decryption knowledge secret key gives huge power 
classical way reduce trust secret owner consequently increase security availability share secret entities way cooperation necessary decrypt 
threshold decryption scheme protocol allows subset entities servers decrypt ciphertext disallows decryption servers participate protocol 
threshold schemes may servers corrupted play nominal behavior 
instance adversary play different secrets 
decryption correct presence attacker plays maliciously corrupted servers say protocol robust 
results transform homomorphic cryptosystems threshold version decryption algorithm shared servers 
order decrypt ciphertext server computes decryption share public combining algorithm outputs plaintext 
homomorphic cryptosystems goldwasser micali benaloh naccache stern okamoto paillier cryptosystems need distribute secret value related factorization rsa modulus 
threshold techniques developed shoup allows distribute rsa signature extend current context 
build firm ground develop new security model order analyze semantic security schemes secure chosen plaintext attack cpa context threshold cpa security 
previous definitions threshold cryptosystems secure chosen ciphertext attack cca formalized natural extension standard definitions cca security 
propose adequate definitions assert cpa security threshold cryptosystems 
homomorphic cryptosystems electronic voting schemes multiple authorities decryption process distributed 
previously proposed schemes variant elgamal encryption scheme encrypting computes 
unfortunately scheme considered trapdoor discrete logarithm scheme trapdoor exists determine mod anyway voting schemes cryptosystems manage small numbers number voters restricted voter votes 
consequently tally large exhaustive search allows give result 
circumstances useful decrypt larger numbers 
applications modified elgamal scheme longer exhaustive search efficient methods pollard rho algorithm recover plaintext 
solution threshold trapdoor discrete logarithm scheme 
describe applications decryption large numbers necessary applications may 
applications applications threshold decryption scheme efficiently recover large plaintext homomorphic encryption schemes 
show primitive build multiple voting scheme lottery scheme 
multiple election schemes 
threshold trapdoor discrete logarithm cryptosystems distribute electronic election multiple authorities proposed 
threshold trapdoor discrete logarithm scheme determine tally directly trapdoor 
systems require exhaustive search point decryption phase able solve situations 
example want multiple election mechanism decryption technique number voters voters vote candidate second third 
easy show bits give result candidate bits give result second candidate case number candidate high exhaustive search longer 
threshold decryption scheme able manage candidates size rsa modulus 
lottery scheme 
publicly verifiable decryption large number useful lottery scheme 
consider lottery compute random number order indicate winning ticket range 
number players 
typical lottery winners chosen trusted process purchased ticket equal chance chosen 
process usually monitored outsider auditor ensures fairness protocol 
process random repeated ticket trust process 
previous schemes developed goldschlag stubblebine delaying functions prevent computation result lottery anybody purchase phase 
protocols players access random inputs delaying function assumptions functions ensures compute output certain time 
framework delaying function 
security lottery scheme standard assumptions 
previous schemes lottery uses random numbers chosen players order output number randomness granted provided player chooses number random 
random number encrypted players homomorphic cryptosystem lottery 
lottery learn random inputs 
share decryption process servers lottery compute final result servers play maliciously try recover result purchase phase 
homomorphic property allows compute efficiently encryption sum random numbers modulo quorum servers collaborate obtain mod mod mod corresponds sequence number generated lottery player sends random value 
winning ticket lottery 
furthermore threshold decryption process publicly verifiable servers operations verified players 
notations definitions notation integer zn denote set integers modulo zn denote multiplicative group invertible elements zn denote euler function cardinality zn denote lambda function defined largest order elements zn known prime factorization odd integer qi fi qi fi qi qi fi qi prime number said strong prime prime 
outline section give formal definition threshold cryptosystem 
propose definition semantic security adapted schemes 
sections describe useful tools shoup threshold rsa signature scheme 
section distribute homomorphic encryption scheme paillier prove security assumption original version 
definition security threshold cryptosystems formal definition threshold cryptosystem consists components key generation algorithm takes input security parameter number decryption servers threshold parameter random string outputs public key list sk 
sk private keys list 
verification keys 
encryption algorithm takes input public key random string cleartext outputs ciphertext share decryption algorithm takes input public key index private key ski ciphertext outputs decryption share ci proof validity 
combining algorithm takes input public key ciphertext list 
decryption shares list 
verification keys list proof 
proof validity proofs outputs cleartext fails 
players scenario game includes players dealer combiner set servers pi adversary users 
considered probabilistic polynomial time turing machines 
consider scenario initialization phase dealer uses key generation algorithm create public private verification keys 
public key verification keys ki publicized server receives share ski secret key sk 
encrypt message user run encryption algorithm public key decrypt ciphertext combiner forwards servers 
secret keys ski verification keys ki server runs decryption algorithm outputs partial decryption ci proof validity partial decryption 
combiner uses combining algorithm recover cleartext partial decryptions valid 
security requirements consider adversary able corrupt servers 
corruption passive attacker servers 
consist making servers fail 
active case adversary completely controls behavior corrupted servers 
consider non adaptive adversaries choose servers want corrupt key generation 
threshold cryptosystem said robust combiner able correctly decrypt ciphertext presence adversary actively corrupts servers 
messages sent clear server combiner 
combining algorithm takes partial decryption recovers cleartext public executed server see decryption parts 
assumption communication channel existence broadcast channel participants 
threshold semantic security 
encryption schemes study semantically secure 
informally speaking consider attacker issues messages randomly choose messages encrypt send ciphertext attacker 
answers message encrypted 
say encryption scheme semantically secure exists polynomial time attacker able guess messages encrypted non negligible advantage 
extend definition semantic security threshold cryptosystems setting attacker actively non adaptively corrupts servers learns public parameters regular cryptosystem secret keys corrupted servers public verification keys decryption shares proof validity shares 
consider game attacker chooses corrupt servers 
learns secret information actively controls behavior 
key generation algorithm run public keys publicized server receives secret keys attacker learns secrets corrupted players 
attacker chooses message partial decryption oracle gives valid decryption shares encryption proofs validity 
step repeated times attacker wishes 
attacker issues messages sends encryption oracle randomly chooses bit sends back encryption mb attacker 
attacker repeats step asking decryption shares encryptions chosen messages 
attacker outputs bit threshold encryption scheme said semantically secure active non adaptive adversaries polynomial time attacker probability negligibly greater 
notice definition semantic security reduces original consider server knows secret key adversary corrupt server 
case steps just consists encrypting chosen plaintexts done help partial decryption oracle 
previous game may confused chosen ciphertext attack security described gennaro shoup 
attacker ask partial decryptions ciphertexts knows corresponding plaintext 
goal steps prove partial decryptions give information private keys non corrupted servers 
cryptosystems study chosen ciphertext attacks non distributed case expect extend property threshold versions 
security proofs 
aim provide robust threshold version semantically secure cryptosystems 
security proofs reduction prove adversary break semantic security threshold cryptosystem able break semantic security initial cryptosystem 
show build adversary attack semantic security traditional cryptosystem adversary break security threshold cryptosystem 
basic idea order attacker threshold version turn attacker traditional cryptosystem simulate extra information provided traditional attack 
precisely able simulate public verification keys secret keys corrupted servers step decryption shares proof validity steps way adversary distinguish real distribution simulated feed adversary simulated data order obtain attacker semantic security initial non distributed scheme 
consequently security proofs consist showing simulate data 
preliminary tools shamir threshold secret sharing scheme shamir proposed protocol share secret element field servers way group servers efficiently recover coalition servers able gain information secret 
scheme lagrange interpolation formula allows compute polynomial degree values xi known distinct elements 
xt xi xj xj xi order share secret randomly chosen polynomial degree chosen server receives point xi xi xi 
lagrange formula shows knowledge points allows recover polynomial consequently prove knowledge points gives information proof equality discrete logarithms cyclic group unknown order cyclic group unknown order generator element proof equality discrete logarithm element basis element basis designed chaum pedersen protocol way order known 
possible variant schnorr proof knowledge discrete log proposed 
describe non interactive version proof 
common discrete logarithm 
randomly chosen element 
compute hash value hash function outputs values range 
compute proof equality discrete logs pair checked equation 
correctness scheme obvious 
furthermore prove larger protocol statistically gives information secret 
focus soundness remind security proof random oracle model 
proof valid 
cyclic group generated integers definition obtain equations se mod ay mod multiplying subtracting second ca sa mod random oracle model random value independent inputs hash function necessarily sa mod consequently discrete logarithm respective basis paillier cryptosystem various cryptosystems randomized encryption schemes encrypt message raising basis power proposed far 
security intractability computing discrete logarithm basis secret data secret key easy trapdoor 
call cryptosystems trapdoor discrete logarithm schemes 
important consequence encryption technique schemes homomorphic properties informally stated follows paillier closely related cryptosystems 
remind 
cryptosystem properties lambda function recall main properties mod mod key generation 
rsa modulus pq prime integers 
integer order modulo public key secret key sk 
encryption 
encrypt message zn randomly choose zn compute ciphertext mod decryption 
decrypt compute mod mod mod function takes input elements set sn mod computes integers mod mod equal raised power th roots unity 
furthermore roots form mod consequently function allows compute values mod mod mod mod security 
conjectured called composite residuosity class problem exactly consists inverting cryptosystem intractable 
semantic security difficulty distinguish th residues modulo refer details 
threshold version rsa cryptosystem section recall previous works threshold rsa describe shoup threshold rsa signature scheme viewed threshold rsa decryption algorithm 
scheme starting point design efficient threshold trapdoor discrete log cryptosystem proposed section 
desmedt frankel pioneers threshold cryptography proposed threshold rsa signature protocol shamir polynomial secret sharing scheme ring 
order hide inverses desmedt frankel followed de santis gennaro extend ring integers modulo algebraic structure module inverses disclosed safely 
frankel followed rabin avoid strong primes factors shoup solved problem simpler elegant scheme 
remind protocol key generation algorithm 
dealer chooses strong primes rsa modulus pq public exponent prime number greater 
dealer computes secret key zm de mod shared shamir secret sharing scheme 
fi randomly chosen zm 
fix secret key ski di mod dealer randomly chooses cyclic subgroup squares zn computes verification keys 
ki di mod encryption algorithm 
order encrypt message user compute mod share decryption algorithm 
order obtain share decryption ciphertext server computes ci di mod proof validity convince combiner anybody discrete logarithm base discrete log ki base secret key ski di 
non interactive proof proposed section 
combining algorithm 
decryption shares valid proofs correctness algorithm fails 
set valid shares 
define variant lagrange coefficients factor order obtain integers avoid computation inverses modulo secret value lagrange interpolation formula implies jf mod fact equal secret key partially decrypt jf mod public exponent prime number greater relatively prime extended euclidean algorithm provides integers 
allows obtain plaintext mod threshold version paillier cryptosystem description recall 
number servers 
key generation algorithm 
choose integer product strong primes gcd 
set element randomly chosen zn randomly choose zn zn set mod secret key sk shared shamir scheme randomly choose values ai 
set aix share si th server pi mod nm 
public key consists value am mod square generates cyclic group squares verification keys ki obtained formula si mod encryption algorithm 
encrypt message randomly pick zn compute mod share decryption algorithm 
th player pi computes decryption share ci si mod secret share si 
proof correct decryption assures mod mod raised power si order obtain vi see protocol section 
combining algorithm 
decryption shares valid proofs correctness algorithm fails 
set valid shares compute plaintext mod mod notes correctness scheme 
notice choose gcd 
condition ensures function defined mod bijection zn zn order order zn furthermore see subgroup squares cyclic order nm 
number generators group nm probability randomly chosen square generator probability overwhelming 
verification keys ki may seen witnesses knowledge discrete log ki base mod proofs validity partial decryptions 
consider subset correct shares computation done lagrange interpolation formula jf mod nm sj encryption message mod mam mam mod consequently mod part public key obtain message proof security am mod modulus gcd 
denote cr problem deciding th residuosity distinguishing th residues non th residues 
semantic security paillier scheme modulus equivalent cr see details 
refer called decisional composite residuosity assumption dcra assumes cr intractable 
prove threshold version paillier scheme secure definition threshold semantic security proposed section 
basically proof shows attacker able break threshold semantic security break semantic security original cryptosystem 
precisely said section simulate information attacker may obtained steps 
step simulate parameters threshold cryptosystem 
steps simulate decryption parts non corrupted servers correctness proofs 
steps represent steps standard definition semantic security non threshold cryptosystems 
theorem 
decisional composite residuosity assumption random oracle model threshold version paillier cryptosystem semantically secure active non adaptive adversaries 
proof 
assume existence adversary able break semantic security threshold scheme 
describe attacker uses order break semantic security original paillier scheme 
phase called find phase attacker obtains public key chooses messages sent encryption oracle randomly chooses bit returns encryption mb 
second phase called guess phase attacker tries guess message encrypted 
describe feed adversary threshold scheme order semantic attacker 
step game adversary chooses corrupt servers 
loss generality assume servers 
pt corrupted 
find phase attacker obtains public key regular paillier scheme 
randomly chooses zn zn zn sets mod picks random values 
st range 
randomly chosen element zn sets mod computes vi si mod 
tion keys vi sj mod 

attacker sends 

st step game step chooses message sends attacker 
computes mod valid encryption decryption shares corrupted players correctly computed si ci si mod 
shares obtained interpolation ci si mod attacker chooses random random sets 
returns 
proof 
proof 
step chooses outputs messages 
attacker outputs messages result find phase 
encryption oracle non threshold paillier scheme chooses random bit sends encryption mb attacker 
computes mod sends adversary step similar step 
step answers bit returned attacker guess phase 
prove data simulated attacker distinguished real ones consequently exists polynomial time adversary able break semantic security threshold scheme attacker able break semantic security original paillier scheme 
indistinguishability data received step 
firstly observe mod uniformly distributed set elements order multiple provided order multiple need perform modification choose power want generate subgroup squares modulo consequently randomized order obtain high probability basis large order 
example valid basis obviously lead correct notice uniformly distributed respectively zn set squares modulo furthermore generator overwhelming probability statistical distance uniform distribution subset generators order nm uniform distribution order nm 
attacker chooses secret keys 
st corrupted players si interval 
nm unknown pick si 

anyway statistical distance uniform distribution 
uniform distribution 
nm adversary distinguish real simulated corrupted secret keys 
dealer correctly distributes shares conditions hold set size size si mod mod mod simulation choose mod knowing just randomly choosing 
verification keys corrupted servers computed known secret keys si missing vi obtained lagrange interpolation formula 
course able find missing secret keys fact need 
distribution received key generation step indistinguishable real distribution 
indistinguishability data received steps 
steps encryption message computed mod shares corrupted players 
ct computed secret keys 
st ci si mod missing ci obtained interpolation vi 
ct th point mod compute secret knowledge equal proof simulation distribution produced attacker statistically close perfect remained section 
simulation previously appeared 
random oracle model attacker full control values returned hash function define value vi vy ci overwhelming probability attacker defined random oracle point adversary detect fraud 
proposed threshold distributed version paillier cryptosystem 
think scheme interesting trapdoor discrete logarithm cryptosystem efficiency large bandwidth 
order study security proposal defined semantic security threshold cryptosystems 
distribution trapdoor discrete logarithm cryptosystems remains open problem 

benaloh 
verifiable secret ballot elections 
phd thesis yale university 

camenisch 
group signature scheme improved efficiency 
asiacrypt lncs 
springer verlag 

chaum pedersen 
wallet databases observers 
crypto lncs pages 
springer verlag 

cohen fisher 
robust verifiable cryptographically secure election scheme 
symposium foundations computer science 
ieee 

cramer gennaro schoenmakers 
secure optimally efficient multi authority election scheme 
eurocrypt lncs pages 
springer verlag 

desmedt frankel 
parallel reliable threshold multisignature 
technical report department university wisconsin milwaukee april 
tr 

frankel ph 
mackenzie yung 
optimal resilience proactive public key cryptosystems 
proc 
th focs pages 
ieee 

gennaro jarecki krawczyk rabin 
robust efficient sharing rsa functions 
crypto lncs pages 
springer verlag 

gennaro shoup 
securing threshold cryptosystems chosen ciphertext attack 
eurocrypt lncs pages 
springer verlag 

goldschlag stubblebine 
publicly verifiable applications delaying functions 
financial crypto lncs pages 
springer verlag 

goldwasser micali 
probabilistic encryption 
journal computer system sciences 

naccache stern 
new public key cryptosystem higher residues 
proc 
th cccs 
acm press 

okamoto 
new public key cryptosystem secure factoring 
eurocrypt lncs pages 
springer verlag 

paillier 
public key cryptosystems composite degree residuosity classes 
eurocrypt lncs pages 
springer verlag 

stern 
security analysis practical fly authentication signature generation 
eurocrypt lncs pages 
springer verlag 

rabin 
simplified approach threshold proactive rsa 
crypto lncs pages 
springer verlag 

rivest shamir adleman 
method obtaining digital signatures public key cryptosystem 
communications acm 

de santis desmedt frankel yung 
share function securely 
proceedings th acm symposium theory computing pages 
acm 

schnorr 
efficient identification signatures smart cards 
crypto lncs pages 
springer verlag 

shamir 
share secret 
communications acm nov 

shoup 
practical threshold signatures 
technical report ibm 
ibm research report rz 

vanstone 
elliptic curve cryptosystem curves smooth order ring zn 
ieee transaction information theory 
